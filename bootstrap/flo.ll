; ModuleID = 'main.flo'
source_filename = "main.flo"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%string_vtable_ty.580130 = type { %string.580129* (%string.580129*, %string.580129*)*, void (%string.580129*, i8)*, %string.580129* (%string.580129*, i64)*, i1 (%string.580129*, %string.580129*)*, i64 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, i64, i64)*, i8 (%string.580129*, i64)*, i8* (%string.580129*)*, %string.580129* (%string.580129*, %string.580129*, %string.580129*)*, i8* (%string.580129*)* }
%string.580129 = type { %string_vtable_ty.580130*, i8*, i64, i64 }
%Range_vtable_ty.580132 = type { i1 (%Range.580131*, i64)* }
%Range.580131 = type { %Range_vtable_ty.580132*, i64, i64 }
%File_vtable_ty.580134 = type { %string.580129* (%File.580133*)*, void (%File.580133*)* }
%File.580133 = type { %File_vtable_ty.580134*, i64 }
%FloRange_vtable_ty.580136 = type {}
%FloError_vtable_ty.580138 = type {}
%"Array<FloError>_vtable_ty.580140" = type { void (%"Array<FloError>.580139"*)*, void (%"Array<FloError>.580139"*, i64, i64)*, void (%"Array<FloError>.580139"*, %FloError.580137*)*, void (%"Array<FloError>.580139"*, i64, %FloError.580137*)*, void (%"Array<FloError>.580139"*, %FloError.580137*)*, %FloError.580137* (%"Array<FloError>.580139"*, i64)*, i1 (%"Array<FloError>.580139"*, %"Array<FloError>.580139"*)*, i1 (%"Array<FloError>.580139"*, %FloError.580137*)*, i64 (%"Array<FloError>.580139"*, %FloError.580137*)*, %string.580129* (%"Array<FloError>.580139"*, %string.580129*)*, %string.580129* (%"Array<FloError>.580139"*)* }
%"Array<FloError>.580139" = type { %"Array<FloError>_vtable_ty.580140"*, %FloError.580137**, i64, i64 }
%FloError.580137 = type { %FloError_vtable_ty.580138*, i64, %string.580129*, %FloRange.580135* }
%FloRange.580135 = type { %FloRange_vtable_ty.580136*, i64, i64, i64, i64 }
%Token_vtable_ty.580142 = type {}
%IntToken_vtable_ty.580144 = type {}
%FloatToken_vtable_ty.580146 = type {}
%CharToken_vtable_ty.580148 = type {}
%"Array<Token>_vtable_ty.580153" = type { void (%"Array<Token>.580152"*)*, void (%"Array<Token>.580152"*, i64, i64)*, void (%"Array<Token>.580152"*, %Token.580141*)*, void (%"Array<Token>.580152"*, i64, %Token.580141*)*, void (%"Array<Token>.580152"*, %Token.580141*)*, %Token.580141* (%"Array<Token>.580152"*, i64)*, i1 (%"Array<Token>.580152"*, %"Array<Token>.580152"*)*, i1 (%"Array<Token>.580152"*, %Token.580141*)*, i64 (%"Array<Token>.580152"*, %Token.580141*)*, %string.580129* (%"Array<Token>.580152"*, %string.580129*)*, %string.580129* (%"Array<Token>.580152"*)* }
%"Array<Token>.580152" = type { %"Array<Token>_vtable_ty.580153"*, %Token.580141**, i64, i64 }
%Token.580141 = type { %Token_vtable_ty.580142*, i64, %FloRange.580135* }
%"Array<Array<Token>>_vtable_ty.580154" = type { void (%"Array<Array<Token>>.580151"*)*, void (%"Array<Array<Token>>.580151"*, i64, i64)*, void (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)*, void (%"Array<Array<Token>>.580151"*, i64, %"Array<Token>.580152"*)*, void (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)*, %"Array<Token>.580152"* (%"Array<Array<Token>>.580151"*, i64)*, i1 (%"Array<Array<Token>>.580151"*, %"Array<Array<Token>>.580151"*)*, i1 (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)*, i64 (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)*, %string.580129* (%"Array<Array<Token>>.580151"*, %string.580129*)*, %string.580129* (%"Array<Array<Token>>.580151"*)* }
%"Array<Array<Token>>.580151" = type { %"Array<Array<Token>>_vtable_ty.580154"*, %"Array<Token>.580152"**, i64, i64 }
%StrToken_vtable_ty.580150 = type {}
%IdentifierToken_vtable_ty.580156 = type {}
%Lexer_vtable_ty.580158 = type { i1 (%Lexer.580157*)*, i8 (%Lexer.580157*, i64)*, void (%Lexer.580157*)*, %FloRange.580135* (%Lexer.580157*, i64)*, %Token.580141* (%Lexer.580157*)*, i1 (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %IntToken.580143* (%Lexer.580157*, i64)*, %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %StrToken.580149* (%Lexer.580157*)*, %CharToken.580147* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)*, %"Array<Token>.580152"* (%Lexer.580157*, %string.580129*, %"Array<FloError>.580139"*)* }
%Lexer.580157 = type { %Lexer_vtable_ty.580158*, i8, %string.580129*, %"Array<FloError>.580139"*, i64, i64, i64 }
%IntToken.580143 = type { %IntToken_vtable_ty.580144*, i64, %FloRange.580135*, i64 }
%StrToken.580149 = type { %StrToken_vtable_ty.580150*, i64, %FloRange.580135*, %string.580129*, %"Array<Array<Token>>.580151"* }
%CharToken.580147 = type { %CharToken_vtable_ty.580148*, i64, %FloRange.580135*, i8 }
%Node_vtable_ty.580160 = type {}
%TypeNode_vtable_ty.580162 = type {}
%"Array<TypeNode>_vtable_ty.580166" = type { void (%"Array<TypeNode>.580165"*)*, void (%"Array<TypeNode>.580165"*, i64, i64)*, void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)*, void (%"Array<TypeNode>.580165"*, i64, %TypeNode.580161*)*, void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)*, %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)*, i1 (%"Array<TypeNode>.580165"*, %"Array<TypeNode>.580165"*)*, i1 (%"Array<TypeNode>.580165"*, %TypeNode.580161*)*, i64 (%"Array<TypeNode>.580165"*, %TypeNode.580161*)*, %string.580129* (%"Array<TypeNode>.580165"*, %string.580129*)*, %string.580129* (%"Array<TypeNode>.580165"*)* }
%"Array<TypeNode>.580165" = type { %"Array<TypeNode>_vtable_ty.580166"*, %TypeNode.580161**, i64, i64 }
%TypeNode.580161 = type { %TypeNode_vtable_ty.580162*, %FloRange.580135*, i64 }
%RecordTypeNode_vtable_ty.580164 = type {}
%FunctionTypeNode_vtable_ty.580168 = type {}
%PointerTypeNode_vtable_ty.580170 = type {}
%StatementNode_vtable_ty.580172 = type {}
%"Array<StatementNode>_vtable_ty.580176" = type { void (%"Array<StatementNode>.580175"*)*, void (%"Array<StatementNode>.580175"*, i64, i64)*, void (%"Array<StatementNode>.580175"*, %StatementNode.580171*)*, void (%"Array<StatementNode>.580175"*, i64, %StatementNode.580171*)*, void (%"Array<StatementNode>.580175"*, %StatementNode.580171*)*, %StatementNode.580171* (%"Array<StatementNode>.580175"*, i64)*, i1 (%"Array<StatementNode>.580175"*, %"Array<StatementNode>.580175"*)*, i1 (%"Array<StatementNode>.580175"*, %StatementNode.580171*)*, i64 (%"Array<StatementNode>.580175"*, %StatementNode.580171*)*, %string.580129* (%"Array<StatementNode>.580175"*, %string.580129*)*, %string.580129* (%"Array<StatementNode>.580175"*)* }
%"Array<StatementNode>.580175" = type { %"Array<StatementNode>_vtable_ty.580176"*, %StatementNode.580171**, i64, i64 }
%StatementNode.580171 = type { %StatementNode_vtable_ty.580172*, %FloRange.580135*, i64 }
%BlockNode_vtable_ty.580174 = type {}
%ExpressionNode_vtable_ty.580178 = type {}
%ArrayTypeNode_vtable_ty.580180 = type {}
%IntExpressionNode_vtable_ty.580182 = type {}
%FloatExpressionNode_vtable_ty.580184 = type {}
%CharExpressionNode_vtable_ty.580186 = type {}
%"Array<ExpressionNode>_vtable_ty.580190" = type { void (%"Array<ExpressionNode>.580189"*)*, void (%"Array<ExpressionNode>.580189"*, i64, i64)*, void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)*, void (%"Array<ExpressionNode>.580189"*, i64, %ExpressionNode.580177*)*, void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)*, %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)*, i1 (%"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"*)*, i1 (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)*, i64 (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)*, %string.580129* (%"Array<ExpressionNode>.580189"*, %string.580129*)*, %string.580129* (%"Array<ExpressionNode>.580189"*)* }
%"Array<ExpressionNode>.580189" = type { %"Array<ExpressionNode>_vtable_ty.580190"*, %ExpressionNode.580177**, i64, i64 }
%ExpressionNode.580177 = type { %ExpressionNode_vtable_ty.580178*, %FloRange.580135*, i64, i64 }
%StringExpressionNode_vtable_ty.580188 = type {}
%VarAccessExpressionNode_vtable_ty.580192 = type {}
%ArrayExpressionNode_vtable_ty.580194 = type {}
%NewExpressionNode_vtable_ty.580196 = type {}
%ExpressionIndexNode_vtable_ty.580198 = type {}
%MemberExpressionNode_vtable_ty.580200 = type {}
%CallExpressionNode_vtable_ty.580202 = type {}
%TypeCastExpressionNode_vtable_ty.580204 = type {}
%BinaryExpressionNode_vtable_ty.580206 = type {}
%TernaryExpressionNode_vtable_ty.580208 = type {}
%UnaryExpressionNode_vtable_ty.580210 = type {}
%IfStatementNode_vtable_ty.580212 = type {}
%WhileStatementNode_vtable_ty.580214 = type {}
%ForStatementNode_vtable_ty.580216 = type {}
%ReturnStatementNode_vtable_ty.580218 = type {}
%VarDeclarationStatement_vtable_ty.580220 = type {}
%ConstDeclarationStatement_vtable_ty.580222 = type {}
%ArgNode_vtable_ty.580224 = type {}
%"Array<ArgNode>_vtable_ty.580228" = type { void (%"Array<ArgNode>.580227"*)*, void (%"Array<ArgNode>.580227"*, i64, i64)*, void (%"Array<ArgNode>.580227"*, %ArgNode.580223*)*, void (%"Array<ArgNode>.580227"*, i64, %ArgNode.580223*)*, void (%"Array<ArgNode>.580227"*, %ArgNode.580223*)*, %ArgNode.580223* (%"Array<ArgNode>.580227"*, i64)*, i1 (%"Array<ArgNode>.580227"*, %"Array<ArgNode>.580227"*)*, i1 (%"Array<ArgNode>.580227"*, %ArgNode.580223*)*, i64 (%"Array<ArgNode>.580227"*, %ArgNode.580223*)*, %string.580129* (%"Array<ArgNode>.580227"*, %string.580129*)*, %string.580129* (%"Array<ArgNode>.580227"*)* }
%"Array<ArgNode>.580227" = type { %"Array<ArgNode>_vtable_ty.580228"*, %ArgNode.580223**, i64, i64 }
%ArgNode.580223 = type { %ArgNode_vtable_ty.580224*, %IdentifierToken.580155*, %TypeNode.580161*, %ExpressionNode.580177* }
%IdentifierToken.580155 = type { %IdentifierToken_vtable_ty.580156*, i64, %FloRange.580135*, %string.580129* }
%FunctionDeclarationNode_vtable_ty.580226 = type {}
%MethodNode_vtable_ty.580230 = type {}
%FieldNode_vtable_ty.580232 = type {}
%GenericParameterNode_vtable_ty.580234 = type {}
%"Array<GenericParameterNode>_vtable_ty.580240" = type { void (%"Array<GenericParameterNode>.580237"*)*, void (%"Array<GenericParameterNode>.580237"*, i64, i64)*, void (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)*, void (%"Array<GenericParameterNode>.580237"*, i64, %GenericParameterNode.580233*)*, void (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)*, %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)*, i1 (%"Array<GenericParameterNode>.580237"*, %"Array<GenericParameterNode>.580237"*)*, i1 (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)*, i64 (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)*, %string.580129* (%"Array<GenericParameterNode>.580237"*, %string.580129*)*, %string.580129* (%"Array<GenericParameterNode>.580237"*)* }
%"Array<GenericParameterNode>.580237" = type { %"Array<GenericParameterNode>_vtable_ty.580240"*, %GenericParameterNode.580233**, i64, i64 }
%GenericParameterNode.580233 = type { %GenericParameterNode_vtable_ty.580234*, %IdentifierToken.580155* }
%"Array<FieldNode>_vtable_ty.580241" = type { void (%"Array<FieldNode>.580238"*)*, void (%"Array<FieldNode>.580238"*, i64, i64)*, void (%"Array<FieldNode>.580238"*, %FieldNode.580231*)*, void (%"Array<FieldNode>.580238"*, i64, %FieldNode.580231*)*, void (%"Array<FieldNode>.580238"*, %FieldNode.580231*)*, %FieldNode.580231* (%"Array<FieldNode>.580238"*, i64)*, i1 (%"Array<FieldNode>.580238"*, %"Array<FieldNode>.580238"*)*, i1 (%"Array<FieldNode>.580238"*, %FieldNode.580231*)*, i64 (%"Array<FieldNode>.580238"*, %FieldNode.580231*)*, %string.580129* (%"Array<FieldNode>.580238"*, %string.580129*)*, %string.580129* (%"Array<FieldNode>.580238"*)* }
%"Array<FieldNode>.580238" = type { %"Array<FieldNode>_vtable_ty.580241"*, %FieldNode.580231**, i64, i64 }
%FieldNode.580231 = type { %FieldNode_vtable_ty.580232*, %IdentifierToken.580155*, i64, %ExpressionNode.580177*, %TypeNode.580161* }
%"Array<MethodNode>_vtable_ty.580242" = type { void (%"Array<MethodNode>.580239"*)*, void (%"Array<MethodNode>.580239"*, i64, i64)*, void (%"Array<MethodNode>.580239"*, %MethodNode.580229*)*, void (%"Array<MethodNode>.580239"*, i64, %MethodNode.580229*)*, void (%"Array<MethodNode>.580239"*, %MethodNode.580229*)*, %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)*, i1 (%"Array<MethodNode>.580239"*, %"Array<MethodNode>.580239"*)*, i1 (%"Array<MethodNode>.580239"*, %MethodNode.580229*)*, i64 (%"Array<MethodNode>.580239"*, %MethodNode.580229*)*, %string.580129* (%"Array<MethodNode>.580239"*, %string.580129*)*, %string.580129* (%"Array<MethodNode>.580239"*)* }
%"Array<MethodNode>.580239" = type { %"Array<MethodNode>_vtable_ty.580242"*, %MethodNode.580229**, i64, i64 }
%MethodNode.580229 = type { %MethodNode_vtable_ty.580230*, %IdentifierToken.580155*, %"Array<ArgNode>.580227"*, %BlockNode.580173*, i64, %TypeNode.580161*, i1, i1 }
%BlockNode.580173 = type { %BlockNode_vtable_ty.580174*, %FloRange.580135*, %"Array<StatementNode>.580175"* }
%ClassDeclarationNode_vtable_ty.580236 = type {}
%EnumNodeField_vtable_ty.580244 = type {}
%"Array<EnumNodeField>_vtable_ty.580248" = type { void (%"Array<EnumNodeField>.580247"*)*, void (%"Array<EnumNodeField>.580247"*, i64, i64)*, void (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)*, void (%"Array<EnumNodeField>.580247"*, i64, %EnumNodeField.580243*)*, void (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)*, %EnumNodeField.580243* (%"Array<EnumNodeField>.580247"*, i64)*, i1 (%"Array<EnumNodeField>.580247"*, %"Array<EnumNodeField>.580247"*)*, i1 (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)*, i64 (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)*, %string.580129* (%"Array<EnumNodeField>.580247"*, %string.580129*)*, %string.580129* (%"Array<EnumNodeField>.580247"*)* }
%"Array<EnumNodeField>.580247" = type { %"Array<EnumNodeField>_vtable_ty.580248"*, %EnumNodeField.580243**, i64, i64 }
%EnumNodeField.580243 = type { %EnumNodeField_vtable_ty.580244*, %IdentifierToken.580155*, %ExpressionNode.580177* }
%EnumNode_vtable_ty.580246 = type {}
%"Array<IdentifierToken>_vtable_ty.580252" = type { void (%"Array<IdentifierToken>.580251"*)*, void (%"Array<IdentifierToken>.580251"*, i64, i64)*, void (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)*, void (%"Array<IdentifierToken>.580251"*, i64, %IdentifierToken.580155*)*, void (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)*, %IdentifierToken.580155* (%"Array<IdentifierToken>.580251"*, i64)*, i1 (%"Array<IdentifierToken>.580251"*, %"Array<IdentifierToken>.580251"*)*, i1 (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)*, i64 (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)*, %string.580129* (%"Array<IdentifierToken>.580251"*, %string.580129*)*, %string.580129* (%"Array<IdentifierToken>.580251"*)* }
%"Array<IdentifierToken>.580251" = type { %"Array<IdentifierToken>_vtable_ty.580252"*, %IdentifierToken.580155**, i64, i64 }
%ImportNode_vtable_ty.580250 = type {}
%TypeAliasNode_vtable_ty.580254 = type {}
%"Array<FunctionDeclarationNode>_vtable_ty.580264" = type { void (%"Array<FunctionDeclarationNode>.580257"*)*, void (%"Array<FunctionDeclarationNode>.580257"*, i64, i64)*, void (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)*, void (%"Array<FunctionDeclarationNode>.580257"*, i64, %FunctionDeclarationNode.580225*)*, void (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)*, %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)*, i1 (%"Array<FunctionDeclarationNode>.580257"*, %"Array<FunctionDeclarationNode>.580257"*)*, i1 (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)*, i64 (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)*, %string.580129* (%"Array<FunctionDeclarationNode>.580257"*, %string.580129*)*, %string.580129* (%"Array<FunctionDeclarationNode>.580257"*)* }
%"Array<FunctionDeclarationNode>.580257" = type { %"Array<FunctionDeclarationNode>_vtable_ty.580264"*, %FunctionDeclarationNode.580225**, i64, i64 }
%FunctionDeclarationNode.580225 = type { %FunctionDeclarationNode_vtable_ty.580226*, %IdentifierToken.580155*, %"Array<ArgNode>.580227"*, %BlockNode.580173*, %TypeNode.580161*, i1 }
%"Array<ClassDeclarationNode>_vtable_ty.580265" = type { void (%"Array<ClassDeclarationNode>.580258"*)*, void (%"Array<ClassDeclarationNode>.580258"*, i64, i64)*, void (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)*, void (%"Array<ClassDeclarationNode>.580258"*, i64, %ClassDeclarationNode.580235*)*, void (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)*, %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)*, i1 (%"Array<ClassDeclarationNode>.580258"*, %"Array<ClassDeclarationNode>.580258"*)*, i1 (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)*, i64 (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)*, %string.580129* (%"Array<ClassDeclarationNode>.580258"*, %string.580129*)*, %string.580129* (%"Array<ClassDeclarationNode>.580258"*)* }
%"Array<ClassDeclarationNode>.580258" = type { %"Array<ClassDeclarationNode>_vtable_ty.580265"*, %ClassDeclarationNode.580235**, i64, i64 }
%ClassDeclarationNode.580235 = type { %ClassDeclarationNode_vtable_ty.580236*, %IdentifierToken.580155*, %"Array<GenericParameterNode>.580237"*, %RecordTypeNode.580163*, %"Array<FieldNode>.580238"*, %"Array<MethodNode>.580239"* }
%RecordTypeNode.580163 = type { %RecordTypeNode_vtable_ty.580164*, %FloRange.580135*, i64, %IdentifierToken.580155*, %"Array<TypeNode>.580165"* }
%"Array<EnumNode>_vtable_ty.580266" = type { void (%"Array<EnumNode>.580259"*)*, void (%"Array<EnumNode>.580259"*, i64, i64)*, void (%"Array<EnumNode>.580259"*, %EnumNode.580245*)*, void (%"Array<EnumNode>.580259"*, i64, %EnumNode.580245*)*, void (%"Array<EnumNode>.580259"*, %EnumNode.580245*)*, %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)*, i1 (%"Array<EnumNode>.580259"*, %"Array<EnumNode>.580259"*)*, i1 (%"Array<EnumNode>.580259"*, %EnumNode.580245*)*, i64 (%"Array<EnumNode>.580259"*, %EnumNode.580245*)*, %string.580129* (%"Array<EnumNode>.580259"*, %string.580129*)*, %string.580129* (%"Array<EnumNode>.580259"*)* }
%"Array<EnumNode>.580259" = type { %"Array<EnumNode>_vtable_ty.580266"*, %EnumNode.580245**, i64, i64 }
%EnumNode.580245 = type { %EnumNode_vtable_ty.580246*, %IdentifierToken.580155*, %"Array<EnumNodeField>.580247"*, %TypeNode.580161* }
%"Array<ImportNode>_vtable_ty.580267" = type { void (%"Array<ImportNode>.580260"*)*, void (%"Array<ImportNode>.580260"*, i64, i64)*, void (%"Array<ImportNode>.580260"*, %ImportNode.580249*)*, void (%"Array<ImportNode>.580260"*, i64, %ImportNode.580249*)*, void (%"Array<ImportNode>.580260"*, %ImportNode.580249*)*, %ImportNode.580249* (%"Array<ImportNode>.580260"*, i64)*, i1 (%"Array<ImportNode>.580260"*, %"Array<ImportNode>.580260"*)*, i1 (%"Array<ImportNode>.580260"*, %ImportNode.580249*)*, i64 (%"Array<ImportNode>.580260"*, %ImportNode.580249*)*, %string.580129* (%"Array<ImportNode>.580260"*, %string.580129*)*, %string.580129* (%"Array<ImportNode>.580260"*)* }
%"Array<ImportNode>.580260" = type { %"Array<ImportNode>_vtable_ty.580267"*, %ImportNode.580249**, i64, i64 }
%ImportNode.580249 = type { %ImportNode_vtable_ty.580250*, %"Array<IdentifierToken>.580251"*, %StrToken.580149* }
%"Array<ConstDeclarationStatement>_vtable_ty.580268" = type { void (%"Array<ConstDeclarationStatement>.580261"*)*, void (%"Array<ConstDeclarationStatement>.580261"*, i64, i64)*, void (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)*, void (%"Array<ConstDeclarationStatement>.580261"*, i64, %ConstDeclarationStatement.580221*)*, void (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)*, %ConstDeclarationStatement.580221* (%"Array<ConstDeclarationStatement>.580261"*, i64)*, i1 (%"Array<ConstDeclarationStatement>.580261"*, %"Array<ConstDeclarationStatement>.580261"*)*, i1 (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)*, i64 (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)*, %string.580129* (%"Array<ConstDeclarationStatement>.580261"*, %string.580129*)*, %string.580129* (%"Array<ConstDeclarationStatement>.580261"*)* }
%"Array<ConstDeclarationStatement>.580261" = type { %"Array<ConstDeclarationStatement>_vtable_ty.580268"*, %ConstDeclarationStatement.580221**, i64, i64 }
%ConstDeclarationStatement.580221 = type { %ConstDeclarationStatement_vtable_ty.580222*, %FloRange.580135*, i64, %IdentifierToken.580155*, %TypeNode.580161*, %ExpressionNode.580177* }
%"Array<VarDeclarationStatement>_vtable_ty.580269" = type { void (%"Array<VarDeclarationStatement>.580262"*)*, void (%"Array<VarDeclarationStatement>.580262"*, i64, i64)*, void (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)*, void (%"Array<VarDeclarationStatement>.580262"*, i64, %VarDeclarationStatement.580219*)*, void (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)*, %VarDeclarationStatement.580219* (%"Array<VarDeclarationStatement>.580262"*, i64)*, i1 (%"Array<VarDeclarationStatement>.580262"*, %"Array<VarDeclarationStatement>.580262"*)*, i1 (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)*, i64 (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)*, %string.580129* (%"Array<VarDeclarationStatement>.580262"*, %string.580129*)*, %string.580129* (%"Array<VarDeclarationStatement>.580262"*)* }
%"Array<VarDeclarationStatement>.580262" = type { %"Array<VarDeclarationStatement>_vtable_ty.580269"*, %VarDeclarationStatement.580219**, i64, i64 }
%VarDeclarationStatement.580219 = type { %VarDeclarationStatement_vtable_ty.580220*, %FloRange.580135*, i64, %IdentifierToken.580155*, %TypeNode.580161*, %ExpressionNode.580177* }
%"Array<TypeAliasNode>_vtable_ty.580270" = type { void (%"Array<TypeAliasNode>.580263"*)*, void (%"Array<TypeAliasNode>.580263"*, i64, i64)*, void (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)*, void (%"Array<TypeAliasNode>.580263"*, i64, %TypeAliasNode.580253*)*, void (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)*, %TypeAliasNode.580253* (%"Array<TypeAliasNode>.580263"*, i64)*, i1 (%"Array<TypeAliasNode>.580263"*, %"Array<TypeAliasNode>.580263"*)*, i1 (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)*, i64 (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)*, %string.580129* (%"Array<TypeAliasNode>.580263"*, %string.580129*)*, %string.580129* (%"Array<TypeAliasNode>.580263"*)* }
%"Array<TypeAliasNode>.580263" = type { %"Array<TypeAliasNode>_vtable_ty.580270"*, %TypeAliasNode.580253**, i64, i64 }
%TypeAliasNode.580253 = type { %TypeAliasNode_vtable_ty.580254*, %IdentifierToken.580155*, %TypeNode.580161* }
%ModuleAST_vtable_ty.580256 = type {}
%Parser_vtable_ty.580272 = type { i1 (%Parser.580271*)*, void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*)*, %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)*, void (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)*, void (%Parser.580271*, %"Array<TypeNode>.580165"*)*, %RecordTypeNode.580163* (%Parser.580271*)*, %FunctionTypeNode.580167* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)*, void (%Parser.580271*, %"Array<ExpressionNode>.580189"*)*, %ArrayExpressionNode.580193* (%Parser.580271*)*, %NewExpressionNode.580195* (%Parser.580271*)*, %StringExpressionNode.580187* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionIndexNode.580197* (%Parser.580271*, %ExpressionNode.580177*)*, %CallExpressionNode.580201* (%Parser.580271*, %ExpressionNode.580177*)*, %MemberExpressionNode.580199* (%Parser.580271*, %ExpressionNode.580177*)*, %ExpressionNode.580177* (%Parser.580271*)*, i64 (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, i64 (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, i64 (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, i64 (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, i64 (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, i64 (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, i64 (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)*, %IfStatementNode.580211* (%Parser.580271*)*, %WhileStatementNode.580213* (%Parser.580271*)*, %ForStatementNode.580215* (%Parser.580271*)*, %VarDeclarationStatement.580219* (%Parser.580271*)*, %ReturnStatementNode.580217* (%Parser.580271*)*, %StatementNode.580171* (%Parser.580271*)*, %BlockNode.580173* (%Parser.580271*)*, %TypeAliasNode.580253* (%Parser.580271*)*, %ArgNode.580223* (%Parser.580271*)*, void (%Parser.580271*, %"Array<ArgNode>.580227"*)*, %FunctionDeclarationNode.580225* (%Parser.580271*)*, %MethodNode.580229* (%Parser.580271*)*, i64 (%Parser.580271*)*, void (%Parser.580271*, %ClassDeclarationNode.580235*)*, void (%Parser.580271*, %"Array<GenericParameterNode>.580237"*)*, %ClassDeclarationNode.580235* (%Parser.580271*)*, %ConstDeclarationStatement.580221* (%Parser.580271*)*, %ImportNode.580249* (%Parser.580271*)*, %EnumNode.580245* (%Parser.580271*)*, %ModuleAST.580255* (%Parser.580271*, %"Array<Token>.580152"*, %"Array<FloError>.580139"*)* }
%Parser.580271 = type { %Parser_vtable_ty.580272*, %"Array<Token>.580152"*, %"Array<FloError>.580139"*, %Token.580141*, i64 }
%FunctionTypeNode.580167 = type { %FunctionTypeNode_vtable_ty.580168*, %FloRange.580135*, i64, %"Array<TypeNode>.580165"*, %TypeNode.580161* }
%ArrayExpressionNode.580193 = type { %ArrayExpressionNode_vtable_ty.580194*, %FloRange.580135*, i64, i64, %"Array<ExpressionNode>.580189"* }
%NewExpressionNode.580195 = type { %NewExpressionNode_vtable_ty.580196*, %FloRange.580135*, i64, i64, %TypeNode.580161*, i1, %"Array<ExpressionNode>.580189"* }
%StringExpressionNode.580187 = type { %StringExpressionNode_vtable_ty.580188*, %FloRange.580135*, i64, i64, %StrToken.580149*, %"Array<ExpressionNode>.580189"* }
%ExpressionIndexNode.580197 = type { %ExpressionIndexNode_vtable_ty.580198*, %FloRange.580135*, i64, i64, %ExpressionNode.580177*, %ExpressionNode.580177* }
%CallExpressionNode.580201 = type { %CallExpressionNode_vtable_ty.580202*, %FloRange.580135*, i64, i64, %ExpressionNode.580177*, %"Array<ExpressionNode>.580189"* }
%MemberExpressionNode.580199 = type { %MemberExpressionNode_vtable_ty.580200*, %FloRange.580135*, i64, i64, %ExpressionNode.580177*, %IdentifierToken.580155* }
%IfStatementNode.580211 = type { %IfStatementNode_vtable_ty.580212*, %FloRange.580135*, i64, %ExpressionNode.580177*, %BlockNode.580173*, %BlockNode.580173* }
%WhileStatementNode.580213 = type { %WhileStatementNode_vtable_ty.580214*, %FloRange.580135*, i64, %ExpressionNode.580177*, %BlockNode.580173* }
%ForStatementNode.580215 = type { %ForStatementNode_vtable_ty.580216*, %FloRange.580135*, i64, %StatementNode.580171*, %ExpressionNode.580177*, %ExpressionNode.580177*, %ExpressionNode.580177*, i64, %IdentifierToken.580155*, %BlockNode.580173* }
%ReturnStatementNode.580217 = type { %ReturnStatementNode_vtable_ty.580218*, %FloRange.580135*, i64, %ExpressionNode.580177* }
%ModuleAST.580255 = type { %ModuleAST_vtable_ty.580256*, %"Array<FunctionDeclarationNode>.580257"*, %"Array<ClassDeclarationNode>.580258"*, %"Array<EnumNode>.580259"*, %"Array<ImportNode>.580260"*, %"Array<ConstDeclarationStatement>.580261"*, %"Array<VarDeclarationStatement>.580262"*, %"Array<TypeAliasNode>.580263"* }
%Type_vtable_ty.580274 = type {}
%BooleanType_vtable_ty.580276 = type {}
%PointerType_vtable_ty.580278 = type {}
%"Array<Type>_vtable_ty.580282" = type { void (%"Array<Type>.580281"*)*, void (%"Array<Type>.580281"*, i64, i64)*, void (%"Array<Type>.580281"*, %Type.580273*)*, void (%"Array<Type>.580281"*, i64, %Type.580273*)*, void (%"Array<Type>.580281"*, %Type.580273*)*, %Type.580273* (%"Array<Type>.580281"*, i64)*, i1 (%"Array<Type>.580281"*, %"Array<Type>.580281"*)*, i1 (%"Array<Type>.580281"*, %Type.580273*)*, i64 (%"Array<Type>.580281"*, %Type.580273*)*, %string.580129* (%"Array<Type>.580281"*, %string.580129*)*, %string.580129* (%"Array<Type>.580281"*)* }
%"Array<Type>.580281" = type { %"Array<Type>_vtable_ty.580282"*, %Type.580273**, i64, i64 }
%Type.580273 = type { %Type_vtable_ty.580274*, i64 }
%FunctionType_vtable_ty.580280 = type {}
%Value_vtable_ty.580284 = type {}
%Statement_vtable_ty.580286 = type {}
%TypeId_vtable_ty.580288 = type { i1 (%TypeId.580287*, %TypeId.580287*)* }
%TypeId.580287 = type { %TypeId_vtable_ty.580288*, i64, i64, i64 }
%ClassId_vtable_ty.580290 = type { i1 (%TypeId.580287*, %TypeId.580287*)* }
%EnumId_vtable_ty.580292 = type { i1 (%TypeId.580287*, %TypeId.580287*)* }
%Expression_vtable_ty.580294 = type {}
%ArrayType_vtable_ty.580296 = type {}
%ObjectType_vtable_ty.580298 = type {}
%EnumType_vtable_ty.580300 = type {}
%StringType_vtable_ty.580302 = type {}
%IntExpression_vtable_ty.580304 = type {}
%BooleanExpression_vtable_ty.580306 = type {}
%FloatExpression_vtable_ty.580308 = type {}
%"Array<Expression>_vtable_ty.580312" = type { void (%"Array<Expression>.580311"*)*, void (%"Array<Expression>.580311"*, i64, i64)*, void (%"Array<Expression>.580311"*, %Expression.580293*)*, void (%"Array<Expression>.580311"*, i64, %Expression.580293*)*, void (%"Array<Expression>.580311"*, %Expression.580293*)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)*, i1 (%"Array<Expression>.580311"*, %"Array<Expression>.580311"*)*, i1 (%"Array<Expression>.580311"*, %Expression.580293*)*, i64 (%"Array<Expression>.580311"*, %Expression.580293*)*, %string.580129* (%"Array<Expression>.580311"*, %string.580129*)*, %string.580129* (%"Array<Expression>.580311"*)* }
%"Array<Expression>.580311" = type { %"Array<Expression>_vtable_ty.580312"*, %Expression.580293**, i64, i64 }
%Expression.580293 = type { %Expression_vtable_ty.580294*, i64, i1, i64, %Type.580273* }
%StringExpression_vtable_ty.580310 = type {}
%NullExpression_vtable_ty.580314 = type {}
%ArrayExpression_vtable_ty.580316 = type {}
%BinaryExpression_vtable_ty.580318 = type {}
%UnaryExpression_vtable_ty.580320 = type {}
%TernaryExpression_vtable_ty.580322 = type {}
%TypeCastExpression_vtable_ty.580324 = type {}
%NewExpression_vtable_ty.580326 = type {}
%IndexExpression_vtable_ty.580328 = type {}
%CallExpression_vtable_ty.580330 = type {}
%VarId_vtable_ty.580332 = type {}
%ClassVarId_vtable_ty.580334 = type {}
%EnumVarId_vtable_ty.580336 = type {}
%ConstId_vtable_ty.580338 = type {}
%PropId_vtable_ty.580340 = type {}
%MemberExpression_vtable_ty.580342 = type {}
%VarAccessExpression_vtable_ty.580344 = type {}
%"Array<Statement>_vtable_ty.580348" = type { void (%"Array<Statement>.580347"*)*, void (%"Array<Statement>.580347"*, i64, i64)*, void (%"Array<Statement>.580347"*, %Statement.580285*)*, void (%"Array<Statement>.580347"*, i64, %Statement.580285*)*, void (%"Array<Statement>.580347"*, %Statement.580285*)*, %Statement.580285* (%"Array<Statement>.580347"*, i64)*, i1 (%"Array<Statement>.580347"*, %"Array<Statement>.580347"*)*, i1 (%"Array<Statement>.580347"*, %Statement.580285*)*, i64 (%"Array<Statement>.580347"*, %Statement.580285*)*, %string.580129* (%"Array<Statement>.580347"*, %string.580129*)*, %string.580129* (%"Array<Statement>.580347"*)* }
%"Array<Statement>.580347" = type { %"Array<Statement>_vtable_ty.580348"*, %Statement.580285**, i64, i64 }
%Statement.580285 = type { %Statement_vtable_ty.580286*, i64 }
%Block_vtable_ty.580346 = type {}
%IfStatement_vtable_ty.580350 = type {}
%VarDeclaration_vtable_ty.580352 = type {}
%ConstDeclaration_vtable_ty.580354 = type {}
%ForStatement_vtable_ty.580356 = type {}
%WhileStatement_vtable_ty.580358 = type {}
%ReturnStatement_vtable_ty.580360 = type {}
%ScopeId_vtable_ty.580362 = type {}
%"Bucket<string, VarId>_vtable_ty.580371" = type { void (%"Bucket<string, VarId>.580370"*, %string.580129*, %VarId.580331*)* }
%"Bucket<string, VarId>.580370" = type { %"Bucket<string, VarId>_vtable_ty.580371"*, %string.580129*, %VarId.580331*, i1 }
%VarId.580331 = type { %VarId_vtable_ty.580332*, i64, i64, i64 }
%"Array<Bucket<string, VarId>>_vtable_ty.580373" = type { void (%"Array<Bucket<string, VarId>>.580372"*)*, void (%"Array<Bucket<string, VarId>>.580372"*, i64, i64)*, void (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)*, void (%"Array<Bucket<string, VarId>>.580372"*, i64, %"Bucket<string, VarId>.580370"*)*, void (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)*, %"Bucket<string, VarId>.580370"* (%"Array<Bucket<string, VarId>>.580372"*, i64)*, i1 (%"Array<Bucket<string, VarId>>.580372"*, %"Array<Bucket<string, VarId>>.580372"*)*, i1 (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)*, i64 (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)*, %string.580129* (%"Array<Bucket<string, VarId>>.580372"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, VarId>>.580372"*)* }
%"Array<Bucket<string, VarId>>.580372" = type { %"Array<Bucket<string, VarId>>_vtable_ty.580373"*, %"Bucket<string, VarId>.580370"**, i64, i64 }
%"Map<string, VarId>_vtable_ty.580369" = type { i64 (%"Map<string, VarId>.580365"*, %string.580129*)*, void (%"Map<string, VarId>.580365"*)*, void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)*, %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)*, %"Array<Bucket<string, VarId>>.580372"* (%"Map<string, VarId>.580365"*)* }
%"Map<string, VarId>.580365" = type { %"Map<string, VarId>_vtable_ty.580369"*, %"Bucket<string, VarId>.580370"**, i64, i64 }
%"Bucket<string, ClassId>_vtable_ty.580376" = type { void (%"Bucket<string, ClassId>.580375"*, %string.580129*, %ClassId.580289*)* }
%"Bucket<string, ClassId>.580375" = type { %"Bucket<string, ClassId>_vtable_ty.580376"*, %string.580129*, %ClassId.580289*, i1 }
%ClassId.580289 = type { %ClassId_vtable_ty.580290*, i64, i64, i64 }
%"Array<Bucket<string, ClassId>>_vtable_ty.580378" = type { void (%"Array<Bucket<string, ClassId>>.580377"*)*, void (%"Array<Bucket<string, ClassId>>.580377"*, i64, i64)*, void (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)*, void (%"Array<Bucket<string, ClassId>>.580377"*, i64, %"Bucket<string, ClassId>.580375"*)*, void (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)*, %"Bucket<string, ClassId>.580375"* (%"Array<Bucket<string, ClassId>>.580377"*, i64)*, i1 (%"Array<Bucket<string, ClassId>>.580377"*, %"Array<Bucket<string, ClassId>>.580377"*)*, i1 (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)*, i64 (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)*, %string.580129* (%"Array<Bucket<string, ClassId>>.580377"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, ClassId>>.580377"*)* }
%"Array<Bucket<string, ClassId>>.580377" = type { %"Array<Bucket<string, ClassId>>_vtable_ty.580378"*, %"Bucket<string, ClassId>.580375"**, i64, i64 }
%"Map<string, ClassId>_vtable_ty.580374" = type { i64 (%"Map<string, ClassId>.580366"*, %string.580129*)*, void (%"Map<string, ClassId>.580366"*)*, void (%"Map<string, ClassId>.580366"*, %string.580129*, %ClassId.580289*)*, %ClassId.580289* (%"Map<string, ClassId>.580366"*, %string.580129*)*, %"Array<Bucket<string, ClassId>>.580377"* (%"Map<string, ClassId>.580366"*)* }
%"Map<string, ClassId>.580366" = type { %"Map<string, ClassId>_vtable_ty.580374"*, %"Bucket<string, ClassId>.580375"**, i64, i64 }
%"Bucket<string, EnumId>_vtable_ty.580381" = type { void (%"Bucket<string, EnumId>.580380"*, %string.580129*, %EnumId.580291*)* }
%"Bucket<string, EnumId>.580380" = type { %"Bucket<string, EnumId>_vtable_ty.580381"*, %string.580129*, %EnumId.580291*, i1 }
%EnumId.580291 = type { %EnumId_vtable_ty.580292*, i64, i64, i64 }
%"Array<Bucket<string, EnumId>>_vtable_ty.580383" = type { void (%"Array<Bucket<string, EnumId>>.580382"*)*, void (%"Array<Bucket<string, EnumId>>.580382"*, i64, i64)*, void (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)*, void (%"Array<Bucket<string, EnumId>>.580382"*, i64, %"Bucket<string, EnumId>.580380"*)*, void (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)*, %"Bucket<string, EnumId>.580380"* (%"Array<Bucket<string, EnumId>>.580382"*, i64)*, i1 (%"Array<Bucket<string, EnumId>>.580382"*, %"Array<Bucket<string, EnumId>>.580382"*)*, i1 (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)*, i64 (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)*, %string.580129* (%"Array<Bucket<string, EnumId>>.580382"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, EnumId>>.580382"*)* }
%"Array<Bucket<string, EnumId>>.580382" = type { %"Array<Bucket<string, EnumId>>_vtable_ty.580383"*, %"Bucket<string, EnumId>.580380"**, i64, i64 }
%"Map<string, EnumId>_vtable_ty.580379" = type { i64 (%"Map<string, EnumId>.580367"*, %string.580129*)*, void (%"Map<string, EnumId>.580367"*)*, void (%"Map<string, EnumId>.580367"*, %string.580129*, %EnumId.580291*)*, %EnumId.580291* (%"Map<string, EnumId>.580367"*, %string.580129*)*, %"Array<Bucket<string, EnumId>>.580382"* (%"Map<string, EnumId>.580367"*)* }
%"Map<string, EnumId>.580367" = type { %"Map<string, EnumId>_vtable_ty.580379"*, %"Bucket<string, EnumId>.580380"**, i64, i64 }
%"Bucket<string, Type>_vtable_ty.580386" = type { void (%"Bucket<string, Type>.580385"*, %string.580129*, %Type.580273*)* }
%"Bucket<string, Type>.580385" = type { %"Bucket<string, Type>_vtable_ty.580386"*, %string.580129*, %Type.580273*, i1 }
%"Array<Bucket<string, Type>>_vtable_ty.580388" = type { void (%"Array<Bucket<string, Type>>.580387"*)*, void (%"Array<Bucket<string, Type>>.580387"*, i64, i64)*, void (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)*, void (%"Array<Bucket<string, Type>>.580387"*, i64, %"Bucket<string, Type>.580385"*)*, void (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)*, %"Bucket<string, Type>.580385"* (%"Array<Bucket<string, Type>>.580387"*, i64)*, i1 (%"Array<Bucket<string, Type>>.580387"*, %"Array<Bucket<string, Type>>.580387"*)*, i1 (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)*, i64 (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)*, %string.580129* (%"Array<Bucket<string, Type>>.580387"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, Type>>.580387"*)* }
%"Array<Bucket<string, Type>>.580387" = type { %"Array<Bucket<string, Type>>_vtable_ty.580388"*, %"Bucket<string, Type>.580385"**, i64, i64 }
%"Map<string, Type>_vtable_ty.580384" = type { i64 (%"Map<string, Type>.580368"*, %string.580129*)*, void (%"Map<string, Type>.580368"*)*, void (%"Map<string, Type>.580368"*, %string.580129*, %Type.580273*)*, %Type.580273* (%"Map<string, Type>.580368"*, %string.580129*)*, %"Array<Bucket<string, Type>>.580387"* (%"Map<string, Type>.580368"*)* }
%"Map<string, Type>.580368" = type { %"Map<string, Type>_vtable_ty.580384"*, %"Bucket<string, Type>.580385"**, i64, i64 }
%Scope_vtable_ty.580364 = type {}
%FunctionArg_vtable_ty.580390 = type {}
%"Array<FunctionArg>_vtable_ty.580394" = type { void (%"Array<FunctionArg>.580393"*)*, void (%"Array<FunctionArg>.580393"*, i64, i64)*, void (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)*, void (%"Array<FunctionArg>.580393"*, i64, %FunctionArg.580389*)*, void (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)*, %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)*, i1 (%"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"*)*, i1 (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)*, i64 (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)*, %string.580129* (%"Array<FunctionArg>.580393"*, %string.580129*)*, %string.580129* (%"Array<FunctionArg>.580393"*)* }
%"Array<FunctionArg>.580393" = type { %"Array<FunctionArg>_vtable_ty.580394"*, %FunctionArg.580389**, i64, i64 }
%FunctionArg.580389 = type { %FunctionArg_vtable_ty.580390*, i64, i1, i64, %Type.580273*, %VarId.580331*, %string.580129*, %Expression.580293* }
%Function_vtable_ty.580392 = type {}
%Var_vtable_ty.580396 = type {}
%Const_vtable_ty.580398 = type {}
%ClassField_vtable_ty.580400 = type {}
%ClassMethod_vtable_ty.580402 = type {}
%"Array<ClassField>_vtable_ty.580408" = type { void (%"Array<ClassField>.580405"*)*, void (%"Array<ClassField>.580405"*, i64, i64)*, void (%"Array<ClassField>.580405"*, %ClassField.580399*)*, void (%"Array<ClassField>.580405"*, i64, %ClassField.580399*)*, void (%"Array<ClassField>.580405"*, %ClassField.580399*)*, %ClassField.580399* (%"Array<ClassField>.580405"*, i64)*, i1 (%"Array<ClassField>.580405"*, %"Array<ClassField>.580405"*)*, i1 (%"Array<ClassField>.580405"*, %ClassField.580399*)*, i64 (%"Array<ClassField>.580405"*, %ClassField.580399*)*, %string.580129* (%"Array<ClassField>.580405"*, %string.580129*)*, %string.580129* (%"Array<ClassField>.580405"*)* }
%"Array<ClassField>.580405" = type { %"Array<ClassField>_vtable_ty.580408"*, %ClassField.580399**, i64, i64 }
%ClassField.580399 = type { %ClassField_vtable_ty.580400*, %PropId.580339*, i1, i64, %string.580129*, %Type.580273*, %Expression.580293*, i64 }
%PropId.580339 = type { %PropId_vtable_ty.580340*, i64, %TypeId.580287*, i64 }
%"Array<ClassMethod>_vtable_ty.580409" = type { void (%"Array<ClassMethod>.580406"*)*, void (%"Array<ClassMethod>.580406"*, i64, i64)*, void (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)*, void (%"Array<ClassMethod>.580406"*, i64, %ClassMethod.580401*)*, void (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, i1 (%"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"*)*, i1 (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)*, i64 (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)*, %string.580129* (%"Array<ClassMethod>.580406"*, %string.580129*)*, %string.580129* (%"Array<ClassMethod>.580406"*)* }
%"Array<ClassMethod>.580406" = type { %"Array<ClassMethod>_vtable_ty.580409"*, %ClassMethod.580401**, i64, i64 }
%ClassMethod.580401 = type { %ClassMethod_vtable_ty.580402*, %PropId.580339*, i1, i64, %string.580129*, %FunctionType.580279*, %Block.580345*, %"Array<FunctionArg>.580393"*, i1, %ScopeId.580361*, i64 }
%FunctionType.580279 = type { %FunctionType_vtable_ty.580280*, i64, %"Array<Type>.580281"*, %Type.580273* }
%Block.580345 = type { %Block_vtable_ty.580346*, %"Array<Statement>.580347"*, i1, i1, i1 }
%ScopeId.580361 = type { %ScopeId_vtable_ty.580362*, i64, i64 }
%"Bucket<string, PropId>_vtable_ty.580412" = type { void (%"Bucket<string, PropId>.580411"*, %string.580129*, %PropId.580339*)* }
%"Bucket<string, PropId>.580411" = type { %"Bucket<string, PropId>_vtable_ty.580412"*, %string.580129*, %PropId.580339*, i1 }
%"Array<Bucket<string, PropId>>_vtable_ty.580414" = type { void (%"Array<Bucket<string, PropId>>.580413"*)*, void (%"Array<Bucket<string, PropId>>.580413"*, i64, i64)*, void (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)*, void (%"Array<Bucket<string, PropId>>.580413"*, i64, %"Bucket<string, PropId>.580411"*)*, void (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, i1 (%"Array<Bucket<string, PropId>>.580413"*, %"Array<Bucket<string, PropId>>.580413"*)*, i1 (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)*, i64 (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)*, %string.580129* (%"Array<Bucket<string, PropId>>.580413"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, PropId>>.580413"*)* }
%"Array<Bucket<string, PropId>>.580413" = type { %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Bucket<string, PropId>.580411"**, i64, i64 }
%"Map<string, PropId>_vtable_ty.580410" = type { i64 (%"Map<string, PropId>.580407"*, %string.580129*)*, void (%"Map<string, PropId>.580407"*)*, void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %"Array<Bucket<string, PropId>>.580413"* (%"Map<string, PropId>.580407"*)* }
%"Map<string, PropId>.580407" = type { %"Map<string, PropId>_vtable_ty.580410"*, %"Bucket<string, PropId>.580411"**, i64, i64 }
%Class_vtable_ty.580404 = type {}
%EnumField_vtable_ty.580416 = type {}
%"Array<EnumField>_vtable_ty.580420" = type { void (%"Array<EnumField>.580419"*)*, void (%"Array<EnumField>.580419"*, i64, i64)*, void (%"Array<EnumField>.580419"*, %EnumField.580415*)*, void (%"Array<EnumField>.580419"*, i64, %EnumField.580415*)*, void (%"Array<EnumField>.580419"*, %EnumField.580415*)*, %EnumField.580415* (%"Array<EnumField>.580419"*, i64)*, i1 (%"Array<EnumField>.580419"*, %"Array<EnumField>.580419"*)*, i1 (%"Array<EnumField>.580419"*, %EnumField.580415*)*, i64 (%"Array<EnumField>.580419"*, %EnumField.580415*)*, %string.580129* (%"Array<EnumField>.580419"*, %string.580129*)*, %string.580129* (%"Array<EnumField>.580419"*)* }
%"Array<EnumField>.580419" = type { %"Array<EnumField>_vtable_ty.580420"*, %EnumField.580415**, i64, i64 }
%EnumField.580415 = type { %EnumField_vtable_ty.580416*, %PropId.580339*, %string.580129*, %Expression.580293* }
%Enum_vtable_ty.580418 = type {}
%"Array<Var>_vtable_ty.580432" = type { void (%"Array<Var>.580423"*)*, void (%"Array<Var>.580423"*, i64, i64)*, void (%"Array<Var>.580423"*, %Var.580395*)*, void (%"Array<Var>.580423"*, i64, %Var.580395*)*, void (%"Array<Var>.580423"*, %Var.580395*)*, %Var.580395* (%"Array<Var>.580423"*, i64)*, i1 (%"Array<Var>.580423"*, %"Array<Var>.580423"*)*, i1 (%"Array<Var>.580423"*, %Var.580395*)*, i64 (%"Array<Var>.580423"*, %Var.580395*)*, %string.580129* (%"Array<Var>.580423"*, %string.580129*)*, %string.580129* (%"Array<Var>.580423"*)* }
%"Array<Var>.580423" = type { %"Array<Var>_vtable_ty.580432"*, %Var.580395**, i64, i64 }
%Var.580395 = type { %Var_vtable_ty.580396*, %Type.580273*, %VarId.580331*, %Expression.580293* }
%"Array<Const>_vtable_ty.580433" = type { void (%"Array<Const>.580424"*)*, void (%"Array<Const>.580424"*, i64, i64)*, void (%"Array<Const>.580424"*, %Const.580397*)*, void (%"Array<Const>.580424"*, i64, %Const.580397*)*, void (%"Array<Const>.580424"*, %Const.580397*)*, %Const.580397* (%"Array<Const>.580424"*, i64)*, i1 (%"Array<Const>.580424"*, %"Array<Const>.580424"*)*, i1 (%"Array<Const>.580424"*, %Const.580397*)*, i64 (%"Array<Const>.580424"*, %Const.580397*)*, %string.580129* (%"Array<Const>.580424"*, %string.580129*)*, %string.580129* (%"Array<Const>.580424"*)* }
%"Array<Const>.580424" = type { %"Array<Const>_vtable_ty.580433"*, %Const.580397**, i64, i64 }
%Const.580397 = type { %Const_vtable_ty.580398*, %Type.580273*, %ConstId.580337*, %Expression.580293* }
%ConstId.580337 = type { %ConstId_vtable_ty.580338*, i64, i64, i64 }
%"Array<Class>_vtable_ty.580434" = type { void (%"Array<Class>.580425"*)*, void (%"Array<Class>.580425"*, i64, i64)*, void (%"Array<Class>.580425"*, %Class.580403*)*, void (%"Array<Class>.580425"*, i64, %Class.580403*)*, void (%"Array<Class>.580425"*, %Class.580403*)*, %Class.580403* (%"Array<Class>.580425"*, i64)*, i1 (%"Array<Class>.580425"*, %"Array<Class>.580425"*)*, i1 (%"Array<Class>.580425"*, %Class.580403*)*, i64 (%"Array<Class>.580425"*, %Class.580403*)*, %string.580129* (%"Array<Class>.580425"*, %string.580129*)*, %string.580129* (%"Array<Class>.580425"*)* }
%"Array<Class>.580425" = type { %"Array<Class>_vtable_ty.580434"*, %Class.580403**, i64, i64 }
%Class.580403 = type { %Class_vtable_ty.580404*, %ClassId.580289*, %string.580129*, %Type.580273*, %PropId.580339*, %"Array<ClassField>.580405"*, %"Array<ClassMethod>.580406"*, %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"*, i64, i64, i1 }
%"Array<Function>_vtable_ty.580435" = type { void (%"Array<Function>.580426"*)*, void (%"Array<Function>.580426"*, i64, i64)*, void (%"Array<Function>.580426"*, %Function.580391*)*, void (%"Array<Function>.580426"*, i64, %Function.580391*)*, void (%"Array<Function>.580426"*, %Function.580391*)*, %Function.580391* (%"Array<Function>.580426"*, i64)*, i1 (%"Array<Function>.580426"*, %"Array<Function>.580426"*)*, i1 (%"Array<Function>.580426"*, %Function.580391*)*, i64 (%"Array<Function>.580426"*, %Function.580391*)*, %string.580129* (%"Array<Function>.580426"*, %string.580129*)*, %string.580129* (%"Array<Function>.580426"*)* }
%"Array<Function>.580426" = type { %"Array<Function>_vtable_ty.580435"*, %Function.580391**, i64, i64 }
%Function.580391 = type { %Function_vtable_ty.580392*, %VarId.580331*, %string.580129*, %"Array<FunctionArg>.580393"*, %Block.580345*, %FunctionType.580279*, %ScopeId.580361*, i1 }
%"Array<Enum>_vtable_ty.580436" = type { void (%"Array<Enum>.580427"*)*, void (%"Array<Enum>.580427"*, i64, i64)*, void (%"Array<Enum>.580427"*, %Enum.580417*)*, void (%"Array<Enum>.580427"*, i64, %Enum.580417*)*, void (%"Array<Enum>.580427"*, %Enum.580417*)*, %Enum.580417* (%"Array<Enum>.580427"*, i64)*, i1 (%"Array<Enum>.580427"*, %"Array<Enum>.580427"*)*, i1 (%"Array<Enum>.580427"*, %Enum.580417*)*, i64 (%"Array<Enum>.580427"*, %Enum.580417*)*, %string.580129* (%"Array<Enum>.580427"*, %string.580129*)*, %string.580129* (%"Array<Enum>.580427"*)* }
%"Array<Enum>.580427" = type { %"Array<Enum>_vtable_ty.580436"*, %Enum.580417**, i64, i64 }
%Enum.580417 = type { %Enum_vtable_ty.580418*, %EnumId.580291*, %string.580129*, %"Array<EnumField>.580419"*, %"Map<string, PropId>.580407"* }
%"Array<Scope>_vtable_ty.580437" = type { void (%"Array<Scope>.580428"*)*, void (%"Array<Scope>.580428"*, i64, i64)*, void (%"Array<Scope>.580428"*, %Scope.580363*)*, void (%"Array<Scope>.580428"*, i64, %Scope.580363*)*, void (%"Array<Scope>.580428"*, %Scope.580363*)*, %Scope.580363* (%"Array<Scope>.580428"*, i64)*, i1 (%"Array<Scope>.580428"*, %"Array<Scope>.580428"*)*, i1 (%"Array<Scope>.580428"*, %Scope.580363*)*, i64 (%"Array<Scope>.580428"*, %Scope.580363*)*, %string.580129* (%"Array<Scope>.580428"*, %string.580129*)*, %string.580129* (%"Array<Scope>.580428"*)* }
%"Array<Scope>.580428" = type { %"Array<Scope>_vtable_ty.580437"*, %Scope.580363**, i64, i64 }
%Scope.580363 = type { %Scope_vtable_ty.580364*, %ScopeId.580361*, %"Map<string, VarId>.580365"*, %"Map<string, ClassId>.580366"*, %"Map<string, VarId>.580365"*, %"Map<string, EnumId>.580367"*, %ScopeId.580361*, %"Map<string, Type>.580368"* }
%"Array<ConstDeclaration>_vtable_ty.580438" = type { void (%"Array<ConstDeclaration>.580429"*)*, void (%"Array<ConstDeclaration>.580429"*, i64, i64)*, void (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)*, void (%"Array<ConstDeclaration>.580429"*, i64, %ConstDeclaration.580353*)*, void (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)*, %ConstDeclaration.580353* (%"Array<ConstDeclaration>.580429"*, i64)*, i1 (%"Array<ConstDeclaration>.580429"*, %"Array<ConstDeclaration>.580429"*)*, i1 (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)*, i64 (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)*, %string.580129* (%"Array<ConstDeclaration>.580429"*, %string.580129*)*, %string.580129* (%"Array<ConstDeclaration>.580429"*)* }
%"Array<ConstDeclaration>.580429" = type { %"Array<ConstDeclaration>_vtable_ty.580438"*, %ConstDeclaration.580353**, i64, i64 }
%ConstDeclaration.580353 = type { %ConstDeclaration_vtable_ty.580354*, i64, %string.580129*, %ConstId.580337*, i1 }
%"Array<VarDeclaration>_vtable_ty.580439" = type { void (%"Array<VarDeclaration>.580430"*)*, void (%"Array<VarDeclaration>.580430"*, i64, i64)*, void (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)*, void (%"Array<VarDeclaration>.580430"*, i64, %VarDeclaration.580351*)*, void (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)*, %VarDeclaration.580351* (%"Array<VarDeclaration>.580430"*, i64)*, i1 (%"Array<VarDeclaration>.580430"*, %"Array<VarDeclaration>.580430"*)*, i1 (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)*, i64 (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)*, %string.580129* (%"Array<VarDeclaration>.580430"*, %string.580129*)*, %string.580129* (%"Array<VarDeclaration>.580430"*)* }
%"Array<VarDeclaration>.580430" = type { %"Array<VarDeclaration>_vtable_ty.580439"*, %VarDeclaration.580351**, i64, i64 }
%VarDeclaration.580351 = type { %VarDeclaration_vtable_ty.580352*, i64, %string.580129*, %VarId.580331*, i1 }
%"Bucket<string, ClassDeclarationNode>_vtable_ty.580442" = type { void (%"Bucket<string, ClassDeclarationNode>.580441"*, %string.580129*, %ClassDeclarationNode.580235*)* }
%"Bucket<string, ClassDeclarationNode>.580441" = type { %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442"*, %string.580129*, %ClassDeclarationNode.580235*, i1 }
%"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444" = type { void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64, i64)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64, %"Bucket<string, ClassDeclarationNode>.580441"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)*, %"Bucket<string, ClassDeclarationNode>.580441"* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64)*, i1 (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Array<Bucket<string, ClassDeclarationNode>>.580443"*)*, i1 (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)*, i64 (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)*, %string.580129* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*)* }
%"Array<Bucket<string, ClassDeclarationNode>>.580443" = type { %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"*, %"Bucket<string, ClassDeclarationNode>.580441"**, i64, i64 }
%"Map<string, ClassDeclarationNode>_vtable_ty.580440" = type { i64 (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)*, void (%"Map<string, ClassDeclarationNode>.580431"*)*, void (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*, %ClassDeclarationNode.580235*)*, %ClassDeclarationNode.580235* (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)*, %"Array<Bucket<string, ClassDeclarationNode>>.580443"* (%"Map<string, ClassDeclarationNode>.580431"*)* }
%"Map<string, ClassDeclarationNode>.580431" = type { %"Map<string, ClassDeclarationNode>_vtable_ty.580440"*, %"Bucket<string, ClassDeclarationNode>.580441"**, i64, i64 }
%Module_vtable_ty.580422 = type {}
%"Array<Module>_vtable_ty.580448" = type { void (%"Array<Module>.580447"*)*, void (%"Array<Module>.580447"*, i64, i64)*, void (%"Array<Module>.580447"*, %Module.580421*)*, void (%"Array<Module>.580447"*, i64, %Module.580421*)*, void (%"Array<Module>.580447"*, %Module.580421*)*, %Module.580421* (%"Array<Module>.580447"*, i64)*, i1 (%"Array<Module>.580447"*, %"Array<Module>.580447"*)*, i1 (%"Array<Module>.580447"*, %Module.580421*)*, i64 (%"Array<Module>.580447"*, %Module.580421*)*, %string.580129* (%"Array<Module>.580447"*, %string.580129*)*, %string.580129* (%"Array<Module>.580447"*)* }
%"Array<Module>.580447" = type { %"Array<Module>_vtable_ty.580448"*, %Module.580421**, i64, i64 }
%Module.580421 = type { %Module_vtable_ty.580422*, i64, %string.580129*, %"Array<Var>.580423"*, %"Array<Const>.580424"*, %"Array<Class>.580425"*, %"Array<Function>.580426"*, %"Array<Enum>.580427"*, %"Array<Scope>.580428"*, %"Array<ConstDeclaration>.580429"*, %"Array<VarDeclaration>.580430"*, %"Map<string, ClassDeclarationNode>.580431"* }
%Program_vtable_ty.580446 = type {}
%TypeChecker_vtable_ty.580450 = type { %Module.580421* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)*, %Function.580391* (%TypeChecker.580449*)*, %FunctionType.580279* (%TypeChecker.580449*)*, %Class.580403* (%TypeChecker.580449*)*, %Class.580403* (%TypeChecker.580449*, %VarId.580331*)*, %Enum.580417* (%TypeChecker.580449*, %EnumId.580291*)*, %Enum.580417* (%TypeChecker.580449*, %VarId.580331*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %Scope.580363* (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*, %string.580129*)*, %VarId.580331* (%TypeChecker.580449*, %string.580129*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*)*, %Scope.580363* (%TypeChecker.580449*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, i1 (%TypeChecker.580449*)*, %Program.580445* (%TypeChecker.580449*, %ModuleAST.580255*, %string.580129*, %"Array<FloError>.580139"*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*, %"Array<Type>.580281"*)*, %Var.580395* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)*, %Const.580397* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)*, void (%TypeChecker.580449*, %ConstDeclarationStatement.580221*)*, void (%TypeChecker.580449*, %VarDeclarationStatement.580219*)*, %FunctionType.580279* (%TypeChecker.580449*, %"Array<ArgNode>.580227"*, %TypeNode.580161*, %"Array<FunctionArg>.580393"*)*, void (%TypeChecker.580449*, %ImportNode.580249*)*, void (%TypeChecker.580449*, %EnumNode.580245*)*, void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %FunctionDeclarationNode.580225*)*, void (%TypeChecker.580449*, %Enum.580417*, %EnumNode.580245*)*, void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %Function.580391*, %FunctionDeclarationNode.580225*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %ArrayExpression.580315* (%TypeChecker.580449*, %Type.580273*, %ArrayExpressionNode.580193*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %VarAccessExpressionNode.580191*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %Expression.580293*, %BinaryExpressionNode.580205*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*, %Expression.580293*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*)*, %BinaryExpression.580317* (%TypeChecker.580449*, %Type.580273*, %BinaryExpressionNode.580205*)*, %UnaryExpression.580319* (%TypeChecker.580449*, %Type.580273*, %UnaryExpressionNode.580209*)*, %TypeCastExpression.580323* (%TypeChecker.580449*, %TypeCastExpressionNode.580203*)*, %string.580129* (%TypeChecker.580449*, %ClassId.580289*, %"Array<ExpressionNode>.580189"*, %"Array<Expression>.580311"**)*, %NewExpression.580325* (%TypeChecker.580449*, %NewExpressionNode.580195*)*, %string.580129* (%TypeChecker.580449*, %PropId.580339*)*, %MemberExpression.580341* (%TypeChecker.580449*, %Type.580273*, %MemberExpressionNode.580199*)*, %TernaryExpression.580321* (%TypeChecker.580449*, %Type.580273*, %TernaryExpressionNode.580207*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %ExpressionIndexNode.580197*)*, %IndexExpression.580327* (%TypeChecker.580449*, %Type.580273*, %ExpressionIndexNode.580197*)*, %"Array<FunctionArg>.580393"* (%TypeChecker.580449*, %Expression.580293*)*, %"Array<Expression>.580311"* (%TypeChecker.580449*, %FunctionType.580279*, %"Array<FunctionArg>.580393"*, %"Array<ExpressionNode>.580189"*)*, i64 (%TypeChecker.580449*, %FunctionType.580279*, %"Array<Expression>.580311"*)*, %CallExpression.580329* (%TypeChecker.580449*, %Type.580273*, %CallExpressionNode.580201*)*, %IntExpression.580303* (%TypeChecker.580449*, %Type.580273*, %IntExpressionNode.580181*)*, %FloatExpression.580307* (%TypeChecker.580449*, %Type.580273*, %FloatExpressionNode.580183*)*, %IntExpression.580303* (%TypeChecker.580449*, %CharExpressionNode.580185*)*, %StringExpression.580309* (%TypeChecker.580449*, %Type.580273*, %StringExpressionNode.580187*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %ExpressionNode.580177*)*, %IfStatement.580349* (%TypeChecker.580449*, %IfStatementNode.580211*)*, %VarDeclaration.580351* (%TypeChecker.580449*, %VarDeclarationStatement.580219*)*, %ConstDeclaration.580353* (%TypeChecker.580449*, %ConstDeclarationStatement.580221*)*, %ForStatement.580355* (%TypeChecker.580449*, %ForStatementNode.580215*)*, %WhileStatement.580357* (%TypeChecker.580449*, %WhileStatementNode.580213*)*, %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)*, %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)*, %ReturnStatement.580359* (%TypeChecker.580449*, %ReturnStatementNode.580217*)*, %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)*, %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)* }
%TypeChecker.580449 = type { %TypeChecker_vtable_ty.580450*, %Program.580445*, i64, %ClassId.580289*, %VarId.580331*, %PropId.580339*, %ScopeId.580361*, %string.580129*, %"Array<FloError>.580139"*, i1 }
%Program.580445 = type { %Program_vtable_ty.580446*, %"Array<Module>.580447"* }
%ArrayExpression.580315 = type { %ArrayExpression_vtable_ty.580316*, i64, i1, i64, %Type.580273*, %"Array<Expression>.580311"* }
%VarAccessExpressionNode.580191 = type { %VarAccessExpressionNode_vtable_ty.580192*, %FloRange.580135*, i64, i64, %IdentifierToken.580155* }
%BinaryExpressionNode.580205 = type { %BinaryExpressionNode_vtable_ty.580206*, %FloRange.580135*, i64, i64, %ExpressionNode.580177*, i64, %ExpressionNode.580177* }
%BinaryExpression.580317 = type { %BinaryExpression_vtable_ty.580318*, i64, i1, i64, %Type.580273*, %Expression.580293*, i64, %Expression.580293* }
%UnaryExpression.580319 = type { %UnaryExpression_vtable_ty.580320*, i64, i1, i64, %Type.580273*, i64, %Expression.580293* }
%UnaryExpressionNode.580209 = type { %UnaryExpressionNode_vtable_ty.580210*, %FloRange.580135*, i64, i64, i64, %ExpressionNode.580177* }
%TypeCastExpression.580323 = type { %TypeCastExpression_vtable_ty.580324*, i64, i1, i64, %Type.580273*, %Expression.580293* }
%TypeCastExpressionNode.580203 = type { %TypeCastExpressionNode_vtable_ty.580204*, %FloRange.580135*, i64, i64, %ExpressionNode.580177*, %TypeNode.580161* }
%NewExpression.580325 = type { %NewExpression_vtable_ty.580326*, i64, i1, i64, %Type.580273*, %"Array<Expression>.580311"*, i1, %Type.580273* }
%MemberExpression.580341 = type { %MemberExpression_vtable_ty.580342*, i64, i1, i64, %Type.580273*, %Expression.580293*, %PropId.580339* }
%TernaryExpression.580321 = type { %TernaryExpression_vtable_ty.580322*, i64, i1, i64, %Type.580273*, %Expression.580293*, %Expression.580293*, %Expression.580293* }
%TernaryExpressionNode.580207 = type { %TernaryExpressionNode_vtable_ty.580208*, %FloRange.580135*, i64, i64, %ExpressionNode.580177*, %ExpressionNode.580177*, %ExpressionNode.580177* }
%IndexExpression.580327 = type { %IndexExpression_vtable_ty.580328*, i64, i1, i64, %Type.580273*, %Expression.580293*, %Expression.580293* }
%CallExpression.580329 = type { %CallExpression_vtable_ty.580330*, i64, i1, i64, %Type.580273*, %Expression.580293*, %"Array<Expression>.580311"* }
%IntExpression.580303 = type { %IntExpression_vtable_ty.580304*, i64, i1, i64, %Type.580273*, i64 }
%IntExpressionNode.580181 = type { %IntExpressionNode_vtable_ty.580182*, %FloRange.580135*, i64, i64, %IntToken.580143* }
%FloatExpression.580307 = type { %FloatExpression_vtable_ty.580308*, i64, i1, i64, %Type.580273*, double }
%FloatExpressionNode.580183 = type { %FloatExpressionNode_vtable_ty.580184*, %FloRange.580135*, i64, i64, %FloatToken.580145* }
%FloatToken.580145 = type { %FloatToken_vtable_ty.580146*, i64, %FloRange.580135*, double }
%CharExpressionNode.580185 = type { %CharExpressionNode_vtable_ty.580186*, %FloRange.580135*, i64, i64, %CharToken.580147* }
%StringExpression.580309 = type { %StringExpression_vtable_ty.580310*, i64, i1, i64, %Type.580273*, %string.580129*, %"Array<Expression>.580311"* }
%IfStatement.580349 = type { %IfStatement_vtable_ty.580350*, i64, %Expression.580293*, %Block.580345*, %Block.580345* }
%ForStatement.580355 = type { %ForStatement_vtable_ty.580356*, i64, %Statement.580285*, %Expression.580293*, %Expression.580293*, %Block.580345* }
%WhileStatement.580357 = type { %WhileStatement_vtable_ty.580358*, i64, %Expression.580293*, %Block.580345* }
%ReturnStatement.580359 = type { %ReturnStatement_vtable_ty.580360*, i64, %Expression.580293* }
%"Array<LLVMMetadataRef>_vtable_ty.580482" = type { void (%"Array<LLVMMetadataRef>.580481"*)*, void (%"Array<LLVMMetadataRef>.580481"*, i64, i64)*, void (%"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457*)*, void (%"Array<LLVMMetadataRef>.580481"*, i64, %LLVMMetadataRef.580457*)*, void (%"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457*)*, %LLVMMetadataRef.580457* (%"Array<LLVMMetadataRef>.580481"*, i64)*, i1 (%"Array<LLVMMetadataRef>.580481"*, %"Array<LLVMMetadataRef>.580481"*)*, i1 (%"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457*)*, i64 (%"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457*)*, %string.580129* (%"Array<LLVMMetadataRef>.580481"*, %string.580129*)*, %string.580129* (%"Array<LLVMMetadataRef>.580481"*)* }
%"Array<LLVMMetadataRef>.580481" = type { %"Array<LLVMMetadataRef>_vtable_ty.580482"*, %LLVMMetadataRef.580457**, i64, i64 }
%LLVMMetadataRef.580457 = type opaque
%DebugInfo_vtable_ty.580480 = type { void (%DebugInfo.580479*)* }
%DebugInfo.580479 = type { %DebugInfo_vtable_ty.580480*, %LLVMDIBuilderRef.580461*, %LLVMMetadataRef.580457*, %"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457* }
%LLVMDIBuilderRef.580461 = type opaque
%GeneratedModule_vtable_ty.580484 = type { void (%GeneratedModule.580483*)*, void (%GeneratedModule.580483*, i64)*, void (%GeneratedModule.580483*)*, %LLVMTargetMachineRef.580473* (%GeneratedModule.580483*, %string.580129*)*, void (%GeneratedModule.580483*, %string.580129*, %string.580129*)*, void (%GeneratedModule.580483*)*, %LLVMModuleRef.580453* (%GeneratedModule.580483*)*, void (%GeneratedModule.580483*)* }
%GeneratedModule.580483 = type { %GeneratedModule_vtable_ty.580484*, %LLVMModuleRef.580453*, i8* }
%LLVMModuleRef.580453 = type opaque
%LLVMTargetMachineRef.580473 = type opaque
%IntrinsicResult_vtable_ty.580486 = type {}
%"Bucket<string, int>_vtable_ty.580493" = type { void (%"Bucket<string, int>.580492"*, %string.580129*, i64)* }
%"Bucket<string, int>.580492" = type { %"Bucket<string, int>_vtable_ty.580493"*, %string.580129*, i64, i1 }
%"Array<Bucket<string, int>>_vtable_ty.580495" = type { void (%"Array<Bucket<string, int>>.580494"*)*, void (%"Array<Bucket<string, int>>.580494"*, i64, i64)*, void (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)*, void (%"Array<Bucket<string, int>>.580494"*, i64, %"Bucket<string, int>.580492"*)*, void (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)*, %"Bucket<string, int>.580492"* (%"Array<Bucket<string, int>>.580494"*, i64)*, i1 (%"Array<Bucket<string, int>>.580494"*, %"Array<Bucket<string, int>>.580494"*)*, i1 (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)*, i64 (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)*, %string.580129* (%"Array<Bucket<string, int>>.580494"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, int>>.580494"*)* }
%"Array<Bucket<string, int>>.580494" = type { %"Array<Bucket<string, int>>_vtable_ty.580495"*, %"Bucket<string, int>.580492"**, i64, i64 }
%"Map<string, int>_vtable_ty.580491" = type { i64 (%"Map<string, int>.580489"*, %string.580129*)*, void (%"Map<string, int>.580489"*)*, void (%"Map<string, int>.580489"*, %string.580129*, i64)*, i64 (%"Map<string, int>.580489"*, %string.580129*)*, %"Array<Bucket<string, int>>.580494"* (%"Map<string, int>.580489"*)* }
%"Map<string, int>.580489" = type { %"Map<string, int>_vtable_ty.580491"*, %"Bucket<string, int>.580492"**, i64, i64 }
%"Bucket<string, LLVMValueRef>_vtable_ty.580498" = type { void (%"Bucket<string, LLVMValueRef>.580497"*, %string.580129*, %LLVMValueRef.580455*)* }
%"Bucket<string, LLVMValueRef>.580497" = type { %"Bucket<string, LLVMValueRef>_vtable_ty.580498"*, %string.580129*, %LLVMValueRef.580455*, i1 }
%LLVMValueRef.580455 = type opaque
%"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500" = type { void (%"Array<Bucket<string, LLVMValueRef>>.580499"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64, i64)*, void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64, %"Bucket<string, LLVMValueRef>.580497"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)*, %"Bucket<string, LLVMValueRef>.580497"* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64)*, i1 (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Array<Bucket<string, LLVMValueRef>>.580499"*)*, i1 (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)*, i64 (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)*, %string.580129* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, LLVMValueRef>>.580499"*)* }
%"Array<Bucket<string, LLVMValueRef>>.580499" = type { %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"*, %"Bucket<string, LLVMValueRef>.580497"**, i64, i64 }
%"Map<string, LLVMValueRef>_vtable_ty.580496" = type { i64 (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, void (%"Map<string, LLVMValueRef>.580490"*)*, void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, %"Array<Bucket<string, LLVMValueRef>>.580499"* (%"Map<string, LLVMValueRef>.580490"*)* }
%"Map<string, LLVMValueRef>.580490" = type { %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Bucket<string, LLVMValueRef>.580497"**, i64, i64 }
%CGClassType_vtable_ty.580488 = type {}
%CGEnumType_vtable_ty.580502 = type {}
%"Array<LLVMTypeRef>_vtable_ty.580504" = type { void (%"Array<LLVMTypeRef>.580503"*)*, void (%"Array<LLVMTypeRef>.580503"*, i64, i64)*, void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)*, void (%"Array<LLVMTypeRef>.580503"*, i64, %LLVMTypeRef.580454*)*, void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)*, %LLVMTypeRef.580454* (%"Array<LLVMTypeRef>.580503"*, i64)*, i1 (%"Array<LLVMTypeRef>.580503"*, %"Array<LLVMTypeRef>.580503"*)*, i1 (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)*, i64 (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)*, %string.580129* (%"Array<LLVMTypeRef>.580503"*, %string.580129*)*, %string.580129* (%"Array<LLVMTypeRef>.580503"*)* }
%"Array<LLVMTypeRef>.580503" = type { %"Array<LLVMTypeRef>_vtable_ty.580504"*, %LLVMTypeRef.580454**, i64, i64 }
%LLVMTypeRef.580454 = type opaque
%"Array<LLVMValueRef>_vtable_ty.580506" = type { void (%"Array<LLVMValueRef>.580505"*)*, void (%"Array<LLVMValueRef>.580505"*, i64, i64)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, i64, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)*, i1 (%"Array<LLVMValueRef>.580505"*, %"Array<LLVMValueRef>.580505"*)*, i1 (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, i64 (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, %string.580129* (%"Array<LLVMValueRef>.580505"*, %string.580129*)*, %string.580129* (%"Array<LLVMValueRef>.580505"*)* }
%"Array<LLVMValueRef>.580505" = type { %"Array<LLVMValueRef>_vtable_ty.580506"*, %LLVMValueRef.580455**, i64, i64 }
%"Array<LLVMModuleRef>_vtable_ty.580513" = type { void (%"Array<LLVMModuleRef>.580509"*)*, void (%"Array<LLVMModuleRef>.580509"*, i64, i64)*, void (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)*, void (%"Array<LLVMModuleRef>.580509"*, i64, %LLVMModuleRef.580453*)*, void (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)*, %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)*, i1 (%"Array<LLVMModuleRef>.580509"*, %"Array<LLVMModuleRef>.580509"*)*, i1 (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)*, i64 (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)*, %string.580129* (%"Array<LLVMModuleRef>.580509"*, %string.580129*)*, %string.580129* (%"Array<LLVMModuleRef>.580509"*)* }
%"Array<LLVMModuleRef>.580509" = type { %"Array<LLVMModuleRef>_vtable_ty.580513"*, %LLVMModuleRef.580453**, i64, i64 }
%"Bucket<string, IntrinsicResult>_vtable_ty.580516" = type { void (%"Bucket<string, IntrinsicResult>.580515"*, %string.580129*, %IntrinsicResult.580485*)* }
%"Bucket<string, IntrinsicResult>.580515" = type { %"Bucket<string, IntrinsicResult>_vtable_ty.580516"*, %string.580129*, %IntrinsicResult.580485*, i1 }
%IntrinsicResult.580485 = type { %IntrinsicResult_vtable_ty.580486*, %LLVMValueRef.580455*, %LLVMTypeRef.580454* }
%"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518" = type { void (%"Array<Bucket<string, IntrinsicResult>>.580517"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64, i64)*, void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64, %"Bucket<string, IntrinsicResult>.580515"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)*, %"Bucket<string, IntrinsicResult>.580515"* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64)*, i1 (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Array<Bucket<string, IntrinsicResult>>.580517"*)*, i1 (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)*, i64 (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)*, %string.580129* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, IntrinsicResult>>.580517"*)* }
%"Array<Bucket<string, IntrinsicResult>>.580517" = type { %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"*, %"Bucket<string, IntrinsicResult>.580515"**, i64, i64 }
%"Map<string, IntrinsicResult>_vtable_ty.580514" = type { i64 (%"Map<string, IntrinsicResult>.580510"*, %string.580129*)*, void (%"Map<string, IntrinsicResult>.580510"*)*, void (%"Map<string, IntrinsicResult>.580510"*, %string.580129*, %IntrinsicResult.580485*)*, %IntrinsicResult.580485* (%"Map<string, IntrinsicResult>.580510"*, %string.580129*)*, %"Array<Bucket<string, IntrinsicResult>>.580517"* (%"Map<string, IntrinsicResult>.580510"*)* }
%"Map<string, IntrinsicResult>.580510" = type { %"Map<string, IntrinsicResult>_vtable_ty.580514"*, %"Bucket<string, IntrinsicResult>.580515"**, i64, i64 }
%"Bucket<string, CGClassType>_vtable_ty.580521" = type { void (%"Bucket<string, CGClassType>.580520"*, %string.580129*, %CGClassType.580487*)* }
%"Bucket<string, CGClassType>.580520" = type { %"Bucket<string, CGClassType>_vtable_ty.580521"*, %string.580129*, %CGClassType.580487*, i1 }
%CGClassType.580487 = type { %CGClassType_vtable_ty.580488*, %LLVMTypeRef.580454*, %"Map<string, int>.580489"*, %"Map<string, int>.580489"*, %"Map<string, LLVMValueRef>.580490"*, %LLVMValueRef.580455*, %LLVMTypeRef.580454*, %LLVMValueRef.580455* }
%"Array<Bucket<string, CGClassType>>_vtable_ty.580523" = type { void (%"Array<Bucket<string, CGClassType>>.580522"*)*, void (%"Array<Bucket<string, CGClassType>>.580522"*, i64, i64)*, void (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)*, void (%"Array<Bucket<string, CGClassType>>.580522"*, i64, %"Bucket<string, CGClassType>.580520"*)*, void (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)*, %"Bucket<string, CGClassType>.580520"* (%"Array<Bucket<string, CGClassType>>.580522"*, i64)*, i1 (%"Array<Bucket<string, CGClassType>>.580522"*, %"Array<Bucket<string, CGClassType>>.580522"*)*, i1 (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)*, i64 (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)*, %string.580129* (%"Array<Bucket<string, CGClassType>>.580522"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, CGClassType>>.580522"*)* }
%"Array<Bucket<string, CGClassType>>.580522" = type { %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"*, %"Bucket<string, CGClassType>.580520"**, i64, i64 }
%"Map<string, CGClassType>_vtable_ty.580519" = type { i64 (%"Map<string, CGClassType>.580511"*, %string.580129*)*, void (%"Map<string, CGClassType>.580511"*)*, void (%"Map<string, CGClassType>.580511"*, %string.580129*, %CGClassType.580487*)*, %CGClassType.580487* (%"Map<string, CGClassType>.580511"*, %string.580129*)*, %"Array<Bucket<string, CGClassType>>.580522"* (%"Map<string, CGClassType>.580511"*)* }
%"Map<string, CGClassType>.580511" = type { %"Map<string, CGClassType>_vtable_ty.580519"*, %"Bucket<string, CGClassType>.580520"**, i64, i64 }
%"Bucket<string, CGEnumType>_vtable_ty.580526" = type { void (%"Bucket<string, CGEnumType>.580525"*, %string.580129*, %CGEnumType.580501*)* }
%"Bucket<string, CGEnumType>.580525" = type { %"Bucket<string, CGEnumType>_vtable_ty.580526"*, %string.580129*, %CGEnumType.580501*, i1 }
%CGEnumType.580501 = type { %CGEnumType_vtable_ty.580502*, %LLVMTypeRef.580454*, %"Map<string, LLVMValueRef>.580490"* }
%"Array<Bucket<string, CGEnumType>>_vtable_ty.580528" = type { void (%"Array<Bucket<string, CGEnumType>>.580527"*)*, void (%"Array<Bucket<string, CGEnumType>>.580527"*, i64, i64)*, void (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)*, void (%"Array<Bucket<string, CGEnumType>>.580527"*, i64, %"Bucket<string, CGEnumType>.580525"*)*, void (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)*, %"Bucket<string, CGEnumType>.580525"* (%"Array<Bucket<string, CGEnumType>>.580527"*, i64)*, i1 (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Array<Bucket<string, CGEnumType>>.580527"*)*, i1 (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)*, i64 (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)*, %string.580129* (%"Array<Bucket<string, CGEnumType>>.580527"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, CGEnumType>>.580527"*)* }
%"Array<Bucket<string, CGEnumType>>.580527" = type { %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"*, %"Bucket<string, CGEnumType>.580525"**, i64, i64 }
%"Map<string, CGEnumType>_vtable_ty.580524" = type { i64 (%"Map<string, CGEnumType>.580512"*, %string.580129*)*, void (%"Map<string, CGEnumType>.580512"*)*, void (%"Map<string, CGEnumType>.580512"*, %string.580129*, %CGEnumType.580501*)*, %CGEnumType.580501* (%"Map<string, CGEnumType>.580512"*, %string.580129*)*, %"Array<Bucket<string, CGEnumType>>.580527"* (%"Map<string, CGEnumType>.580512"*)* }
%"Map<string, CGEnumType>.580512" = type { %"Map<string, CGEnumType>_vtable_ty.580524"*, %"Bucket<string, CGEnumType>.580525"**, i64, i64 }
%CodeGen_vtable_ty.580508 = type { %GeneratedModule.580483* (%CodeGen.580507*, %Program.580445*)*, void (%CodeGen.580507*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %VarId.580331*)*, %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)*, %CGEnumType.580501* (%CodeGen.580507*, %TypeId.580287*)*, %CGClassType.580487* (%CodeGen.580507*, %VarId.580331*)*, %CGEnumType.580501* (%CodeGen.580507*, %VarId.580331*)*, void (%CodeGen.580507*, %TypeId.580287*, %CGClassType.580487*)*, void (%CodeGen.580507*, %TypeId.580287*, %CGEnumType.580501*)*, void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%CodeGen.580507*, i1)*, %LLVMValueRef.580455* (%CodeGen.580507*, i64)*, %LLVMModuleRef.580453* (%CodeGen.580507*, %Module.580421*)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ReturnStatement.580359*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %IntExpression.580303*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %FloatExpression.580307*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %BooleanExpression.580305*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %"Array<LLVMValueRef>.580505"*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %StringExpression.580309*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %ArrayExpression.580315*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ArrayExpression.580315*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarAccessExpression.580343*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IndexExpression.580327*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %BinaryExpression.580317*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Type.580273*, %LLVMValueRef.580455*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %BinaryExpression.580317*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %TypeCastExpression.580323*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %UnaryExpression.580319*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarAccessExpression.580343*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %NullExpression.580313*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %TernaryExpression.580321*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %CallExpression.580329*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IndexExpression.580327*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %NewExpression.580325*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IfStatement.580349*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ForStatement.580355*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %WhileStatement.580357*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ObjectType.580297*, %LLVMValueRef.580455*, %"Array<Expression>.580311"*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarDeclaration.580351*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ConstDeclaration.580353*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Statement.580285*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)*, void (%CodeGen.580507*, %Function.580391*)*, void (%CodeGen.580507*, %Class.580403*)*, void (%CodeGen.580507*, %Function.580391*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %string.580129*, %LLVMTypeRef.580454*)*, void (%CodeGen.580507*, %CGClassType.580487*, %Class.580403*)*, void (%CodeGen.580507*, %CGClassType.580487*, %Class.580403*, %"Array<LLVMTypeRef>.580503"*)*, void (%CodeGen.580507*, %Class.580403*)*, void (%CodeGen.580507*, %Class.580403*)*, void (%CodeGen.580507*, %Enum.580417*)* }
%CodeGen.580507 = type { %CodeGen_vtable_ty.580508*, %"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*, %"Map<string, LLVMValueRef>.580490"*, %"Map<string, IntrinsicResult>.580510"*, %"Map<string, LLVMValueRef>.580490"*, %"Map<string, CGClassType>.580511"*, %"Map<string, CGEnumType>.580512"*, %LLVMValueRef.580455*, %LLVMBasicBlockRef.580456*, %LLVMBasicBlockRef.580456*, %Program.580445*, i1, %LLVMContextRef.580452*, %DebugInfo.580479* }
%LLVMBasicBlockRef.580456 = type opaque
%LLVMContextRef.580452 = type opaque
%LLVMBuilderRef.580460 = type opaque
%BooleanExpression.580305 = type { %BooleanExpression_vtable_ty.580306*, i64, i1, i64, %Type.580273*, i64 }
%VarAccessExpression.580343 = type { %VarAccessExpression_vtable_ty.580344*, i64, i1, i64, %Type.580273*, %VarId.580331* }
%NullExpression.580313 = type { %NullExpression_vtable_ty.580314*, i64, i1, i64, %Type.580273* }
%ObjectType.580297 = type { %ObjectType_vtable_ty.580298*, i64, %ClassId.580289* }
%"Arraymain.flo_vtable_ty.580530" = type { void (%"Arraymain.flo.580529"*)*, void (%"Arraymain.flo.580529"*, i64, i64)*, void (%"Arraymain.flo.580529"*, %string.580129*)*, void (%"Arraymain.flo.580529"*, i64, %string.580129*)*, void (%"Arraymain.flo.580529"*, %string.580129*)*, %string.580129* (%"Arraymain.flo.580529"*, i64)*, i1 (%"Arraymain.flo.580529"*, %"Arraymain.flo.580529"*)*, i1 (%"Arraymain.flo.580529"*, %string.580129*)*, i64 (%"Arraymain.flo.580529"*, %string.580129*)*, %string.580129* (%"Arraymain.flo.580529"*, %string.580129*)*, %string.580129* (%"Arraymain.flo.580529"*)* }
%"Arraymain.flo.580529" = type { %"Arraymain.flo_vtable_ty.580530"*, %string.580129**, i64, i64 }
%Node.580159 = type { %Node_vtable_ty.580160*, %FloRange.580135* }
%PointerTypeNode.580169 = type { %PointerTypeNode_vtable_ty.580170*, %FloRange.580135*, i64, %TypeNode.580161* }
%ArrayTypeNode.580179 = type { %ArrayTypeNode_vtable_ty.580180*, %FloRange.580135*, i64, %TypeNode.580161*, %ExpressionNode.580177* }
%BooleanType.580275 = type { %BooleanType_vtable_ty.580276*, i64 }
%PointerType.580277 = type { %PointerType_vtable_ty.580278*, i64, %Type.580273* }
%ArrayType.580295 = type { %ArrayType_vtable_ty.580296*, i64, %Type.580273*, i64 }
%EnumType.580299 = type { %EnumType_vtable_ty.580300*, i64, %EnumId.580291* }
%StringType.580301 = type { %StringType_vtable_ty.580302*, i64, %ClassId.580289* }
%ClassVarId.580333 = type { %ClassVarId_vtable_ty.580334*, i64, i64, i64 }
%EnumVarId.580335 = type { %EnumVarId_vtable_ty.580336*, i64, i64, i64 }
%LLVMPassManagerRef.580463 = type opaque
%LLVMExecutionEngineRef.580476 = type opaque
%LLVMTargetRef.580472 = type opaque
%LLVMPassManagerBuilderRef.580474 = type opaque

@string_vtable_data = global %string_vtable_ty.580130 { %string.580129* (%string.580129*, %string.580129*)* @string___add__, void (%string.580129*, i8)* @string_add_byte, %string.580129* (%string.580129*, i64)* @string___getitem__, i1 (%string.580129*, %string.580129*)* @string___eq__, i64 (%string.580129*, %string.580129*)* @string_find, i1 (%string.580129*, %string.580129*)* @string___in__, %string.580129* (%string.580129*, i64, i64)* @string_substring, i8 (%string.580129*, i64)* @string_get_byte, i8* (%string.580129*)* @string_get_bytes, %string.580129* (%string.580129*, %string.580129*, %string.580129*)* @string_replace, i8* (%string.580129*)* @string_to_cstring }
@Range_vtable_data = global %Range_vtable_ty.580132 { i1 (%Range.580131*, i64)* @Range___in__ }
@File_vtable_data = global %File_vtable_ty.580134 { %string.580129* (%File.580133*)* @File_read_all, void (%File.580133*)* @File_close }
@str.0 = private unnamed_addr constant [2 x i8] c"r\00"
@FloRange_vtable_data = global %FloRange_vtable_ty.580136 zeroinitializer
@str.1 = private unnamed_addr constant [4 x i8] c"red\00"
@str.2 = private unnamed_addr constant [8 x i8] c"\1B[1;31m\00"
@str.3 = private unnamed_addr constant [5 x i8] c"\1B[0m\00"
@FloError_vtable_data = global %FloError_vtable_ty.580138 zeroinitializer
@str.4 = private unnamed_addr constant [3 x i8] c"%s\00"
@str.5 = private unnamed_addr constant [2 x i8] c"\0A\00"
@str.6 = private unnamed_addr constant [2 x i8] c" \00"
@str.7 = private unnamed_addr constant [2 x i8] c"^\00"
@str.8 = private unnamed_addr constant [1 x i8] zeroinitializer
@str.9 = private unnamed_addr constant [6 x i8] c"%s %s\00"
@str.10 = private unnamed_addr constant [22 x i8] c"[Illegal Character]: \00"
@str.11 = private unnamed_addr constant [17 x i8] c"[Syntax Error]: \00"
@str.12 = private unnamed_addr constant [13 x i8] c"[IO Error]: \00"
@str.13 = private unnamed_addr constant [15 x i8] c"[Type Error]: \00"
@str.14 = private unnamed_addr constant [15 x i8] c"[Name Error]: \00"
@str.15 = private unnamed_addr constant [10 x i8] c"[Error]: \00"
@str.16 = private unnamed_addr constant [7 x i8] c"File \22\00"
@str.17 = private unnamed_addr constant [8 x i8] c"\22, line\00"
@str.18 = private unnamed_addr constant [9 x i8] c"%s %d %s\00"
@"Array<FloError>_vtable_data" = global %"Array<FloError>_vtable_ty.580140" { void (%"Array<FloError>.580139"*)* @"Array<FloError>_resize", void (%"Array<FloError>.580139"*, i64, i64)* @"Array<FloError>_swap", void (%"Array<FloError>.580139"*, %FloError.580137*)* @"Array<FloError>___sl__", void (%"Array<FloError>.580139"*, i64, %FloError.580137*)* @"Array<FloError>___setitem__", void (%"Array<FloError>.580139"*, %FloError.580137*)* @"Array<FloError>_append", %FloError.580137* (%"Array<FloError>.580139"*, i64)* @"Array<FloError>___getitem__", i1 (%"Array<FloError>.580139"*, %"Array<FloError>.580139"*)* @"Array<FloError>___eq__", i1 (%"Array<FloError>.580139"*, %FloError.580137*)* @"Array<FloError>___in__", i64 (%"Array<FloError>.580139"*, %FloError.580137*)* @"Array<FloError>_find", %string.580129* (%"Array<FloError>.580139"*, %string.580129*)* @"Array<FloError>_join", %string.580129* (%"Array<FloError>.580139"*)* @"Array<FloError>___as_string__" }
@str.19 = private unnamed_addr constant [10 x i8] c"@FloError\00"
@str.20 = private unnamed_addr constant [3 x i8] c", \00"
@str.21 = private unnamed_addr constant [5 x i8] c"[%s]\00"
@str.22 = private unnamed_addr constant [4 x i8] c"and\00"
@str.23 = private unnamed_addr constant [3 x i8] c"or\00"
@str.24 = private unnamed_addr constant [4 x i8] c"xor\00"
@str.25 = private unnamed_addr constant [6 x i8] c"const\00"
@str.26 = private unnamed_addr constant [4 x i8] c"let\00"
@str.27 = private unnamed_addr constant [3 x i8] c"if\00"
@str.28 = private unnamed_addr constant [5 x i8] c"else\00"
@str.29 = private unnamed_addr constant [5 x i8] c"bool\00"
@str.30 = private unnamed_addr constant [3 x i8] c"i4\00"
@str.31 = private unnamed_addr constant [3 x i8] c"i8\00"
@str.32 = private unnamed_addr constant [4 x i8] c"i16\00"
@str.33 = private unnamed_addr constant [4 x i8] c"i32\00"
@str.34 = private unnamed_addr constant [4 x i8] c"i64\00"
@str.35 = private unnamed_addr constant [5 x i8] c"i128\00"
@str.36 = private unnamed_addr constant [4 x i8] c"int\00"
@str.37 = private unnamed_addr constant [4 x i8] c"f16\00"
@str.38 = private unnamed_addr constant [4 x i8] c"f32\00"
@str.39 = private unnamed_addr constant [4 x i8] c"f64\00"
@str.40 = private unnamed_addr constant [6 x i8] c"float\00"
@str.41 = private unnamed_addr constant [5 x i8] c"void\00"
@str.42 = private unnamed_addr constant [4 x i8] c"for\00"
@str.43 = private unnamed_addr constant [6 x i8] c"while\00"
@str.44 = private unnamed_addr constant [4 x i8] c"fnc\00"
@str.45 = private unnamed_addr constant [6 x i8] c"break\00"
@str.46 = private unnamed_addr constant [9 x i8] c"continue\00"
@str.47 = private unnamed_addr constant [7 x i8] c"return\00"
@str.48 = private unnamed_addr constant [7 x i8] c"import\00"
@str.49 = private unnamed_addr constant [8 x i8] c"private\00"
@str.50 = private unnamed_addr constant [7 x i8] c"public\00"
@str.51 = private unnamed_addr constant [10 x i8] c"protected\00"
@str.52 = private unnamed_addr constant [3 x i8] c"in\00"
@str.53 = private unnamed_addr constant [6 x i8] c"class\00"
@str.54 = private unnamed_addr constant [5 x i8] c"enum\00"
@str.55 = private unnamed_addr constant [4 x i8] c"new\00"
@str.56 = private unnamed_addr constant [3 x i8] c"as\00"
@str.57 = private unnamed_addr constant [4 x i8] c"033\00"
@str.58 = private unnamed_addr constant [4 x i8] c"x1b\00"
@str.59 = private unnamed_addr constant [2 x i8] c"\1B\00"
@str.60 = private unnamed_addr constant [6 x i8] c"u001b\00"
@Token_vtable_data = global %Token_vtable_ty.580142 zeroinitializer
@IntToken_vtable_data = global %IntToken_vtable_ty.580144 zeroinitializer
@FloatToken_vtable_data = global %FloatToken_vtable_ty.580146 zeroinitializer
@CharToken_vtable_data = global %CharToken_vtable_ty.580148 zeroinitializer
@"Array<Token>_vtable_data" = global %"Array<Token>_vtable_ty.580153" { void (%"Array<Token>.580152"*)* @"Array<Token>_resize", void (%"Array<Token>.580152"*, i64, i64)* @"Array<Token>_swap", void (%"Array<Token>.580152"*, %Token.580141*)* @"Array<Token>___sl__", void (%"Array<Token>.580152"*, i64, %Token.580141*)* @"Array<Token>___setitem__", void (%"Array<Token>.580152"*, %Token.580141*)* @"Array<Token>_append", %Token.580141* (%"Array<Token>.580152"*, i64)* @"Array<Token>___getitem__", i1 (%"Array<Token>.580152"*, %"Array<Token>.580152"*)* @"Array<Token>___eq__", i1 (%"Array<Token>.580152"*, %Token.580141*)* @"Array<Token>___in__", i64 (%"Array<Token>.580152"*, %Token.580141*)* @"Array<Token>_find", %string.580129* (%"Array<Token>.580152"*, %string.580129*)* @"Array<Token>_join", %string.580129* (%"Array<Token>.580152"*)* @"Array<Token>___as_string__" }
@str.61 = private unnamed_addr constant [7 x i8] c"@Token\00"
@"Array<Array<Token>>_vtable_data" = global %"Array<Array<Token>>_vtable_ty.580154" { void (%"Array<Array<Token>>.580151"*)* @"Array<Array<Token>>_resize", void (%"Array<Array<Token>>.580151"*, i64, i64)* @"Array<Array<Token>>_swap", void (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)* @"Array<Array<Token>>___sl__", void (%"Array<Array<Token>>.580151"*, i64, %"Array<Token>.580152"*)* @"Array<Array<Token>>___setitem__", void (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)* @"Array<Array<Token>>_append", %"Array<Token>.580152"* (%"Array<Array<Token>>.580151"*, i64)* @"Array<Array<Token>>___getitem__", i1 (%"Array<Array<Token>>.580151"*, %"Array<Array<Token>>.580151"*)* @"Array<Array<Token>>___eq__", i1 (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)* @"Array<Array<Token>>___in__", i64 (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)* @"Array<Array<Token>>_find", %string.580129* (%"Array<Array<Token>>.580151"*, %string.580129*)* @"Array<Array<Token>>_join", %string.580129* (%"Array<Array<Token>>.580151"*)* @"Array<Array<Token>>___as_string__" }
@StrToken_vtable_data = global %StrToken_vtable_ty.580150 zeroinitializer
@IdentifierToken_vtable_data = global %IdentifierToken_vtable_ty.580156 zeroinitializer
@Lexer_vtable_data = global %Lexer_vtable_ty.580158 { i1 (%Lexer.580157*)* @Lexer_eof, i8 (%Lexer.580157*, i64)* @Lexer_peek, void (%Lexer.580157*)* @Lexer_advance, %FloRange.580135* (%Lexer.580157*, i64)* @Lexer_get_range, %Token.580141* (%Lexer.580157*)* @Lexer_plus_token, i1 (%Lexer.580157*)* @Lexer_skip_comment, %Token.580141* (%Lexer.580157*)* @Lexer_minus_token, %Token.580141* (%Lexer.580157*)* @Lexer_mult_token, %Token.580141* (%Lexer.580157*)* @Lexer_mod_token, %Token.580141* (%Lexer.580157*)* @Lexer_pow_token, %Token.580141* (%Lexer.580157*)* @Lexer_div_token, %Token.580141* (%Lexer.580157*)* @Lexer_eq_token, %Token.580141* (%Lexer.580157*)* @Lexer_neq_token, %Token.580141* (%Lexer.580157*)* @Lexer_gt_token, %Token.580141* (%Lexer.580157*)* @Lexer_lt_token, %Token.580141* (%Lexer.580157*)* @Lexer_dot_token, %IntToken.580143* (%Lexer.580157*, i64)* @Lexer_base_int_token, %Token.580141* (%Lexer.580157*)* @Lexer_numeric_token, %Token.580141* (%Lexer.580157*)* @Lexer_identifier_token, %StrToken.580149* (%Lexer.580157*)* @Lexer_string_token, %CharToken.580147* (%Lexer.580157*)* @Lexer_char_token, %Token.580141* (%Lexer.580157*)* @Lexer_lex_token, %"Array<Token>.580152"* (%Lexer.580157*, %string.580129*, %"Array<FloError>.580139"*)* @Lexer_tokenize }
@str.62 = private unnamed_addr constant [24 x i8] c"Illegal character: '%s'\00"
@str.63 = private unnamed_addr constant [4 x i8] c"COL\00"
@str.64 = private unnamed_addr constant [8 x i8] c"SEMICOL\00"
@str.65 = private unnamed_addr constant [6 x i8] c"COMMA\00"
@str.66 = private unnamed_addr constant [5 x i8] c"PLUS\00"
@str.67 = private unnamed_addr constant [10 x i8] c"PLUS_PLUS\00"
@str.68 = private unnamed_addr constant [6 x i8] c"MINUS\00"
@str.69 = private unnamed_addr constant [12 x i8] c"MINUS_MINUS\00"
@str.70 = private unnamed_addr constant [5 x i8] c"MULT\00"
@str.71 = private unnamed_addr constant [4 x i8] c"DIV\00"
@str.72 = private unnamed_addr constant [5 x i8] c"LPAR\00"
@str.73 = private unnamed_addr constant [5 x i8] c"RPAR\00"
@str.74 = private unnamed_addr constant [4 x i8] c"MOD\00"
@str.75 = private unnamed_addr constant [7 x i8] c"LBRACE\00"
@str.76 = private unnamed_addr constant [7 x i8] c"RBRACE\00"
@str.77 = private unnamed_addr constant [9 x i8] c"LBRACKET\00"
@str.78 = private unnamed_addr constant [9 x i8] c"RBRACKET\00"
@str.79 = private unnamed_addr constant [4 x i8] c"INT\00"
@str.80 = private unnamed_addr constant [6 x i8] c"FLOAT\00"
@str.81 = private unnamed_addr constant [3 x i8] c"LN\00"
@str.82 = private unnamed_addr constant [4 x i8] c"STR\00"
@str.83 = private unnamed_addr constant [5 x i8] c"CHAR\00"
@str.84 = private unnamed_addr constant [4 x i8] c"POW\00"
@str.85 = private unnamed_addr constant [5 x i8] c"QUES\00"
@str.86 = private unnamed_addr constant [4 x i8] c"AMP\00"
@str.87 = private unnamed_addr constant [3 x i8] c"EQ\00"
@str.88 = private unnamed_addr constant [4 x i8] c"EEQ\00"
@str.89 = private unnamed_addr constant [4 x i8] c"NEQ\00"
@str.90 = private unnamed_addr constant [3 x i8] c"GT\00"
@str.91 = private unnamed_addr constant [3 x i8] c"LT\00"
@str.92 = private unnamed_addr constant [4 x i8] c"LTE\00"
@str.93 = private unnamed_addr constant [4 x i8] c"GTE\00"
@str.94 = private unnamed_addr constant [6 x i8] c"ARROW\00"
@str.95 = private unnamed_addr constant [4 x i8] c"EOF\00"
@str.96 = private unnamed_addr constant [4 x i8] c"NOT\00"
@str.97 = private unnamed_addr constant [3 x i8] c"SL\00"
@str.98 = private unnamed_addr constant [3 x i8] c"SR\00"
@str.99 = private unnamed_addr constant [4 x i8] c"DOT\00"
@str.100 = private unnamed_addr constant [8 x i8] c"DOT_DOT\00"
@str.101 = private unnamed_addr constant [12 x i8] c"DOT_DOT_DOT\00"
@str.102 = private unnamed_addr constant [10 x i8] c"IDENTIFER\00"
@str.103 = private unnamed_addr constant [7 x i8] c"AND_KW\00"
@str.104 = private unnamed_addr constant [6 x i8] c"OR_KW\00"
@str.105 = private unnamed_addr constant [7 x i8] c"XOR_KW\00"
@str.106 = private unnamed_addr constant [9 x i8] c"CONST_KW\00"
@str.107 = private unnamed_addr constant [6 x i8] c"IF_KW\00"
@str.108 = private unnamed_addr constant [8 x i8] c"ELSE_KW\00"
@str.109 = private unnamed_addr constant [8 x i8] c"BOOL_KW\00"
@str.110 = private unnamed_addr constant [6 x i8] c"I4_KW\00"
@str.111 = private unnamed_addr constant [6 x i8] c"I8_KW\00"
@str.112 = private unnamed_addr constant [7 x i8] c"I16_KW\00"
@str.113 = private unnamed_addr constant [7 x i8] c"I32_KW\00"
@str.114 = private unnamed_addr constant [7 x i8] c"I64_KW\00"
@str.115 = private unnamed_addr constant [8 x i8] c"I128_KW\00"
@str.116 = private unnamed_addr constant [7 x i8] c"INT_KW\00"
@str.117 = private unnamed_addr constant [7 x i8] c"F16_KW\00"
@str.118 = private unnamed_addr constant [7 x i8] c"F32_KW\00"
@str.119 = private unnamed_addr constant [7 x i8] c"F64_KW\00"
@str.120 = private unnamed_addr constant [9 x i8] c"FLOAT_KW\00"
@str.121 = private unnamed_addr constant [8 x i8] c"VOID_KW\00"
@str.122 = private unnamed_addr constant [7 x i8] c"FOR_KW\00"
@str.123 = private unnamed_addr constant [9 x i8] c"WHILE_KW\00"
@str.124 = private unnamed_addr constant [7 x i8] c"FNC_KW\00"
@str.125 = private unnamed_addr constant [9 x i8] c"BREAK_KW\00"
@str.126 = private unnamed_addr constant [12 x i8] c"CONTINUE_KW\00"
@str.127 = private unnamed_addr constant [10 x i8] c"RETURN_KW\00"
@str.128 = private unnamed_addr constant [10 x i8] c"IMPORT_KW\00"
@str.129 = private unnamed_addr constant [11 x i8] c"PRIVATE_KW\00"
@str.130 = private unnamed_addr constant [10 x i8] c"PUBLIC_KW\00"
@str.131 = private unnamed_addr constant [13 x i8] c"PROTECTED_KW\00"
@str.132 = private unnamed_addr constant [6 x i8] c"IN_KW\00"
@str.133 = private unnamed_addr constant [9 x i8] c"CLASS_KW\00"
@str.134 = private unnamed_addr constant [8 x i8] c"ENUM_KW\00"
@str.135 = private unnamed_addr constant [7 x i8] c"NEW_KW\00"
@str.136 = private unnamed_addr constant [6 x i8] c"AS_KW\00"
@str.137 = private unnamed_addr constant [7 x i8] c"LET_KW\00"
@str.138 = private unnamed_addr constant [2 x i8] c"[\00"
@str.139 = private unnamed_addr constant [3 x i8] c" {\00"
@str.140 = private unnamed_addr constant [8 x i8] c"  type:\00"
@str.141 = private unnamed_addr constant [2 x i8] c",\00"
@str.142 = private unnamed_addr constant [9 x i8] c"%s %s %s\00"
@str.143 = private unnamed_addr constant [9 x i8] c"  range:\00"
@str.144 = private unnamed_addr constant [6 x i8] c"%d-%d\00"
@str.145 = private unnamed_addr constant [9 x i8] c"  value:\00"
@str.146 = private unnamed_addr constant [3 x i8] c"\\n\00"
@str.147 = private unnamed_addr constant [4 x i8] c" },\00"
@str.148 = private unnamed_addr constant [2 x i8] c"]\00"
@Node_vtable_data = local_unnamed_addr global %Node_vtable_ty.580160 zeroinitializer
@TypeNode_vtable_data = global %TypeNode_vtable_ty.580162 zeroinitializer
@"Array<TypeNode>_vtable_data" = global %"Array<TypeNode>_vtable_ty.580166" { void (%"Array<TypeNode>.580165"*)* @"Array<TypeNode>_resize", void (%"Array<TypeNode>.580165"*, i64, i64)* @"Array<TypeNode>_swap", void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)* @"Array<TypeNode>___sl__", void (%"Array<TypeNode>.580165"*, i64, %TypeNode.580161*)* @"Array<TypeNode>___setitem__", void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)* @"Array<TypeNode>_append", %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)* @"Array<TypeNode>___getitem__", i1 (%"Array<TypeNode>.580165"*, %"Array<TypeNode>.580165"*)* @"Array<TypeNode>___eq__", i1 (%"Array<TypeNode>.580165"*, %TypeNode.580161*)* @"Array<TypeNode>___in__", i64 (%"Array<TypeNode>.580165"*, %TypeNode.580161*)* @"Array<TypeNode>_find", %string.580129* (%"Array<TypeNode>.580165"*, %string.580129*)* @"Array<TypeNode>_join", %string.580129* (%"Array<TypeNode>.580165"*)* @"Array<TypeNode>___as_string__" }
@str.149 = private unnamed_addr constant [10 x i8] c"@TypeNode\00"
@RecordTypeNode_vtable_data = global %RecordTypeNode_vtable_ty.580164 zeroinitializer
@FunctionTypeNode_vtable_data = global %FunctionTypeNode_vtable_ty.580168 zeroinitializer
@PointerTypeNode_vtable_data = global %PointerTypeNode_vtable_ty.580170 zeroinitializer
@StatementNode_vtable_data = global %StatementNode_vtable_ty.580172 zeroinitializer
@"Array<StatementNode>_vtable_data" = global %"Array<StatementNode>_vtable_ty.580176" { void (%"Array<StatementNode>.580175"*)* @"Array<StatementNode>_resize", void (%"Array<StatementNode>.580175"*, i64, i64)* @"Array<StatementNode>_swap", void (%"Array<StatementNode>.580175"*, %StatementNode.580171*)* @"Array<StatementNode>___sl__", void (%"Array<StatementNode>.580175"*, i64, %StatementNode.580171*)* @"Array<StatementNode>___setitem__", void (%"Array<StatementNode>.580175"*, %StatementNode.580171*)* @"Array<StatementNode>_append", %StatementNode.580171* (%"Array<StatementNode>.580175"*, i64)* @"Array<StatementNode>___getitem__", i1 (%"Array<StatementNode>.580175"*, %"Array<StatementNode>.580175"*)* @"Array<StatementNode>___eq__", i1 (%"Array<StatementNode>.580175"*, %StatementNode.580171*)* @"Array<StatementNode>___in__", i64 (%"Array<StatementNode>.580175"*, %StatementNode.580171*)* @"Array<StatementNode>_find", %string.580129* (%"Array<StatementNode>.580175"*, %string.580129*)* @"Array<StatementNode>_join", %string.580129* (%"Array<StatementNode>.580175"*)* @"Array<StatementNode>___as_string__" }
@str.150 = private unnamed_addr constant [15 x i8] c"@StatementNode\00"
@BlockNode_vtable_data = global %BlockNode_vtable_ty.580174 zeroinitializer
@ExpressionNode_vtable_data = global %ExpressionNode_vtable_ty.580178 zeroinitializer
@ArrayTypeNode_vtable_data = global %ArrayTypeNode_vtable_ty.580180 zeroinitializer
@IntExpressionNode_vtable_data = global %IntExpressionNode_vtable_ty.580182 zeroinitializer
@FloatExpressionNode_vtable_data = global %FloatExpressionNode_vtable_ty.580184 zeroinitializer
@CharExpressionNode_vtable_data = global %CharExpressionNode_vtable_ty.580186 zeroinitializer
@"Array<ExpressionNode>_vtable_data" = global %"Array<ExpressionNode>_vtable_ty.580190" { void (%"Array<ExpressionNode>.580189"*)* @"Array<ExpressionNode>_resize", void (%"Array<ExpressionNode>.580189"*, i64, i64)* @"Array<ExpressionNode>_swap", void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)* @"Array<ExpressionNode>___sl__", void (%"Array<ExpressionNode>.580189"*, i64, %ExpressionNode.580177*)* @"Array<ExpressionNode>___setitem__", void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)* @"Array<ExpressionNode>_append", %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)* @"Array<ExpressionNode>___getitem__", i1 (%"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"*)* @"Array<ExpressionNode>___eq__", i1 (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)* @"Array<ExpressionNode>___in__", i64 (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)* @"Array<ExpressionNode>_find", %string.580129* (%"Array<ExpressionNode>.580189"*, %string.580129*)* @"Array<ExpressionNode>_join", %string.580129* (%"Array<ExpressionNode>.580189"*)* @"Array<ExpressionNode>___as_string__" }
@str.151 = private unnamed_addr constant [16 x i8] c"@ExpressionNode\00"
@StringExpressionNode_vtable_data = global %StringExpressionNode_vtable_ty.580188 zeroinitializer
@VarAccessExpressionNode_vtable_data = global %VarAccessExpressionNode_vtable_ty.580192 zeroinitializer
@ArrayExpressionNode_vtable_data = global %ArrayExpressionNode_vtable_ty.580194 zeroinitializer
@NewExpressionNode_vtable_data = global %NewExpressionNode_vtable_ty.580196 zeroinitializer
@ExpressionIndexNode_vtable_data = global %ExpressionIndexNode_vtable_ty.580198 zeroinitializer
@MemberExpressionNode_vtable_data = global %MemberExpressionNode_vtable_ty.580200 zeroinitializer
@CallExpressionNode_vtable_data = global %CallExpressionNode_vtable_ty.580202 zeroinitializer
@TypeCastExpressionNode_vtable_data = global %TypeCastExpressionNode_vtable_ty.580204 zeroinitializer
@BinaryExpressionNode_vtable_data = global %BinaryExpressionNode_vtable_ty.580206 zeroinitializer
@TernaryExpressionNode_vtable_data = global %TernaryExpressionNode_vtable_ty.580208 zeroinitializer
@UnaryExpressionNode_vtable_data = global %UnaryExpressionNode_vtable_ty.580210 zeroinitializer
@IfStatementNode_vtable_data = global %IfStatementNode_vtable_ty.580212 zeroinitializer
@WhileStatementNode_vtable_data = global %WhileStatementNode_vtable_ty.580214 zeroinitializer
@ForStatementNode_vtable_data = global %ForStatementNode_vtable_ty.580216 zeroinitializer
@ReturnStatementNode_vtable_data = global %ReturnStatementNode_vtable_ty.580218 zeroinitializer
@VarDeclarationStatement_vtable_data = global %VarDeclarationStatement_vtable_ty.580220 zeroinitializer
@ConstDeclarationStatement_vtable_data = global %ConstDeclarationStatement_vtable_ty.580222 zeroinitializer
@ArgNode_vtable_data = global %ArgNode_vtable_ty.580224 zeroinitializer
@"Array<ArgNode>_vtable_data" = global %"Array<ArgNode>_vtable_ty.580228" { void (%"Array<ArgNode>.580227"*)* @"Array<ArgNode>_resize", void (%"Array<ArgNode>.580227"*, i64, i64)* @"Array<ArgNode>_swap", void (%"Array<ArgNode>.580227"*, %ArgNode.580223*)* @"Array<ArgNode>___sl__", void (%"Array<ArgNode>.580227"*, i64, %ArgNode.580223*)* @"Array<ArgNode>___setitem__", void (%"Array<ArgNode>.580227"*, %ArgNode.580223*)* @"Array<ArgNode>_append", %ArgNode.580223* (%"Array<ArgNode>.580227"*, i64)* @"Array<ArgNode>___getitem__", i1 (%"Array<ArgNode>.580227"*, %"Array<ArgNode>.580227"*)* @"Array<ArgNode>___eq__", i1 (%"Array<ArgNode>.580227"*, %ArgNode.580223*)* @"Array<ArgNode>___in__", i64 (%"Array<ArgNode>.580227"*, %ArgNode.580223*)* @"Array<ArgNode>_find", %string.580129* (%"Array<ArgNode>.580227"*, %string.580129*)* @"Array<ArgNode>_join", %string.580129* (%"Array<ArgNode>.580227"*)* @"Array<ArgNode>___as_string__" }
@str.152 = private unnamed_addr constant [9 x i8] c"@ArgNode\00"
@FunctionDeclarationNode_vtable_data = global %FunctionDeclarationNode_vtable_ty.580226 zeroinitializer
@MethodNode_vtable_data = global %MethodNode_vtable_ty.580230 zeroinitializer
@FieldNode_vtable_data = global %FieldNode_vtable_ty.580232 zeroinitializer
@GenericParameterNode_vtable_data = global %GenericParameterNode_vtable_ty.580234 zeroinitializer
@"Array<GenericParameterNode>_vtable_data" = global %"Array<GenericParameterNode>_vtable_ty.580240" { void (%"Array<GenericParameterNode>.580237"*)* @"Array<GenericParameterNode>_resize", void (%"Array<GenericParameterNode>.580237"*, i64, i64)* @"Array<GenericParameterNode>_swap", void (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)* @"Array<GenericParameterNode>___sl__", void (%"Array<GenericParameterNode>.580237"*, i64, %GenericParameterNode.580233*)* @"Array<GenericParameterNode>___setitem__", void (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)* @"Array<GenericParameterNode>_append", %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)* @"Array<GenericParameterNode>___getitem__", i1 (%"Array<GenericParameterNode>.580237"*, %"Array<GenericParameterNode>.580237"*)* @"Array<GenericParameterNode>___eq__", i1 (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)* @"Array<GenericParameterNode>___in__", i64 (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)* @"Array<GenericParameterNode>_find", %string.580129* (%"Array<GenericParameterNode>.580237"*, %string.580129*)* @"Array<GenericParameterNode>_join", %string.580129* (%"Array<GenericParameterNode>.580237"*)* @"Array<GenericParameterNode>___as_string__" }
@str.153 = private unnamed_addr constant [22 x i8] c"@GenericParameterNode\00"
@"Array<FieldNode>_vtable_data" = global %"Array<FieldNode>_vtable_ty.580241" { void (%"Array<FieldNode>.580238"*)* @"Array<FieldNode>_resize", void (%"Array<FieldNode>.580238"*, i64, i64)* @"Array<FieldNode>_swap", void (%"Array<FieldNode>.580238"*, %FieldNode.580231*)* @"Array<FieldNode>___sl__", void (%"Array<FieldNode>.580238"*, i64, %FieldNode.580231*)* @"Array<FieldNode>___setitem__", void (%"Array<FieldNode>.580238"*, %FieldNode.580231*)* @"Array<FieldNode>_append", %FieldNode.580231* (%"Array<FieldNode>.580238"*, i64)* @"Array<FieldNode>___getitem__", i1 (%"Array<FieldNode>.580238"*, %"Array<FieldNode>.580238"*)* @"Array<FieldNode>___eq__", i1 (%"Array<FieldNode>.580238"*, %FieldNode.580231*)* @"Array<FieldNode>___in__", i64 (%"Array<FieldNode>.580238"*, %FieldNode.580231*)* @"Array<FieldNode>_find", %string.580129* (%"Array<FieldNode>.580238"*, %string.580129*)* @"Array<FieldNode>_join", %string.580129* (%"Array<FieldNode>.580238"*)* @"Array<FieldNode>___as_string__" }
@str.154 = private unnamed_addr constant [11 x i8] c"@FieldNode\00"
@"Array<MethodNode>_vtable_data" = global %"Array<MethodNode>_vtable_ty.580242" { void (%"Array<MethodNode>.580239"*)* @"Array<MethodNode>_resize", void (%"Array<MethodNode>.580239"*, i64, i64)* @"Array<MethodNode>_swap", void (%"Array<MethodNode>.580239"*, %MethodNode.580229*)* @"Array<MethodNode>___sl__", void (%"Array<MethodNode>.580239"*, i64, %MethodNode.580229*)* @"Array<MethodNode>___setitem__", void (%"Array<MethodNode>.580239"*, %MethodNode.580229*)* @"Array<MethodNode>_append", %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)* @"Array<MethodNode>___getitem__", i1 (%"Array<MethodNode>.580239"*, %"Array<MethodNode>.580239"*)* @"Array<MethodNode>___eq__", i1 (%"Array<MethodNode>.580239"*, %MethodNode.580229*)* @"Array<MethodNode>___in__", i64 (%"Array<MethodNode>.580239"*, %MethodNode.580229*)* @"Array<MethodNode>_find", %string.580129* (%"Array<MethodNode>.580239"*, %string.580129*)* @"Array<MethodNode>_join", %string.580129* (%"Array<MethodNode>.580239"*)* @"Array<MethodNode>___as_string__" }
@str.155 = private unnamed_addr constant [12 x i8] c"@MethodNode\00"
@ClassDeclarationNode_vtable_data = global %ClassDeclarationNode_vtable_ty.580236 zeroinitializer
@EnumNodeField_vtable_data = global %EnumNodeField_vtable_ty.580244 zeroinitializer
@"Array<EnumNodeField>_vtable_data" = global %"Array<EnumNodeField>_vtable_ty.580248" { void (%"Array<EnumNodeField>.580247"*)* @"Array<EnumNodeField>_resize", void (%"Array<EnumNodeField>.580247"*, i64, i64)* @"Array<EnumNodeField>_swap", void (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)* @"Array<EnumNodeField>___sl__", void (%"Array<EnumNodeField>.580247"*, i64, %EnumNodeField.580243*)* @"Array<EnumNodeField>___setitem__", void (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)* @"Array<EnumNodeField>_append", %EnumNodeField.580243* (%"Array<EnumNodeField>.580247"*, i64)* @"Array<EnumNodeField>___getitem__", i1 (%"Array<EnumNodeField>.580247"*, %"Array<EnumNodeField>.580247"*)* @"Array<EnumNodeField>___eq__", i1 (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)* @"Array<EnumNodeField>___in__", i64 (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)* @"Array<EnumNodeField>_find", %string.580129* (%"Array<EnumNodeField>.580247"*, %string.580129*)* @"Array<EnumNodeField>_join", %string.580129* (%"Array<EnumNodeField>.580247"*)* @"Array<EnumNodeField>___as_string__" }
@str.156 = private unnamed_addr constant [15 x i8] c"@EnumNodeField\00"
@EnumNode_vtable_data = global %EnumNode_vtable_ty.580246 zeroinitializer
@"Array<IdentifierToken>_vtable_data" = global %"Array<IdentifierToken>_vtable_ty.580252" { void (%"Array<IdentifierToken>.580251"*)* @"Array<IdentifierToken>_resize", void (%"Array<IdentifierToken>.580251"*, i64, i64)* @"Array<IdentifierToken>_swap", void (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)* @"Array<IdentifierToken>___sl__", void (%"Array<IdentifierToken>.580251"*, i64, %IdentifierToken.580155*)* @"Array<IdentifierToken>___setitem__", void (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)* @"Array<IdentifierToken>_append", %IdentifierToken.580155* (%"Array<IdentifierToken>.580251"*, i64)* @"Array<IdentifierToken>___getitem__", i1 (%"Array<IdentifierToken>.580251"*, %"Array<IdentifierToken>.580251"*)* @"Array<IdentifierToken>___eq__", i1 (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)* @"Array<IdentifierToken>___in__", i64 (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)* @"Array<IdentifierToken>_find", %string.580129* (%"Array<IdentifierToken>.580251"*, %string.580129*)* @"Array<IdentifierToken>_join", %string.580129* (%"Array<IdentifierToken>.580251"*)* @"Array<IdentifierToken>___as_string__" }
@str.157 = private unnamed_addr constant [17 x i8] c"@IdentifierToken\00"
@ImportNode_vtable_data = global %ImportNode_vtable_ty.580250 zeroinitializer
@TypeAliasNode_vtable_data = global %TypeAliasNode_vtable_ty.580254 zeroinitializer
@"Array<FunctionDeclarationNode>_vtable_data" = global %"Array<FunctionDeclarationNode>_vtable_ty.580264" { void (%"Array<FunctionDeclarationNode>.580257"*)* @"Array<FunctionDeclarationNode>_resize", void (%"Array<FunctionDeclarationNode>.580257"*, i64, i64)* @"Array<FunctionDeclarationNode>_swap", void (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)* @"Array<FunctionDeclarationNode>___sl__", void (%"Array<FunctionDeclarationNode>.580257"*, i64, %FunctionDeclarationNode.580225*)* @"Array<FunctionDeclarationNode>___setitem__", void (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)* @"Array<FunctionDeclarationNode>_append", %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)* @"Array<FunctionDeclarationNode>___getitem__", i1 (%"Array<FunctionDeclarationNode>.580257"*, %"Array<FunctionDeclarationNode>.580257"*)* @"Array<FunctionDeclarationNode>___eq__", i1 (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)* @"Array<FunctionDeclarationNode>___in__", i64 (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)* @"Array<FunctionDeclarationNode>_find", %string.580129* (%"Array<FunctionDeclarationNode>.580257"*, %string.580129*)* @"Array<FunctionDeclarationNode>_join", %string.580129* (%"Array<FunctionDeclarationNode>.580257"*)* @"Array<FunctionDeclarationNode>___as_string__" }
@str.158 = private unnamed_addr constant [25 x i8] c"@FunctionDeclarationNode\00"
@"Array<ClassDeclarationNode>_vtable_data" = global %"Array<ClassDeclarationNode>_vtable_ty.580265" { void (%"Array<ClassDeclarationNode>.580258"*)* @"Array<ClassDeclarationNode>_resize", void (%"Array<ClassDeclarationNode>.580258"*, i64, i64)* @"Array<ClassDeclarationNode>_swap", void (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)* @"Array<ClassDeclarationNode>___sl__", void (%"Array<ClassDeclarationNode>.580258"*, i64, %ClassDeclarationNode.580235*)* @"Array<ClassDeclarationNode>___setitem__", void (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)* @"Array<ClassDeclarationNode>_append", %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)* @"Array<ClassDeclarationNode>___getitem__", i1 (%"Array<ClassDeclarationNode>.580258"*, %"Array<ClassDeclarationNode>.580258"*)* @"Array<ClassDeclarationNode>___eq__", i1 (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)* @"Array<ClassDeclarationNode>___in__", i64 (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)* @"Array<ClassDeclarationNode>_find", %string.580129* (%"Array<ClassDeclarationNode>.580258"*, %string.580129*)* @"Array<ClassDeclarationNode>_join", %string.580129* (%"Array<ClassDeclarationNode>.580258"*)* @"Array<ClassDeclarationNode>___as_string__" }
@str.159 = private unnamed_addr constant [22 x i8] c"@ClassDeclarationNode\00"
@"Array<EnumNode>_vtable_data" = global %"Array<EnumNode>_vtable_ty.580266" { void (%"Array<EnumNode>.580259"*)* @"Array<EnumNode>_resize", void (%"Array<EnumNode>.580259"*, i64, i64)* @"Array<EnumNode>_swap", void (%"Array<EnumNode>.580259"*, %EnumNode.580245*)* @"Array<EnumNode>___sl__", void (%"Array<EnumNode>.580259"*, i64, %EnumNode.580245*)* @"Array<EnumNode>___setitem__", void (%"Array<EnumNode>.580259"*, %EnumNode.580245*)* @"Array<EnumNode>_append", %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)* @"Array<EnumNode>___getitem__", i1 (%"Array<EnumNode>.580259"*, %"Array<EnumNode>.580259"*)* @"Array<EnumNode>___eq__", i1 (%"Array<EnumNode>.580259"*, %EnumNode.580245*)* @"Array<EnumNode>___in__", i64 (%"Array<EnumNode>.580259"*, %EnumNode.580245*)* @"Array<EnumNode>_find", %string.580129* (%"Array<EnumNode>.580259"*, %string.580129*)* @"Array<EnumNode>_join", %string.580129* (%"Array<EnumNode>.580259"*)* @"Array<EnumNode>___as_string__" }
@str.160 = private unnamed_addr constant [10 x i8] c"@EnumNode\00"
@"Array<ImportNode>_vtable_data" = global %"Array<ImportNode>_vtable_ty.580267" { void (%"Array<ImportNode>.580260"*)* @"Array<ImportNode>_resize", void (%"Array<ImportNode>.580260"*, i64, i64)* @"Array<ImportNode>_swap", void (%"Array<ImportNode>.580260"*, %ImportNode.580249*)* @"Array<ImportNode>___sl__", void (%"Array<ImportNode>.580260"*, i64, %ImportNode.580249*)* @"Array<ImportNode>___setitem__", void (%"Array<ImportNode>.580260"*, %ImportNode.580249*)* @"Array<ImportNode>_append", %ImportNode.580249* (%"Array<ImportNode>.580260"*, i64)* @"Array<ImportNode>___getitem__", i1 (%"Array<ImportNode>.580260"*, %"Array<ImportNode>.580260"*)* @"Array<ImportNode>___eq__", i1 (%"Array<ImportNode>.580260"*, %ImportNode.580249*)* @"Array<ImportNode>___in__", i64 (%"Array<ImportNode>.580260"*, %ImportNode.580249*)* @"Array<ImportNode>_find", %string.580129* (%"Array<ImportNode>.580260"*, %string.580129*)* @"Array<ImportNode>_join", %string.580129* (%"Array<ImportNode>.580260"*)* @"Array<ImportNode>___as_string__" }
@str.161 = private unnamed_addr constant [12 x i8] c"@ImportNode\00"
@"Array<ConstDeclarationStatement>_vtable_data" = global %"Array<ConstDeclarationStatement>_vtable_ty.580268" { void (%"Array<ConstDeclarationStatement>.580261"*)* @"Array<ConstDeclarationStatement>_resize", void (%"Array<ConstDeclarationStatement>.580261"*, i64, i64)* @"Array<ConstDeclarationStatement>_swap", void (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)* @"Array<ConstDeclarationStatement>___sl__", void (%"Array<ConstDeclarationStatement>.580261"*, i64, %ConstDeclarationStatement.580221*)* @"Array<ConstDeclarationStatement>___setitem__", void (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)* @"Array<ConstDeclarationStatement>_append", %ConstDeclarationStatement.580221* (%"Array<ConstDeclarationStatement>.580261"*, i64)* @"Array<ConstDeclarationStatement>___getitem__", i1 (%"Array<ConstDeclarationStatement>.580261"*, %"Array<ConstDeclarationStatement>.580261"*)* @"Array<ConstDeclarationStatement>___eq__", i1 (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)* @"Array<ConstDeclarationStatement>___in__", i64 (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)* @"Array<ConstDeclarationStatement>_find", %string.580129* (%"Array<ConstDeclarationStatement>.580261"*, %string.580129*)* @"Array<ConstDeclarationStatement>_join", %string.580129* (%"Array<ConstDeclarationStatement>.580261"*)* @"Array<ConstDeclarationStatement>___as_string__" }
@str.162 = private unnamed_addr constant [27 x i8] c"@ConstDeclarationStatement\00"
@"Array<VarDeclarationStatement>_vtable_data" = global %"Array<VarDeclarationStatement>_vtable_ty.580269" { void (%"Array<VarDeclarationStatement>.580262"*)* @"Array<VarDeclarationStatement>_resize", void (%"Array<VarDeclarationStatement>.580262"*, i64, i64)* @"Array<VarDeclarationStatement>_swap", void (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)* @"Array<VarDeclarationStatement>___sl__", void (%"Array<VarDeclarationStatement>.580262"*, i64, %VarDeclarationStatement.580219*)* @"Array<VarDeclarationStatement>___setitem__", void (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)* @"Array<VarDeclarationStatement>_append", %VarDeclarationStatement.580219* (%"Array<VarDeclarationStatement>.580262"*, i64)* @"Array<VarDeclarationStatement>___getitem__", i1 (%"Array<VarDeclarationStatement>.580262"*, %"Array<VarDeclarationStatement>.580262"*)* @"Array<VarDeclarationStatement>___eq__", i1 (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)* @"Array<VarDeclarationStatement>___in__", i64 (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)* @"Array<VarDeclarationStatement>_find", %string.580129* (%"Array<VarDeclarationStatement>.580262"*, %string.580129*)* @"Array<VarDeclarationStatement>_join", %string.580129* (%"Array<VarDeclarationStatement>.580262"*)* @"Array<VarDeclarationStatement>___as_string__" }
@str.163 = private unnamed_addr constant [25 x i8] c"@VarDeclarationStatement\00"
@"Array<TypeAliasNode>_vtable_data" = global %"Array<TypeAliasNode>_vtable_ty.580270" { void (%"Array<TypeAliasNode>.580263"*)* @"Array<TypeAliasNode>_resize", void (%"Array<TypeAliasNode>.580263"*, i64, i64)* @"Array<TypeAliasNode>_swap", void (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)* @"Array<TypeAliasNode>___sl__", void (%"Array<TypeAliasNode>.580263"*, i64, %TypeAliasNode.580253*)* @"Array<TypeAliasNode>___setitem__", void (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)* @"Array<TypeAliasNode>_append", %TypeAliasNode.580253* (%"Array<TypeAliasNode>.580263"*, i64)* @"Array<TypeAliasNode>___getitem__", i1 (%"Array<TypeAliasNode>.580263"*, %"Array<TypeAliasNode>.580263"*)* @"Array<TypeAliasNode>___eq__", i1 (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)* @"Array<TypeAliasNode>___in__", i64 (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)* @"Array<TypeAliasNode>_find", %string.580129* (%"Array<TypeAliasNode>.580263"*, %string.580129*)* @"Array<TypeAliasNode>_join", %string.580129* (%"Array<TypeAliasNode>.580263"*)* @"Array<TypeAliasNode>___as_string__" }
@str.164 = private unnamed_addr constant [15 x i8] c"@TypeAliasNode\00"
@ModuleAST_vtable_data = global %ModuleAST_vtable_ty.580256 zeroinitializer
@Parser_vtable_data = global %Parser_vtable_ty.580272 { i1 (%Parser.580271*)* @Parser_can_parse, void (%Parser.580271*, %string.580129*)* @Parser_error, void (%Parser.580271*)* @Parser_advance, %Token.580141* (%Parser.580271*, i64)* @Parser_peek, %Token.580141* (%Parser.580271*, i64)* @Parser_eat, void (%Parser.580271*)* @Parser_new_lines, %TypeNode.580161* (%Parser.580271*)* @Parser_parse_primitive_type, void (%Parser.580271*, %"Array<TypeNode>.580165"*)* @Parser_parse_type_list, %RecordTypeNode.580163* (%Parser.580271*)* @Parser_parse_object_type, %FunctionTypeNode.580167* (%Parser.580271*)* @Parser_parse_function_type, %TypeNode.580161* (%Parser.580271*)* @Parser_parse_type, void (%Parser.580271*, %"Array<ExpressionNode>.580189"*)* @Parser_parse_expression_list, %ArrayExpressionNode.580193* (%Parser.580271*)* @Parser_parse_array_expression, %NewExpressionNode.580195* (%Parser.580271*)* @Parser_parse_new_expression, %StringExpressionNode.580187* (%Parser.580271*)* @Parser_parse_string, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_atom, %ExpressionIndexNode.580197* (%Parser.580271*, %ExpressionNode.580177*)* @Parser_parse_index_expression, %CallExpressionNode.580201* (%Parser.580271*, %ExpressionNode.580177*)* @Parser_parse_call_expression, %MemberExpressionNode.580199* (%Parser.580271*, %ExpressionNode.580177*)* @Parser_parse_member_expression, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_lhs_expression_allow_call, i64 (%Parser.580271*)* @Parser_is_unary_op, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_unary_expression, i64 (%Parser.580271*)* @Parser_is_term_expr_op, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_term_expression, i64 (%Parser.580271*)* @Parser_is_arith_expr_op, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_arithmetic_expression, i64 (%Parser.580271*)* @Parser_is_bitshift_expr_op, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_bitshift_expression, i64 (%Parser.580271*)* @Parser_is_comp_expr_op, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_comparasion_expression, i64 (%Parser.580271*)* @Parser_is_bit_expr_op, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_bit_expression, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_range_expression, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_typecast_expression, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_ternary_expression, i64 (%Parser.580271*)* @Parser_is_assign_op, %ExpressionNode.580177* (%Parser.580271*)* @Parser_parse_expression, %IfStatementNode.580211* (%Parser.580271*)* @Parser_parse_if_statement, %WhileStatementNode.580213* (%Parser.580271*)* @Parser_parse_while_statement, %ForStatementNode.580215* (%Parser.580271*)* @Parser_parse_for_statement, %VarDeclarationStatement.580219* (%Parser.580271*)* @Parser_parse_variable_declaration_statement, %ReturnStatementNode.580217* (%Parser.580271*)* @Parser_parse_return_statement, %StatementNode.580171* (%Parser.580271*)* @Parser_parse_statement, %BlockNode.580173* (%Parser.580271*)* @Parser_parse_block, %TypeAliasNode.580253* (%Parser.580271*)* @Parser_parse_type_alias, %ArgNode.580223* (%Parser.580271*)* @Parser_parse_arg, void (%Parser.580271*, %"Array<ArgNode>.580227"*)* @Parser_parse_args, %FunctionDeclarationNode.580225* (%Parser.580271*)* @Parser_parse_function, %MethodNode.580229* (%Parser.580271*)* @Parser_parse_method, i64 (%Parser.580271*)* @Parser_parse_access_modifier, void (%Parser.580271*, %ClassDeclarationNode.580235*)* @Parser_parse_class_block, void (%Parser.580271*, %"Array<GenericParameterNode>.580237"*)* @Parser_parse_generic_parameters, %ClassDeclarationNode.580235* (%Parser.580271*)* @Parser_parse_class, %ConstDeclarationStatement.580221* (%Parser.580271*)* @Parser_parse_const_declaration_statement, %ImportNode.580249* (%Parser.580271*)* @Parser_parse_import, %EnumNode.580245* (%Parser.580271*)* @Parser_parse_enum, %ModuleAST.580255* (%Parser.580271*, %"Array<Token>.580152"*, %"Array<FloError>.580139"*)* @Parser_parse }
@str.165 = private unnamed_addr constant [23 x i8] c"Expected an Identifier\00"
@str.166 = private unnamed_addr constant [13 x i8] c"Expected '='\00"
@str.167 = private unnamed_addr constant [13 x i8] c"Expected ':'\00"
@str.168 = private unnamed_addr constant [13 x i8] c"Expected '('\00"
@str.169 = private unnamed_addr constant [13 x i8] c"Expected ')'\00"
@str.170 = private unnamed_addr constant [13 x i8] c"Expected '{'\00"
@str.171 = private unnamed_addr constant [13 x i8] c"Expected '}'\00"
@str.172 = private unnamed_addr constant [13 x i8] c"Expected ','\00"
@str.173 = private unnamed_addr constant [13 x i8] c"Expected '<'\00"
@str.176 = private unnamed_addr constant [27 x i8] c"Expected a type definition\00"
@str.177 = private unnamed_addr constant [6 x i8] c"Array\00"
@str.178 = private unnamed_addr constant [29 x i8] c"Expected an Expression value\00"
@str.179 = private unnamed_addr constant [29 x i8] c"'%s' has no type information\00"
@str.180 = private unnamed_addr constant [5 x i8] c"this\00"
@str.181 = private unnamed_addr constant [20 x i8] c"Expected ':' or '('\00"
@str.182 = private unnamed_addr constant [5 x i8] c"type\00"
@str.183 = private unnamed_addr constant [80 x i8] c"Illegal expression expected: 'fnc', 'class', 'enum', 'import', 'const' or 'let'\00"
@Type_vtable_data = global %Type_vtable_ty.580274 zeroinitializer
@BooleanType_vtable_data = global %BooleanType_vtable_ty.580276 zeroinitializer
@PointerType_vtable_data = global %PointerType_vtable_ty.580278 zeroinitializer
@"Array<Type>_vtable_data" = global %"Array<Type>_vtable_ty.580282" { void (%"Array<Type>.580281"*)* @"Array<Type>_resize", void (%"Array<Type>.580281"*, i64, i64)* @"Array<Type>_swap", void (%"Array<Type>.580281"*, %Type.580273*)* @"Array<Type>___sl__", void (%"Array<Type>.580281"*, i64, %Type.580273*)* @"Array<Type>___setitem__", void (%"Array<Type>.580281"*, %Type.580273*)* @"Array<Type>_append", %Type.580273* (%"Array<Type>.580281"*, i64)* @"Array<Type>___getitem__", i1 (%"Array<Type>.580281"*, %"Array<Type>.580281"*)* @"Array<Type>___eq__", i1 (%"Array<Type>.580281"*, %Type.580273*)* @"Array<Type>___in__", i64 (%"Array<Type>.580281"*, %Type.580273*)* @"Array<Type>_find", %string.580129* (%"Array<Type>.580281"*, %string.580129*)* @"Array<Type>_join", %string.580129* (%"Array<Type>.580281"*)* @"Array<Type>___as_string__" }
@str.184 = private unnamed_addr constant [6 x i8] c"@Type\00"
@FunctionType_vtable_data = global %FunctionType_vtable_ty.580280 zeroinitializer
@Value_vtable_data = local_unnamed_addr global %Value_vtable_ty.580284 zeroinitializer
@Statement_vtable_data = global %Statement_vtable_ty.580286 zeroinitializer
@TypeId_vtable_data = local_unnamed_addr global %TypeId_vtable_ty.580288 { i1 (%TypeId.580287*, %TypeId.580287*)* @TypeId___eq__ }
@ClassId_vtable_data = global %ClassId_vtable_ty.580290 { i1 (%TypeId.580287*, %TypeId.580287*)* @TypeId___eq__ }
@EnumId_vtable_data = global %EnumId_vtable_ty.580292 { i1 (%TypeId.580287*, %TypeId.580287*)* @TypeId___eq__ }
@Expression_vtable_data = local_unnamed_addr global %Expression_vtable_ty.580294 zeroinitializer
@ArrayType_vtable_data = global %ArrayType_vtable_ty.580296 zeroinitializer
@ObjectType_vtable_data = global %ObjectType_vtable_ty.580298 zeroinitializer
@EnumType_vtable_data = global %EnumType_vtable_ty.580300 zeroinitializer
@StringType_vtable_data = global %StringType_vtable_ty.580302 zeroinitializer
@IntExpression_vtable_data = global %IntExpression_vtable_ty.580304 zeroinitializer
@BooleanExpression_vtable_data = global %BooleanExpression_vtable_ty.580306 zeroinitializer
@FloatExpression_vtable_data = global %FloatExpression_vtable_ty.580308 zeroinitializer
@"Array<Expression>_vtable_data" = global %"Array<Expression>_vtable_ty.580312" { void (%"Array<Expression>.580311"*)* @"Array<Expression>_resize", void (%"Array<Expression>.580311"*, i64, i64)* @"Array<Expression>_swap", void (%"Array<Expression>.580311"*, %Expression.580293*)* @"Array<Expression>___sl__", void (%"Array<Expression>.580311"*, i64, %Expression.580293*)* @"Array<Expression>___setitem__", void (%"Array<Expression>.580311"*, %Expression.580293*)* @"Array<Expression>_append", %Expression.580293* (%"Array<Expression>.580311"*, i64)* @"Array<Expression>___getitem__", i1 (%"Array<Expression>.580311"*, %"Array<Expression>.580311"*)* @"Array<Expression>___eq__", i1 (%"Array<Expression>.580311"*, %Expression.580293*)* @"Array<Expression>___in__", i64 (%"Array<Expression>.580311"*, %Expression.580293*)* @"Array<Expression>_find", %string.580129* (%"Array<Expression>.580311"*, %string.580129*)* @"Array<Expression>_join", %string.580129* (%"Array<Expression>.580311"*)* @"Array<Expression>___as_string__" }
@str.185 = private unnamed_addr constant [12 x i8] c"@Expression\00"
@StringExpression_vtable_data = global %StringExpression_vtable_ty.580310 zeroinitializer
@NullExpression_vtable_data = global %NullExpression_vtable_ty.580314 zeroinitializer
@ArrayExpression_vtable_data = global %ArrayExpression_vtable_ty.580316 zeroinitializer
@BinaryExpression_vtable_data = global %BinaryExpression_vtable_ty.580318 zeroinitializer
@UnaryExpression_vtable_data = global %UnaryExpression_vtable_ty.580320 zeroinitializer
@TernaryExpression_vtable_data = global %TernaryExpression_vtable_ty.580322 zeroinitializer
@TypeCastExpression_vtable_data = global %TypeCastExpression_vtable_ty.580324 zeroinitializer
@NewExpression_vtable_data = global %NewExpression_vtable_ty.580326 zeroinitializer
@IndexExpression_vtable_data = global %IndexExpression_vtable_ty.580328 zeroinitializer
@CallExpression_vtable_data = global %CallExpression_vtable_ty.580330 zeroinitializer
@VarId_vtable_data = global %VarId_vtable_ty.580332 zeroinitializer
@ClassVarId_vtable_data = global %ClassVarId_vtable_ty.580334 zeroinitializer
@EnumVarId_vtable_data = global %EnumVarId_vtable_ty.580336 zeroinitializer
@ConstId_vtable_data = global %ConstId_vtable_ty.580338 zeroinitializer
@PropId_vtable_data = global %PropId_vtable_ty.580340 zeroinitializer
@MemberExpression_vtable_data = global %MemberExpression_vtable_ty.580342 zeroinitializer
@VarAccessExpression_vtable_data = global %VarAccessExpression_vtable_ty.580344 zeroinitializer
@"Array<Statement>_vtable_data" = global %"Array<Statement>_vtable_ty.580348" { void (%"Array<Statement>.580347"*)* @"Array<Statement>_resize", void (%"Array<Statement>.580347"*, i64, i64)* @"Array<Statement>_swap", void (%"Array<Statement>.580347"*, %Statement.580285*)* @"Array<Statement>___sl__", void (%"Array<Statement>.580347"*, i64, %Statement.580285*)* @"Array<Statement>___setitem__", void (%"Array<Statement>.580347"*, %Statement.580285*)* @"Array<Statement>_append", %Statement.580285* (%"Array<Statement>.580347"*, i64)* @"Array<Statement>___getitem__", i1 (%"Array<Statement>.580347"*, %"Array<Statement>.580347"*)* @"Array<Statement>___eq__", i1 (%"Array<Statement>.580347"*, %Statement.580285*)* @"Array<Statement>___in__", i64 (%"Array<Statement>.580347"*, %Statement.580285*)* @"Array<Statement>_find", %string.580129* (%"Array<Statement>.580347"*, %string.580129*)* @"Array<Statement>_join", %string.580129* (%"Array<Statement>.580347"*)* @"Array<Statement>___as_string__" }
@str.186 = private unnamed_addr constant [11 x i8] c"@Statement\00"
@Block_vtable_data = global %Block_vtable_ty.580346 zeroinitializer
@IfStatement_vtable_data = global %IfStatement_vtable_ty.580350 zeroinitializer
@VarDeclaration_vtable_data = global %VarDeclaration_vtable_ty.580352 zeroinitializer
@ConstDeclaration_vtable_data = global %ConstDeclaration_vtable_ty.580354 zeroinitializer
@ForStatement_vtable_data = global %ForStatement_vtable_ty.580356 zeroinitializer
@WhileStatement_vtable_data = global %WhileStatement_vtable_ty.580358 zeroinitializer
@ReturnStatement_vtable_data = global %ReturnStatement_vtable_ty.580360 zeroinitializer
@str.187 = private unnamed_addr constant [4 x i8] c"i%d\00"
@str.188 = private unnamed_addr constant [4 x i8] c"f%d\00"
@str.189 = private unnamed_addr constant [7 x i8] c"record\00"
@str.190 = private unnamed_addr constant [8 x i8] c"unknown\00"
@str.191 = private unnamed_addr constant [2 x i8] c"+\00"
@str.192 = private unnamed_addr constant [2 x i8] c"-\00"
@str.193 = private unnamed_addr constant [2 x i8] c"*\00"
@str.194 = private unnamed_addr constant [2 x i8] c"/\00"
@str.195 = private unnamed_addr constant [2 x i8] c"%\00"
@str.196 = private unnamed_addr constant [2 x i8] c">\00"
@str.197 = private unnamed_addr constant [3 x i8] c">=\00"
@str.198 = private unnamed_addr constant [2 x i8] c"<\00"
@str.199 = private unnamed_addr constant [3 x i8] c"<=\00"
@str.200 = private unnamed_addr constant [3 x i8] c"==\00"
@str.201 = private unnamed_addr constant [2 x i8] c"!\00"
@str.202 = private unnamed_addr constant [3 x i8] c"<<\00"
@str.203 = private unnamed_addr constant [3 x i8] c">>\00"
@str.204 = private unnamed_addr constant [2 x i8] c"=\00"
@str.205 = private unnamed_addr constant [3 x i8] c"..\00"
@str.206 = private unnamed_addr constant [8 x i8] c"++(pre)\00"
@str.207 = private unnamed_addr constant [8 x i8] c"--(pre)\00"
@str.208 = private unnamed_addr constant [9 x i8] c"(post)++\00"
@str.209 = private unnamed_addr constant [9 x i8] c"(post)--\00"
@str.210 = private unnamed_addr constant [2 x i8] c"&\00"
@ScopeId_vtable_data = global %ScopeId_vtable_ty.580362 zeroinitializer
@"Bucket<string, VarId>_vtable_data" = global %"Bucket<string, VarId>_vtable_ty.580371" { void (%"Bucket<string, VarId>.580370"*, %string.580129*, %VarId.580331*)* @"Bucket<string, VarId>_set" }
@"Array<Bucket<string, VarId>>_vtable_data" = global %"Array<Bucket<string, VarId>>_vtable_ty.580373" { void (%"Array<Bucket<string, VarId>>.580372"*)* @"Array<Bucket<string, VarId>>_resize", void (%"Array<Bucket<string, VarId>>.580372"*, i64, i64)* @"Array<Bucket<string, VarId>>_swap", void (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)* @"Array<Bucket<string, VarId>>___sl__", void (%"Array<Bucket<string, VarId>>.580372"*, i64, %"Bucket<string, VarId>.580370"*)* @"Array<Bucket<string, VarId>>___setitem__", void (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)* @"Array<Bucket<string, VarId>>_append", %"Bucket<string, VarId>.580370"* (%"Array<Bucket<string, VarId>>.580372"*, i64)* @"Array<Bucket<string, VarId>>___getitem__", i1 (%"Array<Bucket<string, VarId>>.580372"*, %"Array<Bucket<string, VarId>>.580372"*)* @"Array<Bucket<string, VarId>>___eq__", i1 (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)* @"Array<Bucket<string, VarId>>___in__", i64 (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)* @"Array<Bucket<string, VarId>>_find", %string.580129* (%"Array<Bucket<string, VarId>>.580372"*, %string.580129*)* @"Array<Bucket<string, VarId>>_join", %string.580129* (%"Array<Bucket<string, VarId>>.580372"*)* @"Array<Bucket<string, VarId>>___as_string__" }
@str.211 = private unnamed_addr constant [23 x i8] c"@Bucket<string, VarId>\00"
@"Map<string, VarId>_vtable_data" = global %"Map<string, VarId>_vtable_ty.580369" { i64 (%"Map<string, VarId>.580365"*, %string.580129*)* @"Map<string, VarId>_hash_fnc", void (%"Map<string, VarId>.580365"*)* @"Map<string, VarId>_resize", void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)* @"Map<string, VarId>_set", %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)* @"Map<string, VarId>_get", %"Array<Bucket<string, VarId>>.580372"* (%"Map<string, VarId>.580365"*)* @"Map<string, VarId>_get_buckets" }
@"Bucket<string, ClassId>_vtable_data" = global %"Bucket<string, ClassId>_vtable_ty.580376" { void (%"Bucket<string, ClassId>.580375"*, %string.580129*, %ClassId.580289*)* @"Bucket<string, ClassId>_set" }
@"Array<Bucket<string, ClassId>>_vtable_data" = global %"Array<Bucket<string, ClassId>>_vtable_ty.580378" { void (%"Array<Bucket<string, ClassId>>.580377"*)* @"Array<Bucket<string, ClassId>>_resize", void (%"Array<Bucket<string, ClassId>>.580377"*, i64, i64)* @"Array<Bucket<string, ClassId>>_swap", void (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)* @"Array<Bucket<string, ClassId>>___sl__", void (%"Array<Bucket<string, ClassId>>.580377"*, i64, %"Bucket<string, ClassId>.580375"*)* @"Array<Bucket<string, ClassId>>___setitem__", void (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)* @"Array<Bucket<string, ClassId>>_append", %"Bucket<string, ClassId>.580375"* (%"Array<Bucket<string, ClassId>>.580377"*, i64)* @"Array<Bucket<string, ClassId>>___getitem__", i1 (%"Array<Bucket<string, ClassId>>.580377"*, %"Array<Bucket<string, ClassId>>.580377"*)* @"Array<Bucket<string, ClassId>>___eq__", i1 (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)* @"Array<Bucket<string, ClassId>>___in__", i64 (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)* @"Array<Bucket<string, ClassId>>_find", %string.580129* (%"Array<Bucket<string, ClassId>>.580377"*, %string.580129*)* @"Array<Bucket<string, ClassId>>_join", %string.580129* (%"Array<Bucket<string, ClassId>>.580377"*)* @"Array<Bucket<string, ClassId>>___as_string__" }
@str.212 = private unnamed_addr constant [25 x i8] c"@Bucket<string, ClassId>\00"
@"Map<string, ClassId>_vtable_data" = global %"Map<string, ClassId>_vtable_ty.580374" { i64 (%"Map<string, ClassId>.580366"*, %string.580129*)* @"Map<string, ClassId>_hash_fnc", void (%"Map<string, ClassId>.580366"*)* @"Map<string, ClassId>_resize", void (%"Map<string, ClassId>.580366"*, %string.580129*, %ClassId.580289*)* @"Map<string, ClassId>_set", %ClassId.580289* (%"Map<string, ClassId>.580366"*, %string.580129*)* @"Map<string, ClassId>_get", %"Array<Bucket<string, ClassId>>.580377"* (%"Map<string, ClassId>.580366"*)* @"Map<string, ClassId>_get_buckets" }
@"Bucket<string, EnumId>_vtable_data" = global %"Bucket<string, EnumId>_vtable_ty.580381" { void (%"Bucket<string, EnumId>.580380"*, %string.580129*, %EnumId.580291*)* @"Bucket<string, EnumId>_set" }
@"Array<Bucket<string, EnumId>>_vtable_data" = global %"Array<Bucket<string, EnumId>>_vtable_ty.580383" { void (%"Array<Bucket<string, EnumId>>.580382"*)* @"Array<Bucket<string, EnumId>>_resize", void (%"Array<Bucket<string, EnumId>>.580382"*, i64, i64)* @"Array<Bucket<string, EnumId>>_swap", void (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)* @"Array<Bucket<string, EnumId>>___sl__", void (%"Array<Bucket<string, EnumId>>.580382"*, i64, %"Bucket<string, EnumId>.580380"*)* @"Array<Bucket<string, EnumId>>___setitem__", void (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)* @"Array<Bucket<string, EnumId>>_append", %"Bucket<string, EnumId>.580380"* (%"Array<Bucket<string, EnumId>>.580382"*, i64)* @"Array<Bucket<string, EnumId>>___getitem__", i1 (%"Array<Bucket<string, EnumId>>.580382"*, %"Array<Bucket<string, EnumId>>.580382"*)* @"Array<Bucket<string, EnumId>>___eq__", i1 (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)* @"Array<Bucket<string, EnumId>>___in__", i64 (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)* @"Array<Bucket<string, EnumId>>_find", %string.580129* (%"Array<Bucket<string, EnumId>>.580382"*, %string.580129*)* @"Array<Bucket<string, EnumId>>_join", %string.580129* (%"Array<Bucket<string, EnumId>>.580382"*)* @"Array<Bucket<string, EnumId>>___as_string__" }
@str.213 = private unnamed_addr constant [24 x i8] c"@Bucket<string, EnumId>\00"
@"Map<string, EnumId>_vtable_data" = global %"Map<string, EnumId>_vtable_ty.580379" { i64 (%"Map<string, EnumId>.580367"*, %string.580129*)* @"Map<string, EnumId>_hash_fnc", void (%"Map<string, EnumId>.580367"*)* @"Map<string, EnumId>_resize", void (%"Map<string, EnumId>.580367"*, %string.580129*, %EnumId.580291*)* @"Map<string, EnumId>_set", %EnumId.580291* (%"Map<string, EnumId>.580367"*, %string.580129*)* @"Map<string, EnumId>_get", %"Array<Bucket<string, EnumId>>.580382"* (%"Map<string, EnumId>.580367"*)* @"Map<string, EnumId>_get_buckets" }
@"Bucket<string, Type>_vtable_data" = global %"Bucket<string, Type>_vtable_ty.580386" { void (%"Bucket<string, Type>.580385"*, %string.580129*, %Type.580273*)* @"Bucket<string, Type>_set" }
@"Array<Bucket<string, Type>>_vtable_data" = global %"Array<Bucket<string, Type>>_vtable_ty.580388" { void (%"Array<Bucket<string, Type>>.580387"*)* @"Array<Bucket<string, Type>>_resize", void (%"Array<Bucket<string, Type>>.580387"*, i64, i64)* @"Array<Bucket<string, Type>>_swap", void (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)* @"Array<Bucket<string, Type>>___sl__", void (%"Array<Bucket<string, Type>>.580387"*, i64, %"Bucket<string, Type>.580385"*)* @"Array<Bucket<string, Type>>___setitem__", void (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)* @"Array<Bucket<string, Type>>_append", %"Bucket<string, Type>.580385"* (%"Array<Bucket<string, Type>>.580387"*, i64)* @"Array<Bucket<string, Type>>___getitem__", i1 (%"Array<Bucket<string, Type>>.580387"*, %"Array<Bucket<string, Type>>.580387"*)* @"Array<Bucket<string, Type>>___eq__", i1 (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)* @"Array<Bucket<string, Type>>___in__", i64 (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)* @"Array<Bucket<string, Type>>_find", %string.580129* (%"Array<Bucket<string, Type>>.580387"*, %string.580129*)* @"Array<Bucket<string, Type>>_join", %string.580129* (%"Array<Bucket<string, Type>>.580387"*)* @"Array<Bucket<string, Type>>___as_string__" }
@str.214 = private unnamed_addr constant [22 x i8] c"@Bucket<string, Type>\00"
@"Map<string, Type>_vtable_data" = global %"Map<string, Type>_vtable_ty.580384" { i64 (%"Map<string, Type>.580368"*, %string.580129*)* @"Map<string, Type>_hash_fnc", void (%"Map<string, Type>.580368"*)* @"Map<string, Type>_resize", void (%"Map<string, Type>.580368"*, %string.580129*, %Type.580273*)* @"Map<string, Type>_set", %Type.580273* (%"Map<string, Type>.580368"*, %string.580129*)* @"Map<string, Type>_get", %"Array<Bucket<string, Type>>.580387"* (%"Map<string, Type>.580368"*)* @"Map<string, Type>_get_buckets" }
@Scope_vtable_data = global %Scope_vtable_ty.580364 zeroinitializer
@FunctionArg_vtable_data = global %FunctionArg_vtable_ty.580390 zeroinitializer
@"Array<FunctionArg>_vtable_data" = global %"Array<FunctionArg>_vtable_ty.580394" { void (%"Array<FunctionArg>.580393"*)* @"Array<FunctionArg>_resize", void (%"Array<FunctionArg>.580393"*, i64, i64)* @"Array<FunctionArg>_swap", void (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)* @"Array<FunctionArg>___sl__", void (%"Array<FunctionArg>.580393"*, i64, %FunctionArg.580389*)* @"Array<FunctionArg>___setitem__", void (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)* @"Array<FunctionArg>_append", %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)* @"Array<FunctionArg>___getitem__", i1 (%"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"*)* @"Array<FunctionArg>___eq__", i1 (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)* @"Array<FunctionArg>___in__", i64 (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)* @"Array<FunctionArg>_find", %string.580129* (%"Array<FunctionArg>.580393"*, %string.580129*)* @"Array<FunctionArg>_join", %string.580129* (%"Array<FunctionArg>.580393"*)* @"Array<FunctionArg>___as_string__" }
@str.215 = private unnamed_addr constant [13 x i8] c"@FunctionArg\00"
@Function_vtable_data = global %Function_vtable_ty.580392 zeroinitializer
@Var_vtable_data = global %Var_vtable_ty.580396 zeroinitializer
@Const_vtable_data = global %Const_vtable_ty.580398 zeroinitializer
@ClassField_vtable_data = global %ClassField_vtable_ty.580400 zeroinitializer
@ClassMethod_vtable_data = global %ClassMethod_vtable_ty.580402 zeroinitializer
@"Array<ClassField>_vtable_data" = global %"Array<ClassField>_vtable_ty.580408" { void (%"Array<ClassField>.580405"*)* @"Array<ClassField>_resize", void (%"Array<ClassField>.580405"*, i64, i64)* @"Array<ClassField>_swap", void (%"Array<ClassField>.580405"*, %ClassField.580399*)* @"Array<ClassField>___sl__", void (%"Array<ClassField>.580405"*, i64, %ClassField.580399*)* @"Array<ClassField>___setitem__", void (%"Array<ClassField>.580405"*, %ClassField.580399*)* @"Array<ClassField>_append", %ClassField.580399* (%"Array<ClassField>.580405"*, i64)* @"Array<ClassField>___getitem__", i1 (%"Array<ClassField>.580405"*, %"Array<ClassField>.580405"*)* @"Array<ClassField>___eq__", i1 (%"Array<ClassField>.580405"*, %ClassField.580399*)* @"Array<ClassField>___in__", i64 (%"Array<ClassField>.580405"*, %ClassField.580399*)* @"Array<ClassField>_find", %string.580129* (%"Array<ClassField>.580405"*, %string.580129*)* @"Array<ClassField>_join", %string.580129* (%"Array<ClassField>.580405"*)* @"Array<ClassField>___as_string__" }
@str.216 = private unnamed_addr constant [12 x i8] c"@ClassField\00"
@"Array<ClassMethod>_vtable_data" = global %"Array<ClassMethod>_vtable_ty.580409" { void (%"Array<ClassMethod>.580406"*)* @"Array<ClassMethod>_resize", void (%"Array<ClassMethod>.580406"*, i64, i64)* @"Array<ClassMethod>_swap", void (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)* @"Array<ClassMethod>___sl__", void (%"Array<ClassMethod>.580406"*, i64, %ClassMethod.580401*)* @"Array<ClassMethod>___setitem__", void (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)* @"Array<ClassMethod>_append", %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)* @"Array<ClassMethod>___getitem__", i1 (%"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"*)* @"Array<ClassMethod>___eq__", i1 (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)* @"Array<ClassMethod>___in__", i64 (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)* @"Array<ClassMethod>_find", %string.580129* (%"Array<ClassMethod>.580406"*, %string.580129*)* @"Array<ClassMethod>_join", %string.580129* (%"Array<ClassMethod>.580406"*)* @"Array<ClassMethod>___as_string__" }
@str.217 = private unnamed_addr constant [13 x i8] c"@ClassMethod\00"
@"Bucket<string, PropId>_vtable_data" = global %"Bucket<string, PropId>_vtable_ty.580412" { void (%"Bucket<string, PropId>.580411"*, %string.580129*, %PropId.580339*)* @"Bucket<string, PropId>_set" }
@"Array<Bucket<string, PropId>>_vtable_data" = global %"Array<Bucket<string, PropId>>_vtable_ty.580414" { void (%"Array<Bucket<string, PropId>>.580413"*)* @"Array<Bucket<string, PropId>>_resize", void (%"Array<Bucket<string, PropId>>.580413"*, i64, i64)* @"Array<Bucket<string, PropId>>_swap", void (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)* @"Array<Bucket<string, PropId>>___sl__", void (%"Array<Bucket<string, PropId>>.580413"*, i64, %"Bucket<string, PropId>.580411"*)* @"Array<Bucket<string, PropId>>___setitem__", void (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)* @"Array<Bucket<string, PropId>>_append", %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)* @"Array<Bucket<string, PropId>>___getitem__", i1 (%"Array<Bucket<string, PropId>>.580413"*, %"Array<Bucket<string, PropId>>.580413"*)* @"Array<Bucket<string, PropId>>___eq__", i1 (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)* @"Array<Bucket<string, PropId>>___in__", i64 (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)* @"Array<Bucket<string, PropId>>_find", %string.580129* (%"Array<Bucket<string, PropId>>.580413"*, %string.580129*)* @"Array<Bucket<string, PropId>>_join", %string.580129* (%"Array<Bucket<string, PropId>>.580413"*)* @"Array<Bucket<string, PropId>>___as_string__" }
@str.218 = private unnamed_addr constant [24 x i8] c"@Bucket<string, PropId>\00"
@"Map<string, PropId>_vtable_data" = global %"Map<string, PropId>_vtable_ty.580410" { i64 (%"Map<string, PropId>.580407"*, %string.580129*)* @"Map<string, PropId>_hash_fnc", void (%"Map<string, PropId>.580407"*)* @"Map<string, PropId>_resize", void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)* @"Map<string, PropId>_set", %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)* @"Map<string, PropId>_get", %"Array<Bucket<string, PropId>>.580413"* (%"Map<string, PropId>.580407"*)* @"Map<string, PropId>_get_buckets" }
@Class_vtable_data = global %Class_vtable_ty.580404 zeroinitializer
@EnumField_vtable_data = global %EnumField_vtable_ty.580416 zeroinitializer
@"Array<EnumField>_vtable_data" = global %"Array<EnumField>_vtable_ty.580420" { void (%"Array<EnumField>.580419"*)* @"Array<EnumField>_resize", void (%"Array<EnumField>.580419"*, i64, i64)* @"Array<EnumField>_swap", void (%"Array<EnumField>.580419"*, %EnumField.580415*)* @"Array<EnumField>___sl__", void (%"Array<EnumField>.580419"*, i64, %EnumField.580415*)* @"Array<EnumField>___setitem__", void (%"Array<EnumField>.580419"*, %EnumField.580415*)* @"Array<EnumField>_append", %EnumField.580415* (%"Array<EnumField>.580419"*, i64)* @"Array<EnumField>___getitem__", i1 (%"Array<EnumField>.580419"*, %"Array<EnumField>.580419"*)* @"Array<EnumField>___eq__", i1 (%"Array<EnumField>.580419"*, %EnumField.580415*)* @"Array<EnumField>___in__", i64 (%"Array<EnumField>.580419"*, %EnumField.580415*)* @"Array<EnumField>_find", %string.580129* (%"Array<EnumField>.580419"*, %string.580129*)* @"Array<EnumField>_join", %string.580129* (%"Array<EnumField>.580419"*)* @"Array<EnumField>___as_string__" }
@str.219 = private unnamed_addr constant [11 x i8] c"@EnumField\00"
@Enum_vtable_data = global %Enum_vtable_ty.580418 zeroinitializer
@"Array<Var>_vtable_data" = global %"Array<Var>_vtable_ty.580432" { void (%"Array<Var>.580423"*)* @"Array<Var>_resize", void (%"Array<Var>.580423"*, i64, i64)* @"Array<Var>_swap", void (%"Array<Var>.580423"*, %Var.580395*)* @"Array<Var>___sl__", void (%"Array<Var>.580423"*, i64, %Var.580395*)* @"Array<Var>___setitem__", void (%"Array<Var>.580423"*, %Var.580395*)* @"Array<Var>_append", %Var.580395* (%"Array<Var>.580423"*, i64)* @"Array<Var>___getitem__", i1 (%"Array<Var>.580423"*, %"Array<Var>.580423"*)* @"Array<Var>___eq__", i1 (%"Array<Var>.580423"*, %Var.580395*)* @"Array<Var>___in__", i64 (%"Array<Var>.580423"*, %Var.580395*)* @"Array<Var>_find", %string.580129* (%"Array<Var>.580423"*, %string.580129*)* @"Array<Var>_join", %string.580129* (%"Array<Var>.580423"*)* @"Array<Var>___as_string__" }
@str.220 = private unnamed_addr constant [5 x i8] c"@Var\00"
@"Array<Const>_vtable_data" = global %"Array<Const>_vtable_ty.580433" { void (%"Array<Const>.580424"*)* @"Array<Const>_resize", void (%"Array<Const>.580424"*, i64, i64)* @"Array<Const>_swap", void (%"Array<Const>.580424"*, %Const.580397*)* @"Array<Const>___sl__", void (%"Array<Const>.580424"*, i64, %Const.580397*)* @"Array<Const>___setitem__", void (%"Array<Const>.580424"*, %Const.580397*)* @"Array<Const>_append", %Const.580397* (%"Array<Const>.580424"*, i64)* @"Array<Const>___getitem__", i1 (%"Array<Const>.580424"*, %"Array<Const>.580424"*)* @"Array<Const>___eq__", i1 (%"Array<Const>.580424"*, %Const.580397*)* @"Array<Const>___in__", i64 (%"Array<Const>.580424"*, %Const.580397*)* @"Array<Const>_find", %string.580129* (%"Array<Const>.580424"*, %string.580129*)* @"Array<Const>_join", %string.580129* (%"Array<Const>.580424"*)* @"Array<Const>___as_string__" }
@str.221 = private unnamed_addr constant [7 x i8] c"@Const\00"
@"Array<Class>_vtable_data" = global %"Array<Class>_vtable_ty.580434" { void (%"Array<Class>.580425"*)* @"Array<Class>_resize", void (%"Array<Class>.580425"*, i64, i64)* @"Array<Class>_swap", void (%"Array<Class>.580425"*, %Class.580403*)* @"Array<Class>___sl__", void (%"Array<Class>.580425"*, i64, %Class.580403*)* @"Array<Class>___setitem__", void (%"Array<Class>.580425"*, %Class.580403*)* @"Array<Class>_append", %Class.580403* (%"Array<Class>.580425"*, i64)* @"Array<Class>___getitem__", i1 (%"Array<Class>.580425"*, %"Array<Class>.580425"*)* @"Array<Class>___eq__", i1 (%"Array<Class>.580425"*, %Class.580403*)* @"Array<Class>___in__", i64 (%"Array<Class>.580425"*, %Class.580403*)* @"Array<Class>_find", %string.580129* (%"Array<Class>.580425"*, %string.580129*)* @"Array<Class>_join", %string.580129* (%"Array<Class>.580425"*)* @"Array<Class>___as_string__" }
@str.222 = private unnamed_addr constant [7 x i8] c"@Class\00"
@"Array<Function>_vtable_data" = global %"Array<Function>_vtable_ty.580435" { void (%"Array<Function>.580426"*)* @"Array<Function>_resize", void (%"Array<Function>.580426"*, i64, i64)* @"Array<Function>_swap", void (%"Array<Function>.580426"*, %Function.580391*)* @"Array<Function>___sl__", void (%"Array<Function>.580426"*, i64, %Function.580391*)* @"Array<Function>___setitem__", void (%"Array<Function>.580426"*, %Function.580391*)* @"Array<Function>_append", %Function.580391* (%"Array<Function>.580426"*, i64)* @"Array<Function>___getitem__", i1 (%"Array<Function>.580426"*, %"Array<Function>.580426"*)* @"Array<Function>___eq__", i1 (%"Array<Function>.580426"*, %Function.580391*)* @"Array<Function>___in__", i64 (%"Array<Function>.580426"*, %Function.580391*)* @"Array<Function>_find", %string.580129* (%"Array<Function>.580426"*, %string.580129*)* @"Array<Function>_join", %string.580129* (%"Array<Function>.580426"*)* @"Array<Function>___as_string__" }
@str.223 = private unnamed_addr constant [10 x i8] c"@Function\00"
@"Array<Enum>_vtable_data" = global %"Array<Enum>_vtable_ty.580436" { void (%"Array<Enum>.580427"*)* @"Array<Enum>_resize", void (%"Array<Enum>.580427"*, i64, i64)* @"Array<Enum>_swap", void (%"Array<Enum>.580427"*, %Enum.580417*)* @"Array<Enum>___sl__", void (%"Array<Enum>.580427"*, i64, %Enum.580417*)* @"Array<Enum>___setitem__", void (%"Array<Enum>.580427"*, %Enum.580417*)* @"Array<Enum>_append", %Enum.580417* (%"Array<Enum>.580427"*, i64)* @"Array<Enum>___getitem__", i1 (%"Array<Enum>.580427"*, %"Array<Enum>.580427"*)* @"Array<Enum>___eq__", i1 (%"Array<Enum>.580427"*, %Enum.580417*)* @"Array<Enum>___in__", i64 (%"Array<Enum>.580427"*, %Enum.580417*)* @"Array<Enum>_find", %string.580129* (%"Array<Enum>.580427"*, %string.580129*)* @"Array<Enum>_join", %string.580129* (%"Array<Enum>.580427"*)* @"Array<Enum>___as_string__" }
@str.224 = private unnamed_addr constant [6 x i8] c"@Enum\00"
@"Array<Scope>_vtable_data" = global %"Array<Scope>_vtable_ty.580437" { void (%"Array<Scope>.580428"*)* @"Array<Scope>_resize", void (%"Array<Scope>.580428"*, i64, i64)* @"Array<Scope>_swap", void (%"Array<Scope>.580428"*, %Scope.580363*)* @"Array<Scope>___sl__", void (%"Array<Scope>.580428"*, i64, %Scope.580363*)* @"Array<Scope>___setitem__", void (%"Array<Scope>.580428"*, %Scope.580363*)* @"Array<Scope>_append", %Scope.580363* (%"Array<Scope>.580428"*, i64)* @"Array<Scope>___getitem__", i1 (%"Array<Scope>.580428"*, %"Array<Scope>.580428"*)* @"Array<Scope>___eq__", i1 (%"Array<Scope>.580428"*, %Scope.580363*)* @"Array<Scope>___in__", i64 (%"Array<Scope>.580428"*, %Scope.580363*)* @"Array<Scope>_find", %string.580129* (%"Array<Scope>.580428"*, %string.580129*)* @"Array<Scope>_join", %string.580129* (%"Array<Scope>.580428"*)* @"Array<Scope>___as_string__" }
@str.225 = private unnamed_addr constant [7 x i8] c"@Scope\00"
@"Array<ConstDeclaration>_vtable_data" = global %"Array<ConstDeclaration>_vtable_ty.580438" { void (%"Array<ConstDeclaration>.580429"*)* @"Array<ConstDeclaration>_resize", void (%"Array<ConstDeclaration>.580429"*, i64, i64)* @"Array<ConstDeclaration>_swap", void (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)* @"Array<ConstDeclaration>___sl__", void (%"Array<ConstDeclaration>.580429"*, i64, %ConstDeclaration.580353*)* @"Array<ConstDeclaration>___setitem__", void (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)* @"Array<ConstDeclaration>_append", %ConstDeclaration.580353* (%"Array<ConstDeclaration>.580429"*, i64)* @"Array<ConstDeclaration>___getitem__", i1 (%"Array<ConstDeclaration>.580429"*, %"Array<ConstDeclaration>.580429"*)* @"Array<ConstDeclaration>___eq__", i1 (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)* @"Array<ConstDeclaration>___in__", i64 (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)* @"Array<ConstDeclaration>_find", %string.580129* (%"Array<ConstDeclaration>.580429"*, %string.580129*)* @"Array<ConstDeclaration>_join", %string.580129* (%"Array<ConstDeclaration>.580429"*)* @"Array<ConstDeclaration>___as_string__" }
@str.226 = private unnamed_addr constant [18 x i8] c"@ConstDeclaration\00"
@"Array<VarDeclaration>_vtable_data" = global %"Array<VarDeclaration>_vtable_ty.580439" { void (%"Array<VarDeclaration>.580430"*)* @"Array<VarDeclaration>_resize", void (%"Array<VarDeclaration>.580430"*, i64, i64)* @"Array<VarDeclaration>_swap", void (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)* @"Array<VarDeclaration>___sl__", void (%"Array<VarDeclaration>.580430"*, i64, %VarDeclaration.580351*)* @"Array<VarDeclaration>___setitem__", void (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)* @"Array<VarDeclaration>_append", %VarDeclaration.580351* (%"Array<VarDeclaration>.580430"*, i64)* @"Array<VarDeclaration>___getitem__", i1 (%"Array<VarDeclaration>.580430"*, %"Array<VarDeclaration>.580430"*)* @"Array<VarDeclaration>___eq__", i1 (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)* @"Array<VarDeclaration>___in__", i64 (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)* @"Array<VarDeclaration>_find", %string.580129* (%"Array<VarDeclaration>.580430"*, %string.580129*)* @"Array<VarDeclaration>_join", %string.580129* (%"Array<VarDeclaration>.580430"*)* @"Array<VarDeclaration>___as_string__" }
@str.227 = private unnamed_addr constant [16 x i8] c"@VarDeclaration\00"
@"Bucket<string, ClassDeclarationNode>_vtable_data" = global %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442" { void (%"Bucket<string, ClassDeclarationNode>.580441"*, %string.580129*, %ClassDeclarationNode.580235*)* @"Bucket<string, ClassDeclarationNode>_set" }
@"Array<Bucket<string, ClassDeclarationNode>>_vtable_data" = global %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444" { void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*)* @"Array<Bucket<string, ClassDeclarationNode>>_resize", void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64, i64)* @"Array<Bucket<string, ClassDeclarationNode>>_swap", void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)* @"Array<Bucket<string, ClassDeclarationNode>>___sl__", void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64, %"Bucket<string, ClassDeclarationNode>.580441"*)* @"Array<Bucket<string, ClassDeclarationNode>>___setitem__", void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)* @"Array<Bucket<string, ClassDeclarationNode>>_append", %"Bucket<string, ClassDeclarationNode>.580441"* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64)* @"Array<Bucket<string, ClassDeclarationNode>>___getitem__", i1 (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Array<Bucket<string, ClassDeclarationNode>>.580443"*)* @"Array<Bucket<string, ClassDeclarationNode>>___eq__", i1 (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)* @"Array<Bucket<string, ClassDeclarationNode>>___in__", i64 (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)* @"Array<Bucket<string, ClassDeclarationNode>>_find", %string.580129* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %string.580129*)* @"Array<Bucket<string, ClassDeclarationNode>>_join", %string.580129* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*)* @"Array<Bucket<string, ClassDeclarationNode>>___as_string__" }
@str.228 = private unnamed_addr constant [38 x i8] c"@Bucket<string, ClassDeclarationNode>\00"
@"Map<string, ClassDeclarationNode>_vtable_data" = global %"Map<string, ClassDeclarationNode>_vtable_ty.580440" { i64 (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)* @"Map<string, ClassDeclarationNode>_hash_fnc", void (%"Map<string, ClassDeclarationNode>.580431"*)* @"Map<string, ClassDeclarationNode>_resize", void (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*, %ClassDeclarationNode.580235*)* @"Map<string, ClassDeclarationNode>_set", %ClassDeclarationNode.580235* (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)* @"Map<string, ClassDeclarationNode>_get", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* (%"Map<string, ClassDeclarationNode>.580431"*)* @"Map<string, ClassDeclarationNode>_get_buckets" }
@Module_vtable_data = global %Module_vtable_ty.580422 zeroinitializer
@"Array<Module>_vtable_data" = global %"Array<Module>_vtable_ty.580448" { void (%"Array<Module>.580447"*)* @"Array<Module>_resize", void (%"Array<Module>.580447"*, i64, i64)* @"Array<Module>_swap", void (%"Array<Module>.580447"*, %Module.580421*)* @"Array<Module>___sl__", void (%"Array<Module>.580447"*, i64, %Module.580421*)* @"Array<Module>___setitem__", void (%"Array<Module>.580447"*, %Module.580421*)* @"Array<Module>_append", %Module.580421* (%"Array<Module>.580447"*, i64)* @"Array<Module>___getitem__", i1 (%"Array<Module>.580447"*, %"Array<Module>.580447"*)* @"Array<Module>___eq__", i1 (%"Array<Module>.580447"*, %Module.580421*)* @"Array<Module>___in__", i64 (%"Array<Module>.580447"*, %Module.580421*)* @"Array<Module>_find", %string.580129* (%"Array<Module>.580447"*, %string.580129*)* @"Array<Module>_join", %string.580129* (%"Array<Module>.580447"*)* @"Array<Module>___as_string__" }
@str.229 = private unnamed_addr constant [8 x i8] c"@Module\00"
@Program_vtable_data = global %Program_vtable_ty.580446 zeroinitializer
@str.230 = private unnamed_addr constant [7 x i8] c"__eq__\00"
@str.231 = private unnamed_addr constant [8 x i8] c"__add__\00"
@str.232 = private unnamed_addr constant [8 x i8] c"__sub__\00"
@str.233 = private unnamed_addr constant [8 x i8] c"__mul__\00"
@str.234 = private unnamed_addr constant [8 x i8] c"__div__\00"
@str.235 = private unnamed_addr constant [7 x i8] c"__or__\00"
@str.236 = private unnamed_addr constant [9 x i8] c"__adda__\00"
@str.237 = private unnamed_addr constant [9 x i8] c"__suba__\00"
@str.238 = private unnamed_addr constant [9 x i8] c"__mula__\00"
@str.239 = private unnamed_addr constant [9 x i8] c"__diva__\00"
@str.240 = private unnamed_addr constant [8 x i8] c"__ora__\00"
@str.241 = private unnamed_addr constant [9 x i8] c"__anda__\00"
@str.242 = private unnamed_addr constant [9 x i8] c"__xora__\00"
@str.243 = private unnamed_addr constant [12 x i8] c"__getitem__\00"
@str.244 = private unnamed_addr constant [12 x i8] c"__setitem__\00"
@str.245 = private unnamed_addr constant [7 x i8] c"__sl__\00"
@str.246 = private unnamed_addr constant [7 x i8] c"__sr__\00"
@str.247 = private unnamed_addr constant [8 x i8] c"__sla__\00"
@str.248 = private unnamed_addr constant [8 x i8] c"__sra__\00"
@str.249 = private unnamed_addr constant [7 x i8] c"__in__\00"
@str.250 = private unnamed_addr constant [7 x i8] c"__lt__\00"
@str.251 = private unnamed_addr constant [7 x i8] c"__lg__\00"
@str.252 = private unnamed_addr constant [7 x i8] c"__ne__\00"
@str.253 = private unnamed_addr constant [7 x i8] c"__le__\00"
@str.254 = private unnamed_addr constant [7 x i8] c"__ge__\00"
@str.255 = private unnamed_addr constant [8 x i8] c"__pow__\00"
@str.256 = private unnamed_addr constant [8 x i8] c"__mod__\00"
@str.257 = private unnamed_addr constant [9 x i8] c"__powa__\00"
@str.258 = private unnamed_addr constant [9 x i8] c"__moda__\00"
@str.259 = private unnamed_addr constant [7 x i8] c"__gt__\00"
@str.260 = private unnamed_addr constant [8 x i8] c"__and__\00"
@str.261 = private unnamed_addr constant [8 x i8] c"__xor__\00"
@TypeChecker_vtable_data = global %TypeChecker_vtable_ty.580450 { %Module.580421* (%TypeChecker.580449*)* @TypeChecker_get_current_module, %Scope.580363* (%TypeChecker.580449*)* @TypeChecker_get_current_scope, %Scope.580363* (%TypeChecker.580449*)* @TypeChecker_get_module_scope, %Function.580391* (%TypeChecker.580449*)* @TypeChecker_get_current_function, %FunctionType.580279* (%TypeChecker.580449*)* @TypeChecker_get_current_function_type, %Class.580403* (%TypeChecker.580449*)* @TypeChecker_get_current_class, %Class.580403* (%TypeChecker.580449*, %VarId.580331*)* @TypeChecker_get_class_from_var_id, %Enum.580417* (%TypeChecker.580449*, %EnumId.580291*)* @TypeChecker_get_enum, %Enum.580417* (%TypeChecker.580449*, %VarId.580331*)* @TypeChecker_get_enum_from_var_id, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)* @TypeChecker_types_are_eq, %string.580129* (%TypeChecker.580449*, %Type.580273*)* @TypeChecker_dump_type, %Scope.580363* (%TypeChecker.580449*)* @TypeChecker_create_scope, i1 (%TypeChecker.580449*, %string.580129*)* @TypeChecker_is_constant_in_scope, %VarId.580331* (%TypeChecker.580449*, %string.580129*)* @TypeChecker_get_var_from_current_scope, %Type.580273* (%TypeChecker.580449*, %string.580129*)* @TypeChecker_get_type_from_current_scope, %Scope.580363* (%TypeChecker.580449*)* @TypeChecker_create_child_scope_within_current_scope, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)* @TypeChecker_error, i1 (%TypeChecker.580449*)* @TypeChecker_has_errored, %Program.580445* (%TypeChecker.580449*, %ModuleAST.580255*, %string.580129*, %"Array<FloError>.580139"*)* @TypeChecker_check, %Type.580273* (%TypeChecker.580449*, %string.580129*, %"Array<Type>.580281"*)* @TypeChecker_create_generic_instance_in_module, %Var.580395* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)* @TypeChecker_declare_var_within_current_scope, %Const.580397* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)* @TypeChecker_declare_const_within_current_scope, void (%TypeChecker.580449*, %ConstDeclarationStatement.580221*)* @TypeChecker_declare_global_const, void (%TypeChecker.580449*, %VarDeclarationStatement.580219*)* @TypeChecker_declare_global_var, %FunctionType.580279* (%TypeChecker.580449*, %"Array<ArgNode>.580227"*, %TypeNode.580161*, %"Array<FunctionArg>.580393"*)* @TypeChecker_init_function_signature, void (%TypeChecker.580449*, %ImportNode.580249*)* @TypeChecker_check_module_import, void (%TypeChecker.580449*, %EnumNode.580245*)* @TypeChecker_declare_enum_within_current_scope, void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)* @TypeChecker_declare_class_within_module, void (%TypeChecker.580449*, %FunctionDeclarationNode.580225*)* @TypeChecker_declare_function_within_current_scope, void (%TypeChecker.580449*, %Enum.580417*, %EnumNode.580245*)* @TypeChecker_check_enum_body, void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)* @TypeChecker_declare_class_fields, void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)* @TypeChecker_declare_class_methods, void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)* @TypeChecker_add_inherited_props_to_class, void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)* @TypeChecker_check_class_body, void (%TypeChecker.580449*, %Function.580391*, %FunctionDeclarationNode.580225*)* @TypeChecker_check_function_body, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)* @TypeChecker_check_type, %ArrayExpression.580315* (%TypeChecker.580449*, %Type.580273*, %ArrayExpressionNode.580193*)* @TypeChecker_check_array_expression, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %VarAccessExpressionNode.580191*)* @TypeChecker_check_var_access_expr, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %Expression.580293*, %BinaryExpressionNode.580205*)* @TypeChecker_check_assignment, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*)* @TypeChecker_check_object_bin_assign, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*, %Expression.580293*)* @TypeChecker_check_object_binary_expr, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*)* @TypeChecker_check_object_setitem_expr, %BinaryExpression.580317* (%TypeChecker.580449*, %Type.580273*, %BinaryExpressionNode.580205*)* @TypeChecker_check_bin_expr, %UnaryExpression.580319* (%TypeChecker.580449*, %Type.580273*, %UnaryExpressionNode.580209*)* @TypeChecker_check_unary_expr, %TypeCastExpression.580323* (%TypeChecker.580449*, %TypeCastExpressionNode.580203*)* @TypeChecker_check_typecast_expr, %string.580129* (%TypeChecker.580449*, %ClassId.580289*, %"Array<ExpressionNode>.580189"*, %"Array<Expression>.580311"**)* @TypeChecker_check_constructor_call, %NewExpression.580325* (%TypeChecker.580449*, %NewExpressionNode.580195*)* @TypeChecker_check_new_expr, %string.580129* (%TypeChecker.580449*, %PropId.580339*)* @TypeChecker_check_member_access, %MemberExpression.580341* (%TypeChecker.580449*, %Type.580273*, %MemberExpressionNode.580199*)* @TypeChecker_check_member_expr, %TernaryExpression.580321* (%TypeChecker.580449*, %Type.580273*, %TernaryExpressionNode.580207*)* @TypeChecker_check_ternary_expr, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %ExpressionIndexNode.580197*)* @TypeChecker_check_object_index_expr, %IndexExpression.580327* (%TypeChecker.580449*, %Type.580273*, %ExpressionIndexNode.580197*)* @TypeChecker_check_index_expr, %"Array<FunctionArg>.580393"* (%TypeChecker.580449*, %Expression.580293*)* @TypeChecker_get_func_args_from_expression, %"Array<Expression>.580311"* (%TypeChecker.580449*, %FunctionType.580279*, %"Array<FunctionArg>.580393"*, %"Array<ExpressionNode>.580189"*)* @TypeChecker_fill_in_call_args, i64 (%TypeChecker.580449*, %FunctionType.580279*, %"Array<Expression>.580311"*)* @TypeChecker_check_function_call_args_match, %CallExpression.580329* (%TypeChecker.580449*, %Type.580273*, %CallExpressionNode.580201*)* @TypeChecker_check_call_expr, %IntExpression.580303* (%TypeChecker.580449*, %Type.580273*, %IntExpressionNode.580181*)* @TypeChecker_check_int_expression, %FloatExpression.580307* (%TypeChecker.580449*, %Type.580273*, %FloatExpressionNode.580183*)* @TypeChecker_check_float_expression, %IntExpression.580303* (%TypeChecker.580449*, %CharExpressionNode.580185*)* @TypeChecker_check_char_expression, %StringExpression.580309* (%TypeChecker.580449*, %Type.580273*, %StringExpressionNode.580187*)* @TypeChecker_check_string_expression, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)* @TypeChecker_check_expression, %Expression.580293* (%TypeChecker.580449*, %ExpressionNode.580177*)* @TypeChecker_check_condition, %IfStatement.580349* (%TypeChecker.580449*, %IfStatementNode.580211*)* @TypeChecker_check_if_stamement, %VarDeclaration.580351* (%TypeChecker.580449*, %VarDeclarationStatement.580219*)* @TypeChecker_check_var_declaration, %ConstDeclaration.580353* (%TypeChecker.580449*, %ConstDeclarationStatement.580221*)* @TypeChecker_check_const_declaration, %ForStatement.580355* (%TypeChecker.580449*, %ForStatementNode.580215*)* @TypeChecker_check_for_statement, %WhileStatement.580357* (%TypeChecker.580449*, %WhileStatementNode.580213*)* @TypeChecker_check_while_statment, %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)* @TypeChecker_check_can_break, %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)* @TypeChecker_check_can_continue, %ReturnStatement.580359* (%TypeChecker.580449*, %ReturnStatementNode.580217*)* @TypeChecker_check_can_return, %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)* @TypeChecker_check_statement, %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)* @TypeChecker_check_block }
@str.262 = private unnamed_addr constant [11 x i8] c"(%s) => %s\00"
@str.263 = private unnamed_addr constant [4 x i8] c"%s*\00"
@str.264 = private unnamed_addr constant [7 x i8] c"%s[%d]\00"
@str.265 = private unnamed_addr constant [5 x i8] c"true\00"
@str.266 = private unnamed_addr constant [6 x i8] c"false\00"
@str.267 = private unnamed_addr constant [5 x i8] c"null\00"
@str.268 = private unnamed_addr constant [68 x i8] c"Name '%s' has already been used for another type. consider renaming\00"
@str.269 = private unnamed_addr constant [41 x i8] c"Generic expects %d parameters but got %d\00"
@str.270 = private unnamed_addr constant [4 x i8] c"_%s\00"
@str.271 = private unnamed_addr constant [5 x i8] c"%s%s\00"
@str.272 = private unnamed_addr constant [55 x i8] c"Initilializer for global variable has to be a constant\00"
@str.273 = private unnamed_addr constant [56 x i8] c"Expected type of '%s' but got type of '%s' on signature\00"
@str.274 = private unnamed_addr constant [52 x i8] c"Import statement path can't be a a formatted string\00"
@str.275 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s+\00"
@str.276 = private unnamed_addr constant [48 x i8] c"Illegal re-declaration of type '%s' as function\00"
@str.277 = private unnamed_addr constant [53 x i8] c"Expected an int type for enum type but got type '%s'\00"
@str.278 = private unnamed_addr constant [38 x i8] c"Enum initializer has to be a constant\00"
@str.279 = private unnamed_addr constant [36 x i8] c"Expected type '%s' but got type '%s\00"
@str.280 = private unnamed_addr constant [76 x i8] c" is reserved only for operator overloads and cannot be used as a field name\00"
@str.281 = private unnamed_addr constant [36 x i8] c"Field %s in class %s already exists\00"
@str.282 = private unnamed_addr constant [89 x i8] c"Signature of inherited field %s in class %s does not match expected parent signature '%s\00"
@str.283 = private unnamed_addr constant [49 x i8] c"Expected inherited field %s in class %s to be %s\00"
@str.284 = private unnamed_addr constant [68 x i8] c"Expected type '%s' but got type '%s' on static field initialization\00"
@str.285 = private unnamed_addr constant [46 x i8] c"Static field initializer has to be a constant\00"
@str.286 = private unnamed_addr constant [65 x i8] c"Expected %d arguments for binary operator overload %s but got %d\00"
@str.287 = private unnamed_addr constant [45 x i8] c"Binary operator overload %s cannot be static\00"
@str.288 = private unnamed_addr constant [37 x i8] c"Method %s in class %s already exists\00"
@str.289 = private unnamed_addr constant [91 x i8] c"Signature of inherited method %s in class %s does not match expected parent signature '%s'\00"
@str.290 = private unnamed_addr constant [50 x i8] c"Expected inherited method %s in class %s to be %s\00"
@str.291 = private unnamed_addr constant [32 x i8] c"Static method can't be abstract\00"
@str.292 = private unnamed_addr constant [12 x i8] c"constructor\00"
@str.293 = private unnamed_addr constant [34 x i8] c"Class constructor can't be static\00"
@str.294 = private unnamed_addr constant [36 x i8] c"Class constructor can't be abstract\00"
@str.295 = private unnamed_addr constant [59 x i8] c"Can't have a abstract private method use protected instead\00"
@str.296 = private unnamed_addr constant [42 x i8] c"Can only inherit from class not type '%s'\00"
@str.297 = private unnamed_addr constant [81 x i8] c"Class with constructor must implement all it's methods missing %s implementation\00"
@str.298 = private unnamed_addr constant [39 x i8] c"Method missing ending return statement\00"
@str.299 = private unnamed_addr constant [41 x i8] c"Function missing ending return statement\00"
@str.300 = private unnamed_addr constant [17 x i8] c"length is an int\00"
@str.301 = private unnamed_addr constant [31 x i8] c"length is a non-constant value\00"
@str.302 = private unnamed_addr constant [32 x i8] c"length should be greater than 0\00"
@str.303 = private unnamed_addr constant [19 x i8] c"Undefined type '%s\00"
@str.304 = private unnamed_addr constant [48 x i8] c"Expected element type of '%s' but got type '%s'\00"
@str.305 = private unnamed_addr constant [24 x i8] c"Undefined variable '%s'\00"
@str.306 = private unnamed_addr constant [34 x i8] c"Cannot assign a value to a record\00"
@str.307 = private unnamed_addr constant [36 x i8] c"Cannot assign a value to a constant\00"
@str.308 = private unnamed_addr constant [52 x i8] c"Illegal assignment of variable of type '%s' to '%s'\00"
@str.309 = private unnamed_addr constant [37 x i8] c"Expected type '%s' but got type '%s'\00"
@str.310 = private unnamed_addr constant [55 x i8] c"Unsupported binary operator overload for operator '%s'\00"
@str.311 = private unnamed_addr constant [108 x i8] c"No binary operator overload for '%s' in object of class '%s' please implement the method %s to support this\00"
@str.312 = private unnamed_addr constant [114 x i8] c"No operator overload for index set operator on %s object please implement method __setitem__ to use in this class\00"
@str.313 = private unnamed_addr constant [58 x i8] c"Illegal binary operation '%s' between types '%s' and '%s'\00"
@str.314 = private unnamed_addr constant [39 x i8] c"Illegal unary operation %s on constant\00"
@str.315 = private unnamed_addr constant [40 x i8] c"Illegal unary operation %s on type '%s'\00"
@str.316 = private unnamed_addr constant [45 x i8] c"Cannot construct an object of abstract class\00"
@str.317 = private unnamed_addr constant [55 x i8] c"Expected %d argument(s) on constructor call but got %d\00"
@str.318 = private unnamed_addr constant [71 x i8] c"Expected type '%s' but got type '%s' as constructor call argument (%d)\00"
@str.319 = private unnamed_addr constant [76 x i8] c"Property '%s' is defined as private and only accessible within the class %s\00"
@str.320 = private unnamed_addr constant [71 x i8] c"Property '%s' is defined as %s and only accessible within the class %s\00"
@str.321 = private unnamed_addr constant [52 x i8] c"Property '%s' doesn't exist in object of class '%s'\00"
@str.322 = private unnamed_addr constant [50 x i8] c"Property '%s' is not a static member in class '%s\00"
@str.323 = private unnamed_addr constant [40 x i8] c"'%s' is not an element of enum the '%s'\00"
@str.324 = private unnamed_addr constant [38 x i8] c"Cannot get property '%s' of type '%s'\00"
@str.325 = private unnamed_addr constant [53 x i8] c"Expected type '%s' from first case but got type '%s'\00"
@str.326 = private unnamed_addr constant [122 x i8] c"No operator overload for indexing operator on %s object please implement method __getitem__ to use indexing in this class\00"
@str.327 = private unnamed_addr constant [35 x i8] c"Expected an integer type for index\00"
@str.328 = private unnamed_addr constant [39 x i8] c"Cannot index into a value of type '%s'\00"
@str.329 = private unnamed_addr constant [47 x i8] c"Expected a function type for call but got '%s'\00"
@str.330 = private unnamed_addr constant [52 x i8] c"Expected %d argument(s) on function call but got %d\00"
@str.331 = private unnamed_addr constant [63 x i8] c"Expected type '%s' but got type '%s' as function call argument\00"
@str.332 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s'\00"
@str.333 = private unnamed_addr constant [26 x i8] c"Variable '%s' has no type\00"
@str.334 = private unnamed_addr constant [70 x i8] c"Cannot declare a value as null without any type hint for future usage\00"
@str.335 = private unnamed_addr constant [61 x i8] c"Expected type '%s' but got type '%s' on variable declaration\00"
@str.336 = private unnamed_addr constant [56 x i8] c"Illegal re-declaration of already declared variable '%s\00"
@str.337 = private unnamed_addr constant [49 x i8] c"Cannot assign a non-constant value to a constant\00"
@str.338 = private unnamed_addr constant [30 x i8] c"Illegal break outside of loop\00"
@str.339 = private unnamed_addr constant [33 x i8] c"Illegal continue outside of loop\00"
@str.340 = private unnamed_addr constant [55 x i8] c"Function with void return type cannot return any value\00"
@str.341 = private unnamed_addr constant [57 x i8] c"Expected return type of '%s' but got return type of '%s'\00"
@str.342 = private unnamed_addr constant [33 x i8] c"Function return type is not void\00"
@"Array<LLVMMetadataRef>_vtable_data" = local_unnamed_addr global %"Array<LLVMMetadataRef>_vtable_ty.580482" { void (%"Array<LLVMMetadataRef>.580481"*)* @"Array<LLVMMetadataRef>_resize", void (%"Array<LLVMMetadataRef>.580481"*, i64, i64)* @"Array<LLVMMetadataRef>_swap", void (%"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457*)* @"Array<LLVMMetadataRef>___sl__", void (%"Array<LLVMMetadataRef>.580481"*, i64, %LLVMMetadataRef.580457*)* @"Array<LLVMMetadataRef>___setitem__", void (%"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457*)* @"Array<LLVMMetadataRef>_append", %LLVMMetadataRef.580457* (%"Array<LLVMMetadataRef>.580481"*, i64)* @"Array<LLVMMetadataRef>___getitem__", i1 (%"Array<LLVMMetadataRef>.580481"*, %"Array<LLVMMetadataRef>.580481"*)* @"Array<LLVMMetadataRef>___eq__", i1 (%"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457*)* @"Array<LLVMMetadataRef>___in__", i64 (%"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457*)* @"Array<LLVMMetadataRef>_find", %string.580129* (%"Array<LLVMMetadataRef>.580481"*, %string.580129*)* @"Array<LLVMMetadataRef>_join", %string.580129* (%"Array<LLVMMetadataRef>.580481"*)* @"Array<LLVMMetadataRef>___as_string__" }
@str.343 = private unnamed_addr constant [17 x i8] c"@LLVMMetadataRef\00"
@DebugInfo_vtable_data = global %DebugInfo_vtable_ty.580480 { void (%DebugInfo.580479*)* @DebugInfo_finalize }
@str.344 = private unnamed_addr constant [2 x i8] c".\00"
@str.345 = private unnamed_addr constant [13 x i8] c"Flo Compiler\00"
@GeneratedModule_vtable_data = global %GeneratedModule_vtable_ty.580484 { void (%GeneratedModule.580483*)* @GeneratedModule_check_errors, void (%GeneratedModule.580483*, i64)* @GeneratedModule_run_passes, void (%GeneratedModule.580483*)* @GeneratedModule_exec, %LLVMTargetMachineRef.580473* (%GeneratedModule.580483*, %string.580129*)* @GeneratedModule_create_target_machine, void (%GeneratedModule.580483*, %string.580129*, %string.580129*)* @GeneratedModule_write_object, void (%GeneratedModule.580483*)* @GeneratedModule_print, %LLVMModuleRef.580453* (%GeneratedModule.580483*)* @GeneratedModule_copy_llvm_module, void (%GeneratedModule.580483*)* @GeneratedModule_destroy }
@str.346 = private unnamed_addr constant [10 x i8] c"error: %s\00"
@str.347 = private unnamed_addr constant [34 x i8] c"failed to create execution engine\00"
@str.348 = private unnamed_addr constant [5 x i8] c"main\00"
@str.349 = private unnamed_addr constant [49 x i8] c"Main function not found in module; can't execute\00"
@str.350 = private unnamed_addr constant [21 x i8] c"Exited with code: %d\00"
@str.351 = private unnamed_addr constant [32 x i8] c"failed to get target triple: %s\00"
@str.352 = private unnamed_addr constant [8 x i8] c"generic\00"
@str.353 = private unnamed_addr constant [42 x i8] c"target machine failed to emit object code\00"
@IntrinsicResult_vtable_data = global %IntrinsicResult_vtable_ty.580486 zeroinitializer
@"Bucket<string, int>_vtable_data" = global %"Bucket<string, int>_vtable_ty.580493" { void (%"Bucket<string, int>.580492"*, %string.580129*, i64)* @"Bucket<string, int>_set" }
@"Array<Bucket<string, int>>_vtable_data" = global %"Array<Bucket<string, int>>_vtable_ty.580495" { void (%"Array<Bucket<string, int>>.580494"*)* @"Array<Bucket<string, int>>_resize", void (%"Array<Bucket<string, int>>.580494"*, i64, i64)* @"Array<Bucket<string, int>>_swap", void (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)* @"Array<Bucket<string, int>>___sl__", void (%"Array<Bucket<string, int>>.580494"*, i64, %"Bucket<string, int>.580492"*)* @"Array<Bucket<string, int>>___setitem__", void (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)* @"Array<Bucket<string, int>>_append", %"Bucket<string, int>.580492"* (%"Array<Bucket<string, int>>.580494"*, i64)* @"Array<Bucket<string, int>>___getitem__", i1 (%"Array<Bucket<string, int>>.580494"*, %"Array<Bucket<string, int>>.580494"*)* @"Array<Bucket<string, int>>___eq__", i1 (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)* @"Array<Bucket<string, int>>___in__", i64 (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)* @"Array<Bucket<string, int>>_find", %string.580129* (%"Array<Bucket<string, int>>.580494"*, %string.580129*)* @"Array<Bucket<string, int>>_join", %string.580129* (%"Array<Bucket<string, int>>.580494"*)* @"Array<Bucket<string, int>>___as_string__" }
@str.354 = private unnamed_addr constant [21 x i8] c"@Bucket<string, int>\00"
@"Map<string, int>_vtable_data" = global %"Map<string, int>_vtable_ty.580491" { i64 (%"Map<string, int>.580489"*, %string.580129*)* @"Map<string, int>_hash_fnc", void (%"Map<string, int>.580489"*)* @"Map<string, int>_resize", void (%"Map<string, int>.580489"*, %string.580129*, i64)* @"Map<string, int>_set", i64 (%"Map<string, int>.580489"*, %string.580129*)* @"Map<string, int>_get", %"Array<Bucket<string, int>>.580494"* (%"Map<string, int>.580489"*)* @"Map<string, int>_get_buckets" }
@"Bucket<string, LLVMValueRef>_vtable_data" = global %"Bucket<string, LLVMValueRef>_vtable_ty.580498" { void (%"Bucket<string, LLVMValueRef>.580497"*, %string.580129*, %LLVMValueRef.580455*)* @"Bucket<string, LLVMValueRef>_set" }
@"Array<Bucket<string, LLVMValueRef>>_vtable_data" = global %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500" { void (%"Array<Bucket<string, LLVMValueRef>>.580499"*)* @"Array<Bucket<string, LLVMValueRef>>_resize", void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64, i64)* @"Array<Bucket<string, LLVMValueRef>>_swap", void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)* @"Array<Bucket<string, LLVMValueRef>>___sl__", void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64, %"Bucket<string, LLVMValueRef>.580497"*)* @"Array<Bucket<string, LLVMValueRef>>___setitem__", void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)* @"Array<Bucket<string, LLVMValueRef>>_append", %"Bucket<string, LLVMValueRef>.580497"* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64)* @"Array<Bucket<string, LLVMValueRef>>___getitem__", i1 (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Array<Bucket<string, LLVMValueRef>>.580499"*)* @"Array<Bucket<string, LLVMValueRef>>___eq__", i1 (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)* @"Array<Bucket<string, LLVMValueRef>>___in__", i64 (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)* @"Array<Bucket<string, LLVMValueRef>>_find", %string.580129* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %string.580129*)* @"Array<Bucket<string, LLVMValueRef>>_join", %string.580129* (%"Array<Bucket<string, LLVMValueRef>>.580499"*)* @"Array<Bucket<string, LLVMValueRef>>___as_string__" }
@str.355 = private unnamed_addr constant [30 x i8] c"@Bucket<string, LLVMValueRef>\00"
@"Map<string, LLVMValueRef>_vtable_data" = global %"Map<string, LLVMValueRef>_vtable_ty.580496" { i64 (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)* @"Map<string, LLVMValueRef>_hash_fnc", void (%"Map<string, LLVMValueRef>.580490"*)* @"Map<string, LLVMValueRef>_resize", void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)* @"Map<string, LLVMValueRef>_set", %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)* @"Map<string, LLVMValueRef>_get", %"Array<Bucket<string, LLVMValueRef>>.580499"* (%"Map<string, LLVMValueRef>.580490"*)* @"Map<string, LLVMValueRef>_get_buckets" }
@CGClassType_vtable_data = global %CGClassType_vtable_ty.580488 zeroinitializer
@CGEnumType_vtable_data = global %CGEnumType_vtable_ty.580502 zeroinitializer
@"Array<LLVMTypeRef>_vtable_data" = global %"Array<LLVMTypeRef>_vtable_ty.580504" { void (%"Array<LLVMTypeRef>.580503"*)* @"Array<LLVMTypeRef>_resize", void (%"Array<LLVMTypeRef>.580503"*, i64, i64)* @"Array<LLVMTypeRef>_swap", void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)* @"Array<LLVMTypeRef>___sl__", void (%"Array<LLVMTypeRef>.580503"*, i64, %LLVMTypeRef.580454*)* @"Array<LLVMTypeRef>___setitem__", void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)* @"Array<LLVMTypeRef>_append", %LLVMTypeRef.580454* (%"Array<LLVMTypeRef>.580503"*, i64)* @"Array<LLVMTypeRef>___getitem__", i1 (%"Array<LLVMTypeRef>.580503"*, %"Array<LLVMTypeRef>.580503"*)* @"Array<LLVMTypeRef>___eq__", i1 (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)* @"Array<LLVMTypeRef>___in__", i64 (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)* @"Array<LLVMTypeRef>_find", %string.580129* (%"Array<LLVMTypeRef>.580503"*, %string.580129*)* @"Array<LLVMTypeRef>_join", %string.580129* (%"Array<LLVMTypeRef>.580503"*)* @"Array<LLVMTypeRef>___as_string__" }
@str.356 = private unnamed_addr constant [13 x i8] c"@LLVMTypeRef\00"
@str.357 = private unnamed_addr constant [9 x i8] c"%d;%d;%d\00"
@str.358 = private unnamed_addr constant [9 x i8] c"%s;%d;%d\00"
@"Array<LLVMValueRef>_vtable_data" = global %"Array<LLVMValueRef>_vtable_ty.580506" { void (%"Array<LLVMValueRef>.580505"*)* @"Array<LLVMValueRef>_resize", void (%"Array<LLVMValueRef>.580505"*, i64, i64)* @"Array<LLVMValueRef>_swap", void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)* @"Array<LLVMValueRef>___sl__", void (%"Array<LLVMValueRef>.580505"*, i64, %LLVMValueRef.580455*)* @"Array<LLVMValueRef>___setitem__", void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)* @"Array<LLVMValueRef>_append", %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)* @"Array<LLVMValueRef>___getitem__", i1 (%"Array<LLVMValueRef>.580505"*, %"Array<LLVMValueRef>.580505"*)* @"Array<LLVMValueRef>___eq__", i1 (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)* @"Array<LLVMValueRef>___in__", i64 (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)* @"Array<LLVMValueRef>_find", %string.580129* (%"Array<LLVMValueRef>.580505"*, %string.580129*)* @"Array<LLVMValueRef>_join", %string.580129* (%"Array<LLVMValueRef>.580505"*)* @"Array<LLVMValueRef>___as_string__" }
@str.359 = private unnamed_addr constant [14 x i8] c"@LLVMValueRef\00"
@str.360 = private unnamed_addr constant [4 x i8] c"lld\00"
@str.361 = private unnamed_addr constant [3 x i8] c"ld\00"
@str.362 = private unnamed_addr constant [3 x i8] c"%d\00"
@str.363 = private unnamed_addr constant [3 x i8] c"%f\00"
@str.364 = private unnamed_addr constant [4 x i8] c"%lf\00"
@str.365 = private unnamed_addr constant [3 x i8] c"%p\00"
@"Array<LLVMModuleRef>_vtable_data" = global %"Array<LLVMModuleRef>_vtable_ty.580513" { void (%"Array<LLVMModuleRef>.580509"*)* @"Array<LLVMModuleRef>_resize", void (%"Array<LLVMModuleRef>.580509"*, i64, i64)* @"Array<LLVMModuleRef>_swap", void (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)* @"Array<LLVMModuleRef>___sl__", void (%"Array<LLVMModuleRef>.580509"*, i64, %LLVMModuleRef.580453*)* @"Array<LLVMModuleRef>___setitem__", void (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)* @"Array<LLVMModuleRef>_append", %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)* @"Array<LLVMModuleRef>___getitem__", i1 (%"Array<LLVMModuleRef>.580509"*, %"Array<LLVMModuleRef>.580509"*)* @"Array<LLVMModuleRef>___eq__", i1 (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)* @"Array<LLVMModuleRef>___in__", i64 (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)* @"Array<LLVMModuleRef>_find", %string.580129* (%"Array<LLVMModuleRef>.580509"*, %string.580129*)* @"Array<LLVMModuleRef>_join", %string.580129* (%"Array<LLVMModuleRef>.580509"*)* @"Array<LLVMModuleRef>___as_string__" }
@str.366 = private unnamed_addr constant [15 x i8] c"@LLVMModuleRef\00"
@"Bucket<string, IntrinsicResult>_vtable_data" = global %"Bucket<string, IntrinsicResult>_vtable_ty.580516" { void (%"Bucket<string, IntrinsicResult>.580515"*, %string.580129*, %IntrinsicResult.580485*)* @"Bucket<string, IntrinsicResult>_set" }
@"Array<Bucket<string, IntrinsicResult>>_vtable_data" = global %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518" { void (%"Array<Bucket<string, IntrinsicResult>>.580517"*)* @"Array<Bucket<string, IntrinsicResult>>_resize", void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64, i64)* @"Array<Bucket<string, IntrinsicResult>>_swap", void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)* @"Array<Bucket<string, IntrinsicResult>>___sl__", void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64, %"Bucket<string, IntrinsicResult>.580515"*)* @"Array<Bucket<string, IntrinsicResult>>___setitem__", void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)* @"Array<Bucket<string, IntrinsicResult>>_append", %"Bucket<string, IntrinsicResult>.580515"* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64)* @"Array<Bucket<string, IntrinsicResult>>___getitem__", i1 (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Array<Bucket<string, IntrinsicResult>>.580517"*)* @"Array<Bucket<string, IntrinsicResult>>___eq__", i1 (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)* @"Array<Bucket<string, IntrinsicResult>>___in__", i64 (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)* @"Array<Bucket<string, IntrinsicResult>>_find", %string.580129* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %string.580129*)* @"Array<Bucket<string, IntrinsicResult>>_join", %string.580129* (%"Array<Bucket<string, IntrinsicResult>>.580517"*)* @"Array<Bucket<string, IntrinsicResult>>___as_string__" }
@str.367 = private unnamed_addr constant [33 x i8] c"@Bucket<string, IntrinsicResult>\00"
@"Map<string, IntrinsicResult>_vtable_data" = global %"Map<string, IntrinsicResult>_vtable_ty.580514" { i64 (%"Map<string, IntrinsicResult>.580510"*, %string.580129*)* @"Map<string, IntrinsicResult>_hash_fnc", void (%"Map<string, IntrinsicResult>.580510"*)* @"Map<string, IntrinsicResult>_resize", void (%"Map<string, IntrinsicResult>.580510"*, %string.580129*, %IntrinsicResult.580485*)* @"Map<string, IntrinsicResult>_set", %IntrinsicResult.580485* (%"Map<string, IntrinsicResult>.580510"*, %string.580129*)* @"Map<string, IntrinsicResult>_get", %"Array<Bucket<string, IntrinsicResult>>.580517"* (%"Map<string, IntrinsicResult>.580510"*)* @"Map<string, IntrinsicResult>_get_buckets" }
@"Bucket<string, CGClassType>_vtable_data" = global %"Bucket<string, CGClassType>_vtable_ty.580521" { void (%"Bucket<string, CGClassType>.580520"*, %string.580129*, %CGClassType.580487*)* @"Bucket<string, CGClassType>_set" }
@"Array<Bucket<string, CGClassType>>_vtable_data" = global %"Array<Bucket<string, CGClassType>>_vtable_ty.580523" { void (%"Array<Bucket<string, CGClassType>>.580522"*)* @"Array<Bucket<string, CGClassType>>_resize", void (%"Array<Bucket<string, CGClassType>>.580522"*, i64, i64)* @"Array<Bucket<string, CGClassType>>_swap", void (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)* @"Array<Bucket<string, CGClassType>>___sl__", void (%"Array<Bucket<string, CGClassType>>.580522"*, i64, %"Bucket<string, CGClassType>.580520"*)* @"Array<Bucket<string, CGClassType>>___setitem__", void (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)* @"Array<Bucket<string, CGClassType>>_append", %"Bucket<string, CGClassType>.580520"* (%"Array<Bucket<string, CGClassType>>.580522"*, i64)* @"Array<Bucket<string, CGClassType>>___getitem__", i1 (%"Array<Bucket<string, CGClassType>>.580522"*, %"Array<Bucket<string, CGClassType>>.580522"*)* @"Array<Bucket<string, CGClassType>>___eq__", i1 (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)* @"Array<Bucket<string, CGClassType>>___in__", i64 (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)* @"Array<Bucket<string, CGClassType>>_find", %string.580129* (%"Array<Bucket<string, CGClassType>>.580522"*, %string.580129*)* @"Array<Bucket<string, CGClassType>>_join", %string.580129* (%"Array<Bucket<string, CGClassType>>.580522"*)* @"Array<Bucket<string, CGClassType>>___as_string__" }
@str.368 = private unnamed_addr constant [29 x i8] c"@Bucket<string, CGClassType>\00"
@"Map<string, CGClassType>_vtable_data" = global %"Map<string, CGClassType>_vtable_ty.580519" { i64 (%"Map<string, CGClassType>.580511"*, %string.580129*)* @"Map<string, CGClassType>_hash_fnc", void (%"Map<string, CGClassType>.580511"*)* @"Map<string, CGClassType>_resize", void (%"Map<string, CGClassType>.580511"*, %string.580129*, %CGClassType.580487*)* @"Map<string, CGClassType>_set", %CGClassType.580487* (%"Map<string, CGClassType>.580511"*, %string.580129*)* @"Map<string, CGClassType>_get", %"Array<Bucket<string, CGClassType>>.580522"* (%"Map<string, CGClassType>.580511"*)* @"Map<string, CGClassType>_get_buckets" }
@"Bucket<string, CGEnumType>_vtable_data" = global %"Bucket<string, CGEnumType>_vtable_ty.580526" { void (%"Bucket<string, CGEnumType>.580525"*, %string.580129*, %CGEnumType.580501*)* @"Bucket<string, CGEnumType>_set" }
@"Array<Bucket<string, CGEnumType>>_vtable_data" = global %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528" { void (%"Array<Bucket<string, CGEnumType>>.580527"*)* @"Array<Bucket<string, CGEnumType>>_resize", void (%"Array<Bucket<string, CGEnumType>>.580527"*, i64, i64)* @"Array<Bucket<string, CGEnumType>>_swap", void (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)* @"Array<Bucket<string, CGEnumType>>___sl__", void (%"Array<Bucket<string, CGEnumType>>.580527"*, i64, %"Bucket<string, CGEnumType>.580525"*)* @"Array<Bucket<string, CGEnumType>>___setitem__", void (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)* @"Array<Bucket<string, CGEnumType>>_append", %"Bucket<string, CGEnumType>.580525"* (%"Array<Bucket<string, CGEnumType>>.580527"*, i64)* @"Array<Bucket<string, CGEnumType>>___getitem__", i1 (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Array<Bucket<string, CGEnumType>>.580527"*)* @"Array<Bucket<string, CGEnumType>>___eq__", i1 (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)* @"Array<Bucket<string, CGEnumType>>___in__", i64 (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)* @"Array<Bucket<string, CGEnumType>>_find", %string.580129* (%"Array<Bucket<string, CGEnumType>>.580527"*, %string.580129*)* @"Array<Bucket<string, CGEnumType>>_join", %string.580129* (%"Array<Bucket<string, CGEnumType>>.580527"*)* @"Array<Bucket<string, CGEnumType>>___as_string__" }
@str.369 = private unnamed_addr constant [28 x i8] c"@Bucket<string, CGEnumType>\00"
@"Map<string, CGEnumType>_vtable_data" = global %"Map<string, CGEnumType>_vtable_ty.580524" { i64 (%"Map<string, CGEnumType>.580512"*, %string.580129*)* @"Map<string, CGEnumType>_hash_fnc", void (%"Map<string, CGEnumType>.580512"*)* @"Map<string, CGEnumType>_resize", void (%"Map<string, CGEnumType>.580512"*, %string.580129*, %CGEnumType.580501*)* @"Map<string, CGEnumType>_set", %CGEnumType.580501* (%"Map<string, CGEnumType>.580512"*, %string.580129*)* @"Map<string, CGEnumType>_get", %"Array<Bucket<string, CGEnumType>>.580527"* (%"Map<string, CGEnumType>.580512"*)* @"Map<string, CGEnumType>_get_buckets" }
@CodeGen_vtable_data = global %CodeGen_vtable_ty.580508 { %GeneratedModule.580483* (%CodeGen.580507*, %Program.580445*)* @CodeGen_codegenProgram, void (%CodeGen.580507*)* @CodeGen_link_modules, %LLVMValueRef.580455* (%CodeGen.580507*, %VarId.580331*)* @CodeGen_get_var_from_varid, %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)* @CodeGen_get_class_from_typeid, %CGEnumType.580501* (%CodeGen.580507*, %TypeId.580287*)* @CodeGen_get_enum_from_typeid, %CGClassType.580487* (%CodeGen.580507*, %VarId.580331*)* @CodeGen_get_class_from_varid, %CGEnumType.580501* (%CodeGen.580507*, %VarId.580331*)* @CodeGen_get_enum_from_varid, void (%CodeGen.580507*, %TypeId.580287*, %CGClassType.580487*)* @CodeGen_add_class, void (%CodeGen.580507*, %TypeId.580287*, %CGEnumType.580501*)* @CodeGen_add_enum, void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)* @CodeGen_add_var, %LLVMValueRef.580455* (%CodeGen.580507*, i1)* @CodeGen_createLLVMBool, %LLVMValueRef.580455* (%CodeGen.580507*, i64)* @CodeGen_creatLLVMInt, %LLVMModuleRef.580453* (%CodeGen.580507*, %Module.580421*)* @CodeGen_codegen_module, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)* @CodeGen_codegen_type, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ReturnStatement.580359*)* @CodeGen_codegen_return_stmt, %LLVMValueRef.580455* (%CodeGen.580507*, %IntExpression.580303*)* @CodeGen_codegen_int, %LLVMValueRef.580455* (%CodeGen.580507*, %FloatExpression.580307*)* @CodeGen_codegen_float, %LLVMValueRef.580455* (%CodeGen.580507*, %BooleanExpression.580305*)* @CodeGen_codegen_bool, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %"Array<LLVMValueRef>.580505"*)* @CodeGen_codegen_call_sprintf, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %StringExpression.580309*)* @CodeGen_codegen_string, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %ArrayExpression.580315*)* @CodeGen_store_array_elements, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ArrayExpression.580315*)* @CodeGen_codegen_array_exp, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarAccessExpression.580343*)* @CodeGen_get_var_expr_mem, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IndexExpression.580327*)* @CodeGen_get_index_expr_mem, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)* @CodeGen_get_member_expr_mem, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)* @CodeGen_get_expr_mem, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %Expression.580293*)* @CodeGen_store_expr_to_mem, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %BinaryExpression.580317*)* @CodeGen_codegen_assignment, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Type.580273*, %LLVMValueRef.580455*, %LLVMValueRef.580455*)* @CodeGen_codegen_pow_expr, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %BinaryExpression.580317*)* @CodeGen_codegen_bin_exp, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %TypeCastExpression.580323*)* @CodeGen_codegen_typecast_exp, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %UnaryExpression.580319*)* @CodeGen_codegen_unary_exp, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarAccessExpression.580343*)* @CodeGen_codegen_var_access_exp, %LLVMValueRef.580455* (%CodeGen.580507*, %NullExpression.580313*)* @CodeGen_codegen_null, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %TernaryExpression.580321*)* @CodeGen_codegen_ternary_exp, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %CallExpression.580329*)* @CodeGen_codegen_call_exp, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IndexExpression.580327*)* @CodeGen_codegen_index_exp, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %NewExpression.580325*)* @CodeGen_codegen_new_exp, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)* @CodeGen_codegen_member_exp, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)* @CodeGen_codegen_expression, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IfStatement.580349*)* @CodeGen_codegen_if_stmt, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ForStatement.580355*)* @CodeGen_codegen_for_stmt, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %WhileStatement.580357*)* @CodeGen_codegen_while_stmt, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ObjectType.580297*, %LLVMValueRef.580455*, %"Array<Expression>.580311"*)* @CodeGen_build_constructor_call, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarDeclaration.580351*)* @CodeGen_codegen_var_declaration, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ConstDeclaration.580353*)* @CodeGen_codegen_const_declaration, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Statement.580285*)* @CodeGen_codegen_statement, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)* @CodeGen_codegen_block, void (%CodeGen.580507*, %Function.580391*)* @CodeGen_codegen_function, void (%CodeGen.580507*, %Class.580403*)* @CodeGen_codegen_class, void (%CodeGen.580507*, %Function.580391*)* @CodeGen_declare_function, %LLVMValueRef.580455* (%CodeGen.580507*, %string.580129*, %LLVMTypeRef.580454*)* @CodeGen_declare_method, void (%CodeGen.580507*, %CGClassType.580487*, %Class.580403*)* @CodeGen_declare_static_props, void (%CodeGen.580507*, %CGClassType.580487*, %Class.580403*, %"Array<LLVMTypeRef>.580503"*)* @CodeGen_declare_class_props, void (%CodeGen.580507*, %Class.580403*)* @CodeGen_declare_class, void (%CodeGen.580507*, %Class.580403*)* @CodeGen_declare_class_struct, void (%CodeGen.580507*, %Enum.580417*)* @CodeGen_declare_enum }
@str.370 = private unnamed_addr constant [9 x i8] c"snprintf\00"
@str.371 = private unnamed_addr constant [8 x i8] c"sprintf\00"
@str.372 = private unnamed_addr constant [2 x i8] c"$\00"
@str.373 = private unnamed_addr constant [46 x i8] c"This should never happen! (get_expr_mem: var)\00"
@str.374 = private unnamed_addr constant [9 x i8] c"arrayidx\00"
@str.375 = private unnamed_addr constant [7 x i8] c"ptridx\00"
@str.376 = private unnamed_addr constant [10 x i8] c"memberidx\00"
@str.377 = private unnamed_addr constant [12 x i8] c"llvm.pow.%s\00"
@str.378 = private unnamed_addr constant [11 x i8] c"incdec.ptr\00"
@str.379 = private unnamed_addr constant [51 x i8] c"This should never happen; (codegen_var_access_exp)\00"
@str.380 = private unnamed_addr constant [11 x i8] c"true_block\00"
@str.381 = private unnamed_addr constant [12 x i8] c"false_block\00"
@str.382 = private unnamed_addr constant [4 x i8] c"end\00"
@str.383 = private unnamed_addr constant [8 x i8] c"ternary\00"
@str.384 = private unnamed_addr constant [52 x i8] c"this should not happen; (codegen_member_exp); class\00"
@str.385 = private unnamed_addr constant [60 x i8] c"This should never happen; (codegen_member_expr; class prop)\00"
@str.386 = private unnamed_addr constant [51 x i8] c"this should not happen; (codegen_member_exp); enum\00"
@str.387 = private unnamed_addr constant [9 x i8] c"if.entry\00"
@str.388 = private unnamed_addr constant [6 x i8] c"ifend\00"
@str.389 = private unnamed_addr constant [10 x i8] c"for.entry\00"
@str.390 = private unnamed_addr constant [9 x i8] c"for.cond\00"
@str.391 = private unnamed_addr constant [9 x i8] c"for.body\00"
@str.392 = private unnamed_addr constant [9 x i8] c"for.incr\00"
@str.393 = private unnamed_addr constant [8 x i8] c"for.end\00"
@str.394 = private unnamed_addr constant [12 x i8] c"while.entry\00"
@str.395 = private unnamed_addr constant [10 x i8] c"while.end\00"
@str.396 = private unnamed_addr constant [45 x i8] c"This should never happen; (codegen_function)\00"
@str.397 = private unnamed_addr constant [6 x i8] c"%s_%s\00"
@str.398 = private unnamed_addr constant [9 x i8] c"VTable%s\00"
@str.399 = private unnamed_addr constant [15 x i8] c"%s_constructor\00"
@"Arraymain.flo_vtable_data" = global %"Arraymain.flo_vtable_ty.580530" { void (%"Arraymain.flo.580529"*)* @"Arraymain.flo_resize", void (%"Arraymain.flo.580529"*, i64, i64)* @"Arraymain.flo_swap", void (%"Arraymain.flo.580529"*, %string.580129*)* @"Arraymain.flo___sl__", void (%"Arraymain.flo.580529"*, i64, %string.580129*)* @"Arraymain.flo___setitem__", void (%"Arraymain.flo.580529"*, %string.580129*)* @"Arraymain.flo_append", %string.580129* (%"Arraymain.flo.580529"*, i64)* @"Arraymain.flo___getitem__", i1 (%"Arraymain.flo.580529"*, %"Arraymain.flo.580529"*)* @"Arraymain.flo___eq__", i1 (%"Arraymain.flo.580529"*, %string.580129*)* @"Arraymain.flo___in__", i64 (%"Arraymain.flo.580529"*, %string.580129*)* @"Arraymain.flo_find", %string.580129* (%"Arraymain.flo.580529"*, %string.580129*)* @"Arraymain.flo_join", %string.580129* (%"Arraymain.flo.580529"*)* @"Arraymain.flo___as_string__" }
@str.400 = private unnamed_addr constant [28 x i8] c"Usage: %s <path> [OPTIONS]\0A\00"
@str.401 = private unnamed_addr constant [9 x i8] c"OPTIONS:\00"
@str.402 = private unnamed_addr constant [38 x i8] c" -h, --help\09\09\09Show this help message.\00"
@str.403 = private unnamed_addr constant [41 x i8] c" --print-tokens\09\09\09Print generated Tokens\00"
@str.404 = private unnamed_addr constant [36 x i8] c" --print-ast\09\09\09Print generated AST.\00"
@str.405 = private unnamed_addr constant [41 x i8] c" --print-llvm\09\09\09Print generated LLVM-IR.\00"
@str.406 = private unnamed_addr constant [43 x i8] c" -o <file>\09\09\09Place the output into <file>.\00"
@str.407 = private unnamed_addr constant [39 x i8] c" --no-output\09\09\09Compile with no output.\00"
@str.408 = private unnamed_addr constant [47 x i8] c" --target\09\09\09Compile to specific target triple.\00"
@str.409 = private unnamed_addr constant [93 x i8] c" -O OPT_LEVEL\0A \09\09\09\09Specify the compiler's optimization level which is a\0A \09\09\09\09value from 0-3.\00"
@str.410 = private unnamed_addr constant [47 x i8] c" -e, --execute\09\09\09Execute file after compiling.\00"
@str.411 = private unnamed_addr constant [31 x i8] c" -v, --version\09\09\09Show version.\00"
@str.412 = private unnamed_addr constant [35 x i8] c"Missing value after '%s' argument.\00"
@str.413 = private unnamed_addr constant [3 x i8] c"-v\00"
@str.414 = private unnamed_addr constant [10 x i8] c"--version\00"
@str.415 = private unnamed_addr constant [20 x i8] c"v0.01@test.selfhost\00"
@str.416 = private unnamed_addr constant [3 x i8] c"-h\00"
@str.417 = private unnamed_addr constant [7 x i8] c"--help\00"
@str.418 = private unnamed_addr constant [32 x i8] c"No such file or directory: '%s'\00"
@str.419 = private unnamed_addr constant [15 x i8] c"--print-tokens\00"
@str.420 = private unnamed_addr constant [3 x i8] c"-O\00"
@str.421 = private unnamed_addr constant [2 x i8] c"1\00"
@str.422 = private unnamed_addr constant [13 x i8] c"--print-llvm\00"
@str.423 = private unnamed_addr constant [12 x i8] c"--no-output\00"
@str.424 = private unnamed_addr constant [3 x i8] c"-o\00"
@str.425 = private unnamed_addr constant [4 x i8] c"a.o\00"
@str.426 = private unnamed_addr constant [9 x i8] c"--target\00"
@str.427 = private unnamed_addr constant [3 x i8] c"-e\00"
@str.428 = private unnamed_addr constant [10 x i8] c"--execute\00"
@str.429 = private unnamed_addr constant [25 x i8] c"No input file specified.\00"

declare i64 @memcmp(i8*, i8*, i64) local_unnamed_addr

declare i64 @memcpy(i8*, i8*, i64) local_unnamed_addr

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #0

; Function Attrs: nofree norecurse nounwind writeonly
define void @string_constructor(%string.580129* nocapture %.1, i8* %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  store i8* %.2, i8** %.11, align 8
  %.15 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 2
  store i64 %.3, i64* %.15, align 8
  %.19 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 3
  store i64 %.3, i64* %.19, align 8
  ret void
}

define noalias %string.580129* @string___add__(%string.580129* nocapture readonly %.1, %string.580129* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = add i64 %.12, %.9
  %.17 = call i8* @malloc(i64 %.13)
  %.21 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.22 = load i8*, i8** %.21, align 8
  %.26 = call i64 @memcpy(i8* %.17, i8* %.22, i64 %.9)
  %.30 = load i64, i64* %.8, align 8
  %.31 = getelementptr inbounds i8, i8* %.17, i64 %.30
  %.35 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 1
  %.36 = load i8*, i8** %.35, align 8
  %.39 = load i64, i64* %.11, align 8
  %.40 = add i64 %.39, 1
  %.41 = call i64 @memcpy(i8* %.31, i8* %.36, i64 %.40)
  %.44 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.45 = bitcast i8* %.44 to %string.580129*
  %.46 = bitcast i8* %.44 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.46, align 8
  call void @string_constructor(%string.580129* %.45, i8* %.17, i64 %.13)
  ret %string.580129* %.45
}

; Function Attrs: nounwind
define void @string_add_byte(%string.580129* nocapture %.1, i8 %.2) #2 {
.4:
  %.8 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.10 = add i64 %.9, 1
  %.12 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.14.not = icmp slt i64 %.10, %.13
  br i1 %.14.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.20 = shl i64 %.13, 1
  store i64 %.20, i64* %.12, align 8
  %.25 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.26 = load i8*, i8** %.25, align 8
  %.30 = shl i64 %.13, 4
  %.31 = call i8* @realloc(i8* %.26, i64 %.30)
  store i8* %.31, i8** %.25, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.37 = load i64, i64* %.8, align 8
  %.39 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.40 = load i8*, i8** %.39, align 8
  %.42 = getelementptr inbounds i8, i8* %.40, i64 %.37
  store i8 %.2, i8* %.42, align 1
  %.46 = load i64, i64* %.8, align 8
  %.47 = add i64 %.46, 1
  store i64 %.47, i64* %.8, align 8
  ret void
}

; Function Attrs: nofree nounwind
define noalias %string.580129* @string___getitem__(%string.580129* nocapture readonly %.1, i64 %.2) #3 {
.4:
  %.8 = call dereferenceable_or_null(2) i8* @malloc(i64 2)
  %.13 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.14 = load i8*, i8** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.14, i64 %.2
  %.16 = load i8, i8* %.15, align 1
  store i8 %.16, i8* %.8, align 1
  %.20 = getelementptr inbounds i8, i8* %.8, i64 1
  store i8 0, i8* %.20, align 1
  %.23 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.580129*
  %.25 = bitcast i8* %.23 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.25, align 8
  call void @string_constructor(%string.580129* %.24, i8* nonnull %.8, i64 2)
  ret %string.580129* %.24
}

define i1 @string___eq__(%string.580129* nocapture readonly %.1, %string.580129* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  ret i1 false

.4.endif:                                         ; preds = %.4
  %.17 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.18 = load i8*, i8** %.17, align 8
  %.20 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 1
  %.21 = load i8*, i8** %.20, align 8
  %.25 = call i64 @memcmp(i8* %.18, i8* %.21, i64 %.9)
  %.26 = icmp eq i64 %.25, 0
  ret i1 %.26
}

; Function Attrs: norecurse nounwind readonly
define i64 @string_find(%string.580129* nocapture readonly %.1, %string.580129* nocapture readonly %.2) #4 {
.4:
  %.12 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 2
  %.136 = load i64, i64* %.12, align 8
  %.147 = icmp sgt i64 %.136, 0
  br i1 %.147, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.17 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 1
  %.18 = load i8*, i8** %.17, align 8
  %.20 = load i8, i8* %.18, align 1
  %.23 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.24 = load i8*, i8** %.23, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge8 = phi i64 [ 0, %for.body.lr.ph ], [ %.73, %for.body.endif ]
  %.25 = getelementptr inbounds i8, i8* %.24, i64 %storemerge8
  %.26 = load i8, i8* %.25, align 1
  %.27 = icmp eq i8 %.20, %.26
  br i1 %.27, label %for.body.if, label %for.body.endif

for.end.loopexit:                                 ; preds = %while.entry, %while.entry.endif
  %.5910 = phi i64 [ %smin, %while.entry.endif ], [ %.599, %while.entry ]
  %merge.ph = phi i64 [ %storemerge8, %while.entry.endif ], [ -1, %while.entry ]
  store i64 %.5910, i64* %x, align 8
  br label %for.end

for.end:                                          ; preds = %for.body.endif, %.4, %for.end.loopexit, %for.body.if
  %merge = phi i64 [ %storemerge8, %for.body.if ], [ %merge.ph, %for.end.loopexit ], [ -1, %.4 ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.if:                                      ; preds = %for.body
  %.30 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 2
  %.31 = load i64, i64* %.30, align 8
  %.32 = add i64 %.31, -1
  %x = alloca i64, align 8
  store i64 %.32, i64* %x, align 8
  %.36 = icmp sgt i64 %.32, 0
  br i1 %.36, label %while.entry.preheader, label %for.end

while.entry.preheader:                            ; preds = %for.body.if
  %x.promoted = load i64, i64* %x, align 8
  %0 = add i64 %x.promoted, -1
  %1 = icmp slt i64 %0, 0
  %smin = select i1 %1, i64 %0, i64 0
  br label %while.entry

for.body.endif:                                   ; preds = %for.body
  %.73 = add nuw nsw i64 %storemerge8, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.73, %.13
  br i1 %.14, label %for.body, label %for.end

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %.599 = phi i64 [ %x.promoted, %while.entry.preheader ], [ %.59, %while.entry.endif ]
  %.42 = getelementptr inbounds i8, i8* %.18, i64 %.599
  %.43 = load i8, i8* %.42, align 1
  %.46 = add i64 %.599, %storemerge8
  %.50 = getelementptr inbounds i8, i8* %.24, i64 %.46
  %.51 = load i8, i8* %.50, align 1
  %.52.not = icmp eq i8 %.43, %.51
  br i1 %.52.not, label %while.entry.endif, label %for.end.loopexit

while.entry.endif:                                ; preds = %while.entry
  %.59 = add i64 %.599, -1
  %.62 = icmp sgt i64 %.59, 0
  br i1 %.62, label %while.entry, label %for.end.loopexit
}

define i1 @string___in__(%string.580129* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  %.9 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.9, i64 0, i32 4
  %.11 = load i64 (%string.580129*, %string.580129*)*, i64 (%string.580129*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%string.580129* %.1, %string.580129* %.2)
  %.15 = icmp ne i64 %.13, -1
  ret i1 %.15
}

; Function Attrs: nofree nounwind
define noalias %string.580129* @string_substring(%string.580129* nocapture readonly %.1, i64 %.2, i64 %.3) #3 {
.5:
  %.10 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.11 = load i8*, i8** %.10, align 8
  %.13 = getelementptr inbounds i8, i8* %.11, i64 %.2
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.580129*
  %.17 = bitcast i8* %.15 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.17, align 8
  call void @string_constructor(%string.580129* %.16, i8* %.13, i64 %.3)
  ret %string.580129* %.16
}

; Function Attrs: norecurse nounwind readonly
define i8 @string_get_byte(%string.580129* nocapture readonly %.1, i64 %.2) #4 {
.4:
  %.9 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.10 = load i8*, i8** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.10, i64 %.2
  %.12 = load i8, i8* %.11, align 1
  ret i8 %.12
}

; Function Attrs: norecurse nounwind readonly
define i8* @string_get_bytes(%string.580129* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.7 = load i8*, i8** %.6, align 8
  ret i8* %.7
}

define %string.580129* @string_replace(%string.580129* %.1, %string.580129* %.2, %string.580129* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  %.11 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.10, align 8
  %.12 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.11, i64 0, i32 4
  %.13 = load i64 (%string.580129*, %string.580129*)*, i64 (%string.580129*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%string.580129* %.1, %string.580129* %.2)
  %.18 = icmp sgt i64 %.15, 0
  br i1 %.18, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.21 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 2
  %.22 = load i64, i64* %.21, align 8
  %.24 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 2
  %.25 = load i64, i64* %.24, align 8
  %.26 = sub i64 %.22, %.25
  %.28 = getelementptr inbounds %string.580129, %string.580129* %.3, i64 0, i32 2
  %.29 = load i64, i64* %.28, align 8
  %.30 = add i64 %.26, %.29
  %.34 = call i8* @malloc(i64 %.30)
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.39 = load i8*, i8** %.38, align 8
  %.41 = call i64 @memcpy(i8* %.34, i8* %.39, i64 %.15)
  %.44 = getelementptr inbounds i8, i8* %.34, i64 %.15
  %.46 = getelementptr inbounds %string.580129, %string.580129* %.3, i64 0, i32 1
  %.47 = load i8*, i8** %.46, align 8
  %.50 = load i64, i64* %.28, align 8
  %.51 = call i64 @memcpy(i8* %.44, i8* %.47, i64 %.50)
  %.57 = load i64, i64* %.28, align 8
  %.58 = getelementptr inbounds i8, i8* %.44, i64 %.57
  %.61 = load i8*, i8** %.38, align 8
  %.63 = getelementptr inbounds i8, i8* %.61, i64 %.15
  %.64 = getelementptr inbounds i8, i8* %.63, i64 1
  %.67 = load i64, i64* %.21, align 8
  %.69 = sub i64 %.67, %.15
  %.70 = call i64 @memcpy(i8* %.58, i8* nonnull %.64, i64 %.69)
  %.73 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.74 = bitcast i8* %.73 to %string.580129*
  %.75 = bitcast i8* %.73 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.75, align 8
  call void @string_constructor(%string.580129* %.74, i8* %.34, i64 %.30)
  ret %string.580129* %.74

.5.endif:                                         ; preds = %.5
  ret %string.580129* %.1
}

define i8* @string_to_cstring(%string.580129* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.8 = add i64 %.7, 1
  %.10 = call i8* @malloc(i64 %.8)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 1
  %.15 = load i8*, i8** %.14, align 8
  %.19 = call i64 @memcpy(i8* %.10, i8* %.15, i64 %.7)
  %.22 = load i64, i64* %.6, align 8
  %.24 = getelementptr inbounds i8, i8* %.10, i64 %.22
  store i8 0, i8* %.24, align 1
  ret i8* %.10
}

; Function Attrs: nofree nounwind
define noalias %string.580129* @string_from_cstring(i8* %.1) local_unnamed_addr #3 {
.3:
  %.7 = call i64 @strlen(i8* nonnull dereferenceable(1) %.1)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.580129*
  %.10 = bitcast i8* %.8 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.10, align 8
  call void @string_constructor(%string.580129* %.9, i8* %.1, i64 %.7)
  ret %string.580129* %.9
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind writeonly
define void @Range_constructor(%Range.580131* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %Range.580131, %Range.580131* %.1, i64 0, i32 1
  store i64 %.2, i64* %.11, align 8
  %.15 = getelementptr inbounds %Range.580131, %Range.580131* %.1, i64 0, i32 2
  store i64 %.3, i64* %.15, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @Range___in__(%Range.580131* nocapture readonly %.1, i64 %.2) #4 {
.4:
  %.9 = getelementptr inbounds %Range.580131, %Range.580131* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  %.11 = icmp sle i64 %.10, %.2
  %.14 = getelementptr inbounds %Range.580131, %Range.580131* %.1, i64 0, i32 2
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp sgt i64 %.15, %.2
  %.17 = and i1 %.11, %.16
  ret i1 %.17
}

declare i64 @fopen(i8*, i8*) local_unnamed_addr

declare void @fclose(i64) local_unnamed_addr

declare i64 @fread(i8*, i64, i64, i64) local_unnamed_addr

; Function Attrs: nofree nounwind
declare i64 @access(i8* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind writeonly
define void @File_constructor(%File.580133* nocapture %.1, i64 %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %File.580133, %File.580133* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

define noalias %File.580133* @File_open_for_reading(%string.580129* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.7, i64 0, i32 10
  %.9 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.8, align 8
  %.10 = call i8* %.9(%string.580129* %.1)
  %.11 = call i64 @fopen(i8* %.10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.0, i64 0, i64 0))
  %.17 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.18 = bitcast i8* %.17 to %File.580133*
  %.19 = bitcast i8* %.17 to %File_vtable_ty.580134**
  store %File_vtable_ty.580134* @File_vtable_data, %File_vtable_ty.580134** %.19, align 8
  call void @File_constructor(%File.580133* %.18, i64 %.11)
  ret %File.580133* %.18
}

define noalias %string.580129* @File_read_all(%File.580133* nocapture readonly %.1) {
.3:
  %.7 = call i8* @malloc(i64 0)
  %buffer1 = alloca [1024 x i8], align 1
  %.102 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer1, i64 0, i64 0
  %.13 = getelementptr inbounds %File.580133, %File.580133* %.1, i64 0, i32 1
  %.143 = load i64, i64* %.13, align 8
  %.154 = call i64 @fread(i8* nonnull %.102, i64 1, i64 1024, i64 %.143)
  %.185 = icmp eq i64 %.154, 0
  br i1 %.185, label %while.entry.if, label %while.entry.endif

while.entry.if:                                   ; preds = %while.entry.endif, %.3
  %size.0.lcssa = phi i64 [ 0, %.3 ], [ %.32, %while.entry.endif ]
  %allocated_mem.0.lcssa = phi i8* [ %.7, %.3 ], [ %.37, %while.entry.endif ]
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.580129*
  %.24 = bitcast i8* %.22 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.24, align 8
  call void @string_constructor(%string.580129* %.23, i8* %allocated_mem.0.lcssa, i64 %size.0.lcssa)
  ret %string.580129* %.23

while.entry.endif:                                ; preds = %.3, %while.entry.endif
  %.159 = phi i64 [ %.15, %while.entry.endif ], [ %.154, %.3 ]
  %.108 = phi i8* [ %.10, %while.entry.endif ], [ %.102, %.3 ]
  %allocated_mem.07 = phi i8* [ %.37, %while.entry.endif ], [ %.7, %.3 ]
  %size.06 = phi i64 [ %.32, %while.entry.endif ], [ 0, %.3 ]
  %.32 = add i64 %.159, %size.06
  %.36 = shl i64 %.32, 3
  %.37 = call i8* @realloc(i8* %allocated_mem.07, i64 %.36)
  %.41 = getelementptr inbounds i8, i8* %.37, i64 %size.06
  %.45 = call i64 @memcpy(i8* %.41, i8* nonnull %.108, i64 %.159)
  %buffer = alloca [1024 x i8], align 1
  %.10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i64 0, i64 0
  %.14 = load i64, i64* %.13, align 8
  %.15 = call i64 @fread(i8* nonnull %.10, i64 1, i64 1024, i64 %.14)
  %.18 = icmp eq i64 %.15, 0
  br i1 %.18, label %while.entry.if, label %while.entry.endif
}

define i1 @File_exists(%string.580129* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.7, i64 0, i32 10
  %.9 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.8, align 8
  %.10 = call i8* %.9(%string.580129* %.1)
  %.11 = call i64 @access(i8* %.10, i64 0)
  %.12 = icmp sgt i64 %.11, -1
  ret i1 %.12
}

define void @File_close(%File.580133* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %File.580133, %File.580133* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  call void @fclose(i64 %.7)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloRange_constructor(%FloRange.580135* nocapture %.1, i64 %.2, i64 %.3, i64 %.4, i64 %.5) local_unnamed_addr #1 {
.7:
  %.15 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.1, i64 0, i32 1
  store i64 %.2, i64* %.15, align 8
  %.19 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.1, i64 0, i32 2
  store i64 %.3, i64* %.19, align 8
  %.23 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.1, i64 0, i32 3
  store i64 %.4, i64* %.23, align 8
  %.27 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.1, i64 0, i32 4
  store i64 %.5, i64* %.27, align 8
  ret void
}

; Function Attrs: nofree nounwind
define noalias %FloRange.580135* @FloRange_merge(%FloRange.580135* nocapture readonly %.1, %FloRange.580135* nocapture readonly %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.1, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.17 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.2, i64 0, i32 4
  %.18 = load i64, i64* %.17, align 8
  %.19 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.20 = bitcast i8* %.19 to %FloRange.580135*
  %.21 = bitcast i8* %.19 to %FloRange_vtable_ty.580136**
  store %FloRange_vtable_ty.580136* @FloRange_vtable_data, %FloRange_vtable_ty.580136** %.21, align 8
  call void @FloRange_constructor(%FloRange.580135* %.20, i64 %.9, i64 %.12, i64 %.15, i64 %.18)
  ret %FloRange.580135* %.20
}

define noalias %string.580129* @color(%string.580129* %.1) local_unnamed_addr {
.3:
  %.6 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %string.580129*
  %.7.repack = bitcast i8* %.6 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.7.repack, align 8
  %.7.repack1 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.7.repack1 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.1, i64 0, i64 0), i8** %0, align 8
  %.7.repack2 = getelementptr inbounds i8, i8* %.6, i64 16
  %1 = bitcast i8* %.7.repack2 to i64*
  store i64 3, i64* %1, align 8
  %.7.repack3 = getelementptr inbounds i8, i8* %.6, i64 24
  %2 = bitcast i8* %.7.repack3 to i64*
  store i64 3, i64* %2, align 8
  %.9 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  %.10 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.10, i64 0, i32 3
  %.12 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.11, align 8
  %.13 = call i1 %.12(%string.580129* %.1, %string.580129* %.7)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.580129*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.16.repack, align 8
  %.16.repack7 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack7 to i8**
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.2, i64 0, i64 0), i8** %3, align 8
  %.16.repack8 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack8 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack9 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack9 to i64*
  store i64 7, i64* %5, align 8
  ret %string.580129* %.16

.3.endif:                                         ; preds = %.3
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8** %3, align 8
  %.20.repack5 = getelementptr inbounds i8, i8* %.15, i64 16
  %6 = bitcast i8* %.20.repack5 to i64*
  store i64 4, i64* %6, align 8
  %.20.repack6 = getelementptr inbounds i8, i8* %.15, i64 24
  %7 = bitcast i8* %.20.repack6 to i64*
  store i64 4, i64* %7, align 8
  ret %string.580129* %.16
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloError_constructor(%FloError.580137* nocapture %.1, i64 %.2, %string.580129* %.3, %FloRange.580135* %.4) local_unnamed_addr #1 {
.6:
  %.13 = getelementptr inbounds %FloError.580137, %FloError.580137* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %FloError.580137, %FloError.580137* %.1, i64 0, i32 3
  store %FloRange.580135* %.4, %FloRange.580135** %.17, align 8
  %.21 = getelementptr inbounds %FloError.580137, %FloError.580137* %.1, i64 0, i32 2
  store %string.580129* %.3, %string.580129** %.21, align 8
  ret void
}

define i64 @get_next_line_index(%string.580129* %.1, i64 %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  %.9 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.9, i64 0, i32 7
  %.11 = load i8 (%string.580129*, i64)*, i8 (%string.580129*, i64)** %.10, align 8
  %.13 = call i8 %.11(%string.580129* %.1, i64 %.2)
  %.14 = icmp ne i8 %.13, 10
  %.17 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 2
  %.18 = load i64, i64* %.17, align 8
  %.19 = icmp sgt i64 %.18, %.2
  %.20 = and i1 %.14, %.19
  br i1 %.20, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %start.0 = phi i64 [ %.25, %while.entry ], [ %.2, %.4 ]
  %.25 = add nsw i64 %start.0, 1
  %.29 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.8, align 8
  %.30 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.29, i64 0, i32 7
  %.31 = load i8 (%string.580129*, i64)*, i8 (%string.580129*, i64)** %.30, align 8
  %.33 = call i8 %.31(%string.580129* %.1, i64 %.25)
  %.34 = icmp ne i8 %.33, 10
  %.38 = load i64, i64* %.17, align 8
  %.39 = icmp slt i64 %.25, %.38
  %.40 = and i1 %.34, %.39
  br i1 %.40, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %start.1 = phi i64 [ %.2, %.4 ], [ %.25, %while.entry ]
  ret i64 %start.1
}

define void @print_error_line(%string.580129* %.1, %FloRange.580135* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.2, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call i64 @get_next_line_index(%string.580129* %.1, i64 %.10)
  %.14 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.2, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  %.17 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.2, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = sub i64 %.15, %.18
  %.22 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  %.23 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.23, i64 0, i32 6
  %.25 = load %string.580129* (%string.580129*, i64, i64)*, %string.580129* (%string.580129*, i64, i64)** %.24, align 8
  %.29 = sub i64 %.11, %.19
  %.30 = call %string.580129* %.25(%string.580129* %.1, i64 %.19, i64 %.29)
  %.31 = getelementptr inbounds %string.580129, %string.580129* %.30, i64 0, i32 0
  %.32 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.31, align 8
  %.33 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.32, i64 0, i32 10
  %.34 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.33, align 8
  %.35 = call i8* %.34(%string.580129* %.30)
  %.36 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.4, i64 0, i64 0), i8* %.35)
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.580129*
  %.38.repack = bitcast i8* %.37 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.38.repack, align 8
  %.38.repack1 = getelementptr inbounds i8, i8* %.37, i64 8
  %0 = bitcast i8* %.38.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0), i8** %0, align 8
  %.38.repack2 = getelementptr inbounds i8, i8* %.37, i64 16
  %1 = bitcast i8* %.38.repack2 to i64*
  store i64 1, i64* %1, align 8
  %.38.repack3 = getelementptr inbounds i8, i8* %.37, i64 24
  %2 = bitcast i8* %.38.repack3 to i64*
  store i64 1, i64* %2, align 8
  %.43 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.44 = call i8* %.43(%string.580129* %.38)
  %.45 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.4, i64 0, i64 0), i8* %.44)
  %.48 = load i64, i64* %.17, align 8
  %.52 = load i64, i64* %.9, align 8
  %.55 = load i64, i64* %.14, align 8
  %.56 = sub i64 %.52, %.55
  %.6326 = icmp sgt i64 %.48, 0
  %.6527 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.6628 = bitcast i8* %.6527 to %string.580129*
  %.66.repack29 = bitcast i8* %.6527 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.66.repack29, align 8
  %.66.repack1130 = getelementptr inbounds i8, i8* %.6527, i64 8
  %3 = bitcast i8* %.66.repack1130 to i8**
  br i1 %.6326, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %4 = phi i8** [ %7, %for.body ], [ %3, %.4 ]
  %.6633 = phi %string.580129* [ %.66, %for.body ], [ %.6628, %.4 ]
  %.6532 = phi i8* [ %.65, %for.body ], [ %.6527, %.4 ]
  %storemerge31 = phi i64 [ %.78, %for.body ], [ 0, %.4 ]
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.6, i64 0, i64 0), i8** %4, align 8
  %.66.repack12 = getelementptr inbounds i8, i8* %.6532, i64 16
  %5 = bitcast i8* %.66.repack12 to i64*
  store i64 1, i64* %5, align 8
  %.66.repack13 = getelementptr inbounds i8, i8* %.6532, i64 24
  %6 = bitcast i8* %.66.repack13 to i64*
  store i64 1, i64* %6, align 8
  %.71 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.72 = call i8* %.71(%string.580129* %.6633)
  %.73 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.4, i64 0, i64 0), i8* %.72)
  %.78 = add nuw nsw i64 %storemerge31, 1
  %.65 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.66 = bitcast i8* %.65 to %string.580129*
  %.66.repack = bitcast i8* %.65 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.66.repack, align 8
  %.66.repack11 = getelementptr inbounds i8, i8* %.65, i64 8
  %7 = bitcast i8* %.66.repack11 to i8**
  %exitcond41.not = icmp eq i64 %.78, %.48
  br i1 %exitcond41.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.66.le = bitcast i8* %.65 to %string.580129*
  %8 = bitcast i8* %.66.repack11 to i8**
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %.65.lcssa = phi i8* [ %.65, %for.cond.for.end_crit_edge ], [ %.6527, %.4 ]
  %.66.lcssa = phi %string.580129* [ %.66.le, %for.cond.for.end_crit_edge ], [ %.6628, %.4 ]
  %.lcssa15 = phi i8** [ %8, %for.cond.for.end_crit_edge ], [ %3, %.4 ]
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.1, i64 0, i64 0), i8** %.lcssa15, align 8
  %.82.repack5 = getelementptr inbounds i8, i8* %.65.lcssa, i64 16
  %9 = bitcast i8* %.82.repack5 to i64*
  store i64 3, i64* %9, align 8
  %.82.repack6 = getelementptr inbounds i8, i8* %.65.lcssa, i64 24
  %10 = bitcast i8* %.82.repack6 to i64*
  store i64 3, i64* %10, align 8
  %.84 = call %string.580129* @color(%string.580129* %.66.lcssa)
  %.85 = getelementptr inbounds %string.580129, %string.580129* %.84, i64 0, i32 0
  %.86 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.85, align 8
  %.87 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.86, i64 0, i32 10
  %.88 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.87, align 8
  %.89 = call i8* %.88(%string.580129* %.84)
  %.90 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.4, i64 0, i64 0), i8* %.89)
  %.9616 = icmp sgt i64 %.56, 0
  %.9817 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9918 = bitcast i8* %.9817 to %string.580129*
  %.99.repack19 = bitcast i8* %.9817 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.99.repack19, align 8
  %.99.repack820 = getelementptr inbounds i8, i8* %.9817, i64 8
  %11 = bitcast i8* %.99.repack820 to i8**
  br i1 %.9616, label %for.body.1, label %for.end.1

for.body.1:                                       ; preds = %for.end, %for.body.1
  %12 = phi i8** [ %15, %for.body.1 ], [ %11, %for.end ]
  %.9923 = phi %string.580129* [ %.99, %for.body.1 ], [ %.9918, %for.end ]
  %.9822 = phi i8* [ %.98, %for.body.1 ], [ %.9817, %for.end ]
  %storemerge721 = phi i64 [ %.111, %for.body.1 ], [ 0, %for.end ]
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.7, i64 0, i64 0), i8** %12, align 8
  %.99.repack9 = getelementptr inbounds i8, i8* %.9822, i64 16
  %13 = bitcast i8* %.99.repack9 to i64*
  store i64 1, i64* %13, align 8
  %.99.repack10 = getelementptr inbounds i8, i8* %.9822, i64 24
  %14 = bitcast i8* %.99.repack10 to i64*
  store i64 1, i64* %14, align 8
  %.104 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.105 = call i8* %.104(%string.580129* %.9923)
  %.106 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.4, i64 0, i64 0), i8* %.105)
  %.111 = add nuw nsw i64 %storemerge721, 1
  %.98 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.99 = bitcast i8* %.98 to %string.580129*
  %.99.repack = bitcast i8* %.98 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.99.repack, align 8
  %.99.repack8 = getelementptr inbounds i8, i8* %.98, i64 8
  %15 = bitcast i8* %.99.repack8 to i8**
  %exitcond.not = icmp eq i64 %.111, %.56
  br i1 %exitcond.not, label %for.cond.1.for.end.1_crit_edge, label %for.body.1

for.cond.1.for.end.1_crit_edge:                   ; preds = %for.body.1
  %.99.le = bitcast i8* %.98 to %string.580129*
  %16 = bitcast i8* %.99.repack8 to i8**
  br label %for.end.1

for.end.1:                                        ; preds = %for.cond.1.for.end.1_crit_edge, %for.end
  %.98.lcssa = phi i8* [ %.98, %for.cond.1.for.end.1_crit_edge ], [ %.9817, %for.end ]
  %.99.lcssa = phi %string.580129* [ %.99.le, %for.cond.1.for.end.1_crit_edge ], [ %.9918, %for.end ]
  %.lcssa = phi i8** [ %16, %for.cond.1.for.end.1_crit_edge ], [ %11, %for.end ]
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %.lcssa, align 8
  %.120 = getelementptr inbounds i8, i8* %.98.lcssa, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.120, i8 0, i64 16, i1 false)
  %.124 = call %string.580129* @color(%string.580129* %.99.lcssa)
  %.125 = getelementptr inbounds %string.580129, %string.580129* %.124, i64 0, i32 0
  %.126 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.125, align 8
  %.127 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.126, i64 0, i32 10
  %.128 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.127, align 8
  %.129 = call i8* %.128(%string.580129* %.124)
  %.130 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #3

define void @print_message_error(i64 %.1, %string.580129* %.2) local_unnamed_addr {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.8 = bitcast i8* %.7 to %string.580129*
  %.8.repack = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.8.repack, align 8
  %.8.repack1 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.8.repack1 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.1, i64 0, i64 0), i8** %0, align 8
  %.8.repack2 = getelementptr inbounds i8, i8* %.7, i64 16
  %1 = bitcast i8* %.8.repack2 to i64*
  store i64 3, i64* %1, align 8
  %.8.repack3 = getelementptr inbounds i8, i8* %.7, i64 24
  %2 = bitcast i8* %.8.repack3 to i64*
  store i64 3, i64* %2, align 8
  %.10 = call %string.580129* @color(%string.580129* %.8)
  %.11 = getelementptr inbounds %string.580129, %string.580129* %.10, i64 0, i32 0
  %.12 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.11, align 8
  %.13 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.12, i64 0, i32 10
  %.14 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.13, align 8
  %.15 = call i8* %.14(%string.580129* %.10)
  %.16 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.4, i64 0, i64 0), i8* %.15)
  switch i64 %.1, label %.4.else.else.else.else.else [
    i64 0, label %.4.if
    i64 2, label %.4.else.if
    i64 3, label %.4.else.else.if
    i64 5, label %.4.else.else.else.if
    i64 1, label %.4.else.else.else.else.if
  ]

.4.if:                                            ; preds = %.4
  %.20 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.21 = bitcast i8* %.20 to %string.580129*
  %.21.repack = bitcast i8* %.20 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.21.repack, align 8
  %.21.repack19 = getelementptr inbounds i8, i8* %.20, i64 8
  %3 = bitcast i8* %.21.repack19 to i8**
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.10, i64 0, i64 0), i8** %3, align 8
  %.21.repack20 = getelementptr inbounds i8, i8* %.20, i64 16
  %4 = bitcast i8* %.21.repack20 to i64*
  store i64 21, i64* %4, align 8
  %.21.repack21 = getelementptr inbounds i8, i8* %.20, i64 24
  %5 = bitcast i8* %.21.repack21 to i64*
  store i64 21, i64* %5, align 8
  %.26 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.27 = call i8* %.26(%string.580129* %.21)
  br label %.4.endif

.4.endif:                                         ; preds = %.4.else.else.else.else.if, %.4.else.else.else.else.else, %.4.else.else.else.if, %.4.else.else.if, %.4.else.if, %.4.if
  %.79.sink = phi i8* [ %.79, %.4.else.else.else.else.if ], [ %.89, %.4.else.else.else.else.else ], [ %.66, %.4.else.else.else.if ], [ %.53, %.4.else.else.if ], [ %.40, %.4.else.if ], [ %.27, %.4.if ]
  %.80 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.4, i64 0, i64 0), i8* %.79.sink)
  %.96 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.580129*
  %.98 = bitcast i8* %.96 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.98, align 8
  %.100 = getelementptr inbounds i8, i8* %.96, i64 8
  %6 = bitcast i8* %.100 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %6, align 8
  %.102 = getelementptr inbounds i8, i8* %.96, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.102, i8 0, i64 16, i1 false)
  %.106 = call %string.580129* @color(%string.580129* %.97)
  %.107 = getelementptr inbounds %string.580129, %string.580129* %.106, i64 0, i32 0
  %.108 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.107, align 8
  %.109 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.108, i64 0, i32 10
  %.110 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.109, align 8
  %.111 = call i8* %.110(%string.580129* %.106)
  %.112 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.4, i64 0, i64 0), i8* %.111)
  %.114 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  %.115 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.114, align 8
  %.116 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.115, i64 0, i32 10
  %.117 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.116, align 8
  %.118 = call i8* %.117(%string.580129* %.2)
  %.119 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.118, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  ret void

.4.else.if:                                       ; preds = %.4
  %.33 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.580129*
  %.34.repack = bitcast i8* %.33 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.34.repack, align 8
  %.34.repack16 = getelementptr inbounds i8, i8* %.33, i64 8
  %7 = bitcast i8* %.34.repack16 to i8**
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.11, i64 0, i64 0), i8** %7, align 8
  %.34.repack17 = getelementptr inbounds i8, i8* %.33, i64 16
  %8 = bitcast i8* %.34.repack17 to i64*
  store i64 16, i64* %8, align 8
  %.34.repack18 = getelementptr inbounds i8, i8* %.33, i64 24
  %9 = bitcast i8* %.34.repack18 to i64*
  store i64 16, i64* %9, align 8
  %.39 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.40 = call i8* %.39(%string.580129* %.34)
  br label %.4.endif

.4.else.else.if:                                  ; preds = %.4
  %.46 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.47 = bitcast i8* %.46 to %string.580129*
  %.47.repack = bitcast i8* %.46 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.47.repack, align 8
  %.47.repack13 = getelementptr inbounds i8, i8* %.46, i64 8
  %10 = bitcast i8* %.47.repack13 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.12, i64 0, i64 0), i8** %10, align 8
  %.47.repack14 = getelementptr inbounds i8, i8* %.46, i64 16
  %11 = bitcast i8* %.47.repack14 to i64*
  store i64 12, i64* %11, align 8
  %.47.repack15 = getelementptr inbounds i8, i8* %.46, i64 24
  %12 = bitcast i8* %.47.repack15 to i64*
  store i64 12, i64* %12, align 8
  %.52 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.53 = call i8* %.52(%string.580129* %.47)
  br label %.4.endif

.4.else.else.else.if:                             ; preds = %.4
  %.59 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.60 = bitcast i8* %.59 to %string.580129*
  %.60.repack = bitcast i8* %.59 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60.repack, align 8
  %.60.repack10 = getelementptr inbounds i8, i8* %.59, i64 8
  %13 = bitcast i8* %.60.repack10 to i8**
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.13, i64 0, i64 0), i8** %13, align 8
  %.60.repack11 = getelementptr inbounds i8, i8* %.59, i64 16
  %14 = bitcast i8* %.60.repack11 to i64*
  store i64 14, i64* %14, align 8
  %.60.repack12 = getelementptr inbounds i8, i8* %.59, i64 24
  %15 = bitcast i8* %.60.repack12 to i64*
  store i64 14, i64* %15, align 8
  %.65 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.66 = call i8* %.65(%string.580129* %.60)
  br label %.4.endif

.4.else.else.else.else.if:                        ; preds = %.4
  %.72 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.580129*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.73.repack, align 8
  %.73.repack7 = getelementptr inbounds i8, i8* %.72, i64 8
  %16 = bitcast i8* %.73.repack7 to i8**
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.14, i64 0, i64 0), i8** %16, align 8
  %.73.repack8 = getelementptr inbounds i8, i8* %.72, i64 16
  %17 = bitcast i8* %.73.repack8 to i64*
  store i64 14, i64* %17, align 8
  %.73.repack9 = getelementptr inbounds i8, i8* %.72, i64 24
  %18 = bitcast i8* %.73.repack9 to i64*
  store i64 14, i64* %18, align 8
  %.78 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.79 = call i8* %.78(%string.580129* %.73)
  br label %.4.endif

.4.else.else.else.else.else:                      ; preds = %.4
  %.82 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.83 = bitcast i8* %.82 to %string.580129*
  %.83.repack = bitcast i8* %.82 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.83.repack, align 8
  %.83.repack4 = getelementptr inbounds i8, i8* %.82, i64 8
  %19 = bitcast i8* %.83.repack4 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.15, i64 0, i64 0), i8** %19, align 8
  %.83.repack5 = getelementptr inbounds i8, i8* %.82, i64 16
  %20 = bitcast i8* %.83.repack5 to i64*
  store i64 9, i64* %20, align 8
  %.83.repack6 = getelementptr inbounds i8, i8* %.82, i64 24
  %21 = bitcast i8* %.83.repack6 to i64*
  store i64 9, i64* %21, align 8
  %.88 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.89 = call i8* %.88(%string.580129* %.83)
  br label %.4.endif
}

define void @print_error(%FloError.580137* nocapture readonly %.1, %string.580129* %.2, %string.580129* %.3) local_unnamed_addr {
.5:
  %.10 = getelementptr inbounds %FloError.580137, %FloError.580137* %.1, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %FloError.580137, %FloError.580137* %.1, i64 0, i32 2
  %.14 = load %string.580129*, %string.580129** %.13, align 8
  call void @print_message_error(i64 %.11, %string.580129* %.14)
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %string.580129*
  %.17.repack = bitcast i8* %.16 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.17.repack, align 8
  %.17.repack1 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.17.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.16, i64 0, i64 0), i8** %0, align 8
  %.17.repack2 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.17.repack2 to i64*
  store i64 6, i64* %1, align 8
  %.17.repack3 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.17.repack3 to i64*
  store i64 6, i64* %2, align 8
  %.23 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 0), align 16
  %.24 = call %string.580129* %.23(%string.580129* %.17, %string.580129* %.2)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.26 = bitcast i8* %.25 to %string.580129*
  %.26.repack = bitcast i8* %.25 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26.repack, align 8
  %.26.repack4 = getelementptr inbounds i8, i8* %.25, i64 8
  %3 = bitcast i8* %.26.repack4 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.17, i64 0, i64 0), i8** %3, align 8
  %.26.repack5 = getelementptr inbounds i8, i8* %.25, i64 16
  %4 = bitcast i8* %.26.repack5 to i64*
  store i64 7, i64* %4, align 8
  %.26.repack6 = getelementptr inbounds i8, i8* %.25, i64 24
  %5 = bitcast i8* %.26.repack6 to i64*
  store i64 7, i64* %5, align 8
  %.28 = getelementptr inbounds %string.580129, %string.580129* %.24, i64 0, i32 0
  %.29 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.28, align 8
  %.30 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.29, i64 0, i32 0
  %.31 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.30, align 8
  %.32 = call %string.580129* %.31(%string.580129* %.24, %string.580129* %.26)
  %.34 = getelementptr inbounds %FloError.580137, %FloError.580137* %.1, i64 0, i32 3
  %.35 = load %FloRange.580135*, %FloRange.580135** %.34, align 8
  %.36 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.35, i64 0, i32 4
  %.37 = load i64, i64* %.36, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.32, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 10
  %.41 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.40, align 8
  %.42 = call i8* %.41(%string.580129* %.32)
  %.43 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str.18, i64 0, i64 0), i8* %.42, i64 %.37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.47 = load %FloRange.580135*, %FloRange.580135** %.34, align 8
  call void @print_error_line(%string.580129* %.3, %FloRange.580135* %.47)
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<FloError>_constructor"(%"Array<FloError>.580139"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 1
  %0 = bitcast %FloError.580137*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FloError>_resize"(%"Array<FloError>.580139"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 1
  %0 = bitcast %FloError.580137*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<FloError>_swap"(%"Array<FloError>.580139"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 1
  %.12 = load %FloError.580137**, %FloError.580137*** %.11, align 8
  %.13 = getelementptr inbounds %FloError.580137*, %FloError.580137** %.12, i64 %.2
  %0 = bitcast %FloError.580137** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %FloError.580137*, %FloError.580137** %.12, i64 %.3
  %1 = bitcast %FloError.580137** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %FloError.580137**, %FloError.580137*** %.11, align 8
  %.33 = getelementptr inbounds %FloError.580137*, %FloError.580137** %.31, i64 %.3
  %2 = bitcast %FloError.580137** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<FloError>___sl__"(%"Array<FloError>.580139"* %.1, %FloError.580137* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 0
  %.17 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FloError>.580139"*)*, void (%"Array<FloError>.580139"*)** %.18, align 8
  call void %.19(%"Array<FloError>.580139"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 1
  %.31 = load %FloError.580137**, %FloError.580137*** %.30, align 8
  %.33 = getelementptr inbounds %FloError.580137*, %FloError.580137** %.31, i64 %.24
  store %FloError.580137* %.2, %FloError.580137** %.33, align 8
  ret void
}

define void @"Array<FloError>___setitem__"(%"Array<FloError>.580139"* nocapture readonly %.1, i64 %.2, %FloError.580137* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 1
  %.30 = load %FloError.580137**, %FloError.580137*** %.29, align 8
  %.32 = getelementptr inbounds %FloError.580137*, %FloError.580137** %.30, i64 %.2
  store %FloError.580137* %.3, %FloError.580137** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FloError>_append"(%"Array<FloError>.580139"* %.1, %FloError.580137* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 0
  %.9 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FloError>.580139"*, %FloError.580137*)*, void (%"Array<FloError>.580139"*, %FloError.580137*)** %.10, align 8
  call void %.11(%"Array<FloError>.580139"* %.1, %FloError.580137* %.2)
  ret void
}

define %FloError.580137* @"Array<FloError>___getitem__"(%"Array<FloError>.580139"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 1
  %.28 = load %FloError.580137**, %FloError.580137*** %.27, align 8
  %.29 = getelementptr inbounds %FloError.580137*, %FloError.580137** %.28, i64 %.2
  %.30 = load %FloError.580137*, %FloError.580137** %.29, align 8
  ret %FloError.580137* %.30

.4.endif:                                         ; preds = %.4
  ret %FloError.580137* null
}

define i1 @"Array<FloError>___eq__"(%"Array<FloError>.580139"* %.1, %"Array<FloError>.580139"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.28, i64 0, i32 5
  %.30 = load %FloError.580137* (%"Array<FloError>.580139"*, i64)*, %FloError.580137* (%"Array<FloError>.580139"*, i64)** %.29, align 8
  %.31 = call %FloError.580137* %.30(%"Array<FloError>.580139"* %.1, i64 %storemerge3)
  %.35 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.35, i64 0, i32 5
  %.37 = load %FloError.580137* (%"Array<FloError>.580139"*, i64)*, %FloError.580137* (%"Array<FloError>.580139"*, i64)** %.36, align 8
  %.38 = call %FloError.580137* %.37(%"Array<FloError>.580139"* %.2, i64 %storemerge3)
  %0 = ptrtoint %FloError.580137* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FloError.580137* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FloError>___in__"(%"Array<FloError>.580139"* %.1, %FloError.580137* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FloError.580137* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.19, i64 0, i32 5
  %.21 = load %FloError.580137* (%"Array<FloError>.580139"*, i64)*, %FloError.580137* (%"Array<FloError>.580139"*, i64)** %.20, align 8
  %.22 = call %FloError.580137* %.21(%"Array<FloError>.580139"* %.1, i64 %storemerge4)
  %1 = ptrtoint %FloError.580137* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FloError>_find"(%"Array<FloError>.580139"* nocapture readonly %.1, %FloError.580137* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 1
  %.19 = load %FloError.580137**, %FloError.580137*** %.18, align 8
  %0 = ptrtoint %FloError.580137* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FloError.580137*, %FloError.580137** %.19, i64 %storemerge5
  %1 = bitcast %FloError.580137** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<FloError>_join"(%"Array<FloError>.580139"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.19, i64 0, i64 0), i64 9)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.19, i64 0, i64 0), i64 9)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<FloError>___as_string__"(%"Array<FloError>.580139"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 0
  %.7 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<FloError>.580139"*, %string.580129*)*, %string.580129* (%"Array<FloError>.580139"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<FloError>.580139"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

declare i64 @sprintf(i8*, i8*, ...) local_unnamed_addr

declare i64 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr

define void @print_errors(%"Array<FloError>.580139"* %.1, %string.580129* %.2, %string.580129* %.3) local_unnamed_addr {
.5:
  %.14 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 2
  %.152 = load i64, i64* %.14, align 8
  %.163 = icmp sgt i64 %.152, 0
  br i1 %.163, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.20 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.32, %for.body ]
  %.21 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.20, align 8
  %.22 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.21, i64 0, i32 5
  %.23 = load %FloError.580137* (%"Array<FloError>.580139"*, i64)*, %FloError.580137* (%"Array<FloError>.580139"*, i64)** %.22, align 8
  %.24 = call %FloError.580137* %.23(%"Array<FloError>.580139"* %.1, i64 %storemerge4)
  call void @print_error(%FloError.580137* %.24, %string.580129* %.2, %string.580129* %.3)
  %.32 = add nuw nsw i64 %storemerge4, 1
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp slt i64 %.32, %.15
  br i1 %.16, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  ret void
}

define i64 @string_to_kw_token(%string.580129* %.1) local_unnamed_addr {
.3:
  %.6 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %string.580129*
  %.7.repack = bitcast i8* %.6 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.7.repack, align 8
  %.7.repack1 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.7.repack1 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.22, i64 0, i64 0), i8** %0, align 8
  %.7.repack2 = getelementptr inbounds i8, i8* %.6, i64 16
  %1 = bitcast i8* %.7.repack2 to i64*
  store i64 3, i64* %1, align 8
  %.7.repack3 = getelementptr inbounds i8, i8* %.6, i64 24
  %2 = bitcast i8* %.7.repack3 to i64*
  store i64 3, i64* %2, align 8
  %.9 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  %.10 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.10, i64 0, i32 3
  %.12 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.11, align 8
  %.13 = call i1 %.12(%string.580129* %.1, %string.580129* %.7)
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3.endif.endif.endif.endi...endif.6, %.3.endif.endif.endif.endi...endif.5.endif.endif.endif, %.3.endif.endif.endif.endi...endif.5.endif.endif, %.3.endif.endif.endif.endi...endif.5.endif, %.3.endif.endif.endif.endi...endif.5, %.3.endif.endif.endif.endi...endif.4.endif.endif.endif, %.3.endif.endif.endif.endi...endif.4.endif.endif, %.3.endif.endif.endif.endi...endif.4.endif, %.3.endif.endif.endif.endi...endif.4, %.3.endif.endif.endif.endi...endif.3.endif.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif, %.3.endif.endif.endif.endi...endif.3, %.3.endif.endif.endif.endi...endif.2.endif.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif, %.3.endif.endif.endif.endi...endif.2, %.3.endif.endif.endif.endi...endif.1.endif.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif, %.3.endif.endif.endif.endi...endif.1, %.3.endif.endif.endif.endi...endif.endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif, %.3.endif.endif.endif.endi...endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif, %.3.endif.endif.endif, %.3.endif.endif, %.3.endif, %.3
  %merge = phi i64 [ 51, %.3 ], [ 52, %.3.endif ], [ 53, %.3.endif.endif ], [ 54, %.3.endif.endif.endif ], [ 55, %.3.endif.endif.endif.endif ], [ 56, %.3.endif.endif.endif.endif.endif ], [ 57, %.3.endif.endif.endif.endif.endif.endif ], [ 58, %.3.endif.endif.endif.endif.endif.endif.endif ], [ 59, %.3.endif.endif.endif.endif.endif.endif.endif.endif ], [ 60, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif ], [ 61, %.3.endif.endif.endif.endi...endif ], [ 62, %.3.endif.endif.endif.endi...endif.endif ], [ 63, %.3.endif.endif.endif.endi...endif.endif.endif ], [ 64, %.3.endif.endif.endif.endi...endif.endif.endif.endif ], [ 65, %.3.endif.endif.endif.endi...endif.1 ], [ 66, %.3.endif.endif.endif.endi...endif.1.endif ], [ 67, %.3.endif.endif.endif.endi...endif.1.endif.endif ], [ 68, %.3.endif.endif.endif.endi...endif.1.endif.endif.endif ], [ 69, %.3.endif.endif.endif.endi...endif.2 ], [ 70, %.3.endif.endif.endif.endi...endif.2.endif ], [ 71, %.3.endif.endif.endif.endi...endif.2.endif.endif ], [ 72, %.3.endif.endif.endif.endi...endif.2.endif.endif.endif ], [ 73, %.3.endif.endif.endif.endi...endif.3 ], [ 74, %.3.endif.endif.endif.endi...endif.3.endif ], [ 75, %.3.endif.endif.endif.endi...endif.3.endif.endif ], [ 76, %.3.endif.endif.endif.endi...endif.3.endif.endif.endif ], [ 77, %.3.endif.endif.endif.endi...endif.4 ], [ 78, %.3.endif.endif.endif.endi...endif.4.endif ], [ 79, %.3.endif.endif.endif.endi...endif.4.endif.endif ], [ 80, %.3.endif.endif.endif.endi...endif.4.endif.endif.endif ], [ 81, %.3.endif.endif.endif.endi...endif.5 ], [ 82, %.3.endif.endif.endif.endi...endif.5.endif ], [ 83, %.3.endif.endif.endif.endi...endif.5.endif.endif ], [ 84, %.3.endif.endif.endif.endi...endif.5.endif.endif.endif ], [ %., %.3.endif.endif.endif.endi...endif.6 ]
  ret i64 %merge

.3.endif:                                         ; preds = %.3
  %.17 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.580129*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.18.repack, align 8
  %.18.repack4 = getelementptr inbounds i8, i8* %.17, i64 8
  %3 = bitcast i8* %.18.repack4 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.23, i64 0, i64 0), i8** %3, align 8
  %.18.repack5 = getelementptr inbounds i8, i8* %.17, i64 16
  %4 = bitcast i8* %.18.repack5 to i64*
  store i64 2, i64* %4, align 8
  %.18.repack6 = getelementptr inbounds i8, i8* %.17, i64 24
  %5 = bitcast i8* %.18.repack6 to i64*
  store i64 2, i64* %5, align 8
  %.21 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.22 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.21, i64 0, i32 3
  %.23 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.22, align 8
  %.24 = call i1 %.23(%string.580129* %.1, %string.580129* %.18)
  br i1 %.24, label %.3.if, label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif
  %.28 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %string.580129*
  %.29.repack = bitcast i8* %.28 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.29.repack, align 8
  %.29.repack7 = getelementptr inbounds i8, i8* %.28, i64 8
  %6 = bitcast i8* %.29.repack7 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.24, i64 0, i64 0), i8** %6, align 8
  %.29.repack8 = getelementptr inbounds i8, i8* %.28, i64 16
  %7 = bitcast i8* %.29.repack8 to i64*
  store i64 3, i64* %7, align 8
  %.29.repack9 = getelementptr inbounds i8, i8* %.28, i64 24
  %8 = bitcast i8* %.29.repack9 to i64*
  store i64 3, i64* %8, align 8
  %.32 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.33 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.32, i64 0, i32 3
  %.34 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.33, align 8
  %.35 = call i1 %.34(%string.580129* %.1, %string.580129* %.29)
  br i1 %.35, label %.3.if, label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.39 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.580129*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40.repack, align 8
  %.40.repack10 = getelementptr inbounds i8, i8* %.39, i64 8
  %9 = bitcast i8* %.40.repack10 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.25, i64 0, i64 0), i8** %9, align 8
  %.40.repack11 = getelementptr inbounds i8, i8* %.39, i64 16
  %10 = bitcast i8* %.40.repack11 to i64*
  store i64 5, i64* %10, align 8
  %.40.repack12 = getelementptr inbounds i8, i8* %.39, i64 24
  %11 = bitcast i8* %.40.repack12 to i64*
  store i64 5, i64* %11, align 8
  %.43 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.44 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.43, i64 0, i32 3
  %.45 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.44, align 8
  %.46 = call i1 %.45(%string.580129* %.1, %string.580129* %.40)
  br i1 %.46, label %.3.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.580129*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.51.repack, align 8
  %.51.repack13 = getelementptr inbounds i8, i8* %.50, i64 8
  %12 = bitcast i8* %.51.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.26, i64 0, i64 0), i8** %12, align 8
  %.51.repack14 = getelementptr inbounds i8, i8* %.50, i64 16
  %13 = bitcast i8* %.51.repack14 to i64*
  store i64 3, i64* %13, align 8
  %.51.repack15 = getelementptr inbounds i8, i8* %.50, i64 24
  %14 = bitcast i8* %.51.repack15 to i64*
  store i64 3, i64* %14, align 8
  %.54 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.54, i64 0, i32 3
  %.56 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.55, align 8
  %.57 = call i1 %.56(%string.580129* %.1, %string.580129* %.51)
  br i1 %.57, label %.3.if, label %.3.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif:                 ; preds = %.3.endif.endif.endif.endif
  %.61 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.580129*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.62.repack, align 8
  %.62.repack16 = getelementptr inbounds i8, i8* %.61, i64 8
  %15 = bitcast i8* %.62.repack16 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.27, i64 0, i64 0), i8** %15, align 8
  %.62.repack17 = getelementptr inbounds i8, i8* %.61, i64 16
  %16 = bitcast i8* %.62.repack17 to i64*
  store i64 2, i64* %16, align 8
  %.62.repack18 = getelementptr inbounds i8, i8* %.61, i64 24
  %17 = bitcast i8* %.62.repack18 to i64*
  store i64 2, i64* %17, align 8
  %.65 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.66 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.65, i64 0, i32 3
  %.67 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.66, align 8
  %.68 = call i1 %.67(%string.580129* %.1, %string.580129* %.62)
  br i1 %.68, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3.endif.endif.endif.endif.endif
  %.72 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.580129*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.73.repack, align 8
  %.73.repack19 = getelementptr inbounds i8, i8* %.72, i64 8
  %18 = bitcast i8* %.73.repack19 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.28, i64 0, i64 0), i8** %18, align 8
  %.73.repack20 = getelementptr inbounds i8, i8* %.72, i64 16
  %19 = bitcast i8* %.73.repack20 to i64*
  store i64 4, i64* %19, align 8
  %.73.repack21 = getelementptr inbounds i8, i8* %.72, i64 24
  %20 = bitcast i8* %.73.repack21 to i64*
  store i64 4, i64* %20, align 8
  %.76 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.77 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.76, i64 0, i32 3
  %.78 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.77, align 8
  %.79 = call i1 %.78(%string.580129* %.1, %string.580129* %.73)
  br i1 %.79, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.3.endif.endif.endif.endif.endif.endif
  %.83 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.580129*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.84.repack, align 8
  %.84.repack22 = getelementptr inbounds i8, i8* %.83, i64 8
  %21 = bitcast i8* %.84.repack22 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.29, i64 0, i64 0), i8** %21, align 8
  %.84.repack23 = getelementptr inbounds i8, i8* %.83, i64 16
  %22 = bitcast i8* %.84.repack23 to i64*
  store i64 4, i64* %22, align 8
  %.84.repack24 = getelementptr inbounds i8, i8* %.83, i64 24
  %23 = bitcast i8* %.84.repack24 to i64*
  store i64 4, i64* %23, align 8
  %.87 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.87, i64 0, i32 3
  %.89 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.88, align 8
  %.90 = call i1 %.89(%string.580129* %.1, %string.580129* %.84)
  br i1 %.90, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif
  %.94 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.95 = bitcast i8* %.94 to %string.580129*
  %.95.repack = bitcast i8* %.94 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.95.repack, align 8
  %.95.repack25 = getelementptr inbounds i8, i8* %.94, i64 8
  %24 = bitcast i8* %.95.repack25 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.30, i64 0, i64 0), i8** %24, align 8
  %.95.repack26 = getelementptr inbounds i8, i8* %.94, i64 16
  %25 = bitcast i8* %.95.repack26 to i64*
  store i64 2, i64* %25, align 8
  %.95.repack27 = getelementptr inbounds i8, i8* %.94, i64 24
  %26 = bitcast i8* %.95.repack27 to i64*
  store i64 2, i64* %26, align 8
  %.98 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.99 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.98, i64 0, i32 3
  %.100 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.99, align 8
  %.101 = call i1 %.100(%string.580129* %.1, %string.580129* %.95)
  br i1 %.101, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif
  %.105 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.106 = bitcast i8* %.105 to %string.580129*
  %.106.repack = bitcast i8* %.105 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.106.repack, align 8
  %.106.repack28 = getelementptr inbounds i8, i8* %.105, i64 8
  %27 = bitcast i8* %.106.repack28 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.31, i64 0, i64 0), i8** %27, align 8
  %.106.repack29 = getelementptr inbounds i8, i8* %.105, i64 16
  %28 = bitcast i8* %.106.repack29 to i64*
  store i64 2, i64* %28, align 8
  %.106.repack30 = getelementptr inbounds i8, i8* %.105, i64 24
  %29 = bitcast i8* %.106.repack30 to i64*
  store i64 2, i64* %29, align 8
  %.109 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.110 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.109, i64 0, i32 3
  %.111 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.110, align 8
  %.112 = call i1 %.111(%string.580129* %.1, %string.580129* %.106)
  br i1 %.112, label %.3.if, label %.3.endif.endif.endif.endi...endif

.3.endif.endif.endif.endi...endif:                ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.116 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.117 = bitcast i8* %.116 to %string.580129*
  %.117.repack = bitcast i8* %.116 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.117.repack, align 8
  %.117.repack31 = getelementptr inbounds i8, i8* %.116, i64 8
  %30 = bitcast i8* %.117.repack31 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.32, i64 0, i64 0), i8** %30, align 8
  %.117.repack32 = getelementptr inbounds i8, i8* %.116, i64 16
  %31 = bitcast i8* %.117.repack32 to i64*
  store i64 3, i64* %31, align 8
  %.117.repack33 = getelementptr inbounds i8, i8* %.116, i64 24
  %32 = bitcast i8* %.117.repack33 to i64*
  store i64 3, i64* %32, align 8
  %.120 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.121 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.120, i64 0, i32 3
  %.122 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.121, align 8
  %.123 = call i1 %.122(%string.580129* %.1, %string.580129* %.117)
  br i1 %.123, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3.endif.endif.endif.endi...endif
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.580129*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.128.repack, align 8
  %.128.repack34 = getelementptr inbounds i8, i8* %.127, i64 8
  %33 = bitcast i8* %.128.repack34 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.33, i64 0, i64 0), i8** %33, align 8
  %.128.repack35 = getelementptr inbounds i8, i8* %.127, i64 16
  %34 = bitcast i8* %.128.repack35 to i64*
  store i64 3, i64* %34, align 8
  %.128.repack36 = getelementptr inbounds i8, i8* %.127, i64 24
  %35 = bitcast i8* %.128.repack36 to i64*
  store i64 3, i64* %35, align 8
  %.131 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.132 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.131, i64 0, i32 3
  %.133 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.132, align 8
  %.134 = call i1 %.133(%string.580129* %.1, %string.580129* %.128)
  br i1 %.134, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif:    ; preds = %.3.endif.endif.endif.endi...endif.endif
  %.138 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.138 to %string.580129*
  %.139.repack = bitcast i8* %.138 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.139.repack, align 8
  %.139.repack37 = getelementptr inbounds i8, i8* %.138, i64 8
  %36 = bitcast i8* %.139.repack37 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.34, i64 0, i64 0), i8** %36, align 8
  %.139.repack38 = getelementptr inbounds i8, i8* %.138, i64 16
  %37 = bitcast i8* %.139.repack38 to i64*
  store i64 3, i64* %37, align 8
  %.139.repack39 = getelementptr inbounds i8, i8* %.138, i64 24
  %38 = bitcast i8* %.139.repack39 to i64*
  store i64 3, i64* %38, align 8
  %.142 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.143 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.142, i64 0, i32 3
  %.144 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.143, align 8
  %.145 = call i1 %.144(%string.580129* %.1, %string.580129* %.139)
  br i1 %.145, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif
  %.149 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.150 = bitcast i8* %.149 to %string.580129*
  %.150.repack = bitcast i8* %.149 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.150.repack, align 8
  %.150.repack40 = getelementptr inbounds i8, i8* %.149, i64 8
  %39 = bitcast i8* %.150.repack40 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.35, i64 0, i64 0), i8** %39, align 8
  %.150.repack41 = getelementptr inbounds i8, i8* %.149, i64 16
  %40 = bitcast i8* %.150.repack41 to i64*
  store i64 4, i64* %40, align 8
  %.150.repack42 = getelementptr inbounds i8, i8* %.149, i64 24
  %41 = bitcast i8* %.150.repack42 to i64*
  store i64 4, i64* %41, align 8
  %.153 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.154 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.153, i64 0, i32 3
  %.155 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.154, align 8
  %.156 = call i1 %.155(%string.580129* %.1, %string.580129* %.150)
  br i1 %.156, label %.3.if, label %.3.endif.endif.endif.endi...endif.1

.3.endif.endif.endif.endi...endif.1:              ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.endif
  %.160 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.580129*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.161.repack, align 8
  %.161.repack43 = getelementptr inbounds i8, i8* %.160, i64 8
  %42 = bitcast i8* %.161.repack43 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.36, i64 0, i64 0), i8** %42, align 8
  %.161.repack44 = getelementptr inbounds i8, i8* %.160, i64 16
  %43 = bitcast i8* %.161.repack44 to i64*
  store i64 3, i64* %43, align 8
  %.161.repack45 = getelementptr inbounds i8, i8* %.160, i64 24
  %44 = bitcast i8* %.161.repack45 to i64*
  store i64 3, i64* %44, align 8
  %.164 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.165 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.164, i64 0, i32 3
  %.166 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.165, align 8
  %.167 = call i1 %.166(%string.580129* %.1, %string.580129* %.161)
  br i1 %.167, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif

.3.endif.endif.endif.endi...endif.1.endif:        ; preds = %.3.endif.endif.endif.endi...endif.1
  %.171 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.172 = bitcast i8* %.171 to %string.580129*
  %.172.repack = bitcast i8* %.171 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.172.repack, align 8
  %.172.repack46 = getelementptr inbounds i8, i8* %.171, i64 8
  %45 = bitcast i8* %.172.repack46 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.37, i64 0, i64 0), i8** %45, align 8
  %.172.repack47 = getelementptr inbounds i8, i8* %.171, i64 16
  %46 = bitcast i8* %.172.repack47 to i64*
  store i64 3, i64* %46, align 8
  %.172.repack48 = getelementptr inbounds i8, i8* %.171, i64 24
  %47 = bitcast i8* %.172.repack48 to i64*
  store i64 3, i64* %47, align 8
  %.175 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.176 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.175, i64 0, i32 3
  %.177 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.176, align 8
  %.178 = call i1 %.177(%string.580129* %.1, %string.580129* %.172)
  br i1 %.178, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.1.endif
  %.182 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.183 = bitcast i8* %.182 to %string.580129*
  %.183.repack = bitcast i8* %.182 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.183.repack, align 8
  %.183.repack49 = getelementptr inbounds i8, i8* %.182, i64 8
  %48 = bitcast i8* %.183.repack49 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.38, i64 0, i64 0), i8** %48, align 8
  %.183.repack50 = getelementptr inbounds i8, i8* %.182, i64 16
  %49 = bitcast i8* %.183.repack50 to i64*
  store i64 3, i64* %49, align 8
  %.183.repack51 = getelementptr inbounds i8, i8* %.182, i64 24
  %50 = bitcast i8* %.183.repack51 to i64*
  store i64 3, i64* %50, align 8
  %.186 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.187 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.186, i64 0, i32 3
  %.188 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.187, align 8
  %.189 = call i1 %.188(%string.580129* %.1, %string.580129* %.183)
  br i1 %.189, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif
  %.193 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.194 = bitcast i8* %.193 to %string.580129*
  %.194.repack = bitcast i8* %.193 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.194.repack, align 8
  %.194.repack52 = getelementptr inbounds i8, i8* %.193, i64 8
  %51 = bitcast i8* %.194.repack52 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.39, i64 0, i64 0), i8** %51, align 8
  %.194.repack53 = getelementptr inbounds i8, i8* %.193, i64 16
  %52 = bitcast i8* %.194.repack53 to i64*
  store i64 3, i64* %52, align 8
  %.194.repack54 = getelementptr inbounds i8, i8* %.193, i64 24
  %53 = bitcast i8* %.194.repack54 to i64*
  store i64 3, i64* %53, align 8
  %.197 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.198 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.197, i64 0, i32 3
  %.199 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.198, align 8
  %.200 = call i1 %.199(%string.580129* %.1, %string.580129* %.194)
  br i1 %.200, label %.3.if, label %.3.endif.endif.endif.endi...endif.2

.3.endif.endif.endif.endi...endif.2:              ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif.endif
  %.204 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.205 = bitcast i8* %.204 to %string.580129*
  %.205.repack = bitcast i8* %.204 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.205.repack, align 8
  %.205.repack55 = getelementptr inbounds i8, i8* %.204, i64 8
  %54 = bitcast i8* %.205.repack55 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.40, i64 0, i64 0), i8** %54, align 8
  %.205.repack56 = getelementptr inbounds i8, i8* %.204, i64 16
  %55 = bitcast i8* %.205.repack56 to i64*
  store i64 5, i64* %55, align 8
  %.205.repack57 = getelementptr inbounds i8, i8* %.204, i64 24
  %56 = bitcast i8* %.205.repack57 to i64*
  store i64 5, i64* %56, align 8
  %.208 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.209 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.208, i64 0, i32 3
  %.210 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.209, align 8
  %.211 = call i1 %.210(%string.580129* %.1, %string.580129* %.205)
  br i1 %.211, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif

.3.endif.endif.endif.endi...endif.2.endif:        ; preds = %.3.endif.endif.endif.endi...endif.2
  %.215 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.216 = bitcast i8* %.215 to %string.580129*
  %.216.repack = bitcast i8* %.215 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.216.repack, align 8
  %.216.repack58 = getelementptr inbounds i8, i8* %.215, i64 8
  %57 = bitcast i8* %.216.repack58 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.41, i64 0, i64 0), i8** %57, align 8
  %.216.repack59 = getelementptr inbounds i8, i8* %.215, i64 16
  %58 = bitcast i8* %.216.repack59 to i64*
  store i64 4, i64* %58, align 8
  %.216.repack60 = getelementptr inbounds i8, i8* %.215, i64 24
  %59 = bitcast i8* %.216.repack60 to i64*
  store i64 4, i64* %59, align 8
  %.219 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.220 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.219, i64 0, i32 3
  %.221 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.220, align 8
  %.222 = call i1 %.221(%string.580129* %.1, %string.580129* %.216)
  br i1 %.222, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.2.endif
  %.226 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.227 = bitcast i8* %.226 to %string.580129*
  %.227.repack = bitcast i8* %.226 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.227.repack, align 8
  %.227.repack61 = getelementptr inbounds i8, i8* %.226, i64 8
  %60 = bitcast i8* %.227.repack61 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.42, i64 0, i64 0), i8** %60, align 8
  %.227.repack62 = getelementptr inbounds i8, i8* %.226, i64 16
  %61 = bitcast i8* %.227.repack62 to i64*
  store i64 3, i64* %61, align 8
  %.227.repack63 = getelementptr inbounds i8, i8* %.226, i64 24
  %62 = bitcast i8* %.227.repack63 to i64*
  store i64 3, i64* %62, align 8
  %.230 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.231 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.230, i64 0, i32 3
  %.232 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.231, align 8
  %.233 = call i1 %.232(%string.580129* %.1, %string.580129* %.227)
  br i1 %.233, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif
  %.237 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.238 = bitcast i8* %.237 to %string.580129*
  %.238.repack = bitcast i8* %.237 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.238.repack, align 8
  %.238.repack64 = getelementptr inbounds i8, i8* %.237, i64 8
  %63 = bitcast i8* %.238.repack64 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.43, i64 0, i64 0), i8** %63, align 8
  %.238.repack65 = getelementptr inbounds i8, i8* %.237, i64 16
  %64 = bitcast i8* %.238.repack65 to i64*
  store i64 5, i64* %64, align 8
  %.238.repack66 = getelementptr inbounds i8, i8* %.237, i64 24
  %65 = bitcast i8* %.238.repack66 to i64*
  store i64 5, i64* %65, align 8
  %.241 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.242 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.241, i64 0, i32 3
  %.243 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.242, align 8
  %.244 = call i1 %.243(%string.580129* %.1, %string.580129* %.238)
  br i1 %.244, label %.3.if, label %.3.endif.endif.endif.endi...endif.3

.3.endif.endif.endif.endi...endif.3:              ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif.endif
  %.248 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.249 = bitcast i8* %.248 to %string.580129*
  %.249.repack = bitcast i8* %.248 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.249.repack, align 8
  %.249.repack67 = getelementptr inbounds i8, i8* %.248, i64 8
  %66 = bitcast i8* %.249.repack67 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.44, i64 0, i64 0), i8** %66, align 8
  %.249.repack68 = getelementptr inbounds i8, i8* %.248, i64 16
  %67 = bitcast i8* %.249.repack68 to i64*
  store i64 3, i64* %67, align 8
  %.249.repack69 = getelementptr inbounds i8, i8* %.248, i64 24
  %68 = bitcast i8* %.249.repack69 to i64*
  store i64 3, i64* %68, align 8
  %.252 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.253 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.252, i64 0, i32 3
  %.254 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.253, align 8
  %.255 = call i1 %.254(%string.580129* %.1, %string.580129* %.249)
  br i1 %.255, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif

.3.endif.endif.endif.endi...endif.3.endif:        ; preds = %.3.endif.endif.endif.endi...endif.3
  %.259 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.260 = bitcast i8* %.259 to %string.580129*
  %.260.repack = bitcast i8* %.259 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.260.repack, align 8
  %.260.repack70 = getelementptr inbounds i8, i8* %.259, i64 8
  %69 = bitcast i8* %.260.repack70 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.45, i64 0, i64 0), i8** %69, align 8
  %.260.repack71 = getelementptr inbounds i8, i8* %.259, i64 16
  %70 = bitcast i8* %.260.repack71 to i64*
  store i64 5, i64* %70, align 8
  %.260.repack72 = getelementptr inbounds i8, i8* %.259, i64 24
  %71 = bitcast i8* %.260.repack72 to i64*
  store i64 5, i64* %71, align 8
  %.263 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.264 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.263, i64 0, i32 3
  %.265 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.264, align 8
  %.266 = call i1 %.265(%string.580129* %.1, %string.580129* %.260)
  br i1 %.266, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.3.endif
  %.270 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.271 = bitcast i8* %.270 to %string.580129*
  %.271.repack = bitcast i8* %.270 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.271.repack, align 8
  %.271.repack73 = getelementptr inbounds i8, i8* %.270, i64 8
  %72 = bitcast i8* %.271.repack73 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.46, i64 0, i64 0), i8** %72, align 8
  %.271.repack74 = getelementptr inbounds i8, i8* %.270, i64 16
  %73 = bitcast i8* %.271.repack74 to i64*
  store i64 8, i64* %73, align 8
  %.271.repack75 = getelementptr inbounds i8, i8* %.270, i64 24
  %74 = bitcast i8* %.271.repack75 to i64*
  store i64 8, i64* %74, align 8
  %.274 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.275 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.274, i64 0, i32 3
  %.276 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.275, align 8
  %.277 = call i1 %.276(%string.580129* %.1, %string.580129* %.271)
  br i1 %.277, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif
  %.281 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.282 = bitcast i8* %.281 to %string.580129*
  %.282.repack = bitcast i8* %.281 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.282.repack, align 8
  %.282.repack76 = getelementptr inbounds i8, i8* %.281, i64 8
  %75 = bitcast i8* %.282.repack76 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.47, i64 0, i64 0), i8** %75, align 8
  %.282.repack77 = getelementptr inbounds i8, i8* %.281, i64 16
  %76 = bitcast i8* %.282.repack77 to i64*
  store i64 6, i64* %76, align 8
  %.282.repack78 = getelementptr inbounds i8, i8* %.281, i64 24
  %77 = bitcast i8* %.282.repack78 to i64*
  store i64 6, i64* %77, align 8
  %.285 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.286 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.285, i64 0, i32 3
  %.287 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.286, align 8
  %.288 = call i1 %.287(%string.580129* %.1, %string.580129* %.282)
  br i1 %.288, label %.3.if, label %.3.endif.endif.endif.endi...endif.4

.3.endif.endif.endif.endi...endif.4:              ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif.endif
  %.292 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.293 = bitcast i8* %.292 to %string.580129*
  %.293.repack = bitcast i8* %.292 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.293.repack, align 8
  %.293.repack79 = getelementptr inbounds i8, i8* %.292, i64 8
  %78 = bitcast i8* %.293.repack79 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.48, i64 0, i64 0), i8** %78, align 8
  %.293.repack80 = getelementptr inbounds i8, i8* %.292, i64 16
  %79 = bitcast i8* %.293.repack80 to i64*
  store i64 6, i64* %79, align 8
  %.293.repack81 = getelementptr inbounds i8, i8* %.292, i64 24
  %80 = bitcast i8* %.293.repack81 to i64*
  store i64 6, i64* %80, align 8
  %.296 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.297 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.296, i64 0, i32 3
  %.298 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.297, align 8
  %.299 = call i1 %.298(%string.580129* %.1, %string.580129* %.293)
  br i1 %.299, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif

.3.endif.endif.endif.endi...endif.4.endif:        ; preds = %.3.endif.endif.endif.endi...endif.4
  %.303 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.304 = bitcast i8* %.303 to %string.580129*
  %.304.repack = bitcast i8* %.303 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.304.repack, align 8
  %.304.repack82 = getelementptr inbounds i8, i8* %.303, i64 8
  %81 = bitcast i8* %.304.repack82 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.49, i64 0, i64 0), i8** %81, align 8
  %.304.repack83 = getelementptr inbounds i8, i8* %.303, i64 16
  %82 = bitcast i8* %.304.repack83 to i64*
  store i64 7, i64* %82, align 8
  %.304.repack84 = getelementptr inbounds i8, i8* %.303, i64 24
  %83 = bitcast i8* %.304.repack84 to i64*
  store i64 7, i64* %83, align 8
  %.307 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.308 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.307, i64 0, i32 3
  %.309 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.308, align 8
  %.310 = call i1 %.309(%string.580129* %.1, %string.580129* %.304)
  br i1 %.310, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif.endif

.3.endif.endif.endif.endi...endif.4.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.4.endif
  %.314 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.315 = bitcast i8* %.314 to %string.580129*
  %.315.repack = bitcast i8* %.314 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.315.repack, align 8
  %.315.repack85 = getelementptr inbounds i8, i8* %.314, i64 8
  %84 = bitcast i8* %.315.repack85 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.50, i64 0, i64 0), i8** %84, align 8
  %.315.repack86 = getelementptr inbounds i8, i8* %.314, i64 16
  %85 = bitcast i8* %.315.repack86 to i64*
  store i64 6, i64* %85, align 8
  %.315.repack87 = getelementptr inbounds i8, i8* %.314, i64 24
  %86 = bitcast i8* %.315.repack87 to i64*
  store i64 6, i64* %86, align 8
  %.318 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.319 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.318, i64 0, i32 3
  %.320 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.319, align 8
  %.321 = call i1 %.320(%string.580129* %.1, %string.580129* %.315)
  br i1 %.321, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif.endif.endif

.3.endif.endif.endif.endi...endif.4.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.4.endif.endif
  %.325 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.326 = bitcast i8* %.325 to %string.580129*
  %.326.repack = bitcast i8* %.325 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.326.repack, align 8
  %.326.repack88 = getelementptr inbounds i8, i8* %.325, i64 8
  %87 = bitcast i8* %.326.repack88 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.51, i64 0, i64 0), i8** %87, align 8
  %.326.repack89 = getelementptr inbounds i8, i8* %.325, i64 16
  %88 = bitcast i8* %.326.repack89 to i64*
  store i64 9, i64* %88, align 8
  %.326.repack90 = getelementptr inbounds i8, i8* %.325, i64 24
  %89 = bitcast i8* %.326.repack90 to i64*
  store i64 9, i64* %89, align 8
  %.329 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.330 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.329, i64 0, i32 3
  %.331 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.330, align 8
  %.332 = call i1 %.331(%string.580129* %.1, %string.580129* %.326)
  br i1 %.332, label %.3.if, label %.3.endif.endif.endif.endi...endif.5

.3.endif.endif.endif.endi...endif.5:              ; preds = %.3.endif.endif.endif.endi...endif.4.endif.endif.endif
  %.336 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.337 = bitcast i8* %.336 to %string.580129*
  %.337.repack = bitcast i8* %.336 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.337.repack, align 8
  %.337.repack91 = getelementptr inbounds i8, i8* %.336, i64 8
  %90 = bitcast i8* %.337.repack91 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.52, i64 0, i64 0), i8** %90, align 8
  %.337.repack92 = getelementptr inbounds i8, i8* %.336, i64 16
  %91 = bitcast i8* %.337.repack92 to i64*
  store i64 2, i64* %91, align 8
  %.337.repack93 = getelementptr inbounds i8, i8* %.336, i64 24
  %92 = bitcast i8* %.337.repack93 to i64*
  store i64 2, i64* %92, align 8
  %.340 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.341 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.340, i64 0, i32 3
  %.342 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.341, align 8
  %.343 = call i1 %.342(%string.580129* %.1, %string.580129* %.337)
  br i1 %.343, label %.3.if, label %.3.endif.endif.endif.endi...endif.5.endif

.3.endif.endif.endif.endi...endif.5.endif:        ; preds = %.3.endif.endif.endif.endi...endif.5
  %.347 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.348 = bitcast i8* %.347 to %string.580129*
  %.348.repack = bitcast i8* %.347 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.348.repack, align 8
  %.348.repack94 = getelementptr inbounds i8, i8* %.347, i64 8
  %93 = bitcast i8* %.348.repack94 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.53, i64 0, i64 0), i8** %93, align 8
  %.348.repack95 = getelementptr inbounds i8, i8* %.347, i64 16
  %94 = bitcast i8* %.348.repack95 to i64*
  store i64 5, i64* %94, align 8
  %.348.repack96 = getelementptr inbounds i8, i8* %.347, i64 24
  %95 = bitcast i8* %.348.repack96 to i64*
  store i64 5, i64* %95, align 8
  %.351 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.352 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.351, i64 0, i32 3
  %.353 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.352, align 8
  %.354 = call i1 %.353(%string.580129* %.1, %string.580129* %.348)
  br i1 %.354, label %.3.if, label %.3.endif.endif.endif.endi...endif.5.endif.endif

.3.endif.endif.endif.endi...endif.5.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.5.endif
  %.358 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.359 = bitcast i8* %.358 to %string.580129*
  %.359.repack = bitcast i8* %.358 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.359.repack, align 8
  %.359.repack97 = getelementptr inbounds i8, i8* %.358, i64 8
  %96 = bitcast i8* %.359.repack97 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.54, i64 0, i64 0), i8** %96, align 8
  %.359.repack98 = getelementptr inbounds i8, i8* %.358, i64 16
  %97 = bitcast i8* %.359.repack98 to i64*
  store i64 4, i64* %97, align 8
  %.359.repack99 = getelementptr inbounds i8, i8* %.358, i64 24
  %98 = bitcast i8* %.359.repack99 to i64*
  store i64 4, i64* %98, align 8
  %.362 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.363 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.362, i64 0, i32 3
  %.364 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.363, align 8
  %.365 = call i1 %.364(%string.580129* %.1, %string.580129* %.359)
  br i1 %.365, label %.3.if, label %.3.endif.endif.endif.endi...endif.5.endif.endif.endif

.3.endif.endif.endif.endi...endif.5.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.5.endif.endif
  %.369 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.370 = bitcast i8* %.369 to %string.580129*
  %.370.repack = bitcast i8* %.369 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.370.repack, align 8
  %.370.repack100 = getelementptr inbounds i8, i8* %.369, i64 8
  %99 = bitcast i8* %.370.repack100 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.55, i64 0, i64 0), i8** %99, align 8
  %.370.repack101 = getelementptr inbounds i8, i8* %.369, i64 16
  %100 = bitcast i8* %.370.repack101 to i64*
  store i64 3, i64* %100, align 8
  %.370.repack102 = getelementptr inbounds i8, i8* %.369, i64 24
  %101 = bitcast i8* %.370.repack102 to i64*
  store i64 3, i64* %101, align 8
  %.373 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.374 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.373, i64 0, i32 3
  %.375 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.374, align 8
  %.376 = call i1 %.375(%string.580129* %.1, %string.580129* %.370)
  br i1 %.376, label %.3.if, label %.3.endif.endif.endif.endi...endif.6

.3.endif.endif.endif.endi...endif.6:              ; preds = %.3.endif.endif.endif.endi...endif.5.endif.endif.endif
  %.380 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.381 = bitcast i8* %.380 to %string.580129*
  %.381.repack = bitcast i8* %.380 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.381.repack, align 8
  %.381.repack103 = getelementptr inbounds i8, i8* %.380, i64 8
  %102 = bitcast i8* %.381.repack103 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.56, i64 0, i64 0), i8** %102, align 8
  %.381.repack104 = getelementptr inbounds i8, i8* %.380, i64 16
  %103 = bitcast i8* %.381.repack104 to i64*
  store i64 2, i64* %103, align 8
  %.381.repack105 = getelementptr inbounds i8, i8* %.380, i64 24
  %104 = bitcast i8* %.381.repack105 to i64*
  store i64 2, i64* %104, align 8
  %.384 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.385 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.384, i64 0, i32 3
  %.386 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.385, align 8
  %.387 = call i1 %.386(%string.580129* %.1, %string.580129* %.381)
  %. = select i1 %.387, i64 85, i64 -1
  br label %.3.if
}

; Function Attrs: norecurse nounwind readnone
define i1 @is_identifier_char(i8 %.1) local_unnamed_addr #6 {
.3:
  %0 = and i8 %.1, -33
  %1 = add i8 %0, -65
  %2 = icmp ult i8 %1, 26
  %.17 = icmp eq i8 %.1, 95
  %.18 = or i1 %.17, %2
  ret i1 %.18
}

; Function Attrs: norecurse nounwind readnone
define i1 @is_number_char(i8 %.1) local_unnamed_addr #6 {
.3:
  %.1.off = add i8 %.1, -48
  %0 = icmp ult i8 %.1.off, 10
  ret i1 %0
}

; Function Attrs: norecurse nounwind readnone
define i8 @capitalize(i8 %.1) local_unnamed_addr #6 {
.3:
  %.1.off = add i8 %.1, -97
  %0 = icmp ult i8 %.1.off, 26
  br i1 %0, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.12 = add i8 %.1, -32
  ret i8 %.12

.3.endif:                                         ; preds = %.3
  ret i8 %.1
}

; Function Attrs: norecurse nounwind readnone
define i1 @in_base_range(i8 %.1, i64 %.2) local_unnamed_addr #6 {
.4:
  %.8 = icmp slt i64 %.2, 10
  %.11 = icmp sgt i8 %.1, 47
  %.13 = zext i8 %.1 to i64
  %.15 = add i64 %.2, 48
  %.16 = icmp sge i64 %.15, %.13
  %.17 = and i1 %.11, %.16
  br i1 %.8, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret i1 %.17

.4.endif:                                         ; preds = %.4
  %.28 = icmp sgt i8 %.1, 64
  %.32 = add i64 %.2, 65
  %.33 = icmp sge i64 %.32, %.13
  %.34 = and i1 %.28, %.33
  %.35 = or i1 %.17, %.34
  ret i1 %.35
}

; Function Attrs: norecurse nounwind readnone
define i8 @get_escape_char(i8 %.1) local_unnamed_addr #6 {
.3:
  switch i8 %.1, label %.3.endif.endif.endif.endi...endif.endif [
    i8 97, label %.3.if
    i8 98, label %.3.endif.if
    i8 116, label %.3.endif.endif.if
    i8 102, label %.3.endif.endif.endif.if
    i8 110, label %.3.endif.endif.endif.endif.if
    i8 114, label %.3.endif.endif.endif.endif.endif.if
    i8 118, label %.3.endif.endif.endif.endif.endif.endif.if
    i8 48, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i8 39, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i8 34, label %.3.endif.endif.endif.endi...if
    i8 92, label %.3.endif.endif.endif.endi...endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endi...endif.endif, %.3.endif.endif.endif.endi...endif.if, %.3.endif.endif.endif.endi...if, %.3.endif.endif.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.if, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i8 [ 7, %.3 ], [ 8, %.3.endif.if ], [ 9, %.3.endif.endif.if ], [ 12, %.3.endif.endif.endif.if ], [ 10, %.3.endif.endif.endif.endif.if ], [ 13, %.3.endif.endif.endif.endif.endif.if ], [ 11, %.3.endif.endif.endif.endif.endif.endif.if ], [ 0, %.3.endif.endif.endif.endif.endif.endif.endif.if ], [ %.1, %.3.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ %.1, %.3.endif.endif.endif.endi...if ], [ %.1, %.3.endif.endif.endif.endi...endif.if ], [ %.1, %.3.endif.endif.endif.endi...endif.endif ]
  ret i8 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3
  br label %.3.if
}

; Function Attrs: nofree nounwind
define noalias %string.580129* @heap_string(i64 %.1) local_unnamed_addr #3 {
.3:
  %.7 = call i8* @malloc(i64 %.1)
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.12 = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.12, align 8
  call void @string_constructor(%string.580129* %.11, i8* %.7, i64 0)
  %.18 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.18 to i64*
  store i64 %.1, i64* %0, align 8
  ret %string.580129* %.11
}

define %string.580129* @unescape(%string.580129* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.8 = call %string.580129* @heap_string(i64 %.7)
  %.1814 = load i64, i64* %.6, align 8
  %.1915 = icmp sgt i64 %.1814, 0
  br i1 %.1915, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.22 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %new_string.017 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %new_string.1, %for.incr ]
  %storemerge16 = phi i64 [ 0, %for.body.lr.ph ], [ %.123, %for.incr ]
  %.23 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.23, i64 0, i32 7
  %.25 = load i8 (%string.580129*, i64)*, i8 (%string.580129*, i64)** %.24, align 8
  %.27 = call i8 %.25(%string.580129* %.1, i64 %storemerge16)
  %.30 = icmp eq i8 %.27, 92
  br i1 %.30, label %for.body.if, label %for.body.endif

for.incr:                                         ; preds = %for.body.if.if.endif.if.if, %for.body.if.if.if, %for.body.endif
  %i.0 = phi i64 [ %.33, %for.body.if.if.if ], [ %.93, %for.body.if.if.endif.if.if ], [ %i.1, %for.body.endif ]
  %new_string.1 = phi %string.580129* [ %.65, %for.body.if.if.if ], [ %.90, %for.body.if.if.endif.if.if ], [ %new_string.017, %for.body.endif ]
  %.123 = add i64 %i.0, 1
  %.18 = load i64, i64* %.6, align 8
  %.19 = icmp slt i64 %.123, %.18
  br i1 %.19, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.3
  %new_string.0.lcssa = phi %string.580129* [ %.8, %.3 ], [ %new_string.1, %for.incr ]
  ret %string.580129* %new_string.0.lcssa

for.body.if:                                      ; preds = %for.body
  %.33 = add i64 %storemerge16, 3
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.33, %.36
  br i1 %.37, label %for.body.if.if, label %for.body.if.endif

for.body.endif:                                   ; preds = %for.body.if.endif, %for.body
  %i.1 = phi i64 [ %.104, %for.body.if.endif ], [ %storemerge16, %for.body ]
  %char.0 = phi i8 [ %.109, %for.body.if.endif ], [ %.27, %for.body ]
  %.113 = getelementptr inbounds %string.580129, %string.580129* %new_string.017, i64 0, i32 0
  %.114 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.113, align 8
  %.115 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.114, i64 0, i32 1
  %.116 = load void (%string.580129*, i8)*, void (%string.580129*, i8)** %.115, align 8
  call void %.116(%string.580129* %new_string.017, i8 %char.0)
  br label %for.incr

for.body.if.if:                                   ; preds = %for.body.if
  %.41 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.22, align 8
  %.42 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.41, i64 0, i32 8
  %.43 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.42, align 8
  %.44 = call i8* %.43(%string.580129* %.1)
  %.46 = getelementptr inbounds i8, i8* %.44, i64 1
  %.47 = getelementptr inbounds i8, i8* %.46, i64 %storemerge16
  %.50 = call i64 @memcmp(i8* nonnull %.47, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.57, i64 0, i64 0), i64 3)
  %.51 = icmp eq i64 %.50, 0
  %.53 = call i64 @memcmp(i8* nonnull %.47, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.58, i64 0, i64 0), i64 3)
  %.54 = icmp eq i64 %.53, 0
  %.55 = or i1 %.51, %.54
  br i1 %.55, label %for.body.if.if.if, label %for.body.if.if.endif

for.body.if.endif:                                ; preds = %for.body.if.if.endif.if, %for.body.if.if.endif, %for.body.if
  %.100 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.22, align 8
  %.101 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.100, i64 0, i32 7
  %.102 = load i8 (%string.580129*, i64)*, i8 (%string.580129*, i64)** %.101, align 8
  %.104 = add i64 %storemerge16, 1
  %.108 = call i8 %.102(%string.580129* %.1, i64 %.104)
  %.109 = call i8 @get_escape_char(i8 %.108)
  br label %for.body.endif

for.body.if.if.if:                                ; preds = %for.body.if.if
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.59.repack = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.59.repack, align 8
  %.59.repack4 = getelementptr inbounds i8, i8* %.58, i64 8
  %0 = bitcast i8* %.59.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.59, i64 0, i64 0), i8** %0, align 8
  %.59.repack5 = getelementptr inbounds i8, i8* %.58, i64 16
  %1 = bitcast i8* %.59.repack5 to i64*
  store i64 1, i64* %1, align 8
  %.59.repack6 = getelementptr inbounds i8, i8* %.58, i64 24
  %2 = bitcast i8* %.59.repack6 to i64*
  store i64 1, i64* %2, align 8
  %.61 = getelementptr inbounds %string.580129, %string.580129* %new_string.017, i64 0, i32 0
  %.62 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.61, align 8
  %.63 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.62, i64 0, i32 0
  %.64 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.63, align 8
  %.65 = call %string.580129* %.64(%string.580129* %new_string.017, %string.580129* %.59)
  br label %for.incr

for.body.if.if.endif:                             ; preds = %for.body.if.if
  %.72 = add i64 %storemerge16, 6
  %.75 = load i64, i64* %.6, align 8
  %.76 = icmp slt i64 %.72, %.75
  br i1 %.76, label %for.body.if.if.endif.if, label %for.body.if.endif

for.body.if.if.endif.if:                          ; preds = %for.body.if.if.endif
  %.79 = call i64 @memcmp(i8* nonnull %.47, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.60, i64 0, i64 0), i64 5)
  %.80 = icmp eq i64 %.79, 0
  br i1 %.80, label %for.body.if.if.endif.if.if, label %for.body.if.endif

for.body.if.if.endif.if.if:                       ; preds = %for.body.if.if.endif.if
  %.83 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.580129*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.84.repack, align 8
  %.84.repack1 = getelementptr inbounds i8, i8* %.83, i64 8
  %3 = bitcast i8* %.84.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.59, i64 0, i64 0), i8** %3, align 8
  %.84.repack2 = getelementptr inbounds i8, i8* %.83, i64 16
  %4 = bitcast i8* %.84.repack2 to i64*
  store i64 1, i64* %4, align 8
  %.84.repack3 = getelementptr inbounds i8, i8* %.83, i64 24
  %5 = bitcast i8* %.84.repack3 to i64*
  store i64 1, i64* %5, align 8
  %.86 = getelementptr inbounds %string.580129, %string.580129* %new_string.017, i64 0, i32 0
  %.87 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.86, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.87, i64 0, i32 0
  %.89 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.88, align 8
  %.90 = call %string.580129* %.89(%string.580129* %new_string.017, %string.580129* %.84)
  %.93 = add i64 %storemerge16, 5
  br label %for.incr
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Token_constructor(%Token.580141* nocapture %.1, i64 %.2, %FloRange.580135* %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %Token.580141, %Token.580141* %.1, i64 0, i32 1
  store i64 %.2, i64* %.11, align 8
  %.15 = getelementptr inbounds %Token.580141, %Token.580141* %.1, i64 0, i32 2
  store %FloRange.580135* %.3, %FloRange.580135** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IntToken_constructor(%IntToken.580143* nocapture %.1, i64 %.2, %FloRange.580135* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %IntToken.580143* %.1 to %Token.580141*
  call void @Token_constructor(%Token.580141* %.10, i64 28, %FloRange.580135* %.3)
  %.15 = getelementptr inbounds %IntToken.580143, %IntToken.580143* %.1, i64 0, i32 3
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloatToken_constructor(%FloatToken.580145* nocapture %.1, double %.2, %FloRange.580135* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %FloatToken.580145* %.1 to %Token.580141*
  call void @Token_constructor(%Token.580141* %.10, i64 29, %FloRange.580135* %.3)
  %.15 = getelementptr inbounds %FloatToken.580145, %FloatToken.580145* %.1, i64 0, i32 3
  store double %.2, double* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @CharToken_constructor(%CharToken.580147* nocapture %.1, i8 %.2, %FloRange.580135* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %CharToken.580147* %.1 to %Token.580141*
  call void @Token_constructor(%Token.580141* %.10, i64 32, %FloRange.580135* %.3)
  %.15 = getelementptr inbounds %CharToken.580147, %CharToken.580147* %.1, i64 0, i32 3
  store i8 %.2, i8* %.15, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Token>_constructor"(%"Array<Token>.580152"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 1
  %0 = bitcast %Token.580141*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Token>_resize"(%"Array<Token>.580152"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 1
  %0 = bitcast %Token.580141*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Token>_swap"(%"Array<Token>.580152"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 1
  %.12 = load %Token.580141**, %Token.580141*** %.11, align 8
  %.13 = getelementptr inbounds %Token.580141*, %Token.580141** %.12, i64 %.2
  %0 = bitcast %Token.580141** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Token.580141*, %Token.580141** %.12, i64 %.3
  %1 = bitcast %Token.580141** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Token.580141**, %Token.580141*** %.11, align 8
  %.33 = getelementptr inbounds %Token.580141*, %Token.580141** %.31, i64 %.3
  %2 = bitcast %Token.580141** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Token>___sl__"(%"Array<Token>.580152"* %.1, %Token.580141* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 0
  %.17 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Token>.580152"*)*, void (%"Array<Token>.580152"*)** %.18, align 8
  call void %.19(%"Array<Token>.580152"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 1
  %.31 = load %Token.580141**, %Token.580141*** %.30, align 8
  %.33 = getelementptr inbounds %Token.580141*, %Token.580141** %.31, i64 %.24
  store %Token.580141* %.2, %Token.580141** %.33, align 8
  ret void
}

define void @"Array<Token>___setitem__"(%"Array<Token>.580152"* nocapture readonly %.1, i64 %.2, %Token.580141* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 1
  %.30 = load %Token.580141**, %Token.580141*** %.29, align 8
  %.32 = getelementptr inbounds %Token.580141*, %Token.580141** %.30, i64 %.2
  store %Token.580141* %.3, %Token.580141** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Token>_append"(%"Array<Token>.580152"* %.1, %Token.580141* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 0
  %.9 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Token>.580152"*, %Token.580141*)*, void (%"Array<Token>.580152"*, %Token.580141*)** %.10, align 8
  call void %.11(%"Array<Token>.580152"* %.1, %Token.580141* %.2)
  ret void
}

define %Token.580141* @"Array<Token>___getitem__"(%"Array<Token>.580152"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 1
  %.28 = load %Token.580141**, %Token.580141*** %.27, align 8
  %.29 = getelementptr inbounds %Token.580141*, %Token.580141** %.28, i64 %.2
  %.30 = load %Token.580141*, %Token.580141** %.29, align 8
  ret %Token.580141* %.30

.4.endif:                                         ; preds = %.4
  ret %Token.580141* null
}

define i1 @"Array<Token>___eq__"(%"Array<Token>.580152"* %.1, %"Array<Token>.580152"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.28, i64 0, i32 5
  %.30 = load %Token.580141* (%"Array<Token>.580152"*, i64)*, %Token.580141* (%"Array<Token>.580152"*, i64)** %.29, align 8
  %.31 = call %Token.580141* %.30(%"Array<Token>.580152"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.35, i64 0, i32 5
  %.37 = load %Token.580141* (%"Array<Token>.580152"*, i64)*, %Token.580141* (%"Array<Token>.580152"*, i64)** %.36, align 8
  %.38 = call %Token.580141* %.37(%"Array<Token>.580152"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Token.580141* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Token.580141* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Token>___in__"(%"Array<Token>.580152"* %.1, %Token.580141* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Token.580141* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.19, i64 0, i32 5
  %.21 = load %Token.580141* (%"Array<Token>.580152"*, i64)*, %Token.580141* (%"Array<Token>.580152"*, i64)** %.20, align 8
  %.22 = call %Token.580141* %.21(%"Array<Token>.580152"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Token.580141* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Token>_find"(%"Array<Token>.580152"* nocapture readonly %.1, %Token.580141* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 1
  %.19 = load %Token.580141**, %Token.580141*** %.18, align 8
  %0 = ptrtoint %Token.580141* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Token.580141*, %Token.580141** %.19, i64 %storemerge5
  %1 = bitcast %Token.580141** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Token>_join"(%"Array<Token>.580152"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.61, i64 0, i64 0), i64 6)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.61, i64 0, i64 0), i64 6)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Token>___as_string__"(%"Array<Token>.580152"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 0
  %.7 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Token>.580152"*, %string.580129*)*, %string.580129* (%"Array<Token>.580152"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Token>.580152"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Array<Token>>_constructor"(%"Array<Array<Token>>.580151"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 1
  %0 = bitcast %"Array<Token>.580152"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Array<Token>>_resize"(%"Array<Array<Token>>.580151"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 1
  %0 = bitcast %"Array<Token>.580152"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Array<Token>>_swap"(%"Array<Array<Token>>.580151"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 1
  %.12 = load %"Array<Token>.580152"**, %"Array<Token>.580152"*** %.11, align 8
  %.13 = getelementptr inbounds %"Array<Token>.580152"*, %"Array<Token>.580152"** %.12, i64 %.2
  %0 = bitcast %"Array<Token>.580152"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Array<Token>.580152"*, %"Array<Token>.580152"** %.12, i64 %.3
  %1 = bitcast %"Array<Token>.580152"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Array<Token>.580152"**, %"Array<Token>.580152"*** %.11, align 8
  %.33 = getelementptr inbounds %"Array<Token>.580152"*, %"Array<Token>.580152"** %.31, i64 %.3
  %2 = bitcast %"Array<Token>.580152"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Array<Token>>___sl__"(%"Array<Array<Token>>.580151"* %.1, %"Array<Token>.580152"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 0
  %.17 = load %"Array<Array<Token>>_vtable_ty.580154"*, %"Array<Array<Token>>_vtable_ty.580154"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.580154", %"Array<Array<Token>>_vtable_ty.580154"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Array<Token>>.580151"*)*, void (%"Array<Array<Token>>.580151"*)** %.18, align 8
  call void %.19(%"Array<Array<Token>>.580151"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 1
  %.31 = load %"Array<Token>.580152"**, %"Array<Token>.580152"*** %.30, align 8
  %.33 = getelementptr inbounds %"Array<Token>.580152"*, %"Array<Token>.580152"** %.31, i64 %.24
  store %"Array<Token>.580152"* %.2, %"Array<Token>.580152"** %.33, align 8
  ret void
}

define void @"Array<Array<Token>>___setitem__"(%"Array<Array<Token>>.580151"* nocapture readonly %.1, i64 %.2, %"Array<Token>.580152"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 1
  %.30 = load %"Array<Token>.580152"**, %"Array<Token>.580152"*** %.29, align 8
  %.32 = getelementptr inbounds %"Array<Token>.580152"*, %"Array<Token>.580152"** %.30, i64 %.2
  store %"Array<Token>.580152"* %.3, %"Array<Token>.580152"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Array<Token>>_append"(%"Array<Array<Token>>.580151"* %.1, %"Array<Token>.580152"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 0
  %.9 = load %"Array<Array<Token>>_vtable_ty.580154"*, %"Array<Array<Token>>_vtable_ty.580154"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.580154", %"Array<Array<Token>>_vtable_ty.580154"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)*, void (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)** %.10, align 8
  call void %.11(%"Array<Array<Token>>.580151"* %.1, %"Array<Token>.580152"* %.2)
  ret void
}

define %"Array<Token>.580152"* @"Array<Array<Token>>___getitem__"(%"Array<Array<Token>>.580151"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 1
  %.28 = load %"Array<Token>.580152"**, %"Array<Token>.580152"*** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Token>.580152"*, %"Array<Token>.580152"** %.28, i64 %.2
  %.30 = load %"Array<Token>.580152"*, %"Array<Token>.580152"** %.29, align 8
  ret %"Array<Token>.580152"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Array<Token>.580152"* null
}

define i1 @"Array<Array<Token>>___eq__"(%"Array<Array<Token>>.580151"* %.1, %"Array<Array<Token>>.580151"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.27 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 0
  %.34 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.51, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.51, %for.cond ]
  %.28 = load %"Array<Array<Token>>_vtable_ty.580154"*, %"Array<Array<Token>>_vtable_ty.580154"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.580154", %"Array<Array<Token>>_vtable_ty.580154"* %.28, i64 0, i32 5
  %.30 = load %"Array<Token>.580152"* (%"Array<Array<Token>>.580151"*, i64)*, %"Array<Token>.580152"* (%"Array<Array<Token>>.580151"*, i64)** %.29, align 8
  %.31 = call %"Array<Token>.580152"* %.30(%"Array<Array<Token>>.580151"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Array<Token>>_vtable_ty.580154"*, %"Array<Array<Token>>_vtable_ty.580154"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.580154", %"Array<Array<Token>>_vtable_ty.580154"* %.35, i64 0, i32 5
  %.37 = load %"Array<Token>.580152"* (%"Array<Array<Token>>.580151"*, i64)*, %"Array<Token>.580152"* (%"Array<Array<Token>>.580151"*, i64)** %.36, align 8
  %.38 = call %"Array<Token>.580152"* %.37(%"Array<Array<Token>>.580151"* %.2, i64 %storemerge3)
  %.39 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.31, i64 0, i32 0
  %.40 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.40, i64 0, i32 6
  %.42 = load i1 (%"Array<Token>.580152"*, %"Array<Token>.580152"*)*, i1 (%"Array<Token>.580152"*, %"Array<Token>.580152"*)** %.41, align 8
  %.43 = call i1 %.42(%"Array<Token>.580152"* %.31, %"Array<Token>.580152"* %.38)
  %.51 = add nuw nsw i64 %storemerge3, 1
  br i1 %.43, label %for.cond, label %.4.if
}

define i1 @"Array<Array<Token>>___in__"(%"Array<Array<Token>>.580151"* %.1, %"Array<Token>.580152"* %.2) {
.4:
  %.12 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 0
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.cond ]
  %.19 = load %"Array<Array<Token>>_vtable_ty.580154"*, %"Array<Array<Token>>_vtable_ty.580154"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.580154", %"Array<Array<Token>>_vtable_ty.580154"* %.19, i64 0, i32 5
  %.21 = load %"Array<Token>.580152"* (%"Array<Array<Token>>.580151"*, i64)*, %"Array<Token>.580152"* (%"Array<Array<Token>>.580151"*, i64)** %.20, align 8
  %.22 = call %"Array<Token>.580152"* %.21(%"Array<Array<Token>>.580151"* %.1, i64 %storemerge4)
  %.24 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.22, i64 0, i32 0
  %.25 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.24, align 8
  %.26 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.25, i64 0, i32 6
  %.27 = load i1 (%"Array<Token>.580152"*, %"Array<Token>.580152"*)*, i1 (%"Array<Token>.580152"*, %"Array<Token>.580152"*)** %.26, align 8
  %.28 = call i1 %.27(%"Array<Token>.580152"* %.22, %"Array<Token>.580152"* %.2)
  %.35 = add nuw nsw i64 %storemerge4, 1
  br i1 %.28, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

define i64 @"Array<Array<Token>>_find"(%"Array<Array<Token>>.580151"* nocapture readonly %.1, %"Array<Token>.580152"* %.2) {
.4:
  %.12 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body.endif ]
  %.19 = load %"Array<Token>.580152"**, %"Array<Token>.580152"*** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Token>.580152"*, %"Array<Token>.580152"** %.19, i64 %storemerge4
  %.21 = load %"Array<Token>.580152"*, %"Array<Token>.580152"** %.20, align 8
  %.23 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.21, i64 0, i32 0
  %.24 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.24, i64 0, i32 6
  %.26 = load i1 (%"Array<Token>.580152"*, %"Array<Token>.580152"*)*, i1 (%"Array<Token>.580152"*, %"Array<Token>.580152"*)** %.25, align 8
  %.27 = call i1 %.26(%"Array<Token>.580152"* %.21, %"Array<Token>.580152"* %.2)
  br i1 %.27, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge4, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Array<Token>>_join"(%"Array<Array<Token>>.580151"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.284 = icmp sgt i64 %.21, 0
  %.33 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 1
  %1 = bitcast %"Array<Token>.580152"*** %.33 to %string.580129***
  %.34511 = load %string.580129**, %string.580129*** %1, align 8
  %.3626 = load %string.580129*, %string.580129** %.34511, align 8
  br i1 %.284, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.3629 = phi %string.580129* [ %.3626, %for.body.lr.ph ], [ %.362, %for.body ]
  %res.08 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge7 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.43 = getelementptr inbounds %string.580129, %string.580129* %.3629, i64 0, i32 0
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.43, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.3629)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %2 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %2, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %3 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %3, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %4 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %4, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.08, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.08, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge7, 1
  %.34 = load %"Array<Token>.580152"**, %"Array<Token>.580152"*** %.33, align 8
  %.35 = getelementptr inbounds %"Array<Token>.580152"*, %"Array<Token>.580152"** %.34, i64 %.78
  %5 = bitcast %"Array<Token>.580152"** %.35 to %string.580129**
  %.362 = load %string.580129*, %string.580129** %5, align 8
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  %res.0.lcssa = phi %string.580129* [ %.8, %.4 ], [ %.72, %for.body ]
  %.362.lcssa = phi %string.580129* [ %.3626, %.4 ], [ %.362, %for.body ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.362.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Array<Token>>___as_string__"(%"Array<Array<Token>>.580151"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.1, i64 0, i32 0
  %.7 = load %"Array<Array<Token>>_vtable_ty.580154"*, %"Array<Array<Token>>_vtable_ty.580154"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.580154", %"Array<Array<Token>>_vtable_ty.580154"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Array<Token>>.580151"*, %string.580129*)*, %string.580129* (%"Array<Array<Token>>.580151"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Array<Token>>.580151"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @StrToken_constructor(%StrToken.580149* nocapture %.1, %"Array<Array<Token>>.580151"* %.2, %string.580129* %.3, %FloRange.580135* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %StrToken.580149* %.1 to %Token.580141*
  call void @Token_constructor(%Token.580141* %.12, i64 31, %FloRange.580135* %.4)
  %.17 = getelementptr inbounds %StrToken.580149, %StrToken.580149* %.1, i64 0, i32 3
  store %string.580129* %.3, %string.580129** %.17, align 8
  %.21 = getelementptr inbounds %StrToken.580149, %StrToken.580149* %.1, i64 0, i32 4
  store %"Array<Array<Token>>.580151"* %.2, %"Array<Array<Token>>.580151"** %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IdentifierToken_constructor(%IdentifierToken.580155* nocapture %.1, %string.580129* %.2, %FloRange.580135* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %IdentifierToken.580155* %.1 to %Token.580141*
  call void @Token_constructor(%Token.580141* %.10, i64 50, %FloRange.580135* %.3)
  %.15 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.1, i64 0, i32 3
  store %string.580129* %.2, %string.580129** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Lexer_constructor(%Lexer.580157* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.7 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 4
  store i64 -1, i64* %.7, align 8
  %.10 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 6
  store i64 1, i64* %.10, align 8
  %.13 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 5
  store i64 0, i64* %.13, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @Lexer_eof(%Lexer.580157* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 4
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 2
  %.10 = load %string.580129*, %string.580129** %.9, align 8
  %.11 = getelementptr inbounds %string.580129, %string.580129* %.10, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp sge i64 %.7, %.12
  ret i1 %.13
}

define i8 @Lexer_peek(%Lexer.580157* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 4
  %.9 = load i64, i64* %.8, align 8
  %.11 = add i64 %.9, %.2
  %.13 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 2
  %.14 = load %string.580129*, %string.580129** %.13, align 8
  %.15 = getelementptr inbounds %string.580129, %string.580129* %.14, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.11, %.16
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.22 = getelementptr inbounds %string.580129, %string.580129* %.14, i64 0, i32 0
  %.23 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.23, i64 0, i32 7
  %.25 = load i8 (%string.580129*, i64)*, i8 (%string.580129*, i64)** %.24, align 8
  %.31 = call i8 %.25(%string.580129* %.14, i64 %.11)
  ret i8 %.31

.4.endif:                                         ; preds = %.4
  ret i8 0
}

define void @Lexer_advance(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 0
  %.9 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.8, align 8
  %.10 = call i1 %.9(%Lexer.580157* %.1)
  br i1 %.10, label %.3.if, label %.3.endif

.3.if.sink.split:                                 ; preds = %.3.endif, %.3.endif.if
  %.40.sink1 = phi i64* [ %.40, %.3.endif.if ], [ %.37, %.3.endif ]
  %.41 = load i64, i64* %.40.sink1, align 8
  %.42 = add i64 %.41, 1
  store i64 %.42, i64* %.40.sink1, align 8
  br label %.3.if

.3.if:                                            ; preds = %.3.if.sink.split, %.3
  ret void

.3.endif:                                         ; preds = %.3
  %.15 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 2
  %.16 = load %string.580129*, %string.580129** %.15, align 8
  %.17 = getelementptr inbounds %string.580129, %string.580129* %.16, i64 0, i32 0
  %.18 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.17, align 8
  %.19 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.18, i64 0, i32 7
  %.20 = load i8 (%string.580129*, i64)*, i8 (%string.580129*, i64)** %.19, align 8
  %.22 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 4
  %.23 = load i64, i64* %.22, align 8
  %.24 = add i64 %.23, 1
  store i64 %.24, i64* %.22, align 8
  %.28 = call i8 %.20(%string.580129* %.16, i64 %.24)
  %.29 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 1
  store i8 %.28, i8* %.29, align 1
  %.34 = icmp eq i8 %.28, 10
  %.37 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 5
  br i1 %.34, label %.3.endif.if, label %.3.if.sink.split

.3.endif.if:                                      ; preds = %.3.endif
  store i64 0, i64* %.37, align 8
  %.40 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 6
  br label %.3.if.sink.split
}

; Function Attrs: nofree nounwind
define noalias %FloRange.580135* @Lexer_get_range(%Lexer.580157* nocapture readonly %.1, i64 %.2) #3 {
.4:
  %.8 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 4
  %.9 = load i64, i64* %.8, align 8
  %.11 = sub i64 1, %.2
  %.12 = add i64 %.11, %.9
  %.16 = add i64 %.9, 1
  %.18 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 5
  %.19 = load i64, i64* %.18, align 8
  %.21 = sub i64 %.19, %.2
  %.23 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 6
  %.24 = load i64, i64* %.23, align 8
  %.25 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.26 = bitcast i8* %.25 to %FloRange.580135*
  %.27 = bitcast i8* %.25 to %FloRange_vtable_ty.580136**
  store %FloRange_vtable_ty.580136* @FloRange_vtable_data, %FloRange_vtable_ty.580136** %.27, align 8
  call void @FloRange_constructor(%FloRange.580135* %.26, i64 %.12, i64 %.16, i64 %.21, i64 %.24)
  ret %FloRange.580135* %.26
}

define noalias %Token.580141* @Lexer_plus_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 43
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 3
  %.23 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.22, align 8
  %.24 = call %FloRange.580135* %.23(%Lexer.580157* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.580141*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.27, align 8
  call void @Token_constructor(%Token.580141* %.26, i64 20, %FloRange.580135* %.24)
  ret %Token.580141* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.34, align 8
  %.36 = call i8 %.35(%Lexer.580157* %.1, i64 1)
  %.37 = icmp eq i8 %.36, 61
  %.41 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.42, align 8
  call void %.43(%Lexer.580157* %.1)
  %.47 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.47, i64 0, i32 3
  %.49 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.48, align 8
  %.50 = call %FloRange.580135* %.49(%Lexer.580157* %.1, i64 2)
  %.51 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.52 = bitcast i8* %.51 to %Token.580141*
  %.53 = bitcast i8* %.51 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.53, align 8
  call void @Token_constructor(%Token.580141* %.52, i64 11, %FloRange.580135* %.50)
  ret %Token.580141* %.52

.3.else.endif:                                    ; preds = %.3.else
  %.61 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.41, i64 0, i32 3
  %.62 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.61, align 8
  %.63 = call %FloRange.580135* %.62(%Lexer.580157* %.1, i64 1)
  %.64 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.65 = bitcast i8* %.64 to %Token.580141*
  %.66 = bitcast i8* %.64 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.66, align 8
  call void @Token_constructor(%Token.580141* %.65, i64 5, %FloRange.580135* %.63)
  ret %Token.580141* %.65
}

define i1 @Lexer_skip_comment(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 42
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 0
  %.23 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.22, align 8
  %.24 = call i1 %.23(%Lexer.580157* %.1)
  br i1 %.24, label %while.exit, label %while.entry

.3.else:                                          ; preds = %.3
  %.74 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 1
  %.75 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.74, align 8
  %.76 = call i8 %.75(%Lexer.580157* %.1, i64 1)
  %.77 = icmp eq i8 %.76, 47
  br i1 %.77, label %.3.else.if, label %.3.endif

.3.endif:                                         ; preds = %while.entry.1, %.3.else.if, %.3.else
  %merge = phi i1 [ false, %.3.else ], [ true, %.3.else.if ], [ true, %while.entry.1 ]
  ret i1 %merge

while.entry:                                      ; preds = %.3.if, %while.entry.endif
  %.29 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.30 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.29, i64 0, i32 1
  %.31 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.30, align 8
  %.32 = call i8 %.31(%Lexer.580157* %.1, i64 1)
  %.33 = icmp eq i8 %.32, 42
  %.36 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.37 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.36, i64 0, i32 1
  %.38 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.37, align 8
  %.39 = call i8 %.38(%Lexer.580157* %.1, i64 2)
  %.40 = icmp eq i8 %.39, 47
  %.41 = and i1 %.33, %.40
  br i1 %.41, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.3.if
  %.60 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.61 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.60, i64 0, i32 2
  %.62 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.61, align 8
  call void %.62(%Lexer.580157* %.1)
  %.66 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.67 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.66, i64 0, i32 2
  %.68 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.67, align 8
  call void %.68(%Lexer.580157* %.1)
  ret i1 true

while.entry.endif:                                ; preds = %while.entry
  %.46 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.47 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.46, i64 0, i32 2
  %.48 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.47, align 8
  call void %.48(%Lexer.580157* %.1)
  %.52 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.53 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.52, i64 0, i32 0
  %.54 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.53, align 8
  %.55 = call i1 %.54(%Lexer.580157* %.1)
  br i1 %.55, label %while.exit, label %while.entry

.3.else.if:                                       ; preds = %.3.else
  %.81 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.82 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.81, i64 0, i32 2
  %.83 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.82, align 8
  call void %.83(%Lexer.580157* %.1)
  %.87 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.88 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.87, i64 0, i32 1
  %.89 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.88, align 8
  %.90 = call i8 %.89(%Lexer.580157* %.1, i64 1)
  %.91 = icmp ne i8 %.90, 10
  %.94 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.95 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.94, i64 0, i32 0
  %.96 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.95, align 8
  %.97 = call i1 %.96(%Lexer.580157* %.1)
  %.98 = xor i1 %.97, true
  %.99 = and i1 %.91, %.98
  br i1 %.99, label %while.entry.1, label %.3.endif

while.entry.1:                                    ; preds = %.3.else.if, %while.entry.1
  %.103 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.104 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.103, i64 0, i32 2
  %.105 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.104, align 8
  call void %.105(%Lexer.580157* %.1)
  %.109 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.110 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.109, i64 0, i32 1
  %.111 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.110, align 8
  %.112 = call i8 %.111(%Lexer.580157* %.1, i64 1)
  %.113 = icmp ne i8 %.112, 10
  %.116 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.117 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.116, i64 0, i32 0
  %.118 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.117, align 8
  %.119 = call i1 %.118(%Lexer.580157* %.1)
  %.120 = xor i1 %.119, true
  %.121 = and i1 %.113, %.120
  br i1 %.121, label %while.entry.1, label %.3.endif
}

define noalias %Token.580141* @Lexer_minus_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 45
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 3
  %.23 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.22, align 8
  %.24 = call %FloRange.580135* %.23(%Lexer.580157* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.580141*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.27, align 8
  call void @Token_constructor(%Token.580141* %.26, i64 21, %FloRange.580135* %.24)
  ret %Token.580141* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.34, align 8
  %.36 = call i8 %.35(%Lexer.580157* %.1, i64 1)
  %.37 = icmp eq i8 %.36, 61
  %.41 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.42, align 8
  call void %.43(%Lexer.580157* %.1)
  %.47 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.47, i64 0, i32 3
  %.49 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.48, align 8
  %.50 = call %FloRange.580135* %.49(%Lexer.580157* %.1, i64 2)
  %.51 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.52 = bitcast i8* %.51 to %Token.580141*
  %.53 = bitcast i8* %.51 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.53, align 8
  call void @Token_constructor(%Token.580141* %.52, i64 10, %FloRange.580135* %.50)
  ret %Token.580141* %.52

.3.else.endif:                                    ; preds = %.3.else
  %.61 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.41, i64 0, i32 3
  %.62 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.61, align 8
  %.63 = call %FloRange.580135* %.62(%Lexer.580157* %.1, i64 2)
  %.64 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.65 = bitcast i8* %.64 to %Token.580141*
  %.66 = bitcast i8* %.64 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.66, align 8
  call void @Token_constructor(%Token.580141* %.65, i64 4, %FloRange.580135* %.63)
  ret %Token.580141* %.65
}

define noalias %Token.580141* @Lexer_mult_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 3
  %.23 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.22, align 8
  %.24 = call %FloRange.580135* %.23(%Lexer.580157* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.580141*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.27, align 8
  call void @Token_constructor(%Token.580141* %.26, i64 9, %FloRange.580135* %.24)
  ret %Token.580141* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 3
  %.35 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.34, align 8
  %.36 = call %FloRange.580135* %.35(%Lexer.580157* %.1, i64 1)
  %.37 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.580141*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.39, align 8
  call void @Token_constructor(%Token.580141* %.38, i64 3, %FloRange.580135* %.36)
  ret %Token.580141* %.38
}

define noalias %Token.580141* @Lexer_mod_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 3
  %.23 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.22, align 8
  %.24 = call %FloRange.580135* %.23(%Lexer.580157* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.580141*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.27, align 8
  call void @Token_constructor(%Token.580141* %.26, i64 13, %FloRange.580135* %.24)
  ret %Token.580141* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 3
  %.35 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.34, align 8
  %.36 = call %FloRange.580135* %.35(%Lexer.580157* %.1, i64 1)
  %.37 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.580141*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.39, align 8
  call void @Token_constructor(%Token.580141* %.38, i64 7, %FloRange.580135* %.36)
  ret %Token.580141* %.38
}

define noalias %Token.580141* @Lexer_pow_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 3
  %.23 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.22, align 8
  %.24 = call %FloRange.580135* %.23(%Lexer.580157* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.580141*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.27, align 8
  call void @Token_constructor(%Token.580141* %.26, i64 14, %FloRange.580135* %.24)
  ret %Token.580141* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 3
  %.35 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.34, align 8
  %.36 = call %FloRange.580135* %.35(%Lexer.580157* %.1, i64 1)
  %.37 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.580141*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.39, align 8
  call void @Token_constructor(%Token.580141* %.38, i64 8, %FloRange.580135* %.36)
  ret %Token.580141* %.38
}

define noalias %Token.580141* @Lexer_div_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 3
  %.23 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.22, align 8
  %.24 = call %FloRange.580135* %.23(%Lexer.580157* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.580141*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.27, align 8
  call void @Token_constructor(%Token.580141* %.26, i64 12, %FloRange.580135* %.24)
  ret %Token.580141* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 3
  %.35 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.34, align 8
  %.36 = call %FloRange.580135* %.35(%Lexer.580157* %.1, i64 1)
  %.37 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.580141*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.39, align 8
  call void @Token_constructor(%Token.580141* %.38, i64 6, %FloRange.580135* %.36)
  ret %Token.580141* %.38
}

define noalias %Token.580141* @Lexer_eq_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 3
  %.23 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.22, align 8
  %.24 = call %FloRange.580135* %.23(%Lexer.580157* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.580141*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.27, align 8
  call void @Token_constructor(%Token.580141* %.26, i64 36, %FloRange.580135* %.24)
  ret %Token.580141* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.34, align 8
  %.36 = call i8 %.35(%Lexer.580157* %.1, i64 1)
  %.37 = icmp eq i8 %.36, 62
  %.41 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.42, align 8
  call void %.43(%Lexer.580157* %.1)
  %.47 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.47, i64 0, i32 3
  %.49 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.48, align 8
  %.50 = call %FloRange.580135* %.49(%Lexer.580157* %.1, i64 2)
  %.51 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.52 = bitcast i8* %.51 to %Token.580141*
  %.53 = bitcast i8* %.51 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.53, align 8
  call void @Token_constructor(%Token.580141* %.52, i64 42, %FloRange.580135* %.50)
  ret %Token.580141* %.52

.3.else.endif:                                    ; preds = %.3.else
  %.61 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.41, i64 0, i32 3
  %.62 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.61, align 8
  %.63 = call %FloRange.580135* %.62(%Lexer.580157* %.1, i64 1)
  %.64 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.65 = bitcast i8* %.64 to %Token.580141*
  %.66 = bitcast i8* %.64 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.66, align 8
  call void @Token_constructor(%Token.580141* %.65, i64 35, %FloRange.580135* %.63)
  ret %Token.580141* %.65
}

define noalias %Token.580141* @Lexer_neq_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 3
  %.23 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.22, align 8
  %.24 = call %FloRange.580135* %.23(%Lexer.580157* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.580141*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.27, align 8
  call void @Token_constructor(%Token.580141* %.26, i64 37, %FloRange.580135* %.24)
  ret %Token.580141* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 3
  %.35 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.34, align 8
  %.36 = call %FloRange.580135* %.35(%Lexer.580157* %.1, i64 1)
  %.37 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.580141*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.39, align 8
  call void @Token_constructor(%Token.580141* %.38, i64 44, %FloRange.580135* %.36)
  ret %Token.580141* %.38
}

define noalias %Token.580141* @Lexer_gt_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 3
  %.23 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.22, align 8
  %.24 = call %FloRange.580135* %.23(%Lexer.580157* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.580141*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.27, align 8
  call void @Token_constructor(%Token.580141* %.26, i64 41, %FloRange.580135* %.24)
  ret %Token.580141* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.34, align 8
  %.36 = call i8 %.35(%Lexer.580157* %.1, i64 1)
  %.37 = icmp eq i8 %.36, 62
  %.41 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.42, align 8
  call void %.43(%Lexer.580157* %.1)
  %.47 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.47, i64 0, i32 1
  %.49 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.48, align 8
  %.50 = call i8 %.49(%Lexer.580157* %.1, i64 1)
  %.51 = icmp eq i8 %.50, 61
  %.55 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.51, label %.3.else.if.if, label %.3.else.if.endif

.3.else.endif:                                    ; preds = %.3.else
  %.87 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.41, i64 0, i32 3
  %.88 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.87, align 8
  %.89 = call %FloRange.580135* %.88(%Lexer.580157* %.1, i64 1)
  %.90 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.91 = bitcast i8* %.90 to %Token.580141*
  %.92 = bitcast i8* %.90 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.92, align 8
  call void @Token_constructor(%Token.580141* %.91, i64 38, %FloRange.580135* %.89)
  ret %Token.580141* %.91

.3.else.if.if:                                    ; preds = %.3.else.if
  %.56 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.55, i64 0, i32 2
  %.57 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.56, align 8
  call void %.57(%Lexer.580157* %.1)
  %.61 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.62 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.61, i64 0, i32 3
  %.63 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.62, align 8
  %.64 = call %FloRange.580135* %.63(%Lexer.580157* %.1, i64 3)
  %.65 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.66 = bitcast i8* %.65 to %Token.580141*
  %.67 = bitcast i8* %.65 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.67, align 8
  call void @Token_constructor(%Token.580141* %.66, i64 18, %FloRange.580135* %.64)
  ret %Token.580141* %.66

.3.else.if.endif:                                 ; preds = %.3.else.if
  %.74 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.55, i64 0, i32 3
  %.75 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.74, align 8
  %.76 = call %FloRange.580135* %.75(%Lexer.580157* %.1, i64 2)
  %.77 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.78 = bitcast i8* %.77 to %Token.580141*
  %.79 = bitcast i8* %.77 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.79, align 8
  call void @Token_constructor(%Token.580141* %.78, i64 46, %FloRange.580135* %.76)
  ret %Token.580141* %.78
}

define noalias %Token.580141* @Lexer_lt_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.580157* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.16, align 8
  call void %.17(%Lexer.580157* %.1)
  %.21 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.21, i64 0, i32 3
  %.23 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.22, align 8
  %.24 = call %FloRange.580135* %.23(%Lexer.580157* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.580141*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.27, align 8
  call void @Token_constructor(%Token.580141* %.26, i64 40, %FloRange.580135* %.24)
  ret %Token.580141* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.34, align 8
  %.36 = call i8 %.35(%Lexer.580157* %.1, i64 1)
  %.37 = icmp eq i8 %.36, 60
  %.41 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.42, align 8
  call void %.43(%Lexer.580157* %.1)
  %.47 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.47, i64 0, i32 1
  %.49 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.48, align 8
  %.50 = call i8 %.49(%Lexer.580157* %.1, i64 1)
  %.51 = icmp eq i8 %.50, 61
  %.55 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  br i1 %.51, label %.3.else.if.if, label %.3.else.if.endif

.3.else.endif:                                    ; preds = %.3.else
  %.87 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.41, i64 0, i32 3
  %.88 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.87, align 8
  %.89 = call %FloRange.580135* %.88(%Lexer.580157* %.1, i64 1)
  %.90 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.91 = bitcast i8* %.90 to %Token.580141*
  %.92 = bitcast i8* %.90 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.92, align 8
  call void @Token_constructor(%Token.580141* %.91, i64 39, %FloRange.580135* %.89)
  ret %Token.580141* %.91

.3.else.if.if:                                    ; preds = %.3.else.if
  %.56 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.55, i64 0, i32 2
  %.57 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.56, align 8
  call void %.57(%Lexer.580157* %.1)
  %.61 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.6, align 8
  %.62 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.61, i64 0, i32 3
  %.63 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.62, align 8
  %.64 = call %FloRange.580135* %.63(%Lexer.580157* %.1, i64 3)
  %.65 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.66 = bitcast i8* %.65 to %Token.580141*
  %.67 = bitcast i8* %.65 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.67, align 8
  call void @Token_constructor(%Token.580141* %.66, i64 19, %FloRange.580135* %.64)
  ret %Token.580141* %.66

.3.else.if.endif:                                 ; preds = %.3.else.if
  %.74 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.55, i64 0, i32 3
  %.75 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.74, align 8
  %.76 = call %FloRange.580135* %.75(%Lexer.580157* %.1, i64 2)
  %.77 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.78 = bitcast i8* %.77 to %Token.580141*
  %.79 = bitcast i8* %.77 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.79, align 8
  call void @Token_constructor(%Token.580141* %.78, i64 45, %FloRange.580135* %.76)
  ret %Token.580141* %.78
}

define noalias %Token.580141* @Lexer_dot_token(%Lexer.580157* %.1) {
.3:
  %.8 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.9 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.10 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.9, i64 0, i32 1
  %.11 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.10, align 8
  %.12 = call i8 %.11(%Lexer.580157* %.1, i64 1)
  %.13 = icmp eq i8 %.12, 46
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.23 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.24 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.23, i64 0, i32 2
  %.25 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.24, align 8
  call void %.25(%Lexer.580157* %.1)
  %.29 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.30 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.29, i64 0, i32 1
  %.31 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.30, align 8
  %.32 = call i8 %.31(%Lexer.580157* %.1, i64 1)
  %.33 = icmp eq i8 %.32, 46
  br i1 %.33, label %.3.if.if, label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3.if.if, %.3
  %token.0 = phi i64 [ 47, %.3 ], [ 49, %.3.if.if ], [ 48, %.3.if ]
  %length.0 = phi i64 [ 1, %.3 ], [ 3, %.3.if.if ], [ 2, %.3.if ]
  %.52 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.53 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.52, i64 0, i32 3
  %.54 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.53, align 8
  %.56 = call %FloRange.580135* %.54(%Lexer.580157* %.1, i64 %length.0)
  %.57 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.58 = bitcast i8* %.57 to %Token.580141*
  %.59 = bitcast i8* %.57 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.59, align 8
  call void @Token_constructor(%Token.580141* %.58, i64 %token.0, %FloRange.580135* %.56)
  ret %Token.580141* %.58

.3.if.if:                                         ; preds = %.3.if
  %.43 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.44 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.43, i64 0, i32 2
  %.45 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.44, align 8
  call void %.45(%Lexer.580157* %.1)
  br label %.3.endif
}

define noalias %IntToken.580143* @Lexer_base_int_token(%Lexer.580157* %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.9 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.10 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.9, i64 0, i32 2
  %.11 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.10, align 8
  call void %.11(%Lexer.580157* %.1)
  %.18 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.19 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.18, i64 0, i32 1
  %.20 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.19, align 8
  %.21 = call i8 %.20(%Lexer.580157* %.1, i64 1)
  %.22 = call i8 @capitalize(i8 %.21)
  %.25 = call i1 @in_base_range(i8 %.22, i64 %.2)
  %.28 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.29 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.28, i64 0, i32 0
  %.30 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.29, align 8
  %.31 = call i1 %.30(%Lexer.580157* %.1)
  %.32 = xor i1 %.31, true
  %.33 = and i1 %.25, %.32
  br i1 %.33, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %length.0 = phi i64 [ %.58, %while.entry ], [ 3, %.4 ]
  %value.0 = phi i64 [ %.53, %while.entry ], [ 0, %.4 ]
  %current_char.0 = phi i8 [ %.72, %while.entry ], [ %.22, %.4 ]
  %.37 = mul i64 %value.0, %.2
  %.43 = icmp sgt i8 %current_char.0, 64
  %spec.select.v = select i1 %.43, i8 -55, i8 -48
  %spec.select = add i8 %spec.select.v, %current_char.0
  %.52 = zext i8 %spec.select to i64
  %.53 = add i64 %.37, %.52
  %.58 = add i64 %length.0, 1
  %.62 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.63 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.62, i64 0, i32 2
  %.64 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.63, align 8
  call void %.64(%Lexer.580157* %.1)
  %.68 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.69 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.68, i64 0, i32 1
  %.70 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.69, align 8
  %.71 = call i8 %.70(%Lexer.580157* %.1, i64 1)
  %.72 = call i8 @capitalize(i8 %.71)
  %.75 = call i1 @in_base_range(i8 %.72, i64 %.2)
  %.78 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.79 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.78, i64 0, i32 0
  %.80 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.79, align 8
  %.81 = call i1 %.80(%Lexer.580157* %.1)
  %.82 = xor i1 %.81, true
  %.83 = and i1 %.75, %.82
  br i1 %.83, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %length.1 = phi i64 [ 3, %.4 ], [ %.58, %while.entry ]
  %value.1 = phi i64 [ 0, %.4 ], [ %.53, %while.entry ]
  %.88 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.8, align 8
  %.89 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.88, i64 0, i32 3
  %.90 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.89, align 8
  %.92 = call %FloRange.580135* %.90(%Lexer.580157* %.1, i64 %length.1)
  %.93 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.94 = bitcast i8* %.93 to %IntToken.580143*
  %.95 = bitcast i8* %.93 to %IntToken_vtable_ty.580144**
  store %IntToken_vtable_ty.580144* @IntToken_vtable_data, %IntToken_vtable_ty.580144** %.95, align 8
  call void @IntToken_constructor(%IntToken.580143* %.94, i64 %value.1, %FloRange.580135* %.92)
  ret %IntToken.580143* %.94
}

define %Token.580141* @Lexer_numeric_token(%Lexer.580157* %.1) {
.3:
  %.9 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 1
  %.10 = load i8, i8* %.9, align 1
  %.11 = icmp eq i8 %.10, 48
  %.13 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.14 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.15 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.14, i64 0, i32 1
  %.16 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.15, align 8
  %.17 = call i8 %.16(%Lexer.580157* %.1, i64 1)
  %.18 = icmp eq i8 %.17, 98
  %.19 = and i1 %.11, %.18
  br i1 %.19, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.23 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.24 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.23, i64 0, i32 16
  %.25 = load %IntToken.580143* (%Lexer.580157*, i64)*, %IntToken.580143* (%Lexer.580157*, i64)** %.24, align 8
  %.26 = call %IntToken.580143* %.25(%Lexer.580157* %.1, i64 2)
  %.27 = bitcast %IntToken.580143* %.26 to %Token.580141*
  ret %Token.580141* %.27

.3.endif:                                         ; preds = %.3
  %.31 = load i8, i8* %.9, align 1
  %.32 = icmp eq i8 %.31, 48
  %.35 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.36 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.35, i64 0, i32 1
  %.37 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.36, align 8
  %.38 = call i8 %.37(%Lexer.580157* %.1, i64 1)
  %.39 = icmp eq i8 %.38, 111
  %.40 = and i1 %.32, %.39
  br i1 %.40, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.44 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.45 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.44, i64 0, i32 16
  %.46 = load %IntToken.580143* (%Lexer.580157*, i64)*, %IntToken.580143* (%Lexer.580157*, i64)** %.45, align 8
  %.47 = call %IntToken.580143* %.46(%Lexer.580157* %.1, i64 8)
  %.48 = bitcast %IntToken.580143* %.47 to %Token.580141*
  ret %Token.580141* %.48

.3.endif.endif:                                   ; preds = %.3.endif
  %.52 = load i8, i8* %.9, align 1
  %.53 = icmp eq i8 %.52, 48
  %.56 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.57 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.56, i64 0, i32 1
  %.58 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.57, align 8
  %.59 = call i8 %.58(%Lexer.580157* %.1, i64 1)
  %.60 = icmp eq i8 %.59, 120
  %.61 = and i1 %.53, %.60
  %.65 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  br i1 %.61, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.66 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.65, i64 0, i32 16
  %.67 = load %IntToken.580143* (%Lexer.580157*, i64)*, %IntToken.580143* (%Lexer.580157*, i64)** %.66, align 8
  %.68 = call %IntToken.580143* %.67(%Lexer.580157* %.1, i64 16)
  %.69 = bitcast %IntToken.580143* %.68 to %Token.580141*
  ret %Token.580141* %.69

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.74 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.65, i64 0, i32 1
  %.75 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.74, align 8
  %.76 = call i8 %.75(%Lexer.580157* %.1, i64 1)
  %.78 = call i1 @is_number_char(i8 %.76)
  %.80 = icmp eq i8 %.76, 46
  %.81 = or i1 %.78, %.80
  %.84 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.85 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.84, i64 0, i32 0
  %.86 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.85, align 8
  %.87 = call i1 %.86(%Lexer.580157* %.1)
  %.88 = xor i1 %.87, true
  %.89 = and i1 %.81, %.88
  br i1 %.89, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3.endif.endif.endif, %while.entry.endif
  %is_float.0 = phi i1 [ %spec.select, %while.entry.endif ], [ false, %.3.endif.endif.endif ]
  %length.0 = phi i64 [ %.116, %while.entry.endif ], [ 1, %.3.endif.endif.endif ]
  %next_char.0 = phi i8 [ %.129, %while.entry.endif ], [ %.76, %.3.endif.endif.endif ]
  %.92 = icmp eq i8 %next_char.0, 46
  %.96 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.97 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.96, i64 0, i32 1
  %.98 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.97, align 8
  %.99 = call i8 %.98(%Lexer.580157* %.1, i64 2)
  %.100 = call i1 @is_number_char(i8 %.99)
  %.101 = xor i1 %.100, true
  %.102 = or i1 %is_float.0, %.101
  %.103 = and i1 %.92, %.102
  br i1 %.103, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.3.endif.endif.endif
  %is_float.1 = phi i1 [ false, %.3.endif.endif.endif ], [ %spec.select, %while.entry.endif ], [ %is_float.0, %while.entry ]
  %length.1 = phi i64 [ 1, %.3.endif.endif.endif ], [ %.116, %while.entry.endif ], [ %length.0, %while.entry ]
  %.146 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.147 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.146, i64 0, i32 3
  %.148 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.147, align 8
  %.150 = call %FloRange.580135* %.148(%Lexer.580157* %.1, i64 %length.1)
  %.153 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 2
  %.154 = load %string.580129*, %string.580129** %.153, align 8
  %.155 = getelementptr inbounds %string.580129, %string.580129* %.154, i64 0, i32 0
  %.156 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.155, align 8
  %.157 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.156, i64 0, i32 6
  %.158 = load %string.580129* (%string.580129*, i64, i64)*, %string.580129* (%string.580129*, i64, i64)** %.157, align 8
  %.160 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.150, i64 0, i32 1
  %.161 = load i64, i64* %.160, align 8
  %.163 = call %string.580129* %.158(%string.580129* %.154, i64 %.161, i64 %length.1)
  %.168 = getelementptr inbounds %string.580129, %string.580129* %.163, i64 0, i32 0
  %.169 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.168, align 8
  %.170 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.169, i64 0, i32 10
  %.171 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.170, align 8
  %.172 = call i8* %.171(%string.580129* %.163)
  br i1 %is_float.1, label %true_block, label %false_block

while.entry.endif:                                ; preds = %while.entry
  %.108 = load i8, i8* %.9, align 1
  %.109 = icmp eq i8 %.108, 46
  %spec.select = or i1 %is_float.0, %.109
  %.116 = add i64 %length.0, 1
  %.120 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.121 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.120, i64 0, i32 2
  %.122 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.121, align 8
  call void %.122(%Lexer.580157* %.1)
  %.126 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.127 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.126, i64 0, i32 1
  %.128 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.127, align 8
  %.129 = call i8 %.128(%Lexer.580157* %.1, i64 1)
  %.131 = call i1 @is_number_char(i8 %.129)
  %.133 = icmp eq i8 %.129, 46
  %.134 = or i1 %.131, %.133
  %.137 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.13, align 8
  %.138 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.137, i64 0, i32 0
  %.139 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.138, align 8
  %.140 = call i1 %.139(%Lexer.580157* %.1)
  %.141 = xor i1 %.140, true
  %.142 = and i1 %.134, %.141
  br i1 %.142, label %while.entry, label %while.exit

true_block:                                       ; preds = %while.exit
  %.173 = call double @atof(i8* %.172)
  %.175 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.176 = bitcast i8* %.175 to %FloatToken.580145*
  %.177 = bitcast i8* %.175 to %FloatToken_vtable_ty.580146**
  store %FloatToken_vtable_ty.580146* @FloatToken_vtable_data, %FloatToken_vtable_ty.580146** %.177, align 8
  call void @FloatToken_constructor(%FloatToken.580145* %.176, double %.173, %FloRange.580135* %.150)
  br label %end

false_block:                                      ; preds = %while.exit
  %.188 = call i32 @atoi(i8* %.172)
  %.189 = zext i32 %.188 to i64
  %.191 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.192 = bitcast i8* %.191 to %IntToken.580143*
  %.193 = bitcast i8* %.191 to %IntToken_vtable_ty.580144**
  store %IntToken_vtable_ty.580144* @IntToken_vtable_data, %IntToken_vtable_ty.580144** %.193, align 8
  call void @IntToken_constructor(%IntToken.580143* %.192, i64 %.189, %FloRange.580135* %.150)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.198.in = phi i8* [ %.175, %true_block ], [ %.191, %false_block ]
  %.198 = bitcast i8* %.198.in to %Token.580141*
  ret %Token.580141* %.198
}

define noalias %Token.580141* @Lexer_identifier_token(%Lexer.580157* %.1) {
.3:
  %.7 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 4
  %.8 = load i64, i64* %.7, align 8
  %.11 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.12 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.13 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.12, i64 0, i32 1
  %.14 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.13, align 8
  %.15 = call i8 %.14(%Lexer.580157* %.1, i64 1)
  %.19 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.20 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.19, i64 0, i32 1
  %.21 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.20, align 8
  %.22 = call i8 %.21(%Lexer.580157* %.1, i64 1)
  %.24 = call i1 @is_identifier_char(i8 %.22)
  %.26 = call i1 @is_number_char(i8 %.22)
  %.27 = or i1 %.24, %.26
  %.30 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.31 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.30, i64 0, i32 0
  %.32 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.31, align 8
  %.33 = call i1 %.32(%Lexer.580157* %.1)
  %.34 = xor i1 %.33, true
  %.35 = and i1 %.27, %.34
  br i1 %.35, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3, %while.entry
  %length.0 = phi i64 [ %.40, %while.entry ], [ 1, %.3 ]
  %.40 = add i64 %length.0, 1
  %.44 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.45 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.44, i64 0, i32 2
  %.46 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.45, align 8
  call void %.46(%Lexer.580157* %.1)
  %.50 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.51 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.50, i64 0, i32 1
  %.52 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.51, align 8
  %.53 = call i8 %.52(%Lexer.580157* %.1, i64 1)
  %.55 = call i1 @is_identifier_char(i8 %.53)
  %.57 = call i1 @is_number_char(i8 %.53)
  %.58 = or i1 %.55, %.57
  %.61 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.62 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.61, i64 0, i32 0
  %.63 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.62, align 8
  %.64 = call i1 %.63(%Lexer.580157* %.1)
  %.65 = xor i1 %.64, true
  %.66 = and i1 %.58, %.65
  br i1 %.66, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3
  %length.1 = phi i64 [ 1, %.3 ], [ %.40, %while.entry ]
  %.69 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 2
  %.70 = load %string.580129*, %string.580129** %.69, align 8
  %.71 = getelementptr inbounds %string.580129, %string.580129* %.70, i64 0, i32 0
  %.72 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.71, align 8
  %.73 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.72, i64 0, i32 6
  %.74 = load %string.580129* (%string.580129*, i64, i64)*, %string.580129* (%string.580129*, i64, i64)** %.73, align 8
  %.77 = call %string.580129* %.74(%string.580129* %.70, i64 %.8, i64 %length.1)
  %.81 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.82 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.81, i64 0, i32 3
  %.83 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.82, align 8
  %.85 = call %FloRange.580135* %.83(%Lexer.580157* %.1, i64 %length.1)
  %keyword = alloca i64, align 8
  store i64 0, i64* %keyword, align 8
  %.89 = call i64 @string_to_kw_token(%string.580129* %.77)
  store i64 %.89, i64* %keyword, align 8
  %.92.not = icmp eq i64 %.89, -1
  br i1 %.92.not, label %while.exit.endif, label %while.exit.if

while.exit.if:                                    ; preds = %while.exit
  %.96 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.97 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.96, i64 0, i32 1
  %.98 = load i8 (%Lexer.580157*, i64)*, i8 (%Lexer.580157*, i64)** %.97, align 8
  %.99 = call i8 %.98(%Lexer.580157* %.1, i64 1)
  %.100 = icmp eq i8 %.99, 61
  br i1 %.100, label %while.exit.if.if, label %while.exit.if.endif

while.exit.endif:                                 ; preds = %while.exit
  %.146 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.147 = bitcast i8* %.146 to %IdentifierToken.580155*
  %.148 = bitcast i8* %.146 to %IdentifierToken_vtable_ty.580156**
  store %IdentifierToken_vtable_ty.580156* @IdentifierToken_vtable_data, %IdentifierToken_vtable_ty.580156** %.148, align 8
  call void @IdentifierToken_constructor(%IdentifierToken.580155* %.147, %string.580129* %.77, %FloRange.580135* %.85)
  %.151 = bitcast i8* %.146 to %Token.580141*
  ret %Token.580141* %.151

while.exit.if.if:                                 ; preds = %while.exit.if
  %.103 = icmp eq i64 %.89, 51
  br i1 %.103, label %while.exit.if.if.if, label %while.exit.if.if.endif

while.exit.if.endif:                              ; preds = %while.exit.if.if.endif.endif, %while.exit.if.if.endif.endif.if, %while.exit.if
  %.136 = load i64, i64* %keyword, align 8
  %.138 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.139 = bitcast i8* %.138 to %Token.580141*
  %.140 = bitcast i8* %.138 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.140, align 8
  call void @Token_constructor(%Token.580141* %.139, i64 %.136, %FloRange.580135* %.85)
  ret %Token.580141* %.139

while.exit.if.if.if:                              ; preds = %while.exit.if.if
  %.107 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.108 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.107, i64 0, i32 2
  %.109 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.108, align 8
  call void %.109(%Lexer.580157* %.1)
  store i64 15, i64* %keyword, align 8
  br label %while.exit.if.if.endif

while.exit.if.if.endif:                           ; preds = %while.exit.if.if.if, %while.exit.if.if
  %.113 = load i64, i64* %keyword, align 8
  %.114 = icmp eq i64 %.113, 52
  br i1 %.114, label %while.exit.if.if.endif.if, label %while.exit.if.if.endif.endif

while.exit.if.if.endif.if:                        ; preds = %while.exit.if.if.endif
  %.118 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.119 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.118, i64 0, i32 2
  %.120 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.119, align 8
  call void %.120(%Lexer.580157* %.1)
  store i64 16, i64* %keyword, align 8
  br label %while.exit.if.if.endif.endif

while.exit.if.if.endif.endif:                     ; preds = %while.exit.if.if.endif.if, %while.exit.if.if.endif
  %.124 = load i64, i64* %keyword, align 8
  %.125 = icmp eq i64 %.124, 53
  br i1 %.125, label %while.exit.if.if.endif.endif.if, label %while.exit.if.endif

while.exit.if.if.endif.endif.if:                  ; preds = %while.exit.if.if.endif.endif
  %.129 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.11, align 8
  %.130 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.129, i64 0, i32 2
  %.131 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.130, align 8
  call void %.131(%Lexer.580157* %.1)
  store i64 17, i64* %keyword, align 8
  br label %while.exit.if.endif
}

define noalias %StrToken.580149* @Lexer_string_token(%Lexer.580157* %.1) {
.3:
  %.8 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %"Array<Array<Token>>.580151"*
  %.12 = bitcast i8* %.10 to %"Array<Array<Token>>_vtable_ty.580154"**
  store %"Array<Array<Token>>_vtable_ty.580154"* @"Array<Array<Token>>_vtable_data", %"Array<Array<Token>>_vtable_ty.580154"** %.12, align 8
  %.14 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.14 to i8**
  store i8* %.8, i8** %0, align 8
  %.16 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.16 to i64*
  store i64 0, i64* %1, align 8
  %.18 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.18 to i64*
  store i64 8, i64* %2, align 8
  %.23 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.24 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.25 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.24, i64 0, i32 2
  %.26 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.25, align 8
  call void %.26(%Lexer.580157* %.1)
  %.28 = call %string.580129* @heap_string(i64 1)
  %.32 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.33 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.32, i64 0, i32 0
  %.34 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.33, align 8
  %.35 = call i1 %.34(%Lexer.580157* %.1)
  br i1 %.35, label %while.exit, label %while.entry.preheader

while.entry.preheader:                            ; preds = %.3
  %.39 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 1
  %.56 = getelementptr inbounds %string.580129, %string.580129* %.28, i64 0, i32 0
  %.190 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 5
  %.193 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 6
  %.229 = getelementptr inbounds %string.580129, %string.580129* %.28, i64 0, i32 0
  br label %while.entry.outer

while.entry.outer:                                ; preds = %while.entry.preheader, %while.entry.endif.endif
  %length.0.ph = phi i64 [ 2, %while.entry.preheader ], [ %.221, %while.entry.endif.endif ]
  %escape_next.0.ph = phi i1 [ false, %while.entry.preheader ], [ %.226, %while.entry.endif.endif ]
  %.404 = load i8, i8* %.39, align 1
  %.415 = icmp eq i8 %.404, 34
  %.43 = xor i1 %escape_next.0.ph, true
  %.446 = and i1 %.415, %.43
  br i1 %.446, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry.outer, %while.entry.endif.endif, %while.entry.endif.if.endif, %.3
  %length.1 = phi i64 [ 2, %.3 ], [ %length.0.ph, %while.entry.endif.if.endif ], [ %.221, %while.entry.endif.endif ], [ %length.0.ph, %while.entry.outer ]
  %.253 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.254 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.253, i64 0, i32 3
  %.255 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.254, align 8
  %.257 = call %FloRange.580135* %.255(%Lexer.580157* %.1, i64 %length.1)
  %.260 = call %string.580129* @unescape(%string.580129* %.28)
  %.265 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.266 = bitcast i8* %.265 to %StrToken.580149*
  %.267 = bitcast i8* %.265 to %StrToken_vtable_ty.580150**
  store %StrToken_vtable_ty.580150* @StrToken_vtable_data, %StrToken_vtable_ty.580150** %.267, align 8
  call void @StrToken_constructor(%StrToken.580149* %.266, %"Array<Array<Token>>.580151"* %.11, %string.580129* %.260, %FloRange.580135* %.257)
  ret %StrToken.580149* %.266

while.entry.endif:                                ; preds = %while.entry.outer, %while.entry.endif.if.endif
  %.407 = phi i8 [ %.40, %while.entry.endif.if.endif ], [ %.404, %while.entry.outer ]
  %.50 = icmp eq i8 %.407, 36
  %.53 = and i1 %.50, %.43
  br i1 %.53, label %while.entry.endif.if, label %while.entry.endif.endif

while.entry.endif.if:                             ; preds = %while.entry.endif
  %.57 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.56, align 8
  %.58 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.57, i64 0, i32 1
  %.59 = load void (%string.580129*, i8)*, void (%string.580129*, i8)** %.58, align 8
  call void %.59(%string.580129* %.28, i8 %.407)
  %.66 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.67 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.66, i64 0, i32 2
  %.68 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.67, align 8
  call void %.68(%Lexer.580157* %.1)
  %.71 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.73 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.75 = bitcast i8* %.73 to %"Array<Token>_vtable_ty.580153"**
  store %"Array<Token>_vtable_ty.580153"* @"Array<Token>_vtable_data", %"Array<Token>_vtable_ty.580153"** %.75, align 8
  %.77 = getelementptr inbounds i8, i8* %.73, i64 8
  %3 = bitcast i8* %.77 to i8**
  store i8* %.71, i8** %3, align 8
  %.79 = getelementptr inbounds i8, i8* %.73, i64 16
  %4 = bitcast i8* %.79 to i64*
  store i64 0, i64* %4, align 8
  %.81 = getelementptr inbounds i8, i8* %.73, i64 24
  %5 = bitcast i8* %.81 to i64*
  store i64 8, i64* %5, align 8
  %token_group = alloca %"Array<Token>.580152"*, align 8
  %6 = bitcast %"Array<Token>.580152"** %token_group to i8**
  store i8* %.73, i8** %6, align 8
  %active_open_pars = alloca i64, align 8
  store i64 0, i64* %active_open_pars, align 8
  %.87 = load i8, i8* %.39, align 1
  %.88 = icmp eq i8 %.87, 40
  br i1 %.88, label %while.entry.endif.if.if, label %while.entry.endif.if.else

while.entry.endif.endif:                          ; preds = %while.entry.endif
  %.221 = add i64 %length.0.ph, 1
  %.226 = icmp eq i8 %.407, 92
  %.230 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.229, align 8
  %.231 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.230, i64 0, i32 1
  %.232 = load void (%string.580129*, i8)*, void (%string.580129*, i8)** %.231, align 8
  call void %.232(%string.580129* %.28, i8 %.407)
  %.239 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.240 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.239, i64 0, i32 2
  %.241 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.240, align 8
  call void %.241(%Lexer.580157* %.1)
  %.245 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.246 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.245, i64 0, i32 0
  %.247 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.246, align 8
  %.248 = call i1 %.247(%Lexer.580157* %.1)
  br i1 %.248, label %while.exit, label %while.entry.outer

while.entry.endif.if.if:                          ; preds = %while.entry.endif.if
  %.92 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.93 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.92, i64 0, i32 2
  %.94 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.93, align 8
  call void %.94(%Lexer.580157* %.1)
  %.98 = load i8, i8* %.39, align 1
  %.99 = icmp ne i8 %.98, 41
  %.105 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.106 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.105, i64 0, i32 0
  %.107 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.106, align 8
  %.108 = call i1 %.107(%Lexer.580157* %.1)
  %.109 = xor i1 %.108, true
  %.110 = and i1 %.99, %.109
  br i1 %.110, label %while.entry.1.preheader, label %while.entry.endif.if.endif

while.entry.1.preheader:                          ; preds = %while.entry.endif.if.if
  %.134 = load %"Array<Token>.580152"*, %"Array<Token>.580152"** %token_group, align 8
  %.141 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.134, i64 0, i32 0
  %active_open_pars.promoted = load i64, i64* %active_open_pars, align 8
  br label %while.entry.1

while.entry.endif.if.else:                        ; preds = %while.entry.endif.if
  %.169 = load %"Array<Token>.580152"*, %"Array<Token>.580152"** %token_group, align 8
  %.172 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.173 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.172, i64 0, i32 21
  %.174 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.173, align 8
  %.175 = call %Token.580141* %.174(%Lexer.580157* %.1)
  %.176 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.169, i64 0, i32 0
  %.177 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.176, align 8
  %.178 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.177, i64 0, i32 2
  %.179 = load void (%"Array<Token>.580152"*, %Token.580141*)*, void (%"Array<Token>.580152"*, %Token.580141*)** %.178, align 8
  call void %.179(%"Array<Token>.580152"* %.169, %Token.580141* %.175)
  br label %while.entry.endif.if.endif

while.entry.endif.if.endif.loopexit:              ; preds = %while.entry.1.endif.endif
  store i64 %.15610, i64* %active_open_pars, align 8
  br label %while.entry.endif.if.endif

while.entry.endif.if.endif:                       ; preds = %while.entry.endif.if.endif.loopexit, %while.entry.endif.if.if, %while.entry.endif.if.else
  %.184 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.185 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.184, i64 0, i32 2
  %.186 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.185, align 8
  call void %.186(%Lexer.580157* %.1)
  %.188 = load %"Array<Token>.580152"*, %"Array<Token>.580152"** %token_group, align 8
  %.191 = load i64, i64* %.190, align 8
  %.194 = load i64, i64* %.193, align 8
  %.195 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.196 = bitcast i8* %.195 to %FloRange.580135*
  %.197 = bitcast i8* %.195 to %FloRange_vtable_ty.580136**
  store %FloRange_vtable_ty.580136* @FloRange_vtable_data, %FloRange_vtable_ty.580136** %.197, align 8
  call void @FloRange_constructor(%FloRange.580135* %.196, i64 0, i64 0, i64 %.191, i64 %.194)
  %.200 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.201 = bitcast i8* %.200 to %Token.580141*
  %.202 = bitcast i8* %.200 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.202, align 8
  call void @Token_constructor(%Token.580141* %.201, i64 43, %FloRange.580135* %.196)
  %.205 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.188, i64 0, i32 0
  %.206 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.205, align 8
  %.207 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.206, i64 0, i32 2
  %.208 = load void (%"Array<Token>.580152"*, %Token.580141*)*, void (%"Array<Token>.580152"*, %Token.580141*)** %.207, align 8
  call void %.208(%"Array<Token>.580152"* %.188, %Token.580141* %.201)
  %.213 = load %"Array<Array<Token>>_vtable_ty.580154"*, %"Array<Array<Token>>_vtable_ty.580154"** %.12, align 8
  %.214 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.580154", %"Array<Array<Token>>_vtable_ty.580154"* %.213, i64 0, i32 2
  %.215 = load void (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)*, void (%"Array<Array<Token>>.580151"*, %"Array<Token>.580152"*)** %.214, align 8
  call void %.215(%"Array<Array<Token>>.580151"* %.11, %"Array<Token>.580152"* %.188)
  %.40 = load i8, i8* %.39, align 1
  %.41 = icmp eq i8 %.40, 34
  %.44 = and i1 %.41, %.43
  br i1 %.44, label %while.exit, label %while.entry.endif

while.entry.1:                                    ; preds = %while.entry.1.preheader, %while.entry.1.endif.endif
  %.1569 = phi i64 [ %active_open_pars.promoted, %while.entry.1.preheader ], [ %.15610, %while.entry.1.endif.endif ]
  %.114 = load i8, i8* %.39, align 1
  switch i8 %.114, label %while.entry.1.endif.endif [
    i8 40, label %while.entry.1.if
    i8 41, label %while.entry.1.endif.if
  ]

while.entry.1.if:                                 ; preds = %while.entry.1
  %.120 = add i64 %.1569, 1
  br label %while.entry.1.endif.endif

while.entry.1.endif.if:                           ; preds = %while.entry.1
  %.131 = add i64 %.1569, -1
  br label %while.entry.1.endif.endif

while.entry.1.endif.endif:                        ; preds = %while.entry.1.if, %while.entry.1, %while.entry.1.endif.if
  %.15610 = phi i64 [ %.120, %while.entry.1.if ], [ %.1569, %while.entry.1 ], [ %.131, %while.entry.1.endif.if ]
  %.137 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.138 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.137, i64 0, i32 21
  %.139 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.138, align 8
  %.140 = call %Token.580141* %.139(%Lexer.580157* %.1)
  %.142 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.141, align 8
  %.143 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.142, i64 0, i32 2
  %.144 = load void (%"Array<Token>.580152"*, %Token.580141*)*, void (%"Array<Token>.580152"*, %Token.580141*)** %.143, align 8
  call void %.144(%"Array<Token>.580152"* %.134, %Token.580141* %.140)
  %.148 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.149 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.148, i64 0, i32 2
  %.150 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.149, align 8
  call void %.150(%Lexer.580157* %.1)
  %.154 = load i8, i8* %.39, align 1
  %.155 = icmp ne i8 %.154, 41
  %.157 = icmp ne i64 %.15610, 0
  %.158 = or i1 %.155, %.157
  %.161 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.23, align 8
  %.162 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.161, i64 0, i32 0
  %.163 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.162, align 8
  %.164 = call i1 %.163(%Lexer.580157* %.1)
  %.165 = xor i1 %.164, true
  %.166 = and i1 %.158, %.165
  br i1 %.166, label %while.entry.1, label %while.entry.endif.if.endif.loopexit
}

define noalias %CharToken.580147* @Lexer_char_token(%Lexer.580157* %.1) {
.3:
  %.7 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.8 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.7, align 8
  %.9 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.8, i64 0, i32 2
  %.10 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.9, align 8
  call void %.10(%Lexer.580157* %.1)
  %.13 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 1
  %.14 = load i8, i8* %.13, align 1
  %.19 = icmp eq i8 %.14, 92
  br i1 %.19, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.23 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.7, align 8
  %.24 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.23, i64 0, i32 2
  %.25 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.24, align 8
  call void %.25(%Lexer.580157* %.1)
  %.29 = load i8, i8* %.13, align 1
  %.30 = call i8 @get_escape_char(i8 %.29)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %length.0 = phi i64 [ 5, %.3.if ], [ 3, %.3 ]
  %value.0 = phi i8 [ %.30, %.3.if ], [ %.14, %.3 ]
  %.38 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.7, align 8
  %.39 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.38, i64 0, i32 2
  %.40 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.39, align 8
  call void %.40(%Lexer.580157* %.1)
  %.45 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.7, align 8
  %.46 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.45, i64 0, i32 3
  %.47 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.46, align 8
  %.49 = call %FloRange.580135* %.47(%Lexer.580157* %.1, i64 %length.0)
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %CharToken.580147*
  %.52 = bitcast i8* %.50 to %CharToken_vtable_ty.580148**
  store %CharToken_vtable_ty.580148* @CharToken_vtable_data, %CharToken_vtable_ty.580148** %.52, align 8
  call void @CharToken_constructor(%CharToken.580147* %.51, i8 %value.0, %FloRange.580135* %.49)
  ret %CharToken.580147* %.51
}

define %Token.580141* @Lexer_lex_token(%Lexer.580157* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 1
  %.7 = load i8, i8* %.6, align 1
  %.12 = icmp eq i8 %.7, 32
  br i1 %.12, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.15 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.16 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.15, align 8
  %.17 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.16, i64 0, i32 2
  %.18 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.17, align 8
  call void %.18(%Lexer.580157* %.1)
  %.22 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.15, align 8
  %.23 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.22, i64 0, i32 21
  %.24 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.23, align 8
  %.25 = call %Token.580141* %.24(%Lexer.580157* %.1)
  ret %Token.580141* %.25

.3.endif:                                         ; preds = %.3
  %.28 = call i1 @is_identifier_char(i8 %.7)
  br i1 %.28, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.31 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.32 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.31, align 8
  %.33 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.32, i64 0, i32 18
  %.34 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.33, align 8
  %.35 = call %Token.580141* %.34(%Lexer.580157* %.1)
  ret %Token.580141* %.35

.3.endif.endif:                                   ; preds = %.3.endif
  %.38 = icmp eq i8 %.7, 34
  br i1 %.38, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.41 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.42 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.41, align 8
  %.43 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.42, i64 0, i32 19
  %.44 = load %StrToken.580149* (%Lexer.580157*)*, %StrToken.580149* (%Lexer.580157*)** %.43, align 8
  %.45 = call %StrToken.580149* %.44(%Lexer.580157* %.1)
  %.46 = bitcast %StrToken.580149* %.45 to %Token.580141*
  ret %Token.580141* %.46

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.49 = call i1 @is_number_char(i8 %.7)
  br i1 %.49, label %.3.endif.endif.endif.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  %.52 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.53 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.52, align 8
  %.54 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.53, i64 0, i32 17
  %.55 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.54, align 8
  %.56 = call %Token.580141* %.55(%Lexer.580157* %.1)
  ret %Token.580141* %.56

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  switch i8 %.7, label %.3.endif.endif.endif.endi...endif.4.endif.endif.endif [
    i8 58, label %.3.endif.endif.endif.endif.if
    i8 59, label %.3.endif.endif.endif.endif.endif.if
    i8 44, label %.3.endif.endif.endif.endif.endif.endif.if
    i8 43, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i8 45, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i8 42, label %.3.endif.endif.endif.endi...if
    i8 37, label %.3.endif.endif.endif.endi...endif.if
    i8 94, label %.3.endif.endif.endif.endi...endif.endif.if
    i8 47, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i8 40, label %.3.endif.endif.endif.endi...if.1
    i8 41, label %.3.endif.endif.endif.endi...endif.1.if
    i8 123, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i8 125, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i8 91, label %.3.endif.endif.endif.endi...if.2
    i8 93, label %.3.endif.endif.endif.endi...endif.2.if
    i8 13, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i8 10, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i8 39, label %.3.endif.endif.endif.endi...endif.2.endif.endif.if
    i8 63, label %.3.endif.endif.endif.endi...if.3
    i8 38, label %.3.endif.endif.endif.endi...endif.3.if
    i8 61, label %.3.endif.endif.endif.endi...endif.3.endif.if
    i8 33, label %.3.endif.endif.endif.endi...endif.3.endif.endif.if
    i8 62, label %.3.endif.endif.endif.endi...if.4
    i8 60, label %.3.endif.endif.endif.endi...endif.4.if
    i8 46, label %.3.endif.endif.endif.endi...endif.4.endif.if
    i8 0, label %.3.endif.endif.endif.endi...endif.4.endif.endif.if
  ]

.3.endif.endif.endif.endif.if:                    ; preds = %.3.endif.endif.endif.endif
  %.62 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.63 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.62, align 8
  %.64 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.63, i64 0, i32 3
  %.65 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.64, align 8
  %.66 = call %FloRange.580135* %.65(%Lexer.580157* %.1, i64 1)
  %.67 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.68 = bitcast i8* %.67 to %Token.580141*
  %.69 = bitcast i8* %.67 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.69, align 8
  call void @Token_constructor(%Token.580141* %.68, i64 0, %FloRange.580135* %.66)
  ret %Token.580141* %.68

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3.endif.endif.endif.endif
  %.77 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.78 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.77, align 8
  %.79 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.78, i64 0, i32 3
  %.80 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.79, align 8
  %.81 = call %FloRange.580135* %.80(%Lexer.580157* %.1, i64 1)
  %.82 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.83 = bitcast i8* %.82 to %Token.580141*
  %.84 = bitcast i8* %.82 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.84, align 8
  call void @Token_constructor(%Token.580141* %.83, i64 1, %FloRange.580135* %.81)
  ret %Token.580141* %.83

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3.endif.endif.endif.endif
  %.92 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.93 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.92, align 8
  %.94 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.93, i64 0, i32 3
  %.95 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.94, align 8
  %.96 = call %FloRange.580135* %.95(%Lexer.580157* %.1, i64 1)
  %.97 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.98 = bitcast i8* %.97 to %Token.580141*
  %.99 = bitcast i8* %.97 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.99, align 8
  call void @Token_constructor(%Token.580141* %.98, i64 2, %FloRange.580135* %.96)
  ret %Token.580141* %.98

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3.endif.endif.endif.endif
  %.107 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.108 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.107, align 8
  %.109 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.108, i64 0, i32 4
  %.110 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.109, align 8
  %.111 = call %Token.580141* %.110(%Lexer.580157* %.1)
  ret %Token.580141* %.111

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.117 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.118 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.117, align 8
  %.119 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.118, i64 0, i32 6
  %.120 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.119, align 8
  %.121 = call %Token.580141* %.120(%Lexer.580157* %.1)
  ret %Token.580141* %.121

.3.endif.endif.endif.endi...if:                   ; preds = %.3.endif.endif.endif.endif
  %.127 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.128 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.127, align 8
  %.129 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.128, i64 0, i32 7
  %.130 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.129, align 8
  %.131 = call %Token.580141* %.130(%Lexer.580157* %.1)
  ret %Token.580141* %.131

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3.endif.endif.endif.endif
  %.137 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.138 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.137, align 8
  %.139 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.138, i64 0, i32 8
  %.140 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.139, align 8
  %.141 = call %Token.580141* %.140(%Lexer.580157* %.1)
  ret %Token.580141* %.141

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3.endif.endif.endif.endif
  %.147 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.148 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.147, align 8
  %.149 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.148, i64 0, i32 9
  %.150 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.149, align 8
  %.151 = call %Token.580141* %.150(%Lexer.580157* %.1)
  ret %Token.580141* %.151

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.157 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.158 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.157, align 8
  %.159 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.158, i64 0, i32 5
  %.160 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.159, align 8
  %.161 = call i1 %.160(%Lexer.580157* %.1)
  %.165 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.157, align 8
  br i1 %.161, label %.3.endif.endif.endif.endi...endif.endif.endif.if.if, label %.3.endif.endif.endif.endi...endif.endif.endif.if.endif

.3.endif.endif.endif.endi...endif.endif.endif.if.if: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.if
  %.166 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.165, i64 0, i32 2
  %.167 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.166, align 8
  call void %.167(%Lexer.580157* %.1)
  %.171 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.157, align 8
  %.172 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.171, i64 0, i32 21
  %.173 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.172, align 8
  %.174 = call %Token.580141* %.173(%Lexer.580157* %.1)
  ret %Token.580141* %.174

.3.endif.endif.endif.endi...endif.endif.endif.if.endif: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.if
  %.179 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.165, i64 0, i32 10
  %.180 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.179, align 8
  %.181 = call %Token.580141* %.180(%Lexer.580157* %.1)
  ret %Token.580141* %.181

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3.endif.endif.endif.endif
  %.187 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.188 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.187, align 8
  %.189 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.188, i64 0, i32 3
  %.190 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.189, align 8
  %.191 = call %FloRange.580135* %.190(%Lexer.580157* %.1, i64 1)
  %.192 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.193 = bitcast i8* %.192 to %Token.580141*
  %.194 = bitcast i8* %.192 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.194, align 8
  call void @Token_constructor(%Token.580141* %.193, i64 22, %FloRange.580135* %.191)
  ret %Token.580141* %.193

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3.endif.endif.endif.endif
  %.202 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.203 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.202, align 8
  %.204 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.203, i64 0, i32 3
  %.205 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.204, align 8
  %.206 = call %FloRange.580135* %.205(%Lexer.580157* %.1, i64 1)
  %.207 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.208 = bitcast i8* %.207 to %Token.580141*
  %.209 = bitcast i8* %.207 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.209, align 8
  call void @Token_constructor(%Token.580141* %.208, i64 23, %FloRange.580135* %.206)
  ret %Token.580141* %.208

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3.endif.endif.endif.endif
  %.217 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.218 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.217, align 8
  %.219 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.218, i64 0, i32 3
  %.220 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.219, align 8
  %.221 = call %FloRange.580135* %.220(%Lexer.580157* %.1, i64 1)
  %.222 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.223 = bitcast i8* %.222 to %Token.580141*
  %.224 = bitcast i8* %.222 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.224, align 8
  call void @Token_constructor(%Token.580141* %.223, i64 24, %FloRange.580135* %.221)
  ret %Token.580141* %.223

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.232 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.233 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.232, align 8
  %.234 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.233, i64 0, i32 3
  %.235 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.234, align 8
  %.236 = call %FloRange.580135* %.235(%Lexer.580157* %.1, i64 1)
  %.237 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.238 = bitcast i8* %.237 to %Token.580141*
  %.239 = bitcast i8* %.237 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.239, align 8
  call void @Token_constructor(%Token.580141* %.238, i64 25, %FloRange.580135* %.236)
  ret %Token.580141* %.238

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3.endif.endif.endif.endif
  %.247 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.248 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.247, align 8
  %.249 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.248, i64 0, i32 3
  %.250 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.249, align 8
  %.251 = call %FloRange.580135* %.250(%Lexer.580157* %.1, i64 1)
  %.252 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.253 = bitcast i8* %.252 to %Token.580141*
  %.254 = bitcast i8* %.252 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.254, align 8
  call void @Token_constructor(%Token.580141* %.253, i64 26, %FloRange.580135* %.251)
  ret %Token.580141* %.253

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3.endif.endif.endif.endif
  %.262 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.263 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.262, align 8
  %.264 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.263, i64 0, i32 3
  %.265 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.264, align 8
  %.266 = call %FloRange.580135* %.265(%Lexer.580157* %.1, i64 1)
  %.267 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.268 = bitcast i8* %.267 to %Token.580141*
  %.269 = bitcast i8* %.267 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.269, align 8
  call void @Token_constructor(%Token.580141* %.268, i64 27, %FloRange.580135* %.266)
  ret %Token.580141* %.268

.3.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.3.endif.endif.endif.endif, %.3.endif.endif.endif.endif
  %.280 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.281 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.280, align 8
  %.282 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.281, i64 0, i32 3
  %.283 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.282, align 8
  %.284 = call %FloRange.580135* %.283(%Lexer.580157* %.1, i64 1)
  %.285 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.286 = bitcast i8* %.285 to %Token.580141*
  %.287 = bitcast i8* %.285 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.287, align 8
  call void @Token_constructor(%Token.580141* %.286, i64 30, %FloRange.580135* %.284)
  ret %Token.580141* %.286

.3.endif.endif.endif.endi...endif.2.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.295 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.296 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.295, align 8
  %.297 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.296, i64 0, i32 20
  %.298 = load %CharToken.580147* (%Lexer.580157*)*, %CharToken.580147* (%Lexer.580157*)** %.297, align 8
  %.299 = call %CharToken.580147* %.298(%Lexer.580157* %.1)
  %.300 = bitcast %CharToken.580147* %.299 to %Token.580141*
  ret %Token.580141* %.300

.3.endif.endif.endif.endi...if.3:                 ; preds = %.3.endif.endif.endif.endif
  %.306 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.307 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.306, align 8
  %.308 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.307, i64 0, i32 3
  %.309 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.308, align 8
  %.310 = call %FloRange.580135* %.309(%Lexer.580157* %.1, i64 1)
  %.311 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.312 = bitcast i8* %.311 to %Token.580141*
  %.313 = bitcast i8* %.311 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.313, align 8
  call void @Token_constructor(%Token.580141* %.312, i64 33, %FloRange.580135* %.310)
  ret %Token.580141* %.312

.3.endif.endif.endif.endi...endif.3.if:           ; preds = %.3.endif.endif.endif.endif
  %.321 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.322 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.321, align 8
  %.323 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.322, i64 0, i32 3
  %.324 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.323, align 8
  %.325 = call %FloRange.580135* %.324(%Lexer.580157* %.1, i64 1)
  %.326 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.327 = bitcast i8* %.326 to %Token.580141*
  %.328 = bitcast i8* %.326 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.328, align 8
  call void @Token_constructor(%Token.580141* %.327, i64 34, %FloRange.580135* %.325)
  ret %Token.580141* %.327

.3.endif.endif.endif.endi...endif.3.endif.if:     ; preds = %.3.endif.endif.endif.endif
  %.336 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.337 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.336, align 8
  %.338 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.337, i64 0, i32 11
  %.339 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.338, align 8
  %.340 = call %Token.580141* %.339(%Lexer.580157* %.1)
  ret %Token.580141* %.340

.3.endif.endif.endif.endi...endif.3.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.346 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.347 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.346, align 8
  %.348 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.347, i64 0, i32 12
  %.349 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.348, align 8
  %.350 = call %Token.580141* %.349(%Lexer.580157* %.1)
  ret %Token.580141* %.350

.3.endif.endif.endif.endi...if.4:                 ; preds = %.3.endif.endif.endif.endif
  %.356 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.357 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.356, align 8
  %.358 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.357, i64 0, i32 13
  %.359 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.358, align 8
  %.360 = call %Token.580141* %.359(%Lexer.580157* %.1)
  ret %Token.580141* %.360

.3.endif.endif.endif.endi...endif.4.if:           ; preds = %.3.endif.endif.endif.endif
  %.366 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.367 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.366, align 8
  %.368 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.367, i64 0, i32 14
  %.369 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.368, align 8
  %.370 = call %Token.580141* %.369(%Lexer.580157* %.1)
  ret %Token.580141* %.370

.3.endif.endif.endif.endi...endif.4.endif.if:     ; preds = %.3.endif.endif.endif.endif
  %.376 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.377 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.376, align 8
  %.378 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.377, i64 0, i32 15
  %.379 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.378, align 8
  %.380 = call %Token.580141* %.379(%Lexer.580157* %.1)
  ret %Token.580141* %.380

.3.endif.endif.endif.endi...endif.4.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.386 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 5
  %.387 = load i64, i64* %.386, align 8
  %.389 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 6
  %.390 = load i64, i64* %.389, align 8
  %.391 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.392 = bitcast i8* %.391 to %FloRange.580135*
  %.393 = bitcast i8* %.391 to %FloRange_vtable_ty.580136**
  store %FloRange_vtable_ty.580136* @FloRange_vtable_data, %FloRange_vtable_ty.580136** %.393, align 8
  call void @FloRange_constructor(%FloRange.580135* %.392, i64 0, i64 0, i64 %.387, i64 %.390)
  %.396 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.397 = bitcast i8* %.396 to %Token.580141*
  %.398 = bitcast i8* %.396 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.398, align 8
  call void @Token_constructor(%Token.580141* %.397, i64 43, %FloRange.580135* %.392)
  ret %Token.580141* %.397

.3.endif.endif.endif.endi...endif.4.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif
  %.403 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 3
  %.404 = load %"Array<FloError>.580139"*, %"Array<FloError>.580139"** %.403, align 8
  %.406 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 2
  %.407 = load %string.580129*, %string.580129** %.406, align 8
  %.408 = getelementptr inbounds %string.580129, %string.580129* %.407, i64 0, i32 0
  %.409 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.410 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.409, i64 0, i32 6
  %.411 = load %string.580129* (%string.580129*, i64, i64)*, %string.580129* (%string.580129*, i64, i64)** %.410, align 8
  %.413 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 4
  %.414 = load i64, i64* %.413, align 8
  %.415 = call %string.580129* %.411(%string.580129* %.407, i64 %.414, i64 1)
  %.416 = getelementptr inbounds %string.580129, %string.580129* %.415, i64 0, i32 0
  %.417 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.416, align 8
  %.418 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.417, i64 0, i32 10
  %.419 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.418, align 8
  %.420 = call i8* %.419(%string.580129* %.415)
  %.422 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.62, i64 0, i64 0), i8* %.420)
  %.424 = call i8* @malloc(i64 %.422)
  %.425 = call i64 (i8*, i8*, ...) @sprintf(i8* %.424, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.62, i64 0, i64 0), i8* %.420)
  %.426 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.427 = bitcast i8* %.426 to %string.580129*
  %.428 = bitcast i8* %.426 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.428, align 8
  %.430 = getelementptr inbounds i8, i8* %.426, i64 8
  %0 = bitcast i8* %.430 to i8**
  store i8* %.424, i8** %0, align 8
  %.432 = getelementptr inbounds i8, i8* %.426, i64 16
  %1 = bitcast i8* %.432 to i64*
  store i64 %.422, i64* %1, align 8
  %.434 = getelementptr inbounds i8, i8* %.426, i64 24
  %2 = bitcast i8* %.434 to i64*
  store i64 %.422, i64* %2, align 8
  %.437 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.438 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.437, align 8
  %.439 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.438, i64 0, i32 3
  %.440 = load %FloRange.580135* (%Lexer.580157*, i64)*, %FloRange.580135* (%Lexer.580157*, i64)** %.439, align 8
  %.441 = call %FloRange.580135* %.440(%Lexer.580157* %.1, i64 1)
  %.442 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.443 = bitcast i8* %.442 to %FloError.580137*
  %.444 = bitcast i8* %.442 to %FloError_vtable_ty.580138**
  store %FloError_vtable_ty.580138* @FloError_vtable_data, %FloError_vtable_ty.580138** %.444, align 8
  call void @FloError_constructor(%FloError.580137* %.443, i64 0, %string.580129* %.427, %FloRange.580135* %.441)
  %.447 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.404, i64 0, i32 0
  %.448 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.447, align 8
  %.449 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.448, i64 0, i32 2
  %.450 = load void (%"Array<FloError>.580139"*, %FloError.580137*)*, void (%"Array<FloError>.580139"*, %FloError.580137*)** %.449, align 8
  call void %.450(%"Array<FloError>.580139"* %.404, %FloError.580137* %.443)
  ret %Token.580141* null
}

define %"Array<Token>.580152"* @Lexer_tokenize(%Lexer.580157* %.1, %string.580129* %.2, %"Array<FloError>.580139"* %.3) {
.5:
  %.11 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 2
  store %string.580129* %.2, %string.580129** %.11, align 8
  %.15 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 3
  store %"Array<FloError>.580139"* %.3, %"Array<FloError>.580139"** %.15, align 8
  %.18 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 0
  %.19 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.18, align 8
  %.20 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.19, i64 0, i32 2
  %.21 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.20, align 8
  call void %.21(%Lexer.580157* %.1)
  %.24 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.26 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %"Array<Token>.580152"*
  %.28 = bitcast i8* %.26 to %"Array<Token>_vtable_ty.580153"**
  store %"Array<Token>_vtable_ty.580153"* @"Array<Token>_vtable_data", %"Array<Token>_vtable_ty.580153"** %.28, align 8
  %.30 = getelementptr inbounds i8, i8* %.26, i64 8
  %0 = bitcast i8* %.30 to i8**
  store i8* %.24, i8** %0, align 8
  %.32 = getelementptr inbounds i8, i8* %.26, i64 16
  %1 = bitcast i8* %.32 to i64*
  store i64 0, i64* %1, align 8
  %.34 = getelementptr inbounds i8, i8* %.26, i64 24
  %2 = bitcast i8* %.34 to i64*
  store i64 8, i64* %2, align 8
  %.39 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.18, align 8
  %.40 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.39, i64 0, i32 0
  %.41 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.40, align 8
  %.42 = call i1 %.41(%Lexer.580157* %.1)
  %.43 = xor i1 %.42, true
  %.46 = load %"Array<FloError>.580139"*, %"Array<FloError>.580139"** %.15, align 8
  %.47 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.46, i64 0, i32 2
  %.48 = load i64, i64* %.47, align 8
  %.49 = icmp eq i64 %.48, 0
  %.50 = and i1 %.49, %.43
  br i1 %.50, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.5, %while.entry
  %.55 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.18, align 8
  %.56 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.55, i64 0, i32 21
  %.57 = load %Token.580141* (%Lexer.580157*)*, %Token.580141* (%Lexer.580157*)** %.56, align 8
  %.58 = call %Token.580141* %.57(%Lexer.580157* %.1)
  %.60 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.28, align 8
  %.61 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.60, i64 0, i32 2
  %.62 = load void (%"Array<Token>.580152"*, %Token.580141*)*, void (%"Array<Token>.580152"*, %Token.580141*)** %.61, align 8
  call void %.62(%"Array<Token>.580152"* %.27, %Token.580141* %.58)
  %.66 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.18, align 8
  %.67 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.66, i64 0, i32 2
  %.68 = load void (%Lexer.580157*)*, void (%Lexer.580157*)** %.67, align 8
  call void %.68(%Lexer.580157* %.1)
  %.72 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.18, align 8
  %.73 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.72, i64 0, i32 0
  %.74 = load i1 (%Lexer.580157*)*, i1 (%Lexer.580157*)** %.73, align 8
  %.75 = call i1 %.74(%Lexer.580157* %.1)
  %.76 = xor i1 %.75, true
  %.79 = load %"Array<FloError>.580139"*, %"Array<FloError>.580139"** %.15, align 8
  %.80 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.79, i64 0, i32 2
  %.81 = load i64, i64* %.80, align 8
  %.82 = icmp eq i64 %.81, 0
  %.83 = and i1 %.82, %.76
  br i1 %.83, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.5
  %.87 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 5
  %.88 = load i64, i64* %.87, align 8
  %.90 = getelementptr inbounds %Lexer.580157, %Lexer.580157* %.1, i64 0, i32 6
  %.91 = load i64, i64* %.90, align 8
  %.92 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.93 = bitcast i8* %.92 to %FloRange.580135*
  %.94 = bitcast i8* %.92 to %FloRange_vtable_ty.580136**
  store %FloRange_vtable_ty.580136* @FloRange_vtable_data, %FloRange_vtable_ty.580136** %.94, align 8
  call void @FloRange_constructor(%FloRange.580135* %.93, i64 0, i64 0, i64 %.88, i64 %.91)
  %.97 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.98 = bitcast i8* %.97 to %Token.580141*
  %.99 = bitcast i8* %.97 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.99, align 8
  call void @Token_constructor(%Token.580141* %.98, i64 43, %FloRange.580135* %.93)
  %.103 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.28, align 8
  %.104 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.103, i64 0, i32 2
  %.105 = load void (%"Array<Token>.580152"*, %Token.580141*)*, void (%"Array<Token>.580152"*, %Token.580141*)** %.104, align 8
  call void %.105(%"Array<Token>.580152"* %.27, %Token.580141* %.98)
  ret %"Array<Token>.580152"* %.27
}

; Function Attrs: nofree nounwind readonly
declare double @atof(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @atoi(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
define noalias %string.580129* @token_str(i64 %.1) local_unnamed_addr #3 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endi...endif.16.endif [
    i64 0, label %.3.if
    i64 1, label %.3.endif.if
    i64 2, label %.3.endif.endif.if
    i64 5, label %.3.endif.endif.endif.if
    i64 20, label %.3.endif.endif.endif.endif.if
    i64 4, label %.3.endif.endif.endif.endif.endif.if
    i64 21, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 3, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 6, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 22, label %.3.endif.endif.endif.endi...if
    i64 23, label %.3.endif.endif.endif.endi...endif.if
    i64 7, label %.3.endif.endif.endif.endi...endif.endif.if
    i64 24, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i64 25, label %.3.endif.endif.endif.endi...if.1
    i64 26, label %.3.endif.endif.endif.endi...endif.1.if
    i64 27, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i64 28, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i64 29, label %.3.endif.endif.endif.endi...if.2
    i64 30, label %.3.endif.endif.endif.endi...endif.2.if
    i64 31, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i64 32, label %.3.endif.endif.endif.endi...endif.2.endif.endif.if
    i64 8, label %.3.endif.endif.endif.endi...if.3
    i64 33, label %.3.endif.endif.endif.endi...endif.3.if
    i64 34, label %.3.endif.endif.endif.endi...endif.3.endif.if
    i64 35, label %.3.endif.endif.endif.endi...endif.3.endif.endif.if
    i64 36, label %.3.endif.endif.endif.endi...if.4
    i64 37, label %.3.endif.endif.endif.endi...endif.4.if
    i64 38, label %.3.endif.endif.endif.endi...endif.4.endif.if
    i64 39, label %.3.endif.endif.endif.endi...endif.4.endif.endif.if
    i64 40, label %.3.endif.endif.endif.endi...if.5
    i64 41, label %.3.endif.endif.endif.endi...endif.5.if
    i64 42, label %.3.endif.endif.endif.endi...endif.5.endif.if
    i64 43, label %.3.endif.endif.endif.endi...endif.5.endif.endif.if
    i64 44, label %.3.endif.endif.endif.endi...if.6
    i64 45, label %.3.endif.endif.endif.endi...endif.6.if
    i64 46, label %.3.endif.endif.endif.endi...endif.6.endif.if
    i64 47, label %.3.endif.endif.endif.endi...endif.6.endif.endif.if
    i64 48, label %.3.endif.endif.endif.endi...if.7
    i64 49, label %.3.endif.endif.endif.endi...endif.7.if
    i64 50, label %.3.endif.endif.endif.endi...endif.7.endif.if
    i64 51, label %.3.endif.endif.endif.endi...endif.7.endif.endif.if
    i64 52, label %.3.endif.endif.endif.endi...if.8
    i64 53, label %.3.endif.endif.endif.endi...endif.8.if
    i64 54, label %.3.endif.endif.endif.endi...endif.8.endif.if
    i64 56, label %.3.endif.endif.endif.endi...endif.8.endif.endif.if
    i64 57, label %.3.endif.endif.endif.endi...if.9
    i64 58, label %.3.endif.endif.endif.endi...endif.9.if
    i64 59, label %.3.endif.endif.endif.endi...endif.9.endif.if
    i64 60, label %.3.endif.endif.endif.endi...endif.9.endif.endif.if
    i64 61, label %.3.endif.endif.endif.endi...if.10
    i64 62, label %.3.endif.endif.endif.endi...endif.10.if
    i64 63, label %.3.endif.endif.endif.endi...endif.10.endif.if
    i64 64, label %.3.endif.endif.endif.endi...endif.10.endif.endif.if
    i64 65, label %.3.endif.endif.endif.endi...if.11
    i64 66, label %.3.endif.endif.endif.endi...endif.11.if
    i64 67, label %.3.endif.endif.endif.endi...endif.11.endif.if
    i64 68, label %.3.endif.endif.endif.endi...endif.11.endif.endif.if
    i64 69, label %.3.endif.endif.endif.endi...if.12
    i64 70, label %.3.endif.endif.endif.endi...endif.12.if
    i64 71, label %.3.endif.endif.endif.endi...endif.12.endif.if
    i64 72, label %.3.endif.endif.endif.endi...endif.12.endif.endif.if
    i64 73, label %.3.endif.endif.endif.endi...if.13
    i64 74, label %.3.endif.endif.endif.endi...endif.13.if
    i64 75, label %.3.endif.endif.endif.endi...endif.13.endif.if
    i64 76, label %.3.endif.endif.endif.endi...endif.13.endif.endif.if
    i64 77, label %.3.endif.endif.endif.endi...if.14
    i64 78, label %.3.endif.endif.endif.endi...endif.14.if
    i64 79, label %.3.endif.endif.endif.endi...endif.14.endif.if
    i64 80, label %.3.endif.endif.endif.endi...endif.14.endif.endif.if
    i64 81, label %.3.endif.endif.endif.endi...if.15
    i64 82, label %.3.endif.endif.endif.endi...endif.15.if
    i64 83, label %.3.endif.endif.endif.endi...endif.15.endif.if
    i64 84, label %.3.endif.endif.endif.endi...endif.15.endif.endif.if
    i64 85, label %.3.endif.endif.endif.endi...if.16
    i64 55, label %.3.endif.endif.endif.endi...endif.16.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.580129*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9.repack, align 8
  %.9.repack223 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack223 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.63, i64 0, i64 0), i8** %0, align 8
  %.9.repack224 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack224 to i64*
  store i64 3, i64* %1, align 8
  %.9.repack225 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack225 to i64*
  store i64 3, i64* %2, align 8
  ret %string.580129* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.580129*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.16.repack, align 8
  %.16.repack220 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack220 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.64, i64 0, i64 0), i8** %3, align 8
  %.16.repack221 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack221 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack222 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack222 to i64*
  store i64 7, i64* %5, align 8
  ret %string.580129* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.580129*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.23.repack, align 8
  %.23.repack217 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack217 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.65, i64 0, i64 0), i8** %6, align 8
  %.23.repack218 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack218 to i64*
  store i64 5, i64* %7, align 8
  %.23.repack219 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack219 to i64*
  store i64 5, i64* %8, align 8
  ret %string.580129* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.580129*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.30.repack, align 8
  %.30.repack214 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack214 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.66, i64 0, i64 0), i8** %9, align 8
  %.30.repack215 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack215 to i64*
  store i64 4, i64* %10, align 8
  %.30.repack216 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack216 to i64*
  store i64 4, i64* %11, align 8
  ret %string.580129* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.580129*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.37.repack, align 8
  %.37.repack211 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack211 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.67, i64 0, i64 0), i8** %12, align 8
  %.37.repack212 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack212 to i64*
  store i64 9, i64* %13, align 8
  %.37.repack213 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack213 to i64*
  store i64 9, i64* %14, align 8
  ret %string.580129* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.580129*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.44.repack, align 8
  %.44.repack208 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack208 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.68, i64 0, i64 0), i8** %15, align 8
  %.44.repack209 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack209 to i64*
  store i64 5, i64* %16, align 8
  %.44.repack210 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack210 to i64*
  store i64 5, i64* %17, align 8
  ret %string.580129* %.44

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.580129*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.51.repack, align 8
  %.51.repack205 = getelementptr inbounds i8, i8* %.50, i64 8
  %18 = bitcast i8* %.51.repack205 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.69, i64 0, i64 0), i8** %18, align 8
  %.51.repack206 = getelementptr inbounds i8, i8* %.50, i64 16
  %19 = bitcast i8* %.51.repack206 to i64*
  store i64 11, i64* %19, align 8
  %.51.repack207 = getelementptr inbounds i8, i8* %.50, i64 24
  %20 = bitcast i8* %.51.repack207 to i64*
  store i64 11, i64* %20, align 8
  ret %string.580129* %.51

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.580129*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.58.repack, align 8
  %.58.repack202 = getelementptr inbounds i8, i8* %.57, i64 8
  %21 = bitcast i8* %.58.repack202 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.70, i64 0, i64 0), i8** %21, align 8
  %.58.repack203 = getelementptr inbounds i8, i8* %.57, i64 16
  %22 = bitcast i8* %.58.repack203 to i64*
  store i64 4, i64* %22, align 8
  %.58.repack204 = getelementptr inbounds i8, i8* %.57, i64 24
  %23 = bitcast i8* %.58.repack204 to i64*
  store i64 4, i64* %23, align 8
  ret %string.580129* %.58

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  %.64 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %string.580129*
  %.65.repack = bitcast i8* %.64 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.65.repack, align 8
  %.65.repack199 = getelementptr inbounds i8, i8* %.64, i64 8
  %24 = bitcast i8* %.65.repack199 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.71, i64 0, i64 0), i8** %24, align 8
  %.65.repack200 = getelementptr inbounds i8, i8* %.64, i64 16
  %25 = bitcast i8* %.65.repack200 to i64*
  store i64 3, i64* %25, align 8
  %.65.repack201 = getelementptr inbounds i8, i8* %.64, i64 24
  %26 = bitcast i8* %.65.repack201 to i64*
  store i64 3, i64* %26, align 8
  ret %string.580129* %.65

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  %.71 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %string.580129*
  %.72.repack = bitcast i8* %.71 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.72.repack, align 8
  %.72.repack196 = getelementptr inbounds i8, i8* %.71, i64 8
  %27 = bitcast i8* %.72.repack196 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.72, i64 0, i64 0), i8** %27, align 8
  %.72.repack197 = getelementptr inbounds i8, i8* %.71, i64 16
  %28 = bitcast i8* %.72.repack197 to i64*
  store i64 4, i64* %28, align 8
  %.72.repack198 = getelementptr inbounds i8, i8* %.71, i64 24
  %29 = bitcast i8* %.72.repack198 to i64*
  store i64 4, i64* %29, align 8
  ret %string.580129* %.72

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  %.78 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.580129*
  %.79.repack = bitcast i8* %.78 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.79.repack, align 8
  %.79.repack193 = getelementptr inbounds i8, i8* %.78, i64 8
  %30 = bitcast i8* %.79.repack193 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.73, i64 0, i64 0), i8** %30, align 8
  %.79.repack194 = getelementptr inbounds i8, i8* %.78, i64 16
  %31 = bitcast i8* %.79.repack194 to i64*
  store i64 4, i64* %31, align 8
  %.79.repack195 = getelementptr inbounds i8, i8* %.78, i64 24
  %32 = bitcast i8* %.79.repack195 to i64*
  store i64 4, i64* %32, align 8
  ret %string.580129* %.79

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3
  %.85 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.580129*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.86.repack, align 8
  %.86.repack190 = getelementptr inbounds i8, i8* %.85, i64 8
  %33 = bitcast i8* %.86.repack190 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.74, i64 0, i64 0), i8** %33, align 8
  %.86.repack191 = getelementptr inbounds i8, i8* %.85, i64 16
  %34 = bitcast i8* %.86.repack191 to i64*
  store i64 3, i64* %34, align 8
  %.86.repack192 = getelementptr inbounds i8, i8* %.85, i64 24
  %35 = bitcast i8* %.86.repack192 to i64*
  store i64 3, i64* %35, align 8
  ret %string.580129* %.86

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3
  %.92 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.580129*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.93.repack, align 8
  %.93.repack187 = getelementptr inbounds i8, i8* %.92, i64 8
  %36 = bitcast i8* %.93.repack187 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.75, i64 0, i64 0), i8** %36, align 8
  %.93.repack188 = getelementptr inbounds i8, i8* %.92, i64 16
  %37 = bitcast i8* %.93.repack188 to i64*
  store i64 6, i64* %37, align 8
  %.93.repack189 = getelementptr inbounds i8, i8* %.92, i64 24
  %38 = bitcast i8* %.93.repack189 to i64*
  store i64 6, i64* %38, align 8
  ret %string.580129* %.93

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3
  %.99 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.580129*
  %.100.repack = bitcast i8* %.99 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.100.repack, align 8
  %.100.repack184 = getelementptr inbounds i8, i8* %.99, i64 8
  %39 = bitcast i8* %.100.repack184 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.76, i64 0, i64 0), i8** %39, align 8
  %.100.repack185 = getelementptr inbounds i8, i8* %.99, i64 16
  %40 = bitcast i8* %.100.repack185 to i64*
  store i64 6, i64* %40, align 8
  %.100.repack186 = getelementptr inbounds i8, i8* %.99, i64 24
  %41 = bitcast i8* %.100.repack186 to i64*
  store i64 6, i64* %41, align 8
  ret %string.580129* %.100

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3
  %.106 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.580129*
  %.107.repack = bitcast i8* %.106 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.107.repack, align 8
  %.107.repack181 = getelementptr inbounds i8, i8* %.106, i64 8
  %42 = bitcast i8* %.107.repack181 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.77, i64 0, i64 0), i8** %42, align 8
  %.107.repack182 = getelementptr inbounds i8, i8* %.106, i64 16
  %43 = bitcast i8* %.107.repack182 to i64*
  store i64 8, i64* %43, align 8
  %.107.repack183 = getelementptr inbounds i8, i8* %.106, i64 24
  %44 = bitcast i8* %.107.repack183 to i64*
  store i64 8, i64* %44, align 8
  ret %string.580129* %.107

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.580129*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.114.repack, align 8
  %.114.repack178 = getelementptr inbounds i8, i8* %.113, i64 8
  %45 = bitcast i8* %.114.repack178 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.78, i64 0, i64 0), i8** %45, align 8
  %.114.repack179 = getelementptr inbounds i8, i8* %.113, i64 16
  %46 = bitcast i8* %.114.repack179 to i64*
  store i64 8, i64* %46, align 8
  %.114.repack180 = getelementptr inbounds i8, i8* %.113, i64 24
  %47 = bitcast i8* %.114.repack180 to i64*
  store i64 8, i64* %47, align 8
  ret %string.580129* %.114

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3
  %.120 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.580129*
  %.121.repack = bitcast i8* %.120 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.121.repack, align 8
  %.121.repack175 = getelementptr inbounds i8, i8* %.120, i64 8
  %48 = bitcast i8* %.121.repack175 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.79, i64 0, i64 0), i8** %48, align 8
  %.121.repack176 = getelementptr inbounds i8, i8* %.120, i64 16
  %49 = bitcast i8* %.121.repack176 to i64*
  store i64 3, i64* %49, align 8
  %.121.repack177 = getelementptr inbounds i8, i8* %.120, i64 24
  %50 = bitcast i8* %.121.repack177 to i64*
  store i64 3, i64* %50, align 8
  ret %string.580129* %.121

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.580129*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.128.repack, align 8
  %.128.repack172 = getelementptr inbounds i8, i8* %.127, i64 8
  %51 = bitcast i8* %.128.repack172 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.80, i64 0, i64 0), i8** %51, align 8
  %.128.repack173 = getelementptr inbounds i8, i8* %.127, i64 16
  %52 = bitcast i8* %.128.repack173 to i64*
  store i64 5, i64* %52, align 8
  %.128.repack174 = getelementptr inbounds i8, i8* %.127, i64 24
  %53 = bitcast i8* %.128.repack174 to i64*
  store i64 5, i64* %53, align 8
  ret %string.580129* %.128

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3
  %.134 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %string.580129*
  %.135.repack = bitcast i8* %.134 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.135.repack, align 8
  %.135.repack169 = getelementptr inbounds i8, i8* %.134, i64 8
  %54 = bitcast i8* %.135.repack169 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.81, i64 0, i64 0), i8** %54, align 8
  %.135.repack170 = getelementptr inbounds i8, i8* %.134, i64 16
  %55 = bitcast i8* %.135.repack170 to i64*
  store i64 2, i64* %55, align 8
  %.135.repack171 = getelementptr inbounds i8, i8* %.134, i64 24
  %56 = bitcast i8* %.135.repack171 to i64*
  store i64 2, i64* %56, align 8
  ret %string.580129* %.135

.3.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.3
  %.141 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.142 = bitcast i8* %.141 to %string.580129*
  %.142.repack = bitcast i8* %.141 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.142.repack, align 8
  %.142.repack166 = getelementptr inbounds i8, i8* %.141, i64 8
  %57 = bitcast i8* %.142.repack166 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.82, i64 0, i64 0), i8** %57, align 8
  %.142.repack167 = getelementptr inbounds i8, i8* %.141, i64 16
  %58 = bitcast i8* %.142.repack167 to i64*
  store i64 3, i64* %58, align 8
  %.142.repack168 = getelementptr inbounds i8, i8* %.141, i64 24
  %59 = bitcast i8* %.142.repack168 to i64*
  store i64 3, i64* %59, align 8
  ret %string.580129* %.142

.3.endif.endif.endif.endi...endif.2.endif.endif.if: ; preds = %.3
  %.148 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.149 = bitcast i8* %.148 to %string.580129*
  %.149.repack = bitcast i8* %.148 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.149.repack, align 8
  %.149.repack163 = getelementptr inbounds i8, i8* %.148, i64 8
  %60 = bitcast i8* %.149.repack163 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.83, i64 0, i64 0), i8** %60, align 8
  %.149.repack164 = getelementptr inbounds i8, i8* %.148, i64 16
  %61 = bitcast i8* %.149.repack164 to i64*
  store i64 4, i64* %61, align 8
  %.149.repack165 = getelementptr inbounds i8, i8* %.148, i64 24
  %62 = bitcast i8* %.149.repack165 to i64*
  store i64 4, i64* %62, align 8
  ret %string.580129* %.149

.3.endif.endif.endif.endi...if.3:                 ; preds = %.3
  %.155 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.156 = bitcast i8* %.155 to %string.580129*
  %.156.repack = bitcast i8* %.155 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.156.repack, align 8
  %.156.repack160 = getelementptr inbounds i8, i8* %.155, i64 8
  %63 = bitcast i8* %.156.repack160 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.84, i64 0, i64 0), i8** %63, align 8
  %.156.repack161 = getelementptr inbounds i8, i8* %.155, i64 16
  %64 = bitcast i8* %.156.repack161 to i64*
  store i64 3, i64* %64, align 8
  %.156.repack162 = getelementptr inbounds i8, i8* %.155, i64 24
  %65 = bitcast i8* %.156.repack162 to i64*
  store i64 3, i64* %65, align 8
  ret %string.580129* %.156

.3.endif.endif.endif.endi...endif.3.if:           ; preds = %.3
  %.162 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.162 to %string.580129*
  %.163.repack = bitcast i8* %.162 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.163.repack, align 8
  %.163.repack157 = getelementptr inbounds i8, i8* %.162, i64 8
  %66 = bitcast i8* %.163.repack157 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.85, i64 0, i64 0), i8** %66, align 8
  %.163.repack158 = getelementptr inbounds i8, i8* %.162, i64 16
  %67 = bitcast i8* %.163.repack158 to i64*
  store i64 4, i64* %67, align 8
  %.163.repack159 = getelementptr inbounds i8, i8* %.162, i64 24
  %68 = bitcast i8* %.163.repack159 to i64*
  store i64 4, i64* %68, align 8
  ret %string.580129* %.163

.3.endif.endif.endif.endi...endif.3.endif.if:     ; preds = %.3
  %.169 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.580129*
  %.170.repack = bitcast i8* %.169 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.170.repack, align 8
  %.170.repack154 = getelementptr inbounds i8, i8* %.169, i64 8
  %69 = bitcast i8* %.170.repack154 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.86, i64 0, i64 0), i8** %69, align 8
  %.170.repack155 = getelementptr inbounds i8, i8* %.169, i64 16
  %70 = bitcast i8* %.170.repack155 to i64*
  store i64 3, i64* %70, align 8
  %.170.repack156 = getelementptr inbounds i8, i8* %.169, i64 24
  %71 = bitcast i8* %.170.repack156 to i64*
  store i64 3, i64* %71, align 8
  ret %string.580129* %.170

.3.endif.endif.endif.endi...endif.3.endif.endif.if: ; preds = %.3
  %.176 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.177 = bitcast i8* %.176 to %string.580129*
  %.177.repack = bitcast i8* %.176 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.177.repack, align 8
  %.177.repack151 = getelementptr inbounds i8, i8* %.176, i64 8
  %72 = bitcast i8* %.177.repack151 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.87, i64 0, i64 0), i8** %72, align 8
  %.177.repack152 = getelementptr inbounds i8, i8* %.176, i64 16
  %73 = bitcast i8* %.177.repack152 to i64*
  store i64 2, i64* %73, align 8
  %.177.repack153 = getelementptr inbounds i8, i8* %.176, i64 24
  %74 = bitcast i8* %.177.repack153 to i64*
  store i64 2, i64* %74, align 8
  ret %string.580129* %.177

.3.endif.endif.endif.endi...if.4:                 ; preds = %.3
  %.183 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.184 = bitcast i8* %.183 to %string.580129*
  %.184.repack = bitcast i8* %.183 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.184.repack, align 8
  %.184.repack148 = getelementptr inbounds i8, i8* %.183, i64 8
  %75 = bitcast i8* %.184.repack148 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.88, i64 0, i64 0), i8** %75, align 8
  %.184.repack149 = getelementptr inbounds i8, i8* %.183, i64 16
  %76 = bitcast i8* %.184.repack149 to i64*
  store i64 3, i64* %76, align 8
  %.184.repack150 = getelementptr inbounds i8, i8* %.183, i64 24
  %77 = bitcast i8* %.184.repack150 to i64*
  store i64 3, i64* %77, align 8
  ret %string.580129* %.184

.3.endif.endif.endif.endi...endif.4.if:           ; preds = %.3
  %.190 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.191 = bitcast i8* %.190 to %string.580129*
  %.191.repack = bitcast i8* %.190 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.191.repack, align 8
  %.191.repack145 = getelementptr inbounds i8, i8* %.190, i64 8
  %78 = bitcast i8* %.191.repack145 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.89, i64 0, i64 0), i8** %78, align 8
  %.191.repack146 = getelementptr inbounds i8, i8* %.190, i64 16
  %79 = bitcast i8* %.191.repack146 to i64*
  store i64 3, i64* %79, align 8
  %.191.repack147 = getelementptr inbounds i8, i8* %.190, i64 24
  %80 = bitcast i8* %.191.repack147 to i64*
  store i64 3, i64* %80, align 8
  ret %string.580129* %.191

.3.endif.endif.endif.endi...endif.4.endif.if:     ; preds = %.3
  %.197 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.198 = bitcast i8* %.197 to %string.580129*
  %.198.repack = bitcast i8* %.197 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.198.repack, align 8
  %.198.repack142 = getelementptr inbounds i8, i8* %.197, i64 8
  %81 = bitcast i8* %.198.repack142 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.90, i64 0, i64 0), i8** %81, align 8
  %.198.repack143 = getelementptr inbounds i8, i8* %.197, i64 16
  %82 = bitcast i8* %.198.repack143 to i64*
  store i64 2, i64* %82, align 8
  %.198.repack144 = getelementptr inbounds i8, i8* %.197, i64 24
  %83 = bitcast i8* %.198.repack144 to i64*
  store i64 2, i64* %83, align 8
  ret %string.580129* %.198

.3.endif.endif.endif.endi...endif.4.endif.endif.if: ; preds = %.3
  %.204 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.205 = bitcast i8* %.204 to %string.580129*
  %.205.repack = bitcast i8* %.204 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.205.repack, align 8
  %.205.repack139 = getelementptr inbounds i8, i8* %.204, i64 8
  %84 = bitcast i8* %.205.repack139 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.91, i64 0, i64 0), i8** %84, align 8
  %.205.repack140 = getelementptr inbounds i8, i8* %.204, i64 16
  %85 = bitcast i8* %.205.repack140 to i64*
  store i64 2, i64* %85, align 8
  %.205.repack141 = getelementptr inbounds i8, i8* %.204, i64 24
  %86 = bitcast i8* %.205.repack141 to i64*
  store i64 2, i64* %86, align 8
  ret %string.580129* %.205

.3.endif.endif.endif.endi...if.5:                 ; preds = %.3
  %.211 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.212 = bitcast i8* %.211 to %string.580129*
  %.212.repack = bitcast i8* %.211 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.212.repack, align 8
  %.212.repack136 = getelementptr inbounds i8, i8* %.211, i64 8
  %87 = bitcast i8* %.212.repack136 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.92, i64 0, i64 0), i8** %87, align 8
  %.212.repack137 = getelementptr inbounds i8, i8* %.211, i64 16
  %88 = bitcast i8* %.212.repack137 to i64*
  store i64 3, i64* %88, align 8
  %.212.repack138 = getelementptr inbounds i8, i8* %.211, i64 24
  %89 = bitcast i8* %.212.repack138 to i64*
  store i64 3, i64* %89, align 8
  ret %string.580129* %.212

.3.endif.endif.endif.endi...endif.5.if:           ; preds = %.3
  %.218 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.219 = bitcast i8* %.218 to %string.580129*
  %.219.repack = bitcast i8* %.218 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.219.repack, align 8
  %.219.repack133 = getelementptr inbounds i8, i8* %.218, i64 8
  %90 = bitcast i8* %.219.repack133 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.93, i64 0, i64 0), i8** %90, align 8
  %.219.repack134 = getelementptr inbounds i8, i8* %.218, i64 16
  %91 = bitcast i8* %.219.repack134 to i64*
  store i64 3, i64* %91, align 8
  %.219.repack135 = getelementptr inbounds i8, i8* %.218, i64 24
  %92 = bitcast i8* %.219.repack135 to i64*
  store i64 3, i64* %92, align 8
  ret %string.580129* %.219

.3.endif.endif.endif.endi...endif.5.endif.if:     ; preds = %.3
  %.225 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.226 = bitcast i8* %.225 to %string.580129*
  %.226.repack = bitcast i8* %.225 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.226.repack, align 8
  %.226.repack130 = getelementptr inbounds i8, i8* %.225, i64 8
  %93 = bitcast i8* %.226.repack130 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.94, i64 0, i64 0), i8** %93, align 8
  %.226.repack131 = getelementptr inbounds i8, i8* %.225, i64 16
  %94 = bitcast i8* %.226.repack131 to i64*
  store i64 5, i64* %94, align 8
  %.226.repack132 = getelementptr inbounds i8, i8* %.225, i64 24
  %95 = bitcast i8* %.226.repack132 to i64*
  store i64 5, i64* %95, align 8
  ret %string.580129* %.226

.3.endif.endif.endif.endi...endif.5.endif.endif.if: ; preds = %.3
  %.232 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.233 = bitcast i8* %.232 to %string.580129*
  %.233.repack = bitcast i8* %.232 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.233.repack, align 8
  %.233.repack127 = getelementptr inbounds i8, i8* %.232, i64 8
  %96 = bitcast i8* %.233.repack127 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.95, i64 0, i64 0), i8** %96, align 8
  %.233.repack128 = getelementptr inbounds i8, i8* %.232, i64 16
  %97 = bitcast i8* %.233.repack128 to i64*
  store i64 3, i64* %97, align 8
  %.233.repack129 = getelementptr inbounds i8, i8* %.232, i64 24
  %98 = bitcast i8* %.233.repack129 to i64*
  store i64 3, i64* %98, align 8
  ret %string.580129* %.233

.3.endif.endif.endif.endi...if.6:                 ; preds = %.3
  %.239 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.240 = bitcast i8* %.239 to %string.580129*
  %.240.repack = bitcast i8* %.239 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.240.repack, align 8
  %.240.repack124 = getelementptr inbounds i8, i8* %.239, i64 8
  %99 = bitcast i8* %.240.repack124 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.96, i64 0, i64 0), i8** %99, align 8
  %.240.repack125 = getelementptr inbounds i8, i8* %.239, i64 16
  %100 = bitcast i8* %.240.repack125 to i64*
  store i64 3, i64* %100, align 8
  %.240.repack126 = getelementptr inbounds i8, i8* %.239, i64 24
  %101 = bitcast i8* %.240.repack126 to i64*
  store i64 3, i64* %101, align 8
  ret %string.580129* %.240

.3.endif.endif.endif.endi...endif.6.if:           ; preds = %.3
  %.246 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.247 = bitcast i8* %.246 to %string.580129*
  %.247.repack = bitcast i8* %.246 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.247.repack, align 8
  %.247.repack121 = getelementptr inbounds i8, i8* %.246, i64 8
  %102 = bitcast i8* %.247.repack121 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.97, i64 0, i64 0), i8** %102, align 8
  %.247.repack122 = getelementptr inbounds i8, i8* %.246, i64 16
  %103 = bitcast i8* %.247.repack122 to i64*
  store i64 2, i64* %103, align 8
  %.247.repack123 = getelementptr inbounds i8, i8* %.246, i64 24
  %104 = bitcast i8* %.247.repack123 to i64*
  store i64 2, i64* %104, align 8
  ret %string.580129* %.247

.3.endif.endif.endif.endi...endif.6.endif.if:     ; preds = %.3
  %.253 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.254 = bitcast i8* %.253 to %string.580129*
  %.254.repack = bitcast i8* %.253 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.254.repack, align 8
  %.254.repack118 = getelementptr inbounds i8, i8* %.253, i64 8
  %105 = bitcast i8* %.254.repack118 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.98, i64 0, i64 0), i8** %105, align 8
  %.254.repack119 = getelementptr inbounds i8, i8* %.253, i64 16
  %106 = bitcast i8* %.254.repack119 to i64*
  store i64 2, i64* %106, align 8
  %.254.repack120 = getelementptr inbounds i8, i8* %.253, i64 24
  %107 = bitcast i8* %.254.repack120 to i64*
  store i64 2, i64* %107, align 8
  ret %string.580129* %.254

.3.endif.endif.endif.endi...endif.6.endif.endif.if: ; preds = %.3
  %.260 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.261 = bitcast i8* %.260 to %string.580129*
  %.261.repack = bitcast i8* %.260 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.261.repack, align 8
  %.261.repack115 = getelementptr inbounds i8, i8* %.260, i64 8
  %108 = bitcast i8* %.261.repack115 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.99, i64 0, i64 0), i8** %108, align 8
  %.261.repack116 = getelementptr inbounds i8, i8* %.260, i64 16
  %109 = bitcast i8* %.261.repack116 to i64*
  store i64 3, i64* %109, align 8
  %.261.repack117 = getelementptr inbounds i8, i8* %.260, i64 24
  %110 = bitcast i8* %.261.repack117 to i64*
  store i64 3, i64* %110, align 8
  ret %string.580129* %.261

.3.endif.endif.endif.endi...if.7:                 ; preds = %.3
  %.267 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.268 = bitcast i8* %.267 to %string.580129*
  %.268.repack = bitcast i8* %.267 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.268.repack, align 8
  %.268.repack112 = getelementptr inbounds i8, i8* %.267, i64 8
  %111 = bitcast i8* %.268.repack112 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.100, i64 0, i64 0), i8** %111, align 8
  %.268.repack113 = getelementptr inbounds i8, i8* %.267, i64 16
  %112 = bitcast i8* %.268.repack113 to i64*
  store i64 7, i64* %112, align 8
  %.268.repack114 = getelementptr inbounds i8, i8* %.267, i64 24
  %113 = bitcast i8* %.268.repack114 to i64*
  store i64 7, i64* %113, align 8
  ret %string.580129* %.268

.3.endif.endif.endif.endi...endif.7.if:           ; preds = %.3
  %.274 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.275 = bitcast i8* %.274 to %string.580129*
  %.275.repack = bitcast i8* %.274 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.275.repack, align 8
  %.275.repack109 = getelementptr inbounds i8, i8* %.274, i64 8
  %114 = bitcast i8* %.275.repack109 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.101, i64 0, i64 0), i8** %114, align 8
  %.275.repack110 = getelementptr inbounds i8, i8* %.274, i64 16
  %115 = bitcast i8* %.275.repack110 to i64*
  store i64 11, i64* %115, align 8
  %.275.repack111 = getelementptr inbounds i8, i8* %.274, i64 24
  %116 = bitcast i8* %.275.repack111 to i64*
  store i64 11, i64* %116, align 8
  ret %string.580129* %.275

.3.endif.endif.endif.endi...endif.7.endif.if:     ; preds = %.3
  %.281 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.282 = bitcast i8* %.281 to %string.580129*
  %.282.repack = bitcast i8* %.281 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.282.repack, align 8
  %.282.repack106 = getelementptr inbounds i8, i8* %.281, i64 8
  %117 = bitcast i8* %.282.repack106 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.102, i64 0, i64 0), i8** %117, align 8
  %.282.repack107 = getelementptr inbounds i8, i8* %.281, i64 16
  %118 = bitcast i8* %.282.repack107 to i64*
  store i64 9, i64* %118, align 8
  %.282.repack108 = getelementptr inbounds i8, i8* %.281, i64 24
  %119 = bitcast i8* %.282.repack108 to i64*
  store i64 9, i64* %119, align 8
  ret %string.580129* %.282

.3.endif.endif.endif.endi...endif.7.endif.endif.if: ; preds = %.3
  %.288 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.289 = bitcast i8* %.288 to %string.580129*
  %.289.repack = bitcast i8* %.288 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.289.repack, align 8
  %.289.repack103 = getelementptr inbounds i8, i8* %.288, i64 8
  %120 = bitcast i8* %.289.repack103 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.103, i64 0, i64 0), i8** %120, align 8
  %.289.repack104 = getelementptr inbounds i8, i8* %.288, i64 16
  %121 = bitcast i8* %.289.repack104 to i64*
  store i64 6, i64* %121, align 8
  %.289.repack105 = getelementptr inbounds i8, i8* %.288, i64 24
  %122 = bitcast i8* %.289.repack105 to i64*
  store i64 6, i64* %122, align 8
  ret %string.580129* %.289

.3.endif.endif.endif.endi...if.8:                 ; preds = %.3
  %.295 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.296 = bitcast i8* %.295 to %string.580129*
  %.296.repack = bitcast i8* %.295 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.296.repack, align 8
  %.296.repack100 = getelementptr inbounds i8, i8* %.295, i64 8
  %123 = bitcast i8* %.296.repack100 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.104, i64 0, i64 0), i8** %123, align 8
  %.296.repack101 = getelementptr inbounds i8, i8* %.295, i64 16
  %124 = bitcast i8* %.296.repack101 to i64*
  store i64 5, i64* %124, align 8
  %.296.repack102 = getelementptr inbounds i8, i8* %.295, i64 24
  %125 = bitcast i8* %.296.repack102 to i64*
  store i64 5, i64* %125, align 8
  ret %string.580129* %.296

.3.endif.endif.endif.endi...endif.8.if:           ; preds = %.3
  %.302 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.303 = bitcast i8* %.302 to %string.580129*
  %.303.repack = bitcast i8* %.302 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.303.repack, align 8
  %.303.repack97 = getelementptr inbounds i8, i8* %.302, i64 8
  %126 = bitcast i8* %.303.repack97 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.105, i64 0, i64 0), i8** %126, align 8
  %.303.repack98 = getelementptr inbounds i8, i8* %.302, i64 16
  %127 = bitcast i8* %.303.repack98 to i64*
  store i64 6, i64* %127, align 8
  %.303.repack99 = getelementptr inbounds i8, i8* %.302, i64 24
  %128 = bitcast i8* %.303.repack99 to i64*
  store i64 6, i64* %128, align 8
  ret %string.580129* %.303

.3.endif.endif.endif.endi...endif.8.endif.if:     ; preds = %.3
  %.309 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.310 = bitcast i8* %.309 to %string.580129*
  %.310.repack = bitcast i8* %.309 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.310.repack, align 8
  %.310.repack94 = getelementptr inbounds i8, i8* %.309, i64 8
  %129 = bitcast i8* %.310.repack94 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.106, i64 0, i64 0), i8** %129, align 8
  %.310.repack95 = getelementptr inbounds i8, i8* %.309, i64 16
  %130 = bitcast i8* %.310.repack95 to i64*
  store i64 8, i64* %130, align 8
  %.310.repack96 = getelementptr inbounds i8, i8* %.309, i64 24
  %131 = bitcast i8* %.310.repack96 to i64*
  store i64 8, i64* %131, align 8
  ret %string.580129* %.310

.3.endif.endif.endif.endi...endif.8.endif.endif.if: ; preds = %.3
  %.316 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.317 = bitcast i8* %.316 to %string.580129*
  %.317.repack = bitcast i8* %.316 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.317.repack, align 8
  %.317.repack91 = getelementptr inbounds i8, i8* %.316, i64 8
  %132 = bitcast i8* %.317.repack91 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.107, i64 0, i64 0), i8** %132, align 8
  %.317.repack92 = getelementptr inbounds i8, i8* %.316, i64 16
  %133 = bitcast i8* %.317.repack92 to i64*
  store i64 5, i64* %133, align 8
  %.317.repack93 = getelementptr inbounds i8, i8* %.316, i64 24
  %134 = bitcast i8* %.317.repack93 to i64*
  store i64 5, i64* %134, align 8
  ret %string.580129* %.317

.3.endif.endif.endif.endi...if.9:                 ; preds = %.3
  %.323 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.324 = bitcast i8* %.323 to %string.580129*
  %.324.repack = bitcast i8* %.323 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.324.repack, align 8
  %.324.repack88 = getelementptr inbounds i8, i8* %.323, i64 8
  %135 = bitcast i8* %.324.repack88 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.108, i64 0, i64 0), i8** %135, align 8
  %.324.repack89 = getelementptr inbounds i8, i8* %.323, i64 16
  %136 = bitcast i8* %.324.repack89 to i64*
  store i64 7, i64* %136, align 8
  %.324.repack90 = getelementptr inbounds i8, i8* %.323, i64 24
  %137 = bitcast i8* %.324.repack90 to i64*
  store i64 7, i64* %137, align 8
  ret %string.580129* %.324

.3.endif.endif.endif.endi...endif.9.if:           ; preds = %.3
  %.330 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.331 = bitcast i8* %.330 to %string.580129*
  %.331.repack = bitcast i8* %.330 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.331.repack, align 8
  %.331.repack85 = getelementptr inbounds i8, i8* %.330, i64 8
  %138 = bitcast i8* %.331.repack85 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.109, i64 0, i64 0), i8** %138, align 8
  %.331.repack86 = getelementptr inbounds i8, i8* %.330, i64 16
  %139 = bitcast i8* %.331.repack86 to i64*
  store i64 7, i64* %139, align 8
  %.331.repack87 = getelementptr inbounds i8, i8* %.330, i64 24
  %140 = bitcast i8* %.331.repack87 to i64*
  store i64 7, i64* %140, align 8
  ret %string.580129* %.331

.3.endif.endif.endif.endi...endif.9.endif.if:     ; preds = %.3
  %.337 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.338 = bitcast i8* %.337 to %string.580129*
  %.338.repack = bitcast i8* %.337 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.338.repack, align 8
  %.338.repack82 = getelementptr inbounds i8, i8* %.337, i64 8
  %141 = bitcast i8* %.338.repack82 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.110, i64 0, i64 0), i8** %141, align 8
  %.338.repack83 = getelementptr inbounds i8, i8* %.337, i64 16
  %142 = bitcast i8* %.338.repack83 to i64*
  store i64 5, i64* %142, align 8
  %.338.repack84 = getelementptr inbounds i8, i8* %.337, i64 24
  %143 = bitcast i8* %.338.repack84 to i64*
  store i64 5, i64* %143, align 8
  ret %string.580129* %.338

.3.endif.endif.endif.endi...endif.9.endif.endif.if: ; preds = %.3
  %.344 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.345 = bitcast i8* %.344 to %string.580129*
  %.345.repack = bitcast i8* %.344 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.345.repack, align 8
  %.345.repack79 = getelementptr inbounds i8, i8* %.344, i64 8
  %144 = bitcast i8* %.345.repack79 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.111, i64 0, i64 0), i8** %144, align 8
  %.345.repack80 = getelementptr inbounds i8, i8* %.344, i64 16
  %145 = bitcast i8* %.345.repack80 to i64*
  store i64 5, i64* %145, align 8
  %.345.repack81 = getelementptr inbounds i8, i8* %.344, i64 24
  %146 = bitcast i8* %.345.repack81 to i64*
  store i64 5, i64* %146, align 8
  ret %string.580129* %.345

.3.endif.endif.endif.endi...if.10:                ; preds = %.3
  %.351 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.352 = bitcast i8* %.351 to %string.580129*
  %.352.repack = bitcast i8* %.351 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.352.repack, align 8
  %.352.repack76 = getelementptr inbounds i8, i8* %.351, i64 8
  %147 = bitcast i8* %.352.repack76 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.112, i64 0, i64 0), i8** %147, align 8
  %.352.repack77 = getelementptr inbounds i8, i8* %.351, i64 16
  %148 = bitcast i8* %.352.repack77 to i64*
  store i64 6, i64* %148, align 8
  %.352.repack78 = getelementptr inbounds i8, i8* %.351, i64 24
  %149 = bitcast i8* %.352.repack78 to i64*
  store i64 6, i64* %149, align 8
  ret %string.580129* %.352

.3.endif.endif.endif.endi...endif.10.if:          ; preds = %.3
  %.358 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.359 = bitcast i8* %.358 to %string.580129*
  %.359.repack = bitcast i8* %.358 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.359.repack, align 8
  %.359.repack73 = getelementptr inbounds i8, i8* %.358, i64 8
  %150 = bitcast i8* %.359.repack73 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.113, i64 0, i64 0), i8** %150, align 8
  %.359.repack74 = getelementptr inbounds i8, i8* %.358, i64 16
  %151 = bitcast i8* %.359.repack74 to i64*
  store i64 6, i64* %151, align 8
  %.359.repack75 = getelementptr inbounds i8, i8* %.358, i64 24
  %152 = bitcast i8* %.359.repack75 to i64*
  store i64 6, i64* %152, align 8
  ret %string.580129* %.359

.3.endif.endif.endif.endi...endif.10.endif.if:    ; preds = %.3
  %.365 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.366 = bitcast i8* %.365 to %string.580129*
  %.366.repack = bitcast i8* %.365 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.366.repack, align 8
  %.366.repack70 = getelementptr inbounds i8, i8* %.365, i64 8
  %153 = bitcast i8* %.366.repack70 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.114, i64 0, i64 0), i8** %153, align 8
  %.366.repack71 = getelementptr inbounds i8, i8* %.365, i64 16
  %154 = bitcast i8* %.366.repack71 to i64*
  store i64 6, i64* %154, align 8
  %.366.repack72 = getelementptr inbounds i8, i8* %.365, i64 24
  %155 = bitcast i8* %.366.repack72 to i64*
  store i64 6, i64* %155, align 8
  ret %string.580129* %.366

.3.endif.endif.endif.endi...endif.10.endif.endif.if: ; preds = %.3
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.373 = bitcast i8* %.372 to %string.580129*
  %.373.repack = bitcast i8* %.372 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.373.repack, align 8
  %.373.repack67 = getelementptr inbounds i8, i8* %.372, i64 8
  %156 = bitcast i8* %.373.repack67 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.115, i64 0, i64 0), i8** %156, align 8
  %.373.repack68 = getelementptr inbounds i8, i8* %.372, i64 16
  %157 = bitcast i8* %.373.repack68 to i64*
  store i64 7, i64* %157, align 8
  %.373.repack69 = getelementptr inbounds i8, i8* %.372, i64 24
  %158 = bitcast i8* %.373.repack69 to i64*
  store i64 7, i64* %158, align 8
  ret %string.580129* %.373

.3.endif.endif.endif.endi...if.11:                ; preds = %.3
  %.379 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.380 = bitcast i8* %.379 to %string.580129*
  %.380.repack = bitcast i8* %.379 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.380.repack, align 8
  %.380.repack64 = getelementptr inbounds i8, i8* %.379, i64 8
  %159 = bitcast i8* %.380.repack64 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.116, i64 0, i64 0), i8** %159, align 8
  %.380.repack65 = getelementptr inbounds i8, i8* %.379, i64 16
  %160 = bitcast i8* %.380.repack65 to i64*
  store i64 6, i64* %160, align 8
  %.380.repack66 = getelementptr inbounds i8, i8* %.379, i64 24
  %161 = bitcast i8* %.380.repack66 to i64*
  store i64 6, i64* %161, align 8
  ret %string.580129* %.380

.3.endif.endif.endif.endi...endif.11.if:          ; preds = %.3
  %.386 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.387 = bitcast i8* %.386 to %string.580129*
  %.387.repack = bitcast i8* %.386 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.387.repack, align 8
  %.387.repack61 = getelementptr inbounds i8, i8* %.386, i64 8
  %162 = bitcast i8* %.387.repack61 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.117, i64 0, i64 0), i8** %162, align 8
  %.387.repack62 = getelementptr inbounds i8, i8* %.386, i64 16
  %163 = bitcast i8* %.387.repack62 to i64*
  store i64 6, i64* %163, align 8
  %.387.repack63 = getelementptr inbounds i8, i8* %.386, i64 24
  %164 = bitcast i8* %.387.repack63 to i64*
  store i64 6, i64* %164, align 8
  ret %string.580129* %.387

.3.endif.endif.endif.endi...endif.11.endif.if:    ; preds = %.3
  %.393 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.394 = bitcast i8* %.393 to %string.580129*
  %.394.repack = bitcast i8* %.393 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.394.repack, align 8
  %.394.repack58 = getelementptr inbounds i8, i8* %.393, i64 8
  %165 = bitcast i8* %.394.repack58 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.118, i64 0, i64 0), i8** %165, align 8
  %.394.repack59 = getelementptr inbounds i8, i8* %.393, i64 16
  %166 = bitcast i8* %.394.repack59 to i64*
  store i64 6, i64* %166, align 8
  %.394.repack60 = getelementptr inbounds i8, i8* %.393, i64 24
  %167 = bitcast i8* %.394.repack60 to i64*
  store i64 6, i64* %167, align 8
  ret %string.580129* %.394

.3.endif.endif.endif.endi...endif.11.endif.endif.if: ; preds = %.3
  %.400 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.401 = bitcast i8* %.400 to %string.580129*
  %.401.repack = bitcast i8* %.400 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.401.repack, align 8
  %.401.repack55 = getelementptr inbounds i8, i8* %.400, i64 8
  %168 = bitcast i8* %.401.repack55 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.119, i64 0, i64 0), i8** %168, align 8
  %.401.repack56 = getelementptr inbounds i8, i8* %.400, i64 16
  %169 = bitcast i8* %.401.repack56 to i64*
  store i64 6, i64* %169, align 8
  %.401.repack57 = getelementptr inbounds i8, i8* %.400, i64 24
  %170 = bitcast i8* %.401.repack57 to i64*
  store i64 6, i64* %170, align 8
  ret %string.580129* %.401

.3.endif.endif.endif.endi...if.12:                ; preds = %.3
  %.407 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.408 = bitcast i8* %.407 to %string.580129*
  %.408.repack = bitcast i8* %.407 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.408.repack, align 8
  %.408.repack52 = getelementptr inbounds i8, i8* %.407, i64 8
  %171 = bitcast i8* %.408.repack52 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.120, i64 0, i64 0), i8** %171, align 8
  %.408.repack53 = getelementptr inbounds i8, i8* %.407, i64 16
  %172 = bitcast i8* %.408.repack53 to i64*
  store i64 8, i64* %172, align 8
  %.408.repack54 = getelementptr inbounds i8, i8* %.407, i64 24
  %173 = bitcast i8* %.408.repack54 to i64*
  store i64 8, i64* %173, align 8
  ret %string.580129* %.408

.3.endif.endif.endif.endi...endif.12.if:          ; preds = %.3
  %.414 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.415 = bitcast i8* %.414 to %string.580129*
  %.415.repack = bitcast i8* %.414 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.415.repack, align 8
  %.415.repack49 = getelementptr inbounds i8, i8* %.414, i64 8
  %174 = bitcast i8* %.415.repack49 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.121, i64 0, i64 0), i8** %174, align 8
  %.415.repack50 = getelementptr inbounds i8, i8* %.414, i64 16
  %175 = bitcast i8* %.415.repack50 to i64*
  store i64 7, i64* %175, align 8
  %.415.repack51 = getelementptr inbounds i8, i8* %.414, i64 24
  %176 = bitcast i8* %.415.repack51 to i64*
  store i64 7, i64* %176, align 8
  ret %string.580129* %.415

.3.endif.endif.endif.endi...endif.12.endif.if:    ; preds = %.3
  %.421 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.422 = bitcast i8* %.421 to %string.580129*
  %.422.repack = bitcast i8* %.421 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.422.repack, align 8
  %.422.repack46 = getelementptr inbounds i8, i8* %.421, i64 8
  %177 = bitcast i8* %.422.repack46 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.122, i64 0, i64 0), i8** %177, align 8
  %.422.repack47 = getelementptr inbounds i8, i8* %.421, i64 16
  %178 = bitcast i8* %.422.repack47 to i64*
  store i64 6, i64* %178, align 8
  %.422.repack48 = getelementptr inbounds i8, i8* %.421, i64 24
  %179 = bitcast i8* %.422.repack48 to i64*
  store i64 6, i64* %179, align 8
  ret %string.580129* %.422

.3.endif.endif.endif.endi...endif.12.endif.endif.if: ; preds = %.3
  %.428 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.429 = bitcast i8* %.428 to %string.580129*
  %.429.repack = bitcast i8* %.428 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.429.repack, align 8
  %.429.repack43 = getelementptr inbounds i8, i8* %.428, i64 8
  %180 = bitcast i8* %.429.repack43 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.123, i64 0, i64 0), i8** %180, align 8
  %.429.repack44 = getelementptr inbounds i8, i8* %.428, i64 16
  %181 = bitcast i8* %.429.repack44 to i64*
  store i64 8, i64* %181, align 8
  %.429.repack45 = getelementptr inbounds i8, i8* %.428, i64 24
  %182 = bitcast i8* %.429.repack45 to i64*
  store i64 8, i64* %182, align 8
  ret %string.580129* %.429

.3.endif.endif.endif.endi...if.13:                ; preds = %.3
  %.435 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.436 = bitcast i8* %.435 to %string.580129*
  %.436.repack = bitcast i8* %.435 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.436.repack, align 8
  %.436.repack40 = getelementptr inbounds i8, i8* %.435, i64 8
  %183 = bitcast i8* %.436.repack40 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.124, i64 0, i64 0), i8** %183, align 8
  %.436.repack41 = getelementptr inbounds i8, i8* %.435, i64 16
  %184 = bitcast i8* %.436.repack41 to i64*
  store i64 6, i64* %184, align 8
  %.436.repack42 = getelementptr inbounds i8, i8* %.435, i64 24
  %185 = bitcast i8* %.436.repack42 to i64*
  store i64 6, i64* %185, align 8
  ret %string.580129* %.436

.3.endif.endif.endif.endi...endif.13.if:          ; preds = %.3
  %.442 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.443 = bitcast i8* %.442 to %string.580129*
  %.443.repack = bitcast i8* %.442 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.443.repack, align 8
  %.443.repack37 = getelementptr inbounds i8, i8* %.442, i64 8
  %186 = bitcast i8* %.443.repack37 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.125, i64 0, i64 0), i8** %186, align 8
  %.443.repack38 = getelementptr inbounds i8, i8* %.442, i64 16
  %187 = bitcast i8* %.443.repack38 to i64*
  store i64 8, i64* %187, align 8
  %.443.repack39 = getelementptr inbounds i8, i8* %.442, i64 24
  %188 = bitcast i8* %.443.repack39 to i64*
  store i64 8, i64* %188, align 8
  ret %string.580129* %.443

.3.endif.endif.endif.endi...endif.13.endif.if:    ; preds = %.3
  %.449 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.450 = bitcast i8* %.449 to %string.580129*
  %.450.repack = bitcast i8* %.449 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.450.repack, align 8
  %.450.repack34 = getelementptr inbounds i8, i8* %.449, i64 8
  %189 = bitcast i8* %.450.repack34 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.126, i64 0, i64 0), i8** %189, align 8
  %.450.repack35 = getelementptr inbounds i8, i8* %.449, i64 16
  %190 = bitcast i8* %.450.repack35 to i64*
  store i64 11, i64* %190, align 8
  %.450.repack36 = getelementptr inbounds i8, i8* %.449, i64 24
  %191 = bitcast i8* %.450.repack36 to i64*
  store i64 11, i64* %191, align 8
  ret %string.580129* %.450

.3.endif.endif.endif.endi...endif.13.endif.endif.if: ; preds = %.3
  %.456 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.457 = bitcast i8* %.456 to %string.580129*
  %.457.repack = bitcast i8* %.456 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.457.repack, align 8
  %.457.repack31 = getelementptr inbounds i8, i8* %.456, i64 8
  %192 = bitcast i8* %.457.repack31 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.127, i64 0, i64 0), i8** %192, align 8
  %.457.repack32 = getelementptr inbounds i8, i8* %.456, i64 16
  %193 = bitcast i8* %.457.repack32 to i64*
  store i64 9, i64* %193, align 8
  %.457.repack33 = getelementptr inbounds i8, i8* %.456, i64 24
  %194 = bitcast i8* %.457.repack33 to i64*
  store i64 9, i64* %194, align 8
  ret %string.580129* %.457

.3.endif.endif.endif.endi...if.14:                ; preds = %.3
  %.463 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.464 = bitcast i8* %.463 to %string.580129*
  %.464.repack = bitcast i8* %.463 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.464.repack, align 8
  %.464.repack28 = getelementptr inbounds i8, i8* %.463, i64 8
  %195 = bitcast i8* %.464.repack28 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.128, i64 0, i64 0), i8** %195, align 8
  %.464.repack29 = getelementptr inbounds i8, i8* %.463, i64 16
  %196 = bitcast i8* %.464.repack29 to i64*
  store i64 9, i64* %196, align 8
  %.464.repack30 = getelementptr inbounds i8, i8* %.463, i64 24
  %197 = bitcast i8* %.464.repack30 to i64*
  store i64 9, i64* %197, align 8
  ret %string.580129* %.464

.3.endif.endif.endif.endi...endif.14.if:          ; preds = %.3
  %.470 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.471 = bitcast i8* %.470 to %string.580129*
  %.471.repack = bitcast i8* %.470 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.471.repack, align 8
  %.471.repack25 = getelementptr inbounds i8, i8* %.470, i64 8
  %198 = bitcast i8* %.471.repack25 to i8**
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.129, i64 0, i64 0), i8** %198, align 8
  %.471.repack26 = getelementptr inbounds i8, i8* %.470, i64 16
  %199 = bitcast i8* %.471.repack26 to i64*
  store i64 10, i64* %199, align 8
  %.471.repack27 = getelementptr inbounds i8, i8* %.470, i64 24
  %200 = bitcast i8* %.471.repack27 to i64*
  store i64 10, i64* %200, align 8
  ret %string.580129* %.471

.3.endif.endif.endif.endi...endif.14.endif.if:    ; preds = %.3
  %.477 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.478 = bitcast i8* %.477 to %string.580129*
  %.478.repack = bitcast i8* %.477 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.478.repack, align 8
  %.478.repack22 = getelementptr inbounds i8, i8* %.477, i64 8
  %201 = bitcast i8* %.478.repack22 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.130, i64 0, i64 0), i8** %201, align 8
  %.478.repack23 = getelementptr inbounds i8, i8* %.477, i64 16
  %202 = bitcast i8* %.478.repack23 to i64*
  store i64 9, i64* %202, align 8
  %.478.repack24 = getelementptr inbounds i8, i8* %.477, i64 24
  %203 = bitcast i8* %.478.repack24 to i64*
  store i64 9, i64* %203, align 8
  ret %string.580129* %.478

.3.endif.endif.endif.endi...endif.14.endif.endif.if: ; preds = %.3
  %.484 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.485 = bitcast i8* %.484 to %string.580129*
  %.485.repack = bitcast i8* %.484 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.485.repack, align 8
  %.485.repack19 = getelementptr inbounds i8, i8* %.484, i64 8
  %204 = bitcast i8* %.485.repack19 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.131, i64 0, i64 0), i8** %204, align 8
  %.485.repack20 = getelementptr inbounds i8, i8* %.484, i64 16
  %205 = bitcast i8* %.485.repack20 to i64*
  store i64 12, i64* %205, align 8
  %.485.repack21 = getelementptr inbounds i8, i8* %.484, i64 24
  %206 = bitcast i8* %.485.repack21 to i64*
  store i64 12, i64* %206, align 8
  ret %string.580129* %.485

.3.endif.endif.endif.endi...if.15:                ; preds = %.3
  %.491 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.492 = bitcast i8* %.491 to %string.580129*
  %.492.repack = bitcast i8* %.491 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.492.repack, align 8
  %.492.repack16 = getelementptr inbounds i8, i8* %.491, i64 8
  %207 = bitcast i8* %.492.repack16 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.132, i64 0, i64 0), i8** %207, align 8
  %.492.repack17 = getelementptr inbounds i8, i8* %.491, i64 16
  %208 = bitcast i8* %.492.repack17 to i64*
  store i64 5, i64* %208, align 8
  %.492.repack18 = getelementptr inbounds i8, i8* %.491, i64 24
  %209 = bitcast i8* %.492.repack18 to i64*
  store i64 5, i64* %209, align 8
  ret %string.580129* %.492

.3.endif.endif.endif.endi...endif.15.if:          ; preds = %.3
  %.498 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.499 = bitcast i8* %.498 to %string.580129*
  %.499.repack = bitcast i8* %.498 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.499.repack, align 8
  %.499.repack13 = getelementptr inbounds i8, i8* %.498, i64 8
  %210 = bitcast i8* %.499.repack13 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.133, i64 0, i64 0), i8** %210, align 8
  %.499.repack14 = getelementptr inbounds i8, i8* %.498, i64 16
  %211 = bitcast i8* %.499.repack14 to i64*
  store i64 8, i64* %211, align 8
  %.499.repack15 = getelementptr inbounds i8, i8* %.498, i64 24
  %212 = bitcast i8* %.499.repack15 to i64*
  store i64 8, i64* %212, align 8
  ret %string.580129* %.499

.3.endif.endif.endif.endi...endif.15.endif.if:    ; preds = %.3
  %.505 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.506 = bitcast i8* %.505 to %string.580129*
  %.506.repack = bitcast i8* %.505 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.506.repack, align 8
  %.506.repack10 = getelementptr inbounds i8, i8* %.505, i64 8
  %213 = bitcast i8* %.506.repack10 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.134, i64 0, i64 0), i8** %213, align 8
  %.506.repack11 = getelementptr inbounds i8, i8* %.505, i64 16
  %214 = bitcast i8* %.506.repack11 to i64*
  store i64 7, i64* %214, align 8
  %.506.repack12 = getelementptr inbounds i8, i8* %.505, i64 24
  %215 = bitcast i8* %.506.repack12 to i64*
  store i64 7, i64* %215, align 8
  ret %string.580129* %.506

.3.endif.endif.endif.endi...endif.15.endif.endif.if: ; preds = %.3
  %.512 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.513 = bitcast i8* %.512 to %string.580129*
  %.513.repack = bitcast i8* %.512 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.513.repack, align 8
  %.513.repack7 = getelementptr inbounds i8, i8* %.512, i64 8
  %216 = bitcast i8* %.513.repack7 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.135, i64 0, i64 0), i8** %216, align 8
  %.513.repack8 = getelementptr inbounds i8, i8* %.512, i64 16
  %217 = bitcast i8* %.513.repack8 to i64*
  store i64 6, i64* %217, align 8
  %.513.repack9 = getelementptr inbounds i8, i8* %.512, i64 24
  %218 = bitcast i8* %.513.repack9 to i64*
  store i64 6, i64* %218, align 8
  ret %string.580129* %.513

.3.endif.endif.endif.endi...if.16:                ; preds = %.3
  %.519 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.520 = bitcast i8* %.519 to %string.580129*
  %.520.repack = bitcast i8* %.519 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.520.repack, align 8
  %.520.repack4 = getelementptr inbounds i8, i8* %.519, i64 8
  %219 = bitcast i8* %.520.repack4 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.136, i64 0, i64 0), i8** %219, align 8
  %.520.repack5 = getelementptr inbounds i8, i8* %.519, i64 16
  %220 = bitcast i8* %.520.repack5 to i64*
  store i64 5, i64* %220, align 8
  %.520.repack6 = getelementptr inbounds i8, i8* %.519, i64 24
  %221 = bitcast i8* %.520.repack6 to i64*
  store i64 5, i64* %221, align 8
  ret %string.580129* %.520

.3.endif.endif.endif.endi...endif.16.if:          ; preds = %.3
  %.526 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.527 = bitcast i8* %.526 to %string.580129*
  %.527.repack = bitcast i8* %.526 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.527.repack, align 8
  %.527.repack1 = getelementptr inbounds i8, i8* %.526, i64 8
  %222 = bitcast i8* %.527.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.137, i64 0, i64 0), i8** %222, align 8
  %.527.repack2 = getelementptr inbounds i8, i8* %.526, i64 16
  %223 = bitcast i8* %.527.repack2 to i64*
  store i64 6, i64* %223, align 8
  %.527.repack3 = getelementptr inbounds i8, i8* %.526, i64 24
  %224 = bitcast i8* %.527.repack3 to i64*
  store i64 6, i64* %224, align 8
  ret %string.580129* %.527

.3.endif.endif.endif.endi...endif.16.endif:       ; preds = %.3
  %.530 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.531 = bitcast i8* %.530 to %string.580129*
  %.532 = bitcast i8* %.530 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.532, align 8
  %.534 = getelementptr inbounds i8, i8* %.530, i64 8
  %225 = bitcast i8* %.534 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %225, align 8
  %.536 = getelementptr inbounds i8, i8* %.530, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.536, i8 0, i64 16, i1 false)
  ret %string.580129* %.531
}

define %string.580129* @token_value(%Token.580141* nocapture readonly %.1, %string.580129* %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  %.9 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.9, i64 0, i32 6
  %.11 = load %string.580129* (%string.580129*, i64, i64)*, %string.580129* (%string.580129*, i64, i64)** %.10, align 8
  %.13 = getelementptr inbounds %Token.580141, %Token.580141* %.1, i64 0, i32 2
  %.14 = load %FloRange.580135*, %FloRange.580135** %.13, align 8
  %.15 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.20 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.14, i64 0, i32 2
  %.21 = load i64, i64* %.20, align 8
  %.27 = sub i64 %.21, %.16
  %.28 = call %string.580129* %.11(%string.580129* %.2, i64 %.16, i64 %.27)
  ret %string.580129* %.28
}

define void @print_tokens(%"Array<Token>.580152"* %.1, %string.580129* %.2) local_unnamed_addr {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.8 = bitcast i8* %.7 to %string.580129*
  %.8.repack = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.8.repack, align 8
  %.8.repack1 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.8.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.138, i64 0, i64 0), i8** %0, align 8
  %.8.repack2 = getelementptr inbounds i8, i8* %.7, i64 16
  %1 = bitcast i8* %.8.repack2 to i64*
  store i64 1, i64* %1, align 8
  %.8.repack3 = getelementptr inbounds i8, i8* %.7, i64 24
  %2 = bitcast i8* %.8.repack3 to i64*
  store i64 1, i64* %2, align 8
  %.13 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.14 = call i8* %.13(%string.580129* %.8)
  %.15 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.21 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 2
  %.2232 = load i64, i64* %.21, align 8
  %.2333 = icmp sgt i64 %.2232, 0
  br i1 %.2333, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge34 = phi i64 [ 0, %for.body.lr.ph ], [ %.161, %for.body.endif ]
  %.28 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.28, i64 0, i32 5
  %.30 = load %Token.580141* (%"Array<Token>.580152"*, i64)*, %Token.580141* (%"Array<Token>.580152"*, i64)** %.29, align 8
  %.31 = call %Token.580141* %.30(%"Array<Token>.580152"* %.1, i64 %storemerge34)
  %.33 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.580129*
  %.34.repack = bitcast i8* %.33 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.34.repack, align 8
  %.34.repack7 = getelementptr inbounds i8, i8* %.33, i64 8
  %3 = bitcast i8* %.34.repack7 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.139, i64 0, i64 0), i8** %3, align 8
  %.34.repack8 = getelementptr inbounds i8, i8* %.33, i64 16
  %4 = bitcast i8* %.34.repack8 to i64*
  store i64 2, i64* %4, align 8
  %.34.repack9 = getelementptr inbounds i8, i8* %.33, i64 24
  %5 = bitcast i8* %.34.repack9 to i64*
  store i64 2, i64* %5, align 8
  %.39 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.40 = call i8* %.39(%string.580129* %.34)
  %.41 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.42 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.42 to %string.580129*
  %.43.repack = bitcast i8* %.42 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.43.repack, align 8
  %.43.repack10 = getelementptr inbounds i8, i8* %.42, i64 8
  %6 = bitcast i8* %.43.repack10 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.140, i64 0, i64 0), i8** %6, align 8
  %.43.repack11 = getelementptr inbounds i8, i8* %.42, i64 16
  %7 = bitcast i8* %.43.repack11 to i64*
  store i64 7, i64* %7, align 8
  %.43.repack12 = getelementptr inbounds i8, i8* %.42, i64 24
  %8 = bitcast i8* %.43.repack12 to i64*
  store i64 7, i64* %8, align 8
  %.46 = getelementptr inbounds %Token.580141, %Token.580141* %.31, i64 0, i32 1
  %.47 = load i64, i64* %.46, align 8
  %.48 = call %string.580129* @token_str(i64 %.47)
  %.49 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.50 = bitcast i8* %.49 to %string.580129*
  %.50.repack = bitcast i8* %.49 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.50.repack, align 8
  %.50.repack13 = getelementptr inbounds i8, i8* %.49, i64 8
  %9 = bitcast i8* %.50.repack13 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.141, i64 0, i64 0), i8** %9, align 8
  %.50.repack14 = getelementptr inbounds i8, i8* %.49, i64 16
  %10 = bitcast i8* %.50.repack14 to i64*
  store i64 1, i64* %10, align 8
  %.50.repack15 = getelementptr inbounds i8, i8* %.49, i64 24
  %11 = bitcast i8* %.50.repack15 to i64*
  store i64 1, i64* %11, align 8
  %.52 = getelementptr inbounds %string.580129, %string.580129* %.48, i64 0, i32 0
  %.53 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.52, align 8
  %.54 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.53, i64 0, i32 0
  %.55 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.54, align 8
  %.56 = call %string.580129* %.55(%string.580129* %.48, %string.580129* %.50)
  %.58 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.43.repack, align 8
  %.59 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.58, i64 0, i32 10
  %.60 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.59, align 8
  %.61 = call i8* %.60(%string.580129* %.43)
  %.62 = getelementptr inbounds %string.580129, %string.580129* %.56, i64 0, i32 0
  %.63 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.62, align 8
  %.64 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.63, i64 0, i32 10
  %.65 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.64, align 8
  %.66 = call i8* %.65(%string.580129* %.56)
  %.67 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str.142, i64 0, i64 0), i8* %.61, i8* %.66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.68 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.69 = bitcast i8* %.68 to %string.580129*
  %.69.repack = bitcast i8* %.68 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.69.repack, align 8
  %.69.repack16 = getelementptr inbounds i8, i8* %.68, i64 8
  %12 = bitcast i8* %.69.repack16 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.143, i64 0, i64 0), i8** %12, align 8
  %.69.repack17 = getelementptr inbounds i8, i8* %.68, i64 16
  %13 = bitcast i8* %.69.repack17 to i64*
  store i64 8, i64* %13, align 8
  %.69.repack18 = getelementptr inbounds i8, i8* %.68, i64 24
  %14 = bitcast i8* %.69.repack18 to i64*
  store i64 8, i64* %14, align 8
  %.72 = getelementptr inbounds %Token.580141, %Token.580141* %.31, i64 0, i32 2
  %.73 = load %FloRange.580135*, %FloRange.580135** %.72, align 8
  %.74 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.73, i64 0, i32 1
  %.75 = load i64, i64* %.74, align 8
  %.79 = getelementptr inbounds %FloRange.580135, %FloRange.580135* %.73, i64 0, i32 2
  %.80 = load i64, i64* %.79, align 8
  %.82 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.144, i64 0, i64 0), i64 %.75, i64 %.80)
  %.84 = call i8* @malloc(i64 %.82)
  %.85 = call i64 (i8*, i8*, ...) @sprintf(i8* %.84, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.144, i64 0, i64 0), i64 %.75, i64 %.80)
  %.86 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.87 = bitcast i8* %.86 to %string.580129*
  %.88 = bitcast i8* %.86 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.88, align 8
  %.90 = getelementptr inbounds i8, i8* %.86, i64 8
  %15 = bitcast i8* %.90 to i8**
  store i8* %.84, i8** %15, align 8
  %.92 = getelementptr inbounds i8, i8* %.86, i64 16
  %16 = bitcast i8* %.92 to i64*
  store i64 %.82, i64* %16, align 8
  %.94 = getelementptr inbounds i8, i8* %.86, i64 24
  %17 = bitcast i8* %.94 to i64*
  store i64 %.82, i64* %17, align 8
  %.97 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.69.repack, align 8
  %.98 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.97, i64 0, i32 10
  %.99 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.98, align 8
  %.100 = call i8* %.99(%string.580129* %.69)
  %.102 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.88, align 8
  %.103 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.102, i64 0, i32 10
  %.104 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.103, align 8
  %.105 = call i8* %.104(%string.580129* %.87)
  %.106 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str.142, i64 0, i64 0), i8* %.100, i8* %.105, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.109 = load i64, i64* %.46, align 8
  %.110.not = icmp eq i64 %.109, 30
  %.130 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.131 = bitcast i8* %.130 to %string.580129*
  %.131.repack = bitcast i8* %.130 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.131.repack, align 8
  %.131.repack19 = getelementptr inbounds i8, i8* %.130, i64 8
  %18 = bitcast i8* %.131.repack19 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.145, i64 0, i64 0), i8** %18, align 8
  %.131.repack20 = getelementptr inbounds i8, i8* %.130, i64 16
  %19 = bitcast i8* %.131.repack20 to i64*
  store i64 8, i64* %19, align 8
  %.131.repack21 = getelementptr inbounds i8, i8* %.130, i64 24
  %20 = bitcast i8* %.131.repack21 to i64*
  store i64 8, i64* %20, align 8
  br i1 %.110.not, label %for.body.else, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.4
  %.164 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.165 = bitcast i8* %.164 to %string.580129*
  %.165.repack = bitcast i8* %.164 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.165.repack, align 8
  %.165.repack4 = getelementptr inbounds i8, i8* %.164, i64 8
  %21 = bitcast i8* %.165.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.148, i64 0, i64 0), i8** %21, align 8
  %.165.repack5 = getelementptr inbounds i8, i8* %.164, i64 16
  %22 = bitcast i8* %.165.repack5 to i64*
  store i64 1, i64* %22, align 8
  %.165.repack6 = getelementptr inbounds i8, i8* %.164, i64 24
  %23 = bitcast i8* %.165.repack6 to i64*
  store i64 1, i64* %23, align 8
  %.170 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.171 = call i8* %.170(%string.580129* %.165)
  %.172 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.171, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  ret void

for.body.if:                                      ; preds = %for.body
  %.117 = call %string.580129* @token_value(%Token.580141* %.31, %string.580129* %.2)
  %.119 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.131.repack, align 8
  %.120 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.119, i64 0, i32 10
  %.121 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.120, align 8
  %.122 = call i8* %.121(%string.580129* %.131)
  %.123 = getelementptr inbounds %string.580129, %string.580129* %.117, i64 0, i32 0
  %.124 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.123, align 8
  %.125 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.124, i64 0, i32 10
  %.126 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.125, align 8
  %.127 = call i8* %.126(%string.580129* %.117)
  %.128 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str.142, i64 0, i64 0), i8* %.122, i8* %.127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %for.body.endif

for.body.else:                                    ; preds = %for.body
  %.133 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.134 = bitcast i8* %.133 to %string.580129*
  %.134.repack = bitcast i8* %.133 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.134.repack, align 8
  %.134.repack22 = getelementptr inbounds i8, i8* %.133, i64 8
  %24 = bitcast i8* %.134.repack22 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.146, i64 0, i64 0), i8** %24, align 8
  %.134.repack23 = getelementptr inbounds i8, i8* %.133, i64 16
  %25 = bitcast i8* %.134.repack23 to i64*
  store i64 2, i64* %25, align 8
  %.134.repack24 = getelementptr inbounds i8, i8* %.133, i64 24
  %26 = bitcast i8* %.134.repack24 to i64*
  store i64 2, i64* %26, align 8
  %.139 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.140 = call i8* %.139(%string.580129* %.131)
  %.142 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.134.repack, align 8
  %.143 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.142, i64 0, i32 10
  %.144 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.143, align 8
  %.145 = call i8* %.144(%string.580129* %.134)
  %.146 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str.142, i64 0, i64 0), i8* %.140, i8* %.145, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.else, %for.body.if
  %.148 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.149 = bitcast i8* %.148 to %string.580129*
  %.149.repack = bitcast i8* %.148 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.149.repack, align 8
  %.149.repack25 = getelementptr inbounds i8, i8* %.148, i64 8
  %27 = bitcast i8* %.149.repack25 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.147, i64 0, i64 0), i8** %27, align 8
  %.149.repack26 = getelementptr inbounds i8, i8* %.148, i64 16
  %28 = bitcast i8* %.149.repack26 to i64*
  store i64 3, i64* %28, align 8
  %.149.repack27 = getelementptr inbounds i8, i8* %.148, i64 24
  %29 = bitcast i8* %.149.repack27 to i64*
  store i64 3, i64* %29, align 8
  %.154 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.155 = call i8* %.154(%string.580129* %.149)
  %.156 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.155, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.161 = add nuw nsw i64 %storemerge34, 1
  %.22 = load i64, i64* %.21, align 8
  %.23 = icmp slt i64 %.161, %.22
  br i1 %.23, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Node_constructor(%Node.580159* nocapture %.1, %FloRange.580135* %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %Node.580159, %Node.580159* %.1, i64 0, i32 1
  store %FloRange.580135* %.2, %FloRange.580135** %.9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @TypeNode_constructor(%TypeNode.580161* nocapture %.1, i64 %.2, %FloRange.580135* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %TypeNode.580161* %.1 to %Node.580159*
  call void @Node_constructor(%Node.580159* %.10, %FloRange.580135* %.3)
  %.15 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %.1, i64 0, i32 2
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<TypeNode>_constructor"(%"Array<TypeNode>.580165"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 1
  %0 = bitcast %TypeNode.580161*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<TypeNode>_resize"(%"Array<TypeNode>.580165"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 1
  %0 = bitcast %TypeNode.580161*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<TypeNode>_swap"(%"Array<TypeNode>.580165"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 1
  %.12 = load %TypeNode.580161**, %TypeNode.580161*** %.11, align 8
  %.13 = getelementptr inbounds %TypeNode.580161*, %TypeNode.580161** %.12, i64 %.2
  %0 = bitcast %TypeNode.580161** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %TypeNode.580161*, %TypeNode.580161** %.12, i64 %.3
  %1 = bitcast %TypeNode.580161** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %TypeNode.580161**, %TypeNode.580161*** %.11, align 8
  %.33 = getelementptr inbounds %TypeNode.580161*, %TypeNode.580161** %.31, i64 %.3
  %2 = bitcast %TypeNode.580161** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<TypeNode>___sl__"(%"Array<TypeNode>.580165"* %.1, %TypeNode.580161* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 0
  %.17 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<TypeNode>.580165"*)*, void (%"Array<TypeNode>.580165"*)** %.18, align 8
  call void %.19(%"Array<TypeNode>.580165"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 1
  %.31 = load %TypeNode.580161**, %TypeNode.580161*** %.30, align 8
  %.33 = getelementptr inbounds %TypeNode.580161*, %TypeNode.580161** %.31, i64 %.24
  store %TypeNode.580161* %.2, %TypeNode.580161** %.33, align 8
  ret void
}

define void @"Array<TypeNode>___setitem__"(%"Array<TypeNode>.580165"* nocapture readonly %.1, i64 %.2, %TypeNode.580161* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 1
  %.30 = load %TypeNode.580161**, %TypeNode.580161*** %.29, align 8
  %.32 = getelementptr inbounds %TypeNode.580161*, %TypeNode.580161** %.30, i64 %.2
  store %TypeNode.580161* %.3, %TypeNode.580161** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<TypeNode>_append"(%"Array<TypeNode>.580165"* %.1, %TypeNode.580161* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 0
  %.9 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)*, void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)** %.10, align 8
  call void %.11(%"Array<TypeNode>.580165"* %.1, %TypeNode.580161* %.2)
  ret void
}

define %TypeNode.580161* @"Array<TypeNode>___getitem__"(%"Array<TypeNode>.580165"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 1
  %.28 = load %TypeNode.580161**, %TypeNode.580161*** %.27, align 8
  %.29 = getelementptr inbounds %TypeNode.580161*, %TypeNode.580161** %.28, i64 %.2
  %.30 = load %TypeNode.580161*, %TypeNode.580161** %.29, align 8
  ret %TypeNode.580161* %.30

.4.endif:                                         ; preds = %.4
  ret %TypeNode.580161* null
}

define i1 @"Array<TypeNode>___eq__"(%"Array<TypeNode>.580165"* %.1, %"Array<TypeNode>.580165"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.28, i64 0, i32 5
  %.30 = load %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)*, %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)** %.29, align 8
  %.31 = call %TypeNode.580161* %.30(%"Array<TypeNode>.580165"* %.1, i64 %storemerge3)
  %.35 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.35, i64 0, i32 5
  %.37 = load %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)*, %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)** %.36, align 8
  %.38 = call %TypeNode.580161* %.37(%"Array<TypeNode>.580165"* %.2, i64 %storemerge3)
  %0 = ptrtoint %TypeNode.580161* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %TypeNode.580161* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<TypeNode>___in__"(%"Array<TypeNode>.580165"* %.1, %TypeNode.580161* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %TypeNode.580161* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.19, i64 0, i32 5
  %.21 = load %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)*, %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)** %.20, align 8
  %.22 = call %TypeNode.580161* %.21(%"Array<TypeNode>.580165"* %.1, i64 %storemerge4)
  %1 = ptrtoint %TypeNode.580161* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<TypeNode>_find"(%"Array<TypeNode>.580165"* nocapture readonly %.1, %TypeNode.580161* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 1
  %.19 = load %TypeNode.580161**, %TypeNode.580161*** %.18, align 8
  %0 = ptrtoint %TypeNode.580161* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %TypeNode.580161*, %TypeNode.580161** %.19, i64 %storemerge5
  %1 = bitcast %TypeNode.580161** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<TypeNode>_join"(%"Array<TypeNode>.580165"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.149, i64 0, i64 0), i64 9)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.149, i64 0, i64 0), i64 9)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<TypeNode>___as_string__"(%"Array<TypeNode>.580165"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.1, i64 0, i32 0
  %.7 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<TypeNode>.580165"*, %string.580129*)*, %string.580129* (%"Array<TypeNode>.580165"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<TypeNode>.580165"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @RecordTypeNode_constructor(%RecordTypeNode.580163* nocapture %.1, %IdentifierToken.580155* %.2, %FloRange.580135* %.3) local_unnamed_addr #3 {
.5:
  %.10 = bitcast %RecordTypeNode.580163* %.1 to %TypeNode.580161*
  call void @TypeNode_constructor(%TypeNode.580161* %.10, i64 18, %FloRange.580135* %.3)
  %.15 = getelementptr inbounds %RecordTypeNode.580163, %RecordTypeNode.580163* %.1, i64 0, i32 3
  store %IdentifierToken.580155* %.2, %IdentifierToken.580155** %.15, align 8
  %.19 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.21 to %"Array<TypeNode>_vtable_ty.580166"**
  store %"Array<TypeNode>_vtable_ty.580166"* @"Array<TypeNode>_vtable_data", %"Array<TypeNode>_vtable_ty.580166"** %.23, align 8
  %.25 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.25 to i8**
  store i8* %.19, i8** %0, align 8
  %.27 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.27 to i64*
  store i64 0, i64* %1, align 8
  %.29 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.29 to i64*
  store i64 8, i64* %2, align 8
  %.31 = getelementptr inbounds %RecordTypeNode.580163, %RecordTypeNode.580163* %.1, i64 0, i32 4
  %3 = bitcast %"Array<TypeNode>.580165"** %.31 to i8**
  store i8* %.21, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @FunctionTypeNode_constructor(%FunctionTypeNode.580167* nocapture %.1, %FloRange.580135* %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %FunctionTypeNode.580167* %.1 to %TypeNode.580161*
  call void @TypeNode_constructor(%TypeNode.580161* %.8, i64 17, %FloRange.580135* %.2)
  %.13 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<TypeNode>_vtable_ty.580166"**
  store %"Array<TypeNode>_vtable_ty.580166"* @"Array<TypeNode>_vtable_data", %"Array<TypeNode>_vtable_ty.580166"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %FunctionTypeNode.580167, %FunctionTypeNode.580167* %.1, i64 0, i32 3
  %3 = bitcast %"Array<TypeNode>.580165"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @PointerTypeNode_constructor(%PointerTypeNode.580169* nocapture %.1, %TypeNode.580161* %.2, %FloRange.580135* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %PointerTypeNode.580169* %.1 to %TypeNode.580161*
  call void @TypeNode_constructor(%TypeNode.580161* %.10, i64 15, %FloRange.580135* %.3)
  %.15 = getelementptr inbounds %PointerTypeNode.580169, %PointerTypeNode.580169* %.1, i64 0, i32 3
  store %TypeNode.580161* %.2, %TypeNode.580161** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @StatementNode_constructor(%StatementNode.580171* nocapture %.1, i64 %.2, %FloRange.580135* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %StatementNode.580171* %.1 to %Node.580159*
  call void @Node_constructor(%Node.580159* %.10, %FloRange.580135* %.3)
  %.15 = getelementptr inbounds %StatementNode.580171, %StatementNode.580171* %.1, i64 0, i32 2
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<StatementNode>_constructor"(%"Array<StatementNode>.580175"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 1
  %0 = bitcast %StatementNode.580171*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<StatementNode>_resize"(%"Array<StatementNode>.580175"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 1
  %0 = bitcast %StatementNode.580171*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<StatementNode>_swap"(%"Array<StatementNode>.580175"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 1
  %.12 = load %StatementNode.580171**, %StatementNode.580171*** %.11, align 8
  %.13 = getelementptr inbounds %StatementNode.580171*, %StatementNode.580171** %.12, i64 %.2
  %0 = bitcast %StatementNode.580171** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %StatementNode.580171*, %StatementNode.580171** %.12, i64 %.3
  %1 = bitcast %StatementNode.580171** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %StatementNode.580171**, %StatementNode.580171*** %.11, align 8
  %.33 = getelementptr inbounds %StatementNode.580171*, %StatementNode.580171** %.31, i64 %.3
  %2 = bitcast %StatementNode.580171** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<StatementNode>___sl__"(%"Array<StatementNode>.580175"* %.1, %StatementNode.580171* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 0
  %.17 = load %"Array<StatementNode>_vtable_ty.580176"*, %"Array<StatementNode>_vtable_ty.580176"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.580176", %"Array<StatementNode>_vtable_ty.580176"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<StatementNode>.580175"*)*, void (%"Array<StatementNode>.580175"*)** %.18, align 8
  call void %.19(%"Array<StatementNode>.580175"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 1
  %.31 = load %StatementNode.580171**, %StatementNode.580171*** %.30, align 8
  %.33 = getelementptr inbounds %StatementNode.580171*, %StatementNode.580171** %.31, i64 %.24
  store %StatementNode.580171* %.2, %StatementNode.580171** %.33, align 8
  ret void
}

define void @"Array<StatementNode>___setitem__"(%"Array<StatementNode>.580175"* nocapture readonly %.1, i64 %.2, %StatementNode.580171* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 1
  %.30 = load %StatementNode.580171**, %StatementNode.580171*** %.29, align 8
  %.32 = getelementptr inbounds %StatementNode.580171*, %StatementNode.580171** %.30, i64 %.2
  store %StatementNode.580171* %.3, %StatementNode.580171** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<StatementNode>_append"(%"Array<StatementNode>.580175"* %.1, %StatementNode.580171* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 0
  %.9 = load %"Array<StatementNode>_vtable_ty.580176"*, %"Array<StatementNode>_vtable_ty.580176"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.580176", %"Array<StatementNode>_vtable_ty.580176"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<StatementNode>.580175"*, %StatementNode.580171*)*, void (%"Array<StatementNode>.580175"*, %StatementNode.580171*)** %.10, align 8
  call void %.11(%"Array<StatementNode>.580175"* %.1, %StatementNode.580171* %.2)
  ret void
}

define %StatementNode.580171* @"Array<StatementNode>___getitem__"(%"Array<StatementNode>.580175"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 1
  %.28 = load %StatementNode.580171**, %StatementNode.580171*** %.27, align 8
  %.29 = getelementptr inbounds %StatementNode.580171*, %StatementNode.580171** %.28, i64 %.2
  %.30 = load %StatementNode.580171*, %StatementNode.580171** %.29, align 8
  ret %StatementNode.580171* %.30

.4.endif:                                         ; preds = %.4
  ret %StatementNode.580171* null
}

define i1 @"Array<StatementNode>___eq__"(%"Array<StatementNode>.580175"* %.1, %"Array<StatementNode>.580175"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<StatementNode>_vtable_ty.580176"*, %"Array<StatementNode>_vtable_ty.580176"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.580176", %"Array<StatementNode>_vtable_ty.580176"* %.28, i64 0, i32 5
  %.30 = load %StatementNode.580171* (%"Array<StatementNode>.580175"*, i64)*, %StatementNode.580171* (%"Array<StatementNode>.580175"*, i64)** %.29, align 8
  %.31 = call %StatementNode.580171* %.30(%"Array<StatementNode>.580175"* %.1, i64 %storemerge3)
  %.35 = load %"Array<StatementNode>_vtable_ty.580176"*, %"Array<StatementNode>_vtable_ty.580176"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.580176", %"Array<StatementNode>_vtable_ty.580176"* %.35, i64 0, i32 5
  %.37 = load %StatementNode.580171* (%"Array<StatementNode>.580175"*, i64)*, %StatementNode.580171* (%"Array<StatementNode>.580175"*, i64)** %.36, align 8
  %.38 = call %StatementNode.580171* %.37(%"Array<StatementNode>.580175"* %.2, i64 %storemerge3)
  %0 = ptrtoint %StatementNode.580171* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %StatementNode.580171* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<StatementNode>___in__"(%"Array<StatementNode>.580175"* %.1, %StatementNode.580171* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %StatementNode.580171* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<StatementNode>_vtable_ty.580176"*, %"Array<StatementNode>_vtable_ty.580176"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.580176", %"Array<StatementNode>_vtable_ty.580176"* %.19, i64 0, i32 5
  %.21 = load %StatementNode.580171* (%"Array<StatementNode>.580175"*, i64)*, %StatementNode.580171* (%"Array<StatementNode>.580175"*, i64)** %.20, align 8
  %.22 = call %StatementNode.580171* %.21(%"Array<StatementNode>.580175"* %.1, i64 %storemerge4)
  %1 = ptrtoint %StatementNode.580171* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<StatementNode>_find"(%"Array<StatementNode>.580175"* nocapture readonly %.1, %StatementNode.580171* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 1
  %.19 = load %StatementNode.580171**, %StatementNode.580171*** %.18, align 8
  %0 = ptrtoint %StatementNode.580171* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %StatementNode.580171*, %StatementNode.580171** %.19, i64 %storemerge5
  %1 = bitcast %StatementNode.580171** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<StatementNode>_join"(%"Array<StatementNode>.580175"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.150, i64 0, i64 0), i64 14)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.150, i64 0, i64 0), i64 14)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<StatementNode>___as_string__"(%"Array<StatementNode>.580175"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.1, i64 0, i32 0
  %.7 = load %"Array<StatementNode>_vtable_ty.580176"*, %"Array<StatementNode>_vtable_ty.580176"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.580176", %"Array<StatementNode>_vtable_ty.580176"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<StatementNode>.580175"*, %string.580129*)*, %string.580129* (%"Array<StatementNode>.580175"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<StatementNode>.580175"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @BlockNode_constructor(%BlockNode.580173* nocapture %.1, %FloRange.580135* %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %BlockNode.580173* %.1 to %Node.580159*
  call void @Node_constructor(%Node.580159* %.8, %FloRange.580135* %.2)
  %.13 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<StatementNode>_vtable_ty.580176"**
  store %"Array<StatementNode>_vtable_ty.580176"* @"Array<StatementNode>_vtable_data", %"Array<StatementNode>_vtable_ty.580176"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %BlockNode.580173, %BlockNode.580173* %.1, i64 0, i32 2
  %3 = bitcast %"Array<StatementNode>.580175"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ExpressionNode_constructor(%ExpressionNode.580177* nocapture %.1, i64 %.2, %FloRange.580135* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %ExpressionNode.580177* %.1 to %StatementNode.580171*
  call void @StatementNode_constructor(%StatementNode.580171* %.10, i64 8, %FloRange.580135* %.3)
  %.15 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.1, i64 0, i32 3
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ArrayTypeNode_constructor(%ArrayTypeNode.580179* nocapture %.1, %TypeNode.580161* %.2, %ExpressionNode.580177* %.3, %FloRange.580135* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %ArrayTypeNode.580179* %.1 to %TypeNode.580161*
  call void @TypeNode_constructor(%TypeNode.580161* %.12, i64 16, %FloRange.580135* %.4)
  %.17 = getelementptr inbounds %ArrayTypeNode.580179, %ArrayTypeNode.580179* %.1, i64 0, i32 3
  store %TypeNode.580161* %.2, %TypeNode.580161** %.17, align 8
  %.21 = getelementptr inbounds %ArrayTypeNode.580179, %ArrayTypeNode.580179* %.1, i64 0, i32 4
  store %ExpressionNode.580177* %.3, %ExpressionNode.580177** %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @IntExpressionNode_constructor(%IntExpressionNode.580181* nocapture %.1, %IntToken.580143* %.2) local_unnamed_addr #5 {
.4:
  %.8 = bitcast %IntExpressionNode.580181* %.1 to %ExpressionNode.580177*
  %.10 = getelementptr inbounds %IntToken.580143, %IntToken.580143* %.2, i64 0, i32 2
  %.11 = load %FloRange.580135*, %FloRange.580135** %.10, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.8, i64 0, %FloRange.580135* %.11)
  %.15 = getelementptr inbounds %IntExpressionNode.580181, %IntExpressionNode.580181* %.1, i64 0, i32 4
  store %IntToken.580143* %.2, %IntToken.580143** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @FloatExpressionNode_constructor(%FloatExpressionNode.580183* nocapture %.1, %FloatToken.580145* %.2) local_unnamed_addr #5 {
.4:
  %.8 = bitcast %FloatExpressionNode.580183* %.1 to %ExpressionNode.580177*
  %.10 = getelementptr inbounds %FloatToken.580145, %FloatToken.580145* %.2, i64 0, i32 2
  %.11 = load %FloRange.580135*, %FloRange.580135** %.10, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.8, i64 1, %FloRange.580135* %.11)
  %.15 = getelementptr inbounds %FloatExpressionNode.580183, %FloatExpressionNode.580183* %.1, i64 0, i32 4
  store %FloatToken.580145* %.2, %FloatToken.580145** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @CharExpressionNode_constructor(%CharExpressionNode.580185* nocapture %.1, %CharToken.580147* %.2) local_unnamed_addr #5 {
.4:
  %.8 = bitcast %CharExpressionNode.580185* %.1 to %ExpressionNode.580177*
  %.10 = getelementptr inbounds %CharToken.580147, %CharToken.580147* %.2, i64 0, i32 2
  %.11 = load %FloRange.580135*, %FloRange.580135** %.10, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.8, i64 3, %FloRange.580135* %.11)
  %.15 = getelementptr inbounds %CharExpressionNode.580185, %CharExpressionNode.580185* %.1, i64 0, i32 4
  store %CharToken.580147* %.2, %CharToken.580147** %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<ExpressionNode>_constructor"(%"Array<ExpressionNode>.580189"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 1
  %0 = bitcast %ExpressionNode.580177*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ExpressionNode>_resize"(%"Array<ExpressionNode>.580189"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 1
  %0 = bitcast %ExpressionNode.580177*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<ExpressionNode>_swap"(%"Array<ExpressionNode>.580189"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 1
  %.12 = load %ExpressionNode.580177**, %ExpressionNode.580177*** %.11, align 8
  %.13 = getelementptr inbounds %ExpressionNode.580177*, %ExpressionNode.580177** %.12, i64 %.2
  %0 = bitcast %ExpressionNode.580177** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %ExpressionNode.580177*, %ExpressionNode.580177** %.12, i64 %.3
  %1 = bitcast %ExpressionNode.580177** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %ExpressionNode.580177**, %ExpressionNode.580177*** %.11, align 8
  %.33 = getelementptr inbounds %ExpressionNode.580177*, %ExpressionNode.580177** %.31, i64 %.3
  %2 = bitcast %ExpressionNode.580177** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<ExpressionNode>___sl__"(%"Array<ExpressionNode>.580189"* %.1, %ExpressionNode.580177* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 0
  %.17 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ExpressionNode>.580189"*)*, void (%"Array<ExpressionNode>.580189"*)** %.18, align 8
  call void %.19(%"Array<ExpressionNode>.580189"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 1
  %.31 = load %ExpressionNode.580177**, %ExpressionNode.580177*** %.30, align 8
  %.33 = getelementptr inbounds %ExpressionNode.580177*, %ExpressionNode.580177** %.31, i64 %.24
  store %ExpressionNode.580177* %.2, %ExpressionNode.580177** %.33, align 8
  ret void
}

define void @"Array<ExpressionNode>___setitem__"(%"Array<ExpressionNode>.580189"* nocapture readonly %.1, i64 %.2, %ExpressionNode.580177* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 1
  %.30 = load %ExpressionNode.580177**, %ExpressionNode.580177*** %.29, align 8
  %.32 = getelementptr inbounds %ExpressionNode.580177*, %ExpressionNode.580177** %.30, i64 %.2
  store %ExpressionNode.580177* %.3, %ExpressionNode.580177** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ExpressionNode>_append"(%"Array<ExpressionNode>.580189"* %.1, %ExpressionNode.580177* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 0
  %.9 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)*, void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)** %.10, align 8
  call void %.11(%"Array<ExpressionNode>.580189"* %.1, %ExpressionNode.580177* %.2)
  ret void
}

define %ExpressionNode.580177* @"Array<ExpressionNode>___getitem__"(%"Array<ExpressionNode>.580189"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 1
  %.28 = load %ExpressionNode.580177**, %ExpressionNode.580177*** %.27, align 8
  %.29 = getelementptr inbounds %ExpressionNode.580177*, %ExpressionNode.580177** %.28, i64 %.2
  %.30 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.29, align 8
  ret %ExpressionNode.580177* %.30

.4.endif:                                         ; preds = %.4
  ret %ExpressionNode.580177* null
}

define i1 @"Array<ExpressionNode>___eq__"(%"Array<ExpressionNode>.580189"* %.1, %"Array<ExpressionNode>.580189"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.28, i64 0, i32 5
  %.30 = load %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)*, %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)** %.29, align 8
  %.31 = call %ExpressionNode.580177* %.30(%"Array<ExpressionNode>.580189"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.35, i64 0, i32 5
  %.37 = load %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)*, %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)** %.36, align 8
  %.38 = call %ExpressionNode.580177* %.37(%"Array<ExpressionNode>.580189"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ExpressionNode.580177* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ExpressionNode.580177* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ExpressionNode>___in__"(%"Array<ExpressionNode>.580189"* %.1, %ExpressionNode.580177* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ExpressionNode.580177* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.19, i64 0, i32 5
  %.21 = load %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)*, %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)** %.20, align 8
  %.22 = call %ExpressionNode.580177* %.21(%"Array<ExpressionNode>.580189"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ExpressionNode.580177* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ExpressionNode>_find"(%"Array<ExpressionNode>.580189"* nocapture readonly %.1, %ExpressionNode.580177* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 1
  %.19 = load %ExpressionNode.580177**, %ExpressionNode.580177*** %.18, align 8
  %0 = ptrtoint %ExpressionNode.580177* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ExpressionNode.580177*, %ExpressionNode.580177** %.19, i64 %storemerge5
  %1 = bitcast %ExpressionNode.580177** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<ExpressionNode>_join"(%"Array<ExpressionNode>.580189"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.151, i64 0, i64 0), i64 15)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.151, i64 0, i64 0), i64 15)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<ExpressionNode>___as_string__"(%"Array<ExpressionNode>.580189"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1, i64 0, i32 0
  %.7 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<ExpressionNode>.580189"*, %string.580129*)*, %string.580129* (%"Array<ExpressionNode>.580189"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<ExpressionNode>.580189"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree norecurse nounwind
define void @StringExpressionNode_constructor(%StringExpressionNode.580187* nocapture %.1, %StrToken.580149* %.2, %"Array<ExpressionNode>.580189"* %.3) local_unnamed_addr #5 {
.5:
  %.10 = bitcast %StringExpressionNode.580187* %.1 to %ExpressionNode.580177*
  %.12 = getelementptr inbounds %StrToken.580149, %StrToken.580149* %.2, i64 0, i32 2
  %.13 = load %FloRange.580135*, %FloRange.580135** %.12, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.10, i64 2, %FloRange.580135* %.13)
  %.17 = getelementptr inbounds %StringExpressionNode.580187, %StringExpressionNode.580187* %.1, i64 0, i32 4
  store %StrToken.580149* %.2, %StrToken.580149** %.17, align 8
  %.21 = getelementptr inbounds %StringExpressionNode.580187, %StringExpressionNode.580187* %.1, i64 0, i32 5
  store %"Array<ExpressionNode>.580189"* %.3, %"Array<ExpressionNode>.580189"** %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @VarAccessExpressionNode_constructor(%VarAccessExpressionNode.580191* nocapture %.1, %IdentifierToken.580155* %.2) local_unnamed_addr #5 {
.4:
  %.8 = bitcast %VarAccessExpressionNode.580191* %.1 to %ExpressionNode.580177*
  %.10 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.2, i64 0, i32 2
  %.11 = load %FloRange.580135*, %FloRange.580135** %.10, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.8, i64 7, %FloRange.580135* %.11)
  %.15 = getelementptr inbounds %VarAccessExpressionNode.580191, %VarAccessExpressionNode.580191* %.1, i64 0, i32 4
  store %IdentifierToken.580155* %.2, %IdentifierToken.580155** %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @ArrayExpressionNode_constructor(%ArrayExpressionNode.580193* nocapture %.1, %FloRange.580135* %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %ArrayExpressionNode.580193* %.1 to %ExpressionNode.580177*
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.8, i64 6, %FloRange.580135* %.2)
  %.13 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<ExpressionNode>_vtable_ty.580190"**
  store %"Array<ExpressionNode>_vtable_ty.580190"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.580190"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %ArrayExpressionNode.580193, %ArrayExpressionNode.580193* %.1, i64 0, i32 4
  %3 = bitcast %"Array<ExpressionNode>.580189"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @NewExpressionNode_constructor(%NewExpressionNode.580195* nocapture %.1, %TypeNode.580161* %.2, %FloRange.580135* %.3) local_unnamed_addr #3 {
.5:
  %.10 = bitcast %NewExpressionNode.580195* %.1 to %ExpressionNode.580177*
  %.13 = getelementptr inbounds %NewExpressionNode.580195, %NewExpressionNode.580195* %.1, i64 0, i32 4
  store %TypeNode.580161* %.2, %TypeNode.580161** %.13, align 8
  %.16 = getelementptr inbounds %NewExpressionNode.580195, %NewExpressionNode.580195* %.1, i64 0, i32 5
  store i1 true, i1* %.16, align 1
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.10, i64 11, %FloRange.580135* %.3)
  %.22 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.26 = bitcast i8* %.24 to %"Array<ExpressionNode>_vtable_ty.580190"**
  store %"Array<ExpressionNode>_vtable_ty.580190"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.580190"** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %0 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %0, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %1 = bitcast i8* %.30 to i64*
  store i64 0, i64* %1, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %2 = bitcast i8* %.32 to i64*
  store i64 8, i64* %2, align 8
  %.34 = getelementptr inbounds %NewExpressionNode.580195, %NewExpressionNode.580195* %.1, i64 0, i32 6
  %3 = bitcast %"Array<ExpressionNode>.580189"** %.34 to i8**
  store i8* %.24, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ExpressionIndexNode_constructor(%ExpressionIndexNode.580197* nocapture %.1, %ExpressionNode.580177* %.2, %ExpressionNode.580177* %.3, %FloRange.580135* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %ExpressionIndexNode.580197* %.1 to %ExpressionNode.580177*
  %.15 = getelementptr inbounds %ExpressionIndexNode.580197, %ExpressionIndexNode.580197* %.1, i64 0, i32 4
  store %ExpressionNode.580177* %.2, %ExpressionNode.580177** %.15, align 8
  %.19 = getelementptr inbounds %ExpressionIndexNode.580197, %ExpressionIndexNode.580197* %.1, i64 0, i32 5
  store %ExpressionNode.580177* %.3, %ExpressionNode.580177** %.19, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.12, i64 13, %FloRange.580135* %.4)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @MemberExpressionNode_constructor(%MemberExpressionNode.580199* nocapture %.1, %ExpressionNode.580177* %.2, %IdentifierToken.580155* %.3, %FloRange.580135* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %MemberExpressionNode.580199* %.1 to %ExpressionNode.580177*
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.12, i64 12, %FloRange.580135* %.4)
  %.17 = getelementptr inbounds %MemberExpressionNode.580199, %MemberExpressionNode.580199* %.1, i64 0, i32 4
  store %ExpressionNode.580177* %.2, %ExpressionNode.580177** %.17, align 8
  %.21 = getelementptr inbounds %MemberExpressionNode.580199, %MemberExpressionNode.580199* %.1, i64 0, i32 5
  store %IdentifierToken.580155* %.3, %IdentifierToken.580155** %.21, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @CallExpressionNode_constructor(%CallExpressionNode.580201* nocapture %.1, %ExpressionNode.580177* %.2, %FloRange.580135* %.3) local_unnamed_addr #3 {
.5:
  %.10 = bitcast %CallExpressionNode.580201* %.1 to %ExpressionNode.580177*
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.10, i64 14, %FloRange.580135* %.3)
  %.15 = getelementptr inbounds %CallExpressionNode.580201, %CallExpressionNode.580201* %.1, i64 0, i32 4
  store %ExpressionNode.580177* %.2, %ExpressionNode.580177** %.15, align 8
  %.19 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.21 to %"Array<ExpressionNode>_vtable_ty.580190"**
  store %"Array<ExpressionNode>_vtable_ty.580190"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.580190"** %.23, align 8
  %.25 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.25 to i8**
  store i8* %.19, i8** %0, align 8
  %.27 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.27 to i64*
  store i64 0, i64* %1, align 8
  %.29 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.29 to i64*
  store i64 8, i64* %2, align 8
  %.31 = getelementptr inbounds %CallExpressionNode.580201, %CallExpressionNode.580201* %.1, i64 0, i32 5
  %3 = bitcast %"Array<ExpressionNode>.580189"** %.31 to i8**
  store i8* %.21, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @TypeCastExpressionNode_constructor(%TypeCastExpressionNode.580203* nocapture %.1, %ExpressionNode.580177* %.2, %TypeNode.580161* %.3) local_unnamed_addr #3 {
.5:
  %.10 = bitcast %TypeCastExpressionNode.580203* %.1 to %ExpressionNode.580177*
  %.12 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.2, i64 0, i32 1
  %.13 = load %FloRange.580135*, %FloRange.580135** %.12, align 8
  %.15 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %.3, i64 0, i32 1
  %.16 = load %FloRange.580135*, %FloRange.580135** %.15, align 8
  %.17 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.13, %FloRange.580135* %.16)
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.10, i64 10, %FloRange.580135* %.17)
  %.21 = getelementptr inbounds %TypeCastExpressionNode.580203, %TypeCastExpressionNode.580203* %.1, i64 0, i32 4
  store %ExpressionNode.580177* %.2, %ExpressionNode.580177** %.21, align 8
  %.25 = getelementptr inbounds %TypeCastExpressionNode.580203, %TypeCastExpressionNode.580203* %.1, i64 0, i32 5
  store %TypeNode.580161* %.3, %TypeNode.580161** %.25, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @BinaryExpressionNode_constructor(%BinaryExpressionNode.580205* nocapture %.1, %ExpressionNode.580177* %.2, i64 %.3, %ExpressionNode.580177* %.4) local_unnamed_addr #3 {
.6:
  %.12 = bitcast %BinaryExpressionNode.580205* %.1 to %ExpressionNode.580177*
  %.14 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.2, i64 0, i32 1
  %.15 = load %FloRange.580135*, %FloRange.580135** %.14, align 8
  %.17 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.4, i64 0, i32 1
  %.18 = load %FloRange.580135*, %FloRange.580135** %.17, align 8
  %.19 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.15, %FloRange.580135* %.18)
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.12, i64 8, %FloRange.580135* %.19)
  %.23 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.1, i64 0, i32 4
  store %ExpressionNode.580177* %.2, %ExpressionNode.580177** %.23, align 8
  %.27 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.1, i64 0, i32 5
  store i64 %.3, i64* %.27, align 8
  %.31 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.1, i64 0, i32 6
  store %ExpressionNode.580177* %.4, %ExpressionNode.580177** %.31, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @TernaryExpressionNode_constructor(%TernaryExpressionNode.580207* nocapture %.1, %ExpressionNode.580177* %.2, %ExpressionNode.580177* %.3, %ExpressionNode.580177* %.4) local_unnamed_addr #3 {
.6:
  %.12 = bitcast %TernaryExpressionNode.580207* %.1 to %ExpressionNode.580177*
  %.14 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.2, i64 0, i32 1
  %.15 = load %FloRange.580135*, %FloRange.580135** %.14, align 8
  %.17 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.4, i64 0, i32 1
  %.18 = load %FloRange.580135*, %FloRange.580135** %.17, align 8
  %.19 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.15, %FloRange.580135* %.18)
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.12, i64 15, %FloRange.580135* %.19)
  %.23 = getelementptr inbounds %TernaryExpressionNode.580207, %TernaryExpressionNode.580207* %.1, i64 0, i32 4
  store %ExpressionNode.580177* %.2, %ExpressionNode.580177** %.23, align 8
  %.27 = getelementptr inbounds %TernaryExpressionNode.580207, %TernaryExpressionNode.580207* %.1, i64 0, i32 5
  store %ExpressionNode.580177* %.3, %ExpressionNode.580177** %.27, align 8
  %.31 = getelementptr inbounds %TernaryExpressionNode.580207, %TernaryExpressionNode.580207* %.1, i64 0, i32 6
  store %ExpressionNode.580177* %.4, %ExpressionNode.580177** %.31, align 8
  %.35 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.3, i64 0, i32 1
  %.36 = load %FloRange.580135*, %FloRange.580135** %.35, align 8
  %.39 = load %FloRange.580135*, %FloRange.580135** %.17, align 8
  %.40 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.36, %FloRange.580135* %.39)
  %.41 = getelementptr inbounds %TernaryExpressionNode.580207, %TernaryExpressionNode.580207* %.1, i64 0, i32 1
  store %FloRange.580135* %.40, %FloRange.580135** %.41, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @UnaryExpressionNode_constructor(%UnaryExpressionNode.580209* nocapture %.1, i64 %.2, %ExpressionNode.580177* %.3, %FloRange.580135* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %UnaryExpressionNode.580209* %.1 to %ExpressionNode.580177*
  %.15 = getelementptr inbounds %UnaryExpressionNode.580209, %UnaryExpressionNode.580209* %.1, i64 0, i32 4
  store i64 %.2, i64* %.15, align 8
  %.19 = getelementptr inbounds %UnaryExpressionNode.580209, %UnaryExpressionNode.580209* %.1, i64 0, i32 5
  store %ExpressionNode.580177* %.3, %ExpressionNode.580177** %.19, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.12, i64 9, %FloRange.580135* %.4)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IfStatementNode_constructor(%IfStatementNode.580211* nocapture %.1, %FloRange.580135* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %IfStatementNode.580211* %.1 to %StatementNode.580171*
  call void @StatementNode_constructor(%StatementNode.580171* %.8, i64 0, %FloRange.580135* %.2)
  %.12 = getelementptr inbounds %IfStatementNode.580211, %IfStatementNode.580211* %.1, i64 0, i32 5
  store %BlockNode.580173* null, %BlockNode.580173** %.12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @WhileStatementNode_constructor(%WhileStatementNode.580213* nocapture %.1, %FloRange.580135* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %WhileStatementNode.580213* %.1 to %StatementNode.580171*
  call void @StatementNode_constructor(%StatementNode.580171* %.8, i64 4, %FloRange.580135* %.2)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ForStatementNode_constructor(%ForStatementNode.580215* nocapture %.1, %FloRange.580135* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %ForStatementNode.580215* %.1 to %StatementNode.580171*
  %.19 = getelementptr inbounds %ForStatementNode.580215, %ForStatementNode.580215* %.1, i64 0, i32 2
  %0 = bitcast i64* %.19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %0, i8 0, i64 32, i1 false)
  call void @StatementNode_constructor(%StatementNode.580171* %.8, i64 3, %FloRange.580135* %.2)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ReturnStatementNode_constructor(%ReturnStatementNode.580217* nocapture %.1, %FloRange.580135* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %ReturnStatementNode.580217* %.1 to %StatementNode.580171*
  %.10 = getelementptr inbounds %ReturnStatementNode.580217, %ReturnStatementNode.580217* %.1, i64 0, i32 3
  store %ExpressionNode.580177* null, %ExpressionNode.580177** %.10, align 8
  call void @StatementNode_constructor(%StatementNode.580171* %.8, i64 7, %FloRange.580135* %.2)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @VarDeclarationStatement_constructor(%VarDeclarationStatement.580219* nocapture %.1, %FloRange.580135* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %VarDeclarationStatement.580219* %.1 to %StatementNode.580171*
  call void @StatementNode_constructor(%StatementNode.580171* %.8, i64 1, %FloRange.580135* %.2)
  %.12 = getelementptr inbounds %VarDeclarationStatement.580219, %VarDeclarationStatement.580219* %.1, i64 0, i32 4
  %0 = bitcast %TypeNode.580161** %.12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ConstDeclarationStatement_constructor(%ConstDeclarationStatement.580221* nocapture %.1, %FloRange.580135* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %ConstDeclarationStatement.580221* %.1 to %StatementNode.580171*
  call void @StatementNode_constructor(%StatementNode.580171* %.8, i64 2, %FloRange.580135* %.2)
  %.12 = getelementptr inbounds %ConstDeclarationStatement.580221, %ConstDeclarationStatement.580221* %.1, i64 0, i32 4
  store %TypeNode.580161* null, %TypeNode.580161** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<ArgNode>_constructor"(%"Array<ArgNode>.580227"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 1
  %0 = bitcast %ArgNode.580223*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ArgNode>_resize"(%"Array<ArgNode>.580227"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 1
  %0 = bitcast %ArgNode.580223*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<ArgNode>_swap"(%"Array<ArgNode>.580227"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 1
  %.12 = load %ArgNode.580223**, %ArgNode.580223*** %.11, align 8
  %.13 = getelementptr inbounds %ArgNode.580223*, %ArgNode.580223** %.12, i64 %.2
  %0 = bitcast %ArgNode.580223** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %ArgNode.580223*, %ArgNode.580223** %.12, i64 %.3
  %1 = bitcast %ArgNode.580223** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %ArgNode.580223**, %ArgNode.580223*** %.11, align 8
  %.33 = getelementptr inbounds %ArgNode.580223*, %ArgNode.580223** %.31, i64 %.3
  %2 = bitcast %ArgNode.580223** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<ArgNode>___sl__"(%"Array<ArgNode>.580227"* %.1, %ArgNode.580223* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 0
  %.17 = load %"Array<ArgNode>_vtable_ty.580228"*, %"Array<ArgNode>_vtable_ty.580228"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.580228", %"Array<ArgNode>_vtable_ty.580228"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ArgNode>.580227"*)*, void (%"Array<ArgNode>.580227"*)** %.18, align 8
  call void %.19(%"Array<ArgNode>.580227"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 1
  %.31 = load %ArgNode.580223**, %ArgNode.580223*** %.30, align 8
  %.33 = getelementptr inbounds %ArgNode.580223*, %ArgNode.580223** %.31, i64 %.24
  store %ArgNode.580223* %.2, %ArgNode.580223** %.33, align 8
  ret void
}

define void @"Array<ArgNode>___setitem__"(%"Array<ArgNode>.580227"* nocapture readonly %.1, i64 %.2, %ArgNode.580223* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 1
  %.30 = load %ArgNode.580223**, %ArgNode.580223*** %.29, align 8
  %.32 = getelementptr inbounds %ArgNode.580223*, %ArgNode.580223** %.30, i64 %.2
  store %ArgNode.580223* %.3, %ArgNode.580223** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ArgNode>_append"(%"Array<ArgNode>.580227"* %.1, %ArgNode.580223* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 0
  %.9 = load %"Array<ArgNode>_vtable_ty.580228"*, %"Array<ArgNode>_vtable_ty.580228"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.580228", %"Array<ArgNode>_vtable_ty.580228"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ArgNode>.580227"*, %ArgNode.580223*)*, void (%"Array<ArgNode>.580227"*, %ArgNode.580223*)** %.10, align 8
  call void %.11(%"Array<ArgNode>.580227"* %.1, %ArgNode.580223* %.2)
  ret void
}

define %ArgNode.580223* @"Array<ArgNode>___getitem__"(%"Array<ArgNode>.580227"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 1
  %.28 = load %ArgNode.580223**, %ArgNode.580223*** %.27, align 8
  %.29 = getelementptr inbounds %ArgNode.580223*, %ArgNode.580223** %.28, i64 %.2
  %.30 = load %ArgNode.580223*, %ArgNode.580223** %.29, align 8
  ret %ArgNode.580223* %.30

.4.endif:                                         ; preds = %.4
  ret %ArgNode.580223* null
}

define i1 @"Array<ArgNode>___eq__"(%"Array<ArgNode>.580227"* %.1, %"Array<ArgNode>.580227"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ArgNode>_vtable_ty.580228"*, %"Array<ArgNode>_vtable_ty.580228"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.580228", %"Array<ArgNode>_vtable_ty.580228"* %.28, i64 0, i32 5
  %.30 = load %ArgNode.580223* (%"Array<ArgNode>.580227"*, i64)*, %ArgNode.580223* (%"Array<ArgNode>.580227"*, i64)** %.29, align 8
  %.31 = call %ArgNode.580223* %.30(%"Array<ArgNode>.580227"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ArgNode>_vtable_ty.580228"*, %"Array<ArgNode>_vtable_ty.580228"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.580228", %"Array<ArgNode>_vtable_ty.580228"* %.35, i64 0, i32 5
  %.37 = load %ArgNode.580223* (%"Array<ArgNode>.580227"*, i64)*, %ArgNode.580223* (%"Array<ArgNode>.580227"*, i64)** %.36, align 8
  %.38 = call %ArgNode.580223* %.37(%"Array<ArgNode>.580227"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ArgNode.580223* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ArgNode.580223* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ArgNode>___in__"(%"Array<ArgNode>.580227"* %.1, %ArgNode.580223* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ArgNode.580223* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ArgNode>_vtable_ty.580228"*, %"Array<ArgNode>_vtable_ty.580228"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.580228", %"Array<ArgNode>_vtable_ty.580228"* %.19, i64 0, i32 5
  %.21 = load %ArgNode.580223* (%"Array<ArgNode>.580227"*, i64)*, %ArgNode.580223* (%"Array<ArgNode>.580227"*, i64)** %.20, align 8
  %.22 = call %ArgNode.580223* %.21(%"Array<ArgNode>.580227"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ArgNode.580223* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ArgNode>_find"(%"Array<ArgNode>.580227"* nocapture readonly %.1, %ArgNode.580223* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 1
  %.19 = load %ArgNode.580223**, %ArgNode.580223*** %.18, align 8
  %0 = ptrtoint %ArgNode.580223* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ArgNode.580223*, %ArgNode.580223** %.19, i64 %storemerge5
  %1 = bitcast %ArgNode.580223** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<ArgNode>_join"(%"Array<ArgNode>.580227"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.152, i64 0, i64 0), i64 8)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.152, i64 0, i64 0), i64 8)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<ArgNode>___as_string__"(%"Array<ArgNode>.580227"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.1, i64 0, i32 0
  %.7 = load %"Array<ArgNode>_vtable_ty.580228"*, %"Array<ArgNode>_vtable_ty.580228"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.580228", %"Array<ArgNode>_vtable_ty.580228"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<ArgNode>.580227"*, %string.580129*)*, %string.580129* (%"Array<ArgNode>.580227"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<ArgNode>.580227"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @FunctionDeclarationNode_constructor(%FunctionDeclarationNode.580225* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<ArgNode>_vtable_ty.580228"**
  store %"Array<ArgNode>_vtable_ty.580228"* @"Array<ArgNode>_vtable_data", %"Array<ArgNode>_vtable_ty.580228"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %FunctionDeclarationNode.580225, %FunctionDeclarationNode.580225* %.1, i64 0, i32 2
  %3 = bitcast %"Array<ArgNode>.580227"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.22 = getelementptr inbounds %FunctionDeclarationNode.580225, %FunctionDeclarationNode.580225* %.1, i64 0, i32 5
  store i1 false, i1* %.22, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @MethodNode_constructor(%MethodNode.580229* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<ArgNode>_vtable_ty.580228"**
  store %"Array<ArgNode>_vtable_ty.580228"* @"Array<ArgNode>_vtable_data", %"Array<ArgNode>_vtable_ty.580228"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.1, i64 0, i32 2
  %3 = bitcast %"Array<ArgNode>.580227"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.22 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.1, i64 0, i32 6
  store i1 true, i1* %.22, align 1
  %.25 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.1, i64 0, i32 7
  store i1 false, i1* %.25, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FieldNode_constructor(%FieldNode.580231* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %FieldNode.580231, %FieldNode.580231* %.1, i64 0, i32 3
  store %ExpressionNode.580177* null, %ExpressionNode.580177** %.6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @GenericParameterNode_constructor(%GenericParameterNode.580233* nocapture %.1, %IdentifierToken.580155* %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %GenericParameterNode.580233, %GenericParameterNode.580233* %.1, i64 0, i32 1
  store %IdentifierToken.580155* %.2, %IdentifierToken.580155** %.9, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<GenericParameterNode>_constructor"(%"Array<GenericParameterNode>.580237"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 1
  %0 = bitcast %GenericParameterNode.580233*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<GenericParameterNode>_resize"(%"Array<GenericParameterNode>.580237"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 1
  %0 = bitcast %GenericParameterNode.580233*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<GenericParameterNode>_swap"(%"Array<GenericParameterNode>.580237"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 1
  %.12 = load %GenericParameterNode.580233**, %GenericParameterNode.580233*** %.11, align 8
  %.13 = getelementptr inbounds %GenericParameterNode.580233*, %GenericParameterNode.580233** %.12, i64 %.2
  %0 = bitcast %GenericParameterNode.580233** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %GenericParameterNode.580233*, %GenericParameterNode.580233** %.12, i64 %.3
  %1 = bitcast %GenericParameterNode.580233** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %GenericParameterNode.580233**, %GenericParameterNode.580233*** %.11, align 8
  %.33 = getelementptr inbounds %GenericParameterNode.580233*, %GenericParameterNode.580233** %.31, i64 %.3
  %2 = bitcast %GenericParameterNode.580233** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<GenericParameterNode>___sl__"(%"Array<GenericParameterNode>.580237"* %.1, %GenericParameterNode.580233* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 0
  %.17 = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<GenericParameterNode>.580237"*)*, void (%"Array<GenericParameterNode>.580237"*)** %.18, align 8
  call void %.19(%"Array<GenericParameterNode>.580237"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 1
  %.31 = load %GenericParameterNode.580233**, %GenericParameterNode.580233*** %.30, align 8
  %.33 = getelementptr inbounds %GenericParameterNode.580233*, %GenericParameterNode.580233** %.31, i64 %.24
  store %GenericParameterNode.580233* %.2, %GenericParameterNode.580233** %.33, align 8
  ret void
}

define void @"Array<GenericParameterNode>___setitem__"(%"Array<GenericParameterNode>.580237"* nocapture readonly %.1, i64 %.2, %GenericParameterNode.580233* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 1
  %.30 = load %GenericParameterNode.580233**, %GenericParameterNode.580233*** %.29, align 8
  %.32 = getelementptr inbounds %GenericParameterNode.580233*, %GenericParameterNode.580233** %.30, i64 %.2
  store %GenericParameterNode.580233* %.3, %GenericParameterNode.580233** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<GenericParameterNode>_append"(%"Array<GenericParameterNode>.580237"* %.1, %GenericParameterNode.580233* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 0
  %.9 = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)*, void (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)** %.10, align 8
  call void %.11(%"Array<GenericParameterNode>.580237"* %.1, %GenericParameterNode.580233* %.2)
  ret void
}

define %GenericParameterNode.580233* @"Array<GenericParameterNode>___getitem__"(%"Array<GenericParameterNode>.580237"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 1
  %.28 = load %GenericParameterNode.580233**, %GenericParameterNode.580233*** %.27, align 8
  %.29 = getelementptr inbounds %GenericParameterNode.580233*, %GenericParameterNode.580233** %.28, i64 %.2
  %.30 = load %GenericParameterNode.580233*, %GenericParameterNode.580233** %.29, align 8
  ret %GenericParameterNode.580233* %.30

.4.endif:                                         ; preds = %.4
  ret %GenericParameterNode.580233* null
}

define i1 @"Array<GenericParameterNode>___eq__"(%"Array<GenericParameterNode>.580237"* %.1, %"Array<GenericParameterNode>.580237"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.28, i64 0, i32 5
  %.30 = load %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)*, %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)** %.29, align 8
  %.31 = call %GenericParameterNode.580233* %.30(%"Array<GenericParameterNode>.580237"* %.1, i64 %storemerge3)
  %.35 = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.35, i64 0, i32 5
  %.37 = load %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)*, %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)** %.36, align 8
  %.38 = call %GenericParameterNode.580233* %.37(%"Array<GenericParameterNode>.580237"* %.2, i64 %storemerge3)
  %0 = ptrtoint %GenericParameterNode.580233* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %GenericParameterNode.580233* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<GenericParameterNode>___in__"(%"Array<GenericParameterNode>.580237"* %.1, %GenericParameterNode.580233* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %GenericParameterNode.580233* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.19, i64 0, i32 5
  %.21 = load %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)*, %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)** %.20, align 8
  %.22 = call %GenericParameterNode.580233* %.21(%"Array<GenericParameterNode>.580237"* %.1, i64 %storemerge4)
  %1 = ptrtoint %GenericParameterNode.580233* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<GenericParameterNode>_find"(%"Array<GenericParameterNode>.580237"* nocapture readonly %.1, %GenericParameterNode.580233* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 1
  %.19 = load %GenericParameterNode.580233**, %GenericParameterNode.580233*** %.18, align 8
  %0 = ptrtoint %GenericParameterNode.580233* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %GenericParameterNode.580233*, %GenericParameterNode.580233** %.19, i64 %storemerge5
  %1 = bitcast %GenericParameterNode.580233** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<GenericParameterNode>_join"(%"Array<GenericParameterNode>.580237"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.153, i64 0, i64 0), i64 21)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.153, i64 0, i64 0), i64 21)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<GenericParameterNode>___as_string__"(%"Array<GenericParameterNode>.580237"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1, i64 0, i32 0
  %.7 = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<GenericParameterNode>.580237"*, %string.580129*)*, %string.580129* (%"Array<GenericParameterNode>.580237"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<GenericParameterNode>.580237"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<FieldNode>_constructor"(%"Array<FieldNode>.580238"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 1
  %0 = bitcast %FieldNode.580231*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FieldNode>_resize"(%"Array<FieldNode>.580238"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 1
  %0 = bitcast %FieldNode.580231*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<FieldNode>_swap"(%"Array<FieldNode>.580238"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 1
  %.12 = load %FieldNode.580231**, %FieldNode.580231*** %.11, align 8
  %.13 = getelementptr inbounds %FieldNode.580231*, %FieldNode.580231** %.12, i64 %.2
  %0 = bitcast %FieldNode.580231** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %FieldNode.580231*, %FieldNode.580231** %.12, i64 %.3
  %1 = bitcast %FieldNode.580231** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %FieldNode.580231**, %FieldNode.580231*** %.11, align 8
  %.33 = getelementptr inbounds %FieldNode.580231*, %FieldNode.580231** %.31, i64 %.3
  %2 = bitcast %FieldNode.580231** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<FieldNode>___sl__"(%"Array<FieldNode>.580238"* %.1, %FieldNode.580231* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 0
  %.17 = load %"Array<FieldNode>_vtable_ty.580241"*, %"Array<FieldNode>_vtable_ty.580241"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.580241", %"Array<FieldNode>_vtable_ty.580241"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FieldNode>.580238"*)*, void (%"Array<FieldNode>.580238"*)** %.18, align 8
  call void %.19(%"Array<FieldNode>.580238"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 1
  %.31 = load %FieldNode.580231**, %FieldNode.580231*** %.30, align 8
  %.33 = getelementptr inbounds %FieldNode.580231*, %FieldNode.580231** %.31, i64 %.24
  store %FieldNode.580231* %.2, %FieldNode.580231** %.33, align 8
  ret void
}

define void @"Array<FieldNode>___setitem__"(%"Array<FieldNode>.580238"* nocapture readonly %.1, i64 %.2, %FieldNode.580231* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 1
  %.30 = load %FieldNode.580231**, %FieldNode.580231*** %.29, align 8
  %.32 = getelementptr inbounds %FieldNode.580231*, %FieldNode.580231** %.30, i64 %.2
  store %FieldNode.580231* %.3, %FieldNode.580231** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FieldNode>_append"(%"Array<FieldNode>.580238"* %.1, %FieldNode.580231* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 0
  %.9 = load %"Array<FieldNode>_vtable_ty.580241"*, %"Array<FieldNode>_vtable_ty.580241"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.580241", %"Array<FieldNode>_vtable_ty.580241"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FieldNode>.580238"*, %FieldNode.580231*)*, void (%"Array<FieldNode>.580238"*, %FieldNode.580231*)** %.10, align 8
  call void %.11(%"Array<FieldNode>.580238"* %.1, %FieldNode.580231* %.2)
  ret void
}

define %FieldNode.580231* @"Array<FieldNode>___getitem__"(%"Array<FieldNode>.580238"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 1
  %.28 = load %FieldNode.580231**, %FieldNode.580231*** %.27, align 8
  %.29 = getelementptr inbounds %FieldNode.580231*, %FieldNode.580231** %.28, i64 %.2
  %.30 = load %FieldNode.580231*, %FieldNode.580231** %.29, align 8
  ret %FieldNode.580231* %.30

.4.endif:                                         ; preds = %.4
  ret %FieldNode.580231* null
}

define i1 @"Array<FieldNode>___eq__"(%"Array<FieldNode>.580238"* %.1, %"Array<FieldNode>.580238"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FieldNode>_vtable_ty.580241"*, %"Array<FieldNode>_vtable_ty.580241"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.580241", %"Array<FieldNode>_vtable_ty.580241"* %.28, i64 0, i32 5
  %.30 = load %FieldNode.580231* (%"Array<FieldNode>.580238"*, i64)*, %FieldNode.580231* (%"Array<FieldNode>.580238"*, i64)** %.29, align 8
  %.31 = call %FieldNode.580231* %.30(%"Array<FieldNode>.580238"* %.1, i64 %storemerge3)
  %.35 = load %"Array<FieldNode>_vtable_ty.580241"*, %"Array<FieldNode>_vtable_ty.580241"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.580241", %"Array<FieldNode>_vtable_ty.580241"* %.35, i64 0, i32 5
  %.37 = load %FieldNode.580231* (%"Array<FieldNode>.580238"*, i64)*, %FieldNode.580231* (%"Array<FieldNode>.580238"*, i64)** %.36, align 8
  %.38 = call %FieldNode.580231* %.37(%"Array<FieldNode>.580238"* %.2, i64 %storemerge3)
  %0 = ptrtoint %FieldNode.580231* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FieldNode.580231* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FieldNode>___in__"(%"Array<FieldNode>.580238"* %.1, %FieldNode.580231* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FieldNode.580231* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FieldNode>_vtable_ty.580241"*, %"Array<FieldNode>_vtable_ty.580241"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.580241", %"Array<FieldNode>_vtable_ty.580241"* %.19, i64 0, i32 5
  %.21 = load %FieldNode.580231* (%"Array<FieldNode>.580238"*, i64)*, %FieldNode.580231* (%"Array<FieldNode>.580238"*, i64)** %.20, align 8
  %.22 = call %FieldNode.580231* %.21(%"Array<FieldNode>.580238"* %.1, i64 %storemerge4)
  %1 = ptrtoint %FieldNode.580231* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FieldNode>_find"(%"Array<FieldNode>.580238"* nocapture readonly %.1, %FieldNode.580231* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 1
  %.19 = load %FieldNode.580231**, %FieldNode.580231*** %.18, align 8
  %0 = ptrtoint %FieldNode.580231* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FieldNode.580231*, %FieldNode.580231** %.19, i64 %storemerge5
  %1 = bitcast %FieldNode.580231** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<FieldNode>_join"(%"Array<FieldNode>.580238"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.154, i64 0, i64 0), i64 10)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.154, i64 0, i64 0), i64 10)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<FieldNode>___as_string__"(%"Array<FieldNode>.580238"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1, i64 0, i32 0
  %.7 = load %"Array<FieldNode>_vtable_ty.580241"*, %"Array<FieldNode>_vtable_ty.580241"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.580241", %"Array<FieldNode>_vtable_ty.580241"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<FieldNode>.580238"*, %string.580129*)*, %string.580129* (%"Array<FieldNode>.580238"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<FieldNode>.580238"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<MethodNode>_constructor"(%"Array<MethodNode>.580239"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 1
  %0 = bitcast %MethodNode.580229*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<MethodNode>_resize"(%"Array<MethodNode>.580239"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 1
  %0 = bitcast %MethodNode.580229*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<MethodNode>_swap"(%"Array<MethodNode>.580239"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 1
  %.12 = load %MethodNode.580229**, %MethodNode.580229*** %.11, align 8
  %.13 = getelementptr inbounds %MethodNode.580229*, %MethodNode.580229** %.12, i64 %.2
  %0 = bitcast %MethodNode.580229** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %MethodNode.580229*, %MethodNode.580229** %.12, i64 %.3
  %1 = bitcast %MethodNode.580229** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %MethodNode.580229**, %MethodNode.580229*** %.11, align 8
  %.33 = getelementptr inbounds %MethodNode.580229*, %MethodNode.580229** %.31, i64 %.3
  %2 = bitcast %MethodNode.580229** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<MethodNode>___sl__"(%"Array<MethodNode>.580239"* %.1, %MethodNode.580229* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 0
  %.17 = load %"Array<MethodNode>_vtable_ty.580242"*, %"Array<MethodNode>_vtable_ty.580242"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.580242", %"Array<MethodNode>_vtable_ty.580242"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<MethodNode>.580239"*)*, void (%"Array<MethodNode>.580239"*)** %.18, align 8
  call void %.19(%"Array<MethodNode>.580239"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 1
  %.31 = load %MethodNode.580229**, %MethodNode.580229*** %.30, align 8
  %.33 = getelementptr inbounds %MethodNode.580229*, %MethodNode.580229** %.31, i64 %.24
  store %MethodNode.580229* %.2, %MethodNode.580229** %.33, align 8
  ret void
}

define void @"Array<MethodNode>___setitem__"(%"Array<MethodNode>.580239"* nocapture readonly %.1, i64 %.2, %MethodNode.580229* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 1
  %.30 = load %MethodNode.580229**, %MethodNode.580229*** %.29, align 8
  %.32 = getelementptr inbounds %MethodNode.580229*, %MethodNode.580229** %.30, i64 %.2
  store %MethodNode.580229* %.3, %MethodNode.580229** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<MethodNode>_append"(%"Array<MethodNode>.580239"* %.1, %MethodNode.580229* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 0
  %.9 = load %"Array<MethodNode>_vtable_ty.580242"*, %"Array<MethodNode>_vtable_ty.580242"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.580242", %"Array<MethodNode>_vtable_ty.580242"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<MethodNode>.580239"*, %MethodNode.580229*)*, void (%"Array<MethodNode>.580239"*, %MethodNode.580229*)** %.10, align 8
  call void %.11(%"Array<MethodNode>.580239"* %.1, %MethodNode.580229* %.2)
  ret void
}

define %MethodNode.580229* @"Array<MethodNode>___getitem__"(%"Array<MethodNode>.580239"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 1
  %.28 = load %MethodNode.580229**, %MethodNode.580229*** %.27, align 8
  %.29 = getelementptr inbounds %MethodNode.580229*, %MethodNode.580229** %.28, i64 %.2
  %.30 = load %MethodNode.580229*, %MethodNode.580229** %.29, align 8
  ret %MethodNode.580229* %.30

.4.endif:                                         ; preds = %.4
  ret %MethodNode.580229* null
}

define i1 @"Array<MethodNode>___eq__"(%"Array<MethodNode>.580239"* %.1, %"Array<MethodNode>.580239"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<MethodNode>_vtable_ty.580242"*, %"Array<MethodNode>_vtable_ty.580242"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.580242", %"Array<MethodNode>_vtable_ty.580242"* %.28, i64 0, i32 5
  %.30 = load %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)*, %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)** %.29, align 8
  %.31 = call %MethodNode.580229* %.30(%"Array<MethodNode>.580239"* %.1, i64 %storemerge3)
  %.35 = load %"Array<MethodNode>_vtable_ty.580242"*, %"Array<MethodNode>_vtable_ty.580242"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.580242", %"Array<MethodNode>_vtable_ty.580242"* %.35, i64 0, i32 5
  %.37 = load %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)*, %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)** %.36, align 8
  %.38 = call %MethodNode.580229* %.37(%"Array<MethodNode>.580239"* %.2, i64 %storemerge3)
  %0 = ptrtoint %MethodNode.580229* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %MethodNode.580229* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<MethodNode>___in__"(%"Array<MethodNode>.580239"* %.1, %MethodNode.580229* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %MethodNode.580229* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<MethodNode>_vtable_ty.580242"*, %"Array<MethodNode>_vtable_ty.580242"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.580242", %"Array<MethodNode>_vtable_ty.580242"* %.19, i64 0, i32 5
  %.21 = load %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)*, %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)** %.20, align 8
  %.22 = call %MethodNode.580229* %.21(%"Array<MethodNode>.580239"* %.1, i64 %storemerge4)
  %1 = ptrtoint %MethodNode.580229* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<MethodNode>_find"(%"Array<MethodNode>.580239"* nocapture readonly %.1, %MethodNode.580229* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 1
  %.19 = load %MethodNode.580229**, %MethodNode.580229*** %.18, align 8
  %0 = ptrtoint %MethodNode.580229* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %MethodNode.580229*, %MethodNode.580229** %.19, i64 %storemerge5
  %1 = bitcast %MethodNode.580229** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<MethodNode>_join"(%"Array<MethodNode>.580239"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.155, i64 0, i64 0), i64 11)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.155, i64 0, i64 0), i64 11)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<MethodNode>___as_string__"(%"Array<MethodNode>.580239"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1, i64 0, i32 0
  %.7 = load %"Array<MethodNode>_vtable_ty.580242"*, %"Array<MethodNode>_vtable_ty.580242"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.580242", %"Array<MethodNode>_vtable_ty.580242"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<MethodNode>.580239"*, %string.580129*)*, %string.580129* (%"Array<MethodNode>.580239"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<MethodNode>.580239"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @ClassDeclarationNode_constructor(%ClassDeclarationNode.580235* nocapture %.1, %IdentifierToken.580155* %.2) local_unnamed_addr #3 {
.4:
  %.9 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.1, i64 0, i32 1
  store %IdentifierToken.580155* %.2, %IdentifierToken.580155** %.9, align 8
  %.13 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<FieldNode>_vtable_ty.580241"**
  store %"Array<FieldNode>_vtable_ty.580241"* @"Array<FieldNode>_vtable_data", %"Array<FieldNode>_vtable_ty.580241"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.1, i64 0, i32 4
  %3 = bitcast %"Array<FieldNode>.580238"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  %.29 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.31 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.31 to %"Array<MethodNode>_vtable_ty.580242"**
  store %"Array<MethodNode>_vtable_ty.580242"* @"Array<MethodNode>_vtable_data", %"Array<MethodNode>_vtable_ty.580242"** %.33, align 8
  %.35 = getelementptr inbounds i8, i8* %.31, i64 8
  %4 = bitcast i8* %.35 to i8**
  store i8* %.29, i8** %4, align 8
  %.37 = getelementptr inbounds i8, i8* %.31, i64 16
  %5 = bitcast i8* %.37 to i64*
  store i64 0, i64* %5, align 8
  %.39 = getelementptr inbounds i8, i8* %.31, i64 24
  %6 = bitcast i8* %.39 to i64*
  store i64 8, i64* %6, align 8
  %.41 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.1, i64 0, i32 5
  %7 = bitcast %"Array<MethodNode>.580239"** %.41 to i8**
  store i8* %.31, i8** %7, align 8
  %.45 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.47 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.47 to %"Array<GenericParameterNode>_vtable_ty.580240"**
  store %"Array<GenericParameterNode>_vtable_ty.580240"* @"Array<GenericParameterNode>_vtable_data", %"Array<GenericParameterNode>_vtable_ty.580240"** %.49, align 8
  %.51 = getelementptr inbounds i8, i8* %.47, i64 8
  %8 = bitcast i8* %.51 to i8**
  store i8* %.45, i8** %8, align 8
  %.53 = getelementptr inbounds i8, i8* %.47, i64 16
  %9 = bitcast i8* %.53 to i64*
  store i64 0, i64* %9, align 8
  %.55 = getelementptr inbounds i8, i8* %.47, i64 24
  %10 = bitcast i8* %.55 to i64*
  store i64 8, i64* %10, align 8
  %.57 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.1, i64 0, i32 2
  %11 = bitcast %"Array<GenericParameterNode>.580237"** %.57 to i8**
  store i8* %.47, i8** %11, align 8
  %.60 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.1, i64 0, i32 3
  store %RecordTypeNode.580163* null, %RecordTypeNode.580163** %.60, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumNodeField_constructor(%EnumNodeField.580243* nocapture %.1, %IdentifierToken.580155* %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %EnumNodeField.580243, %EnumNodeField.580243* %.1, i64 0, i32 1
  store %IdentifierToken.580155* %.2, %IdentifierToken.580155** %.9, align 8
  %.12 = getelementptr inbounds %EnumNodeField.580243, %EnumNodeField.580243* %.1, i64 0, i32 2
  store %ExpressionNode.580177* null, %ExpressionNode.580177** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<EnumNodeField>_constructor"(%"Array<EnumNodeField>.580247"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNodeField.580243*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<EnumNodeField>_resize"(%"Array<EnumNodeField>.580247"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNodeField.580243*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<EnumNodeField>_swap"(%"Array<EnumNodeField>.580247"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 1
  %.12 = load %EnumNodeField.580243**, %EnumNodeField.580243*** %.11, align 8
  %.13 = getelementptr inbounds %EnumNodeField.580243*, %EnumNodeField.580243** %.12, i64 %.2
  %0 = bitcast %EnumNodeField.580243** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %EnumNodeField.580243*, %EnumNodeField.580243** %.12, i64 %.3
  %1 = bitcast %EnumNodeField.580243** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %EnumNodeField.580243**, %EnumNodeField.580243*** %.11, align 8
  %.33 = getelementptr inbounds %EnumNodeField.580243*, %EnumNodeField.580243** %.31, i64 %.3
  %2 = bitcast %EnumNodeField.580243** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<EnumNodeField>___sl__"(%"Array<EnumNodeField>.580247"* %.1, %EnumNodeField.580243* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 0
  %.17 = load %"Array<EnumNodeField>_vtable_ty.580248"*, %"Array<EnumNodeField>_vtable_ty.580248"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.580248", %"Array<EnumNodeField>_vtable_ty.580248"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<EnumNodeField>.580247"*)*, void (%"Array<EnumNodeField>.580247"*)** %.18, align 8
  call void %.19(%"Array<EnumNodeField>.580247"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 1
  %.31 = load %EnumNodeField.580243**, %EnumNodeField.580243*** %.30, align 8
  %.33 = getelementptr inbounds %EnumNodeField.580243*, %EnumNodeField.580243** %.31, i64 %.24
  store %EnumNodeField.580243* %.2, %EnumNodeField.580243** %.33, align 8
  ret void
}

define void @"Array<EnumNodeField>___setitem__"(%"Array<EnumNodeField>.580247"* nocapture readonly %.1, i64 %.2, %EnumNodeField.580243* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 1
  %.30 = load %EnumNodeField.580243**, %EnumNodeField.580243*** %.29, align 8
  %.32 = getelementptr inbounds %EnumNodeField.580243*, %EnumNodeField.580243** %.30, i64 %.2
  store %EnumNodeField.580243* %.3, %EnumNodeField.580243** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumNodeField>_append"(%"Array<EnumNodeField>.580247"* %.1, %EnumNodeField.580243* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 0
  %.9 = load %"Array<EnumNodeField>_vtable_ty.580248"*, %"Array<EnumNodeField>_vtable_ty.580248"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.580248", %"Array<EnumNodeField>_vtable_ty.580248"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)*, void (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)** %.10, align 8
  call void %.11(%"Array<EnumNodeField>.580247"* %.1, %EnumNodeField.580243* %.2)
  ret void
}

define %EnumNodeField.580243* @"Array<EnumNodeField>___getitem__"(%"Array<EnumNodeField>.580247"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 1
  %.28 = load %EnumNodeField.580243**, %EnumNodeField.580243*** %.27, align 8
  %.29 = getelementptr inbounds %EnumNodeField.580243*, %EnumNodeField.580243** %.28, i64 %.2
  %.30 = load %EnumNodeField.580243*, %EnumNodeField.580243** %.29, align 8
  ret %EnumNodeField.580243* %.30

.4.endif:                                         ; preds = %.4
  ret %EnumNodeField.580243* null
}

define i1 @"Array<EnumNodeField>___eq__"(%"Array<EnumNodeField>.580247"* %.1, %"Array<EnumNodeField>.580247"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<EnumNodeField>_vtable_ty.580248"*, %"Array<EnumNodeField>_vtable_ty.580248"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.580248", %"Array<EnumNodeField>_vtable_ty.580248"* %.28, i64 0, i32 5
  %.30 = load %EnumNodeField.580243* (%"Array<EnumNodeField>.580247"*, i64)*, %EnumNodeField.580243* (%"Array<EnumNodeField>.580247"*, i64)** %.29, align 8
  %.31 = call %EnumNodeField.580243* %.30(%"Array<EnumNodeField>.580247"* %.1, i64 %storemerge3)
  %.35 = load %"Array<EnumNodeField>_vtable_ty.580248"*, %"Array<EnumNodeField>_vtable_ty.580248"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.580248", %"Array<EnumNodeField>_vtable_ty.580248"* %.35, i64 0, i32 5
  %.37 = load %EnumNodeField.580243* (%"Array<EnumNodeField>.580247"*, i64)*, %EnumNodeField.580243* (%"Array<EnumNodeField>.580247"*, i64)** %.36, align 8
  %.38 = call %EnumNodeField.580243* %.37(%"Array<EnumNodeField>.580247"* %.2, i64 %storemerge3)
  %0 = ptrtoint %EnumNodeField.580243* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %EnumNodeField.580243* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<EnumNodeField>___in__"(%"Array<EnumNodeField>.580247"* %.1, %EnumNodeField.580243* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %EnumNodeField.580243* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<EnumNodeField>_vtable_ty.580248"*, %"Array<EnumNodeField>_vtable_ty.580248"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.580248", %"Array<EnumNodeField>_vtable_ty.580248"* %.19, i64 0, i32 5
  %.21 = load %EnumNodeField.580243* (%"Array<EnumNodeField>.580247"*, i64)*, %EnumNodeField.580243* (%"Array<EnumNodeField>.580247"*, i64)** %.20, align 8
  %.22 = call %EnumNodeField.580243* %.21(%"Array<EnumNodeField>.580247"* %.1, i64 %storemerge4)
  %1 = ptrtoint %EnumNodeField.580243* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<EnumNodeField>_find"(%"Array<EnumNodeField>.580247"* nocapture readonly %.1, %EnumNodeField.580243* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 1
  %.19 = load %EnumNodeField.580243**, %EnumNodeField.580243*** %.18, align 8
  %0 = ptrtoint %EnumNodeField.580243* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %EnumNodeField.580243*, %EnumNodeField.580243** %.19, i64 %storemerge5
  %1 = bitcast %EnumNodeField.580243** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<EnumNodeField>_join"(%"Array<EnumNodeField>.580247"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.156, i64 0, i64 0), i64 14)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.156, i64 0, i64 0), i64 14)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<EnumNodeField>___as_string__"(%"Array<EnumNodeField>.580247"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.1, i64 0, i32 0
  %.7 = load %"Array<EnumNodeField>_vtable_ty.580248"*, %"Array<EnumNodeField>_vtable_ty.580248"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.580248", %"Array<EnumNodeField>_vtable_ty.580248"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<EnumNodeField>.580247"*, %string.580129*)*, %string.580129* (%"Array<EnumNodeField>.580247"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<EnumNodeField>.580247"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @EnumNode_constructor(%EnumNode.580245* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<EnumNodeField>_vtable_ty.580248"**
  store %"Array<EnumNodeField>_vtable_ty.580248"* @"Array<EnumNodeField>_vtable_data", %"Array<EnumNodeField>_vtable_ty.580248"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %EnumNode.580245, %EnumNode.580245* %.1, i64 0, i32 2
  %3 = bitcast %"Array<EnumNodeField>.580247"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<IdentifierToken>_constructor"(%"Array<IdentifierToken>.580251"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 1
  %0 = bitcast %IdentifierToken.580155*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<IdentifierToken>_resize"(%"Array<IdentifierToken>.580251"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 1
  %0 = bitcast %IdentifierToken.580155*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<IdentifierToken>_swap"(%"Array<IdentifierToken>.580251"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 1
  %.12 = load %IdentifierToken.580155**, %IdentifierToken.580155*** %.11, align 8
  %.13 = getelementptr inbounds %IdentifierToken.580155*, %IdentifierToken.580155** %.12, i64 %.2
  %0 = bitcast %IdentifierToken.580155** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %IdentifierToken.580155*, %IdentifierToken.580155** %.12, i64 %.3
  %1 = bitcast %IdentifierToken.580155** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %IdentifierToken.580155**, %IdentifierToken.580155*** %.11, align 8
  %.33 = getelementptr inbounds %IdentifierToken.580155*, %IdentifierToken.580155** %.31, i64 %.3
  %2 = bitcast %IdentifierToken.580155** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<IdentifierToken>___sl__"(%"Array<IdentifierToken>.580251"* %.1, %IdentifierToken.580155* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 0
  %.17 = load %"Array<IdentifierToken>_vtable_ty.580252"*, %"Array<IdentifierToken>_vtable_ty.580252"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.580252", %"Array<IdentifierToken>_vtable_ty.580252"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<IdentifierToken>.580251"*)*, void (%"Array<IdentifierToken>.580251"*)** %.18, align 8
  call void %.19(%"Array<IdentifierToken>.580251"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 1
  %.31 = load %IdentifierToken.580155**, %IdentifierToken.580155*** %.30, align 8
  %.33 = getelementptr inbounds %IdentifierToken.580155*, %IdentifierToken.580155** %.31, i64 %.24
  store %IdentifierToken.580155* %.2, %IdentifierToken.580155** %.33, align 8
  ret void
}

define void @"Array<IdentifierToken>___setitem__"(%"Array<IdentifierToken>.580251"* nocapture readonly %.1, i64 %.2, %IdentifierToken.580155* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 1
  %.30 = load %IdentifierToken.580155**, %IdentifierToken.580155*** %.29, align 8
  %.32 = getelementptr inbounds %IdentifierToken.580155*, %IdentifierToken.580155** %.30, i64 %.2
  store %IdentifierToken.580155* %.3, %IdentifierToken.580155** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<IdentifierToken>_append"(%"Array<IdentifierToken>.580251"* %.1, %IdentifierToken.580155* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 0
  %.9 = load %"Array<IdentifierToken>_vtable_ty.580252"*, %"Array<IdentifierToken>_vtable_ty.580252"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.580252", %"Array<IdentifierToken>_vtable_ty.580252"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)*, void (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)** %.10, align 8
  call void %.11(%"Array<IdentifierToken>.580251"* %.1, %IdentifierToken.580155* %.2)
  ret void
}

define %IdentifierToken.580155* @"Array<IdentifierToken>___getitem__"(%"Array<IdentifierToken>.580251"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 1
  %.28 = load %IdentifierToken.580155**, %IdentifierToken.580155*** %.27, align 8
  %.29 = getelementptr inbounds %IdentifierToken.580155*, %IdentifierToken.580155** %.28, i64 %.2
  %.30 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.29, align 8
  ret %IdentifierToken.580155* %.30

.4.endif:                                         ; preds = %.4
  ret %IdentifierToken.580155* null
}

define i1 @"Array<IdentifierToken>___eq__"(%"Array<IdentifierToken>.580251"* %.1, %"Array<IdentifierToken>.580251"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<IdentifierToken>_vtable_ty.580252"*, %"Array<IdentifierToken>_vtable_ty.580252"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.580252", %"Array<IdentifierToken>_vtable_ty.580252"* %.28, i64 0, i32 5
  %.30 = load %IdentifierToken.580155* (%"Array<IdentifierToken>.580251"*, i64)*, %IdentifierToken.580155* (%"Array<IdentifierToken>.580251"*, i64)** %.29, align 8
  %.31 = call %IdentifierToken.580155* %.30(%"Array<IdentifierToken>.580251"* %.1, i64 %storemerge3)
  %.35 = load %"Array<IdentifierToken>_vtable_ty.580252"*, %"Array<IdentifierToken>_vtable_ty.580252"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.580252", %"Array<IdentifierToken>_vtable_ty.580252"* %.35, i64 0, i32 5
  %.37 = load %IdentifierToken.580155* (%"Array<IdentifierToken>.580251"*, i64)*, %IdentifierToken.580155* (%"Array<IdentifierToken>.580251"*, i64)** %.36, align 8
  %.38 = call %IdentifierToken.580155* %.37(%"Array<IdentifierToken>.580251"* %.2, i64 %storemerge3)
  %0 = ptrtoint %IdentifierToken.580155* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %IdentifierToken.580155* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<IdentifierToken>___in__"(%"Array<IdentifierToken>.580251"* %.1, %IdentifierToken.580155* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %IdentifierToken.580155* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<IdentifierToken>_vtable_ty.580252"*, %"Array<IdentifierToken>_vtable_ty.580252"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.580252", %"Array<IdentifierToken>_vtable_ty.580252"* %.19, i64 0, i32 5
  %.21 = load %IdentifierToken.580155* (%"Array<IdentifierToken>.580251"*, i64)*, %IdentifierToken.580155* (%"Array<IdentifierToken>.580251"*, i64)** %.20, align 8
  %.22 = call %IdentifierToken.580155* %.21(%"Array<IdentifierToken>.580251"* %.1, i64 %storemerge4)
  %1 = ptrtoint %IdentifierToken.580155* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<IdentifierToken>_find"(%"Array<IdentifierToken>.580251"* nocapture readonly %.1, %IdentifierToken.580155* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 1
  %.19 = load %IdentifierToken.580155**, %IdentifierToken.580155*** %.18, align 8
  %0 = ptrtoint %IdentifierToken.580155* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %IdentifierToken.580155*, %IdentifierToken.580155** %.19, i64 %storemerge5
  %1 = bitcast %IdentifierToken.580155** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<IdentifierToken>_join"(%"Array<IdentifierToken>.580251"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.157, i64 0, i64 0), i64 16)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.157, i64 0, i64 0), i64 16)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<IdentifierToken>___as_string__"(%"Array<IdentifierToken>.580251"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.1, i64 0, i32 0
  %.7 = load %"Array<IdentifierToken>_vtable_ty.580252"*, %"Array<IdentifierToken>_vtable_ty.580252"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.580252", %"Array<IdentifierToken>_vtable_ty.580252"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<IdentifierToken>.580251"*, %string.580129*)*, %string.580129* (%"Array<IdentifierToken>.580251"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<IdentifierToken>.580251"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @ImportNode_constructor(%ImportNode.580249* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<IdentifierToken>_vtable_ty.580252"**
  store %"Array<IdentifierToken>_vtable_ty.580252"* @"Array<IdentifierToken>_vtable_data", %"Array<IdentifierToken>_vtable_ty.580252"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %ImportNode.580249, %ImportNode.580249* %.1, i64 0, i32 1
  %3 = bitcast %"Array<IdentifierToken>.580251"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<FunctionDeclarationNode>_constructor"(%"Array<FunctionDeclarationNode>.580257"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionDeclarationNode.580225*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FunctionDeclarationNode>_resize"(%"Array<FunctionDeclarationNode>.580257"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionDeclarationNode.580225*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<FunctionDeclarationNode>_swap"(%"Array<FunctionDeclarationNode>.580257"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 1
  %.12 = load %FunctionDeclarationNode.580225**, %FunctionDeclarationNode.580225*** %.11, align 8
  %.13 = getelementptr inbounds %FunctionDeclarationNode.580225*, %FunctionDeclarationNode.580225** %.12, i64 %.2
  %0 = bitcast %FunctionDeclarationNode.580225** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %FunctionDeclarationNode.580225*, %FunctionDeclarationNode.580225** %.12, i64 %.3
  %1 = bitcast %FunctionDeclarationNode.580225** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %FunctionDeclarationNode.580225**, %FunctionDeclarationNode.580225*** %.11, align 8
  %.33 = getelementptr inbounds %FunctionDeclarationNode.580225*, %FunctionDeclarationNode.580225** %.31, i64 %.3
  %2 = bitcast %FunctionDeclarationNode.580225** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<FunctionDeclarationNode>___sl__"(%"Array<FunctionDeclarationNode>.580257"* %.1, %FunctionDeclarationNode.580225* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 0
  %.17 = load %"Array<FunctionDeclarationNode>_vtable_ty.580264"*, %"Array<FunctionDeclarationNode>_vtable_ty.580264"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.580264", %"Array<FunctionDeclarationNode>_vtable_ty.580264"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FunctionDeclarationNode>.580257"*)*, void (%"Array<FunctionDeclarationNode>.580257"*)** %.18, align 8
  call void %.19(%"Array<FunctionDeclarationNode>.580257"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 1
  %.31 = load %FunctionDeclarationNode.580225**, %FunctionDeclarationNode.580225*** %.30, align 8
  %.33 = getelementptr inbounds %FunctionDeclarationNode.580225*, %FunctionDeclarationNode.580225** %.31, i64 %.24
  store %FunctionDeclarationNode.580225* %.2, %FunctionDeclarationNode.580225** %.33, align 8
  ret void
}

define void @"Array<FunctionDeclarationNode>___setitem__"(%"Array<FunctionDeclarationNode>.580257"* nocapture readonly %.1, i64 %.2, %FunctionDeclarationNode.580225* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 1
  %.30 = load %FunctionDeclarationNode.580225**, %FunctionDeclarationNode.580225*** %.29, align 8
  %.32 = getelementptr inbounds %FunctionDeclarationNode.580225*, %FunctionDeclarationNode.580225** %.30, i64 %.2
  store %FunctionDeclarationNode.580225* %.3, %FunctionDeclarationNode.580225** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FunctionDeclarationNode>_append"(%"Array<FunctionDeclarationNode>.580257"* %.1, %FunctionDeclarationNode.580225* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 0
  %.9 = load %"Array<FunctionDeclarationNode>_vtable_ty.580264"*, %"Array<FunctionDeclarationNode>_vtable_ty.580264"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.580264", %"Array<FunctionDeclarationNode>_vtable_ty.580264"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)*, void (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)** %.10, align 8
  call void %.11(%"Array<FunctionDeclarationNode>.580257"* %.1, %FunctionDeclarationNode.580225* %.2)
  ret void
}

define %FunctionDeclarationNode.580225* @"Array<FunctionDeclarationNode>___getitem__"(%"Array<FunctionDeclarationNode>.580257"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 1
  %.28 = load %FunctionDeclarationNode.580225**, %FunctionDeclarationNode.580225*** %.27, align 8
  %.29 = getelementptr inbounds %FunctionDeclarationNode.580225*, %FunctionDeclarationNode.580225** %.28, i64 %.2
  %.30 = load %FunctionDeclarationNode.580225*, %FunctionDeclarationNode.580225** %.29, align 8
  ret %FunctionDeclarationNode.580225* %.30

.4.endif:                                         ; preds = %.4
  ret %FunctionDeclarationNode.580225* null
}

define i1 @"Array<FunctionDeclarationNode>___eq__"(%"Array<FunctionDeclarationNode>.580257"* %.1, %"Array<FunctionDeclarationNode>.580257"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FunctionDeclarationNode>_vtable_ty.580264"*, %"Array<FunctionDeclarationNode>_vtable_ty.580264"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.580264", %"Array<FunctionDeclarationNode>_vtable_ty.580264"* %.28, i64 0, i32 5
  %.30 = load %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)*, %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)** %.29, align 8
  %.31 = call %FunctionDeclarationNode.580225* %.30(%"Array<FunctionDeclarationNode>.580257"* %.1, i64 %storemerge3)
  %.35 = load %"Array<FunctionDeclarationNode>_vtable_ty.580264"*, %"Array<FunctionDeclarationNode>_vtable_ty.580264"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.580264", %"Array<FunctionDeclarationNode>_vtable_ty.580264"* %.35, i64 0, i32 5
  %.37 = load %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)*, %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)** %.36, align 8
  %.38 = call %FunctionDeclarationNode.580225* %.37(%"Array<FunctionDeclarationNode>.580257"* %.2, i64 %storemerge3)
  %0 = ptrtoint %FunctionDeclarationNode.580225* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FunctionDeclarationNode.580225* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FunctionDeclarationNode>___in__"(%"Array<FunctionDeclarationNode>.580257"* %.1, %FunctionDeclarationNode.580225* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FunctionDeclarationNode.580225* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FunctionDeclarationNode>_vtable_ty.580264"*, %"Array<FunctionDeclarationNode>_vtable_ty.580264"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.580264", %"Array<FunctionDeclarationNode>_vtable_ty.580264"* %.19, i64 0, i32 5
  %.21 = load %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)*, %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)** %.20, align 8
  %.22 = call %FunctionDeclarationNode.580225* %.21(%"Array<FunctionDeclarationNode>.580257"* %.1, i64 %storemerge4)
  %1 = ptrtoint %FunctionDeclarationNode.580225* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FunctionDeclarationNode>_find"(%"Array<FunctionDeclarationNode>.580257"* nocapture readonly %.1, %FunctionDeclarationNode.580225* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 1
  %.19 = load %FunctionDeclarationNode.580225**, %FunctionDeclarationNode.580225*** %.18, align 8
  %0 = ptrtoint %FunctionDeclarationNode.580225* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FunctionDeclarationNode.580225*, %FunctionDeclarationNode.580225** %.19, i64 %storemerge5
  %1 = bitcast %FunctionDeclarationNode.580225** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<FunctionDeclarationNode>_join"(%"Array<FunctionDeclarationNode>.580257"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.158, i64 0, i64 0), i64 24)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.158, i64 0, i64 0), i64 24)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<FunctionDeclarationNode>___as_string__"(%"Array<FunctionDeclarationNode>.580257"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.1, i64 0, i32 0
  %.7 = load %"Array<FunctionDeclarationNode>_vtable_ty.580264"*, %"Array<FunctionDeclarationNode>_vtable_ty.580264"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.580264", %"Array<FunctionDeclarationNode>_vtable_ty.580264"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<FunctionDeclarationNode>.580257"*, %string.580129*)*, %string.580129* (%"Array<FunctionDeclarationNode>.580257"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<FunctionDeclarationNode>.580257"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ClassDeclarationNode>_constructor"(%"Array<ClassDeclarationNode>.580258"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 1
  %0 = bitcast %ClassDeclarationNode.580235*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ClassDeclarationNode>_resize"(%"Array<ClassDeclarationNode>.580258"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 1
  %0 = bitcast %ClassDeclarationNode.580235*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<ClassDeclarationNode>_swap"(%"Array<ClassDeclarationNode>.580258"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 1
  %.12 = load %ClassDeclarationNode.580235**, %ClassDeclarationNode.580235*** %.11, align 8
  %.13 = getelementptr inbounds %ClassDeclarationNode.580235*, %ClassDeclarationNode.580235** %.12, i64 %.2
  %0 = bitcast %ClassDeclarationNode.580235** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %ClassDeclarationNode.580235*, %ClassDeclarationNode.580235** %.12, i64 %.3
  %1 = bitcast %ClassDeclarationNode.580235** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %ClassDeclarationNode.580235**, %ClassDeclarationNode.580235*** %.11, align 8
  %.33 = getelementptr inbounds %ClassDeclarationNode.580235*, %ClassDeclarationNode.580235** %.31, i64 %.3
  %2 = bitcast %ClassDeclarationNode.580235** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<ClassDeclarationNode>___sl__"(%"Array<ClassDeclarationNode>.580258"* %.1, %ClassDeclarationNode.580235* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 0
  %.17 = load %"Array<ClassDeclarationNode>_vtable_ty.580265"*, %"Array<ClassDeclarationNode>_vtable_ty.580265"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.580265", %"Array<ClassDeclarationNode>_vtable_ty.580265"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ClassDeclarationNode>.580258"*)*, void (%"Array<ClassDeclarationNode>.580258"*)** %.18, align 8
  call void %.19(%"Array<ClassDeclarationNode>.580258"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 1
  %.31 = load %ClassDeclarationNode.580235**, %ClassDeclarationNode.580235*** %.30, align 8
  %.33 = getelementptr inbounds %ClassDeclarationNode.580235*, %ClassDeclarationNode.580235** %.31, i64 %.24
  store %ClassDeclarationNode.580235* %.2, %ClassDeclarationNode.580235** %.33, align 8
  ret void
}

define void @"Array<ClassDeclarationNode>___setitem__"(%"Array<ClassDeclarationNode>.580258"* nocapture readonly %.1, i64 %.2, %ClassDeclarationNode.580235* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 1
  %.30 = load %ClassDeclarationNode.580235**, %ClassDeclarationNode.580235*** %.29, align 8
  %.32 = getelementptr inbounds %ClassDeclarationNode.580235*, %ClassDeclarationNode.580235** %.30, i64 %.2
  store %ClassDeclarationNode.580235* %.3, %ClassDeclarationNode.580235** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassDeclarationNode>_append"(%"Array<ClassDeclarationNode>.580258"* %.1, %ClassDeclarationNode.580235* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 0
  %.9 = load %"Array<ClassDeclarationNode>_vtable_ty.580265"*, %"Array<ClassDeclarationNode>_vtable_ty.580265"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.580265", %"Array<ClassDeclarationNode>_vtable_ty.580265"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)*, void (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)** %.10, align 8
  call void %.11(%"Array<ClassDeclarationNode>.580258"* %.1, %ClassDeclarationNode.580235* %.2)
  ret void
}

define %ClassDeclarationNode.580235* @"Array<ClassDeclarationNode>___getitem__"(%"Array<ClassDeclarationNode>.580258"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 1
  %.28 = load %ClassDeclarationNode.580235**, %ClassDeclarationNode.580235*** %.27, align 8
  %.29 = getelementptr inbounds %ClassDeclarationNode.580235*, %ClassDeclarationNode.580235** %.28, i64 %.2
  %.30 = load %ClassDeclarationNode.580235*, %ClassDeclarationNode.580235** %.29, align 8
  ret %ClassDeclarationNode.580235* %.30

.4.endif:                                         ; preds = %.4
  ret %ClassDeclarationNode.580235* null
}

define i1 @"Array<ClassDeclarationNode>___eq__"(%"Array<ClassDeclarationNode>.580258"* %.1, %"Array<ClassDeclarationNode>.580258"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ClassDeclarationNode>_vtable_ty.580265"*, %"Array<ClassDeclarationNode>_vtable_ty.580265"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.580265", %"Array<ClassDeclarationNode>_vtable_ty.580265"* %.28, i64 0, i32 5
  %.30 = load %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)*, %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)** %.29, align 8
  %.31 = call %ClassDeclarationNode.580235* %.30(%"Array<ClassDeclarationNode>.580258"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ClassDeclarationNode>_vtable_ty.580265"*, %"Array<ClassDeclarationNode>_vtable_ty.580265"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.580265", %"Array<ClassDeclarationNode>_vtable_ty.580265"* %.35, i64 0, i32 5
  %.37 = load %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)*, %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)** %.36, align 8
  %.38 = call %ClassDeclarationNode.580235* %.37(%"Array<ClassDeclarationNode>.580258"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ClassDeclarationNode.580235* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ClassDeclarationNode.580235* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ClassDeclarationNode>___in__"(%"Array<ClassDeclarationNode>.580258"* %.1, %ClassDeclarationNode.580235* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ClassDeclarationNode.580235* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ClassDeclarationNode>_vtable_ty.580265"*, %"Array<ClassDeclarationNode>_vtable_ty.580265"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.580265", %"Array<ClassDeclarationNode>_vtable_ty.580265"* %.19, i64 0, i32 5
  %.21 = load %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)*, %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)** %.20, align 8
  %.22 = call %ClassDeclarationNode.580235* %.21(%"Array<ClassDeclarationNode>.580258"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ClassDeclarationNode.580235* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ClassDeclarationNode>_find"(%"Array<ClassDeclarationNode>.580258"* nocapture readonly %.1, %ClassDeclarationNode.580235* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 1
  %.19 = load %ClassDeclarationNode.580235**, %ClassDeclarationNode.580235*** %.18, align 8
  %0 = ptrtoint %ClassDeclarationNode.580235* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ClassDeclarationNode.580235*, %ClassDeclarationNode.580235** %.19, i64 %storemerge5
  %1 = bitcast %ClassDeclarationNode.580235** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<ClassDeclarationNode>_join"(%"Array<ClassDeclarationNode>.580258"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.159, i64 0, i64 0), i64 21)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.159, i64 0, i64 0), i64 21)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<ClassDeclarationNode>___as_string__"(%"Array<ClassDeclarationNode>.580258"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.1, i64 0, i32 0
  %.7 = load %"Array<ClassDeclarationNode>_vtable_ty.580265"*, %"Array<ClassDeclarationNode>_vtable_ty.580265"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.580265", %"Array<ClassDeclarationNode>_vtable_ty.580265"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<ClassDeclarationNode>.580258"*, %string.580129*)*, %string.580129* (%"Array<ClassDeclarationNode>.580258"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<ClassDeclarationNode>.580258"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<EnumNode>_constructor"(%"Array<EnumNode>.580259"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNode.580245*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<EnumNode>_resize"(%"Array<EnumNode>.580259"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNode.580245*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<EnumNode>_swap"(%"Array<EnumNode>.580259"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 1
  %.12 = load %EnumNode.580245**, %EnumNode.580245*** %.11, align 8
  %.13 = getelementptr inbounds %EnumNode.580245*, %EnumNode.580245** %.12, i64 %.2
  %0 = bitcast %EnumNode.580245** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %EnumNode.580245*, %EnumNode.580245** %.12, i64 %.3
  %1 = bitcast %EnumNode.580245** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %EnumNode.580245**, %EnumNode.580245*** %.11, align 8
  %.33 = getelementptr inbounds %EnumNode.580245*, %EnumNode.580245** %.31, i64 %.3
  %2 = bitcast %EnumNode.580245** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<EnumNode>___sl__"(%"Array<EnumNode>.580259"* %.1, %EnumNode.580245* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 0
  %.17 = load %"Array<EnumNode>_vtable_ty.580266"*, %"Array<EnumNode>_vtable_ty.580266"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.580266", %"Array<EnumNode>_vtable_ty.580266"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<EnumNode>.580259"*)*, void (%"Array<EnumNode>.580259"*)** %.18, align 8
  call void %.19(%"Array<EnumNode>.580259"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 1
  %.31 = load %EnumNode.580245**, %EnumNode.580245*** %.30, align 8
  %.33 = getelementptr inbounds %EnumNode.580245*, %EnumNode.580245** %.31, i64 %.24
  store %EnumNode.580245* %.2, %EnumNode.580245** %.33, align 8
  ret void
}

define void @"Array<EnumNode>___setitem__"(%"Array<EnumNode>.580259"* nocapture readonly %.1, i64 %.2, %EnumNode.580245* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 1
  %.30 = load %EnumNode.580245**, %EnumNode.580245*** %.29, align 8
  %.32 = getelementptr inbounds %EnumNode.580245*, %EnumNode.580245** %.30, i64 %.2
  store %EnumNode.580245* %.3, %EnumNode.580245** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumNode>_append"(%"Array<EnumNode>.580259"* %.1, %EnumNode.580245* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 0
  %.9 = load %"Array<EnumNode>_vtable_ty.580266"*, %"Array<EnumNode>_vtable_ty.580266"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.580266", %"Array<EnumNode>_vtable_ty.580266"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<EnumNode>.580259"*, %EnumNode.580245*)*, void (%"Array<EnumNode>.580259"*, %EnumNode.580245*)** %.10, align 8
  call void %.11(%"Array<EnumNode>.580259"* %.1, %EnumNode.580245* %.2)
  ret void
}

define %EnumNode.580245* @"Array<EnumNode>___getitem__"(%"Array<EnumNode>.580259"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 1
  %.28 = load %EnumNode.580245**, %EnumNode.580245*** %.27, align 8
  %.29 = getelementptr inbounds %EnumNode.580245*, %EnumNode.580245** %.28, i64 %.2
  %.30 = load %EnumNode.580245*, %EnumNode.580245** %.29, align 8
  ret %EnumNode.580245* %.30

.4.endif:                                         ; preds = %.4
  ret %EnumNode.580245* null
}

define i1 @"Array<EnumNode>___eq__"(%"Array<EnumNode>.580259"* %.1, %"Array<EnumNode>.580259"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<EnumNode>_vtable_ty.580266"*, %"Array<EnumNode>_vtable_ty.580266"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.580266", %"Array<EnumNode>_vtable_ty.580266"* %.28, i64 0, i32 5
  %.30 = load %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)*, %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)** %.29, align 8
  %.31 = call %EnumNode.580245* %.30(%"Array<EnumNode>.580259"* %.1, i64 %storemerge3)
  %.35 = load %"Array<EnumNode>_vtable_ty.580266"*, %"Array<EnumNode>_vtable_ty.580266"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.580266", %"Array<EnumNode>_vtable_ty.580266"* %.35, i64 0, i32 5
  %.37 = load %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)*, %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)** %.36, align 8
  %.38 = call %EnumNode.580245* %.37(%"Array<EnumNode>.580259"* %.2, i64 %storemerge3)
  %0 = ptrtoint %EnumNode.580245* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %EnumNode.580245* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<EnumNode>___in__"(%"Array<EnumNode>.580259"* %.1, %EnumNode.580245* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %EnumNode.580245* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<EnumNode>_vtable_ty.580266"*, %"Array<EnumNode>_vtable_ty.580266"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.580266", %"Array<EnumNode>_vtable_ty.580266"* %.19, i64 0, i32 5
  %.21 = load %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)*, %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)** %.20, align 8
  %.22 = call %EnumNode.580245* %.21(%"Array<EnumNode>.580259"* %.1, i64 %storemerge4)
  %1 = ptrtoint %EnumNode.580245* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<EnumNode>_find"(%"Array<EnumNode>.580259"* nocapture readonly %.1, %EnumNode.580245* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 1
  %.19 = load %EnumNode.580245**, %EnumNode.580245*** %.18, align 8
  %0 = ptrtoint %EnumNode.580245* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %EnumNode.580245*, %EnumNode.580245** %.19, i64 %storemerge5
  %1 = bitcast %EnumNode.580245** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<EnumNode>_join"(%"Array<EnumNode>.580259"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.160, i64 0, i64 0), i64 9)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.160, i64 0, i64 0), i64 9)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<EnumNode>___as_string__"(%"Array<EnumNode>.580259"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.1, i64 0, i32 0
  %.7 = load %"Array<EnumNode>_vtable_ty.580266"*, %"Array<EnumNode>_vtable_ty.580266"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.580266", %"Array<EnumNode>_vtable_ty.580266"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<EnumNode>.580259"*, %string.580129*)*, %string.580129* (%"Array<EnumNode>.580259"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<EnumNode>.580259"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ImportNode>_constructor"(%"Array<ImportNode>.580260"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 1
  %0 = bitcast %ImportNode.580249*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ImportNode>_resize"(%"Array<ImportNode>.580260"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 1
  %0 = bitcast %ImportNode.580249*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<ImportNode>_swap"(%"Array<ImportNode>.580260"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 1
  %.12 = load %ImportNode.580249**, %ImportNode.580249*** %.11, align 8
  %.13 = getelementptr inbounds %ImportNode.580249*, %ImportNode.580249** %.12, i64 %.2
  %0 = bitcast %ImportNode.580249** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %ImportNode.580249*, %ImportNode.580249** %.12, i64 %.3
  %1 = bitcast %ImportNode.580249** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %ImportNode.580249**, %ImportNode.580249*** %.11, align 8
  %.33 = getelementptr inbounds %ImportNode.580249*, %ImportNode.580249** %.31, i64 %.3
  %2 = bitcast %ImportNode.580249** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<ImportNode>___sl__"(%"Array<ImportNode>.580260"* %.1, %ImportNode.580249* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 0
  %.17 = load %"Array<ImportNode>_vtable_ty.580267"*, %"Array<ImportNode>_vtable_ty.580267"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.580267", %"Array<ImportNode>_vtable_ty.580267"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ImportNode>.580260"*)*, void (%"Array<ImportNode>.580260"*)** %.18, align 8
  call void %.19(%"Array<ImportNode>.580260"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 1
  %.31 = load %ImportNode.580249**, %ImportNode.580249*** %.30, align 8
  %.33 = getelementptr inbounds %ImportNode.580249*, %ImportNode.580249** %.31, i64 %.24
  store %ImportNode.580249* %.2, %ImportNode.580249** %.33, align 8
  ret void
}

define void @"Array<ImportNode>___setitem__"(%"Array<ImportNode>.580260"* nocapture readonly %.1, i64 %.2, %ImportNode.580249* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 1
  %.30 = load %ImportNode.580249**, %ImportNode.580249*** %.29, align 8
  %.32 = getelementptr inbounds %ImportNode.580249*, %ImportNode.580249** %.30, i64 %.2
  store %ImportNode.580249* %.3, %ImportNode.580249** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ImportNode>_append"(%"Array<ImportNode>.580260"* %.1, %ImportNode.580249* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 0
  %.9 = load %"Array<ImportNode>_vtable_ty.580267"*, %"Array<ImportNode>_vtable_ty.580267"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.580267", %"Array<ImportNode>_vtable_ty.580267"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ImportNode>.580260"*, %ImportNode.580249*)*, void (%"Array<ImportNode>.580260"*, %ImportNode.580249*)** %.10, align 8
  call void %.11(%"Array<ImportNode>.580260"* %.1, %ImportNode.580249* %.2)
  ret void
}

define %ImportNode.580249* @"Array<ImportNode>___getitem__"(%"Array<ImportNode>.580260"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 1
  %.28 = load %ImportNode.580249**, %ImportNode.580249*** %.27, align 8
  %.29 = getelementptr inbounds %ImportNode.580249*, %ImportNode.580249** %.28, i64 %.2
  %.30 = load %ImportNode.580249*, %ImportNode.580249** %.29, align 8
  ret %ImportNode.580249* %.30

.4.endif:                                         ; preds = %.4
  ret %ImportNode.580249* null
}

define i1 @"Array<ImportNode>___eq__"(%"Array<ImportNode>.580260"* %.1, %"Array<ImportNode>.580260"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ImportNode>_vtable_ty.580267"*, %"Array<ImportNode>_vtable_ty.580267"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.580267", %"Array<ImportNode>_vtable_ty.580267"* %.28, i64 0, i32 5
  %.30 = load %ImportNode.580249* (%"Array<ImportNode>.580260"*, i64)*, %ImportNode.580249* (%"Array<ImportNode>.580260"*, i64)** %.29, align 8
  %.31 = call %ImportNode.580249* %.30(%"Array<ImportNode>.580260"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ImportNode>_vtable_ty.580267"*, %"Array<ImportNode>_vtable_ty.580267"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.580267", %"Array<ImportNode>_vtable_ty.580267"* %.35, i64 0, i32 5
  %.37 = load %ImportNode.580249* (%"Array<ImportNode>.580260"*, i64)*, %ImportNode.580249* (%"Array<ImportNode>.580260"*, i64)** %.36, align 8
  %.38 = call %ImportNode.580249* %.37(%"Array<ImportNode>.580260"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ImportNode.580249* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ImportNode.580249* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ImportNode>___in__"(%"Array<ImportNode>.580260"* %.1, %ImportNode.580249* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ImportNode.580249* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ImportNode>_vtable_ty.580267"*, %"Array<ImportNode>_vtable_ty.580267"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.580267", %"Array<ImportNode>_vtable_ty.580267"* %.19, i64 0, i32 5
  %.21 = load %ImportNode.580249* (%"Array<ImportNode>.580260"*, i64)*, %ImportNode.580249* (%"Array<ImportNode>.580260"*, i64)** %.20, align 8
  %.22 = call %ImportNode.580249* %.21(%"Array<ImportNode>.580260"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ImportNode.580249* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ImportNode>_find"(%"Array<ImportNode>.580260"* nocapture readonly %.1, %ImportNode.580249* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 1
  %.19 = load %ImportNode.580249**, %ImportNode.580249*** %.18, align 8
  %0 = ptrtoint %ImportNode.580249* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ImportNode.580249*, %ImportNode.580249** %.19, i64 %storemerge5
  %1 = bitcast %ImportNode.580249** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<ImportNode>_join"(%"Array<ImportNode>.580260"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.161, i64 0, i64 0), i64 11)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.161, i64 0, i64 0), i64 11)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<ImportNode>___as_string__"(%"Array<ImportNode>.580260"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.1, i64 0, i32 0
  %.7 = load %"Array<ImportNode>_vtable_ty.580267"*, %"Array<ImportNode>_vtable_ty.580267"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.580267", %"Array<ImportNode>_vtable_ty.580267"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<ImportNode>.580260"*, %string.580129*)*, %string.580129* (%"Array<ImportNode>.580260"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<ImportNode>.580260"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ConstDeclarationStatement>_constructor"(%"Array<ConstDeclarationStatement>.580261"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclarationStatement.580221*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ConstDeclarationStatement>_resize"(%"Array<ConstDeclarationStatement>.580261"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclarationStatement.580221*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<ConstDeclarationStatement>_swap"(%"Array<ConstDeclarationStatement>.580261"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 1
  %.12 = load %ConstDeclarationStatement.580221**, %ConstDeclarationStatement.580221*** %.11, align 8
  %.13 = getelementptr inbounds %ConstDeclarationStatement.580221*, %ConstDeclarationStatement.580221** %.12, i64 %.2
  %0 = bitcast %ConstDeclarationStatement.580221** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %ConstDeclarationStatement.580221*, %ConstDeclarationStatement.580221** %.12, i64 %.3
  %1 = bitcast %ConstDeclarationStatement.580221** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %ConstDeclarationStatement.580221**, %ConstDeclarationStatement.580221*** %.11, align 8
  %.33 = getelementptr inbounds %ConstDeclarationStatement.580221*, %ConstDeclarationStatement.580221** %.31, i64 %.3
  %2 = bitcast %ConstDeclarationStatement.580221** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<ConstDeclarationStatement>___sl__"(%"Array<ConstDeclarationStatement>.580261"* %.1, %ConstDeclarationStatement.580221* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 0
  %.17 = load %"Array<ConstDeclarationStatement>_vtable_ty.580268"*, %"Array<ConstDeclarationStatement>_vtable_ty.580268"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.580268", %"Array<ConstDeclarationStatement>_vtable_ty.580268"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ConstDeclarationStatement>.580261"*)*, void (%"Array<ConstDeclarationStatement>.580261"*)** %.18, align 8
  call void %.19(%"Array<ConstDeclarationStatement>.580261"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 1
  %.31 = load %ConstDeclarationStatement.580221**, %ConstDeclarationStatement.580221*** %.30, align 8
  %.33 = getelementptr inbounds %ConstDeclarationStatement.580221*, %ConstDeclarationStatement.580221** %.31, i64 %.24
  store %ConstDeclarationStatement.580221* %.2, %ConstDeclarationStatement.580221** %.33, align 8
  ret void
}

define void @"Array<ConstDeclarationStatement>___setitem__"(%"Array<ConstDeclarationStatement>.580261"* nocapture readonly %.1, i64 %.2, %ConstDeclarationStatement.580221* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 1
  %.30 = load %ConstDeclarationStatement.580221**, %ConstDeclarationStatement.580221*** %.29, align 8
  %.32 = getelementptr inbounds %ConstDeclarationStatement.580221*, %ConstDeclarationStatement.580221** %.30, i64 %.2
  store %ConstDeclarationStatement.580221* %.3, %ConstDeclarationStatement.580221** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ConstDeclarationStatement>_append"(%"Array<ConstDeclarationStatement>.580261"* %.1, %ConstDeclarationStatement.580221* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 0
  %.9 = load %"Array<ConstDeclarationStatement>_vtable_ty.580268"*, %"Array<ConstDeclarationStatement>_vtable_ty.580268"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.580268", %"Array<ConstDeclarationStatement>_vtable_ty.580268"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)*, void (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)** %.10, align 8
  call void %.11(%"Array<ConstDeclarationStatement>.580261"* %.1, %ConstDeclarationStatement.580221* %.2)
  ret void
}

define %ConstDeclarationStatement.580221* @"Array<ConstDeclarationStatement>___getitem__"(%"Array<ConstDeclarationStatement>.580261"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 1
  %.28 = load %ConstDeclarationStatement.580221**, %ConstDeclarationStatement.580221*** %.27, align 8
  %.29 = getelementptr inbounds %ConstDeclarationStatement.580221*, %ConstDeclarationStatement.580221** %.28, i64 %.2
  %.30 = load %ConstDeclarationStatement.580221*, %ConstDeclarationStatement.580221** %.29, align 8
  ret %ConstDeclarationStatement.580221* %.30

.4.endif:                                         ; preds = %.4
  ret %ConstDeclarationStatement.580221* null
}

define i1 @"Array<ConstDeclarationStatement>___eq__"(%"Array<ConstDeclarationStatement>.580261"* %.1, %"Array<ConstDeclarationStatement>.580261"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ConstDeclarationStatement>_vtable_ty.580268"*, %"Array<ConstDeclarationStatement>_vtable_ty.580268"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.580268", %"Array<ConstDeclarationStatement>_vtable_ty.580268"* %.28, i64 0, i32 5
  %.30 = load %ConstDeclarationStatement.580221* (%"Array<ConstDeclarationStatement>.580261"*, i64)*, %ConstDeclarationStatement.580221* (%"Array<ConstDeclarationStatement>.580261"*, i64)** %.29, align 8
  %.31 = call %ConstDeclarationStatement.580221* %.30(%"Array<ConstDeclarationStatement>.580261"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ConstDeclarationStatement>_vtable_ty.580268"*, %"Array<ConstDeclarationStatement>_vtable_ty.580268"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.580268", %"Array<ConstDeclarationStatement>_vtable_ty.580268"* %.35, i64 0, i32 5
  %.37 = load %ConstDeclarationStatement.580221* (%"Array<ConstDeclarationStatement>.580261"*, i64)*, %ConstDeclarationStatement.580221* (%"Array<ConstDeclarationStatement>.580261"*, i64)** %.36, align 8
  %.38 = call %ConstDeclarationStatement.580221* %.37(%"Array<ConstDeclarationStatement>.580261"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ConstDeclarationStatement.580221* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ConstDeclarationStatement.580221* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ConstDeclarationStatement>___in__"(%"Array<ConstDeclarationStatement>.580261"* %.1, %ConstDeclarationStatement.580221* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ConstDeclarationStatement.580221* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ConstDeclarationStatement>_vtable_ty.580268"*, %"Array<ConstDeclarationStatement>_vtable_ty.580268"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.580268", %"Array<ConstDeclarationStatement>_vtable_ty.580268"* %.19, i64 0, i32 5
  %.21 = load %ConstDeclarationStatement.580221* (%"Array<ConstDeclarationStatement>.580261"*, i64)*, %ConstDeclarationStatement.580221* (%"Array<ConstDeclarationStatement>.580261"*, i64)** %.20, align 8
  %.22 = call %ConstDeclarationStatement.580221* %.21(%"Array<ConstDeclarationStatement>.580261"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ConstDeclarationStatement.580221* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ConstDeclarationStatement>_find"(%"Array<ConstDeclarationStatement>.580261"* nocapture readonly %.1, %ConstDeclarationStatement.580221* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 1
  %.19 = load %ConstDeclarationStatement.580221**, %ConstDeclarationStatement.580221*** %.18, align 8
  %0 = ptrtoint %ConstDeclarationStatement.580221* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ConstDeclarationStatement.580221*, %ConstDeclarationStatement.580221** %.19, i64 %storemerge5
  %1 = bitcast %ConstDeclarationStatement.580221** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<ConstDeclarationStatement>_join"(%"Array<ConstDeclarationStatement>.580261"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.162, i64 0, i64 0), i64 26)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.162, i64 0, i64 0), i64 26)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<ConstDeclarationStatement>___as_string__"(%"Array<ConstDeclarationStatement>.580261"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.1, i64 0, i32 0
  %.7 = load %"Array<ConstDeclarationStatement>_vtable_ty.580268"*, %"Array<ConstDeclarationStatement>_vtable_ty.580268"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.580268", %"Array<ConstDeclarationStatement>_vtable_ty.580268"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<ConstDeclarationStatement>.580261"*, %string.580129*)*, %string.580129* (%"Array<ConstDeclarationStatement>.580261"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<ConstDeclarationStatement>.580261"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<VarDeclarationStatement>_constructor"(%"Array<VarDeclarationStatement>.580262"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclarationStatement.580219*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<VarDeclarationStatement>_resize"(%"Array<VarDeclarationStatement>.580262"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclarationStatement.580219*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<VarDeclarationStatement>_swap"(%"Array<VarDeclarationStatement>.580262"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 1
  %.12 = load %VarDeclarationStatement.580219**, %VarDeclarationStatement.580219*** %.11, align 8
  %.13 = getelementptr inbounds %VarDeclarationStatement.580219*, %VarDeclarationStatement.580219** %.12, i64 %.2
  %0 = bitcast %VarDeclarationStatement.580219** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %VarDeclarationStatement.580219*, %VarDeclarationStatement.580219** %.12, i64 %.3
  %1 = bitcast %VarDeclarationStatement.580219** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %VarDeclarationStatement.580219**, %VarDeclarationStatement.580219*** %.11, align 8
  %.33 = getelementptr inbounds %VarDeclarationStatement.580219*, %VarDeclarationStatement.580219** %.31, i64 %.3
  %2 = bitcast %VarDeclarationStatement.580219** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<VarDeclarationStatement>___sl__"(%"Array<VarDeclarationStatement>.580262"* %.1, %VarDeclarationStatement.580219* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 0
  %.17 = load %"Array<VarDeclarationStatement>_vtable_ty.580269"*, %"Array<VarDeclarationStatement>_vtable_ty.580269"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.580269", %"Array<VarDeclarationStatement>_vtable_ty.580269"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<VarDeclarationStatement>.580262"*)*, void (%"Array<VarDeclarationStatement>.580262"*)** %.18, align 8
  call void %.19(%"Array<VarDeclarationStatement>.580262"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 1
  %.31 = load %VarDeclarationStatement.580219**, %VarDeclarationStatement.580219*** %.30, align 8
  %.33 = getelementptr inbounds %VarDeclarationStatement.580219*, %VarDeclarationStatement.580219** %.31, i64 %.24
  store %VarDeclarationStatement.580219* %.2, %VarDeclarationStatement.580219** %.33, align 8
  ret void
}

define void @"Array<VarDeclarationStatement>___setitem__"(%"Array<VarDeclarationStatement>.580262"* nocapture readonly %.1, i64 %.2, %VarDeclarationStatement.580219* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 1
  %.30 = load %VarDeclarationStatement.580219**, %VarDeclarationStatement.580219*** %.29, align 8
  %.32 = getelementptr inbounds %VarDeclarationStatement.580219*, %VarDeclarationStatement.580219** %.30, i64 %.2
  store %VarDeclarationStatement.580219* %.3, %VarDeclarationStatement.580219** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarDeclarationStatement>_append"(%"Array<VarDeclarationStatement>.580262"* %.1, %VarDeclarationStatement.580219* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 0
  %.9 = load %"Array<VarDeclarationStatement>_vtable_ty.580269"*, %"Array<VarDeclarationStatement>_vtable_ty.580269"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.580269", %"Array<VarDeclarationStatement>_vtable_ty.580269"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)*, void (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)** %.10, align 8
  call void %.11(%"Array<VarDeclarationStatement>.580262"* %.1, %VarDeclarationStatement.580219* %.2)
  ret void
}

define %VarDeclarationStatement.580219* @"Array<VarDeclarationStatement>___getitem__"(%"Array<VarDeclarationStatement>.580262"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 1
  %.28 = load %VarDeclarationStatement.580219**, %VarDeclarationStatement.580219*** %.27, align 8
  %.29 = getelementptr inbounds %VarDeclarationStatement.580219*, %VarDeclarationStatement.580219** %.28, i64 %.2
  %.30 = load %VarDeclarationStatement.580219*, %VarDeclarationStatement.580219** %.29, align 8
  ret %VarDeclarationStatement.580219* %.30

.4.endif:                                         ; preds = %.4
  ret %VarDeclarationStatement.580219* null
}

define i1 @"Array<VarDeclarationStatement>___eq__"(%"Array<VarDeclarationStatement>.580262"* %.1, %"Array<VarDeclarationStatement>.580262"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<VarDeclarationStatement>_vtable_ty.580269"*, %"Array<VarDeclarationStatement>_vtable_ty.580269"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.580269", %"Array<VarDeclarationStatement>_vtable_ty.580269"* %.28, i64 0, i32 5
  %.30 = load %VarDeclarationStatement.580219* (%"Array<VarDeclarationStatement>.580262"*, i64)*, %VarDeclarationStatement.580219* (%"Array<VarDeclarationStatement>.580262"*, i64)** %.29, align 8
  %.31 = call %VarDeclarationStatement.580219* %.30(%"Array<VarDeclarationStatement>.580262"* %.1, i64 %storemerge3)
  %.35 = load %"Array<VarDeclarationStatement>_vtable_ty.580269"*, %"Array<VarDeclarationStatement>_vtable_ty.580269"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.580269", %"Array<VarDeclarationStatement>_vtable_ty.580269"* %.35, i64 0, i32 5
  %.37 = load %VarDeclarationStatement.580219* (%"Array<VarDeclarationStatement>.580262"*, i64)*, %VarDeclarationStatement.580219* (%"Array<VarDeclarationStatement>.580262"*, i64)** %.36, align 8
  %.38 = call %VarDeclarationStatement.580219* %.37(%"Array<VarDeclarationStatement>.580262"* %.2, i64 %storemerge3)
  %0 = ptrtoint %VarDeclarationStatement.580219* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %VarDeclarationStatement.580219* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<VarDeclarationStatement>___in__"(%"Array<VarDeclarationStatement>.580262"* %.1, %VarDeclarationStatement.580219* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %VarDeclarationStatement.580219* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<VarDeclarationStatement>_vtable_ty.580269"*, %"Array<VarDeclarationStatement>_vtable_ty.580269"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.580269", %"Array<VarDeclarationStatement>_vtable_ty.580269"* %.19, i64 0, i32 5
  %.21 = load %VarDeclarationStatement.580219* (%"Array<VarDeclarationStatement>.580262"*, i64)*, %VarDeclarationStatement.580219* (%"Array<VarDeclarationStatement>.580262"*, i64)** %.20, align 8
  %.22 = call %VarDeclarationStatement.580219* %.21(%"Array<VarDeclarationStatement>.580262"* %.1, i64 %storemerge4)
  %1 = ptrtoint %VarDeclarationStatement.580219* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<VarDeclarationStatement>_find"(%"Array<VarDeclarationStatement>.580262"* nocapture readonly %.1, %VarDeclarationStatement.580219* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 1
  %.19 = load %VarDeclarationStatement.580219**, %VarDeclarationStatement.580219*** %.18, align 8
  %0 = ptrtoint %VarDeclarationStatement.580219* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %VarDeclarationStatement.580219*, %VarDeclarationStatement.580219** %.19, i64 %storemerge5
  %1 = bitcast %VarDeclarationStatement.580219** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<VarDeclarationStatement>_join"(%"Array<VarDeclarationStatement>.580262"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.163, i64 0, i64 0), i64 24)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.163, i64 0, i64 0), i64 24)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<VarDeclarationStatement>___as_string__"(%"Array<VarDeclarationStatement>.580262"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.1, i64 0, i32 0
  %.7 = load %"Array<VarDeclarationStatement>_vtable_ty.580269"*, %"Array<VarDeclarationStatement>_vtable_ty.580269"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.580269", %"Array<VarDeclarationStatement>_vtable_ty.580269"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<VarDeclarationStatement>.580262"*, %string.580129*)*, %string.580129* (%"Array<VarDeclarationStatement>.580262"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<VarDeclarationStatement>.580262"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<TypeAliasNode>_constructor"(%"Array<TypeAliasNode>.580263"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 1
  %0 = bitcast %TypeAliasNode.580253*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<TypeAliasNode>_resize"(%"Array<TypeAliasNode>.580263"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 1
  %0 = bitcast %TypeAliasNode.580253*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<TypeAliasNode>_swap"(%"Array<TypeAliasNode>.580263"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 1
  %.12 = load %TypeAliasNode.580253**, %TypeAliasNode.580253*** %.11, align 8
  %.13 = getelementptr inbounds %TypeAliasNode.580253*, %TypeAliasNode.580253** %.12, i64 %.2
  %0 = bitcast %TypeAliasNode.580253** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %TypeAliasNode.580253*, %TypeAliasNode.580253** %.12, i64 %.3
  %1 = bitcast %TypeAliasNode.580253** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %TypeAliasNode.580253**, %TypeAliasNode.580253*** %.11, align 8
  %.33 = getelementptr inbounds %TypeAliasNode.580253*, %TypeAliasNode.580253** %.31, i64 %.3
  %2 = bitcast %TypeAliasNode.580253** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<TypeAliasNode>___sl__"(%"Array<TypeAliasNode>.580263"* %.1, %TypeAliasNode.580253* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 0
  %.17 = load %"Array<TypeAliasNode>_vtable_ty.580270"*, %"Array<TypeAliasNode>_vtable_ty.580270"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.580270", %"Array<TypeAliasNode>_vtable_ty.580270"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<TypeAliasNode>.580263"*)*, void (%"Array<TypeAliasNode>.580263"*)** %.18, align 8
  call void %.19(%"Array<TypeAliasNode>.580263"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 1
  %.31 = load %TypeAliasNode.580253**, %TypeAliasNode.580253*** %.30, align 8
  %.33 = getelementptr inbounds %TypeAliasNode.580253*, %TypeAliasNode.580253** %.31, i64 %.24
  store %TypeAliasNode.580253* %.2, %TypeAliasNode.580253** %.33, align 8
  ret void
}

define void @"Array<TypeAliasNode>___setitem__"(%"Array<TypeAliasNode>.580263"* nocapture readonly %.1, i64 %.2, %TypeAliasNode.580253* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 1
  %.30 = load %TypeAliasNode.580253**, %TypeAliasNode.580253*** %.29, align 8
  %.32 = getelementptr inbounds %TypeAliasNode.580253*, %TypeAliasNode.580253** %.30, i64 %.2
  store %TypeAliasNode.580253* %.3, %TypeAliasNode.580253** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<TypeAliasNode>_append"(%"Array<TypeAliasNode>.580263"* %.1, %TypeAliasNode.580253* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 0
  %.9 = load %"Array<TypeAliasNode>_vtable_ty.580270"*, %"Array<TypeAliasNode>_vtable_ty.580270"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.580270", %"Array<TypeAliasNode>_vtable_ty.580270"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)*, void (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)** %.10, align 8
  call void %.11(%"Array<TypeAliasNode>.580263"* %.1, %TypeAliasNode.580253* %.2)
  ret void
}

define %TypeAliasNode.580253* @"Array<TypeAliasNode>___getitem__"(%"Array<TypeAliasNode>.580263"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 1
  %.28 = load %TypeAliasNode.580253**, %TypeAliasNode.580253*** %.27, align 8
  %.29 = getelementptr inbounds %TypeAliasNode.580253*, %TypeAliasNode.580253** %.28, i64 %.2
  %.30 = load %TypeAliasNode.580253*, %TypeAliasNode.580253** %.29, align 8
  ret %TypeAliasNode.580253* %.30

.4.endif:                                         ; preds = %.4
  ret %TypeAliasNode.580253* null
}

define i1 @"Array<TypeAliasNode>___eq__"(%"Array<TypeAliasNode>.580263"* %.1, %"Array<TypeAliasNode>.580263"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<TypeAliasNode>_vtable_ty.580270"*, %"Array<TypeAliasNode>_vtable_ty.580270"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.580270", %"Array<TypeAliasNode>_vtable_ty.580270"* %.28, i64 0, i32 5
  %.30 = load %TypeAliasNode.580253* (%"Array<TypeAliasNode>.580263"*, i64)*, %TypeAliasNode.580253* (%"Array<TypeAliasNode>.580263"*, i64)** %.29, align 8
  %.31 = call %TypeAliasNode.580253* %.30(%"Array<TypeAliasNode>.580263"* %.1, i64 %storemerge3)
  %.35 = load %"Array<TypeAliasNode>_vtable_ty.580270"*, %"Array<TypeAliasNode>_vtable_ty.580270"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.580270", %"Array<TypeAliasNode>_vtable_ty.580270"* %.35, i64 0, i32 5
  %.37 = load %TypeAliasNode.580253* (%"Array<TypeAliasNode>.580263"*, i64)*, %TypeAliasNode.580253* (%"Array<TypeAliasNode>.580263"*, i64)** %.36, align 8
  %.38 = call %TypeAliasNode.580253* %.37(%"Array<TypeAliasNode>.580263"* %.2, i64 %storemerge3)
  %0 = ptrtoint %TypeAliasNode.580253* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %TypeAliasNode.580253* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<TypeAliasNode>___in__"(%"Array<TypeAliasNode>.580263"* %.1, %TypeAliasNode.580253* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %TypeAliasNode.580253* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<TypeAliasNode>_vtable_ty.580270"*, %"Array<TypeAliasNode>_vtable_ty.580270"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.580270", %"Array<TypeAliasNode>_vtable_ty.580270"* %.19, i64 0, i32 5
  %.21 = load %TypeAliasNode.580253* (%"Array<TypeAliasNode>.580263"*, i64)*, %TypeAliasNode.580253* (%"Array<TypeAliasNode>.580263"*, i64)** %.20, align 8
  %.22 = call %TypeAliasNode.580253* %.21(%"Array<TypeAliasNode>.580263"* %.1, i64 %storemerge4)
  %1 = ptrtoint %TypeAliasNode.580253* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<TypeAliasNode>_find"(%"Array<TypeAliasNode>.580263"* nocapture readonly %.1, %TypeAliasNode.580253* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 1
  %.19 = load %TypeAliasNode.580253**, %TypeAliasNode.580253*** %.18, align 8
  %0 = ptrtoint %TypeAliasNode.580253* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %TypeAliasNode.580253*, %TypeAliasNode.580253** %.19, i64 %storemerge5
  %1 = bitcast %TypeAliasNode.580253** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<TypeAliasNode>_join"(%"Array<TypeAliasNode>.580263"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.164, i64 0, i64 0), i64 14)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.164, i64 0, i64 0), i64 14)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<TypeAliasNode>___as_string__"(%"Array<TypeAliasNode>.580263"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.1, i64 0, i32 0
  %.7 = load %"Array<TypeAliasNode>_vtable_ty.580270"*, %"Array<TypeAliasNode>_vtable_ty.580270"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.580270", %"Array<TypeAliasNode>_vtable_ty.580270"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<TypeAliasNode>.580263"*, %string.580129*)*, %string.580129* (%"Array<TypeAliasNode>.580263"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<TypeAliasNode>.580263"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @ModuleAST_constructor(%ModuleAST.580255* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<FunctionDeclarationNode>_vtable_ty.580264"**
  store %"Array<FunctionDeclarationNode>_vtable_ty.580264"* @"Array<FunctionDeclarationNode>_vtable_data", %"Array<FunctionDeclarationNode>_vtable_ty.580264"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.1, i64 0, i32 1
  %3 = bitcast %"Array<FunctionDeclarationNode>.580257"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.23 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.25 to %"Array<ClassDeclarationNode>_vtable_ty.580265"**
  store %"Array<ClassDeclarationNode>_vtable_ty.580265"* @"Array<ClassDeclarationNode>_vtable_data", %"Array<ClassDeclarationNode>_vtable_ty.580265"** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %4 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %4, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %5 = bitcast i8* %.31 to i64*
  store i64 0, i64* %5, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %6 = bitcast i8* %.33 to i64*
  store i64 8, i64* %6, align 8
  %.35 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.1, i64 0, i32 2
  %7 = bitcast %"Array<ClassDeclarationNode>.580258"** %.35 to i8**
  store i8* %.25, i8** %7, align 8
  %.39 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.41 to %"Array<ImportNode>_vtable_ty.580267"**
  store %"Array<ImportNode>_vtable_ty.580267"* @"Array<ImportNode>_vtable_data", %"Array<ImportNode>_vtable_ty.580267"** %.43, align 8
  %.45 = getelementptr inbounds i8, i8* %.41, i64 8
  %8 = bitcast i8* %.45 to i8**
  store i8* %.39, i8** %8, align 8
  %.47 = getelementptr inbounds i8, i8* %.41, i64 16
  %9 = bitcast i8* %.47 to i64*
  store i64 0, i64* %9, align 8
  %.49 = getelementptr inbounds i8, i8* %.41, i64 24
  %10 = bitcast i8* %.49 to i64*
  store i64 8, i64* %10, align 8
  %.51 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.1, i64 0, i32 4
  %11 = bitcast %"Array<ImportNode>.580260"** %.51 to i8**
  store i8* %.41, i8** %11, align 8
  %.55 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.57 to %"Array<ConstDeclarationStatement>_vtable_ty.580268"**
  store %"Array<ConstDeclarationStatement>_vtable_ty.580268"* @"Array<ConstDeclarationStatement>_vtable_data", %"Array<ConstDeclarationStatement>_vtable_ty.580268"** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %12 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %12, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %13 = bitcast i8* %.63 to i64*
  store i64 0, i64* %13, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %14 = bitcast i8* %.65 to i64*
  store i64 8, i64* %14, align 8
  %.67 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.1, i64 0, i32 5
  %15 = bitcast %"Array<ConstDeclarationStatement>.580261"** %.67 to i8**
  store i8* %.57, i8** %15, align 8
  %.71 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.73 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.75 = bitcast i8* %.73 to %"Array<VarDeclarationStatement>_vtable_ty.580269"**
  store %"Array<VarDeclarationStatement>_vtable_ty.580269"* @"Array<VarDeclarationStatement>_vtable_data", %"Array<VarDeclarationStatement>_vtable_ty.580269"** %.75, align 8
  %.77 = getelementptr inbounds i8, i8* %.73, i64 8
  %16 = bitcast i8* %.77 to i8**
  store i8* %.71, i8** %16, align 8
  %.79 = getelementptr inbounds i8, i8* %.73, i64 16
  %17 = bitcast i8* %.79 to i64*
  store i64 0, i64* %17, align 8
  %.81 = getelementptr inbounds i8, i8* %.73, i64 24
  %18 = bitcast i8* %.81 to i64*
  store i64 8, i64* %18, align 8
  %.83 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.1, i64 0, i32 6
  %19 = bitcast %"Array<VarDeclarationStatement>.580262"** %.83 to i8**
  store i8* %.73, i8** %19, align 8
  %.87 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.89 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.91 = bitcast i8* %.89 to %"Array<EnumNode>_vtable_ty.580266"**
  store %"Array<EnumNode>_vtable_ty.580266"* @"Array<EnumNode>_vtable_data", %"Array<EnumNode>_vtable_ty.580266"** %.91, align 8
  %.93 = getelementptr inbounds i8, i8* %.89, i64 8
  %20 = bitcast i8* %.93 to i8**
  store i8* %.87, i8** %20, align 8
  %.95 = getelementptr inbounds i8, i8* %.89, i64 16
  %21 = bitcast i8* %.95 to i64*
  store i64 0, i64* %21, align 8
  %.97 = getelementptr inbounds i8, i8* %.89, i64 24
  %22 = bitcast i8* %.97 to i64*
  store i64 8, i64* %22, align 8
  %.99 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.1, i64 0, i32 3
  %23 = bitcast %"Array<EnumNode>.580259"** %.99 to i8**
  store i8* %.89, i8** %23, align 8
  %.103 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.105 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.105 to %"Array<TypeAliasNode>_vtable_ty.580270"**
  store %"Array<TypeAliasNode>_vtable_ty.580270"* @"Array<TypeAliasNode>_vtable_data", %"Array<TypeAliasNode>_vtable_ty.580270"** %.107, align 8
  %.109 = getelementptr inbounds i8, i8* %.105, i64 8
  %24 = bitcast i8* %.109 to i8**
  store i8* %.103, i8** %24, align 8
  %.111 = getelementptr inbounds i8, i8* %.105, i64 16
  %25 = bitcast i8* %.111 to i64*
  store i64 0, i64* %25, align 8
  %.113 = getelementptr inbounds i8, i8* %.105, i64 24
  %26 = bitcast i8* %.113 to i64*
  store i64 8, i64* %26, align 8
  %.115 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.1, i64 0, i32 7
  %27 = bitcast %"Array<TypeAliasNode>.580263"** %.115 to i8**
  store i8* %.105, i8** %27, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Parser_constructor(%Parser.580271* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.7 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 4
  store i64 -1, i64* %.7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @Parser_can_parse(%Parser.580271* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp ne i64 %.9, 43
  %.12 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 2
  %.13 = load %"Array<FloError>.580139"*, %"Array<FloError>.580139"** %.12, align 8
  %.14 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.13, i64 0, i32 2
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp eq i64 %.15, 0
  %.17 = and i1 %.10, %.16
  ret i1 %.17
}

define void @Parser_error(%Parser.580271* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 2
  %.9 = load %"Array<FloError>.580139"*, %"Array<FloError>.580139"** %.8, align 8
  %.12 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.13 = load %Token.580141*, %Token.580141** %.12, align 8
  %.14 = getelementptr inbounds %Token.580141, %Token.580141* %.13, i64 0, i32 2
  %.15 = load %FloRange.580135*, %FloRange.580135** %.14, align 8
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %FloError.580137*
  %.18 = bitcast i8* %.16 to %FloError_vtable_ty.580138**
  store %FloError_vtable_ty.580138* @FloError_vtable_data, %FloError_vtable_ty.580138** %.18, align 8
  call void @FloError_constructor(%FloError.580137* %.17, i64 2, %string.580129* %.2, %FloRange.580135* %.15)
  %.21 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.9, i64 0, i32 0
  %.22 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.22, i64 0, i32 2
  %.24 = load void (%"Array<FloError>.580139"*, %FloError.580137*)*, void (%"Array<FloError>.580139"*, %FloError.580137*)** %.23, align 8
  call void %.24(%"Array<FloError>.580139"* %.9, %FloError.580137* %.17)
  ret void
}

define void @Parser_advance(%Parser.580271* nocapture %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 4
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 1
  %.10 = load %"Array<Token>.580152"*, %"Array<Token>.580152"** %.9, align 8
  %.11 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.10, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp slt i64 %.7, %.12
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.19 = add i64 %.7, 1
  store i64 %.19, i64* %.6, align 8
  %.26 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.10, i64 0, i32 0
  %.27 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.26, align 8
  %.28 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.27, i64 0, i32 5
  %.29 = load %Token.580141* (%"Array<Token>.580152"*, i64)*, %Token.580141* (%"Array<Token>.580152"*, i64)** %.28, align 8
  %.30 = call %Token.580141* %.29(%"Array<Token>.580152"* %.10, i64 %.19)
  %.31 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  store %Token.580141* %.30, %Token.580141** %.31, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret void
}

define %Token.580141* @Parser_peek(%Parser.580271* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 4
  %.9 = load i64, i64* %.8, align 8
  %.11 = add i64 %.9, %.2
  %.15 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 1
  %.16 = load %"Array<Token>.580152"*, %"Array<Token>.580152"** %.15, align 8
  %.17 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.16, i64 0, i32 2
  %.18 = load i64, i64* %.17, align 8
  %.19 = icmp slt i64 %.11, %.18
  br i1 %.19, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.25 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.16, i64 0, i32 0
  %.26 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.26, i64 0, i32 5
  %.28 = load %Token.580141* (%"Array<Token>.580152"*, i64)*, %Token.580141* (%"Array<Token>.580152"*, i64)** %.27, align 8
  %.29 = call %Token.580141* %.28(%"Array<Token>.580152"* %.16, i64 %.11)
  ret %Token.580141* %.29

.4.endif:                                         ; preds = %.4
  %.36 = add i64 %.18, -1
  %.40 = getelementptr inbounds %"Array<Token>.580152", %"Array<Token>.580152"* %.16, i64 0, i32 0
  %.41 = load %"Array<Token>_vtable_ty.580153"*, %"Array<Token>_vtable_ty.580153"** %.40, align 8
  %.42 = getelementptr inbounds %"Array<Token>_vtable_ty.580153", %"Array<Token>_vtable_ty.580153"* %.41, i64 0, i32 5
  %.43 = load %Token.580141* (%"Array<Token>.580152"*, i64)*, %Token.580141* (%"Array<Token>.580152"*, i64)** %.42, align 8
  %.44 = call %Token.580141* %.43(%"Array<Token>.580152"* %.16, i64 %.36)
  ret %Token.580141* %.44
}

define %Token.580141* @Parser_eat(%Parser.580271* %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.9 = load %Token.580141*, %Token.580141** %.8, align 8
  %.13 = getelementptr inbounds %Token.580141, %Token.580141* %.9, i64 0, i32 1
  %.14 = load i64, i64* %.13, align 8
  %.15 = icmp eq i64 %.14, %.2
  br i1 %.15, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.18 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.19 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.20 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.19, i64 0, i32 2
  %.21 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.20, align 8
  call void %.21(%Parser.580271* %.1)
  ret %Token.580141* %.9

.4.else:                                          ; preds = %.4
  switch i64 %.2, label %.4.else.else.else.else.else.else.else.else.else.if [
    i64 50, label %.4.else.if
    i64 35, label %.4.else.else.if
    i64 0, label %.4.else.else.else.if
    i64 22, label %.4.else.else.else.else.if
    i64 23, label %.4.else.else.else.else.else.if
    i64 24, label %.4.else.else.else.else.else.else.if
    i64 25, label %.4.else.else.else.else.else.else.else.if
    i64 2, label %.4.else.else.else.else.else.else.else.else.if
  ]

.4.else.if:                                       ; preds = %.4.else
  %.29 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.30 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.29, align 8
  %.31 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.30, i64 0, i32 1
  %.32 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.31, align 8
  %.33 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.580129*
  %.34.repack = bitcast i8* %.33 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.34.repack, align 8
  %.34.repack25 = getelementptr inbounds i8, i8* %.33, i64 8
  %0 = bitcast i8* %.34.repack25 to i8**
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.165, i64 0, i64 0), i8** %0, align 8
  %.34.repack26 = getelementptr inbounds i8, i8* %.33, i64 16
  %1 = bitcast i8* %.34.repack26 to i64*
  store i64 22, i64* %1, align 8
  %.34.repack27 = getelementptr inbounds i8, i8* %.33, i64 24
  %2 = bitcast i8* %.34.repack27 to i64*
  store i64 22, i64* %2, align 8
  call void %.32(%Parser.580271* %.1, %string.580129* %.34)
  br label %.4.else.endif

.4.else.endif:                                    ; preds = %.4.else.else.else.else.else.else.else.else.if, %.4.else.else.else.else.else.else.else.else.else.if, %.4.else.else.else.else.else.else.else.if, %.4.else.else.else.else.else.else.if, %.4.else.else.else.else.else.if, %.4.else.else.else.else.if, %.4.else.else.else.if, %.4.else.else.if, %.4.else.if
  %.177 = getelementptr inbounds %Token.580141, %Token.580141* %.9, i64 0, i32 2
  %.178 = load %FloRange.580135*, %FloRange.580135** %.177, align 8
  %.179 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.180 = bitcast i8* %.179 to %Token.580141*
  %.181 = bitcast i8* %.179 to %Token_vtable_ty.580142**
  store %Token_vtable_ty.580142* @Token_vtable_data, %Token_vtable_ty.580142** %.181, align 8
  call void @Token_constructor(%Token.580141* %.180, i64 43, %FloRange.580135* %.178)
  ret %Token.580141* %.180

.4.else.else.if:                                  ; preds = %.4.else
  %.42 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.43 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.42, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.43, i64 0, i32 1
  %.45 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.44, align 8
  %.46 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.47 = bitcast i8* %.46 to %string.580129*
  %.47.repack = bitcast i8* %.46 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.47.repack, align 8
  %.47.repack22 = getelementptr inbounds i8, i8* %.46, i64 8
  %3 = bitcast i8* %.47.repack22 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.166, i64 0, i64 0), i8** %3, align 8
  %.47.repack23 = getelementptr inbounds i8, i8* %.46, i64 16
  %4 = bitcast i8* %.47.repack23 to i64*
  store i64 12, i64* %4, align 8
  %.47.repack24 = getelementptr inbounds i8, i8* %.46, i64 24
  %5 = bitcast i8* %.47.repack24 to i64*
  store i64 12, i64* %5, align 8
  call void %.45(%Parser.580271* %.1, %string.580129* %.47)
  br label %.4.else.endif

.4.else.else.else.if:                             ; preds = %.4.else
  %.55 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.56 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.55, align 8
  %.57 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.56, i64 0, i32 1
  %.58 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.57, align 8
  %.59 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.60 = bitcast i8* %.59 to %string.580129*
  %.60.repack = bitcast i8* %.59 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60.repack, align 8
  %.60.repack19 = getelementptr inbounds i8, i8* %.59, i64 8
  %6 = bitcast i8* %.60.repack19 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.167, i64 0, i64 0), i8** %6, align 8
  %.60.repack20 = getelementptr inbounds i8, i8* %.59, i64 16
  %7 = bitcast i8* %.60.repack20 to i64*
  store i64 12, i64* %7, align 8
  %.60.repack21 = getelementptr inbounds i8, i8* %.59, i64 24
  %8 = bitcast i8* %.60.repack21 to i64*
  store i64 12, i64* %8, align 8
  call void %.58(%Parser.580271* %.1, %string.580129* %.60)
  br label %.4.else.endif

.4.else.else.else.else.if:                        ; preds = %.4.else
  %.68 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.69 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.68, align 8
  %.70 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.69, i64 0, i32 1
  %.71 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.70, align 8
  %.72 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.580129*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.73.repack, align 8
  %.73.repack16 = getelementptr inbounds i8, i8* %.72, i64 8
  %9 = bitcast i8* %.73.repack16 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.168, i64 0, i64 0), i8** %9, align 8
  %.73.repack17 = getelementptr inbounds i8, i8* %.72, i64 16
  %10 = bitcast i8* %.73.repack17 to i64*
  store i64 12, i64* %10, align 8
  %.73.repack18 = getelementptr inbounds i8, i8* %.72, i64 24
  %11 = bitcast i8* %.73.repack18 to i64*
  store i64 12, i64* %11, align 8
  call void %.71(%Parser.580271* %.1, %string.580129* %.73)
  br label %.4.else.endif

.4.else.else.else.else.else.if:                   ; preds = %.4.else
  %.81 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.82 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.81, align 8
  %.83 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.82, i64 0, i32 1
  %.84 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.83, align 8
  %.85 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.580129*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.86.repack, align 8
  %.86.repack13 = getelementptr inbounds i8, i8* %.85, i64 8
  %12 = bitcast i8* %.86.repack13 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.169, i64 0, i64 0), i8** %12, align 8
  %.86.repack14 = getelementptr inbounds i8, i8* %.85, i64 16
  %13 = bitcast i8* %.86.repack14 to i64*
  store i64 12, i64* %13, align 8
  %.86.repack15 = getelementptr inbounds i8, i8* %.85, i64 24
  %14 = bitcast i8* %.86.repack15 to i64*
  store i64 12, i64* %14, align 8
  call void %.84(%Parser.580271* %.1, %string.580129* %.86)
  br label %.4.else.endif

.4.else.else.else.else.else.else.if:              ; preds = %.4.else
  %.94 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.95 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.94, align 8
  %.96 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.95, i64 0, i32 1
  %.97 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.96, align 8
  %.98 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.99 = bitcast i8* %.98 to %string.580129*
  %.99.repack = bitcast i8* %.98 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.99.repack, align 8
  %.99.repack10 = getelementptr inbounds i8, i8* %.98, i64 8
  %15 = bitcast i8* %.99.repack10 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.170, i64 0, i64 0), i8** %15, align 8
  %.99.repack11 = getelementptr inbounds i8, i8* %.98, i64 16
  %16 = bitcast i8* %.99.repack11 to i64*
  store i64 12, i64* %16, align 8
  %.99.repack12 = getelementptr inbounds i8, i8* %.98, i64 24
  %17 = bitcast i8* %.99.repack12 to i64*
  store i64 12, i64* %17, align 8
  call void %.97(%Parser.580271* %.1, %string.580129* %.99)
  br label %.4.else.endif

.4.else.else.else.else.else.else.else.if:         ; preds = %.4.else
  %.107 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.108 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.107, align 8
  %.109 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.108, i64 0, i32 1
  %.110 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.109, align 8
  %.111 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.112 = bitcast i8* %.111 to %string.580129*
  %.112.repack = bitcast i8* %.111 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.112.repack, align 8
  %.112.repack7 = getelementptr inbounds i8, i8* %.111, i64 8
  %18 = bitcast i8* %.112.repack7 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.171, i64 0, i64 0), i8** %18, align 8
  %.112.repack8 = getelementptr inbounds i8, i8* %.111, i64 16
  %19 = bitcast i8* %.112.repack8 to i64*
  store i64 12, i64* %19, align 8
  %.112.repack9 = getelementptr inbounds i8, i8* %.111, i64 24
  %20 = bitcast i8* %.112.repack9 to i64*
  store i64 12, i64* %20, align 8
  call void %.110(%Parser.580271* %.1, %string.580129* %.112)
  br label %.4.else.endif

.4.else.else.else.else.else.else.else.else.if:    ; preds = %.4.else
  %.120 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.121 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.120, align 8
  %.122 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.121, i64 0, i32 1
  %.123 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.122, align 8
  %.124 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.125 = bitcast i8* %.124 to %string.580129*
  %.125.repack = bitcast i8* %.124 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.125.repack, align 8
  %.125.repack4 = getelementptr inbounds i8, i8* %.124, i64 8
  %21 = bitcast i8* %.125.repack4 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.172, i64 0, i64 0), i8** %21, align 8
  %.125.repack5 = getelementptr inbounds i8, i8* %.124, i64 16
  %22 = bitcast i8* %.125.repack5 to i64*
  store i64 12, i64* %22, align 8
  %.125.repack6 = getelementptr inbounds i8, i8* %.124, i64 24
  %23 = bitcast i8* %.125.repack6 to i64*
  store i64 12, i64* %23, align 8
  call void %.123(%Parser.580271* %.1, %string.580129* %.125)
  br label %.4.else.endif

.4.else.else.else.else.else.else.else.else.else.if: ; preds = %.4.else
  %.132 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.133 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.132, align 8
  %.134 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.133, i64 0, i32 1
  %.135 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.134, align 8
  %.136 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.137 = bitcast i8* %.136 to %string.580129*
  %.137.repack = bitcast i8* %.136 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.137.repack, align 8
  %.137.repack1 = getelementptr inbounds i8, i8* %.136, i64 8
  %24 = bitcast i8* %.137.repack1 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.173, i64 0, i64 0), i8** %24, align 8
  %.137.repack2 = getelementptr inbounds i8, i8* %.136, i64 16
  %25 = bitcast i8* %.137.repack2 to i64*
  store i64 12, i64* %25, align 8
  %.137.repack3 = getelementptr inbounds i8, i8* %.136, i64 24
  %26 = bitcast i8* %.137.repack3 to i64*
  store i64 12, i64* %26, align 8
  call void %.135(%Parser.580271* %.1, %string.580129* %.137)
  br label %.4.else.endif
}

define void @Parser_new_lines(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp eq i64 %.9, 30
  %.12 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.13 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.13, i64 0, i32 0
  %.15 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.14, align 8
  %.16 = call i1 %.15(%Parser.580271* %.1)
  %.17 = and i1 %.10, %.16
  br i1 %.17, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3, %while.entry
  %.21 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.22 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.21, i64 0, i32 2
  %.23 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.22, align 8
  call void %.23(%Parser.580271* %.1)
  %.27 = load %Token.580141*, %Token.580141** %.6, align 8
  %.28 = getelementptr inbounds %Token.580141, %Token.580141* %.27, i64 0, i32 1
  %.29 = load i64, i64* %.28, align 8
  %.30 = icmp eq i64 %.29, 30
  %.33 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.34 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.33, i64 0, i32 0
  %.35 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.34, align 8
  %.36 = call i1 %.35(%Parser.580271* %.1)
  %.37 = and i1 %.30, %.36
  br i1 %.37, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3
  ret void
}

define noalias %TypeNode.580161* @Parser_parse_primitive_type(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.11 = bitcast i8* %.10 to %TypeNode.580161*
  %.12 = bitcast i8* %.10 to %TypeNode_vtable_ty.580162**
  store %TypeNode_vtable_ty.580162* @TypeNode_vtable_data, %TypeNode_vtable_ty.580162** %.12, align 8
  call void @TypeNode_constructor(%TypeNode.580161* %.11, i64 12, %FloRange.580135* %.9)
  %.18 = load %Token.580141*, %Token.580141** %.6, align 8
  %.19 = getelementptr inbounds %Token.580141, %Token.580141* %.18, i64 0, i32 1
  %.20 = load i64, i64* %.19, align 8
  switch i64 %.20, label %.3.else.else.else.else.el...else.else.if [
    i64 58, label %.3.if
    i64 59, label %.3.else.if
    i64 60, label %.3.else.else.if
    i64 61, label %.3.else.else.else.if
    i64 62, label %.3.else.else.else.else.if
    i64 63, label %.3.else.else.else.else.else.if
    i64 64, label %.3.else.else.else.else.else.else.if
    i64 65, label %.3.else.else.else.else.else.else.else.if
    i64 66, label %.3.else.else.else.else.else.else.else.else.if
    i64 67, label %.3.else.else.else.else.else.else.else.else.else.if
    i64 68, label %.3.else.else.else.else.el...if
    i64 69, label %.3.else.else.else.else.el...else.if
    i64 70, label %.3.endif
  ]

.3.if:                                            ; preds = %.3
  %.24 = getelementptr inbounds i8, i8* %.10, i64 16
  %0 = bitcast i8* %.24 to i64*
  store i64 0, i64* %0, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.else.else.else.else.el...else.else.if, %.3.else.else.else.else.el...else.if, %.3.else.else.else.else.el...if, %.3.else.else.else.else.else.else.else.else.else.if, %.3.else.else.else.else.else.else.else.else.if, %.3.else.else.else.else.else.else.else.if, %.3.else.else.else.else.else.else.if, %.3.else.else.else.else.else.if, %.3.else.else.else.else.if, %.3.else.else.else.if, %.3.else.else.if, %.3.else.if, %.3.if
  %.178 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.179 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.178, align 8
  %.180 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.179, i64 0, i32 2
  %.181 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.180, align 8
  call void %.181(%Parser.580271* %.1)
  ret %TypeNode.580161* %.11

.3.else.if:                                       ; preds = %.3
  %.35 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.35 to i64*
  store i64 1, i64* %1, align 8
  br label %.3.endif

.3.else.else.if:                                  ; preds = %.3
  %.46 = getelementptr inbounds i8, i8* %.10, i64 16
  %2 = bitcast i8* %.46 to i64*
  store i64 2, i64* %2, align 8
  br label %.3.endif

.3.else.else.else.if:                             ; preds = %.3
  %.57 = getelementptr inbounds i8, i8* %.10, i64 16
  %3 = bitcast i8* %.57 to i64*
  store i64 3, i64* %3, align 8
  br label %.3.endif

.3.else.else.else.else.if:                        ; preds = %.3
  %.68 = getelementptr inbounds i8, i8* %.10, i64 16
  %4 = bitcast i8* %.68 to i64*
  store i64 4, i64* %4, align 8
  br label %.3.endif

.3.else.else.else.else.else.if:                   ; preds = %.3
  %.79 = getelementptr inbounds i8, i8* %.10, i64 16
  %5 = bitcast i8* %.79 to i64*
  store i64 5, i64* %5, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.if:              ; preds = %.3
  %.90 = getelementptr inbounds i8, i8* %.10, i64 16
  %6 = bitcast i8* %.90 to i64*
  store i64 6, i64* %6, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.else.if:         ; preds = %.3
  %.101 = getelementptr inbounds i8, i8* %.10, i64 16
  %7 = bitcast i8* %.101 to i64*
  store i64 7, i64* %7, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.else.else.if:    ; preds = %.3
  %.112 = getelementptr inbounds i8, i8* %.10, i64 16
  %8 = bitcast i8* %.112 to i64*
  store i64 8, i64* %8, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.else.else.else.if: ; preds = %.3
  %.123 = getelementptr inbounds i8, i8* %.10, i64 16
  %9 = bitcast i8* %.123 to i64*
  store i64 9, i64* %9, align 8
  br label %.3.endif

.3.else.else.else.else.el...if:                   ; preds = %.3
  %.134 = getelementptr inbounds i8, i8* %.10, i64 16
  %10 = bitcast i8* %.134 to i64*
  store i64 10, i64* %10, align 8
  br label %.3.endif

.3.else.else.else.else.el...else.if:              ; preds = %.3
  %.145 = getelementptr inbounds i8, i8* %.10, i64 16
  %11 = bitcast i8* %.145 to i64*
  store i64 11, i64* %11, align 8
  br label %.3.endif

.3.else.else.else.else.el...else.else.if:         ; preds = %.3
  %.156 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.157 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.156, align 8
  %.158 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.157, i64 0, i32 1
  %.159 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.158, align 8
  %.160 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.580129*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.161.repack, align 8
  %.161.repack1 = getelementptr inbounds i8, i8* %.160, i64 8
  %12 = bitcast i8* %.161.repack1 to i8**
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.176, i64 0, i64 0), i8** %12, align 8
  %.161.repack2 = getelementptr inbounds i8, i8* %.160, i64 16
  %13 = bitcast i8* %.161.repack2 to i64*
  store i64 26, i64* %13, align 8
  %.161.repack3 = getelementptr inbounds i8, i8* %.160, i64 24
  %14 = bitcast i8* %.161.repack3 to i64*
  store i64 26, i64* %14, align 8
  call void %.159(%Parser.580271* %.1, %string.580129* %.161)
  br label %.3.endif
}

define void @Parser_parse_type_list(%Parser.580271* %.1, %"Array<TypeNode>.580165"* %.2) {
.4:
  %.9 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.10 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.9, align 8
  %.11 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.10, i64 0, i32 10
  %.12 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.11, align 8
  %.13 = call %TypeNode.580161* %.12(%Parser.580271* %.1)
  %.14 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.2, i64 0, i32 0
  %.15 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.15, i64 0, i32 2
  %.17 = load void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)*, void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)** %.16, align 8
  call void %.17(%"Array<TypeNode>.580165"* %.2, %TypeNode.580161* %.13)
  %.20 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.21 = load %Token.580141*, %Token.580141** %.20, align 8
  %.22 = getelementptr inbounds %Token.580141, %Token.580141* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 2
  %.27 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.9, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.27, i64 0, i32 0
  %.29 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.28, align 8
  %.30 = call i1 %.29(%Parser.580271* %.1)
  %.31 = and i1 %.24, %.30
  br i1 %.31, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.35 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.9, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.35, i64 0, i32 2
  %.37 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.36, align 8
  call void %.37(%Parser.580271* %.1)
  %.42 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.9, align 8
  %.43 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.42, i64 0, i32 10
  %.44 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.43, align 8
  %.45 = call %TypeNode.580161* %.44(%Parser.580271* %.1)
  %.47 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.14, align 8
  %.48 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.47, i64 0, i32 2
  %.49 = load void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)*, void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)** %.48, align 8
  call void %.49(%"Array<TypeNode>.580165"* %.2, %TypeNode.580161* %.45)
  %.53 = load %Token.580141*, %Token.580141** %.20, align 8
  %.54 = getelementptr inbounds %Token.580141, %Token.580141* %.53, i64 0, i32 1
  %.55 = load i64, i64* %.54, align 8
  %.56 = icmp eq i64 %.55, 2
  %.59 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.9, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.59, i64 0, i32 0
  %.61 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.60, align 8
  %.62 = call i1 %.61(%Parser.580271* %.1)
  %.63 = and i1 %.56, %.62
  br i1 %.63, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  ret void
}

define noalias %RecordTypeNode.580163* @Parser_parse_object_type(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 4
  %.9 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.8, align 8
  %.10 = call %Token.580141* %.9(%Parser.580271* %.1, i64 50)
  %.11 = bitcast %Token.580141* %.10 to %IdentifierToken.580155*
  %0 = getelementptr inbounds %Token.580141, %Token.580141* %.10, i64 0, i32 2
  %.16 = load %FloRange.580135*, %FloRange.580135** %0, align 8
  %.17 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.18 = bitcast i8* %.17 to %RecordTypeNode.580163*
  %.19 = bitcast i8* %.17 to %RecordTypeNode_vtable_ty.580164**
  store %RecordTypeNode_vtable_ty.580164* @RecordTypeNode_vtable_data, %RecordTypeNode_vtable_ty.580164** %.19, align 8
  call void @RecordTypeNode_constructor(%RecordTypeNode.580163* %.18, %IdentifierToken.580155* %.11, %FloRange.580135* %.16)
  %.24 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.25 = load %Token.580141*, %Token.580141** %.24, align 8
  %.26 = getelementptr inbounds %Token.580141, %Token.580141* %.25, i64 0, i32 1
  %.27 = load i64, i64* %.26, align 8
  %.28 = icmp eq i64 %.27, 39
  br i1 %.28, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.32 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.33 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.32, i64 0, i32 2
  %.34 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.33, align 8
  call void %.34(%Parser.580271* %.1)
  %.38 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.39 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.38, i64 0, i32 7
  %.40 = load void (%Parser.580271*, %"Array<TypeNode>.580165"*)*, void (%Parser.580271*, %"Array<TypeNode>.580165"*)** %.39, align 8
  %.42 = getelementptr inbounds i8, i8* %.17, i64 32
  %1 = bitcast i8* %.42 to %"Array<TypeNode>.580165"**
  %.43 = load %"Array<TypeNode>.580165"*, %"Array<TypeNode>.580165"** %1, align 8
  call void %.40(%Parser.580271* %.1, %"Array<TypeNode>.580165"* %.43)
  %.47 = getelementptr inbounds i8, i8* %.17, i64 8
  %2 = bitcast i8* %.47 to %FloRange.580135**
  %.48 = load %FloRange.580135*, %FloRange.580135** %2, align 8
  %.51 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.51, i64 0, i32 4
  %.53 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.52, align 8
  %.54 = call %Token.580141* %.53(%Parser.580271* %.1, i64 38)
  %.55 = getelementptr inbounds %Token.580141, %Token.580141* %.54, i64 0, i32 2
  %.56 = load %FloRange.580135*, %FloRange.580135** %.55, align 8
  %.57 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.48, %FloRange.580135* %.56)
  store %FloRange.580135* %.57, %FloRange.580135** %2, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret %RecordTypeNode.580163* %.18
}

define noalias %FunctionTypeNode.580167* @Parser_parse_function_type(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.11 = bitcast i8* %.10 to %FunctionTypeNode.580167*
  %.12 = bitcast i8* %.10 to %FunctionTypeNode_vtable_ty.580168**
  store %FunctionTypeNode_vtable_ty.580168* @FunctionTypeNode_vtable_data, %FunctionTypeNode_vtable_ty.580168** %.12, align 8
  call void @FunctionTypeNode_constructor(%FunctionTypeNode.580167* %.11, %FloRange.580135* %.9)
  %.17 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.18, i64 0, i32 2
  %.20 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.19, align 8
  call void %.20(%Parser.580271* %.1)
  %.24 = load %Token.580141*, %Token.580141** %.6, align 8
  %.25 = getelementptr inbounds %Token.580141, %Token.580141* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp eq i64 %.26, 23
  br i1 %.27.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.31 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.31, i64 0, i32 7
  %.33 = load void (%Parser.580271*, %"Array<TypeNode>.580165"*)*, void (%Parser.580271*, %"Array<TypeNode>.580165"*)** %.32, align 8
  %.35 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.35 to %"Array<TypeNode>.580165"**
  %.36 = load %"Array<TypeNode>.580165"*, %"Array<TypeNode>.580165"** %0, align 8
  call void %.33(%Parser.580271* %.1, %"Array<TypeNode>.580165"* %.36)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.41 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.42 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.41, i64 0, i32 4
  %.43 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.42, align 8
  %.44 = call %Token.580141* %.43(%Parser.580271* %.1, i64 23)
  %.47 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.47, i64 0, i32 4
  %.49 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.48, align 8
  %.50 = call %Token.580141* %.49(%Parser.580271* %.1, i64 42)
  %.54 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.54, i64 0, i32 10
  %.56 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.55, align 8
  %.57 = call %TypeNode.580161* %.56(%Parser.580271* %.1)
  %.58 = getelementptr inbounds i8, i8* %.10, i64 32
  %1 = bitcast i8* %.58 to %TypeNode.580161**
  store %TypeNode.580161* %.57, %TypeNode.580161** %1, align 8
  %.62 = getelementptr inbounds i8, i8* %.10, i64 8
  %2 = bitcast i8* %.62 to %FloRange.580135**
  %.63 = load %FloRange.580135*, %FloRange.580135** %2, align 8
  %.67 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %.57, i64 0, i32 1
  %.68 = load %FloRange.580135*, %FloRange.580135** %.67, align 8
  %.69 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.63, %FloRange.580135* %.68)
  store %FloRange.580135* %.69, %FloRange.580135** %2, align 8
  ret %FunctionTypeNode.580167* %.11
}

define %TypeNode.580161* @Parser_parse_type(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.11 = bitcast i8* %.10 to %TypeNode.580161*
  %.12 = bitcast i8* %.10 to %TypeNode_vtable_ty.580162**
  store %TypeNode_vtable_ty.580162* @TypeNode_vtable_data, %TypeNode_vtable_ty.580162** %.12, align 8
  call void @TypeNode_constructor(%TypeNode.580161* %.11, i64 12, %FloRange.580135* %.9)
  %.18 = load %Token.580141*, %Token.580141** %.6, align 8
  %.19 = getelementptr inbounds %Token.580141, %Token.580141* %.18, i64 0, i32 1
  %.20 = load i64, i64* %.19, align 8
  %.21 = icmp eq i64 %.20, 50
  br i1 %.21, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.24 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.25 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.24, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.25, i64 0, i32 8
  %.27 = load %RecordTypeNode.580163* (%Parser.580271*)*, %RecordTypeNode.580163* (%Parser.580271*)** %.26, align 8
  %.28 = call %RecordTypeNode.580163* %.27(%Parser.580271* %.1)
  %.29 = bitcast %RecordTypeNode.580163* %.28 to %TypeNode.580161*
  br label %.3.endif

.3.else:                                          ; preds = %.3
  %.37 = icmp eq i64 %.20, 22
  %.40 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.41 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.40, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.else

.3.endif:                                         ; preds = %.3.else.if, %.3.else.else, %.3.if
  %type_node.0 = phi %TypeNode.580161* [ %.29, %.3.if ], [ %.45, %.3.else.if ], [ %.53, %.3.else.else ]
  %.59 = load %Token.580141*, %Token.580141** %.6, align 8
  %.60 = getelementptr inbounds %Token.580141, %Token.580141* %.59, i64 0, i32 1
  %.61 = load i64, i64* %.60, align 8
  %.62 = icmp eq i64 %.61, 26
  %.68 = icmp eq i64 %.61, 3
  %.69 = or i1 %.62, %.68
  %.71 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.72 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.71, align 8
  %.73 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.72, i64 0, i32 0
  %.74 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.73, align 8
  %.75 = call i1 %.74(%Parser.580271* %.1)
  %.76 = and i1 %.69, %.75
  br i1 %.76, label %while.entry, label %while.exit

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.41, i64 0, i32 9
  %.43 = load %FunctionTypeNode.580167* (%Parser.580271*)*, %FunctionTypeNode.580167* (%Parser.580271*)** %.42, align 8
  %.44 = call %FunctionTypeNode.580167* %.43(%Parser.580271* %.1)
  %.45 = bitcast %FunctionTypeNode.580167* %.44 to %TypeNode.580161*
  br label %.3.endif

.3.else.else:                                     ; preds = %.3.else
  %.51 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.41, i64 0, i32 6
  %.52 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.51, align 8
  %.53 = call %TypeNode.580161* %.52(%Parser.580271* %.1)
  br label %.3.endif

while.entry:                                      ; preds = %.3.endif, %while.entry.endif
  %type_node.2 = phi %TypeNode.580161* [ %type_node.4, %while.entry.endif ], [ %type_node.0, %.3.endif ]
  %.80 = load %Token.580141*, %Token.580141** %.6, align 8
  %.81 = getelementptr inbounds %Token.580141, %Token.580141* %.80, i64 0, i32 1
  %.82 = load i64, i64* %.81, align 8
  %.83 = icmp eq i64 %.82, 26
  br i1 %.83, label %while.entry.if, label %while.entry.else

while.exit:                                       ; preds = %while.entry.endif, %.3.endif
  %type_node.3 = phi %TypeNode.580161* [ %type_node.0, %.3.endif ], [ %type_node.4, %while.entry.endif ]
  ret %TypeNode.580161* %type_node.3

while.entry.if:                                   ; preds = %while.entry
  %.87 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.71, align 8
  %.88 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.87, i64 0, i32 2
  %.89 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.88, align 8
  call void %.89(%Parser.580271* %.1)
  %.93 = load %Token.580141*, %Token.580141** %.6, align 8
  %.94 = getelementptr inbounds %Token.580141, %Token.580141* %.93, i64 0, i32 1
  %.95 = load i64, i64* %.94, align 8
  %.96 = icmp eq i64 %.95, 27
  br i1 %.96, label %while.entry.if.if, label %while.entry.if.else

while.entry.else:                                 ; preds = %while.entry
  %.176 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %type_node.2, i64 0, i32 1
  %.177 = load %FloRange.580135*, %FloRange.580135** %.176, align 8
  %.180 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.71, align 8
  %.181 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.180, i64 0, i32 4
  %.182 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.181, align 8
  %.183 = call %Token.580141* %.182(%Parser.580271* %.1, i64 3)
  %.184 = getelementptr inbounds %Token.580141, %Token.580141* %.183, i64 0, i32 2
  %.185 = load %FloRange.580135*, %FloRange.580135** %.184, align 8
  %.186 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.177, %FloRange.580135* %.185)
  %.187 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.188 = bitcast i8* %.187 to %PointerTypeNode.580169*
  %.189 = bitcast i8* %.187 to %PointerTypeNode_vtable_ty.580170**
  store %PointerTypeNode_vtable_ty.580170* @PointerTypeNode_vtable_data, %PointerTypeNode_vtable_ty.580170** %.189, align 8
  call void @PointerTypeNode_constructor(%PointerTypeNode.580169* %.188, %TypeNode.580161* %type_node.2, %FloRange.580135* %.186)
  %.192 = bitcast i8* %.187 to %TypeNode.580161*
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.if.endif, %while.entry.else
  %type_node.4 = phi %TypeNode.580161* [ %type_node.5, %while.entry.if.endif ], [ %.192, %while.entry.else ]
  %.197 = load %Token.580141*, %Token.580141** %.6, align 8
  %.198 = getelementptr inbounds %Token.580141, %Token.580141* %.197, i64 0, i32 1
  %.199 = load i64, i64* %.198, align 8
  %.200 = icmp eq i64 %.199, 26
  %.206 = icmp eq i64 %.199, 3
  %.207 = or i1 %.200, %.206
  %.210 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.71, align 8
  %.211 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.210, i64 0, i32 0
  %.212 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.211, align 8
  %.213 = call i1 %.212(%Parser.580271* %.1)
  %.214 = and i1 %.207, %.213
  br i1 %.214, label %while.entry, label %while.exit

while.entry.if.if:                                ; preds = %while.entry.if
  %.98 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.99 = bitcast i8* %.98 to %string.580129*
  %.99.repack = bitcast i8* %.98 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.99.repack, align 8
  %.99.repack1 = getelementptr inbounds i8, i8* %.98, i64 8
  %0 = bitcast i8* %.99.repack1 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.177, i64 0, i64 0), i8** %0, align 8
  %.99.repack2 = getelementptr inbounds i8, i8* %.98, i64 16
  %1 = bitcast i8* %.99.repack2 to i64*
  store i64 5, i64* %1, align 8
  %.99.repack3 = getelementptr inbounds i8, i8* %.98, i64 24
  %2 = bitcast i8* %.99.repack3 to i64*
  store i64 5, i64* %2, align 8
  %.104 = getelementptr inbounds %Token.580141, %Token.580141* %.93, i64 0, i32 2
  %.105 = load %FloRange.580135*, %FloRange.580135** %.104, align 8
  %.106 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %IdentifierToken.580155*
  %.108 = bitcast i8* %.106 to %IdentifierToken_vtable_ty.580156**
  store %IdentifierToken_vtable_ty.580156* @IdentifierToken_vtable_data, %IdentifierToken_vtable_ty.580156** %.108, align 8
  call void @IdentifierToken_constructor(%IdentifierToken.580155* %.107, %string.580129* %.99, %FloRange.580135* %.105)
  %.113 = load %Token.580141*, %Token.580141** %.6, align 8
  %.114 = getelementptr inbounds %Token.580141, %Token.580141* %.113, i64 0, i32 2
  %.115 = load %FloRange.580135*, %FloRange.580135** %.114, align 8
  %.116 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.117 = bitcast i8* %.116 to %RecordTypeNode.580163*
  %.118 = bitcast i8* %.116 to %RecordTypeNode_vtable_ty.580164**
  store %RecordTypeNode_vtable_ty.580164* @RecordTypeNode_vtable_data, %RecordTypeNode_vtable_ty.580164** %.118, align 8
  call void @RecordTypeNode_constructor(%RecordTypeNode.580163* %.117, %IdentifierToken.580155* %.107, %FloRange.580135* %.115)
  %rec_node = alloca %RecordTypeNode.580163*, align 8
  %3 = bitcast %RecordTypeNode.580163** %rec_node to i8**
  store i8* %.116, i8** %3, align 8
  %.123 = getelementptr inbounds i8, i8* %.116, i64 32
  %4 = bitcast i8* %.123 to %"Array<TypeNode>.580165"**
  %.124 = load %"Array<TypeNode>.580165"*, %"Array<TypeNode>.580165"** %4, align 8
  %.126 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.124, i64 0, i32 0
  %.127 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.126, align 8
  %.128 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.127, i64 0, i32 2
  %.129 = load void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)*, void (%"Array<TypeNode>.580165"*, %TypeNode.580161*)** %.128, align 8
  call void %.129(%"Array<TypeNode>.580165"* %.124, %TypeNode.580161* %type_node.2)
  %5 = bitcast %RecordTypeNode.580163** %rec_node to %TypeNode.580161**
  %.1314 = load %TypeNode.580161*, %TypeNode.580161** %5, align 8
  br label %while.entry.if.endif

while.entry.if.else:                              ; preds = %while.entry.if
  %.138 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.71, align 8
  %.139 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.138, i64 0, i32 36
  %.140 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.139, align 8
  %.141 = call %ExpressionNode.580177* %.140(%Parser.580271* %.1)
  %.144 = load %Token.580141*, %Token.580141** %.6, align 8
  %.145 = getelementptr inbounds %Token.580141, %Token.580141* %.144, i64 0, i32 2
  %.146 = load %FloRange.580135*, %FloRange.580135** %.145, align 8
  %.147 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.148 = bitcast i8* %.147 to %ArrayTypeNode.580179*
  %.149 = bitcast i8* %.147 to %ArrayTypeNode_vtable_ty.580180**
  store %ArrayTypeNode_vtable_ty.580180* @ArrayTypeNode_vtable_data, %ArrayTypeNode_vtable_ty.580180** %.149, align 8
  call void @ArrayTypeNode_constructor(%ArrayTypeNode.580179* %.148, %TypeNode.580161* %type_node.2, %ExpressionNode.580177* %.141, %FloRange.580135* %.146)
  %.152 = bitcast i8* %.147 to %TypeNode.580161*
  br label %while.entry.if.endif

while.entry.if.endif:                             ; preds = %while.entry.if.else, %while.entry.if.if
  %type_node.5 = phi %TypeNode.580161* [ %.1314, %while.entry.if.if ], [ %.152, %while.entry.if.else ]
  %.157 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %type_node.5, i64 0, i32 1
  %.158 = load %FloRange.580135*, %FloRange.580135** %.157, align 8
  %.161 = load %Token.580141*, %Token.580141** %.6, align 8
  %.162 = getelementptr inbounds %Token.580141, %Token.580141* %.161, i64 0, i32 2
  %.163 = load %FloRange.580135*, %FloRange.580135** %.162, align 8
  %.164 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.158, %FloRange.580135* %.163)
  store %FloRange.580135* %.164, %FloRange.580135** %.157, align 8
  %.169 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.71, align 8
  %.170 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.169, i64 0, i32 4
  %.171 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.170, align 8
  %.172 = call %Token.580141* %.171(%Parser.580271* %.1, i64 27)
  br label %while.entry.endif
}

define void @Parser_parse_expression_list(%Parser.580271* %.1, %"Array<ExpressionNode>.580189"* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.9, i64 0, i32 5
  %.11 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.10, align 8
  call void %.11(%Parser.580271* %.1)
  %.16 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.17 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.16, i64 0, i32 36
  %.18 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.17, align 8
  %.19 = call %ExpressionNode.580177* %.18(%Parser.580271* %.1)
  %.20 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.2, i64 0, i32 0
  %.21 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.20, align 8
  %.22 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.21, i64 0, i32 2
  %.23 = load void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)*, void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)** %.22, align 8
  call void %.23(%"Array<ExpressionNode>.580189"* %.2, %ExpressionNode.580177* %.19)
  %.27 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.27, i64 0, i32 5
  %.29 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.28, align 8
  call void %.29(%Parser.580271* %.1)
  %.32 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.33 = load %Token.580141*, %Token.580141** %.32, align 8
  %.34 = getelementptr inbounds %Token.580141, %Token.580141* %.33, i64 0, i32 1
  %.35 = load i64, i64* %.34, align 8
  %.36 = icmp eq i64 %.35, 2
  %.39 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.39, i64 0, i32 0
  %.41 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.40, align 8
  %.42 = call i1 %.41(%Parser.580271* %.1)
  %.43 = and i1 %.36, %.42
  br i1 %.43, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.47 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.47, i64 0, i32 2
  %.49 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.48, align 8
  call void %.49(%Parser.580271* %.1)
  %.53 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.54 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.53, i64 0, i32 5
  %.55 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.54, align 8
  call void %.55(%Parser.580271* %.1)
  %.60 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.61 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.60, i64 0, i32 36
  %.62 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.61, align 8
  %.63 = call %ExpressionNode.580177* %.62(%Parser.580271* %.1)
  %.65 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.20, align 8
  %.66 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)*, void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)** %.66, align 8
  call void %.67(%"Array<ExpressionNode>.580189"* %.2, %ExpressionNode.580177* %.63)
  %.71 = load %Token.580141*, %Token.580141** %.32, align 8
  %.72 = getelementptr inbounds %Token.580141, %Token.580141* %.71, i64 0, i32 1
  %.73 = load i64, i64* %.72, align 8
  %.74 = icmp eq i64 %.73, 2
  %.77 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.77, i64 0, i32 0
  %.79 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.78, align 8
  %.80 = call i1 %.79(%Parser.580271* %.1)
  %.81 = and i1 %.74, %.80
  br i1 %.81, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %.85 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.86 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.85, i64 0, i32 5
  %.87 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.86, align 8
  call void %.87(%Parser.580271* %.1)
  ret void
}

define noalias %ArrayExpressionNode.580193* @Parser_parse_array_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.11 = bitcast i8* %.10 to %ArrayExpressionNode.580193*
  %.12 = bitcast i8* %.10 to %ArrayExpressionNode_vtable_ty.580194**
  store %ArrayExpressionNode_vtable_ty.580194* @ArrayExpressionNode_vtable_data, %ArrayExpressionNode_vtable_ty.580194** %.12, align 8
  call void @ArrayExpressionNode_constructor(%ArrayExpressionNode.580193* %.11, %FloRange.580135* %.9)
  %.17 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.18, i64 0, i32 2
  %.20 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.19, align 8
  call void %.20(%Parser.580271* %.1)
  %.24 = load %Token.580141*, %Token.580141** %.6, align 8
  %.25 = getelementptr inbounds %Token.580141, %Token.580141* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp eq i64 %.26, 27
  br i1 %.27.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.31 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.31, i64 0, i32 11
  %.33 = load void (%Parser.580271*, %"Array<ExpressionNode>.580189"*)*, void (%Parser.580271*, %"Array<ExpressionNode>.580189"*)** %.32, align 8
  %.35 = getelementptr inbounds i8, i8* %.10, i64 32
  %0 = bitcast i8* %.35 to %"Array<ExpressionNode>.580189"**
  %.36 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %0, align 8
  call void %.33(%Parser.580271* %.1, %"Array<ExpressionNode>.580189"* %.36)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.41 = getelementptr inbounds i8, i8* %.10, i64 8
  %1 = bitcast i8* %.41 to %FloRange.580135**
  %.42 = load %FloRange.580135*, %FloRange.580135** %1, align 8
  %.45 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.46 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.45, i64 0, i32 4
  %.47 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.46, align 8
  %.48 = call %Token.580141* %.47(%Parser.580271* %.1, i64 27)
  %.49 = getelementptr inbounds %Token.580141, %Token.580141* %.48, i64 0, i32 2
  %.50 = load %FloRange.580135*, %FloRange.580135** %.49, align 8
  %.51 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.42, %FloRange.580135* %.50)
  store %FloRange.580135* %.51, %FloRange.580135** %1, align 8
  ret %ArrayExpressionNode.580193* %.11
}

define noalias %NewExpressionNode.580195* @Parser_parse_new_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.12 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.13 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.13, i64 0, i32 2
  %.15 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.14, align 8
  call void %.15(%Parser.580271* %.1)
  %.19 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.20 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.19, i64 0, i32 10
  %.21 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.20, align 8
  %.22 = call %TypeNode.580161* %.21(%Parser.580271* %.1)
  %.24 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.25 = bitcast i8* %.24 to %NewExpressionNode.580195*
  %.26 = bitcast i8* %.24 to %NewExpressionNode_vtable_ty.580196**
  store %NewExpressionNode_vtable_ty.580196* @NewExpressionNode_vtable_data, %NewExpressionNode_vtable_ty.580196** %.26, align 8
  call void @NewExpressionNode_constructor(%NewExpressionNode.580195* %.25, %TypeNode.580161* %.22, %FloRange.580135* %.9)
  %.32 = load %Token.580141*, %Token.580141** %.6, align 8
  %.33 = getelementptr inbounds %Token.580141, %Token.580141* %.32, i64 0, i32 1
  %.34 = load i64, i64* %.33, align 8
  %.35 = icmp eq i64 %.34, 22
  br i1 %.35, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.39 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.39, i64 0, i32 2
  %.41 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.40, align 8
  call void %.41(%Parser.580271* %.1)
  %.45 = load %Token.580141*, %Token.580141** %.6, align 8
  %.46 = getelementptr inbounds %Token.580141, %Token.580141* %.45, i64 0, i32 1
  %.47 = load i64, i64* %.46, align 8
  %.48.not = icmp eq i64 %.47, 23
  br i1 %.48.not, label %.3.if.endif, label %.3.if.if

.3.endif:                                         ; preds = %.3.if.endif, %.3
  ret %NewExpressionNode.580195* %.25

.3.if.if:                                         ; preds = %.3.if
  %.52 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.52, i64 0, i32 11
  %.54 = load void (%Parser.580271*, %"Array<ExpressionNode>.580189"*)*, void (%Parser.580271*, %"Array<ExpressionNode>.580189"*)** %.53, align 8
  %.56 = getelementptr inbounds i8, i8* %.24, i64 48
  %0 = bitcast i8* %.56 to %"Array<ExpressionNode>.580189"**
  %.57 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %0, align 8
  call void %.54(%Parser.580271* %.1, %"Array<ExpressionNode>.580189"* %.57)
  br label %.3.if.endif

.3.if.endif:                                      ; preds = %.3.if, %.3.if.if
  %.62 = getelementptr inbounds i8, i8* %.24, i64 8
  %1 = bitcast i8* %.62 to %FloRange.580135**
  %.63 = load %FloRange.580135*, %FloRange.580135** %1, align 8
  %.66 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.67 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.66, i64 0, i32 4
  %.68 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.67, align 8
  %.69 = call %Token.580141* %.68(%Parser.580271* %.1, i64 23)
  %.70 = getelementptr inbounds %Token.580141, %Token.580141* %.69, i64 0, i32 2
  %.71 = load %FloRange.580135*, %FloRange.580135** %.70, align 8
  %.72 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.63, %FloRange.580135* %.71)
  store %FloRange.580135* %.72, %FloRange.580135** %1, align 8
  br label %.3.endif
}

define noalias %StringExpressionNode.580187* @Parser_parse_string(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 4
  %.9 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.8, align 8
  %.10 = call %Token.580141* %.9(%Parser.580271* %.1, i64 31)
  %.14 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.15 = bitcast i8* %.14 to %Parser.580271*
  %.16 = bitcast i8* %.14 to %Parser_vtable_ty.580272**
  store %Parser_vtable_ty.580272* @Parser_vtable_data, %Parser_vtable_ty.580272** %.16, align 8
  call void @Parser_constructor(%Parser.580271* %.15)
  %.22 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 2
  %0 = bitcast %"Array<FloError>.580139"** %.22 to i64*
  %.231 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds i8, i8* %.14, i64 16
  %1 = bitcast i8* %.24 to i64*
  store i64 %.231, i64* %1, align 8
  %.27 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %"Array<ExpressionNode>.580189"*
  %.31 = bitcast i8* %.29 to %"Array<ExpressionNode>_vtable_ty.580190"**
  store %"Array<ExpressionNode>_vtable_ty.580190"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.580190"** %.31, align 8
  %.33 = getelementptr inbounds i8, i8* %.29, i64 8
  %2 = bitcast i8* %.33 to i8**
  store i8* %.27, i8** %2, align 8
  %.35 = getelementptr inbounds i8, i8* %.29, i64 16
  %3 = bitcast i8* %.35 to i64*
  store i64 0, i64* %3, align 8
  %.37 = getelementptr inbounds i8, i8* %.29, i64 24
  %4 = bitcast i8* %.37 to i64*
  store i64 8, i64* %4, align 8
  %.45 = getelementptr inbounds %Token.580141, %Token.580141* %.10, i64 1, i32 1
  %5 = bitcast i64* %.45 to %"Array<Array<Token>>.580151"**
  %.463 = load %"Array<Array<Token>>.580151"*, %"Array<Array<Token>>.580151"** %5, align 8
  %.474 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.463, i64 0, i32 2
  %.485 = load i64, i64* %.474, align 8
  %.496 = icmp sgt i64 %.485, 0
  %.527 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.538 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.527, i64 0, i32 0
  %.549 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.538, align 8
  %.5510 = call i1 %.549(%Parser.580271* %.1)
  %.5611 = and i1 %.496, %.5510
  br i1 %.5611, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.68 = getelementptr inbounds i8, i8* %.14, i64 8
  %6 = bitcast i8* %.68 to %"Array<Token>.580152"**
  %.72 = getelementptr inbounds i8, i8* %.14, i64 32
  %7 = bitcast i8* %.72 to i64*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge12 = phi i64 [ 0, %for.body.lr.ph ], [ %.96, %for.body ]
  %.62 = load %"Array<Array<Token>>.580151"*, %"Array<Array<Token>>.580151"** %5, align 8
  %.63 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.62, i64 0, i32 0
  %.64 = load %"Array<Array<Token>>_vtable_ty.580154"*, %"Array<Array<Token>>_vtable_ty.580154"** %.63, align 8
  %.65 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.580154", %"Array<Array<Token>>_vtable_ty.580154"* %.64, i64 0, i32 5
  %.66 = load %"Array<Token>.580152"* (%"Array<Array<Token>>.580151"*, i64)*, %"Array<Token>.580152"* (%"Array<Array<Token>>.580151"*, i64)** %.65, align 8
  %.67 = call %"Array<Token>.580152"* %.66(%"Array<Array<Token>>.580151"* %.62, i64 %storemerge12)
  store %"Array<Token>.580152"* %.67, %"Array<Token>.580152"** %6, align 8
  store i64 -1, i64* %7, align 8
  %.76 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.16, align 8
  %.77 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.76, i64 0, i32 2
  %.78 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.77, align 8
  call void %.78(%Parser.580271* %.15)
  %.83 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.16, align 8
  %.84 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.83, i64 0, i32 36
  %.85 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.84, align 8
  %.86 = call %ExpressionNode.580177* %.85(%Parser.580271* %.15)
  %.88 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.31, align 8
  %.89 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.88, i64 0, i32 2
  %.90 = load void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)*, void (%"Array<ExpressionNode>.580189"*, %ExpressionNode.580177*)** %.89, align 8
  call void %.90(%"Array<ExpressionNode>.580189"* %.30, %ExpressionNode.580177* %.86)
  %.96 = add nuw nsw i64 %storemerge12, 1
  %.46 = load %"Array<Array<Token>>.580151"*, %"Array<Array<Token>>.580151"** %5, align 8
  %.47 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.46, i64 0, i32 2
  %.48 = load i64, i64* %.47, align 8
  %.49 = icmp slt i64 %.96, %.48
  %.52 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.52, i64 0, i32 0
  %.54 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.53, align 8
  %.55 = call i1 %.54(%Parser.580271* %.1)
  %.56 = and i1 %.49, %.55
  br i1 %.56, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  %.11 = bitcast %Token.580141* %.10 to %StrToken.580149*
  %.101 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.102 = bitcast i8* %.101 to %StringExpressionNode.580187*
  %.103 = bitcast i8* %.101 to %StringExpressionNode_vtable_ty.580188**
  store %StringExpressionNode_vtable_ty.580188* @StringExpressionNode_vtable_data, %StringExpressionNode_vtable_ty.580188** %.103, align 8
  call void @StringExpressionNode_constructor(%StringExpressionNode.580187* %.102, %StrToken.580149* %.11, %"Array<ExpressionNode>.580189"* %.30)
  ret %StringExpressionNode.580187* %.102
}

define %ExpressionNode.580177* @Parser_parse_atom(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.else.else.else.else.else.else.else [
    i64 31, label %.3.if
    i64 28, label %.3.else.if
    i64 29, label %.3.else.else.if
    i64 32, label %.3.else.else.else.if
    i64 50, label %.3.else.else.else.else.if
    i64 26, label %.3.else.else.else.else.else.if
    i64 84, label %.3.else.else.else.else.else.else.if
  ]

.3.if:                                            ; preds = %.3
  %.13 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.14 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.14, i64 0, i32 14
  %.16 = load %StringExpressionNode.580187* (%Parser.580271*)*, %StringExpressionNode.580187* (%Parser.580271*)** %.15, align 8
  %.17 = call %StringExpressionNode.580187* %.16(%Parser.580271* %.1)
  %.18 = bitcast %StringExpressionNode.580187* %.17 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.18

.3.else.if:                                       ; preds = %.3
  %.28 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.29 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.28, align 8
  %.30 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.29, i64 0, i32 4
  %.31 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.30, align 8
  %.32 = call %Token.580141* %.31(%Parser.580271* %.1, i64 28)
  %.33 = bitcast %Token.580141* %.32 to %IntToken.580143*
  %.34 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.35 = bitcast i8* %.34 to %IntExpressionNode.580181*
  %.36 = bitcast i8* %.34 to %IntExpressionNode_vtable_ty.580182**
  store %IntExpressionNode_vtable_ty.580182* @IntExpressionNode_vtable_data, %IntExpressionNode_vtable_ty.580182** %.36, align 8
  call void @IntExpressionNode_constructor(%IntExpressionNode.580181* %.35, %IntToken.580143* %.33)
  %.39 = bitcast i8* %.34 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.39

.3.else.else.if:                                  ; preds = %.3
  %.49 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.50 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.49, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.50, i64 0, i32 4
  %.52 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.51, align 8
  %.53 = call %Token.580141* %.52(%Parser.580271* %.1, i64 29)
  %.54 = bitcast %Token.580141* %.53 to %FloatToken.580145*
  %.55 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.56 = bitcast i8* %.55 to %FloatExpressionNode.580183*
  %.57 = bitcast i8* %.55 to %FloatExpressionNode_vtable_ty.580184**
  store %FloatExpressionNode_vtable_ty.580184* @FloatExpressionNode_vtable_data, %FloatExpressionNode_vtable_ty.580184** %.57, align 8
  call void @FloatExpressionNode_constructor(%FloatExpressionNode.580183* %.56, %FloatToken.580145* %.54)
  %.60 = bitcast i8* %.55 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.60

.3.else.else.else.if:                             ; preds = %.3
  %.70 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.71 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.70, align 8
  %.72 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.71, i64 0, i32 4
  %.73 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.72, align 8
  %.74 = call %Token.580141* %.73(%Parser.580271* %.1, i64 32)
  %.75 = bitcast %Token.580141* %.74 to %CharToken.580147*
  %.76 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.77 = bitcast i8* %.76 to %CharExpressionNode.580185*
  %.78 = bitcast i8* %.76 to %CharExpressionNode_vtable_ty.580186**
  store %CharExpressionNode_vtable_ty.580186* @CharExpressionNode_vtable_data, %CharExpressionNode_vtable_ty.580186** %.78, align 8
  call void @CharExpressionNode_constructor(%CharExpressionNode.580185* %.77, %CharToken.580147* %.75)
  %.81 = bitcast i8* %.76 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.81

.3.else.else.else.else.if:                        ; preds = %.3
  %.91 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.92 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.91, align 8
  %.93 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.92, i64 0, i32 4
  %.94 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.93, align 8
  %.95 = call %Token.580141* %.94(%Parser.580271* %.1, i64 50)
  %.96 = bitcast %Token.580141* %.95 to %IdentifierToken.580155*
  %.97 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.98 = bitcast i8* %.97 to %VarAccessExpressionNode.580191*
  %.99 = bitcast i8* %.97 to %VarAccessExpressionNode_vtable_ty.580192**
  store %VarAccessExpressionNode_vtable_ty.580192* @VarAccessExpressionNode_vtable_data, %VarAccessExpressionNode_vtable_ty.580192** %.99, align 8
  call void @VarAccessExpressionNode_constructor(%VarAccessExpressionNode.580191* %.98, %IdentifierToken.580155* %.96)
  %.102 = bitcast i8* %.97 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.102

.3.else.else.else.else.else.if:                   ; preds = %.3
  %.112 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.113 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.112, align 8
  %.114 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.113, i64 0, i32 12
  %.115 = load %ArrayExpressionNode.580193* (%Parser.580271*)*, %ArrayExpressionNode.580193* (%Parser.580271*)** %.114, align 8
  %.116 = call %ArrayExpressionNode.580193* %.115(%Parser.580271* %.1)
  %.117 = bitcast %ArrayExpressionNode.580193* %.116 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.117

.3.else.else.else.else.else.else.if:              ; preds = %.3
  %.127 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.128 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.127, align 8
  %.129 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.128, i64 0, i32 13
  %.130 = load %NewExpressionNode.580195* (%Parser.580271*)*, %NewExpressionNode.580195* (%Parser.580271*)** %.129, align 8
  %.131 = call %NewExpressionNode.580195* %.130(%Parser.580271* %.1)
  %.132 = bitcast %NewExpressionNode.580195* %.131 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.132

.3.else.else.else.else.else.else.else:            ; preds = %.3
  %.139 = icmp eq i64 %.9, 22
  %.142 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.143 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.142, align 8
  br i1 %.139, label %.3.else.else.else.else.else.else.else.if, label %.3.else.else.else.else.else.else.else.else

.3.else.else.else.else.else.else.else.if:         ; preds = %.3.else.else.else.else.else.else.else
  %.144 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.143, i64 0, i32 2
  %.145 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.144, align 8
  call void %.145(%Parser.580271* %.1)
  %.149 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.142, align 8
  %.150 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.149, i64 0, i32 36
  %.151 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.150, align 8
  %.152 = call %ExpressionNode.580177* %.151(%Parser.580271* %.1)
  %.156 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.142, align 8
  %.157 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.156, i64 0, i32 4
  %.158 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.157, align 8
  %.159 = call %Token.580141* %.158(%Parser.580271* %.1, i64 23)
  ret %ExpressionNode.580177* %.152

.3.else.else.else.else.else.else.else.else:       ; preds = %.3.else.else.else.else.else.else.else
  %.165 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.143, i64 0, i32 1
  %.166 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.165, align 8
  %.167 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.168 = bitcast i8* %.167 to %string.580129*
  %.168.repack = bitcast i8* %.167 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.168.repack, align 8
  %.168.repack1 = getelementptr inbounds i8, i8* %.167, i64 8
  %0 = bitcast i8* %.168.repack1 to i8**
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.178, i64 0, i64 0), i8** %0, align 8
  %.168.repack2 = getelementptr inbounds i8, i8* %.167, i64 16
  %1 = bitcast i8* %.168.repack2 to i64*
  store i64 28, i64* %1, align 8
  %.168.repack3 = getelementptr inbounds i8, i8* %.167, i64 24
  %2 = bitcast i8* %.168.repack3 to i64*
  store i64 28, i64* %2, align 8
  call void %.166(%Parser.580271* %.1, %string.580129* %.168)
  %.181 = load %Token.580141*, %Token.580141** %.6, align 8
  %.182 = getelementptr inbounds %Token.580141, %Token.580141* %.181, i64 0, i32 2
  %.183 = load %FloRange.580135*, %FloRange.580135** %.182, align 8
  %.184 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.185 = bitcast i8* %.184 to %ExpressionNode.580177*
  %.186 = bitcast i8* %.184 to %ExpressionNode_vtable_ty.580178**
  store %ExpressionNode_vtable_ty.580178* @ExpressionNode_vtable_data, %ExpressionNode_vtable_ty.580178** %.186, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.580177* %.185, i64 7, %FloRange.580135* %.183)
  ret %ExpressionNode.580177* %.185
}

define noalias %ExpressionIndexNode.580197* @Parser_parse_index_expression(%Parser.580271* %.1, %ExpressionNode.580177* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.9, i64 0, i32 4
  %.11 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.10, align 8
  %.12 = call %Token.580141* %.11(%Parser.580271* %.1, i64 26)
  %.16 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.17 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.16, i64 0, i32 36
  %.18 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.17, align 8
  %.19 = call %ExpressionNode.580177* %.18(%Parser.580271* %.1)
  %.21 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.22 = load %Token.580141*, %Token.580141** %.21, align 8
  %.23 = getelementptr inbounds %Token.580141, %Token.580141* %.22, i64 0, i32 2
  %.24 = load %FloRange.580135*, %FloRange.580135** %.23, align 8
  %.25 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.26 = bitcast i8* %.25 to %ExpressionIndexNode.580197*
  %.27 = bitcast i8* %.25 to %ExpressionIndexNode_vtable_ty.580198**
  store %ExpressionIndexNode_vtable_ty.580198* @ExpressionIndexNode_vtable_data, %ExpressionIndexNode_vtable_ty.580198** %.27, align 8
  call void @ExpressionIndexNode_constructor(%ExpressionIndexNode.580197* %.26, %ExpressionNode.580177* %.2, %ExpressionNode.580177* %.19, %FloRange.580135* %.24)
  %.33 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.2, i64 0, i32 1
  %.34 = load %FloRange.580135*, %FloRange.580135** %.33, align 8
  %.37 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.37, i64 0, i32 4
  %.39 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.38, align 8
  %.40 = call %Token.580141* %.39(%Parser.580271* %.1, i64 27)
  %.41 = getelementptr inbounds %Token.580141, %Token.580141* %.40, i64 0, i32 2
  %.42 = load %FloRange.580135*, %FloRange.580135** %.41, align 8
  %.43 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.34, %FloRange.580135* %.42)
  %.44 = getelementptr inbounds i8, i8* %.25, i64 8
  %0 = bitcast i8* %.44 to %FloRange.580135**
  store %FloRange.580135* %.43, %FloRange.580135** %0, align 8
  ret %ExpressionIndexNode.580197* %.26
}

define noalias %CallExpressionNode.580201* @Parser_parse_call_expression(%Parser.580271* %.1, %ExpressionNode.580177* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.9, i64 0, i32 4
  %.11 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.10, align 8
  %.12 = call %Token.580141* %.11(%Parser.580271* %.1, i64 22)
  %.15 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.16 = load %Token.580141*, %Token.580141** %.15, align 8
  %.17 = getelementptr inbounds %Token.580141, %Token.580141* %.16, i64 0, i32 2
  %.18 = load %FloRange.580135*, %FloRange.580135** %.17, align 8
  %.19 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.20 = bitcast i8* %.19 to %CallExpressionNode.580201*
  %.21 = bitcast i8* %.19 to %CallExpressionNode_vtable_ty.580202**
  store %CallExpressionNode_vtable_ty.580202* @CallExpressionNode_vtable_data, %CallExpressionNode_vtable_ty.580202** %.21, align 8
  call void @CallExpressionNode_constructor(%CallExpressionNode.580201* %.20, %ExpressionNode.580177* %.2, %FloRange.580135* %.18)
  %.27 = load %Token.580141*, %Token.580141** %.15, align 8
  %.28 = getelementptr inbounds %Token.580141, %Token.580141* %.27, i64 0, i32 1
  %.29 = load i64, i64* %.28, align 8
  %.30.not = icmp eq i64 %.29, 23
  br i1 %.30.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.34 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.35 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.34, i64 0, i32 11
  %.36 = load void (%Parser.580271*, %"Array<ExpressionNode>.580189"*)*, void (%Parser.580271*, %"Array<ExpressionNode>.580189"*)** %.35, align 8
  %.38 = getelementptr inbounds i8, i8* %.19, i64 40
  %0 = bitcast i8* %.38 to %"Array<ExpressionNode>.580189"**
  %.39 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %0, align 8
  call void %.36(%Parser.580271* %.1, %"Array<ExpressionNode>.580189"* %.39)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.44 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.2, i64 0, i32 1
  %.45 = load %FloRange.580135*, %FloRange.580135** %.44, align 8
  %.48 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.49 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.48, i64 0, i32 4
  %.50 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.49, align 8
  %.51 = call %Token.580141* %.50(%Parser.580271* %.1, i64 23)
  %.52 = getelementptr inbounds %Token.580141, %Token.580141* %.51, i64 0, i32 2
  %.53 = load %FloRange.580135*, %FloRange.580135** %.52, align 8
  %.54 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.45, %FloRange.580135* %.53)
  %.55 = getelementptr inbounds i8, i8* %.19, i64 8
  %1 = bitcast i8* %.55 to %FloRange.580135**
  store %FloRange.580135* %.54, %FloRange.580135** %1, align 8
  ret %CallExpressionNode.580201* %.20
}

define noalias %MemberExpressionNode.580199* @Parser_parse_member_expression(%Parser.580271* %.1, %ExpressionNode.580177* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.9, i64 0, i32 4
  %.11 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.10, align 8
  %.12 = call %Token.580141* %.11(%Parser.580271* %.1, i64 47)
  %.15 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.16 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.15, i64 0, i32 4
  %.17 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.16, align 8
  %.18 = call %Token.580141* %.17(%Parser.580271* %.1, i64 50)
  %.19 = bitcast %Token.580141* %.18 to %IdentifierToken.580155*
  %.24 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.2, i64 0, i32 1
  %.25 = load %FloRange.580135*, %FloRange.580135** %.24, align 8
  %0 = getelementptr inbounds %Token.580141, %Token.580141* %.18, i64 0, i32 2
  %.28 = load %FloRange.580135*, %FloRange.580135** %0, align 8
  %.29 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.25, %FloRange.580135* %.28)
  %.30 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.31 = bitcast i8* %.30 to %MemberExpressionNode.580199*
  %.32 = bitcast i8* %.30 to %MemberExpressionNode_vtable_ty.580200**
  store %MemberExpressionNode_vtable_ty.580200* @MemberExpressionNode_vtable_data, %MemberExpressionNode_vtable_ty.580200** %.32, align 8
  call void @MemberExpressionNode_constructor(%MemberExpressionNode.580199* %.31, %ExpressionNode.580177* %.2, %IdentifierToken.580155* %.19, %FloRange.580135* %.29)
  ret %MemberExpressionNode.580199* %.31
}

define %ExpressionNode.580177* @Parser_parse_lhs_expression_allow_call(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 15
  %.9 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.8, align 8
  %.10 = call %ExpressionNode.580177* %.9(%Parser.580271* %.1)
  %.14 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.14, i64 0, i32 0
  %.16 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.15, align 8
  %.17 = call i1 %.16(%Parser.580271* %.1)
  br i1 %.17, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.3
  %.20 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %expression.0 = phi %ExpressionNode.580177* [ %expression.2, %while.entry.endif ], [ %.10, %while.entry.preheader ]
  %.21 = load %Token.580141*, %Token.580141** %.20, align 8
  %.22 = getelementptr inbounds %Token.580141, %Token.580141* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  switch i64 %.23, label %while.exit [
    i64 22, label %while.entry.if
    i64 26, label %while.entry.else.if
    i64 47, label %while.entry.else.else.if
  ]

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.3
  %expression.1 = phi %ExpressionNode.580177* [ %.10, %.3 ], [ %expression.2, %while.entry.endif ], [ %expression.0, %while.entry ]
  ret %ExpressionNode.580177* %expression.1

while.entry.if:                                   ; preds = %while.entry
  %.28 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.29 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.28, i64 0, i32 17
  %.30 = load %CallExpressionNode.580201* (%Parser.580271*, %ExpressionNode.580177*)*, %CallExpressionNode.580201* (%Parser.580271*, %ExpressionNode.580177*)** %.29, align 8
  %.32 = call %CallExpressionNode.580201* %.30(%Parser.580271* %.1, %ExpressionNode.580177* %expression.0)
  %.33 = bitcast %CallExpressionNode.580201* %.32 to %ExpressionNode.580177*
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.else.if, %while.entry.else.else.if, %while.entry.if
  %expression.2 = phi %ExpressionNode.580177* [ %.33, %while.entry.if ], [ %.50, %while.entry.else.if ], [ %.67, %while.entry.else.else.if ]
  %.75 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.76 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.75, i64 0, i32 0
  %.77 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.76, align 8
  %.78 = call i1 %.77(%Parser.580271* %.1)
  br i1 %.78, label %while.entry, label %while.exit

while.entry.else.if:                              ; preds = %while.entry
  %.45 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.46 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.45, i64 0, i32 16
  %.47 = load %ExpressionIndexNode.580197* (%Parser.580271*, %ExpressionNode.580177*)*, %ExpressionIndexNode.580197* (%Parser.580271*, %ExpressionNode.580177*)** %.46, align 8
  %.49 = call %ExpressionIndexNode.580197* %.47(%Parser.580271* %.1, %ExpressionNode.580177* %expression.0)
  %.50 = bitcast %ExpressionIndexNode.580197* %.49 to %ExpressionNode.580177*
  br label %while.entry.endif

while.entry.else.else.if:                         ; preds = %while.entry
  %.62 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.63 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.62, i64 0, i32 18
  %.64 = load %MemberExpressionNode.580199* (%Parser.580271*, %ExpressionNode.580177*)*, %MemberExpressionNode.580199* (%Parser.580271*, %ExpressionNode.580177*)** %.63, align 8
  %.66 = call %MemberExpressionNode.580199* %.64(%Parser.580271* %.1, %ExpressionNode.580177* %expression.0)
  %.67 = bitcast %MemberExpressionNode.580199* %.66 to %ExpressionNode.580177*
  br label %while.entry.endif
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_unary_op(%Parser.580271* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endif.endif [
    i64 20, label %.3.if
    i64 21, label %.3.endif.if
    i64 4, label %.3.endif.endif.if
    i64 44, label %.3.endif.endif.endif.if
    i64 34, label %.3.endif.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.if, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 0, %.3 ], [ 1, %.3.endif.if ], [ 4, %.3.endif.endif.if ], [ 5, %.3.endif.endif.endif.if ], [ 6, %.3.endif.endif.endif.endif.if ], [ -1, %.3.endif.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif:                 ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.580177* @Parser_parse_unary_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.12 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.13 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.13, i64 0, i32 20
  %.15 = load i64 (%Parser.580271*)*, i64 (%Parser.580271*)** %.14, align 8
  %.16 = call i64 %.15(%Parser.580271* %.1)
  %.20.not = icmp eq i64 %.16, -1
  br i1 %.20.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.24 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.24, i64 0, i32 2
  %.26 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.25, align 8
  call void %.26(%Parser.580271* %.1)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.31 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.31, i64 0, i32 19
  %.33 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.32, align 8
  %.34 = call %ExpressionNode.580177* %.33(%Parser.580271* %.1)
  br i1 %.20.not, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.42 = load %Token.580141*, %Token.580141** %.6, align 8
  %.43 = getelementptr inbounds %Token.580141, %Token.580141* %.42, i64 0, i32 1
  %.44 = load i64, i64* %.43, align 8
  %.45 = icmp eq i64 %.44, 20
  %spec.select = select i1 %.45, i64 2, i64 %.16
  %.54 = icmp eq i64 %.44, 21
  %op.2 = select i1 %.54, i64 3, i64 %spec.select
  %.60.not = icmp eq i64 %op.2, -1
  br i1 %.60.not, label %.3.endif.endif, label %.3.endif.if.endif.endif.if

.3.endif.endif:                                   ; preds = %.3.endif.if.endif.endif.if, %.3.endif.if, %.3.endif
  %op.0 = phi i64 [ %.16, %.3.endif ], [ %op.2, %.3.endif.if ], [ %op.2, %.3.endif.if.endif.endif.if ]
  %.72 = icmp eq i64 %op.0, -1
  br i1 %.72, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.if.endif.endif.if:                       ; preds = %.3.endif.if
  %.64 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.12, align 8
  %.65 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.64, i64 0, i32 2
  %.66 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.65, align 8
  call void %.66(%Parser.580271* %.1)
  br label %.3.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  ret %ExpressionNode.580177* %.34

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.80 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.34, i64 0, i32 1
  %.81 = load %FloRange.580135*, %FloRange.580135** %.80, align 8
  %.82 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.9, %FloRange.580135* %.81)
  %.83 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.84 = bitcast i8* %.83 to %UnaryExpressionNode.580209*
  %.85 = bitcast i8* %.83 to %UnaryExpressionNode_vtable_ty.580210**
  store %UnaryExpressionNode_vtable_ty.580210* @UnaryExpressionNode_vtable_data, %UnaryExpressionNode_vtable_ty.580210** %.85, align 8
  call void @UnaryExpressionNode_constructor(%UnaryExpressionNode.580209* %.84, i64 %op.0, %ExpressionNode.580177* %.34, %FloRange.580135* %.82)
  %.88 = bitcast i8* %.83 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.88
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_term_expr_op(%Parser.580271* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endif [
    i64 3, label %.3.if
    i64 6, label %.3.endif.if
    i64 7, label %.3.endif.endif.if
    i64 8, label %.3.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 2, %.3 ], [ 3, %.3.endif.if ], [ 4, %.3.endif.endif.if ], [ 5, %.3.endif.endif.endif.if ], [ -1, %.3.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif:                       ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.580177* @Parser_parse_term_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 21
  %.9 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.8, align 8
  %.10 = call %ExpressionNode.580177* %.9(%Parser.580271* %.1)
  %.14 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.14, i64 0, i32 22
  %.16 = load i64 (%Parser.580271*)*, i64 (%Parser.580271*)** %.15, align 8
  %.17 = call i64 %.16(%Parser.580271* %.1)
  %.21 = icmp eq i64 %.17, -1
  %.24 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.24, i64 0, i32 0
  %.26 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.25, align 8
  %.27 = call i1 %.26(%Parser.580271* %.1)
  %.28 = xor i1 %.27, true
  %.29 = or i1 %.21, %.28
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.580177* %.10

.3.endif:                                         ; preds = %.3
  %.35 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.35, i64 0, i32 2
  %.37 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.36, align 8
  call void %.37(%Parser.580271* %.1)
  %.43 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.43, i64 0, i32 23
  %.45 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.44, align 8
  %.46 = call %ExpressionNode.580177* %.45(%Parser.580271* %.1)
  %.47 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.48 = bitcast i8* %.47 to %BinaryExpressionNode.580205*
  %.49 = bitcast i8* %.47 to %BinaryExpressionNode_vtable_ty.580206**
  store %BinaryExpressionNode_vtable_ty.580206* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.580206** %.49, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.580205* %.48, %ExpressionNode.580177* %.10, i64 %.17, %ExpressionNode.580177* %.46)
  %.52 = bitcast i8* %.47 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.52
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_arith_expr_op(%Parser.580271* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %switch.selectcmp = icmp eq i64 %.9, 4
  %switch.select = select i1 %switch.selectcmp, i64 1, i64 -1
  %switch.selectcmp1 = icmp eq i64 %.9, 5
  %switch.select2 = select i1 %switch.selectcmp1, i64 0, i64 %switch.select
  ret i64 %switch.select2
}

define %ExpressionNode.580177* @Parser_parse_arithmetic_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 23
  %.9 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.8, align 8
  %.10 = call %ExpressionNode.580177* %.9(%Parser.580271* %.1)
  %.14 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.14, i64 0, i32 24
  %.16 = load i64 (%Parser.580271*)*, i64 (%Parser.580271*)** %.15, align 8
  %.17 = call i64 %.16(%Parser.580271* %.1)
  %.21 = icmp eq i64 %.17, -1
  %.24 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.24, i64 0, i32 0
  %.26 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.25, align 8
  %.27 = call i1 %.26(%Parser.580271* %.1)
  %.28 = xor i1 %.27, true
  %.29 = or i1 %.21, %.28
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.580177* %.10

.3.endif:                                         ; preds = %.3
  %.35 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.35, i64 0, i32 2
  %.37 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.36, align 8
  call void %.37(%Parser.580271* %.1)
  %.43 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.43, i64 0, i32 25
  %.45 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.44, align 8
  %.46 = call %ExpressionNode.580177* %.45(%Parser.580271* %.1)
  %.47 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.48 = bitcast i8* %.47 to %BinaryExpressionNode.580205*
  %.49 = bitcast i8* %.47 to %BinaryExpressionNode_vtable_ty.580206**
  store %BinaryExpressionNode_vtable_ty.580206* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.580206** %.49, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.580205* %.48, %ExpressionNode.580177* %.10, i64 %.17, %ExpressionNode.580177* %.46)
  %.52 = bitcast i8* %.47 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.52
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_bitshift_expr_op(%Parser.580271* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %switch.selectcmp = icmp eq i64 %.9, 46
  %switch.select = select i1 %switch.selectcmp, i64 13, i64 -1
  %switch.selectcmp1 = icmp eq i64 %.9, 45
  %switch.select2 = select i1 %switch.selectcmp1, i64 12, i64 %switch.select
  ret i64 %switch.select2
}

define %ExpressionNode.580177* @Parser_parse_bitshift_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 25
  %.9 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.8, align 8
  %.10 = call %ExpressionNode.580177* %.9(%Parser.580271* %.1)
  %.14 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.14, i64 0, i32 26
  %.16 = load i64 (%Parser.580271*)*, i64 (%Parser.580271*)** %.15, align 8
  %.17 = call i64 %.16(%Parser.580271* %.1)
  %.21 = icmp eq i64 %.17, -1
  %.24 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.24, i64 0, i32 0
  %.26 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.25, align 8
  %.27 = call i1 %.26(%Parser.580271* %.1)
  %.28 = xor i1 %.27, true
  %.29 = or i1 %.21, %.28
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.580177* %.10

.3.endif:                                         ; preds = %.3
  %.35 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.35, i64 0, i32 2
  %.37 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.36, align 8
  call void %.37(%Parser.580271* %.1)
  %.43 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.43, i64 0, i32 27
  %.45 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.44, align 8
  %.46 = call %ExpressionNode.580177* %.45(%Parser.580271* %.1)
  %.47 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.48 = bitcast i8* %.47 to %BinaryExpressionNode.580205*
  %.49 = bitcast i8* %.47 to %BinaryExpressionNode_vtable_ty.580206**
  store %BinaryExpressionNode_vtable_ty.580206* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.580206** %.49, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.580205* %.48, %ExpressionNode.580177* %.10, i64 %.17, %ExpressionNode.580177* %.46)
  %.52 = bitcast i8* %.47 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.52
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_comp_expr_op(%Parser.580271* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endif.endif.endif [
    i64 38, label %.3.if
    i64 39, label %.3.endif.if
    i64 41, label %.3.endif.endif.if
    i64 40, label %.3.endif.endif.endif.if
    i64 36, label %.3.endif.endif.endif.endif.if
    i64 37, label %.3.endif.endif.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.if, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 6, %.3 ], [ 8, %.3.endif.if ], [ 7, %.3.endif.endif.if ], [ 9, %.3.endif.endif.endif.if ], [ 10, %.3.endif.endif.endif.endif.if ], [ 11, %.3.endif.endif.endif.endif.endif.if ], [ -1, %.3.endif.endif.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.580177* @Parser_parse_comparasion_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 27
  %.9 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.8, align 8
  %.10 = call %ExpressionNode.580177* %.9(%Parser.580271* %.1)
  %.14 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.14, i64 0, i32 28
  %.16 = load i64 (%Parser.580271*)*, i64 (%Parser.580271*)** %.15, align 8
  %.17 = call i64 %.16(%Parser.580271* %.1)
  %.21 = icmp eq i64 %.17, -1
  %.24 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.24, i64 0, i32 0
  %.26 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.25, align 8
  %.27 = call i1 %.26(%Parser.580271* %.1)
  %.28 = xor i1 %.27, true
  %.29 = or i1 %.21, %.28
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.580177* %.10

.3.endif:                                         ; preds = %.3
  %.35 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.35, i64 0, i32 2
  %.37 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.36, align 8
  call void %.37(%Parser.580271* %.1)
  %.43 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.43, i64 0, i32 29
  %.45 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.44, align 8
  %.46 = call %ExpressionNode.580177* %.45(%Parser.580271* %.1)
  %.47 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.48 = bitcast i8* %.47 to %BinaryExpressionNode.580205*
  %.49 = bitcast i8* %.47 to %BinaryExpressionNode_vtable_ty.580206**
  store %BinaryExpressionNode_vtable_ty.580206* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.580206** %.49, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.580205* %.48, %ExpressionNode.580177* %.10, i64 %.17, %ExpressionNode.580177* %.46)
  %.52 = bitcast i8* %.47 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.52
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_bit_expr_op(%Parser.580271* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif [
    i64 52, label %.3.if
    i64 51, label %.3.endif.if
    i64 53, label %.3.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 14, %.3 ], [ 15, %.3.endif.if ], [ 16, %.3.endif.endif.if ], [ -1, %.3.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif:                             ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.580177* @Parser_parse_bit_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 29
  %.9 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.8, align 8
  %.10 = call %ExpressionNode.580177* %.9(%Parser.580271* %.1)
  %.14 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.14, i64 0, i32 30
  %.16 = load i64 (%Parser.580271*)*, i64 (%Parser.580271*)** %.15, align 8
  %.17 = call i64 %.16(%Parser.580271* %.1)
  %.21 = icmp eq i64 %.17, -1
  %.24 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.24, i64 0, i32 0
  %.26 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.25, align 8
  %.27 = call i1 %.26(%Parser.580271* %.1)
  %.28 = xor i1 %.27, true
  %.29 = or i1 %.21, %.28
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.580177* %.10

.3.endif:                                         ; preds = %.3
  %.35 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.35, i64 0, i32 2
  %.37 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.36, align 8
  call void %.37(%Parser.580271* %.1)
  %.43 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.43, i64 0, i32 31
  %.45 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.44, align 8
  %.46 = call %ExpressionNode.580177* %.45(%Parser.580271* %.1)
  %.47 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.48 = bitcast i8* %.47 to %BinaryExpressionNode.580205*
  %.49 = bitcast i8* %.47 to %BinaryExpressionNode_vtable_ty.580206**
  store %BinaryExpressionNode_vtable_ty.580206* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.580206** %.49, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.580205* %.48, %ExpressionNode.580177* %.10, i64 %.17, %ExpressionNode.580177* %.46)
  %.52 = bitcast i8* %.47 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.52
}

define %ExpressionNode.580177* @Parser_parse_range_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 31
  %.9 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.8, align 8
  %.10 = call %ExpressionNode.580177* %.9(%Parser.580271* %.1)
  %.13 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.14 = load %Token.580141*, %Token.580141** %.13, align 8
  %.15 = getelementptr inbounds %Token.580141, %Token.580141* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp ne i64 %.16, 48
  %.20 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.20, i64 0, i32 0
  %.22 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.21, align 8
  %.23 = call i1 %.22(%Parser.580271* %.1)
  %.24 = xor i1 %.23, true
  %.25 = or i1 %.17, %.24
  br i1 %.25, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.580177* %.10

.3.endif:                                         ; preds = %.3
  %.31 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.31, i64 0, i32 2
  %.33 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.32, align 8
  call void %.33(%Parser.580271* %.1)
  %.38 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.39 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.38, i64 0, i32 36
  %.40 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.39, align 8
  %.41 = call %ExpressionNode.580177* %.40(%Parser.580271* %.1)
  %.42 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.43 = bitcast i8* %.42 to %BinaryExpressionNode.580205*
  %.44 = bitcast i8* %.42 to %BinaryExpressionNode_vtable_ty.580206**
  store %BinaryExpressionNode_vtable_ty.580206* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.580206** %.44, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.580205* %.43, %ExpressionNode.580177* %.10, i64 30, %ExpressionNode.580177* %.41)
  %.47 = bitcast i8* %.42 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.47
}

define %ExpressionNode.580177* @Parser_parse_typecast_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 32
  %.9 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.8, align 8
  %.10 = call %ExpressionNode.580177* %.9(%Parser.580271* %.1)
  %.13 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.14 = load %Token.580141*, %Token.580141** %.13, align 8
  %.15 = getelementptr inbounds %Token.580141, %Token.580141* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17.not = icmp eq i64 %.16, 85
  br i1 %.17.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.580177* %.10

.3.endif:                                         ; preds = %.3
  %.23 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.24 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.23, i64 0, i32 2
  %.25 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.24, align 8
  call void %.25(%Parser.580271* %.1)
  %.30 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.31 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.30, i64 0, i32 10
  %.32 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.31, align 8
  %.33 = call %TypeNode.580161* %.32(%Parser.580271* %.1)
  %.34 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.35 = bitcast i8* %.34 to %TypeCastExpressionNode.580203*
  %.36 = bitcast i8* %.34 to %TypeCastExpressionNode_vtable_ty.580204**
  store %TypeCastExpressionNode_vtable_ty.580204* @TypeCastExpressionNode_vtable_data, %TypeCastExpressionNode_vtable_ty.580204** %.36, align 8
  call void @TypeCastExpressionNode_constructor(%TypeCastExpressionNode.580203* %.35, %ExpressionNode.580177* %.10, %TypeNode.580161* %.33)
  %.401.cast = bitcast i8* %.34 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.401.cast
}

define %ExpressionNode.580177* @Parser_parse_ternary_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 33
  %.9 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.8, align 8
  %.10 = call %ExpressionNode.580177* %.9(%Parser.580271* %.1)
  %.13 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.14 = load %Token.580141*, %Token.580141** %.13, align 8
  %.15 = getelementptr inbounds %Token.580141, %Token.580141* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp ne i64 %.16, 33
  %.20 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.20, i64 0, i32 0
  %.22 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.21, align 8
  %.23 = call i1 %.22(%Parser.580271* %.1)
  %.24 = xor i1 %.23, true
  %.25 = or i1 %.17, %.24
  br i1 %.25, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.580177* %.10

.3.endif:                                         ; preds = %.3
  %.31 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.31, i64 0, i32 2
  %.33 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.32, align 8
  call void %.33(%Parser.580271* %.1)
  %.37 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.37, i64 0, i32 36
  %.39 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.38, align 8
  %.40 = call %ExpressionNode.580177* %.39(%Parser.580271* %.1)
  %.44 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.45 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.44, i64 0, i32 4
  %.46 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.45, align 8
  %.47 = call %Token.580141* %.46(%Parser.580271* %.1, i64 0)
  %.50 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.50, i64 0, i32 36
  %.52 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.51, align 8
  %.53 = call %ExpressionNode.580177* %.52(%Parser.580271* %.1)
  %.58 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.59 = bitcast i8* %.58 to %TernaryExpressionNode.580207*
  %.60 = bitcast i8* %.58 to %TernaryExpressionNode_vtable_ty.580208**
  store %TernaryExpressionNode_vtable_ty.580208* @TernaryExpressionNode_vtable_data, %TernaryExpressionNode_vtable_ty.580208** %.60, align 8
  call void @TernaryExpressionNode_constructor(%TernaryExpressionNode.580207* %.59, %ExpressionNode.580177* %.10, %ExpressionNode.580177* %.40, %ExpressionNode.580177* %.53)
  %.63 = bitcast i8* %.58 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.63
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_assign_op(%Parser.580271* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endi...endif.endif [
    i64 35, label %.3.if
    i64 9, label %.3.if.fold.split
    i64 10, label %.3.if.fold.split1
    i64 11, label %.3.if.fold.split2
    i64 12, label %.3.if.fold.split3
    i64 13, label %.3.if.fold.split4
    i64 14, label %.3.if.fold.split5
    i64 15, label %.3.if.fold.split6
    i64 16, label %.3.if.fold.split7
    i64 17, label %.3.if.fold.split8
    i64 19, label %.3.if.fold.split9
  ]

.3.if.fold.split:                                 ; preds = %.3
  br label %.3.if

.3.if.fold.split1:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split2:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split3:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split4:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split5:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split6:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split7:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split8:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split9:                                ; preds = %.3
  br label %.3.if

.3.if:                                            ; preds = %.3, %.3.if.fold.split9, %.3.if.fold.split8, %.3.if.fold.split7, %.3.if.fold.split6, %.3.if.fold.split5, %.3.if.fold.split4, %.3.if.fold.split3, %.3.if.fold.split2, %.3.if.fold.split1, %.3.if.fold.split, %.3.endif.endif.endif.endi...endif.endif
  %merge = phi i64 [ 18, %.3 ], [ %., %.3.endif.endif.endif.endi...endif.endif ], [ 21, %.3.if.fold.split ], [ 20, %.3.if.fold.split1 ], [ 19, %.3.if.fold.split2 ], [ 22, %.3.if.fold.split3 ], [ 23, %.3.if.fold.split4 ], [ 24, %.3.if.fold.split5 ], [ 25, %.3.if.fold.split6 ], [ 26, %.3.if.fold.split7 ], [ 27, %.3.if.fold.split8 ], [ 28, %.3.if.fold.split9 ]
  ret i64 %merge

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3
  %.98 = icmp eq i64 %.9, 18
  %. = select i1 %.98, i64 29, i64 -1
  br label %.3.if
}

define %ExpressionNode.580177* @Parser_parse_expression(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 34
  %.9 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.8, align 8
  %.10 = call %ExpressionNode.580177* %.9(%Parser.580271* %.1)
  %.13 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.14 = load %Token.580141*, %Token.580141** %.13, align 8
  %.15 = getelementptr inbounds %Token.580141, %Token.580141* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 81
  %.20 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.20, i64 0, i32 0
  %.22 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.21, align 8
  %.23 = call i1 %.22(%Parser.580271* %.1)
  %.24 = and i1 %.17, %.23
  %.28 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  br i1 %.24, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.29 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.28, i64 0, i32 2
  %.30 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.29, align 8
  call void %.30(%Parser.580271* %.1)
  %.35 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.35, i64 0, i32 36
  %.37 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.36, align 8
  %.38 = call %ExpressionNode.580177* %.37(%Parser.580271* %.1)
  %.39 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.40 = bitcast i8* %.39 to %BinaryExpressionNode.580205*
  %.41 = bitcast i8* %.39 to %BinaryExpressionNode_vtable_ty.580206**
  store %BinaryExpressionNode_vtable_ty.580206* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.580206** %.41, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.580205* %.40, %ExpressionNode.580177* %.10, i64 17, %ExpressionNode.580177* %.38)
  %.44 = bitcast i8* %.39 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.44

.3.endif:                                         ; preds = %.3
  %.49 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.28, i64 0, i32 35
  %.50 = load i64 (%Parser.580271*)*, i64 (%Parser.580271*)** %.49, align 8
  %.51 = call i64 %.50(%Parser.580271* %.1)
  %.55 = icmp eq i64 %.51, -1
  %.58 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.59 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.58, i64 0, i32 0
  %.60 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.59, align 8
  %.61 = call i1 %.60(%Parser.580271* %.1)
  %.62 = xor i1 %.61, true
  %.63 = or i1 %.55, %.62
  br i1 %.63, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  ret %ExpressionNode.580177* %.10

.3.endif.endif:                                   ; preds = %.3.endif
  %.69 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.70 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.69, i64 0, i32 2
  %.71 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.70, align 8
  call void %.71(%Parser.580271* %.1)
  %.77 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.77, i64 0, i32 36
  %.79 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.78, align 8
  %.80 = call %ExpressionNode.580177* %.79(%Parser.580271* %.1)
  %.81 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.82 = bitcast i8* %.81 to %BinaryExpressionNode.580205*
  %.83 = bitcast i8* %.81 to %BinaryExpressionNode_vtable_ty.580206**
  store %BinaryExpressionNode_vtable_ty.580206* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.580206** %.83, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.580205* %.82, %ExpressionNode.580177* %.10, i64 %.51, %ExpressionNode.580177* %.80)
  %.86 = bitcast i8* %.81 to %ExpressionNode.580177*
  ret %ExpressionNode.580177* %.86
}

define noalias %IfStatementNode.580211* @Parser_parse_if_statement(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.11 = bitcast i8* %.10 to %IfStatementNode.580211*
  %.12 = bitcast i8* %.10 to %IfStatementNode_vtable_ty.580212**
  store %IfStatementNode_vtable_ty.580212* @IfStatementNode_vtable_data, %IfStatementNode_vtable_ty.580212** %.12, align 8
  call void @IfStatementNode_constructor(%IfStatementNode.580211* %.11, %FloRange.580135* %.9)
  %.17 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.18, i64 0, i32 2
  %.20 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.19, align 8
  call void %.20(%Parser.580271* %.1)
  %.25 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.25, i64 0, i32 36
  %.27 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.26, align 8
  %.28 = call %ExpressionNode.580177* %.27(%Parser.580271* %.1)
  %.29 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.29 to %ExpressionNode.580177**
  store %ExpressionNode.580177* %.28, %ExpressionNode.580177** %0, align 8
  %.33 = getelementptr inbounds i8, i8* %.10, i64 8
  %1 = bitcast i8* %.33 to %FloRange.580135**
  %.34 = load %FloRange.580135*, %FloRange.580135** %1, align 8
  %.38 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.28, i64 0, i32 1
  %.39 = load %FloRange.580135*, %FloRange.580135** %.38, align 8
  %.40 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.34, %FloRange.580135* %.39)
  store %FloRange.580135* %.40, %FloRange.580135** %1, align 8
  %.46 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.47 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.46, i64 0, i32 43
  %.48 = load %BlockNode.580173* (%Parser.580271*)*, %BlockNode.580173* (%Parser.580271*)** %.47, align 8
  %.49 = call %BlockNode.580173* %.48(%Parser.580271* %.1)
  %.50 = getelementptr inbounds i8, i8* %.10, i64 32
  %2 = bitcast i8* %.50 to %BlockNode.580173**
  store %BlockNode.580173* %.49, %BlockNode.580173** %2, align 8
  %.54 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.54, i64 0, i32 5
  %.56 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.55, align 8
  call void %.56(%Parser.580271* %.1)
  %.60 = load %Token.580141*, %Token.580141** %.6, align 8
  %.61 = getelementptr inbounds %Token.580141, %Token.580141* %.60, i64 0, i32 1
  %.62 = load i64, i64* %.61, align 8
  %.63 = icmp eq i64 %.62, 57
  br i1 %.63, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.67 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.68 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.67, i64 0, i32 2
  %.69 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.68, align 8
  call void %.69(%Parser.580271* %.1)
  %.74 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.75 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.74, i64 0, i32 43
  %.76 = load %BlockNode.580173* (%Parser.580271*)*, %BlockNode.580173* (%Parser.580271*)** %.75, align 8
  %.77 = call %BlockNode.580173* %.76(%Parser.580271* %.1)
  %.78 = getelementptr inbounds i8, i8* %.10, i64 40
  %3 = bitcast i8* %.78 to %BlockNode.580173**
  store %BlockNode.580173* %.77, %BlockNode.580173** %3, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret %IfStatementNode.580211* %.11
}

define noalias %WhileStatementNode.580213* @Parser_parse_while_statement(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.11 = bitcast i8* %.10 to %WhileStatementNode.580213*
  %.12 = bitcast i8* %.10 to %WhileStatementNode_vtable_ty.580214**
  store %WhileStatementNode_vtable_ty.580214* @WhileStatementNode_vtable_data, %WhileStatementNode_vtable_ty.580214** %.12, align 8
  call void @WhileStatementNode_constructor(%WhileStatementNode.580213* %.11, %FloRange.580135* %.9)
  %.17 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.18, i64 0, i32 2
  %.20 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.19, align 8
  call void %.20(%Parser.580271* %.1)
  %.25 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.25, i64 0, i32 36
  %.27 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.26, align 8
  %.28 = call %ExpressionNode.580177* %.27(%Parser.580271* %.1)
  %.29 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.29 to %ExpressionNode.580177**
  store %ExpressionNode.580177* %.28, %ExpressionNode.580177** %0, align 8
  %.33 = getelementptr inbounds i8, i8* %.10, i64 8
  %1 = bitcast i8* %.33 to %FloRange.580135**
  %.34 = load %FloRange.580135*, %FloRange.580135** %1, align 8
  %.38 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.28, i64 0, i32 1
  %.39 = load %FloRange.580135*, %FloRange.580135** %.38, align 8
  %.40 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.34, %FloRange.580135* %.39)
  store %FloRange.580135* %.40, %FloRange.580135** %1, align 8
  %.46 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.47 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.46, i64 0, i32 43
  %.48 = load %BlockNode.580173* (%Parser.580271*)*, %BlockNode.580173* (%Parser.580271*)** %.47, align 8
  %.49 = call %BlockNode.580173* %.48(%Parser.580271* %.1)
  %.50 = getelementptr inbounds i8, i8* %.10, i64 32
  %2 = bitcast i8* %.50 to %BlockNode.580173**
  store %BlockNode.580173* %.49, %BlockNode.580173** %2, align 8
  ret %WhileStatementNode.580213* %.11
}

define noalias %ForStatementNode.580215* @Parser_parse_for_statement(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(80) i8* @malloc(i64 80)
  %.11 = bitcast i8* %.10 to %ForStatementNode.580215*
  %.12 = bitcast i8* %.10 to %ForStatementNode_vtable_ty.580216**
  store %ForStatementNode_vtable_ty.580216* @ForStatementNode_vtable_data, %ForStatementNode_vtable_ty.580216** %.12, align 8
  call void @ForStatementNode_constructor(%ForStatementNode.580215* %.11, %FloRange.580135* %.9)
  %.17 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.18, i64 0, i32 2
  %.20 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.19, align 8
  call void %.20(%Parser.580271* %.1)
  %.24 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.24, i64 0, i32 3
  %.26 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.25, align 8
  %.27 = call %Token.580141* %.26(%Parser.580271* %.1, i64 1)
  %.28 = getelementptr inbounds %Token.580141, %Token.580141* %.27, i64 0, i32 1
  %.29 = load i64, i64* %.28, align 8
  %.30.not = icmp eq i64 %.29, 81
  br i1 %.30.not, label %.3.else, label %.3.if

.3.if:                                            ; preds = %.3
  %.34 = load %Token.580141*, %Token.580141** %.6, align 8
  %.35 = getelementptr inbounds %Token.580141, %Token.580141* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37.not = icmp eq i64 %.36, 1
  br i1 %.37.not, label %.3.if.endif, label %.3.if.if

.3.else:                                          ; preds = %.3
  %.97 = getelementptr inbounds i8, i8* %.10, i64 16
  %0 = bitcast i8* %.97 to i64*
  store i64 1, i64* %0, align 8
  %.102 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.103 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.102, i64 0, i32 4
  %.104 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.103, align 8
  %.105 = call %Token.580141* %.104(%Parser.580271* %.1, i64 50)
  %.107 = getelementptr inbounds i8, i8* %.10, i64 64
  %1 = bitcast i8* %.107 to %Token.580141**
  store %Token.580141* %.105, %Token.580141** %1, align 8
  %.111 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.112 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.111, i64 0, i32 4
  %.113 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.112, align 8
  %.114 = call %Token.580141* %.113(%Parser.580271* %.1, i64 81)
  %.118 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.119 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.118, i64 0, i32 36
  %.120 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.119, align 8
  %.121 = call %ExpressionNode.580177* %.120(%Parser.580271* %.1)
  br label %.3.endif.sink.split

.3.endif.sink.split:                              ; preds = %.3.else, %.3.if.endif.endif.if
  %.sink = phi i64 [ 40, %.3.if.endif.endif.if ], [ 48, %.3.else ]
  %.91.sink = phi %ExpressionNode.580177* [ %.91, %.3.if.endif.endif.if ], [ %.121, %.3.else ]
  %.92 = getelementptr inbounds i8, i8* %.10, i64 %.sink
  %2 = bitcast i8* %.92 to %ExpressionNode.580177**
  store %ExpressionNode.580177* %.91.sink, %ExpressionNode.580177** %2, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.endif.sink.split, %.3.if.endif.endif
  %.127 = getelementptr inbounds i8, i8* %.10, i64 8
  %3 = bitcast i8* %.127 to %FloRange.580135**
  %.128 = load %FloRange.580135*, %FloRange.580135** %3, align 8
  %.131 = load %Token.580141*, %Token.580141** %.6, align 8
  %.132 = getelementptr inbounds %Token.580141, %Token.580141* %.131, i64 0, i32 2
  %.133 = load %FloRange.580135*, %FloRange.580135** %.132, align 8
  %.134 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.128, %FloRange.580135* %.133)
  store %FloRange.580135* %.134, %FloRange.580135** %3, align 8
  %.139 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.140 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.139, i64 0, i32 0
  %.141 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.140, align 8
  %.142 = call i1 %.141(%Parser.580271* %.1)
  br i1 %.142, label %.3.endif.if, label %.3.endif.endif

.3.if.if:                                         ; preds = %.3.if
  %.42 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.43 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.42, i64 0, i32 42
  %.44 = load %StatementNode.580171* (%Parser.580271*)*, %StatementNode.580171* (%Parser.580271*)** %.43, align 8
  %.45 = call %StatementNode.580171* %.44(%Parser.580271* %.1)
  %.46 = getelementptr inbounds i8, i8* %.10, i64 24
  %4 = bitcast i8* %.46 to %StatementNode.580171**
  store %StatementNode.580171* %.45, %StatementNode.580171** %4, align 8
  br label %.3.if.endif

.3.if.endif:                                      ; preds = %.3.if, %.3.if.if
  %.51 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.51, i64 0, i32 4
  %.53 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.52, align 8
  %.54 = call %Token.580141* %.53(%Parser.580271* %.1, i64 1)
  %.57 = load %Token.580141*, %Token.580141** %.6, align 8
  %.58 = getelementptr inbounds %Token.580141, %Token.580141* %.57, i64 0, i32 1
  %.59 = load i64, i64* %.58, align 8
  %.60.not = icmp eq i64 %.59, 1
  br i1 %.60.not, label %.3.if.endif.endif, label %.3.if.endif.if

.3.if.endif.if:                                   ; preds = %.3.if.endif
  %.65 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.65, i64 0, i32 36
  %.67 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.66, align 8
  %.68 = call %ExpressionNode.580177* %.67(%Parser.580271* %.1)
  %.69 = getelementptr inbounds i8, i8* %.10, i64 32
  %5 = bitcast i8* %.69 to %ExpressionNode.580177**
  store %ExpressionNode.580177* %.68, %ExpressionNode.580177** %5, align 8
  br label %.3.if.endif.endif

.3.if.endif.endif:                                ; preds = %.3.if.endif, %.3.if.endif.if
  %.74 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.75 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.74, i64 0, i32 4
  %.76 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.75, align 8
  %.77 = call %Token.580141* %.76(%Parser.580271* %.1, i64 1)
  %.80 = load %Token.580141*, %Token.580141** %.6, align 8
  %.81 = getelementptr inbounds %Token.580141, %Token.580141* %.80, i64 0, i32 1
  %.82 = load i64, i64* %.81, align 8
  %.83.not = icmp eq i64 %.82, 24
  br i1 %.83.not, label %.3.endif, label %.3.if.endif.endif.if

.3.if.endif.endif.if:                             ; preds = %.3.if.endif.endif
  %.88 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.89 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.88, i64 0, i32 36
  %.90 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.89, align 8
  %.91 = call %ExpressionNode.580177* %.90(%Parser.580271* %.1)
  br label %.3.endif.sink.split

.3.endif.if:                                      ; preds = %.3.endif
  %.147 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.148 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.147, i64 0, i32 43
  %.149 = load %BlockNode.580173* (%Parser.580271*)*, %BlockNode.580173* (%Parser.580271*)** %.148, align 8
  %.150 = call %BlockNode.580173* %.149(%Parser.580271* %.1)
  %.151 = getelementptr inbounds i8, i8* %.10, i64 72
  %6 = bitcast i8* %.151 to %BlockNode.580173**
  store %BlockNode.580173* %.150, %BlockNode.580173** %6, align 8
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.if, %.3.endif
  ret %ForStatementNode.580215* %.11
}

define noalias %VarDeclarationStatement.580219* @Parser_parse_variable_declaration_statement(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.11 = bitcast i8* %.10 to %VarDeclarationStatement.580219*
  %.12 = bitcast i8* %.10 to %VarDeclarationStatement_vtable_ty.580220**
  store %VarDeclarationStatement_vtable_ty.580220* @VarDeclarationStatement_vtable_data, %VarDeclarationStatement_vtable_ty.580220** %.12, align 8
  call void @VarDeclarationStatement_constructor(%VarDeclarationStatement.580219* %.11, %FloRange.580135* %.9)
  %.17 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.18, i64 0, i32 2
  %.20 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.19, align 8
  call void %.20(%Parser.580271* %.1)
  %.25 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.25, i64 0, i32 4
  %.27 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.26, align 8
  %.28 = call %Token.580141* %.27(%Parser.580271* %.1, i64 50)
  %.30 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.30 to %Token.580141**
  store %Token.580141* %.28, %Token.580141** %0, align 8
  %.34 = load %Token.580141*, %Token.580141** %.6, align 8
  %.35 = getelementptr inbounds %Token.580141, %Token.580141* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37 = icmp eq i64 %.36, 0
  br i1 %.37, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.41 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.42 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.41, i64 0, i32 2
  %.43 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.42, align 8
  call void %.43(%Parser.580271* %.1)
  %.48 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.49 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.48, i64 0, i32 10
  %.50 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.49, align 8
  %.51 = call %TypeNode.580161* %.50(%Parser.580271* %.1)
  %.52 = getelementptr inbounds i8, i8* %.10, i64 32
  %1 = bitcast i8* %.52 to %TypeNode.580161**
  store %TypeNode.580161* %.51, %TypeNode.580161** %1, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.57 = load %Token.580141*, %Token.580141** %.6, align 8
  %.58 = getelementptr inbounds %Token.580141, %Token.580141* %.57, i64 0, i32 2
  %2 = bitcast %FloRange.580135** %.58 to i64*
  %.591 = load i64, i64* %2, align 8
  %end_range = alloca %FloRange.580135*, align 8
  %3 = bitcast %FloRange.580135** %end_range to i64*
  store i64 %.591, i64* %3, align 8
  %.64 = getelementptr inbounds %Token.580141, %Token.580141* %.57, i64 0, i32 1
  %.65 = load i64, i64* %.64, align 8
  %.66 = icmp eq i64 %.65, 35
  br i1 %.66, label %.3.endif.if, label %.3.endif.else

.3.endif.if:                                      ; preds = %.3.endif
  %.70 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.71 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.70, i64 0, i32 2
  %.72 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.71, align 8
  call void %.72(%Parser.580271* %.1)
  %.77 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.77, i64 0, i32 36
  %.79 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.78, align 8
  %.80 = call %ExpressionNode.580177* %.79(%Parser.580271* %.1)
  %.81 = getelementptr inbounds i8, i8* %.10, i64 40
  %4 = bitcast i8* %.81 to %ExpressionNode.580177**
  store %ExpressionNode.580177* %.80, %ExpressionNode.580177** %4, align 8
  %.86 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.80, i64 0, i32 1
  %5 = bitcast %FloRange.580135** %.86 to i64*
  %.875 = load i64, i64* %5, align 8
  store i64 %.875, i64* %3, align 8
  br label %.3.endif.endif

.3.endif.else:                                    ; preds = %.3.endif
  %.91 = getelementptr inbounds i8, i8* %.10, i64 32
  %6 = bitcast i8* %.91 to i64*
  %.922 = load i64, i64* %6, align 8
  %.93 = trunc i64 %.922 to i32
  %.95 = icmp ne i32 %.93, 0
  %.101 = icmp eq i64 %.65, 22
  %.102 = and i1 %.101, %.95
  br i1 %.102, label %.3.endif.else.if, label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.else, %.3.endif.else.if.endif, %.3.endif.if
  %.168 = getelementptr inbounds i8, i8* %.10, i64 8
  %7 = bitcast i8* %.168 to %FloRange.580135**
  %.169 = load %FloRange.580135*, %FloRange.580135** %7, align 8
  %.170 = load %FloRange.580135*, %FloRange.580135** %end_range, align 8
  %.171 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.169, %FloRange.580135* %.170)
  store %FloRange.580135* %.171, %FloRange.580135** %7, align 8
  ret %VarDeclarationStatement.580219* %.11

.3.endif.else.if:                                 ; preds = %.3.endif.else
  %8 = bitcast i8* %.91 to %TypeNode.580161**
  %.106 = load %TypeNode.580161*, %TypeNode.580161** %8, align 8
  %.110 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %.106, i64 0, i32 1
  %.111 = load %FloRange.580135*, %FloRange.580135** %.110, align 8
  %.112 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.113 = bitcast i8* %.112 to %NewExpressionNode.580195*
  %.114 = bitcast i8* %.112 to %NewExpressionNode_vtable_ty.580196**
  store %NewExpressionNode_vtable_ty.580196* @NewExpressionNode_vtable_data, %NewExpressionNode_vtable_ty.580196** %.114, align 8
  call void @NewExpressionNode_constructor(%NewExpressionNode.580195* %.113, %TypeNode.580161* %.106, %FloRange.580135* %.111)
  %new_node = alloca %NewExpressionNode.580195*, align 8
  %9 = bitcast %NewExpressionNode.580195** %new_node to i8**
  store i8* %.112, i8** %9, align 8
  %.119 = getelementptr inbounds i8, i8* %.112, i64 40
  %10 = bitcast i8* %.119 to i1*
  store i1 false, i1* %10, align 1
  %.123 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.124 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.123, i64 0, i32 2
  %.125 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.124, align 8
  call void %.125(%Parser.580271* %.1)
  %.129 = load %Token.580141*, %Token.580141** %.6, align 8
  %.130 = getelementptr inbounds %Token.580141, %Token.580141* %.129, i64 0, i32 1
  %.131 = load i64, i64* %.130, align 8
  %.132.not = icmp eq i64 %.131, 23
  br i1 %.132.not, label %.3.endif.else.if.endif, label %.3.endif.else.if.if

.3.endif.else.if.if:                              ; preds = %.3.endif.else.if
  %.136 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.137 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.136, i64 0, i32 11
  %.138 = load void (%Parser.580271*, %"Array<ExpressionNode>.580189"*)*, void (%Parser.580271*, %"Array<ExpressionNode>.580189"*)** %.137, align 8
  %.139 = load %NewExpressionNode.580195*, %NewExpressionNode.580195** %new_node, align 8
  %.140 = getelementptr inbounds %NewExpressionNode.580195, %NewExpressionNode.580195* %.139, i64 0, i32 6
  %.141 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.140, align 8
  call void %.138(%Parser.580271* %.1, %"Array<ExpressionNode>.580189"* %.141)
  br label %.3.endif.else.if.endif

.3.endif.else.if.endif:                           ; preds = %.3.endif.else.if, %.3.endif.else.if.if
  %.144 = load %NewExpressionNode.580195*, %NewExpressionNode.580195** %new_node, align 8
  %.146 = getelementptr inbounds %NewExpressionNode.580195, %NewExpressionNode.580195* %.144, i64 0, i32 1
  %.147 = load %FloRange.580135*, %FloRange.580135** %.146, align 8
  %.150 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.151 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.150, i64 0, i32 4
  %.152 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.151, align 8
  %.153 = call %Token.580141* %.152(%Parser.580271* %.1, i64 23)
  %.154 = getelementptr inbounds %Token.580141, %Token.580141* %.153, i64 0, i32 2
  %.155 = load %FloRange.580135*, %FloRange.580135** %.154, align 8
  %.156 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.147, %FloRange.580135* %.155)
  store %FloRange.580135* %.156, %FloRange.580135** %.146, align 8
  %11 = bitcast %NewExpressionNode.580195** %new_node to i64*
  %.16034 = load i64, i64* %11, align 8
  %.162 = getelementptr inbounds i8, i8* %.10, i64 40
  %12 = bitcast i8* %.162 to i64*
  store i64 %.16034, i64* %12, align 8
  br label %.3.endif.endif
}

define noalias %ReturnStatementNode.580217* @Parser_parse_return_statement(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %ReturnStatementNode.580217*
  %.12 = bitcast i8* %.10 to %ReturnStatementNode_vtable_ty.580218**
  store %ReturnStatementNode_vtable_ty.580218* @ReturnStatementNode_vtable_data, %ReturnStatementNode_vtable_ty.580218** %.12, align 8
  call void @ReturnStatementNode_constructor(%ReturnStatementNode.580217* %.11, %FloRange.580135* %.9)
  %.17 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.18, i64 0, i32 2
  %.20 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.19, align 8
  call void %.20(%Parser.580271* %.1)
  %.24 = load %Token.580141*, %Token.580141** %.6, align 8
  %.25 = getelementptr inbounds %Token.580141, %Token.580141* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27 = icmp ne i64 %.26, 30
  %.30 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.31 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.30, i64 0, i32 0
  %.32 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.31, align 8
  %.33 = call i1 %.32(%Parser.580271* %.1)
  %.34 = and i1 %.27, %.33
  %.37 = load %Token.580141*, %Token.580141** %.6, align 8
  %.38 = getelementptr inbounds %Token.580141, %Token.580141* %.37, i64 0, i32 1
  %.39 = load i64, i64* %.38, align 8
  %.40 = icmp ne i64 %.39, 25
  %.41 = and i1 %.34, %.40
  br i1 %.41, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.45 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.46 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.45, i64 0, i32 36
  %.47 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.46, align 8
  %.48 = call %ExpressionNode.580177* %.47(%Parser.580271* %.1)
  %value = alloca %ExpressionNode.580177*, align 8
  store %ExpressionNode.580177* %.48, %ExpressionNode.580177** %value, align 8
  %.52 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.52 to %FloRange.580135**
  %.53 = load %FloRange.580135*, %FloRange.580135** %0, align 8
  %.55 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.48, i64 0, i32 1
  %.56 = load %FloRange.580135*, %FloRange.580135** %.55, align 8
  %.57 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.53, %FloRange.580135* %.56)
  store %FloRange.580135* %.57, %FloRange.580135** %0, align 8
  %1 = bitcast %ExpressionNode.580177** %value to i64*
  %.611 = load i64, i64* %1, align 8
  %.62 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.62 to i64*
  store i64 %.611, i64* %2, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret %ReturnStatementNode.580217* %.11
}

define %StatementNode.580171* @Parser_parse_statement(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.14 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  switch i64 %.15, label %.3.else.else.else.else.else.else.else [
    i64 56, label %.3.if
    i64 72, label %.3.else.if
    i64 71, label %.3.else.else.if
    i64 76, label %.3.else.else.else.if
    i64 55, label %.3.else.else.else.else.if
    i64 54, label %.3.else.else.else.else.else.if
    i64 75, label %.3.else.else.else.else.else.else.if
  ]

.3.if:                                            ; preds = %.3
  %.19 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.20 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.19, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.20, i64 0, i32 37
  %.22 = load %IfStatementNode.580211* (%Parser.580271*)*, %IfStatementNode.580211* (%Parser.580271*)** %.21, align 8
  %.23 = call %IfStatementNode.580211* %.22(%Parser.580271* %.1)
  %.24 = bitcast %IfStatementNode.580211* %.23 to %StatementNode.580171*
  ret %StatementNode.580171* %.24

.3.else.if:                                       ; preds = %.3
  %.34 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.35 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.34, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.35, i64 0, i32 38
  %.37 = load %WhileStatementNode.580213* (%Parser.580271*)*, %WhileStatementNode.580213* (%Parser.580271*)** %.36, align 8
  %.38 = call %WhileStatementNode.580213* %.37(%Parser.580271* %.1)
  %.39 = bitcast %WhileStatementNode.580213* %.38 to %StatementNode.580171*
  ret %StatementNode.580171* %.39

.3.else.else.if:                                  ; preds = %.3
  %.49 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.50 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.49, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.50, i64 0, i32 39
  %.52 = load %ForStatementNode.580215* (%Parser.580271*)*, %ForStatementNode.580215* (%Parser.580271*)** %.51, align 8
  %.53 = call %ForStatementNode.580215* %.52(%Parser.580271* %.1)
  %.54 = bitcast %ForStatementNode.580215* %.53 to %StatementNode.580171*
  ret %StatementNode.580171* %.54

.3.else.else.else.if:                             ; preds = %.3
  %.64 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.65 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.64, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.65, i64 0, i32 41
  %.67 = load %ReturnStatementNode.580217* (%Parser.580271*)*, %ReturnStatementNode.580217* (%Parser.580271*)** %.66, align 8
  %.68 = call %ReturnStatementNode.580217* %.67(%Parser.580271* %.1)
  %.69 = bitcast %ReturnStatementNode.580217* %.68 to %StatementNode.580171*
  ret %StatementNode.580171* %.69

.3.else.else.else.else.if:                        ; preds = %.3
  %.79 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.80 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.79, align 8
  %.81 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.80, i64 0, i32 40
  %.82 = load %VarDeclarationStatement.580219* (%Parser.580271*)*, %VarDeclarationStatement.580219* (%Parser.580271*)** %.81, align 8
  %.83 = call %VarDeclarationStatement.580219* %.82(%Parser.580271* %.1)
  %.84 = bitcast %VarDeclarationStatement.580219* %.83 to %StatementNode.580171*
  ret %StatementNode.580171* %.84

.3.else.else.else.else.else.if:                   ; preds = %.3
  %.94 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.95 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.94, align 8
  %.96 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.95, i64 0, i32 53
  %.97 = load %ConstDeclarationStatement.580221* (%Parser.580271*)*, %ConstDeclarationStatement.580221* (%Parser.580271*)** %.96, align 8
  %.98 = call %ConstDeclarationStatement.580221* %.97(%Parser.580271* %.1)
  %.99 = bitcast %ConstDeclarationStatement.580221* %.98 to %StatementNode.580171*
  ret %StatementNode.580171* %.99

.3.else.else.else.else.else.else.if:              ; preds = %.3
  %.109 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.110 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.109, align 8
  %.111 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.110, i64 0, i32 2
  %.112 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.111, align 8
  call void %.112(%Parser.580271* %.1)
  %.115 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.116 = bitcast i8* %.115 to %StatementNode.580171*
  %.117 = bitcast i8* %.115 to %StatementNode_vtable_ty.580172**
  store %StatementNode_vtable_ty.580172* @StatementNode_vtable_data, %StatementNode_vtable_ty.580172** %.117, align 8
  call void @StatementNode_constructor(%StatementNode.580171* %.116, i64 5, %FloRange.580135* %.9)
  ret %StatementNode.580171* %.116

.3.else.else.else.else.else.else.else:            ; preds = %.3
  %.126 = icmp eq i64 %.15, 74
  %.129 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.130 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.129, align 8
  br i1 %.126, label %.3.else.else.else.else.else.else.else.if, label %.3.else.else.else.else.else.else.else.endif

.3.else.else.else.else.else.else.else.if:         ; preds = %.3.else.else.else.else.else.else.else
  %.131 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.130, i64 0, i32 2
  %.132 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.131, align 8
  call void %.132(%Parser.580271* %.1)
  %.135 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.136 = bitcast i8* %.135 to %StatementNode.580171*
  %.137 = bitcast i8* %.135 to %StatementNode_vtable_ty.580172**
  store %StatementNode_vtable_ty.580172* @StatementNode_vtable_data, %StatementNode_vtable_ty.580172** %.137, align 8
  call void @StatementNode_constructor(%StatementNode.580171* %.136, i64 6, %FloRange.580135* %.9)
  ret %StatementNode.580171* %.136

.3.else.else.else.else.else.else.else.endif:      ; preds = %.3.else.else.else.else.else.else.else
  %.151 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.130, i64 0, i32 36
  %.152 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.151, align 8
  %.153 = call %ExpressionNode.580177* %.152(%Parser.580271* %.1)
  %.154 = bitcast %ExpressionNode.580177* %.153 to %StatementNode.580171*
  ret %StatementNode.580171* %.154
}

define noalias %BlockNode.580173* @Parser_parse_block(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.11 = bitcast i8* %.10 to %BlockNode.580173*
  %.12 = bitcast i8* %.10 to %BlockNode_vtable_ty.580174**
  store %BlockNode_vtable_ty.580174* @BlockNode_vtable_data, %BlockNode_vtable_ty.580174** %.12, align 8
  call void @BlockNode_constructor(%BlockNode.580173* %.11, %FloRange.580135* %.9)
  %.17 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.18, i64 0, i32 5
  %.20 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.19, align 8
  call void %.20(%Parser.580271* %.1)
  %.24 = load %Token.580141*, %Token.580141** %.6, align 8
  %.25 = getelementptr inbounds %Token.580141, %Token.580141* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27 = icmp eq i64 %.26, 24
  br i1 %.27, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.31 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.31, i64 0, i32 2
  %.33 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.32, align 8
  call void %.33(%Parser.580271* %.1)
  %.37 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.37, i64 0, i32 5
  %.39 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.38, align 8
  call void %.39(%Parser.580271* %.1)
  %.43 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.43, i64 0, i32 0
  %.45 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.44, align 8
  %.46 = call i1 %.45(%Parser.580271* %.1)
  %.49 = load %Token.580141*, %Token.580141** %.6, align 8
  %.50 = getelementptr inbounds %Token.580141, %Token.580141* %.49, i64 0, i32 1
  %.51 = load i64, i64* %.50, align 8
  %.52 = icmp ne i64 %.51, 25
  %.53 = and i1 %.46, %.52
  br i1 %.53, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.3.if
  %.56 = getelementptr inbounds i8, i8* %.10, i64 16
  %0 = bitcast i8* %.56 to %"Array<StatementNode>.580175"**
  %.57 = load %"Array<StatementNode>.580175"*, %"Array<StatementNode>.580175"** %0, align 8
  %.64 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.57, i64 0, i32 0
  br label %while.entry

.3.else:                                          ; preds = %.3
  %.97 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.97 to %"Array<StatementNode>.580175"**
  %.98 = load %"Array<StatementNode>.580175"*, %"Array<StatementNode>.580175"** %1, align 8
  %.101 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.102 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.101, i64 0, i32 42
  %.103 = load %StatementNode.580171* (%Parser.580271*)*, %StatementNode.580171* (%Parser.580271*)** %.102, align 8
  %.104 = call %StatementNode.580171* %.103(%Parser.580271* %.1)
  %.105 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.98, i64 0, i32 0
  %.106 = load %"Array<StatementNode>_vtable_ty.580176"*, %"Array<StatementNode>_vtable_ty.580176"** %.105, align 8
  %.107 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.580176", %"Array<StatementNode>_vtable_ty.580176"* %.106, i64 0, i32 2
  %.108 = load void (%"Array<StatementNode>.580175"*, %StatementNode.580171*)*, void (%"Array<StatementNode>.580175"*, %StatementNode.580171*)** %.107, align 8
  call void %.108(%"Array<StatementNode>.580175"* %.98, %StatementNode.580171* %.104)
  br label %.3.endif

.3.endif:                                         ; preds = %while.exit, %.3.else
  ret %BlockNode.580173* %.11

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %.60 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.61 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.60, i64 0, i32 42
  %.62 = load %StatementNode.580171* (%Parser.580271*)*, %StatementNode.580171* (%Parser.580271*)** %.61, align 8
  %.63 = call %StatementNode.580171* %.62(%Parser.580271* %.1)
  %.65 = load %"Array<StatementNode>_vtable_ty.580176"*, %"Array<StatementNode>_vtable_ty.580176"** %.64, align 8
  %.66 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.580176", %"Array<StatementNode>_vtable_ty.580176"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<StatementNode>.580175"*, %StatementNode.580171*)*, void (%"Array<StatementNode>.580175"*, %StatementNode.580171*)** %.66, align 8
  call void %.67(%"Array<StatementNode>.580175"* %.57, %StatementNode.580171* %.63)
  %.71 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.72 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.71, i64 0, i32 5
  %.73 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.72, align 8
  call void %.73(%Parser.580271* %.1)
  %.77 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.77, i64 0, i32 0
  %.79 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.78, align 8
  %.80 = call i1 %.79(%Parser.580271* %.1)
  %.83 = load %Token.580141*, %Token.580141** %.6, align 8
  %.84 = getelementptr inbounds %Token.580141, %Token.580141* %.83, i64 0, i32 1
  %.85 = load i64, i64* %.84, align 8
  %.86 = icmp ne i64 %.85, 25
  %.87 = and i1 %.80, %.86
  br i1 %.87, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3.if
  %.91 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.92 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.91, i64 0, i32 4
  %.93 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.92, align 8
  %.94 = call %Token.580141* %.93(%Parser.580271* %.1, i64 25)
  br label %.3.endif
}

define noalias %TypeAliasNode.580253* @Parser_parse_type_alias(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 2
  %.9 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.8, align 8
  call void %.9(%Parser.580271* %.1)
  %.12 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.13 = bitcast i8* %.12 to %TypeAliasNode.580253*
  %.14 = bitcast i8* %.12 to %TypeAliasNode_vtable_ty.580254**
  store %TypeAliasNode_vtable_ty.580254* @TypeAliasNode_vtable_data, %TypeAliasNode_vtable_ty.580254** %.14, align 8
  %.20 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.20, i64 0, i32 4
  %.22 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.21, align 8
  %.23 = call %Token.580141* %.22(%Parser.580271* %.1, i64 50)
  %.25 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.25 to %Token.580141**
  store %Token.580141* %.23, %Token.580141** %0, align 8
  %.29 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.30 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.29, i64 0, i32 4
  %.31 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.30, align 8
  %.32 = call %Token.580141* %.31(%Parser.580271* %.1, i64 35)
  %.36 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.37 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.36, i64 0, i32 10
  %.38 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.37, align 8
  %.39 = call %TypeNode.580161* %.38(%Parser.580271* %.1)
  %.40 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.40 to %TypeNode.580161**
  store %TypeNode.580161* %.39, %TypeNode.580161** %1, align 8
  ret %TypeAliasNode.580253* %.13
}

define noalias %ArgNode.580223* @Parser_parse_arg(%Parser.580271* %.1) {
.3:
  %.6 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.8 = bitcast i8* %.6 to %ArgNode_vtable_ty.580224**
  store %ArgNode_vtable_ty.580224* @ArgNode_vtable_data, %ArgNode_vtable_ty.580224** %.8, align 8
  %.12 = getelementptr inbounds i8, i8* %.6, i64 16
  %.15 = getelementptr inbounds i8, i8* %.6, i64 24
  %0 = bitcast i8* %.15 to %ExpressionNode.580177**
  %.19 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.12, i8 0, i64 16, i1 false)
  %.20 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.19, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.20, i64 0, i32 4
  %.22 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.21, align 8
  %.23 = call %Token.580141* %.22(%Parser.580271* %.1, i64 50)
  %.25 = getelementptr inbounds i8, i8* %.6, i64 8
  %1 = bitcast i8* %.25 to %Token.580141**
  store %Token.580141* %.23, %Token.580141** %1, align 8
  %.28 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.29 = load %Token.580141*, %Token.580141** %.28, align 8
  %.30 = getelementptr inbounds %Token.580141, %Token.580141* %.29, i64 0, i32 1
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp eq i64 %.31, 0
  br i1 %.32, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %2 = bitcast i8* %.12 to %TypeNode.580161**
  %.36 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.19, align 8
  %.37 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.36, i64 0, i32 2
  %.38 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.37, align 8
  call void %.38(%Parser.580271* %.1)
  %.43 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.19, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.43, i64 0, i32 10
  %.45 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.44, align 8
  %.46 = call %TypeNode.580161* %.45(%Parser.580271* %.1)
  store %TypeNode.580161* %.46, %TypeNode.580161** %2, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.52 = load %Token.580141*, %Token.580141** %.28, align 8
  %.53 = getelementptr inbounds %Token.580141, %Token.580141* %.52, i64 0, i32 1
  %.54 = load i64, i64* %.53, align 8
  %.55 = icmp eq i64 %.54, 35
  br i1 %.55, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.59 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.19, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.59, i64 0, i32 2
  %.61 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.60, align 8
  call void %.61(%Parser.580271* %.1)
  %.66 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.19, align 8
  %.67 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.66, i64 0, i32 36
  %.68 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.67, align 8
  %.69 = call %ExpressionNode.580177* %.68(%Parser.580271* %.1)
  store %ExpressionNode.580177* %.69, %ExpressionNode.580177** %0, align 8
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.if, %.3.endif
  %3 = bitcast i8* %.12 to i64*
  %.751 = load i64, i64* %3, align 8
  %4 = bitcast i8* %.15 to i64*
  %.812 = load i64, i64* %4, align 8
  %5 = or i64 %.812, %.751
  %6 = trunc i64 %5 to i32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.89 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.19, align 8
  %.90 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.89, i64 0, i32 1
  %.91 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.90, align 8
  %8 = bitcast i8* %.25 to %IdentifierToken.580155**
  %.94 = load %IdentifierToken.580155*, %IdentifierToken.580155** %8, align 8
  %.95 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.94, i64 0, i32 3
  %.96 = load %string.580129*, %string.580129** %.95, align 8
  %.97 = getelementptr inbounds %string.580129, %string.580129* %.96, i64 0, i32 0
  %.98 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.97, align 8
  %.99 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.98, i64 0, i32 10
  %.100 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.99, align 8
  %.101 = call i8* %.100(%string.580129* %.96)
  %.103 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.179, i64 0, i64 0), i8* %.101)
  %.105 = call i8* @malloc(i64 %.103)
  %.106 = call i64 (i8*, i8*, ...) @sprintf(i8* %.105, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.179, i64 0, i64 0), i8* %.101)
  %.107 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.108 = bitcast i8* %.107 to %string.580129*
  %.109 = bitcast i8* %.107 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.109, align 8
  %.111 = getelementptr inbounds i8, i8* %.107, i64 8
  %9 = bitcast i8* %.111 to i8**
  store i8* %.105, i8** %9, align 8
  %.113 = getelementptr inbounds i8, i8* %.107, i64 16
  %10 = bitcast i8* %.113 to i64*
  store i64 %.103, i64* %10, align 8
  %.115 = getelementptr inbounds i8, i8* %.107, i64 24
  %11 = bitcast i8* %.115 to i64*
  store i64 %.103, i64* %11, align 8
  call void %.91(%Parser.580271* %.1, %string.580129* %.108)
  %.119 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 2
  %.120 = load %"Array<FloError>.580139"*, %"Array<FloError>.580139"** %.119, align 8
  %.121 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.120, i64 0, i32 2
  %.122 = load i64, i64* %.121, align 8
  %.123 = add i64 %.122, -1
  %.127 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.120, i64 0, i32 0
  %.128 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.127, align 8
  %.129 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.128, i64 0, i32 5
  %.130 = load %FloError.580137* (%"Array<FloError>.580139"*, i64)*, %FloError.580137* (%"Array<FloError>.580139"*, i64)** %.129, align 8
  %.131 = call %FloError.580137* %.130(%"Array<FloError>.580139"* %.120, i64 %.123)
  %.135 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.94, i64 0, i32 2
  %12 = bitcast %FloRange.580135** %.135 to i64*
  %.1363 = load i64, i64* %12, align 8
  %.137 = getelementptr inbounds %FloError.580137, %FloError.580137* %.131, i64 0, i32 3
  %13 = bitcast %FloRange.580135** %.137 to i64*
  store i64 %.1363, i64* %13, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif.if, %.3.endif.endif
  %.7 = bitcast i8* %.6 to %ArgNode.580223*
  ret %ArgNode.580223* %.7
}

define void @Parser_parse_args(%Parser.580271* %.1, %"Array<ArgNode>.580227"* %.2) {
.4:
  %.9 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.10 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.9, align 8
  %.11 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.10, i64 0, i32 45
  %.12 = load %ArgNode.580223* (%Parser.580271*)*, %ArgNode.580223* (%Parser.580271*)** %.11, align 8
  %.13 = call %ArgNode.580223* %.12(%Parser.580271* %.1)
  %.14 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.2, i64 0, i32 0
  %.15 = load %"Array<ArgNode>_vtable_ty.580228"*, %"Array<ArgNode>_vtable_ty.580228"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.580228", %"Array<ArgNode>_vtable_ty.580228"* %.15, i64 0, i32 2
  %.17 = load void (%"Array<ArgNode>.580227"*, %ArgNode.580223*)*, void (%"Array<ArgNode>.580227"*, %ArgNode.580223*)** %.16, align 8
  call void %.17(%"Array<ArgNode>.580227"* %.2, %ArgNode.580223* %.13)
  %.20 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.21 = load %Token.580141*, %Token.580141** %.20, align 8
  %.22 = getelementptr inbounds %Token.580141, %Token.580141* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 2
  %.27 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.9, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.27, i64 0, i32 0
  %.29 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.28, align 8
  %.30 = call i1 %.29(%Parser.580271* %.1)
  %.31 = and i1 %.24, %.30
  br i1 %.31, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.35 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.9, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.35, i64 0, i32 4
  %.37 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.36, align 8
  %.38 = call %Token.580141* %.37(%Parser.580271* %.1, i64 2)
  %.42 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.9, align 8
  %.43 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.42, i64 0, i32 45
  %.44 = load %ArgNode.580223* (%Parser.580271*)*, %ArgNode.580223* (%Parser.580271*)** %.43, align 8
  %.45 = call %ArgNode.580223* %.44(%Parser.580271* %.1)
  %.47 = load %"Array<ArgNode>_vtable_ty.580228"*, %"Array<ArgNode>_vtable_ty.580228"** %.14, align 8
  %.48 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.580228", %"Array<ArgNode>_vtable_ty.580228"* %.47, i64 0, i32 2
  %.49 = load void (%"Array<ArgNode>.580227"*, %ArgNode.580223*)*, void (%"Array<ArgNode>.580227"*, %ArgNode.580223*)** %.48, align 8
  call void %.49(%"Array<ArgNode>.580227"* %.2, %ArgNode.580223* %.45)
  %.53 = load %Token.580141*, %Token.580141** %.20, align 8
  %.54 = getelementptr inbounds %Token.580141, %Token.580141* %.53, i64 0, i32 1
  %.55 = load i64, i64* %.54, align 8
  %.56 = icmp eq i64 %.55, 2
  %.59 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.9, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.59, i64 0, i32 0
  %.61 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.60, align 8
  %.62 = call i1 %.61(%Parser.580271* %.1)
  %.63 = and i1 %.56, %.62
  br i1 %.63, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  ret void
}

define noalias %FunctionDeclarationNode.580225* @Parser_parse_function(%Parser.580271* %.1) {
.3:
  %.6 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.7 = bitcast i8* %.6 to %FunctionDeclarationNode.580225*
  %.8 = bitcast i8* %.6 to %FunctionDeclarationNode_vtable_ty.580226**
  store %FunctionDeclarationNode_vtable_ty.580226* @FunctionDeclarationNode_vtable_data, %FunctionDeclarationNode_vtable_ty.580226** %.8, align 8
  call void @FunctionDeclarationNode_constructor(%FunctionDeclarationNode.580225* %.7)
  %.14 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.15 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.16 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.15, i64 0, i32 4
  %.17 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.16, align 8
  %.18 = call %Token.580141* %.17(%Parser.580271* %.1, i64 50)
  %.20 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.20 to %Token.580141**
  store %Token.580141* %.18, %Token.580141** %0, align 8
  %.24 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.24, i64 0, i32 4
  %.26 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.25, align 8
  %.27 = call %Token.580141* %.26(%Parser.580271* %.1, i64 22)
  %.29 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.30 = load %Token.580141*, %Token.580141** %.29, align 8
  %.31 = getelementptr inbounds %Token.580141, %Token.580141* %.30, i64 0, i32 1
  %.32 = load i64, i64* %.31, align 8
  %.33.not = icmp eq i64 %.32, 23
  br i1 %.33.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.37 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.37, i64 0, i32 46
  %.39 = load void (%Parser.580271*, %"Array<ArgNode>.580227"*)*, void (%Parser.580271*, %"Array<ArgNode>.580227"*)** %.38, align 8
  %.41 = getelementptr inbounds i8, i8* %.6, i64 16
  %1 = bitcast i8* %.41 to %"Array<ArgNode>.580227"**
  %.42 = load %"Array<ArgNode>.580227"*, %"Array<ArgNode>.580227"** %1, align 8
  call void %.39(%Parser.580271* %.1, %"Array<ArgNode>.580227"* %.42)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.47 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.47, i64 0, i32 4
  %.49 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.48, align 8
  %.50 = call %Token.580141* %.49(%Parser.580271* %.1, i64 23)
  %.53 = load %Token.580141*, %Token.580141** %.29, align 8
  %.54 = getelementptr inbounds %Token.580141, %Token.580141* %.53, i64 0, i32 1
  %.55 = load i64, i64* %.54, align 8
  %.56 = icmp eq i64 %.55, 0
  br i1 %.56, label %.3.endif.if, label %.3.endif.else

.3.endif.if:                                      ; preds = %.3.endif
  %.60 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.61 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.60, i64 0, i32 2
  %.62 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.61, align 8
  call void %.62(%Parser.580271* %.1)
  %.67 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.68 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.67, i64 0, i32 10
  %.69 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.68, align 8
  %.70 = call %TypeNode.580161* %.69(%Parser.580271* %.1)
  %.71 = getelementptr inbounds i8, i8* %.6, i64 32
  %2 = bitcast i8* %.71 to %TypeNode.580161**
  store %TypeNode.580161* %.70, %TypeNode.580161** %2, align 8
  br label %.3.endif.endif

.3.endif.else:                                    ; preds = %.3.endif
  %.75 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.76 = bitcast i8* %.75 to %FloRange.580135*
  %.77 = bitcast i8* %.75 to %FloRange_vtable_ty.580136**
  store %FloRange_vtable_ty.580136* @FloRange_vtable_data, %FloRange_vtable_ty.580136** %.77, align 8
  call void @FloRange_constructor(%FloRange.580135* %.76, i64 0, i64 0, i64 0, i64 0)
  %.80 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.81 = bitcast i8* %.80 to %TypeNode.580161*
  %.82 = bitcast i8* %.80 to %TypeNode_vtable_ty.580162**
  store %TypeNode_vtable_ty.580162* @TypeNode_vtable_data, %TypeNode_vtable_ty.580162** %.82, align 8
  call void @TypeNode_constructor(%TypeNode.580161* %.81, i64 12, %FloRange.580135* %.76)
  %.85 = getelementptr inbounds i8, i8* %.6, i64 32
  %3 = bitcast i8* %.85 to i8**
  store i8* %.80, i8** %3, align 8
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.else, %.3.endif.if
  %.90 = load %Token.580141*, %Token.580141** %.29, align 8
  %.91 = getelementptr inbounds %Token.580141, %Token.580141* %.90, i64 0, i32 1
  %.92 = load i64, i64* %.91, align 8
  %.93 = icmp eq i64 %.92, 24
  br i1 %.93, label %.3.endif.endif.if, label %.3.endif.endif.else

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.98 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.99 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.98, i64 0, i32 43
  %.100 = load %BlockNode.580173* (%Parser.580271*)*, %BlockNode.580173* (%Parser.580271*)** %.99, align 8
  %.101 = call %BlockNode.580173* %.100(%Parser.580271* %.1)
  %.102 = getelementptr inbounds i8, i8* %.6, i64 24
  %4 = bitcast i8* %.102 to %BlockNode.580173**
  store %BlockNode.580173* %.101, %BlockNode.580173** %4, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.else:                              ; preds = %.3.endif.endif
  %.106 = getelementptr inbounds i8, i8* %.6, i64 40
  %5 = bitcast i8* %.106 to i1*
  store i1 true, i1* %5, align 1
  br label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif.else, %.3.endif.endif.if
  ret %FunctionDeclarationNode.580225* %.7
}

define noalias %MethodNode.580229* @Parser_parse_method(%Parser.580271* %.1) {
.3:
  %.6 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.7 = bitcast i8* %.6 to %MethodNode.580229*
  %.8 = bitcast i8* %.6 to %MethodNode_vtable_ty.580230**
  store %MethodNode_vtable_ty.580230* @MethodNode_vtable_data, %MethodNode_vtable_ty.580230** %.8, align 8
  call void @MethodNode_constructor(%MethodNode.580229* %.7)
  %.14 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.15 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.16 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.15, i64 0, i32 4
  %.17 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.16, align 8
  %.18 = call %Token.580141* %.17(%Parser.580271* %.1, i64 50)
  %.20 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.20 to %Token.580141**
  store %Token.580141* %.18, %Token.580141** %0, align 8
  %.24 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.24, i64 0, i32 4
  %.26 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.25, align 8
  %.27 = call %Token.580141* %.26(%Parser.580271* %.1, i64 22)
  %.29 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.30 = load %Token.580141*, %Token.580141** %.29, align 8
  %.31 = getelementptr inbounds %Token.580141, %Token.580141* %.30, i64 0, i32 1
  %.32 = load i64, i64* %.31, align 8
  %.33.not = icmp eq i64 %.32, 23
  br i1 %.33.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %1 = bitcast %Token.580141** %.29 to %IdentifierToken.580155**
  %.371 = load %IdentifierToken.580155*, %IdentifierToken.580155** %1, align 8
  %.39 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.371, i64 0, i32 3
  %.40 = load %string.580129*, %string.580129** %.39, align 8
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %string.580129*
  %.42.repack = bitcast i8* %.41 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.42.repack, align 8
  %.42.repack2 = getelementptr inbounds i8, i8* %.41, i64 8
  %2 = bitcast i8* %.42.repack2 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.180, i64 0, i64 0), i8** %2, align 8
  %.42.repack3 = getelementptr inbounds i8, i8* %.41, i64 16
  %3 = bitcast i8* %.42.repack3 to i64*
  store i64 4, i64* %3, align 8
  %.42.repack4 = getelementptr inbounds i8, i8* %.41, i64 24
  %4 = bitcast i8* %.42.repack4 to i64*
  store i64 4, i64* %4, align 8
  %.44 = getelementptr inbounds %string.580129, %string.580129* %.40, i64 0, i32 0
  %.45 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.44, align 8
  %.46 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.45, i64 0, i32 3
  %.47 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.46, align 8
  %.48 = call i1 %.47(%string.580129* %.40, %string.580129* %.42)
  br i1 %.48, label %.3.if.if, label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3.if.if, %.3
  %.63 = load %Token.580141*, %Token.580141** %.29, align 8
  %.64 = getelementptr inbounds %Token.580141, %Token.580141* %.63, i64 0, i32 1
  %.65 = load i64, i64* %.64, align 8
  %.66.not = icmp eq i64 %.65, 23
  br i1 %.66.not, label %.3.endif.endif, label %.3.endif.if

.3.if.if:                                         ; preds = %.3.if
  %.51 = getelementptr inbounds i8, i8* %.6, i64 48
  %5 = bitcast i8* %.51 to i1*
  store i1 false, i1* %5, align 1
  %.55 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.56 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.55, i64 0, i32 2
  %.57 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.56, align 8
  call void %.57(%Parser.580271* %.1)
  br label %.3.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.69 = getelementptr inbounds i8, i8* %.6, i64 48
  %6 = bitcast i8* %.69 to i1*
  %.70 = load i1, i1* %6, align 1
  br i1 %.70, label %.3.endif.if.endif, label %.3.endif.if.if

.3.endif.endif:                                   ; preds = %.3.endif, %.3.endif.if.endif
  %.92 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.93 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.92, i64 0, i32 4
  %.94 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.93, align 8
  %.95 = call %Token.580141* %.94(%Parser.580271* %.1, i64 23)
  %.98 = load %Token.580141*, %Token.580141** %.29, align 8
  %.99 = getelementptr inbounds %Token.580141, %Token.580141* %.98, i64 0, i32 1
  %.100 = load i64, i64* %.99, align 8
  %.101 = icmp eq i64 %.100, 0
  br i1 %.101, label %.3.endif.endif.if, label %.3.endif.endif.else

.3.endif.if.if:                                   ; preds = %.3.endif.if
  %.75 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.76 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.75, i64 0, i32 4
  %.77 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.76, align 8
  %.78 = call %Token.580141* %.77(%Parser.580271* %.1, i64 2)
  br label %.3.endif.if.endif

.3.endif.if.endif:                                ; preds = %.3.endif.if, %.3.endif.if.if
  %.82 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.83 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.82, i64 0, i32 46
  %.84 = load void (%Parser.580271*, %"Array<ArgNode>.580227"*)*, void (%Parser.580271*, %"Array<ArgNode>.580227"*)** %.83, align 8
  %.86 = getelementptr inbounds i8, i8* %.6, i64 16
  %7 = bitcast i8* %.86 to %"Array<ArgNode>.580227"**
  %.87 = load %"Array<ArgNode>.580227"*, %"Array<ArgNode>.580227"** %7, align 8
  call void %.84(%Parser.580271* %.1, %"Array<ArgNode>.580227"* %.87)
  br label %.3.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.105 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.106 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.105, i64 0, i32 2
  %.107 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.106, align 8
  call void %.107(%Parser.580271* %.1)
  %.112 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.113 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.112, i64 0, i32 10
  %.114 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.113, align 8
  %.115 = call %TypeNode.580161* %.114(%Parser.580271* %.1)
  %.116 = getelementptr inbounds i8, i8* %.6, i64 40
  %8 = bitcast i8* %.116 to %TypeNode.580161**
  store %TypeNode.580161* %.115, %TypeNode.580161** %8, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.else:                              ; preds = %.3.endif.endif
  %.120 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.121 = bitcast i8* %.120 to %FloRange.580135*
  %.122 = bitcast i8* %.120 to %FloRange_vtable_ty.580136**
  store %FloRange_vtable_ty.580136* @FloRange_vtable_data, %FloRange_vtable_ty.580136** %.122, align 8
  call void @FloRange_constructor(%FloRange.580135* %.121, i64 0, i64 0, i64 0, i64 0)
  %.125 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.126 = bitcast i8* %.125 to %TypeNode.580161*
  %.127 = bitcast i8* %.125 to %TypeNode_vtable_ty.580162**
  store %TypeNode_vtable_ty.580162* @TypeNode_vtable_data, %TypeNode_vtable_ty.580162** %.127, align 8
  call void @TypeNode_constructor(%TypeNode.580161* %.126, i64 12, %FloRange.580135* %.121)
  %.130 = getelementptr inbounds i8, i8* %.6, i64 40
  %9 = bitcast i8* %.130 to i8**
  store i8* %.125, i8** %9, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif.else, %.3.endif.endif.if
  %.135 = load %Token.580141*, %Token.580141** %.29, align 8
  %.136 = getelementptr inbounds %Token.580141, %Token.580141* %.135, i64 0, i32 1
  %.137 = load i64, i64* %.136, align 8
  %.138 = icmp eq i64 %.137, 24
  br i1 %.138, label %.3.endif.endif.endif.if, label %.3.endif.endif.endif.else

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  %.143 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.14, align 8
  %.144 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.143, i64 0, i32 43
  %.145 = load %BlockNode.580173* (%Parser.580271*)*, %BlockNode.580173* (%Parser.580271*)** %.144, align 8
  %.146 = call %BlockNode.580173* %.145(%Parser.580271* %.1)
  %.147 = getelementptr inbounds i8, i8* %.6, i64 24
  %10 = bitcast i8* %.147 to %BlockNode.580173**
  store %BlockNode.580173* %.146, %BlockNode.580173** %10, align 8
  br label %.3.endif.endif.endif.endif

.3.endif.endif.endif.else:                        ; preds = %.3.endif.endif.endif
  %.151 = getelementptr inbounds i8, i8* %.6, i64 49
  %11 = bitcast i8* %.151 to i1*
  store i1 true, i1* %11, align 1
  br label %.3.endif.endif.endif.endif

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif.else, %.3.endif.endif.endif.if
  ret %MethodNode.580229* %.7
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_parse_access_modifier(%Parser.580271* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif [
    i64 79, label %.3.if
    i64 78, label %.3.if.fold.split
  ]

.3.if.fold.split:                                 ; preds = %.3
  br label %.3.if

.3.if:                                            ; preds = %.3, %.3.if.fold.split, %.3.endif.endif
  %merge = phi i64 [ 1, %.3 ], [ %., %.3.endif.endif ], [ 0, %.3.if.fold.split ]
  ret i64 %merge

.3.endif.endif:                                   ; preds = %.3
  %.26 = icmp eq i64 %.9, 80
  %. = select i1 %.26, i64 2, i64 -1
  br label %.3.if
}

define void @Parser_parse_class_block(%Parser.580271* %.1, %ClassDeclarationNode.580235* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.9, i64 0, i32 4
  %.11 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.10, align 8
  %.12 = call %Token.580141* %.11(%Parser.580271* %.1, i64 24)
  %.15 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.16 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.15, i64 0, i32 5
  %.17 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.16, align 8
  call void %.17(%Parser.580271* %.1)
  %.20 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.21 = load %Token.580141*, %Token.580141** %.20, align 8
  %.22 = getelementptr inbounds %Token.580141, %Token.580141* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp ne i64 %.23, 25
  %.27 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.27, i64 0, i32 0
  %.29 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.28, align 8
  %.30 = call i1 %.29(%Parser.580271* %.1)
  %.31 = and i1 %.24, %.30
  br i1 %.31, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.4
  %.153 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.2, i64 0, i32 5
  %.122 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.2, i64 0, i32 4
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif.endif
  %.35 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.35, i64 0, i32 49
  %.37 = load i64 (%Parser.580271*)*, i64 (%Parser.580271*)** %.36, align 8
  %.38 = call i64 %.37(%Parser.580271* %.1)
  %access_modifier = alloca i64, align 8
  store i64 %.38, i64* %access_modifier, align 8
  %.41 = icmp slt i64 %.38, 0
  br i1 %.41, label %while.entry.if, label %while.entry.else

while.exit:                                       ; preds = %while.entry.endif.endif, %.4
  %.195 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.196 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.195, i64 0, i32 4
  %.197 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.196, align 8
  %.198 = call %Token.580141* %.197(%Parser.580271* %.1, i64 25)
  ret void

while.entry.if:                                   ; preds = %while.entry
  store i64 1, i64* %access_modifier, align 8
  br label %while.entry.endif

while.entry.else:                                 ; preds = %while.entry
  %.47 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.47, i64 0, i32 2
  %.49 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.48, align 8
  call void %.49(%Parser.580271* %.1)
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.else, %while.entry.if
  %.54 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.54, i64 0, i32 3
  %.56 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.55, align 8
  %.57 = call %Token.580141* %.56(%Parser.580271* %.1, i64 1)
  %.58 = getelementptr inbounds %Token.580141, %Token.580141* %.57, i64 0, i32 1
  %.59 = load i64, i64* %.58, align 8
  %.60 = icmp eq i64 %.59, 0
  br i1 %.60, label %while.entry.endif.if, label %while.entry.endif.else

while.entry.endif.if:                             ; preds = %while.entry.endif
  %.63 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.64 = bitcast i8* %.63 to %FieldNode.580231*
  %.65 = bitcast i8* %.63 to %FieldNode_vtable_ty.580232**
  store %FieldNode_vtable_ty.580232* @FieldNode_vtable_data, %FieldNode_vtable_ty.580232** %.65, align 8
  call void @FieldNode_constructor(%FieldNode.580231* %.64)
  %field = alloca %FieldNode.580231*, align 8
  %0 = bitcast %FieldNode.580231** %field to i8**
  store i8* %.63, i8** %0, align 8
  %.72 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.73 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.72, i64 0, i32 4
  %.74 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.73, align 8
  %.75 = call %Token.580141* %.74(%Parser.580271* %.1, i64 50)
  %.77 = getelementptr inbounds i8, i8* %.63, i64 8
  %1 = bitcast i8* %.77 to %Token.580141**
  store %Token.580141* %.75, %Token.580141** %1, align 8
  %.81 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.82 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.81, i64 0, i32 4
  %.83 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.82, align 8
  %.84 = call %Token.580141* %.83(%Parser.580271* %.1, i64 0)
  %.85 = load %FieldNode.580231*, %FieldNode.580231** %field, align 8
  %.88 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.89 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.88, i64 0, i32 10
  %.90 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.89, align 8
  %.91 = call %TypeNode.580161* %.90(%Parser.580271* %.1)
  %.92 = getelementptr inbounds %FieldNode.580231, %FieldNode.580231* %.85, i64 0, i32 4
  store %TypeNode.580161* %.91, %TypeNode.580161** %.92, align 8
  %.96 = load %Token.580141*, %Token.580141** %.20, align 8
  %.97 = getelementptr inbounds %Token.580141, %Token.580141* %.96, i64 0, i32 1
  %.98 = load i64, i64* %.97, align 8
  %.99 = icmp eq i64 %.98, 35
  br i1 %.99, label %while.entry.endif.if.if, label %while.entry.endif.if.endif

while.entry.endif.else:                           ; preds = %while.entry.endif
  %.133 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.134 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.133, i64 0, i32 3
  %.135 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.134, align 8
  %.136 = call %Token.580141* %.135(%Parser.580271* %.1, i64 1)
  %.137 = getelementptr inbounds %Token.580141, %Token.580141* %.136, i64 0, i32 1
  %.138 = load i64, i64* %.137, align 8
  %.139 = icmp eq i64 %.138, 22
  %.143 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  br i1 %.139, label %while.entry.endif.else.if, label %while.entry.endif.else.else

while.entry.endif.endif:                          ; preds = %while.entry.endif.else.if, %while.entry.endif.if.endif
  %.175 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.176 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.175, i64 0, i32 5
  %.177 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.176, align 8
  call void %.177(%Parser.580271* %.1)
  %.181 = load %Token.580141*, %Token.580141** %.20, align 8
  %.182 = getelementptr inbounds %Token.580141, %Token.580141* %.181, i64 0, i32 1
  %.183 = load i64, i64* %.182, align 8
  %.184 = icmp ne i64 %.183, 25
  %.187 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.188 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.187, i64 0, i32 0
  %.189 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.188, align 8
  %.190 = call i1 %.189(%Parser.580271* %.1)
  %.191 = and i1 %.184, %.190
  br i1 %.191, label %while.entry, label %while.exit

while.entry.endif.if.if:                          ; preds = %while.entry.endif.if
  %.103 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.104 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.103, i64 0, i32 2
  %.105 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.104, align 8
  call void %.105(%Parser.580271* %.1)
  %.110 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.111 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.110, i64 0, i32 36
  %.112 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.111, align 8
  %.113 = call %ExpressionNode.580177* %.112(%Parser.580271* %.1)
  %.114 = getelementptr inbounds %FieldNode.580231, %FieldNode.580231* %.85, i64 0, i32 3
  store %ExpressionNode.580177* %.113, %ExpressionNode.580177** %.114, align 8
  br label %while.entry.endif.if.endif

while.entry.endif.if.endif:                       ; preds = %while.entry.endif.if.if, %while.entry.endif.if
  %.118 = load i64, i64* %access_modifier, align 8
  %.119 = getelementptr inbounds %FieldNode.580231, %FieldNode.580231* %.85, i64 0, i32 2
  store i64 %.118, i64* %.119, align 8
  %.123 = load %"Array<FieldNode>.580238"*, %"Array<FieldNode>.580238"** %.122, align 8
  %.125 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.123, i64 0, i32 0
  %.126 = load %"Array<FieldNode>_vtable_ty.580241"*, %"Array<FieldNode>_vtable_ty.580241"** %.125, align 8
  %.127 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.580241", %"Array<FieldNode>_vtable_ty.580241"* %.126, i64 0, i32 2
  %.128 = load void (%"Array<FieldNode>.580238"*, %FieldNode.580231*)*, void (%"Array<FieldNode>.580238"*, %FieldNode.580231*)** %.127, align 8
  call void %.128(%"Array<FieldNode>.580238"* %.123, %FieldNode.580231* %.85)
  br label %while.entry.endif.endif

while.entry.endif.else.if:                        ; preds = %while.entry.endif.else
  %.144 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.143, i64 0, i32 48
  %.145 = load %MethodNode.580229* (%Parser.580271*)*, %MethodNode.580229* (%Parser.580271*)** %.144, align 8
  %.146 = call %MethodNode.580229* %.145(%Parser.580271* %.1)
  %.149 = load i64, i64* %access_modifier, align 8
  %.150 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.146, i64 0, i32 4
  store i64 %.149, i64* %.150, align 8
  %.154 = load %"Array<MethodNode>.580239"*, %"Array<MethodNode>.580239"** %.153, align 8
  %.156 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.154, i64 0, i32 0
  %.157 = load %"Array<MethodNode>_vtable_ty.580242"*, %"Array<MethodNode>_vtable_ty.580242"** %.156, align 8
  %.158 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.580242", %"Array<MethodNode>_vtable_ty.580242"* %.157, i64 0, i32 2
  %.159 = load void (%"Array<MethodNode>.580239"*, %MethodNode.580229*)*, void (%"Array<MethodNode>.580239"*, %MethodNode.580229*)** %.158, align 8
  call void %.159(%"Array<MethodNode>.580239"* %.154, %MethodNode.580229* %.146)
  br label %while.entry.endif.endif

while.entry.endif.else.else:                      ; preds = %while.entry.endif.else
  %.165 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.143, i64 0, i32 1
  %.166 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.165, align 8
  %.167 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.168 = bitcast i8* %.167 to %string.580129*
  %.168.repack = bitcast i8* %.167 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.168.repack, align 8
  %.168.repack1 = getelementptr inbounds i8, i8* %.167, i64 8
  %2 = bitcast i8* %.168.repack1 to i8**
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.181, i64 0, i64 0), i8** %2, align 8
  %.168.repack2 = getelementptr inbounds i8, i8* %.167, i64 16
  %3 = bitcast i8* %.168.repack2 to i64*
  store i64 19, i64* %3, align 8
  %.168.repack3 = getelementptr inbounds i8, i8* %.167, i64 24
  %4 = bitcast i8* %.168.repack3 to i64*
  store i64 19, i64* %4, align 8
  call void %.166(%Parser.580271* %.1, %string.580129* %.168)
  ret void
}

define void @Parser_parse_generic_parameters(%Parser.580271* %.1, %"Array<GenericParameterNode>.580237"* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.9, i64 0, i32 2
  %.11 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.10, align 8
  call void %.11(%Parser.580271* %.1)
  %.16 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.17 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.16, i64 0, i32 4
  %.18 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.17, align 8
  %.19 = call %Token.580141* %.18(%Parser.580271* %.1, i64 50)
  %.20 = bitcast %Token.580141* %.19 to %IdentifierToken.580155*
  %.21 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.22 = bitcast i8* %.21 to %GenericParameterNode.580233*
  %.23 = bitcast i8* %.21 to %GenericParameterNode_vtable_ty.580234**
  store %GenericParameterNode_vtable_ty.580234* @GenericParameterNode_vtable_data, %GenericParameterNode_vtable_ty.580234** %.23, align 8
  call void @GenericParameterNode_constructor(%GenericParameterNode.580233* %.22, %IdentifierToken.580155* %.20)
  %.26 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.2, i64 0, i32 0
  %.27 = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.26, align 8
  %.28 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.27, i64 0, i32 2
  %.29 = load void (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)*, void (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)** %.28, align 8
  call void %.29(%"Array<GenericParameterNode>.580237"* %.2, %GenericParameterNode.580233* %.22)
  %.32 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.33 = load %Token.580141*, %Token.580141** %.32, align 8
  %.34 = getelementptr inbounds %Token.580141, %Token.580141* %.33, i64 0, i32 1
  %.35 = load i64, i64* %.34, align 8
  %.36 = icmp eq i64 %.35, 2
  %.39 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.39, i64 0, i32 0
  %.41 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.40, align 8
  %.42 = call i1 %.41(%Parser.580271* %.1)
  %.43 = and i1 %.36, %.42
  br i1 %.43, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.47 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.47, i64 0, i32 2
  %.49 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.48, align 8
  call void %.49(%Parser.580271* %.1)
  %.54 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.54, i64 0, i32 4
  %.56 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.55, align 8
  %.57 = call %Token.580141* %.56(%Parser.580271* %.1, i64 50)
  %.58 = bitcast %Token.580141* %.57 to %IdentifierToken.580155*
  %.59 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.60 = bitcast i8* %.59 to %GenericParameterNode.580233*
  %.61 = bitcast i8* %.59 to %GenericParameterNode_vtable_ty.580234**
  store %GenericParameterNode_vtable_ty.580234* @GenericParameterNode_vtable_data, %GenericParameterNode_vtable_ty.580234** %.61, align 8
  call void @GenericParameterNode_constructor(%GenericParameterNode.580233* %.60, %IdentifierToken.580155* %.58)
  %.65 = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.26, align 8
  %.66 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)*, void (%"Array<GenericParameterNode>.580237"*, %GenericParameterNode.580233*)** %.66, align 8
  call void %.67(%"Array<GenericParameterNode>.580237"* %.2, %GenericParameterNode.580233* %.60)
  %.71 = load %Token.580141*, %Token.580141** %.32, align 8
  %.72 = getelementptr inbounds %Token.580141, %Token.580141* %.71, i64 0, i32 1
  %.73 = load i64, i64* %.72, align 8
  %.74 = icmp eq i64 %.73, 2
  %.77 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.77, i64 0, i32 0
  %.79 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.78, align 8
  %.80 = call i1 %.79(%Parser.580271* %.1)
  %.81 = and i1 %.74, %.80
  br i1 %.81, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %.85 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.8, align 8
  %.86 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.85, i64 0, i32 4
  %.87 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.86, align 8
  %.88 = call %Token.580141* %.87(%Parser.580271* %.1, i64 38)
  ret void
}

define %ClassDeclarationNode.580235* @Parser_parse_class(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.7, i64 0, i32 2
  %.9 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.8, align 8
  call void %.9(%Parser.580271* %.1)
  %.13 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.13, i64 0, i32 4
  %.15 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.14, align 8
  %.16 = call %Token.580141* %.15(%Parser.580271* %.1, i64 50)
  %.17 = bitcast %Token.580141* %.16 to %IdentifierToken.580155*
  %.18 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.19 = bitcast i8* %.18 to %ClassDeclarationNode.580235*
  %.20 = bitcast i8* %.18 to %ClassDeclarationNode_vtable_ty.580236**
  store %ClassDeclarationNode_vtable_ty.580236* @ClassDeclarationNode_vtable_data, %ClassDeclarationNode_vtable_ty.580236** %.20, align 8
  call void @ClassDeclarationNode_constructor(%ClassDeclarationNode.580235* %.19, %IdentifierToken.580155* %.17)
  %.25 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.26 = load %Token.580141*, %Token.580141** %.25, align 8
  %.27 = getelementptr inbounds %Token.580141, %Token.580141* %.26, i64 0, i32 1
  %.28 = load i64, i64* %.27, align 8
  %.29 = icmp eq i64 %.28, 39
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.33 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.34 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.33, i64 0, i32 51
  %.35 = load void (%Parser.580271*, %"Array<GenericParameterNode>.580237"*)*, void (%Parser.580271*, %"Array<GenericParameterNode>.580237"*)** %.34, align 8
  %.37 = getelementptr inbounds i8, i8* %.18, i64 16
  %0 = bitcast i8* %.37 to %"Array<GenericParameterNode>.580237"**
  %.38 = load %"Array<GenericParameterNode>.580237"*, %"Array<GenericParameterNode>.580237"** %0, align 8
  call void %.35(%Parser.580271* %.1, %"Array<GenericParameterNode>.580237"* %.38)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.43 = load %Token.580141*, %Token.580141** %.25, align 8
  %.44 = getelementptr inbounds %Token.580141, %Token.580141* %.43, i64 0, i32 1
  %.45 = load i64, i64* %.44, align 8
  %.46 = icmp eq i64 %.45, 22
  br i1 %.46, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.50 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.50, i64 0, i32 2
  %.52 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.51, align 8
  call void %.52(%Parser.580271* %.1)
  %.57 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.58 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.57, i64 0, i32 8
  %.59 = load %RecordTypeNode.580163* (%Parser.580271*)*, %RecordTypeNode.580163* (%Parser.580271*)** %.58, align 8
  %.60 = call %RecordTypeNode.580163* %.59(%Parser.580271* %.1)
  %.61 = getelementptr inbounds i8, i8* %.18, i64 24
  %1 = bitcast i8* %.61 to %RecordTypeNode.580163**
  store %RecordTypeNode.580163* %.60, %RecordTypeNode.580163** %1, align 8
  %.65 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.65, i64 0, i32 4
  %.67 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.66, align 8
  %.68 = call %Token.580141* %.67(%Parser.580271* %.1, i64 23)
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.if, %.3.endif
  %.72 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.73 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.72, i64 0, i32 5
  %.74 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.73, align 8
  call void %.74(%Parser.580271* %.1)
  %.78 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.6, align 8
  %.79 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.78, i64 0, i32 50
  %.80 = load void (%Parser.580271*, %ClassDeclarationNode.580235*)*, void (%Parser.580271*, %ClassDeclarationNode.580235*)** %.79, align 8
  call void %.80(%Parser.580271* %.1, %ClassDeclarationNode.580235* %.19)
  ret %ClassDeclarationNode.580235* %.19
}

define noalias %ConstDeclarationStatement.580221* @Parser_parse_const_declaration_statement(%Parser.580271* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.7 = load %Token.580141*, %Token.580141** %.6, align 8
  %.8 = getelementptr inbounds %Token.580141, %Token.580141* %.7, i64 0, i32 2
  %.9 = load %FloRange.580135*, %FloRange.580135** %.8, align 8
  %.10 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.11 = bitcast i8* %.10 to %ConstDeclarationStatement.580221*
  %.12 = bitcast i8* %.10 to %ConstDeclarationStatement_vtable_ty.580222**
  store %ConstDeclarationStatement_vtable_ty.580222* @ConstDeclarationStatement_vtable_data, %ConstDeclarationStatement_vtable_ty.580222** %.12, align 8
  call void @ConstDeclarationStatement_constructor(%ConstDeclarationStatement.580221* %.11, %FloRange.580135* %.9)
  %.17 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.18, i64 0, i32 2
  %.20 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.19, align 8
  call void %.20(%Parser.580271* %.1)
  %.25 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.25, i64 0, i32 4
  %.27 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.26, align 8
  %.28 = call %Token.580141* %.27(%Parser.580271* %.1, i64 50)
  %.30 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.30 to %Token.580141**
  store %Token.580141* %.28, %Token.580141** %0, align 8
  %.34 = load %Token.580141*, %Token.580141** %.6, align 8
  %.35 = getelementptr inbounds %Token.580141, %Token.580141* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37 = icmp eq i64 %.36, 0
  br i1 %.37, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.41 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.42 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.41, i64 0, i32 2
  %.43 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.42, align 8
  call void %.43(%Parser.580271* %.1)
  %.48 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.49 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.48, i64 0, i32 10
  %.50 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.49, align 8
  %.51 = call %TypeNode.580161* %.50(%Parser.580271* %.1)
  %.52 = getelementptr inbounds i8, i8* %.10, i64 32
  %1 = bitcast i8* %.52 to %TypeNode.580161**
  store %TypeNode.580161* %.51, %TypeNode.580161** %1, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.57 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.58 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.57, i64 0, i32 4
  %.59 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.58, align 8
  %.60 = call %Token.580141* %.59(%Parser.580271* %.1, i64 35)
  %.64 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.17, align 8
  %.65 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.64, i64 0, i32 36
  %.66 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.65, align 8
  %.67 = call %ExpressionNode.580177* %.66(%Parser.580271* %.1)
  %.68 = getelementptr inbounds i8, i8* %.10, i64 40
  %2 = bitcast i8* %.68 to %ExpressionNode.580177**
  store %ExpressionNode.580177* %.67, %ExpressionNode.580177** %2, align 8
  %.72 = getelementptr inbounds i8, i8* %.10, i64 8
  %3 = bitcast i8* %.72 to %FloRange.580135**
  %.73 = load %FloRange.580135*, %FloRange.580135** %3, align 8
  %.77 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.67, i64 0, i32 1
  %.78 = load %FloRange.580135*, %FloRange.580135** %.77, align 8
  %.79 = call %FloRange.580135* @FloRange_merge(%FloRange.580135* %.73, %FloRange.580135* %.78)
  store %FloRange.580135* %.79, %FloRange.580135** %3, align 8
  ret %ConstDeclarationStatement.580221* %.11
}

define noalias %ImportNode.580249* @Parser_parse_import(%Parser.580271* %.1) {
.3:
  %.6 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.7 = bitcast i8* %.6 to %ImportNode.580249*
  %.8 = bitcast i8* %.6 to %ImportNode_vtable_ty.580250**
  store %ImportNode_vtable_ty.580250* @ImportNode_vtable_data, %ImportNode_vtable_ty.580250** %.8, align 8
  call void @ImportNode_constructor(%ImportNode.580249* %.7)
  %.13 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.14 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.14, i64 0, i32 2
  %.16 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.15, align 8
  call void %.16(%Parser.580271* %.1)
  %.19 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.20 = load %Token.580141*, %Token.580141** %.19, align 8
  %.21 = getelementptr inbounds %Token.580141, %Token.580141* %.20, i64 0, i32 1
  %.22 = load i64, i64* %.21, align 8
  %.23 = icmp eq i64 %.22, 50
  br i1 %.23, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.26 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.26 to %"Array<IdentifierToken>.580251"**
  %.27 = load %"Array<IdentifierToken>.580251"*, %"Array<IdentifierToken>.580251"** %0, align 8
  %1 = bitcast %Token.580141** %.19 to %IdentifierToken.580155**
  %.301 = load %IdentifierToken.580155*, %IdentifierToken.580155** %1, align 8
  %.32 = getelementptr inbounds %"Array<IdentifierToken>.580251", %"Array<IdentifierToken>.580251"* %.27, i64 0, i32 0
  %.33 = load %"Array<IdentifierToken>_vtable_ty.580252"*, %"Array<IdentifierToken>_vtable_ty.580252"** %.32, align 8
  %.34 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.580252", %"Array<IdentifierToken>_vtable_ty.580252"* %.33, i64 0, i32 2
  %.35 = load void (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)*, void (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)** %.34, align 8
  call void %.35(%"Array<IdentifierToken>.580251"* %.27, %IdentifierToken.580155* %.301)
  %.39 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.39, i64 0, i32 2
  %.41 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.40, align 8
  call void %.41(%Parser.580271* %.1)
  %.45 = load %Token.580141*, %Token.580141** %.19, align 8
  %.46 = getelementptr inbounds %Token.580141, %Token.580141* %.45, i64 0, i32 1
  %.47 = load i64, i64* %.46, align 8
  %.48 = icmp eq i64 %.47, 2
  %.51 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.51, i64 0, i32 0
  %.53 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.52, align 8
  %.54 = call i1 %.53(%Parser.580271* %.1)
  %.55 = and i1 %.48, %.54
  br i1 %.55, label %while.entry, label %while.exit

.3.endif:                                         ; preds = %while.exit, %.3
  %.102 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.103 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.102, i64 0, i32 4
  %.104 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.103, align 8
  %.105 = call %Token.580141* %.104(%Parser.580271* %.1, i64 31)
  %.107 = getelementptr inbounds i8, i8* %.6, i64 16
  %2 = bitcast i8* %.107 to %Token.580141**
  store %Token.580141* %.105, %Token.580141** %2, align 8
  ret %ImportNode.580249* %.7

while.entry:                                      ; preds = %.3.if, %while.entry
  %.59 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.59, i64 0, i32 2
  %.61 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.60, align 8
  call void %.61(%Parser.580271* %.1)
  %.68 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.69 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.68, i64 0, i32 4
  %.70 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.69, align 8
  %.71 = call %Token.580141* %.70(%Parser.580271* %.1, i64 50)
  %.72 = bitcast %Token.580141* %.71 to %IdentifierToken.580155*
  %.74 = load %"Array<IdentifierToken>_vtable_ty.580252"*, %"Array<IdentifierToken>_vtable_ty.580252"** %.32, align 8
  %.75 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.580252", %"Array<IdentifierToken>_vtable_ty.580252"* %.74, i64 0, i32 2
  %.76 = load void (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)*, void (%"Array<IdentifierToken>.580251"*, %IdentifierToken.580155*)** %.75, align 8
  call void %.76(%"Array<IdentifierToken>.580251"* %.27, %IdentifierToken.580155* %.72)
  %.80 = load %Token.580141*, %Token.580141** %.19, align 8
  %.81 = getelementptr inbounds %Token.580141, %Token.580141* %.80, i64 0, i32 1
  %.82 = load i64, i64* %.81, align 8
  %.83 = icmp eq i64 %.82, 2
  %.86 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.87 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.86, i64 0, i32 0
  %.88 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.87, align 8
  %.89 = call i1 %.88(%Parser.580271* %.1)
  %.90 = and i1 %.83, %.89
  br i1 %.90, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3.if
  %.94 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.95 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.94, i64 0, i32 4
  %.96 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.95, align 8
  %.97 = call %Token.580141* %.96(%Parser.580271* %.1, i64 81)
  br label %.3.endif
}

define noalias %EnumNode.580245* @Parser_parse_enum(%Parser.580271* %.1) {
.3:
  %.6 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %EnumNode.580245*
  %.8 = bitcast i8* %.6 to %EnumNode_vtable_ty.580246**
  store %EnumNode_vtable_ty.580246* @EnumNode_vtable_data, %EnumNode_vtable_ty.580246** %.8, align 8
  call void @EnumNode_constructor(%EnumNode.580245* %.7)
  %.13 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.14 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.14, i64 0, i32 2
  %.16 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.15, align 8
  call void %.16(%Parser.580271* %.1)
  %.21 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.22 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.21, i64 0, i32 4
  %.23 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.22, align 8
  %.24 = call %Token.580141* %.23(%Parser.580271* %.1, i64 50)
  %.26 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.26 to %Token.580141**
  store %Token.580141* %.24, %Token.580141** %0, align 8
  %.29 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.30 = load %Token.580141*, %Token.580141** %.29, align 8
  %.31 = getelementptr inbounds %Token.580141, %Token.580141* %.30, i64 0, i32 1
  %.32 = load i64, i64* %.31, align 8
  %.33 = icmp eq i64 %.32, 22
  br i1 %.33, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.37 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.37, i64 0, i32 2
  %.39 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.38, align 8
  call void %.39(%Parser.580271* %.1)
  %.44 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.45 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.44, i64 0, i32 10
  %.46 = load %TypeNode.580161* (%Parser.580271*)*, %TypeNode.580161* (%Parser.580271*)** %.45, align 8
  %.47 = call %TypeNode.580161* %.46(%Parser.580271* %.1)
  %.48 = getelementptr inbounds i8, i8* %.6, i64 24
  %1 = bitcast i8* %.48 to %TypeNode.580161**
  store %TypeNode.580161* %.47, %TypeNode.580161** %1, align 8
  %.52 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.52, i64 0, i32 4
  %.54 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.53, align 8
  %.55 = call %Token.580141* %.54(%Parser.580271* %.1, i64 23)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.59 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.59, i64 0, i32 5
  %.61 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.60, align 8
  call void %.61(%Parser.580271* %.1)
  %.65 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.65, i64 0, i32 4
  %.67 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.66, align 8
  %.68 = call %Token.580141* %.67(%Parser.580271* %.1, i64 24)
  %.71 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.72 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.71, i64 0, i32 5
  %.73 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.72, align 8
  call void %.73(%Parser.580271* %.1)
  %.77 = load %Token.580141*, %Token.580141** %.29, align 8
  %.78 = getelementptr inbounds %Token.580141, %Token.580141* %.77, i64 0, i32 1
  %.79 = load i64, i64* %.78, align 8
  %.80 = icmp eq i64 %.79, 50
  br i1 %.80, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.3.endif
  %.119 = getelementptr inbounds i8, i8* %.6, i64 16
  %2 = bitcast i8* %.119 to %"Array<EnumNodeField>.580247"**
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %.84 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.85 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.84, i64 0, i32 4
  %.86 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.85, align 8
  %.87 = call %Token.580141* %.86(%Parser.580271* %.1, i64 50)
  %.88 = bitcast %Token.580141* %.87 to %IdentifierToken.580155*
  %.89 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.90 = bitcast i8* %.89 to %EnumNodeField.580243*
  %.91 = bitcast i8* %.89 to %EnumNodeField_vtable_ty.580244**
  store %EnumNodeField_vtable_ty.580244* @EnumNodeField_vtable_data, %EnumNodeField_vtable_ty.580244** %.91, align 8
  call void @EnumNodeField_constructor(%EnumNodeField.580243* %.90, %IdentifierToken.580155* %.88)
  %enum_field = alloca %EnumNodeField.580243*, align 8
  %3 = bitcast %EnumNodeField.580243** %enum_field to i8**
  store i8* %.89, i8** %3, align 8
  %.97 = load %Token.580141*, %Token.580141** %.29, align 8
  %.98 = getelementptr inbounds %Token.580141, %Token.580141* %.97, i64 0, i32 1
  %.99 = load i64, i64* %.98, align 8
  %.100 = icmp eq i64 %.99, 35
  br i1 %.100, label %while.entry.if, label %while.entry.endif

while.exit:                                       ; preds = %while.entry.endif, %.3.endif
  %.142 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.143 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.142, i64 0, i32 4
  %.144 = load %Token.580141* (%Parser.580271*, i64)*, %Token.580141* (%Parser.580271*, i64)** %.143, align 8
  %.145 = call %Token.580141* %.144(%Parser.580271* %.1, i64 25)
  ret %EnumNode.580245* %.7

while.entry.if:                                   ; preds = %while.entry
  %.104 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.105 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.104, i64 0, i32 2
  %.106 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.105, align 8
  call void %.106(%Parser.580271* %.1)
  %.108 = load %EnumNodeField.580243*, %EnumNodeField.580243** %enum_field, align 8
  %.111 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.112 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.111, i64 0, i32 36
  %.113 = load %ExpressionNode.580177* (%Parser.580271*)*, %ExpressionNode.580177* (%Parser.580271*)** %.112, align 8
  %.114 = call %ExpressionNode.580177* %.113(%Parser.580271* %.1)
  %.115 = getelementptr inbounds %EnumNodeField.580243, %EnumNodeField.580243* %.108, i64 0, i32 2
  store %ExpressionNode.580177* %.114, %ExpressionNode.580177** %.115, align 8
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.if, %while.entry
  %.120 = load %"Array<EnumNodeField>.580247"*, %"Array<EnumNodeField>.580247"** %2, align 8
  %.121 = load %EnumNodeField.580243*, %EnumNodeField.580243** %enum_field, align 8
  %.122 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.120, i64 0, i32 0
  %.123 = load %"Array<EnumNodeField>_vtable_ty.580248"*, %"Array<EnumNodeField>_vtable_ty.580248"** %.122, align 8
  %.124 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.580248", %"Array<EnumNodeField>_vtable_ty.580248"* %.123, i64 0, i32 2
  %.125 = load void (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)*, void (%"Array<EnumNodeField>.580247"*, %EnumNodeField.580243*)** %.124, align 8
  call void %.125(%"Array<EnumNodeField>.580247"* %.120, %EnumNodeField.580243* %.121)
  %.129 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.13, align 8
  %.130 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.129, i64 0, i32 5
  %.131 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.130, align 8
  call void %.131(%Parser.580271* %.1)
  %.135 = load %Token.580141*, %Token.580141** %.29, align 8
  %.136 = getelementptr inbounds %Token.580141, %Token.580141* %.135, i64 0, i32 1
  %.137 = load i64, i64* %.136, align 8
  %.138 = icmp eq i64 %.137, 50
  br i1 %.138, label %while.entry, label %while.exit
}

define noalias %ModuleAST.580255* @Parser_parse(%Parser.580271* %.1, %"Array<Token>.580152"* %.2, %"Array<FloError>.580139"* %.3) {
.5:
  %.11 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 1
  store %"Array<Token>.580152"* %.2, %"Array<Token>.580152"** %.11, align 8
  %.15 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 2
  store %"Array<FloError>.580139"* %.3, %"Array<FloError>.580139"** %.15, align 8
  %.18 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 0
  %.19 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.20 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.19, i64 0, i32 2
  %.21 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.20, align 8
  call void %.21(%Parser.580271* %.1)
  %.24 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = bitcast i8* %.24 to %ModuleAST.580255*
  %.26 = bitcast i8* %.24 to %ModuleAST_vtable_ty.580256**
  store %ModuleAST_vtable_ty.580256* @ModuleAST_vtable_data, %ModuleAST_vtable_ty.580256** %.26, align 8
  call void @ModuleAST_constructor(%ModuleAST.580255* %.25)
  %.32 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.33 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.32, i64 0, i32 5
  %.34 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.33, align 8
  call void %.34(%Parser.580271* %.1)
  %.38 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.39 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.38, i64 0, i32 0
  %.40 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.39, align 8
  %.41 = call i1 %.40(%Parser.580271* %.1)
  br i1 %.41, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.5
  %.44 = getelementptr inbounds %Parser.580271, %Parser.580271* %.1, i64 0, i32 3
  %.167 = getelementptr inbounds i8, i8* %.24, i64 48
  %0 = bitcast i8* %.167 to %"Array<VarDeclarationStatement>.580262"**
  %.145 = getelementptr inbounds i8, i8* %.24, i64 40
  %1 = bitcast i8* %.145 to %"Array<ConstDeclarationStatement>.580261"**
  %.123 = getelementptr inbounds i8, i8* %.24, i64 32
  %2 = bitcast i8* %.123 to %"Array<ImportNode>.580260"**
  %.101 = getelementptr inbounds i8, i8* %.24, i64 24
  %3 = bitcast i8* %.101 to %"Array<EnumNode>.580259"**
  %.79 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.79 to %"Array<ClassDeclarationNode>.580258"**
  %.57 = getelementptr inbounds i8, i8* %.24, i64 8
  %5 = bitcast i8* %.57 to %"Array<FunctionDeclarationNode>.580257"**
  %.204 = getelementptr inbounds i8, i8* %.24, i64 56
  %6 = bitcast i8* %.204 to %"Array<TypeAliasNode>.580263"**
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %.45 = load %Token.580141*, %Token.580141** %.44, align 8
  %.46 = getelementptr inbounds %Token.580141, %Token.580141* %.45, i64 0, i32 1
  %.47 = load i64, i64* %.46, align 8
  switch i64 %.47, label %while.entry.else.else.else.else.else.else [
    i64 73, label %while.entry.if
    i64 82, label %while.entry.else.if
    i64 83, label %while.entry.else.else.if
    i64 77, label %while.entry.else.else.else.if
    i64 54, label %while.entry.else.else.else.else.if
    i64 55, label %while.entry.else.else.else.else.else.if
  ]

while.exit:                                       ; preds = %while.entry.endif, %.5
  ret %ModuleAST.580255* %.25

while.entry.if:                                   ; preds = %while.entry
  %.52 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.52, i64 0, i32 2
  %.54 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.53, align 8
  call void %.54(%Parser.580271* %.1)
  %.58 = load %"Array<FunctionDeclarationNode>.580257"*, %"Array<FunctionDeclarationNode>.580257"** %5, align 8
  %.61 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.62 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.61, i64 0, i32 47
  %.63 = load %FunctionDeclarationNode.580225* (%Parser.580271*)*, %FunctionDeclarationNode.580225* (%Parser.580271*)** %.62, align 8
  %.64 = call %FunctionDeclarationNode.580225* %.63(%Parser.580271* %.1)
  %.65 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.58, i64 0, i32 0
  %.66 = load %"Array<FunctionDeclarationNode>_vtable_ty.580264"*, %"Array<FunctionDeclarationNode>_vtable_ty.580264"** %.65, align 8
  %.67 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.580264", %"Array<FunctionDeclarationNode>_vtable_ty.580264"* %.66, i64 0, i32 2
  %.68 = load void (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)*, void (%"Array<FunctionDeclarationNode>.580257"*, %FunctionDeclarationNode.580225*)** %.67, align 8
  call void %.68(%"Array<FunctionDeclarationNode>.580257"* %.58, %FunctionDeclarationNode.580225* %.64)
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.else.else.else.else.else.else.if, %while.entry.else.else.else.else.else.else.else, %while.entry.else.else.else.else.else.if, %while.entry.else.else.else.else.if, %while.entry.else.else.else.if, %while.entry.else.else.if, %while.entry.else.if, %while.entry.if
  %.236 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.237 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.236, i64 0, i32 5
  %.238 = load void (%Parser.580271*)*, void (%Parser.580271*)** %.237, align 8
  call void %.238(%Parser.580271* %.1)
  %.242 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.243 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.242, i64 0, i32 0
  %.244 = load i1 (%Parser.580271*)*, i1 (%Parser.580271*)** %.243, align 8
  %.245 = call i1 %.244(%Parser.580271* %.1)
  br i1 %.245, label %while.entry, label %while.exit

while.entry.else.if:                              ; preds = %while.entry
  %.80 = load %"Array<ClassDeclarationNode>.580258"*, %"Array<ClassDeclarationNode>.580258"** %4, align 8
  %.83 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.84 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.83, i64 0, i32 52
  %.85 = load %ClassDeclarationNode.580235* (%Parser.580271*)*, %ClassDeclarationNode.580235* (%Parser.580271*)** %.84, align 8
  %.86 = call %ClassDeclarationNode.580235* %.85(%Parser.580271* %.1)
  %.87 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.80, i64 0, i32 0
  %.88 = load %"Array<ClassDeclarationNode>_vtable_ty.580265"*, %"Array<ClassDeclarationNode>_vtable_ty.580265"** %.87, align 8
  %.89 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.580265", %"Array<ClassDeclarationNode>_vtable_ty.580265"* %.88, i64 0, i32 2
  %.90 = load void (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)*, void (%"Array<ClassDeclarationNode>.580258"*, %ClassDeclarationNode.580235*)** %.89, align 8
  call void %.90(%"Array<ClassDeclarationNode>.580258"* %.80, %ClassDeclarationNode.580235* %.86)
  br label %while.entry.endif

while.entry.else.else.if:                         ; preds = %while.entry
  %.102 = load %"Array<EnumNode>.580259"*, %"Array<EnumNode>.580259"** %3, align 8
  %.105 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.106 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.105, i64 0, i32 55
  %.107 = load %EnumNode.580245* (%Parser.580271*)*, %EnumNode.580245* (%Parser.580271*)** %.106, align 8
  %.108 = call %EnumNode.580245* %.107(%Parser.580271* %.1)
  %.109 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.102, i64 0, i32 0
  %.110 = load %"Array<EnumNode>_vtable_ty.580266"*, %"Array<EnumNode>_vtable_ty.580266"** %.109, align 8
  %.111 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.580266", %"Array<EnumNode>_vtable_ty.580266"* %.110, i64 0, i32 2
  %.112 = load void (%"Array<EnumNode>.580259"*, %EnumNode.580245*)*, void (%"Array<EnumNode>.580259"*, %EnumNode.580245*)** %.111, align 8
  call void %.112(%"Array<EnumNode>.580259"* %.102, %EnumNode.580245* %.108)
  br label %while.entry.endif

while.entry.else.else.else.if:                    ; preds = %while.entry
  %.124 = load %"Array<ImportNode>.580260"*, %"Array<ImportNode>.580260"** %2, align 8
  %.127 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.128 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.127, i64 0, i32 54
  %.129 = load %ImportNode.580249* (%Parser.580271*)*, %ImportNode.580249* (%Parser.580271*)** %.128, align 8
  %.130 = call %ImportNode.580249* %.129(%Parser.580271* %.1)
  %.131 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.124, i64 0, i32 0
  %.132 = load %"Array<ImportNode>_vtable_ty.580267"*, %"Array<ImportNode>_vtable_ty.580267"** %.131, align 8
  %.133 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.580267", %"Array<ImportNode>_vtable_ty.580267"* %.132, i64 0, i32 2
  %.134 = load void (%"Array<ImportNode>.580260"*, %ImportNode.580249*)*, void (%"Array<ImportNode>.580260"*, %ImportNode.580249*)** %.133, align 8
  call void %.134(%"Array<ImportNode>.580260"* %.124, %ImportNode.580249* %.130)
  br label %while.entry.endif

while.entry.else.else.else.else.if:               ; preds = %while.entry
  %.146 = load %"Array<ConstDeclarationStatement>.580261"*, %"Array<ConstDeclarationStatement>.580261"** %1, align 8
  %.149 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.150 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.149, i64 0, i32 53
  %.151 = load %ConstDeclarationStatement.580221* (%Parser.580271*)*, %ConstDeclarationStatement.580221* (%Parser.580271*)** %.150, align 8
  %.152 = call %ConstDeclarationStatement.580221* %.151(%Parser.580271* %.1)
  %.153 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.146, i64 0, i32 0
  %.154 = load %"Array<ConstDeclarationStatement>_vtable_ty.580268"*, %"Array<ConstDeclarationStatement>_vtable_ty.580268"** %.153, align 8
  %.155 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.580268", %"Array<ConstDeclarationStatement>_vtable_ty.580268"* %.154, i64 0, i32 2
  %.156 = load void (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)*, void (%"Array<ConstDeclarationStatement>.580261"*, %ConstDeclarationStatement.580221*)** %.155, align 8
  call void %.156(%"Array<ConstDeclarationStatement>.580261"* %.146, %ConstDeclarationStatement.580221* %.152)
  br label %while.entry.endif

while.entry.else.else.else.else.else.if:          ; preds = %while.entry
  %.168 = load %"Array<VarDeclarationStatement>.580262"*, %"Array<VarDeclarationStatement>.580262"** %0, align 8
  %.171 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.172 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.171, i64 0, i32 40
  %.173 = load %VarDeclarationStatement.580219* (%Parser.580271*)*, %VarDeclarationStatement.580219* (%Parser.580271*)** %.172, align 8
  %.174 = call %VarDeclarationStatement.580219* %.173(%Parser.580271* %.1)
  %.175 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.168, i64 0, i32 0
  %.176 = load %"Array<VarDeclarationStatement>_vtable_ty.580269"*, %"Array<VarDeclarationStatement>_vtable_ty.580269"** %.175, align 8
  %.177 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.580269", %"Array<VarDeclarationStatement>_vtable_ty.580269"* %.176, i64 0, i32 2
  %.178 = load void (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)*, void (%"Array<VarDeclarationStatement>.580262"*, %VarDeclarationStatement.580219*)** %.177, align 8
  call void %.178(%"Array<VarDeclarationStatement>.580262"* %.168, %VarDeclarationStatement.580219* %.174)
  br label %while.entry.endif

while.entry.else.else.else.else.else.else:        ; preds = %while.entry
  %.186 = icmp eq i64 %.47, 50
  %.191 = getelementptr inbounds %Token.580141, %Token.580141* %.45, i64 1
  %7 = bitcast %Token.580141* %.191 to %string.580129**
  %.192 = load %string.580129*, %string.580129** %7, align 8
  %.193 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.194 = bitcast i8* %.193 to %string.580129*
  %.194.repack = bitcast i8* %.193 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.194.repack, align 8
  %.194.repack2 = getelementptr inbounds i8, i8* %.193, i64 8
  %8 = bitcast i8* %.194.repack2 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.182, i64 0, i64 0), i8** %8, align 8
  %.194.repack3 = getelementptr inbounds i8, i8* %.193, i64 16
  %9 = bitcast i8* %.194.repack3 to i64*
  store i64 4, i64* %9, align 8
  %.194.repack4 = getelementptr inbounds i8, i8* %.193, i64 24
  %10 = bitcast i8* %.194.repack4 to i64*
  store i64 4, i64* %10, align 8
  %.196 = getelementptr inbounds %string.580129, %string.580129* %.192, i64 0, i32 0
  %.197 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.196, align 8
  %.198 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.197, i64 0, i32 3
  %.199 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.198, align 8
  %.200 = call i1 %.199(%string.580129* %.192, %string.580129* %.194)
  %.201 = and i1 %.186, %.200
  br i1 %.201, label %while.entry.else.else.else.else.else.else.if, label %while.entry.else.else.else.else.else.else.else

while.entry.else.else.else.else.else.else.if:     ; preds = %while.entry.else.else.else.else.else.else
  %.205 = load %"Array<TypeAliasNode>.580263"*, %"Array<TypeAliasNode>.580263"** %6, align 8
  %.208 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.209 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.208, i64 0, i32 44
  %.210 = load %TypeAliasNode.580253* (%Parser.580271*)*, %TypeAliasNode.580253* (%Parser.580271*)** %.209, align 8
  %.211 = call %TypeAliasNode.580253* %.210(%Parser.580271* %.1)
  %.212 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.205, i64 0, i32 0
  %.213 = load %"Array<TypeAliasNode>_vtable_ty.580270"*, %"Array<TypeAliasNode>_vtable_ty.580270"** %.212, align 8
  %.214 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.580270", %"Array<TypeAliasNode>_vtable_ty.580270"* %.213, i64 0, i32 2
  %.215 = load void (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)*, void (%"Array<TypeAliasNode>.580263"*, %TypeAliasNode.580253*)** %.214, align 8
  call void %.215(%"Array<TypeAliasNode>.580263"* %.205, %TypeAliasNode.580253* %.211)
  br label %while.entry.endif

while.entry.else.else.else.else.else.else.else:   ; preds = %while.entry.else.else.else.else.else.else
  %.220 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.18, align 8
  %.221 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.220, i64 0, i32 1
  %.222 = load void (%Parser.580271*, %string.580129*)*, void (%Parser.580271*, %string.580129*)** %.221, align 8
  %.223 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.224 = bitcast i8* %.223 to %string.580129*
  %.224.repack = bitcast i8* %.223 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.224.repack, align 8
  %.224.repack5 = getelementptr inbounds i8, i8* %.223, i64 8
  %11 = bitcast i8* %.224.repack5 to i8**
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @str.183, i64 0, i64 0), i8** %11, align 8
  %.224.repack6 = getelementptr inbounds i8, i8* %.223, i64 16
  %12 = bitcast i8* %.224.repack6 to i64*
  store i64 79, i64* %12, align 8
  %.224.repack7 = getelementptr inbounds i8, i8* %.223, i64 24
  %13 = bitcast i8* %.224.repack7 to i64*
  store i64 79, i64* %13, align 8
  call void %.222(%Parser.580271* %.1, %string.580129* %.224)
  br label %while.entry.endif
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Type_constructor(%Type.580273* nocapture %.1, i64 %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

; Function Attrs: nofree nounwind
define noalias %Type.580273* @Type_unknown() local_unnamed_addr #3 {
.2:
  %.3 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.4 = bitcast i8* %.3 to %Type.580273*
  %.5 = bitcast i8* %.3 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.5, align 8
  call void @Type_constructor(%Type.580273* %.4, i64 21)
  ret %Type.580273* %.4
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @BooleanType_constructor(%BooleanType.580275* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = bitcast %BooleanType.580275* %.1 to %Type.580273*
  call void @Type_constructor(%Type.580273* %.6, i64 0)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @PointerType_constructor(%PointerType.580277* nocapture %.1, %Type.580273* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %PointerType.580277* %.1 to %Type.580273*
  call void @Type_constructor(%Type.580273* %.8, i64 15)
  %.12 = getelementptr inbounds %PointerType.580277, %PointerType.580277* %.1, i64 0, i32 2
  store %Type.580273* %.2, %Type.580273** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Type>_constructor"(%"Array<Type>.580281"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 1
  %0 = bitcast %Type.580273*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Type>_resize"(%"Array<Type>.580281"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 1
  %0 = bitcast %Type.580273*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Type>_swap"(%"Array<Type>.580281"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 1
  %.12 = load %Type.580273**, %Type.580273*** %.11, align 8
  %.13 = getelementptr inbounds %Type.580273*, %Type.580273** %.12, i64 %.2
  %0 = bitcast %Type.580273** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Type.580273*, %Type.580273** %.12, i64 %.3
  %1 = bitcast %Type.580273** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Type.580273**, %Type.580273*** %.11, align 8
  %.33 = getelementptr inbounds %Type.580273*, %Type.580273** %.31, i64 %.3
  %2 = bitcast %Type.580273** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Type>___sl__"(%"Array<Type>.580281"* %.1, %Type.580273* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 0
  %.17 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Type>.580281"*)*, void (%"Array<Type>.580281"*)** %.18, align 8
  call void %.19(%"Array<Type>.580281"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 1
  %.31 = load %Type.580273**, %Type.580273*** %.30, align 8
  %.33 = getelementptr inbounds %Type.580273*, %Type.580273** %.31, i64 %.24
  store %Type.580273* %.2, %Type.580273** %.33, align 8
  ret void
}

define void @"Array<Type>___setitem__"(%"Array<Type>.580281"* nocapture readonly %.1, i64 %.2, %Type.580273* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 1
  %.30 = load %Type.580273**, %Type.580273*** %.29, align 8
  %.32 = getelementptr inbounds %Type.580273*, %Type.580273** %.30, i64 %.2
  store %Type.580273* %.3, %Type.580273** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Type>_append"(%"Array<Type>.580281"* %.1, %Type.580273* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 0
  %.9 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Type>.580281"*, %Type.580273*)*, void (%"Array<Type>.580281"*, %Type.580273*)** %.10, align 8
  call void %.11(%"Array<Type>.580281"* %.1, %Type.580273* %.2)
  ret void
}

define %Type.580273* @"Array<Type>___getitem__"(%"Array<Type>.580281"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 1
  %.28 = load %Type.580273**, %Type.580273*** %.27, align 8
  %.29 = getelementptr inbounds %Type.580273*, %Type.580273** %.28, i64 %.2
  %.30 = load %Type.580273*, %Type.580273** %.29, align 8
  ret %Type.580273* %.30

.4.endif:                                         ; preds = %.4
  ret %Type.580273* null
}

define i1 @"Array<Type>___eq__"(%"Array<Type>.580281"* %.1, %"Array<Type>.580281"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.28, i64 0, i32 5
  %.30 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.29, align 8
  %.31 = call %Type.580273* %.30(%"Array<Type>.580281"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.35, i64 0, i32 5
  %.37 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.36, align 8
  %.38 = call %Type.580273* %.37(%"Array<Type>.580281"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Type.580273* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Type.580273* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Type>___in__"(%"Array<Type>.580281"* %.1, %Type.580273* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Type.580273* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.19, i64 0, i32 5
  %.21 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.20, align 8
  %.22 = call %Type.580273* %.21(%"Array<Type>.580281"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Type.580273* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Type>_find"(%"Array<Type>.580281"* nocapture readonly %.1, %Type.580273* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 1
  %.19 = load %Type.580273**, %Type.580273*** %.18, align 8
  %0 = ptrtoint %Type.580273* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Type.580273*, %Type.580273** %.19, i64 %storemerge5
  %1 = bitcast %Type.580273** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Type>_join"(%"Array<Type>.580281"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.184, i64 0, i64 0), i64 5)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.184, i64 0, i64 0), i64 5)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Type>___as_string__"(%"Array<Type>.580281"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1, i64 0, i32 0
  %.7 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Type>.580281"*, %string.580129*)*, %string.580129* (%"Array<Type>.580281"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Type>.580281"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FunctionType_constructor(%FunctionType.580279* nocapture %.1, %"Array<Type>.580281"* %.2, %Type.580273* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %FunctionType.580279* %.1 to %Type.580273*
  call void @Type_constructor(%Type.580273* %.10, i64 17)
  %.14 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.1, i64 0, i32 2
  store %"Array<Type>.580281"* %.2, %"Array<Type>.580281"** %.14, align 8
  %.18 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.1, i64 0, i32 3
  store %Type.580273* %.3, %Type.580273** %.18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Statement_constructor(%Statement.580285* nocapture %.1, i64 %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %Statement.580285, %Statement.580285* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @TypeId_constructor(%TypeId.580287* nocapture %.1, i64 %.2, i64 %.3, i64 %.4) local_unnamed_addr #1 {
.6:
  %.13 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.1, i64 0, i32 2
  store i64 %.3, i64* %.17, align 8
  %.21 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.1, i64 0, i32 3
  store i64 %.4, i64* %.21, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @TypeId___eq__(%TypeId.580287* nocapture readonly %.1, %TypeId.580287* nocapture readonly %.2) #4 {
.4:
  %.8 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.1, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp eq i64 %.9, %.12
  %.15 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.1, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.18 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.2, i64 0, i32 2
  %.19 = load i64, i64* %.18, align 8
  %.20 = icmp eq i64 %.16, %.19
  %.21 = and i1 %.13, %.20
  %.23 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.1, i64 0, i32 3
  %.24 = load i64, i64* %.23, align 8
  %.26 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.2, i64 0, i32 3
  %.27 = load i64, i64* %.26, align 8
  %.28 = icmp eq i64 %.24, %.27
  %.29 = and i1 %.21, %.28
  ret i1 %.29
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ClassId_constructor(%ClassId.580289* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %ClassId.580289* %.1 to %TypeId.580287*
  call void @TypeId_constructor(%TypeId.580287* %.10, i64 %.2, i64 0, i64 %.3)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumId_constructor(%EnumId.580291* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %EnumId.580291* %.1 to %TypeId.580287*
  call void @TypeId_constructor(%TypeId.580287* %.10, i64 %.2, i64 1, i64 %.3)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Expression_constructor(%Expression.580293* nocapture %.1, i64 %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %Expression.580293* %.1 to %Statement.580285*
  call void @Statement_constructor(%Statement.580285* %.8, i64 8)
  %.12 = getelementptr inbounds %Expression.580293, %Expression.580293* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.15 = getelementptr inbounds %Expression.580293, %Expression.580293* %.1, i64 0, i32 2
  store i1 false, i1* %.15, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ArrayType_constructor(%ArrayType.580295* nocapture %.1, %Type.580273* %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %ArrayType.580295* %.1 to %Type.580273*
  call void @Type_constructor(%Type.580273* %.10, i64 16)
  %.14 = getelementptr inbounds %ArrayType.580295, %ArrayType.580295* %.1, i64 0, i32 2
  store %Type.580273* %.2, %Type.580273** %.14, align 8
  %.18 = getelementptr inbounds %ArrayType.580295, %ArrayType.580295* %.1, i64 0, i32 3
  store i64 %.3, i64* %.18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ObjectType_constructor(%ObjectType.580297* nocapture %.1, %ClassId.580289* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %ObjectType.580297* %.1 to %Type.580273*
  call void @Type_constructor(%Type.580273* %.8, i64 13)
  %.12 = getelementptr inbounds %ObjectType.580297, %ObjectType.580297* %.1, i64 0, i32 2
  store %ClassId.580289* %.2, %ClassId.580289** %.12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumType_constructor(%EnumType.580299* nocapture %.1, %EnumId.580291* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %EnumType.580299* %.1 to %Type.580273*
  call void @Type_constructor(%Type.580273* %.8, i64 14)
  %.12 = getelementptr inbounds %EnumType.580299, %EnumType.580299* %.1, i64 0, i32 2
  store %EnumId.580291* %.2, %EnumId.580291** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @StringType_constructor(%StringType.580301* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.6 = bitcast %StringType.580301* %.1 to %ObjectType.580297*
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.10 = bitcast i8* %.9 to %ClassId.580289*
  %.11 = bitcast i8* %.9 to %ClassId_vtable_ty.580290**
  store %ClassId_vtable_ty.580290* @ClassId_vtable_data, %ClassId_vtable_ty.580290** %.11, align 8
  call void @ClassId_constructor(%ClassId.580289* %.10, i64 -1, i64 -1)
  call void @ObjectType_constructor(%ObjectType.580297* %.6, %ClassId.580289* %.10)
  ret void
}

; Function Attrs: nofree nounwind
define void @IntExpression_constructor(%IntExpression.580303* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %IntExpression.580303* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.8, i64 0)
  %.11 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.12 = bitcast i8* %.11 to %Type.580273*
  %.13 = bitcast i8* %.11 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.13, align 8
  call void @Type_constructor(%Type.580273* %.12, i64 7)
  %.16 = getelementptr inbounds %IntExpression.580303, %IntExpression.580303* %.1, i64 0, i32 4
  %0 = bitcast %Type.580273** %.16 to i8**
  store i8* %.11, i8** %0, align 8
  %.20 = getelementptr inbounds %IntExpression.580303, %IntExpression.580303* %.1, i64 0, i32 5
  store i64 %.2, i64* %.20, align 8
  %.23 = getelementptr inbounds %IntExpression.580303, %IntExpression.580303* %.1, i64 0, i32 2
  store i1 true, i1* %.23, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @BooleanExpression_constructor(%BooleanExpression.580305* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %BooleanExpression.580305* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.8, i64 4)
  %.11 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.12 = bitcast i8* %.11 to %BooleanType.580275*
  %.13 = bitcast i8* %.11 to %BooleanType_vtable_ty.580276**
  store %BooleanType_vtable_ty.580276* @BooleanType_vtable_data, %BooleanType_vtable_ty.580276** %.13, align 8
  call void @BooleanType_constructor(%BooleanType.580275* %.12)
  %.20 = getelementptr inbounds %BooleanExpression.580305, %BooleanExpression.580305* %.1, i64 0, i32 4
  %0 = bitcast %Type.580273** %.20 to i8**
  store i8* %.11, i8** %0, align 8
  %.24 = getelementptr inbounds %BooleanExpression.580305, %BooleanExpression.580305* %.1, i64 0, i32 5
  store i64 %.2, i64* %.24, align 8
  %.27 = getelementptr inbounds %BooleanExpression.580305, %BooleanExpression.580305* %.1, i64 0, i32 2
  store i1 true, i1* %.27, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @FloatExpression_constructor(%FloatExpression.580307* nocapture %.1, double %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %FloatExpression.580307* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.8, i64 1)
  %.11 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.12 = bitcast i8* %.11 to %Type.580273*
  %.13 = bitcast i8* %.11 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.13, align 8
  call void @Type_constructor(%Type.580273* %.12, i64 11)
  %.16 = getelementptr inbounds %FloatExpression.580307, %FloatExpression.580307* %.1, i64 0, i32 4
  %0 = bitcast %Type.580273** %.16 to i8**
  store i8* %.11, i8** %0, align 8
  %.20 = getelementptr inbounds %FloatExpression.580307, %FloatExpression.580307* %.1, i64 0, i32 5
  store double %.2, double* %.20, align 8
  %.23 = getelementptr inbounds %FloatExpression.580307, %FloatExpression.580307* %.1, i64 0, i32 2
  store i1 true, i1* %.23, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Expression>_constructor"(%"Array<Expression>.580311"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 1
  %0 = bitcast %Expression.580293*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Expression>_resize"(%"Array<Expression>.580311"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 1
  %0 = bitcast %Expression.580293*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Expression>_swap"(%"Array<Expression>.580311"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 1
  %.12 = load %Expression.580293**, %Expression.580293*** %.11, align 8
  %.13 = getelementptr inbounds %Expression.580293*, %Expression.580293** %.12, i64 %.2
  %0 = bitcast %Expression.580293** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Expression.580293*, %Expression.580293** %.12, i64 %.3
  %1 = bitcast %Expression.580293** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Expression.580293**, %Expression.580293*** %.11, align 8
  %.33 = getelementptr inbounds %Expression.580293*, %Expression.580293** %.31, i64 %.3
  %2 = bitcast %Expression.580293** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Expression>___sl__"(%"Array<Expression>.580311"* %.1, %Expression.580293* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 0
  %.17 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Expression>.580311"*)*, void (%"Array<Expression>.580311"*)** %.18, align 8
  call void %.19(%"Array<Expression>.580311"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 1
  %.31 = load %Expression.580293**, %Expression.580293*** %.30, align 8
  %.33 = getelementptr inbounds %Expression.580293*, %Expression.580293** %.31, i64 %.24
  store %Expression.580293* %.2, %Expression.580293** %.33, align 8
  ret void
}

define void @"Array<Expression>___setitem__"(%"Array<Expression>.580311"* nocapture readonly %.1, i64 %.2, %Expression.580293* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 1
  %.30 = load %Expression.580293**, %Expression.580293*** %.29, align 8
  %.32 = getelementptr inbounds %Expression.580293*, %Expression.580293** %.30, i64 %.2
  store %Expression.580293* %.3, %Expression.580293** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Expression>_append"(%"Array<Expression>.580311"* %.1, %Expression.580293* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 0
  %.9 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Expression>.580311"*, %Expression.580293*)*, void (%"Array<Expression>.580311"*, %Expression.580293*)** %.10, align 8
  call void %.11(%"Array<Expression>.580311"* %.1, %Expression.580293* %.2)
  ret void
}

define %Expression.580293* @"Array<Expression>___getitem__"(%"Array<Expression>.580311"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 1
  %.28 = load %Expression.580293**, %Expression.580293*** %.27, align 8
  %.29 = getelementptr inbounds %Expression.580293*, %Expression.580293** %.28, i64 %.2
  %.30 = load %Expression.580293*, %Expression.580293** %.29, align 8
  ret %Expression.580293* %.30

.4.endif:                                         ; preds = %.4
  ret %Expression.580293* null
}

define i1 @"Array<Expression>___eq__"(%"Array<Expression>.580311"* %.1, %"Array<Expression>.580311"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.28, i64 0, i32 5
  %.30 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.29, align 8
  %.31 = call %Expression.580293* %.30(%"Array<Expression>.580311"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.35, i64 0, i32 5
  %.37 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.36, align 8
  %.38 = call %Expression.580293* %.37(%"Array<Expression>.580311"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Expression.580293* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Expression.580293* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Expression>___in__"(%"Array<Expression>.580311"* %.1, %Expression.580293* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Expression.580293* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.19, i64 0, i32 5
  %.21 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.20, align 8
  %.22 = call %Expression.580293* %.21(%"Array<Expression>.580311"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Expression.580293* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Expression>_find"(%"Array<Expression>.580311"* nocapture readonly %.1, %Expression.580293* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 1
  %.19 = load %Expression.580293**, %Expression.580293*** %.18, align 8
  %0 = ptrtoint %Expression.580293* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Expression.580293*, %Expression.580293** %.19, i64 %storemerge5
  %1 = bitcast %Expression.580293** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Expression>_join"(%"Array<Expression>.580311"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.185, i64 0, i64 0), i64 11)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.185, i64 0, i64 0), i64 11)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Expression>___as_string__"(%"Array<Expression>.580311"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1, i64 0, i32 0
  %.7 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Expression>.580311"*, %string.580129*)*, %string.580129* (%"Array<Expression>.580311"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Expression>.580311"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @StringExpression_constructor(%StringExpression.580309* nocapture %.1, %string.580129* %.2, %"Array<Expression>.580311"* %.3) local_unnamed_addr #3 {
.5:
  %.10 = bitcast %StringExpression.580309* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.10, i64 2)
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %StringType.580301*
  %.15 = bitcast i8* %.13 to %StringType_vtable_ty.580302**
  store %StringType_vtable_ty.580302* @StringType_vtable_data, %StringType_vtable_ty.580302** %.15, align 8
  call void @StringType_constructor(%StringType.580301* %.14)
  %.21 = getelementptr inbounds %StringExpression.580309, %StringExpression.580309* %.1, i64 0, i32 6
  store %"Array<Expression>.580311"* %.3, %"Array<Expression>.580311"** %.21, align 8
  %.26 = getelementptr inbounds %StringExpression.580309, %StringExpression.580309* %.1, i64 0, i32 4
  %0 = bitcast %Type.580273** %.26 to i8**
  store i8* %.13, i8** %0, align 8
  %.30 = getelementptr inbounds %StringExpression.580309, %StringExpression.580309* %.1, i64 0, i32 5
  store %string.580129* %.2, %string.580129** %.30, align 8
  %.33 = getelementptr inbounds %StringExpression.580309, %StringExpression.580309* %.1, i64 0, i32 2
  store i1 true, i1* %.33, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @NullExpression_constructor(%NullExpression.580313* nocapture %.1, %Type.580273* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %NullExpression.580313* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.8, i64 5)
  %.12 = getelementptr inbounds %NullExpression.580313, %NullExpression.580313* %.1, i64 0, i32 4
  store %Type.580273* %.2, %Type.580273** %.12, align 8
  %.15 = getelementptr inbounds %NullExpression.580313, %NullExpression.580313* %.1, i64 0, i32 2
  store i1 true, i1* %.15, align 1
  ret void
}

define void @ArrayExpression_constructor(%ArrayExpression.580315* nocapture %.1, %"Array<Expression>.580311"* %.2) local_unnamed_addr {
.4:
  %.8 = bitcast %ArrayExpression.580315* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.8, i64 6)
  %.12 = getelementptr inbounds %ArrayExpression.580315, %ArrayExpression.580315* %.1, i64 0, i32 5
  store %"Array<Expression>.580311"* %.2, %"Array<Expression>.580311"** %.12, align 8
  %.15 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.2, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp sgt i64 %.16, 0
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.21 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.2, i64 0, i32 0
  %.22 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.22, i64 0, i32 5
  %.24 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.23, align 8
  %.25 = call %Expression.580293* %.24(%"Array<Expression>.580311"* %.2, i64 0)
  %.26 = getelementptr inbounds %Expression.580293, %Expression.580293* %.25, i64 0, i32 4
  %.27 = load %Type.580273*, %Type.580273** %.26, align 8
  %.30 = load i64, i64* %.15, align 8
  %.31 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.32 = bitcast i8* %.31 to %ArrayType.580295*
  %.33 = bitcast i8* %.31 to %ArrayType_vtable_ty.580296**
  store %ArrayType_vtable_ty.580296* @ArrayType_vtable_data, %ArrayType_vtable_ty.580296** %.33, align 8
  call void @ArrayType_constructor(%ArrayType.580295* %.32, %Type.580273* %.27, i64 %.30)
  %.37 = getelementptr inbounds %ArrayExpression.580315, %ArrayExpression.580315* %.1, i64 0, i32 4
  %0 = bitcast %Type.580273** %.37 to i8**
  store i8* %.31, i8** %0, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4.if, %.4
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @BinaryExpression_constructor(%BinaryExpression.580317* nocapture %.1, %Expression.580293* %.2, i64 %.3, %Expression.580293* %.4, %Type.580273* %.5, i1 %.6) local_unnamed_addr #1 {
.8:
  %.16 = bitcast %BinaryExpression.580317* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.16, i64 8)
  %.20 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.1, i64 0, i32 5
  store %Expression.580293* %.2, %Expression.580293** %.20, align 8
  %.24 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.1, i64 0, i32 6
  store i64 %.3, i64* %.24, align 8
  %.28 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.1, i64 0, i32 7
  store %Expression.580293* %.4, %Expression.580293** %.28, align 8
  %.32 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.1, i64 0, i32 4
  store %Type.580273* %.5, %Type.580273** %.32, align 8
  %.36 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.1, i64 0, i32 2
  store i1 %.6, i1* %.36, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @UnaryExpression_constructor(%UnaryExpression.580319* nocapture %.1, i64 %.2, %Expression.580293* %.3, %Type.580273* %.4, i1 %.5) local_unnamed_addr #1 {
.7:
  %.14 = bitcast %UnaryExpression.580319* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.14, i64 9)
  %.18 = getelementptr inbounds %UnaryExpression.580319, %UnaryExpression.580319* %.1, i64 0, i32 5
  store i64 %.2, i64* %.18, align 8
  %.22 = getelementptr inbounds %UnaryExpression.580319, %UnaryExpression.580319* %.1, i64 0, i32 6
  store %Expression.580293* %.3, %Expression.580293** %.22, align 8
  %.26 = getelementptr inbounds %UnaryExpression.580319, %UnaryExpression.580319* %.1, i64 0, i32 4
  store %Type.580273* %.4, %Type.580273** %.26, align 8
  %.30 = getelementptr inbounds %UnaryExpression.580319, %UnaryExpression.580319* %.1, i64 0, i32 2
  store i1 %.5, i1* %.30, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @TernaryExpression_constructor(%TernaryExpression.580321* nocapture %.1, %Expression.580293* %.2, %Expression.580293* %.3, %Expression.580293* %.4) local_unnamed_addr #5 {
.6:
  %.12 = bitcast %TernaryExpression.580321* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.12, i64 15)
  %.16 = getelementptr inbounds %TernaryExpression.580321, %TernaryExpression.580321* %.1, i64 0, i32 5
  store %Expression.580293* %.2, %Expression.580293** %.16, align 8
  %.20 = getelementptr inbounds %TernaryExpression.580321, %TernaryExpression.580321* %.1, i64 0, i32 6
  store %Expression.580293* %.3, %Expression.580293** %.20, align 8
  %.24 = getelementptr inbounds %TernaryExpression.580321, %TernaryExpression.580321* %.1, i64 0, i32 7
  store %Expression.580293* %.4, %Expression.580293** %.24, align 8
  %.28 = getelementptr inbounds %Expression.580293, %Expression.580293* %.3, i64 0, i32 4
  %0 = bitcast %Type.580273** %.28 to i64*
  %.291 = load i64, i64* %0, align 8
  %.30 = getelementptr inbounds %TernaryExpression.580321, %TernaryExpression.580321* %.1, i64 0, i32 4
  %1 = bitcast %Type.580273** %.30 to i64*
  store i64 %.291, i64* %1, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @TypeCastExpression_constructor(%TypeCastExpression.580323* nocapture %.1, %Expression.580293* %.2, %Type.580273* %.3) local_unnamed_addr #5 {
.5:
  %.10 = bitcast %TypeCastExpression.580323* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.10, i64 10)
  %.14 = getelementptr inbounds %TypeCastExpression.580323, %TypeCastExpression.580323* %.1, i64 0, i32 5
  store %Expression.580293* %.2, %Expression.580293** %.14, align 8
  %.18 = getelementptr inbounds %TypeCastExpression.580323, %TypeCastExpression.580323* %.1, i64 0, i32 4
  store %Type.580273* %.3, %Type.580273** %.18, align 8
  %.22 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 0, i32 2
  %.23 = load i1, i1* %.22, align 1
  %.24 = getelementptr inbounds %TypeCastExpression.580323, %TypeCastExpression.580323* %.1, i64 0, i32 2
  store i1 %.23, i1* %.24, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @NewExpression_constructor(%NewExpression.580325* nocapture %.1, %Type.580273* %.2, %"Array<Expression>.580311"* %.3, i1 %.4, %Type.580273* %.5) local_unnamed_addr #1 {
.7:
  %.14 = bitcast %NewExpression.580325* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.14, i64 11)
  %.18 = getelementptr inbounds %NewExpression.580325, %NewExpression.580325* %.1, i64 0, i32 7
  store %Type.580273* %.2, %Type.580273** %.18, align 8
  %.22 = getelementptr inbounds %NewExpression.580325, %NewExpression.580325* %.1, i64 0, i32 6
  store i1 %.4, i1* %.22, align 1
  %.26 = getelementptr inbounds %NewExpression.580325, %NewExpression.580325* %.1, i64 0, i32 5
  store %"Array<Expression>.580311"* %.3, %"Array<Expression>.580311"** %.26, align 8
  %.30 = getelementptr inbounds %NewExpression.580325, %NewExpression.580325* %.1, i64 0, i32 4
  store %Type.580273* %.5, %Type.580273** %.30, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IndexExpression_constructor(%IndexExpression.580327* nocapture %.1, %Expression.580293* %.2, %Expression.580293* %.3, %Type.580273* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %IndexExpression.580327* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.12, i64 13)
  %.16 = getelementptr inbounds %IndexExpression.580327, %IndexExpression.580327* %.1, i64 0, i32 5
  store %Expression.580293* %.2, %Expression.580293** %.16, align 8
  %.20 = getelementptr inbounds %IndexExpression.580327, %IndexExpression.580327* %.1, i64 0, i32 6
  store %Expression.580293* %.3, %Expression.580293** %.20, align 8
  %.24 = getelementptr inbounds %IndexExpression.580327, %IndexExpression.580327* %.1, i64 0, i32 4
  store %Type.580273* %.4, %Type.580273** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @CallExpression_constructor(%CallExpression.580329* nocapture %.1, %Expression.580293* %.2, %"Array<Expression>.580311"* %.3, %Type.580273* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %CallExpression.580329* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.12, i64 14)
  %.16 = getelementptr inbounds %CallExpression.580329, %CallExpression.580329* %.1, i64 0, i32 5
  store %Expression.580293* %.2, %Expression.580293** %.16, align 8
  %.20 = getelementptr inbounds %CallExpression.580329, %CallExpression.580329* %.1, i64 0, i32 6
  store %"Array<Expression>.580311"* %.3, %"Array<Expression>.580311"** %.20, align 8
  %.24 = getelementptr inbounds %CallExpression.580329, %CallExpression.580329* %.1, i64 0, i32 4
  store %Type.580273* %.4, %Type.580273** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @VarId_constructor(%VarId.580331* nocapture %.1, i64 %.2, i64 %.3, i64 %.4) local_unnamed_addr #1 {
.6:
  %.13 = getelementptr inbounds %VarId.580331, %VarId.580331* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %VarId.580331, %VarId.580331* %.1, i64 0, i32 2
  store i64 %.3, i64* %.17, align 8
  %.21 = getelementptr inbounds %VarId.580331, %VarId.580331* %.1, i64 0, i32 3
  store i64 %.4, i64* %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @ClassVarId_constructor(%ClassVarId.580333* nocapture %.1, %ClassId.580289* nocapture readonly %.2) local_unnamed_addr #5 {
.4:
  %.8 = bitcast %ClassVarId.580333* %.1 to %VarId.580331*
  %.10 = getelementptr inbounds %ClassId.580289, %ClassId.580289* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %ClassId.580289, %ClassId.580289* %.2, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  call void @VarId_constructor(%VarId.580331* %.8, i64 3, i64 %.11, i64 %.14)
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @EnumVarId_constructor(%EnumVarId.580335* nocapture %.1, %EnumId.580291* nocapture readonly %.2) local_unnamed_addr #5 {
.4:
  %.8 = bitcast %EnumVarId.580335* %.1 to %VarId.580331*
  %.10 = getelementptr inbounds %EnumId.580291, %EnumId.580291* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %EnumId.580291, %EnumId.580291* %.2, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  call void @VarId_constructor(%VarId.580331* %.8, i64 4, i64 %.11, i64 %.14)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ConstId_constructor(%ConstId.580337* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %ConstId.580337* %.1 to %VarId.580331*
  call void @VarId_constructor(%VarId.580331* %.10, i64 2, i64 %.2, i64 %.3)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @PropId_constructor(%PropId.580339* nocapture %.1, i64 %.2, %TypeId.580287* %.3, i64 %.4) local_unnamed_addr #1 {
.6:
  %.13 = getelementptr inbounds %PropId.580339, %PropId.580339* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %PropId.580339, %PropId.580339* %.1, i64 0, i32 2
  store %TypeId.580287* %.3, %TypeId.580287** %.17, align 8
  %.21 = getelementptr inbounds %PropId.580339, %PropId.580339* %.1, i64 0, i32 3
  store i64 %.4, i64* %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @MemberExpression_constructor(%MemberExpression.580341* nocapture %.1, %Expression.580293* %.2, %PropId.580339* %.3, %Type.580273* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %MemberExpression.580341* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.12, i64 12)
  %.16 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.1, i64 0, i32 5
  store %Expression.580293* %.2, %Expression.580293** %.16, align 8
  %.20 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.1, i64 0, i32 6
  store %PropId.580339* %.3, %PropId.580339** %.20, align 8
  %.24 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.1, i64 0, i32 4
  store %Type.580273* %.4, %Type.580273** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @VarAccessExpression_constructor(%VarAccessExpression.580343* nocapture %.1, %VarId.580331* %.2, %Type.580273* %.3) local_unnamed_addr #5 {
.5:
  %.10 = bitcast %VarAccessExpression.580343* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.10, i64 7)
  %.14 = getelementptr inbounds %VarAccessExpression.580343, %VarAccessExpression.580343* %.1, i64 0, i32 5
  store %VarId.580331* %.2, %VarId.580331** %.14, align 8
  %.18 = getelementptr inbounds %VarAccessExpression.580343, %VarAccessExpression.580343* %.1, i64 0, i32 4
  store %Type.580273* %.3, %Type.580273** %.18, align 8
  %.22 = getelementptr inbounds %VarId.580331, %VarId.580331* %.2, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 2
  %.25 = getelementptr inbounds %VarAccessExpression.580343, %VarAccessExpression.580343* %.1, i64 0, i32 2
  store i1 %.24, i1* %.25, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Statement>_constructor"(%"Array<Statement>.580347"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 1
  %0 = bitcast %Statement.580285*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Statement>_resize"(%"Array<Statement>.580347"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 1
  %0 = bitcast %Statement.580285*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Statement>_swap"(%"Array<Statement>.580347"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 1
  %.12 = load %Statement.580285**, %Statement.580285*** %.11, align 8
  %.13 = getelementptr inbounds %Statement.580285*, %Statement.580285** %.12, i64 %.2
  %0 = bitcast %Statement.580285** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Statement.580285*, %Statement.580285** %.12, i64 %.3
  %1 = bitcast %Statement.580285** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Statement.580285**, %Statement.580285*** %.11, align 8
  %.33 = getelementptr inbounds %Statement.580285*, %Statement.580285** %.31, i64 %.3
  %2 = bitcast %Statement.580285** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Statement>___sl__"(%"Array<Statement>.580347"* %.1, %Statement.580285* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 0
  %.17 = load %"Array<Statement>_vtable_ty.580348"*, %"Array<Statement>_vtable_ty.580348"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Statement>_vtable_ty.580348", %"Array<Statement>_vtable_ty.580348"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Statement>.580347"*)*, void (%"Array<Statement>.580347"*)** %.18, align 8
  call void %.19(%"Array<Statement>.580347"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 1
  %.31 = load %Statement.580285**, %Statement.580285*** %.30, align 8
  %.33 = getelementptr inbounds %Statement.580285*, %Statement.580285** %.31, i64 %.24
  store %Statement.580285* %.2, %Statement.580285** %.33, align 8
  ret void
}

define void @"Array<Statement>___setitem__"(%"Array<Statement>.580347"* nocapture readonly %.1, i64 %.2, %Statement.580285* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 1
  %.30 = load %Statement.580285**, %Statement.580285*** %.29, align 8
  %.32 = getelementptr inbounds %Statement.580285*, %Statement.580285** %.30, i64 %.2
  store %Statement.580285* %.3, %Statement.580285** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Statement>_append"(%"Array<Statement>.580347"* %.1, %Statement.580285* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 0
  %.9 = load %"Array<Statement>_vtable_ty.580348"*, %"Array<Statement>_vtable_ty.580348"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Statement>_vtable_ty.580348", %"Array<Statement>_vtable_ty.580348"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Statement>.580347"*, %Statement.580285*)*, void (%"Array<Statement>.580347"*, %Statement.580285*)** %.10, align 8
  call void %.11(%"Array<Statement>.580347"* %.1, %Statement.580285* %.2)
  ret void
}

define %Statement.580285* @"Array<Statement>___getitem__"(%"Array<Statement>.580347"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 1
  %.28 = load %Statement.580285**, %Statement.580285*** %.27, align 8
  %.29 = getelementptr inbounds %Statement.580285*, %Statement.580285** %.28, i64 %.2
  %.30 = load %Statement.580285*, %Statement.580285** %.29, align 8
  ret %Statement.580285* %.30

.4.endif:                                         ; preds = %.4
  ret %Statement.580285* null
}

define i1 @"Array<Statement>___eq__"(%"Array<Statement>.580347"* %.1, %"Array<Statement>.580347"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Statement>_vtable_ty.580348"*, %"Array<Statement>_vtable_ty.580348"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Statement>_vtable_ty.580348", %"Array<Statement>_vtable_ty.580348"* %.28, i64 0, i32 5
  %.30 = load %Statement.580285* (%"Array<Statement>.580347"*, i64)*, %Statement.580285* (%"Array<Statement>.580347"*, i64)** %.29, align 8
  %.31 = call %Statement.580285* %.30(%"Array<Statement>.580347"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Statement>_vtable_ty.580348"*, %"Array<Statement>_vtable_ty.580348"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Statement>_vtable_ty.580348", %"Array<Statement>_vtable_ty.580348"* %.35, i64 0, i32 5
  %.37 = load %Statement.580285* (%"Array<Statement>.580347"*, i64)*, %Statement.580285* (%"Array<Statement>.580347"*, i64)** %.36, align 8
  %.38 = call %Statement.580285* %.37(%"Array<Statement>.580347"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Statement.580285* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Statement.580285* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Statement>___in__"(%"Array<Statement>.580347"* %.1, %Statement.580285* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Statement.580285* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Statement>_vtable_ty.580348"*, %"Array<Statement>_vtable_ty.580348"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Statement>_vtable_ty.580348", %"Array<Statement>_vtable_ty.580348"* %.19, i64 0, i32 5
  %.21 = load %Statement.580285* (%"Array<Statement>.580347"*, i64)*, %Statement.580285* (%"Array<Statement>.580347"*, i64)** %.20, align 8
  %.22 = call %Statement.580285* %.21(%"Array<Statement>.580347"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Statement.580285* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Statement>_find"(%"Array<Statement>.580347"* nocapture readonly %.1, %Statement.580285* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 1
  %.19 = load %Statement.580285**, %Statement.580285*** %.18, align 8
  %0 = ptrtoint %Statement.580285* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Statement.580285*, %Statement.580285** %.19, i64 %storemerge5
  %1 = bitcast %Statement.580285** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Statement>_join"(%"Array<Statement>.580347"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.186, i64 0, i64 0), i64 10)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.186, i64 0, i64 0), i64 10)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Statement>___as_string__"(%"Array<Statement>.580347"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.1, i64 0, i32 0
  %.7 = load %"Array<Statement>_vtable_ty.580348"*, %"Array<Statement>_vtable_ty.580348"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Statement>_vtable_ty.580348", %"Array<Statement>_vtable_ty.580348"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Statement>.580347"*, %string.580129*)*, %string.580129* (%"Array<Statement>.580347"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Statement>.580347"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @Block_constructor(%Block.580345* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<Statement>_vtable_ty.580348"**
  store %"Array<Statement>_vtable_ty.580348"* @"Array<Statement>_vtable_data", %"Array<Statement>_vtable_ty.580348"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Block.580345, %Block.580345* %.1, i64 0, i32 1
  %3 = bitcast %"Array<Statement>.580347"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.22 = getelementptr inbounds %Block.580345, %Block.580345* %.1, i64 0, i32 2
  store i1 false, i1* %.22, align 1
  %.25 = getelementptr inbounds %Block.580345, %Block.580345* %.1, i64 0, i32 3
  store i1 false, i1* %.25, align 1
  %.28 = getelementptr inbounds %Block.580345, %Block.580345* %.1, i64 0, i32 4
  store i1 false, i1* %.28, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IfStatement_constructor(%IfStatement.580349* nocapture %.1, %Expression.580293* %.2, %Block.580345* %.3, %Block.580345* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %IfStatement.580349* %.1 to %Statement.580285*
  call void @Statement_constructor(%Statement.580285* %.12, i64 0)
  %.16 = getelementptr inbounds %IfStatement.580349, %IfStatement.580349* %.1, i64 0, i32 2
  store %Expression.580293* %.2, %Expression.580293** %.16, align 8
  %.20 = getelementptr inbounds %IfStatement.580349, %IfStatement.580349* %.1, i64 0, i32 3
  store %Block.580345* %.3, %Block.580345** %.20, align 8
  %.24 = getelementptr inbounds %IfStatement.580349, %IfStatement.580349* %.1, i64 0, i32 4
  store %Block.580345* %.4, %Block.580345** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @VarDeclaration_constructor(%VarDeclaration.580351* nocapture %.1, %string.580129* %.2, %VarId.580331* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %VarDeclaration.580351* %.1 to %Statement.580285*
  call void @Statement_constructor(%Statement.580285* %.10, i64 1)
  %.14 = getelementptr inbounds %VarDeclaration.580351, %VarDeclaration.580351* %.1, i64 0, i32 3
  store %VarId.580331* %.3, %VarId.580331** %.14, align 8
  %.18 = getelementptr inbounds %VarDeclaration.580351, %VarDeclaration.580351* %.1, i64 0, i32 2
  store %string.580129* %.2, %string.580129** %.18, align 8
  %.21 = getelementptr inbounds %VarDeclaration.580351, %VarDeclaration.580351* %.1, i64 0, i32 4
  store i1 false, i1* %.21, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ConstDeclaration_constructor(%ConstDeclaration.580353* nocapture %.1, %string.580129* %.2, %ConstId.580337* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %ConstDeclaration.580353* %.1 to %Statement.580285*
  call void @Statement_constructor(%Statement.580285* %.10, i64 2)
  %.14 = getelementptr inbounds %ConstDeclaration.580353, %ConstDeclaration.580353* %.1, i64 0, i32 3
  store %ConstId.580337* %.3, %ConstId.580337** %.14, align 8
  %.18 = getelementptr inbounds %ConstDeclaration.580353, %ConstDeclaration.580353* %.1, i64 0, i32 2
  store %string.580129* %.2, %string.580129** %.18, align 8
  %.21 = getelementptr inbounds %ConstDeclaration.580353, %ConstDeclaration.580353* %.1, i64 0, i32 4
  store i1 false, i1* %.21, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ForStatement_constructor(%ForStatement.580355* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = bitcast %ForStatement.580355* %.1 to %Statement.580285*
  call void @Statement_constructor(%Statement.580285* %.6, i64 3)
  %.9 = getelementptr inbounds %ForStatement.580355, %ForStatement.580355* %.1, i64 0, i32 2
  %0 = bitcast %Statement.580285** %.9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @WhileStatement_constructor(%WhileStatement.580357* nocapture %.1, %Expression.580293* %.2, %Block.580345* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %WhileStatement.580357* %.1 to %Statement.580285*
  call void @Statement_constructor(%Statement.580285* %.10, i64 4)
  %.14 = getelementptr inbounds %WhileStatement.580357, %WhileStatement.580357* %.1, i64 0, i32 2
  store %Expression.580293* %.2, %Expression.580293** %.14, align 8
  %.18 = getelementptr inbounds %WhileStatement.580357, %WhileStatement.580357* %.1, i64 0, i32 3
  store %Block.580345* %.3, %Block.580345** %.18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ReturnStatement_constructor(%ReturnStatement.580359* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = bitcast %ReturnStatement.580359* %.1 to %Statement.580285*
  call void @Statement_constructor(%Statement.580285* %.6, i64 7)
  %.9 = getelementptr inbounds %ReturnStatement.580359, %ReturnStatement.580359* %.1, i64 0, i32 2
  store %Expression.580293* null, %Expression.580293** %.9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_numeric(%Type.580273* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.7.off = add i64 %.7, -1
  %0 = icmp ult i64 %.7.off, 11
  ret i1 %0
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_float(%Type.580273* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %0 = and i64 %.7, -4
  %1 = icmp eq i64 %0, 8
  ret i1 %1
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_int(%Type.580273* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.7.off = add i64 %.7, -1
  %0 = icmp ult i64 %.7.off, 7
  ret i1 %0
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_bool(%Type.580273* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 0
  ret i1 %.8
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_i8_ptr(%Type.580273* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 15
  br i1 %.8, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.12 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 1
  %0 = bitcast %Type.580273* %.12 to %Type.580273**
  %.13 = load %Type.580273*, %Type.580273** %0, align 8
  %.14 = getelementptr inbounds %Type.580273, %Type.580273* %.13, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp eq i64 %.15, 2
  ret i1 %.16

.3.endif:                                         ; preds = %.3
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_object(%Type.580273* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 13
  ret i1 %.8
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_pointer(%Type.580273* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 15
  ret i1 %.8
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_null(%Expression.580293* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Expression.580293, %Expression.580293* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 5
  ret i1 %.8
}

; Function Attrs: nofree nounwind
define noalias %Expression.580293* @cast_exp_to_type(%Expression.580293* %.1, %Type.580273* %.2) local_unnamed_addr #3 {
.4:
  %.9 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.10 = bitcast i8* %.9 to %TypeCastExpression.580323*
  %.11 = bitcast i8* %.9 to %TypeCastExpression_vtable_ty.580324**
  store %TypeCastExpression_vtable_ty.580324* @TypeCastExpression_vtable_data, %TypeCastExpression_vtable_ty.580324** %.11, align 8
  call void @TypeCastExpression_constructor(%TypeCastExpression.580323* %.10, %Expression.580293* %.1, %Type.580273* %.2)
  %.14 = bitcast i8* %.9 to %Expression.580293*
  ret %Expression.580293* %.14
}

; Function Attrs: norecurse nounwind readonly
define %Type.580273* @max_type(%Type.580273* readonly %.1, %Type.580273* readonly %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp sgt i64 %.9, %.12
  %.1..2 = select i1 %.13, %Type.580273* %.1, %Type.580273* %.2
  ret %Type.580273* %.1..2
}

; Function Attrs: nofree nounwind
define void @check_cast_lower_bits(%Expression.580293** nocapture %.1, %Expression.580293** nocapture %.2) local_unnamed_addr #3 {
.4:
  %.9 = load %Expression.580293*, %Expression.580293** %.1, align 8
  %.10 = getelementptr inbounds %Expression.580293, %Expression.580293* %.9, i64 0, i32 4
  %.11 = load %Type.580273*, %Type.580273** %.10, align 8
  %.15 = load %Expression.580293*, %Expression.580293** %.2, align 8
  %.16 = getelementptr inbounds %Expression.580293, %Expression.580293* %.15, i64 0, i32 4
  %.17 = load %Type.580273*, %Type.580273** %.16, align 8
  %.20 = getelementptr inbounds %Type.580273, %Type.580273* %.11, i64 0, i32 1
  %.21 = load i64, i64* %.20, align 8
  %.23 = getelementptr inbounds %Type.580273, %Type.580273* %.17, i64 0, i32 1
  %.24 = load i64, i64* %.23, align 8
  %.25.not = icmp eq i64 %.21, %.24
  br i1 %.25.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.28 = call i1 @is_float(%Type.580273* %.11)
  %.30 = call i1 @is_int(%Type.580273* %.17)
  %.31 = and i1 %.28, %.30
  br i1 %.31, label %.4.if.if, label %.4.if.else

.4.endif.sink.split:                              ; preds = %.4.if.if, %.4.if.else.else, %.4.if.else.if
  %.1.sink = phi %Expression.580293** [ %.1, %.4.if.else.if ], [ %.2, %.4.if.else.else ], [ %.2, %.4.if.if ]
  %.53.sink = phi %Expression.580293* [ %.53, %.4.if.else.if ], [ %.74, %.4.if.else.else ], [ %.38, %.4.if.if ]
  store %Expression.580293* %.53.sink, %Expression.580293** %.1.sink, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4.endif.sink.split, %.4
  ret void

.4.if.if:                                         ; preds = %.4.if
  %.38 = call %Expression.580293* @cast_exp_to_type(%Expression.580293* %.15, %Type.580273* %.11)
  br label %.4.endif.sink.split

.4.if.else:                                       ; preds = %.4.if
  %.43 = call i1 @is_int(%Type.580273* %.11)
  %.45 = call i1 @is_float(%Type.580273* %.17)
  %.46 = and i1 %.43, %.45
  br i1 %.46, label %.4.if.else.if, label %.4.if.else.else

.4.if.else.if:                                    ; preds = %.4.if.else
  %.53 = call %Expression.580293* @cast_exp_to_type(%Expression.580293* %.9, %Type.580273* %.17)
  br label %.4.endif.sink.split

.4.if.else.else:                                  ; preds = %.4.if.else
  %.59 = call %Type.580273* @max_type(%Type.580273* %.11, %Type.580273* %.17)
  %.66 = call %Expression.580293* @cast_exp_to_type(%Expression.580293* %.9, %Type.580273* %.59)
  store %Expression.580293* %.66, %Expression.580293** %.1, align 8
  %.72 = load %Expression.580293*, %Expression.580293** %.2, align 8
  %.74 = call %Expression.580293* @cast_exp_to_type(%Expression.580293* %.72, %Type.580273* %.59)
  br label %.4.endif.sink.split
}

; Function Attrs: norecurse nounwind readonly
define i1 @check_is_var(%Expression.580293* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Expression.580293, %Expression.580293* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  switch i64 %.7, label %.3.endif.endif [
    i64 7, label %.3.if
    i64 12, label %.3.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.12 = getelementptr inbounds %Expression.580293, %Expression.580293* %.1, i64 1
  %0 = bitcast %Expression.580293* %.12 to %VarId.580331**
  %.13 = load %VarId.580331*, %VarId.580331** %0, align 8
  %.14 = getelementptr inbounds %VarId.580331, %VarId.580331* %.13, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp eq i64 %.15, 1
  ret i1 %.16

.3.endif.if:                                      ; preds = %.3
  %.25 = getelementptr inbounds %Expression.580293, %Expression.580293* %.1, i64 1, i32 1
  %1 = bitcast i64* %.25 to %PropId.580339**
  %.2612 = load %PropId.580339*, %PropId.580339** %1, align 8
  %.29 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2612, i64 0, i32 1
  %.30 = load i64, i64* %.29, align 8
  %.31 = icmp eq i64 %.30, 1
  ret i1 %.31

.3.endif.endif:                                   ; preds = %.3
  %.36 = icmp eq i64 %.7, 13
  ret i1 %.36
}

define noalias %string.580129* @dump_type(%Type.580273* nocapture readonly %.1, i1 %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endi...endif.endif.endif.endif [
    i64 0, label %.4.if
    i64 1, label %.4.endif.if
    i64 2, label %.4.endif.endif.if
    i64 3, label %.4.endif.endif.endif.if
    i64 4, label %.4.endif.endif.endif.endif.if
    i64 5, label %.4.endif.endif.endif.endif.endif.if
    i64 6, label %.4.endif.endif.endif.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.4.endif.endif.endif.endi...if
    i64 10, label %.4.endif.endif.endif.endi...endif.if
    i64 11, label %.4.endif.endif.endif.endi...endif.endif.if
    i64 12, label %.4.endif.endif.endif.endi...endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %.12 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %string.580129*
  %.13.repack = bitcast i8* %.12 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.13.repack, align 8
  %.13.repack43 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.13.repack43 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.29, i64 0, i64 0), i8** %0, align 8
  %.13.repack44 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.13.repack44 to i64*
  store i64 4, i64* %1, align 8
  %.13.repack45 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.13.repack45 to i64*
  store i64 4, i64* %2, align 8
  ret %string.580129* %.13

.4.endif.if:                                      ; preds = %.4
  %.21 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %string.580129*
  %.22.repack = bitcast i8* %.21 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.22.repack, align 8
  %.22.repack40 = getelementptr inbounds i8, i8* %.21, i64 8
  %3 = bitcast i8* %.22.repack40 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.30, i64 0, i64 0), i8** %3, align 8
  %.22.repack41 = getelementptr inbounds i8, i8* %.21, i64 16
  %4 = bitcast i8* %.22.repack41 to i64*
  store i64 2, i64* %4, align 8
  %.22.repack42 = getelementptr inbounds i8, i8* %.21, i64 24
  %5 = bitcast i8* %.22.repack42 to i64*
  store i64 2, i64* %5, align 8
  ret %string.580129* %.22

.4.endif.endif.if:                                ; preds = %.4
  %.30 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.31 = bitcast i8* %.30 to %string.580129*
  %.31.repack = bitcast i8* %.30 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.31.repack, align 8
  %.31.repack37 = getelementptr inbounds i8, i8* %.30, i64 8
  %6 = bitcast i8* %.31.repack37 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.31, i64 0, i64 0), i8** %6, align 8
  %.31.repack38 = getelementptr inbounds i8, i8* %.30, i64 16
  %7 = bitcast i8* %.31.repack38 to i64*
  store i64 2, i64* %7, align 8
  %.31.repack39 = getelementptr inbounds i8, i8* %.30, i64 24
  %8 = bitcast i8* %.31.repack39 to i64*
  store i64 2, i64* %8, align 8
  ret %string.580129* %.31

.4.endif.endif.endif.if:                          ; preds = %.4
  %.39 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.580129*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40.repack, align 8
  %.40.repack34 = getelementptr inbounds i8, i8* %.39, i64 8
  %9 = bitcast i8* %.40.repack34 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.32, i64 0, i64 0), i8** %9, align 8
  %.40.repack35 = getelementptr inbounds i8, i8* %.39, i64 16
  %10 = bitcast i8* %.40.repack35 to i64*
  store i64 3, i64* %10, align 8
  %.40.repack36 = getelementptr inbounds i8, i8* %.39, i64 24
  %11 = bitcast i8* %.40.repack36 to i64*
  store i64 3, i64* %11, align 8
  ret %string.580129* %.40

.4.endif.endif.endif.endif.if:                    ; preds = %.4
  %.48 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %string.580129*
  %.49.repack = bitcast i8* %.48 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.49.repack, align 8
  %.49.repack31 = getelementptr inbounds i8, i8* %.48, i64 8
  %12 = bitcast i8* %.49.repack31 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.33, i64 0, i64 0), i8** %12, align 8
  %.49.repack32 = getelementptr inbounds i8, i8* %.48, i64 16
  %13 = bitcast i8* %.49.repack32 to i64*
  store i64 3, i64* %13, align 8
  %.49.repack33 = getelementptr inbounds i8, i8* %.48, i64 24
  %14 = bitcast i8* %.49.repack33 to i64*
  store i64 3, i64* %14, align 8
  ret %string.580129* %.49

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.580129*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.58.repack, align 8
  %.58.repack28 = getelementptr inbounds i8, i8* %.57, i64 8
  %15 = bitcast i8* %.58.repack28 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.34, i64 0, i64 0), i8** %15, align 8
  %.58.repack29 = getelementptr inbounds i8, i8* %.57, i64 16
  %16 = bitcast i8* %.58.repack29 to i64*
  store i64 3, i64* %16, align 8
  %.58.repack30 = getelementptr inbounds i8, i8* %.57, i64 24
  %17 = bitcast i8* %.58.repack30 to i64*
  store i64 3, i64* %17, align 8
  ret %string.580129* %.58

.4.endif.endif.endif.endif.endif.endif.if:        ; preds = %.4
  %.66 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.67 = bitcast i8* %.66 to %string.580129*
  %.67.repack = bitcast i8* %.66 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.67.repack, align 8
  %.67.repack25 = getelementptr inbounds i8, i8* %.66, i64 8
  %18 = bitcast i8* %.67.repack25 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.35, i64 0, i64 0), i8** %18, align 8
  %.67.repack26 = getelementptr inbounds i8, i8* %.66, i64 16
  %19 = bitcast i8* %.67.repack26 to i64*
  store i64 4, i64* %19, align 8
  %.67.repack27 = getelementptr inbounds i8, i8* %.66, i64 24
  %20 = bitcast i8* %.67.repack27 to i64*
  store i64 4, i64* %20, align 8
  ret %string.580129* %.67

.4.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.4
  br i1 %.2, label %true_block, label %false_block

true_block:                                       ; preds = %.4.endif.endif.endif.endif.endif.endif.endif.if
  %.78 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.187, i64 0, i64 0), i64 64)
  %.80 = call i8* @malloc(i64 %.78)
  %.81 = call i64 (i8*, i8*, ...) @sprintf(i8* %.80, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.187, i64 0, i64 0), i64 64)
  %.82 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end

false_block:                                      ; preds = %.4.endif.endif.endif.endif.endif.endif.endif.if
  %.93 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.93.sink53 = phi i8* [ %.93, %false_block ], [ %.82, %true_block ]
  %.sink50 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @str.36, i64 0, i64 0), %false_block ], [ %.80, %true_block ]
  %.sink47 = phi i64 [ 3, %false_block ], [ %.78, %true_block ]
  %.94.repack = bitcast i8* %.93.sink53 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.94.repack, align 8
  %.94.repack22 = getelementptr inbounds i8, i8* %.93.sink53, i64 8
  %21 = bitcast i8* %.94.repack22 to i8**
  store i8* %.sink50, i8** %21, align 8
  %.94.repack23 = getelementptr inbounds i8, i8* %.93.sink53, i64 16
  %22 = bitcast i8* %.94.repack23 to i64*
  store i64 %.sink47, i64* %22, align 8
  %.94.repack24 = getelementptr inbounds i8, i8* %.93.sink53, i64 24
  %23 = bitcast i8* %.94.repack24 to i64*
  store i64 %.sink47, i64* %23, align 8
  %.97 = bitcast i8* %.93.sink53 to %string.580129*
  ret %string.580129* %.97

.4.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.4
  %.104 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.105 = bitcast i8* %.104 to %string.580129*
  %.105.repack = bitcast i8* %.104 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.105.repack, align 8
  %.105.repack19 = getelementptr inbounds i8, i8* %.104, i64 8
  %24 = bitcast i8* %.105.repack19 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.37, i64 0, i64 0), i8** %24, align 8
  %.105.repack20 = getelementptr inbounds i8, i8* %.104, i64 16
  %25 = bitcast i8* %.105.repack20 to i64*
  store i64 3, i64* %25, align 8
  %.105.repack21 = getelementptr inbounds i8, i8* %.104, i64 24
  %26 = bitcast i8* %.105.repack21 to i64*
  store i64 3, i64* %26, align 8
  ret %string.580129* %.105

.4.endif.endif.endif.endi...if:                   ; preds = %.4
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.580129*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.114.repack, align 8
  %.114.repack16 = getelementptr inbounds i8, i8* %.113, i64 8
  %27 = bitcast i8* %.114.repack16 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.38, i64 0, i64 0), i8** %27, align 8
  %.114.repack17 = getelementptr inbounds i8, i8* %.113, i64 16
  %28 = bitcast i8* %.114.repack17 to i64*
  store i64 3, i64* %28, align 8
  %.114.repack18 = getelementptr inbounds i8, i8* %.113, i64 24
  %29 = bitcast i8* %.114.repack18 to i64*
  store i64 3, i64* %29, align 8
  ret %string.580129* %.114

.4.endif.endif.endif.endi...endif.if:             ; preds = %.4
  %.122 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.123 = bitcast i8* %.122 to %string.580129*
  %.123.repack = bitcast i8* %.122 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.123.repack, align 8
  %.123.repack13 = getelementptr inbounds i8, i8* %.122, i64 8
  %30 = bitcast i8* %.123.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.39, i64 0, i64 0), i8** %30, align 8
  %.123.repack14 = getelementptr inbounds i8, i8* %.122, i64 16
  %31 = bitcast i8* %.123.repack14 to i64*
  store i64 3, i64* %31, align 8
  %.123.repack15 = getelementptr inbounds i8, i8* %.122, i64 24
  %32 = bitcast i8* %.123.repack15 to i64*
  store i64 3, i64* %32, align 8
  ret %string.580129* %.123

.4.endif.endif.endif.endi...endif.endif.if:       ; preds = %.4
  br i1 %.2, label %true_block.1, label %false_block.1

true_block.1:                                     ; preds = %.4.endif.endif.endif.endi...endif.endif.if
  %.134 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.188, i64 0, i64 0), i64 64)
  %.136 = call i8* @malloc(i64 %.134)
  %.137 = call i64 (i8*, i8*, ...) @sprintf(i8* %.136, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.188, i64 0, i64 0), i64 64)
  %.138 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end.1

false_block.1:                                    ; preds = %.4.endif.endif.endif.endi...endif.endif.if
  %.149 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end.1

end.1:                                            ; preds = %false_block.1, %true_block.1
  %.149.sink62 = phi i8* [ %.149, %false_block.1 ], [ %.138, %true_block.1 ]
  %.sink59 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.40, i64 0, i64 0), %false_block.1 ], [ %.136, %true_block.1 ]
  %.sink56 = phi i64 [ 5, %false_block.1 ], [ %.134, %true_block.1 ]
  %.150.repack = bitcast i8* %.149.sink62 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.150.repack, align 8
  %.150.repack10 = getelementptr inbounds i8, i8* %.149.sink62, i64 8
  %33 = bitcast i8* %.150.repack10 to i8**
  store i8* %.sink59, i8** %33, align 8
  %.150.repack11 = getelementptr inbounds i8, i8* %.149.sink62, i64 16
  %34 = bitcast i8* %.150.repack11 to i64*
  store i64 %.sink56, i64* %34, align 8
  %.150.repack12 = getelementptr inbounds i8, i8* %.149.sink62, i64 24
  %35 = bitcast i8* %.150.repack12 to i64*
  store i64 %.sink56, i64* %35, align 8
  %.153 = bitcast i8* %.149.sink62 to %string.580129*
  ret %string.580129* %.153

.4.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.4
  %.160 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.580129*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.161.repack, align 8
  %.161.repack7 = getelementptr inbounds i8, i8* %.160, i64 8
  %36 = bitcast i8* %.161.repack7 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.41, i64 0, i64 0), i8** %36, align 8
  %.161.repack8 = getelementptr inbounds i8, i8* %.160, i64 16
  %37 = bitcast i8* %.161.repack8 to i64*
  store i64 4, i64* %37, align 8
  %.161.repack9 = getelementptr inbounds i8, i8* %.160, i64 24
  %38 = bitcast i8* %.161.repack9 to i64*
  store i64 4, i64* %38, align 8
  ret %string.580129* %.161

.4.endif.endif.endif.endi...endif.endif.endif.endif: ; preds = %.4
  %.167 = icmp eq i64 %.9, 18
  %.169 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.580129*
  %.170.repack = bitcast i8* %.169 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.170.repack, align 8
  %.170.repack4 = getelementptr inbounds i8, i8* %.169, i64 8
  %39 = bitcast i8* %.170.repack4 to i8**
  br i1 %.167, label %.4.endif.endif.endif.endi...if.1, label %.4.endif.endif.endif.endi...endif.1

.4.endif.endif.endif.endi...if.1:                 ; preds = %.4.endif.endif.endif.endi...endif.endif.endif.endif
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.189, i64 0, i64 0), i8** %39, align 8
  %.170.repack5 = getelementptr inbounds i8, i8* %.169, i64 16
  %40 = bitcast i8* %.170.repack5 to i64*
  store i64 6, i64* %40, align 8
  %.170.repack6 = getelementptr inbounds i8, i8* %.169, i64 24
  %41 = bitcast i8* %.170.repack6 to i64*
  store i64 6, i64* %41, align 8
  ret %string.580129* %.170

.4.endif.endif.endif.endi...endif.1:              ; preds = %.4.endif.endif.endif.endi...endif.endif.endif.endif
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.190, i64 0, i64 0), i8** %39, align 8
  %.174.repack2 = getelementptr inbounds i8, i8* %.169, i64 16
  %42 = bitcast i8* %.174.repack2 to i64*
  store i64 7, i64* %42, align 8
  %.174.repack3 = getelementptr inbounds i8, i8* %.169, i64 24
  %43 = bitcast i8* %.174.repack3 to i64*
  store i64 7, i64* %43, align 8
  ret %string.580129* %.170
}

; Function Attrs: nofree nounwind
define noalias %string.580129* @dump_bin_op(i64 %.1) local_unnamed_addr #3 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endi...endif.2.endif [
    i64 0, label %.3.if
    i64 1, label %.3.endif.if
    i64 2, label %.3.endif.endif.if
    i64 3, label %.3.endif.endif.endif.if
    i64 4, label %.3.endif.endif.endif.endif.if
    i64 5, label %.3.endif.endif.endif.endif.endif.if
    i64 6, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 7, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.3.endif.endif.endif.endi...if
    i64 10, label %.3.endif.endif.endif.endi...endif.if
    i64 11, label %.3.endif.endif.endif.endi...endif.endif.if
    i64 12, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i64 13, label %.3.endif.endif.endif.endi...if.1
    i64 14, label %.3.endif.endif.endif.endi...endif.1.if
    i64 15, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i64 16, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i64 17, label %.3.endif.endif.endif.endi...if.2
    i64 18, label %.3.endif.endif.endif.endi...endif.2.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.580129*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9.repack, align 8
  %.9.repack58 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack58 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.191, i64 0, i64 0), i8** %0, align 8
  %.9.repack59 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack59 to i64*
  store i64 1, i64* %1, align 8
  %.9.repack60 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack60 to i64*
  store i64 1, i64* %2, align 8
  ret %string.580129* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.580129*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.16.repack, align 8
  %.16.repack55 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack55 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.192, i64 0, i64 0), i8** %3, align 8
  %.16.repack56 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack56 to i64*
  store i64 1, i64* %4, align 8
  %.16.repack57 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack57 to i64*
  store i64 1, i64* %5, align 8
  ret %string.580129* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.580129*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.23.repack, align 8
  %.23.repack52 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack52 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.193, i64 0, i64 0), i8** %6, align 8
  %.23.repack53 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack53 to i64*
  store i64 1, i64* %7, align 8
  %.23.repack54 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack54 to i64*
  store i64 1, i64* %8, align 8
  ret %string.580129* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.580129*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.30.repack, align 8
  %.30.repack49 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack49 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.194, i64 0, i64 0), i8** %9, align 8
  %.30.repack50 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack50 to i64*
  store i64 1, i64* %10, align 8
  %.30.repack51 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack51 to i64*
  store i64 1, i64* %11, align 8
  ret %string.580129* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.580129*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.37.repack, align 8
  %.37.repack46 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack46 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.195, i64 0, i64 0), i8** %12, align 8
  %.37.repack47 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack47 to i64*
  store i64 1, i64* %13, align 8
  %.37.repack48 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack48 to i64*
  store i64 1, i64* %14, align 8
  ret %string.580129* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.580129*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.44.repack, align 8
  %.44.repack43 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack43 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.7, i64 0, i64 0), i8** %15, align 8
  %.44.repack44 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack44 to i64*
  store i64 1, i64* %16, align 8
  %.44.repack45 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack45 to i64*
  store i64 1, i64* %17, align 8
  ret %string.580129* %.44

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.580129*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.51.repack, align 8
  %.51.repack40 = getelementptr inbounds i8, i8* %.50, i64 8
  %18 = bitcast i8* %.51.repack40 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.196, i64 0, i64 0), i8** %18, align 8
  %.51.repack41 = getelementptr inbounds i8, i8* %.50, i64 16
  %19 = bitcast i8* %.51.repack41 to i64*
  store i64 1, i64* %19, align 8
  %.51.repack42 = getelementptr inbounds i8, i8* %.50, i64 24
  %20 = bitcast i8* %.51.repack42 to i64*
  store i64 1, i64* %20, align 8
  ret %string.580129* %.51

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.580129*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.58.repack, align 8
  %.58.repack37 = getelementptr inbounds i8, i8* %.57, i64 8
  %21 = bitcast i8* %.58.repack37 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.197, i64 0, i64 0), i8** %21, align 8
  %.58.repack38 = getelementptr inbounds i8, i8* %.57, i64 16
  %22 = bitcast i8* %.58.repack38 to i64*
  store i64 2, i64* %22, align 8
  %.58.repack39 = getelementptr inbounds i8, i8* %.57, i64 24
  %23 = bitcast i8* %.58.repack39 to i64*
  store i64 2, i64* %23, align 8
  ret %string.580129* %.58

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  %.64 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %string.580129*
  %.65.repack = bitcast i8* %.64 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.65.repack, align 8
  %.65.repack34 = getelementptr inbounds i8, i8* %.64, i64 8
  %24 = bitcast i8* %.65.repack34 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.198, i64 0, i64 0), i8** %24, align 8
  %.65.repack35 = getelementptr inbounds i8, i8* %.64, i64 16
  %25 = bitcast i8* %.65.repack35 to i64*
  store i64 1, i64* %25, align 8
  %.65.repack36 = getelementptr inbounds i8, i8* %.64, i64 24
  %26 = bitcast i8* %.65.repack36 to i64*
  store i64 1, i64* %26, align 8
  ret %string.580129* %.65

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  %.71 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %string.580129*
  %.72.repack = bitcast i8* %.71 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.72.repack, align 8
  %.72.repack31 = getelementptr inbounds i8, i8* %.71, i64 8
  %27 = bitcast i8* %.72.repack31 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.199, i64 0, i64 0), i8** %27, align 8
  %.72.repack32 = getelementptr inbounds i8, i8* %.71, i64 16
  %28 = bitcast i8* %.72.repack32 to i64*
  store i64 2, i64* %28, align 8
  %.72.repack33 = getelementptr inbounds i8, i8* %.71, i64 24
  %29 = bitcast i8* %.72.repack33 to i64*
  store i64 2, i64* %29, align 8
  ret %string.580129* %.72

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  %.78 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.580129*
  %.79.repack = bitcast i8* %.78 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.79.repack, align 8
  %.79.repack28 = getelementptr inbounds i8, i8* %.78, i64 8
  %30 = bitcast i8* %.79.repack28 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.200, i64 0, i64 0), i8** %30, align 8
  %.79.repack29 = getelementptr inbounds i8, i8* %.78, i64 16
  %31 = bitcast i8* %.79.repack29 to i64*
  store i64 2, i64* %31, align 8
  %.79.repack30 = getelementptr inbounds i8, i8* %.78, i64 24
  %32 = bitcast i8* %.79.repack30 to i64*
  store i64 2, i64* %32, align 8
  ret %string.580129* %.79

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3
  %.85 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.580129*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.86.repack, align 8
  %.86.repack25 = getelementptr inbounds i8, i8* %.85, i64 8
  %33 = bitcast i8* %.86.repack25 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.201, i64 0, i64 0), i8** %33, align 8
  %.86.repack26 = getelementptr inbounds i8, i8* %.85, i64 16
  %34 = bitcast i8* %.86.repack26 to i64*
  store i64 1, i64* %34, align 8
  %.86.repack27 = getelementptr inbounds i8, i8* %.85, i64 24
  %35 = bitcast i8* %.86.repack27 to i64*
  store i64 1, i64* %35, align 8
  ret %string.580129* %.86

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3
  %.92 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.580129*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.93.repack, align 8
  %.93.repack22 = getelementptr inbounds i8, i8* %.92, i64 8
  %36 = bitcast i8* %.93.repack22 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.202, i64 0, i64 0), i8** %36, align 8
  %.93.repack23 = getelementptr inbounds i8, i8* %.92, i64 16
  %37 = bitcast i8* %.93.repack23 to i64*
  store i64 2, i64* %37, align 8
  %.93.repack24 = getelementptr inbounds i8, i8* %.92, i64 24
  %38 = bitcast i8* %.93.repack24 to i64*
  store i64 2, i64* %38, align 8
  ret %string.580129* %.93

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3
  %.99 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.580129*
  %.100.repack = bitcast i8* %.99 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.100.repack, align 8
  %.100.repack19 = getelementptr inbounds i8, i8* %.99, i64 8
  %39 = bitcast i8* %.100.repack19 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.203, i64 0, i64 0), i8** %39, align 8
  %.100.repack20 = getelementptr inbounds i8, i8* %.99, i64 16
  %40 = bitcast i8* %.100.repack20 to i64*
  store i64 2, i64* %40, align 8
  %.100.repack21 = getelementptr inbounds i8, i8* %.99, i64 24
  %41 = bitcast i8* %.100.repack21 to i64*
  store i64 2, i64* %41, align 8
  ret %string.580129* %.100

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3
  %.106 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.580129*
  %.107.repack = bitcast i8* %.106 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.107.repack, align 8
  %.107.repack16 = getelementptr inbounds i8, i8* %.106, i64 8
  %42 = bitcast i8* %.107.repack16 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.23, i64 0, i64 0), i8** %42, align 8
  %.107.repack17 = getelementptr inbounds i8, i8* %.106, i64 16
  %43 = bitcast i8* %.107.repack17 to i64*
  store i64 2, i64* %43, align 8
  %.107.repack18 = getelementptr inbounds i8, i8* %.106, i64 24
  %44 = bitcast i8* %.107.repack18 to i64*
  store i64 2, i64* %44, align 8
  ret %string.580129* %.107

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.580129*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.114.repack, align 8
  %.114.repack13 = getelementptr inbounds i8, i8* %.113, i64 8
  %45 = bitcast i8* %.114.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.22, i64 0, i64 0), i8** %45, align 8
  %.114.repack14 = getelementptr inbounds i8, i8* %.113, i64 16
  %46 = bitcast i8* %.114.repack14 to i64*
  store i64 3, i64* %46, align 8
  %.114.repack15 = getelementptr inbounds i8, i8* %.113, i64 24
  %47 = bitcast i8* %.114.repack15 to i64*
  store i64 3, i64* %47, align 8
  ret %string.580129* %.114

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3
  %.120 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.580129*
  %.121.repack = bitcast i8* %.120 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.121.repack, align 8
  %.121.repack10 = getelementptr inbounds i8, i8* %.120, i64 8
  %48 = bitcast i8* %.121.repack10 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.24, i64 0, i64 0), i8** %48, align 8
  %.121.repack11 = getelementptr inbounds i8, i8* %.120, i64 16
  %49 = bitcast i8* %.121.repack11 to i64*
  store i64 3, i64* %49, align 8
  %.121.repack12 = getelementptr inbounds i8, i8* %.120, i64 24
  %50 = bitcast i8* %.121.repack12 to i64*
  store i64 3, i64* %50, align 8
  ret %string.580129* %.121

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.580129*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.128.repack, align 8
  %.128.repack7 = getelementptr inbounds i8, i8* %.127, i64 8
  %51 = bitcast i8* %.128.repack7 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.52, i64 0, i64 0), i8** %51, align 8
  %.128.repack8 = getelementptr inbounds i8, i8* %.127, i64 16
  %52 = bitcast i8* %.128.repack8 to i64*
  store i64 2, i64* %52, align 8
  %.128.repack9 = getelementptr inbounds i8, i8* %.127, i64 24
  %53 = bitcast i8* %.128.repack9 to i64*
  store i64 2, i64* %53, align 8
  ret %string.580129* %.128

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3
  %.134 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %string.580129*
  %.135.repack = bitcast i8* %.134 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.135.repack, align 8
  %.135.repack4 = getelementptr inbounds i8, i8* %.134, i64 8
  %54 = bitcast i8* %.135.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.204, i64 0, i64 0), i8** %54, align 8
  %.135.repack5 = getelementptr inbounds i8, i8* %.134, i64 16
  %55 = bitcast i8* %.135.repack5 to i64*
  store i64 1, i64* %55, align 8
  %.135.repack6 = getelementptr inbounds i8, i8* %.134, i64 24
  %56 = bitcast i8* %.135.repack6 to i64*
  store i64 1, i64* %56, align 8
  ret %string.580129* %.135

.3.endif.endif.endif.endi...endif.2.endif:        ; preds = %.3
  %.138 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.138 to %string.580129*
  %.139.repack = bitcast i8* %.138 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.139.repack, align 8
  %.139.repack1 = getelementptr inbounds i8, i8* %.138, i64 8
  %57 = bitcast i8* %.139.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.205, i64 0, i64 0), i8** %57, align 8
  %.139.repack2 = getelementptr inbounds i8, i8* %.138, i64 16
  %58 = bitcast i8* %.139.repack2 to i64*
  store i64 2, i64* %58, align 8
  %.139.repack3 = getelementptr inbounds i8, i8* %.138, i64 24
  %59 = bitcast i8* %.139.repack3 to i64*
  store i64 2, i64* %59, align 8
  ret %string.580129* %.139
}

; Function Attrs: nofree nounwind
define noalias %string.580129* @dump_unary_op(i64 %.1) local_unnamed_addr #3 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endif.endif.endif [
    i64 0, label %.3.if
    i64 1, label %.3.endif.if
    i64 2, label %.3.endif.endif.if
    i64 3, label %.3.endif.endif.endif.if
    i64 4, label %.3.endif.endif.endif.endif.if
    i64 5, label %.3.endif.endif.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.580129*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9.repack, align 8
  %.9.repack19 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack19 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.206, i64 0, i64 0), i8** %0, align 8
  %.9.repack20 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack20 to i64*
  store i64 7, i64* %1, align 8
  %.9.repack21 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack21 to i64*
  store i64 7, i64* %2, align 8
  ret %string.580129* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.580129*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.16.repack, align 8
  %.16.repack16 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack16 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.207, i64 0, i64 0), i8** %3, align 8
  %.16.repack17 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack17 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack18 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack18 to i64*
  store i64 7, i64* %5, align 8
  ret %string.580129* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.580129*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.23.repack, align 8
  %.23.repack13 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack13 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.208, i64 0, i64 0), i8** %6, align 8
  %.23.repack14 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack14 to i64*
  store i64 8, i64* %7, align 8
  %.23.repack15 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack15 to i64*
  store i64 8, i64* %8, align 8
  ret %string.580129* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.580129*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.30.repack, align 8
  %.30.repack10 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack10 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.209, i64 0, i64 0), i8** %9, align 8
  %.30.repack11 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack11 to i64*
  store i64 8, i64* %10, align 8
  %.30.repack12 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack12 to i64*
  store i64 8, i64* %11, align 8
  ret %string.580129* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.580129*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.37.repack, align 8
  %.37.repack7 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack7 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.192, i64 0, i64 0), i8** %12, align 8
  %.37.repack8 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack8 to i64*
  store i64 1, i64* %13, align 8
  %.37.repack9 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack9 to i64*
  store i64 1, i64* %14, align 8
  ret %string.580129* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.580129*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.44.repack, align 8
  %.44.repack4 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.201, i64 0, i64 0), i8** %15, align 8
  %.44.repack5 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack5 to i64*
  store i64 1, i64* %16, align 8
  %.44.repack6 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack6 to i64*
  store i64 1, i64* %17, align 8
  ret %string.580129* %.44

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3
  %.47 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.48 = bitcast i8* %.47 to %string.580129*
  %.48.repack = bitcast i8* %.47 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.48.repack, align 8
  %.48.repack1 = getelementptr inbounds i8, i8* %.47, i64 8
  %18 = bitcast i8* %.48.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.210, i64 0, i64 0), i8** %18, align 8
  %.48.repack2 = getelementptr inbounds i8, i8* %.47, i64 16
  %19 = bitcast i8* %.48.repack2 to i64*
  store i64 1, i64* %19, align 8
  %.48.repack3 = getelementptr inbounds i8, i8* %.47, i64 24
  %20 = bitcast i8* %.48.repack3 to i64*
  store i64 1, i64* %20, align 8
  ret %string.580129* %.48
}

; Function Attrs: nofree nounwind
define noalias %string.580129* @dump_access(i64 %.1) local_unnamed_addr #3 {
.3:
  switch i64 %.1, label %.3.endif.endif [
    i64 0, label %.3.if
    i64 1, label %.3.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.580129*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9.repack, align 8
  %.9.repack7 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack7 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.49, i64 0, i64 0), i8** %0, align 8
  %.9.repack8 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack8 to i64*
  store i64 7, i64* %1, align 8
  %.9.repack9 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack9 to i64*
  store i64 7, i64* %2, align 8
  ret %string.580129* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.580129*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.16.repack, align 8
  %.16.repack4 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack4 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.50, i64 0, i64 0), i8** %3, align 8
  %.16.repack5 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack5 to i64*
  store i64 6, i64* %4, align 8
  %.16.repack6 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack6 to i64*
  store i64 6, i64* %5, align 8
  ret %string.580129* %.16

.3.endif.endif:                                   ; preds = %.3
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %string.580129*
  %.20.repack = bitcast i8* %.19 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.20.repack, align 8
  %.20.repack1 = getelementptr inbounds i8, i8* %.19, i64 8
  %6 = bitcast i8* %.20.repack1 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.51, i64 0, i64 0), i8** %6, align 8
  %.20.repack2 = getelementptr inbounds i8, i8* %.19, i64 16
  %7 = bitcast i8* %.20.repack2 to i64*
  store i64 9, i64* %7, align 8
  %.20.repack3 = getelementptr inbounds i8, i8* %.19, i64 24
  %8 = bitcast i8* %.20.repack3 to i64*
  store i64 9, i64* %8, align 8
  ret %string.580129* %.20
}

; Function Attrs: norecurse nounwind readnone
define i64 @lower_bin_assign_op(i64 %.1) local_unnamed_addr #6 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif [
    i64 19, label %.3.if
    i64 20, label %.3.endif.if
    i64 21, label %.3.endif.endif.if
    i64 22, label %.3.endif.endif.endif.if
    i64 23, label %.3.endif.endif.endif.endif.if
    i64 24, label %.3.endif.endif.endif.endif.endif.if
    i64 25, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 26, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 28, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.if, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 0, %.3 ], [ 1, %.3.endif.if ], [ 2, %.3.endif.endif.if ], [ 3, %.3.endif.endif.endif.if ], [ 4, %.3.endif.endif.endif.endif.if ], [ 5, %.3.endif.endif.endif.endif.endif.if ], [ 15, %.3.endif.endif.endif.endif.endif.endif.if ], [ 14, %.3.endif.endif.endif.endif.endif.endif.endif.if ], [ 12, %.3.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ 13, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3
  br label %.3.if
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ScopeId_constructor(%ScopeId.580361* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %ScopeId.580361, %ScopeId.580361* %.1, i64 0, i32 1
  store i64 %.2, i64* %.11, align 8
  %.15 = getelementptr inbounds %ScopeId.580361, %ScopeId.580361* %.1, i64 0, i32 2
  store i64 %.3, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.580370"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, VarId>_set"(%"Bucket<string, VarId>.580370"* nocapture %.1, %string.580129* %.2, %VarId.580331* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.1, i64 0, i32 2
  store %VarId.580331* %.3, %VarId.580331** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, VarId>_constructor"(%"Map<string, VarId>.580365"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.580370"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, VarId>.580370"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, VarId>_vtable_ty.580371"**
  store %"Bucket<string, VarId>_vtable_ty.580371"* @"Bucket<string, VarId>_vtable_data", %"Bucket<string, VarId>_vtable_ty.580371"** %.26, align 8
  call void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.580370"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, VarId>.580370"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, VarId>_hash_fnc"(%"Map<string, VarId>.580365"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, VarId>_resize"(%"Map<string, VarId>.580365"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.580370"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, VarId>.580370"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, VarId>_vtable_ty.580371"**
  store %"Bucket<string, VarId>_vtable_ty.580371"* @"Bucket<string, VarId>_vtable_data", %"Bucket<string, VarId>_vtable_ty.580371"** %.45, align 8
  call void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.580370"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, VarId>.580370"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, VarId>_set"(%"Map<string, VarId>.580365"* %.1, %string.580129* %.2, %VarId.580331* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, VarId>.580365"*, %string.580129*)*, i64 (%"Map<string, VarId>.580365"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, VarId>.580365"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, VarId>.580365"*)*, void (%"Map<string, VarId>.580365"*)** %.32, align 8
  call void %.33(%"Map<string, VarId>.580365"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.39, i64 %.19
  %.41 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, VarId>_vtable_ty.580371"*, %"Bucket<string, VarId>_vtable_ty.580371"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, VarId>_vtable_ty.580371", %"Bucket<string, VarId>_vtable_ty.580371"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, VarId>.580370"*, %string.580129*, %VarId.580331*)*, void (%"Bucket<string, VarId>.580370"*, %string.580129*, %VarId.580331*)** %.92, align 8
  call void %.93(%"Bucket<string, VarId>.580370"* %.89, %string.580129* %.2, %VarId.580331* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.70, i64 %.65
  %.72 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %VarId.580331* @"Map<string, VarId>_get"(%"Map<string, VarId>.580365"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, VarId>.580365"*, %string.580129*)*, i64 (%"Map<string, VarId>.580365"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, VarId>.580365"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.22, i64 %.17
  %.24 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.54, i64 %.48
  %.56 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %VarId.580331* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.91, i64 0, i32 2
  %.93 = load %VarId.580331*, %VarId.580331** %.92, align 8
  ret %VarId.580331* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, VarId>>_constructor"(%"Array<Bucket<string, VarId>>.580372"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.580370"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, VarId>>_resize"(%"Array<Bucket<string, VarId>>.580372"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.580370"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, VarId>>_swap"(%"Array<Bucket<string, VarId>>.580372"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, VarId>.580370"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, VarId>.580370"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, VarId>.580370"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, VarId>>___sl__"(%"Array<Bucket<string, VarId>>.580372"* %.1, %"Bucket<string, VarId>.580370"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, VarId>>_vtable_ty.580373"*, %"Array<Bucket<string, VarId>>_vtable_ty.580373"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.580373", %"Array<Bucket<string, VarId>>_vtable_ty.580373"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, VarId>>.580372"*)*, void (%"Array<Bucket<string, VarId>>.580372"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, VarId>>.580372"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.31, i64 %.24
  store %"Bucket<string, VarId>.580370"* %.2, %"Bucket<string, VarId>.580370"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, VarId>>___setitem__"(%"Array<Bucket<string, VarId>>.580372"* nocapture readonly %.1, i64 %.2, %"Bucket<string, VarId>.580370"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.30, i64 %.2
  store %"Bucket<string, VarId>.580370"* %.3, %"Bucket<string, VarId>.580370"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, VarId>>_append"(%"Array<Bucket<string, VarId>>.580372"* %.1, %"Bucket<string, VarId>.580370"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, VarId>>_vtable_ty.580373"*, %"Array<Bucket<string, VarId>>_vtable_ty.580373"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.580373", %"Array<Bucket<string, VarId>>_vtable_ty.580373"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)*, void (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, VarId>>.580372"* %.1, %"Bucket<string, VarId>.580370"* %.2)
  ret void
}

define %"Bucket<string, VarId>.580370"* @"Array<Bucket<string, VarId>>___getitem__"(%"Array<Bucket<string, VarId>>.580372"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.28, i64 %.2
  %.30 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.29, align 8
  ret %"Bucket<string, VarId>.580370"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, VarId>.580370"* null
}

define i1 @"Array<Bucket<string, VarId>>___eq__"(%"Array<Bucket<string, VarId>>.580372"* %.1, %"Array<Bucket<string, VarId>>.580372"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, VarId>>_vtable_ty.580373"*, %"Array<Bucket<string, VarId>>_vtable_ty.580373"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.580373", %"Array<Bucket<string, VarId>>_vtable_ty.580373"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, VarId>.580370"* (%"Array<Bucket<string, VarId>>.580372"*, i64)*, %"Bucket<string, VarId>.580370"* (%"Array<Bucket<string, VarId>>.580372"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, VarId>.580370"* %.30(%"Array<Bucket<string, VarId>>.580372"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, VarId>>_vtable_ty.580373"*, %"Array<Bucket<string, VarId>>_vtable_ty.580373"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.580373", %"Array<Bucket<string, VarId>>_vtable_ty.580373"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, VarId>.580370"* (%"Array<Bucket<string, VarId>>.580372"*, i64)*, %"Bucket<string, VarId>.580370"* (%"Array<Bucket<string, VarId>>.580372"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, VarId>.580370"* %.37(%"Array<Bucket<string, VarId>>.580372"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, VarId>.580370"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, VarId>.580370"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, VarId>>___in__"(%"Array<Bucket<string, VarId>>.580372"* %.1, %"Bucket<string, VarId>.580370"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, VarId>.580370"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, VarId>>_vtable_ty.580373"*, %"Array<Bucket<string, VarId>>_vtable_ty.580373"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.580373", %"Array<Bucket<string, VarId>>_vtable_ty.580373"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, VarId>.580370"* (%"Array<Bucket<string, VarId>>.580372"*, i64)*, %"Bucket<string, VarId>.580370"* (%"Array<Bucket<string, VarId>>.580372"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, VarId>.580370"* %.21(%"Array<Bucket<string, VarId>>.580372"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, VarId>.580370"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, VarId>>_find"(%"Array<Bucket<string, VarId>>.580372"* nocapture readonly %.1, %"Bucket<string, VarId>.580370"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, VarId>.580370"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, VarId>.580370"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, VarId>>_join"(%"Array<Bucket<string, VarId>>.580372"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.211, i64 0, i64 0), i64 22)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.211, i64 0, i64 0), i64 22)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, VarId>>___as_string__"(%"Array<Bucket<string, VarId>>.580372"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, VarId>>.580372", %"Array<Bucket<string, VarId>>.580372"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, VarId>>_vtable_ty.580373"*, %"Array<Bucket<string, VarId>>_vtable_ty.580373"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.580373", %"Array<Bucket<string, VarId>>_vtable_ty.580373"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, VarId>>.580372"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, VarId>>.580372"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, VarId>>.580372"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, VarId>>.580372"* @"Map<string, VarId>_get_buckets"(%"Map<string, VarId>.580365"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, VarId>>.580372"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, VarId>>_vtable_ty.580373"**
  store %"Array<Bucket<string, VarId>>_vtable_ty.580373"* @"Array<Bucket<string, VarId>>_vtable_data", %"Array<Bucket<string, VarId>>_vtable_ty.580373"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, VarId>.580370"**, %"Bucket<string, VarId>.580370"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, VarId>.580370"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, VarId>.580370"*, align 8
  %4 = bitcast %"Bucket<string, VarId>.580370"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, VarId>.580370"*
  %.36 = getelementptr inbounds %"Bucket<string, VarId>.580370", %"Bucket<string, VarId>.580370"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, VarId>>.580372"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, VarId>.580370"*, %"Bucket<string, VarId>.580370"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, VarId>>_vtable_ty.580373"*, %"Array<Bucket<string, VarId>>_vtable_ty.580373"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.580373", %"Array<Bucket<string, VarId>>_vtable_ty.580373"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)*, void (%"Array<Bucket<string, VarId>>.580372"*, %"Bucket<string, VarId>.580370"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, VarId>>.580372"* %.9, %"Bucket<string, VarId>.580370"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.580375"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, ClassId>_set"(%"Bucket<string, ClassId>.580375"* nocapture %.1, %string.580129* %.2, %ClassId.580289* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.1, i64 0, i32 2
  store %ClassId.580289* %.3, %ClassId.580289** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, ClassId>_constructor"(%"Map<string, ClassId>.580366"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.580375"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, ClassId>.580375"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, ClassId>_vtable_ty.580376"**
  store %"Bucket<string, ClassId>_vtable_ty.580376"* @"Bucket<string, ClassId>_vtable_data", %"Bucket<string, ClassId>_vtable_ty.580376"** %.26, align 8
  call void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.580375"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, ClassId>.580375"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, ClassId>_hash_fnc"(%"Map<string, ClassId>.580366"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, ClassId>_resize"(%"Map<string, ClassId>.580366"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.580375"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, ClassId>.580375"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, ClassId>_vtable_ty.580376"**
  store %"Bucket<string, ClassId>_vtable_ty.580376"* @"Bucket<string, ClassId>_vtable_data", %"Bucket<string, ClassId>_vtable_ty.580376"** %.45, align 8
  call void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.580375"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, ClassId>.580375"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, ClassId>_set"(%"Map<string, ClassId>.580366"* %.1, %string.580129* %.2, %ClassId.580289* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, ClassId>_vtable_ty.580374"*, %"Map<string, ClassId>_vtable_ty.580374"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.580374", %"Map<string, ClassId>_vtable_ty.580374"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, ClassId>.580366"*, %string.580129*)*, i64 (%"Map<string, ClassId>.580366"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, ClassId>.580366"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, ClassId>_vtable_ty.580374"*, %"Map<string, ClassId>_vtable_ty.580374"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.580374", %"Map<string, ClassId>_vtable_ty.580374"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, ClassId>.580366"*)*, void (%"Map<string, ClassId>.580366"*)** %.32, align 8
  call void %.33(%"Map<string, ClassId>.580366"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.39, i64 %.19
  %.41 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, ClassId>_vtable_ty.580376"*, %"Bucket<string, ClassId>_vtable_ty.580376"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, ClassId>_vtable_ty.580376", %"Bucket<string, ClassId>_vtable_ty.580376"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, ClassId>.580375"*, %string.580129*, %ClassId.580289*)*, void (%"Bucket<string, ClassId>.580375"*, %string.580129*, %ClassId.580289*)** %.92, align 8
  call void %.93(%"Bucket<string, ClassId>.580375"* %.89, %string.580129* %.2, %ClassId.580289* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.70, i64 %.65
  %.72 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %ClassId.580289* @"Map<string, ClassId>_get"(%"Map<string, ClassId>.580366"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, ClassId>_vtable_ty.580374"*, %"Map<string, ClassId>_vtable_ty.580374"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.580374", %"Map<string, ClassId>_vtable_ty.580374"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, ClassId>.580366"*, %string.580129*)*, i64 (%"Map<string, ClassId>.580366"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, ClassId>.580366"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.22, i64 %.17
  %.24 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.54, i64 %.48
  %.56 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %ClassId.580289* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.91, i64 0, i32 2
  %.93 = load %ClassId.580289*, %ClassId.580289** %.92, align 8
  ret %ClassId.580289* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, ClassId>>_constructor"(%"Array<Bucket<string, ClassId>>.580377"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.580375"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, ClassId>>_resize"(%"Array<Bucket<string, ClassId>>.580377"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.580375"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, ClassId>>_swap"(%"Array<Bucket<string, ClassId>>.580377"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, ClassId>.580375"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, ClassId>.580375"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, ClassId>.580375"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, ClassId>>___sl__"(%"Array<Bucket<string, ClassId>>.580377"* %.1, %"Bucket<string, ClassId>.580375"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, ClassId>>_vtable_ty.580378"*, %"Array<Bucket<string, ClassId>>_vtable_ty.580378"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.580378", %"Array<Bucket<string, ClassId>>_vtable_ty.580378"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, ClassId>>.580377"*)*, void (%"Array<Bucket<string, ClassId>>.580377"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, ClassId>>.580377"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.31, i64 %.24
  store %"Bucket<string, ClassId>.580375"* %.2, %"Bucket<string, ClassId>.580375"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, ClassId>>___setitem__"(%"Array<Bucket<string, ClassId>>.580377"* nocapture readonly %.1, i64 %.2, %"Bucket<string, ClassId>.580375"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.30, i64 %.2
  store %"Bucket<string, ClassId>.580375"* %.3, %"Bucket<string, ClassId>.580375"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, ClassId>>_append"(%"Array<Bucket<string, ClassId>>.580377"* %.1, %"Bucket<string, ClassId>.580375"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, ClassId>>_vtable_ty.580378"*, %"Array<Bucket<string, ClassId>>_vtable_ty.580378"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.580378", %"Array<Bucket<string, ClassId>>_vtable_ty.580378"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)*, void (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, ClassId>>.580377"* %.1, %"Bucket<string, ClassId>.580375"* %.2)
  ret void
}

define %"Bucket<string, ClassId>.580375"* @"Array<Bucket<string, ClassId>>___getitem__"(%"Array<Bucket<string, ClassId>>.580377"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.28, i64 %.2
  %.30 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.29, align 8
  ret %"Bucket<string, ClassId>.580375"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, ClassId>.580375"* null
}

define i1 @"Array<Bucket<string, ClassId>>___eq__"(%"Array<Bucket<string, ClassId>>.580377"* %.1, %"Array<Bucket<string, ClassId>>.580377"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, ClassId>>_vtable_ty.580378"*, %"Array<Bucket<string, ClassId>>_vtable_ty.580378"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.580378", %"Array<Bucket<string, ClassId>>_vtable_ty.580378"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, ClassId>.580375"* (%"Array<Bucket<string, ClassId>>.580377"*, i64)*, %"Bucket<string, ClassId>.580375"* (%"Array<Bucket<string, ClassId>>.580377"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, ClassId>.580375"* %.30(%"Array<Bucket<string, ClassId>>.580377"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, ClassId>>_vtable_ty.580378"*, %"Array<Bucket<string, ClassId>>_vtable_ty.580378"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.580378", %"Array<Bucket<string, ClassId>>_vtable_ty.580378"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, ClassId>.580375"* (%"Array<Bucket<string, ClassId>>.580377"*, i64)*, %"Bucket<string, ClassId>.580375"* (%"Array<Bucket<string, ClassId>>.580377"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, ClassId>.580375"* %.37(%"Array<Bucket<string, ClassId>>.580377"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, ClassId>.580375"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, ClassId>.580375"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, ClassId>>___in__"(%"Array<Bucket<string, ClassId>>.580377"* %.1, %"Bucket<string, ClassId>.580375"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, ClassId>.580375"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, ClassId>>_vtable_ty.580378"*, %"Array<Bucket<string, ClassId>>_vtable_ty.580378"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.580378", %"Array<Bucket<string, ClassId>>_vtable_ty.580378"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, ClassId>.580375"* (%"Array<Bucket<string, ClassId>>.580377"*, i64)*, %"Bucket<string, ClassId>.580375"* (%"Array<Bucket<string, ClassId>>.580377"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, ClassId>.580375"* %.21(%"Array<Bucket<string, ClassId>>.580377"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, ClassId>.580375"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, ClassId>>_find"(%"Array<Bucket<string, ClassId>>.580377"* nocapture readonly %.1, %"Bucket<string, ClassId>.580375"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, ClassId>.580375"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, ClassId>.580375"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, ClassId>>_join"(%"Array<Bucket<string, ClassId>>.580377"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.212, i64 0, i64 0), i64 24)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.212, i64 0, i64 0), i64 24)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, ClassId>>___as_string__"(%"Array<Bucket<string, ClassId>>.580377"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.580377", %"Array<Bucket<string, ClassId>>.580377"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, ClassId>>_vtable_ty.580378"*, %"Array<Bucket<string, ClassId>>_vtable_ty.580378"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.580378", %"Array<Bucket<string, ClassId>>_vtable_ty.580378"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, ClassId>>.580377"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, ClassId>>.580377"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, ClassId>>.580377"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, ClassId>>.580377"* @"Map<string, ClassId>_get_buckets"(%"Map<string, ClassId>.580366"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, ClassId>>.580377"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, ClassId>>_vtable_ty.580378"**
  store %"Array<Bucket<string, ClassId>>_vtable_ty.580378"* @"Array<Bucket<string, ClassId>>_vtable_data", %"Array<Bucket<string, ClassId>>_vtable_ty.580378"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, ClassId>.580375"**, %"Bucket<string, ClassId>.580375"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, ClassId>.580375"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, ClassId>.580375"*, align 8
  %4 = bitcast %"Bucket<string, ClassId>.580375"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, ClassId>.580375"*
  %.36 = getelementptr inbounds %"Bucket<string, ClassId>.580375", %"Bucket<string, ClassId>.580375"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, ClassId>>.580377"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, ClassId>.580375"*, %"Bucket<string, ClassId>.580375"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, ClassId>>_vtable_ty.580378"*, %"Array<Bucket<string, ClassId>>_vtable_ty.580378"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.580378", %"Array<Bucket<string, ClassId>>_vtable_ty.580378"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)*, void (%"Array<Bucket<string, ClassId>>.580377"*, %"Bucket<string, ClassId>.580375"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, ClassId>>.580377"* %.9, %"Bucket<string, ClassId>.580375"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.580380"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, EnumId>_set"(%"Bucket<string, EnumId>.580380"* nocapture %.1, %string.580129* %.2, %EnumId.580291* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.1, i64 0, i32 2
  store %EnumId.580291* %.3, %EnumId.580291** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, EnumId>_constructor"(%"Map<string, EnumId>.580367"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.580380"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, EnumId>.580380"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, EnumId>_vtable_ty.580381"**
  store %"Bucket<string, EnumId>_vtable_ty.580381"* @"Bucket<string, EnumId>_vtable_data", %"Bucket<string, EnumId>_vtable_ty.580381"** %.26, align 8
  call void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.580380"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, EnumId>.580380"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, EnumId>_hash_fnc"(%"Map<string, EnumId>.580367"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, EnumId>_resize"(%"Map<string, EnumId>.580367"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.580380"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, EnumId>.580380"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, EnumId>_vtable_ty.580381"**
  store %"Bucket<string, EnumId>_vtable_ty.580381"* @"Bucket<string, EnumId>_vtable_data", %"Bucket<string, EnumId>_vtable_ty.580381"** %.45, align 8
  call void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.580380"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, EnumId>.580380"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, EnumId>_set"(%"Map<string, EnumId>.580367"* %.1, %string.580129* %.2, %EnumId.580291* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, EnumId>_vtable_ty.580379"*, %"Map<string, EnumId>_vtable_ty.580379"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.580379", %"Map<string, EnumId>_vtable_ty.580379"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, EnumId>.580367"*, %string.580129*)*, i64 (%"Map<string, EnumId>.580367"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, EnumId>.580367"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, EnumId>_vtable_ty.580379"*, %"Map<string, EnumId>_vtable_ty.580379"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.580379", %"Map<string, EnumId>_vtable_ty.580379"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, EnumId>.580367"*)*, void (%"Map<string, EnumId>.580367"*)** %.32, align 8
  call void %.33(%"Map<string, EnumId>.580367"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.39, i64 %.19
  %.41 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, EnumId>_vtable_ty.580381"*, %"Bucket<string, EnumId>_vtable_ty.580381"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, EnumId>_vtable_ty.580381", %"Bucket<string, EnumId>_vtable_ty.580381"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, EnumId>.580380"*, %string.580129*, %EnumId.580291*)*, void (%"Bucket<string, EnumId>.580380"*, %string.580129*, %EnumId.580291*)** %.92, align 8
  call void %.93(%"Bucket<string, EnumId>.580380"* %.89, %string.580129* %.2, %EnumId.580291* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.70, i64 %.65
  %.72 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %EnumId.580291* @"Map<string, EnumId>_get"(%"Map<string, EnumId>.580367"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, EnumId>_vtable_ty.580379"*, %"Map<string, EnumId>_vtable_ty.580379"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.580379", %"Map<string, EnumId>_vtable_ty.580379"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, EnumId>.580367"*, %string.580129*)*, i64 (%"Map<string, EnumId>.580367"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, EnumId>.580367"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.22, i64 %.17
  %.24 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.54, i64 %.48
  %.56 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %EnumId.580291* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.91, i64 0, i32 2
  %.93 = load %EnumId.580291*, %EnumId.580291** %.92, align 8
  ret %EnumId.580291* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, EnumId>>_constructor"(%"Array<Bucket<string, EnumId>>.580382"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.580380"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, EnumId>>_resize"(%"Array<Bucket<string, EnumId>>.580382"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.580380"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, EnumId>>_swap"(%"Array<Bucket<string, EnumId>>.580382"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, EnumId>.580380"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, EnumId>.580380"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, EnumId>.580380"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, EnumId>>___sl__"(%"Array<Bucket<string, EnumId>>.580382"* %.1, %"Bucket<string, EnumId>.580380"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, EnumId>>_vtable_ty.580383"*, %"Array<Bucket<string, EnumId>>_vtable_ty.580383"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.580383", %"Array<Bucket<string, EnumId>>_vtable_ty.580383"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, EnumId>>.580382"*)*, void (%"Array<Bucket<string, EnumId>>.580382"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, EnumId>>.580382"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.31, i64 %.24
  store %"Bucket<string, EnumId>.580380"* %.2, %"Bucket<string, EnumId>.580380"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, EnumId>>___setitem__"(%"Array<Bucket<string, EnumId>>.580382"* nocapture readonly %.1, i64 %.2, %"Bucket<string, EnumId>.580380"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.30, i64 %.2
  store %"Bucket<string, EnumId>.580380"* %.3, %"Bucket<string, EnumId>.580380"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, EnumId>>_append"(%"Array<Bucket<string, EnumId>>.580382"* %.1, %"Bucket<string, EnumId>.580380"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, EnumId>>_vtable_ty.580383"*, %"Array<Bucket<string, EnumId>>_vtable_ty.580383"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.580383", %"Array<Bucket<string, EnumId>>_vtable_ty.580383"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)*, void (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, EnumId>>.580382"* %.1, %"Bucket<string, EnumId>.580380"* %.2)
  ret void
}

define %"Bucket<string, EnumId>.580380"* @"Array<Bucket<string, EnumId>>___getitem__"(%"Array<Bucket<string, EnumId>>.580382"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.28, i64 %.2
  %.30 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.29, align 8
  ret %"Bucket<string, EnumId>.580380"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, EnumId>.580380"* null
}

define i1 @"Array<Bucket<string, EnumId>>___eq__"(%"Array<Bucket<string, EnumId>>.580382"* %.1, %"Array<Bucket<string, EnumId>>.580382"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, EnumId>>_vtable_ty.580383"*, %"Array<Bucket<string, EnumId>>_vtable_ty.580383"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.580383", %"Array<Bucket<string, EnumId>>_vtable_ty.580383"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, EnumId>.580380"* (%"Array<Bucket<string, EnumId>>.580382"*, i64)*, %"Bucket<string, EnumId>.580380"* (%"Array<Bucket<string, EnumId>>.580382"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, EnumId>.580380"* %.30(%"Array<Bucket<string, EnumId>>.580382"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, EnumId>>_vtable_ty.580383"*, %"Array<Bucket<string, EnumId>>_vtable_ty.580383"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.580383", %"Array<Bucket<string, EnumId>>_vtable_ty.580383"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, EnumId>.580380"* (%"Array<Bucket<string, EnumId>>.580382"*, i64)*, %"Bucket<string, EnumId>.580380"* (%"Array<Bucket<string, EnumId>>.580382"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, EnumId>.580380"* %.37(%"Array<Bucket<string, EnumId>>.580382"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, EnumId>.580380"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, EnumId>.580380"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, EnumId>>___in__"(%"Array<Bucket<string, EnumId>>.580382"* %.1, %"Bucket<string, EnumId>.580380"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, EnumId>.580380"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, EnumId>>_vtable_ty.580383"*, %"Array<Bucket<string, EnumId>>_vtable_ty.580383"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.580383", %"Array<Bucket<string, EnumId>>_vtable_ty.580383"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, EnumId>.580380"* (%"Array<Bucket<string, EnumId>>.580382"*, i64)*, %"Bucket<string, EnumId>.580380"* (%"Array<Bucket<string, EnumId>>.580382"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, EnumId>.580380"* %.21(%"Array<Bucket<string, EnumId>>.580382"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, EnumId>.580380"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, EnumId>>_find"(%"Array<Bucket<string, EnumId>>.580382"* nocapture readonly %.1, %"Bucket<string, EnumId>.580380"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, EnumId>.580380"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, EnumId>.580380"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, EnumId>>_join"(%"Array<Bucket<string, EnumId>>.580382"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.213, i64 0, i64 0), i64 23)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.213, i64 0, i64 0), i64 23)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, EnumId>>___as_string__"(%"Array<Bucket<string, EnumId>>.580382"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.580382", %"Array<Bucket<string, EnumId>>.580382"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, EnumId>>_vtable_ty.580383"*, %"Array<Bucket<string, EnumId>>_vtable_ty.580383"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.580383", %"Array<Bucket<string, EnumId>>_vtable_ty.580383"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, EnumId>>.580382"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, EnumId>>.580382"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, EnumId>>.580382"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, EnumId>>.580382"* @"Map<string, EnumId>_get_buckets"(%"Map<string, EnumId>.580367"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, EnumId>>.580382"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, EnumId>>_vtable_ty.580383"**
  store %"Array<Bucket<string, EnumId>>_vtable_ty.580383"* @"Array<Bucket<string, EnumId>>_vtable_data", %"Array<Bucket<string, EnumId>>_vtable_ty.580383"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, EnumId>.580380"**, %"Bucket<string, EnumId>.580380"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, EnumId>.580380"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, EnumId>.580380"*, align 8
  %4 = bitcast %"Bucket<string, EnumId>.580380"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, EnumId>.580380"*
  %.36 = getelementptr inbounds %"Bucket<string, EnumId>.580380", %"Bucket<string, EnumId>.580380"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, EnumId>>.580382"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, EnumId>.580380"*, %"Bucket<string, EnumId>.580380"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, EnumId>>_vtable_ty.580383"*, %"Array<Bucket<string, EnumId>>_vtable_ty.580383"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.580383", %"Array<Bucket<string, EnumId>>_vtable_ty.580383"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)*, void (%"Array<Bucket<string, EnumId>>.580382"*, %"Bucket<string, EnumId>.580380"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, EnumId>>.580382"* %.9, %"Bucket<string, EnumId>.580380"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.580385"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, Type>_set"(%"Bucket<string, Type>.580385"* nocapture %.1, %string.580129* %.2, %Type.580273* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.1, i64 0, i32 2
  store %Type.580273* %.3, %Type.580273** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, Type>_constructor"(%"Map<string, Type>.580368"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.580385"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, Type>.580385"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, Type>_vtable_ty.580386"**
  store %"Bucket<string, Type>_vtable_ty.580386"* @"Bucket<string, Type>_vtable_data", %"Bucket<string, Type>_vtable_ty.580386"** %.26, align 8
  call void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.580385"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, Type>.580385"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, Type>_hash_fnc"(%"Map<string, Type>.580368"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, Type>_resize"(%"Map<string, Type>.580368"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.580385"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, Type>.580385"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, Type>_vtable_ty.580386"**
  store %"Bucket<string, Type>_vtable_ty.580386"* @"Bucket<string, Type>_vtable_data", %"Bucket<string, Type>_vtable_ty.580386"** %.45, align 8
  call void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.580385"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, Type>.580385"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, Type>_set"(%"Map<string, Type>.580368"* %.1, %string.580129* %.2, %Type.580273* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, Type>_vtable_ty.580384"*, %"Map<string, Type>_vtable_ty.580384"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, Type>_vtable_ty.580384", %"Map<string, Type>_vtable_ty.580384"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, Type>.580368"*, %string.580129*)*, i64 (%"Map<string, Type>.580368"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, Type>.580368"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, Type>_vtable_ty.580384"*, %"Map<string, Type>_vtable_ty.580384"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, Type>_vtable_ty.580384", %"Map<string, Type>_vtable_ty.580384"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, Type>.580368"*)*, void (%"Map<string, Type>.580368"*)** %.32, align 8
  call void %.33(%"Map<string, Type>.580368"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.39, i64 %.19
  %.41 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, Type>_vtable_ty.580386"*, %"Bucket<string, Type>_vtable_ty.580386"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, Type>_vtable_ty.580386", %"Bucket<string, Type>_vtable_ty.580386"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, Type>.580385"*, %string.580129*, %Type.580273*)*, void (%"Bucket<string, Type>.580385"*, %string.580129*, %Type.580273*)** %.92, align 8
  call void %.93(%"Bucket<string, Type>.580385"* %.89, %string.580129* %.2, %Type.580273* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.70, i64 %.65
  %.72 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %Type.580273* @"Map<string, Type>_get"(%"Map<string, Type>.580368"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, Type>_vtable_ty.580384"*, %"Map<string, Type>_vtable_ty.580384"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, Type>_vtable_ty.580384", %"Map<string, Type>_vtable_ty.580384"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, Type>.580368"*, %string.580129*)*, i64 (%"Map<string, Type>.580368"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, Type>.580368"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.22, i64 %.17
  %.24 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.54, i64 %.48
  %.56 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %Type.580273* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.91, i64 0, i32 2
  %.93 = load %Type.580273*, %Type.580273** %.92, align 8
  ret %Type.580273* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, Type>>_constructor"(%"Array<Bucket<string, Type>>.580387"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.580385"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, Type>>_resize"(%"Array<Bucket<string, Type>>.580387"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.580385"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, Type>>_swap"(%"Array<Bucket<string, Type>>.580387"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, Type>.580385"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, Type>.580385"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, Type>.580385"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, Type>>___sl__"(%"Array<Bucket<string, Type>>.580387"* %.1, %"Bucket<string, Type>.580385"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, Type>>_vtable_ty.580388"*, %"Array<Bucket<string, Type>>_vtable_ty.580388"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.580388", %"Array<Bucket<string, Type>>_vtable_ty.580388"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, Type>>.580387"*)*, void (%"Array<Bucket<string, Type>>.580387"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, Type>>.580387"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.31, i64 %.24
  store %"Bucket<string, Type>.580385"* %.2, %"Bucket<string, Type>.580385"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, Type>>___setitem__"(%"Array<Bucket<string, Type>>.580387"* nocapture readonly %.1, i64 %.2, %"Bucket<string, Type>.580385"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.30, i64 %.2
  store %"Bucket<string, Type>.580385"* %.3, %"Bucket<string, Type>.580385"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, Type>>_append"(%"Array<Bucket<string, Type>>.580387"* %.1, %"Bucket<string, Type>.580385"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, Type>>_vtable_ty.580388"*, %"Array<Bucket<string, Type>>_vtable_ty.580388"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.580388", %"Array<Bucket<string, Type>>_vtable_ty.580388"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)*, void (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, Type>>.580387"* %.1, %"Bucket<string, Type>.580385"* %.2)
  ret void
}

define %"Bucket<string, Type>.580385"* @"Array<Bucket<string, Type>>___getitem__"(%"Array<Bucket<string, Type>>.580387"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.28, i64 %.2
  %.30 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.29, align 8
  ret %"Bucket<string, Type>.580385"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, Type>.580385"* null
}

define i1 @"Array<Bucket<string, Type>>___eq__"(%"Array<Bucket<string, Type>>.580387"* %.1, %"Array<Bucket<string, Type>>.580387"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, Type>>_vtable_ty.580388"*, %"Array<Bucket<string, Type>>_vtable_ty.580388"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.580388", %"Array<Bucket<string, Type>>_vtable_ty.580388"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, Type>.580385"* (%"Array<Bucket<string, Type>>.580387"*, i64)*, %"Bucket<string, Type>.580385"* (%"Array<Bucket<string, Type>>.580387"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, Type>.580385"* %.30(%"Array<Bucket<string, Type>>.580387"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, Type>>_vtable_ty.580388"*, %"Array<Bucket<string, Type>>_vtable_ty.580388"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.580388", %"Array<Bucket<string, Type>>_vtable_ty.580388"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, Type>.580385"* (%"Array<Bucket<string, Type>>.580387"*, i64)*, %"Bucket<string, Type>.580385"* (%"Array<Bucket<string, Type>>.580387"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, Type>.580385"* %.37(%"Array<Bucket<string, Type>>.580387"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, Type>.580385"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, Type>.580385"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, Type>>___in__"(%"Array<Bucket<string, Type>>.580387"* %.1, %"Bucket<string, Type>.580385"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, Type>.580385"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, Type>>_vtable_ty.580388"*, %"Array<Bucket<string, Type>>_vtable_ty.580388"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.580388", %"Array<Bucket<string, Type>>_vtable_ty.580388"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, Type>.580385"* (%"Array<Bucket<string, Type>>.580387"*, i64)*, %"Bucket<string, Type>.580385"* (%"Array<Bucket<string, Type>>.580387"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, Type>.580385"* %.21(%"Array<Bucket<string, Type>>.580387"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, Type>.580385"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, Type>>_find"(%"Array<Bucket<string, Type>>.580387"* nocapture readonly %.1, %"Bucket<string, Type>.580385"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, Type>.580385"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, Type>.580385"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, Type>>_join"(%"Array<Bucket<string, Type>>.580387"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.214, i64 0, i64 0), i64 21)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.214, i64 0, i64 0), i64 21)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, Type>>___as_string__"(%"Array<Bucket<string, Type>>.580387"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, Type>>.580387", %"Array<Bucket<string, Type>>.580387"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, Type>>_vtable_ty.580388"*, %"Array<Bucket<string, Type>>_vtable_ty.580388"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.580388", %"Array<Bucket<string, Type>>_vtable_ty.580388"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, Type>>.580387"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, Type>>.580387"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, Type>>.580387"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, Type>>.580387"* @"Map<string, Type>_get_buckets"(%"Map<string, Type>.580368"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, Type>>.580387"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, Type>>_vtable_ty.580388"**
  store %"Array<Bucket<string, Type>>_vtable_ty.580388"* @"Array<Bucket<string, Type>>_vtable_data", %"Array<Bucket<string, Type>>_vtable_ty.580388"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, Type>.580385"**, %"Bucket<string, Type>.580385"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, Type>.580385"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, Type>.580385"*, align 8
  %4 = bitcast %"Bucket<string, Type>.580385"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, Type>.580385"*
  %.36 = getelementptr inbounds %"Bucket<string, Type>.580385", %"Bucket<string, Type>.580385"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, Type>>.580387"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, Type>.580385"*, %"Bucket<string, Type>.580385"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, Type>>_vtable_ty.580388"*, %"Array<Bucket<string, Type>>_vtable_ty.580388"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.580388", %"Array<Bucket<string, Type>>_vtable_ty.580388"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)*, void (%"Array<Bucket<string, Type>>.580387"*, %"Bucket<string, Type>.580385"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, Type>>.580387"* %.9, %"Bucket<string, Type>.580385"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @Scope_constructor(%Scope.580363* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #3 {
.5:
  %.12 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.13 = bitcast i8* %.12 to %ScopeId.580361*
  %.14 = bitcast i8* %.12 to %ScopeId_vtable_ty.580362**
  store %ScopeId_vtable_ty.580362* @ScopeId_vtable_data, %ScopeId_vtable_ty.580362** %.14, align 8
  call void @ScopeId_constructor(%ScopeId.580361* %.13, i64 %.2, i64 %.3)
  %.17 = getelementptr inbounds %Scope.580363, %Scope.580363* %.1, i64 0, i32 1
  %0 = bitcast %ScopeId.580361** %.17 to i8**
  store i8* %.12, i8** %0, align 8
  %.20 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.21 = bitcast i8* %.20 to %"Map<string, VarId>.580365"*
  %.22 = bitcast i8* %.20 to %"Map<string, VarId>_vtable_ty.580369"**
  store %"Map<string, VarId>_vtable_ty.580369"* @"Map<string, VarId>_vtable_data", %"Map<string, VarId>_vtable_ty.580369"** %.22, align 8
  call void @"Map<string, VarId>_constructor"(%"Map<string, VarId>.580365"* %.21)
  %.27 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.28 = bitcast i8* %.27 to %"Map<string, ClassId>.580366"*
  %.29 = bitcast i8* %.27 to %"Map<string, ClassId>_vtable_ty.580374"**
  store %"Map<string, ClassId>_vtable_ty.580374"* @"Map<string, ClassId>_vtable_data", %"Map<string, ClassId>_vtable_ty.580374"** %.29, align 8
  call void @"Map<string, ClassId>_constructor"(%"Map<string, ClassId>.580366"* %.28)
  %.34 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.35 = bitcast i8* %.34 to %"Map<string, VarId>.580365"*
  %.36 = bitcast i8* %.34 to %"Map<string, VarId>_vtable_ty.580369"**
  store %"Map<string, VarId>_vtable_ty.580369"* @"Map<string, VarId>_vtable_data", %"Map<string, VarId>_vtable_ty.580369"** %.36, align 8
  call void @"Map<string, VarId>_constructor"(%"Map<string, VarId>.580365"* %.35)
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %"Map<string, EnumId>.580367"*
  %.43 = bitcast i8* %.41 to %"Map<string, EnumId>_vtable_ty.580379"**
  store %"Map<string, EnumId>_vtable_ty.580379"* @"Map<string, EnumId>_vtable_data", %"Map<string, EnumId>_vtable_ty.580379"** %.43, align 8
  call void @"Map<string, EnumId>_constructor"(%"Map<string, EnumId>.580367"* %.42)
  %.48 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %"Map<string, Type>.580368"*
  %.50 = bitcast i8* %.48 to %"Map<string, Type>_vtable_ty.580384"**
  store %"Map<string, Type>_vtable_ty.580384"* @"Map<string, Type>_vtable_data", %"Map<string, Type>_vtable_ty.580384"** %.50, align 8
  call void @"Map<string, Type>_constructor"(%"Map<string, Type>.580368"* %.49)
  %.56 = getelementptr inbounds %Scope.580363, %Scope.580363* %.1, i64 0, i32 2
  %1 = bitcast %"Map<string, VarId>.580365"** %.56 to i8**
  store i8* %.20, i8** %1, align 8
  %.60 = getelementptr inbounds %Scope.580363, %Scope.580363* %.1, i64 0, i32 3
  %2 = bitcast %"Map<string, ClassId>.580366"** %.60 to i8**
  store i8* %.27, i8** %2, align 8
  %.64 = getelementptr inbounds %Scope.580363, %Scope.580363* %.1, i64 0, i32 4
  %3 = bitcast %"Map<string, VarId>.580365"** %.64 to i8**
  store i8* %.34, i8** %3, align 8
  %.68 = getelementptr inbounds %Scope.580363, %Scope.580363* %.1, i64 0, i32 5
  %4 = bitcast %"Map<string, EnumId>.580367"** %.68 to i8**
  store i8* %.41, i8** %4, align 8
  %.72 = getelementptr inbounds %Scope.580363, %Scope.580363* %.1, i64 0, i32 7
  %5 = bitcast %"Map<string, Type>.580368"** %.72 to i8**
  store i8* %.48, i8** %5, align 8
  %.75 = getelementptr inbounds %Scope.580363, %Scope.580363* %.1, i64 0, i32 6
  store %ScopeId.580361* null, %ScopeId.580361** %.75, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FunctionArg_constructor(%FunctionArg.580389* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = bitcast %FunctionArg.580389* %.1 to %Expression.580293*
  call void @Expression_constructor(%Expression.580293* %.6, i64 7)
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<FunctionArg>_constructor"(%"Array<FunctionArg>.580393"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionArg.580389*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FunctionArg>_resize"(%"Array<FunctionArg>.580393"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionArg.580389*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<FunctionArg>_swap"(%"Array<FunctionArg>.580393"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 1
  %.12 = load %FunctionArg.580389**, %FunctionArg.580389*** %.11, align 8
  %.13 = getelementptr inbounds %FunctionArg.580389*, %FunctionArg.580389** %.12, i64 %.2
  %0 = bitcast %FunctionArg.580389** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %FunctionArg.580389*, %FunctionArg.580389** %.12, i64 %.3
  %1 = bitcast %FunctionArg.580389** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %FunctionArg.580389**, %FunctionArg.580389*** %.11, align 8
  %.33 = getelementptr inbounds %FunctionArg.580389*, %FunctionArg.580389** %.31, i64 %.3
  %2 = bitcast %FunctionArg.580389** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<FunctionArg>___sl__"(%"Array<FunctionArg>.580393"* %.1, %FunctionArg.580389* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 0
  %.17 = load %"Array<FunctionArg>_vtable_ty.580394"*, %"Array<FunctionArg>_vtable_ty.580394"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.580394", %"Array<FunctionArg>_vtable_ty.580394"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FunctionArg>.580393"*)*, void (%"Array<FunctionArg>.580393"*)** %.18, align 8
  call void %.19(%"Array<FunctionArg>.580393"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 1
  %.31 = load %FunctionArg.580389**, %FunctionArg.580389*** %.30, align 8
  %.33 = getelementptr inbounds %FunctionArg.580389*, %FunctionArg.580389** %.31, i64 %.24
  store %FunctionArg.580389* %.2, %FunctionArg.580389** %.33, align 8
  ret void
}

define void @"Array<FunctionArg>___setitem__"(%"Array<FunctionArg>.580393"* nocapture readonly %.1, i64 %.2, %FunctionArg.580389* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 1
  %.30 = load %FunctionArg.580389**, %FunctionArg.580389*** %.29, align 8
  %.32 = getelementptr inbounds %FunctionArg.580389*, %FunctionArg.580389** %.30, i64 %.2
  store %FunctionArg.580389* %.3, %FunctionArg.580389** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FunctionArg>_append"(%"Array<FunctionArg>.580393"* %.1, %FunctionArg.580389* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 0
  %.9 = load %"Array<FunctionArg>_vtable_ty.580394"*, %"Array<FunctionArg>_vtable_ty.580394"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.580394", %"Array<FunctionArg>_vtable_ty.580394"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)*, void (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)** %.10, align 8
  call void %.11(%"Array<FunctionArg>.580393"* %.1, %FunctionArg.580389* %.2)
  ret void
}

define %FunctionArg.580389* @"Array<FunctionArg>___getitem__"(%"Array<FunctionArg>.580393"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 1
  %.28 = load %FunctionArg.580389**, %FunctionArg.580389*** %.27, align 8
  %.29 = getelementptr inbounds %FunctionArg.580389*, %FunctionArg.580389** %.28, i64 %.2
  %.30 = load %FunctionArg.580389*, %FunctionArg.580389** %.29, align 8
  ret %FunctionArg.580389* %.30

.4.endif:                                         ; preds = %.4
  ret %FunctionArg.580389* null
}

define i1 @"Array<FunctionArg>___eq__"(%"Array<FunctionArg>.580393"* %.1, %"Array<FunctionArg>.580393"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FunctionArg>_vtable_ty.580394"*, %"Array<FunctionArg>_vtable_ty.580394"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.580394", %"Array<FunctionArg>_vtable_ty.580394"* %.28, i64 0, i32 5
  %.30 = load %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)*, %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)** %.29, align 8
  %.31 = call %FunctionArg.580389* %.30(%"Array<FunctionArg>.580393"* %.1, i64 %storemerge3)
  %.35 = load %"Array<FunctionArg>_vtable_ty.580394"*, %"Array<FunctionArg>_vtable_ty.580394"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.580394", %"Array<FunctionArg>_vtable_ty.580394"* %.35, i64 0, i32 5
  %.37 = load %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)*, %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)** %.36, align 8
  %.38 = call %FunctionArg.580389* %.37(%"Array<FunctionArg>.580393"* %.2, i64 %storemerge3)
  %0 = ptrtoint %FunctionArg.580389* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FunctionArg.580389* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FunctionArg>___in__"(%"Array<FunctionArg>.580393"* %.1, %FunctionArg.580389* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FunctionArg.580389* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FunctionArg>_vtable_ty.580394"*, %"Array<FunctionArg>_vtable_ty.580394"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.580394", %"Array<FunctionArg>_vtable_ty.580394"* %.19, i64 0, i32 5
  %.21 = load %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)*, %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)** %.20, align 8
  %.22 = call %FunctionArg.580389* %.21(%"Array<FunctionArg>.580393"* %.1, i64 %storemerge4)
  %1 = ptrtoint %FunctionArg.580389* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FunctionArg>_find"(%"Array<FunctionArg>.580393"* nocapture readonly %.1, %FunctionArg.580389* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 1
  %.19 = load %FunctionArg.580389**, %FunctionArg.580389*** %.18, align 8
  %0 = ptrtoint %FunctionArg.580389* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FunctionArg.580389*, %FunctionArg.580389** %.19, i64 %storemerge5
  %1 = bitcast %FunctionArg.580389** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<FunctionArg>_join"(%"Array<FunctionArg>.580393"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.215, i64 0, i64 0), i64 12)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.215, i64 0, i64 0), i64 12)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<FunctionArg>___as_string__"(%"Array<FunctionArg>.580393"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.1, i64 0, i32 0
  %.7 = load %"Array<FunctionArg>_vtable_ty.580394"*, %"Array<FunctionArg>_vtable_ty.580394"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.580394", %"Array<FunctionArg>_vtable_ty.580394"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<FunctionArg>.580393"*, %string.580129*)*, %string.580129* (%"Array<FunctionArg>.580393"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<FunctionArg>.580393"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Var_constructor(%Var.580395* nocapture %.1, %Expression.580293* %.2, %Type.580273* %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %Var.580395, %Var.580395* %.1, i64 0, i32 3
  store %Expression.580293* %.2, %Expression.580293** %.11, align 8
  %.15 = getelementptr inbounds %Var.580395, %Var.580395* %.1, i64 0, i32 1
  store %Type.580273* %.3, %Type.580273** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Const_constructor(%Const.580397* nocapture %.1, %Expression.580293* %.2, %Type.580273* %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %Const.580397, %Const.580397* %.1, i64 0, i32 3
  store %Expression.580293* %.2, %Expression.580293** %.11, align 8
  %.15 = getelementptr inbounds %Const.580397, %Const.580397* %.1, i64 0, i32 1
  store %Type.580273* %.3, %Type.580273** %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<ClassField>_constructor"(%"Array<ClassField>.580405"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 1
  %0 = bitcast %ClassField.580399*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ClassField>_resize"(%"Array<ClassField>.580405"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 1
  %0 = bitcast %ClassField.580399*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<ClassField>_swap"(%"Array<ClassField>.580405"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 1
  %.12 = load %ClassField.580399**, %ClassField.580399*** %.11, align 8
  %.13 = getelementptr inbounds %ClassField.580399*, %ClassField.580399** %.12, i64 %.2
  %0 = bitcast %ClassField.580399** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %ClassField.580399*, %ClassField.580399** %.12, i64 %.3
  %1 = bitcast %ClassField.580399** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %ClassField.580399**, %ClassField.580399*** %.11, align 8
  %.33 = getelementptr inbounds %ClassField.580399*, %ClassField.580399** %.31, i64 %.3
  %2 = bitcast %ClassField.580399** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<ClassField>___sl__"(%"Array<ClassField>.580405"* %.1, %ClassField.580399* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 0
  %.17 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ClassField>.580405"*)*, void (%"Array<ClassField>.580405"*)** %.18, align 8
  call void %.19(%"Array<ClassField>.580405"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 1
  %.31 = load %ClassField.580399**, %ClassField.580399*** %.30, align 8
  %.33 = getelementptr inbounds %ClassField.580399*, %ClassField.580399** %.31, i64 %.24
  store %ClassField.580399* %.2, %ClassField.580399** %.33, align 8
  ret void
}

define void @"Array<ClassField>___setitem__"(%"Array<ClassField>.580405"* nocapture readonly %.1, i64 %.2, %ClassField.580399* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 1
  %.30 = load %ClassField.580399**, %ClassField.580399*** %.29, align 8
  %.32 = getelementptr inbounds %ClassField.580399*, %ClassField.580399** %.30, i64 %.2
  store %ClassField.580399* %.3, %ClassField.580399** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassField>_append"(%"Array<ClassField>.580405"* %.1, %ClassField.580399* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 0
  %.9 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ClassField>.580405"*, %ClassField.580399*)*, void (%"Array<ClassField>.580405"*, %ClassField.580399*)** %.10, align 8
  call void %.11(%"Array<ClassField>.580405"* %.1, %ClassField.580399* %.2)
  ret void
}

define %ClassField.580399* @"Array<ClassField>___getitem__"(%"Array<ClassField>.580405"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 1
  %.28 = load %ClassField.580399**, %ClassField.580399*** %.27, align 8
  %.29 = getelementptr inbounds %ClassField.580399*, %ClassField.580399** %.28, i64 %.2
  %.30 = load %ClassField.580399*, %ClassField.580399** %.29, align 8
  ret %ClassField.580399* %.30

.4.endif:                                         ; preds = %.4
  ret %ClassField.580399* null
}

define i1 @"Array<ClassField>___eq__"(%"Array<ClassField>.580405"* %.1, %"Array<ClassField>.580405"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.28, i64 0, i32 5
  %.30 = load %ClassField.580399* (%"Array<ClassField>.580405"*, i64)*, %ClassField.580399* (%"Array<ClassField>.580405"*, i64)** %.29, align 8
  %.31 = call %ClassField.580399* %.30(%"Array<ClassField>.580405"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.35, i64 0, i32 5
  %.37 = load %ClassField.580399* (%"Array<ClassField>.580405"*, i64)*, %ClassField.580399* (%"Array<ClassField>.580405"*, i64)** %.36, align 8
  %.38 = call %ClassField.580399* %.37(%"Array<ClassField>.580405"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ClassField.580399* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ClassField.580399* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ClassField>___in__"(%"Array<ClassField>.580405"* %.1, %ClassField.580399* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ClassField.580399* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.19, i64 0, i32 5
  %.21 = load %ClassField.580399* (%"Array<ClassField>.580405"*, i64)*, %ClassField.580399* (%"Array<ClassField>.580405"*, i64)** %.20, align 8
  %.22 = call %ClassField.580399* %.21(%"Array<ClassField>.580405"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ClassField.580399* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ClassField>_find"(%"Array<ClassField>.580405"* nocapture readonly %.1, %ClassField.580399* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 1
  %.19 = load %ClassField.580399**, %ClassField.580399*** %.18, align 8
  %0 = ptrtoint %ClassField.580399* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ClassField.580399*, %ClassField.580399** %.19, i64 %storemerge5
  %1 = bitcast %ClassField.580399** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<ClassField>_join"(%"Array<ClassField>.580405"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.216, i64 0, i64 0), i64 11)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.216, i64 0, i64 0), i64 11)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<ClassField>___as_string__"(%"Array<ClassField>.580405"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.1, i64 0, i32 0
  %.7 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<ClassField>.580405"*, %string.580129*)*, %string.580129* (%"Array<ClassField>.580405"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<ClassField>.580405"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ClassMethod>_constructor"(%"Array<ClassMethod>.580406"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 1
  %0 = bitcast %ClassMethod.580401*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ClassMethod>_resize"(%"Array<ClassMethod>.580406"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 1
  %0 = bitcast %ClassMethod.580401*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<ClassMethod>_swap"(%"Array<ClassMethod>.580406"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 1
  %.12 = load %ClassMethod.580401**, %ClassMethod.580401*** %.11, align 8
  %.13 = getelementptr inbounds %ClassMethod.580401*, %ClassMethod.580401** %.12, i64 %.2
  %0 = bitcast %ClassMethod.580401** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %ClassMethod.580401*, %ClassMethod.580401** %.12, i64 %.3
  %1 = bitcast %ClassMethod.580401** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %ClassMethod.580401**, %ClassMethod.580401*** %.11, align 8
  %.33 = getelementptr inbounds %ClassMethod.580401*, %ClassMethod.580401** %.31, i64 %.3
  %2 = bitcast %ClassMethod.580401** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<ClassMethod>___sl__"(%"Array<ClassMethod>.580406"* %.1, %ClassMethod.580401* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 0
  %.17 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ClassMethod>.580406"*)*, void (%"Array<ClassMethod>.580406"*)** %.18, align 8
  call void %.19(%"Array<ClassMethod>.580406"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 1
  %.31 = load %ClassMethod.580401**, %ClassMethod.580401*** %.30, align 8
  %.33 = getelementptr inbounds %ClassMethod.580401*, %ClassMethod.580401** %.31, i64 %.24
  store %ClassMethod.580401* %.2, %ClassMethod.580401** %.33, align 8
  ret void
}

define void @"Array<ClassMethod>___setitem__"(%"Array<ClassMethod>.580406"* nocapture readonly %.1, i64 %.2, %ClassMethod.580401* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 1
  %.30 = load %ClassMethod.580401**, %ClassMethod.580401*** %.29, align 8
  %.32 = getelementptr inbounds %ClassMethod.580401*, %ClassMethod.580401** %.30, i64 %.2
  store %ClassMethod.580401* %.3, %ClassMethod.580401** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassMethod>_append"(%"Array<ClassMethod>.580406"* %.1, %ClassMethod.580401* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 0
  %.9 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)*, void (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)** %.10, align 8
  call void %.11(%"Array<ClassMethod>.580406"* %.1, %ClassMethod.580401* %.2)
  ret void
}

define %ClassMethod.580401* @"Array<ClassMethod>___getitem__"(%"Array<ClassMethod>.580406"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 1
  %.28 = load %ClassMethod.580401**, %ClassMethod.580401*** %.27, align 8
  %.29 = getelementptr inbounds %ClassMethod.580401*, %ClassMethod.580401** %.28, i64 %.2
  %.30 = load %ClassMethod.580401*, %ClassMethod.580401** %.29, align 8
  ret %ClassMethod.580401* %.30

.4.endif:                                         ; preds = %.4
  ret %ClassMethod.580401* null
}

define i1 @"Array<ClassMethod>___eq__"(%"Array<ClassMethod>.580406"* %.1, %"Array<ClassMethod>.580406"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.28, i64 0, i32 5
  %.30 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.29, align 8
  %.31 = call %ClassMethod.580401* %.30(%"Array<ClassMethod>.580406"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.35, i64 0, i32 5
  %.37 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.36, align 8
  %.38 = call %ClassMethod.580401* %.37(%"Array<ClassMethod>.580406"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ClassMethod.580401* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ClassMethod.580401* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ClassMethod>___in__"(%"Array<ClassMethod>.580406"* %.1, %ClassMethod.580401* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ClassMethod.580401* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.19, i64 0, i32 5
  %.21 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.20, align 8
  %.22 = call %ClassMethod.580401* %.21(%"Array<ClassMethod>.580406"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ClassMethod.580401* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ClassMethod>_find"(%"Array<ClassMethod>.580406"* nocapture readonly %.1, %ClassMethod.580401* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 1
  %.19 = load %ClassMethod.580401**, %ClassMethod.580401*** %.18, align 8
  %0 = ptrtoint %ClassMethod.580401* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ClassMethod.580401*, %ClassMethod.580401** %.19, i64 %storemerge5
  %1 = bitcast %ClassMethod.580401** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<ClassMethod>_join"(%"Array<ClassMethod>.580406"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.217, i64 0, i64 0), i64 12)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.217, i64 0, i64 0), i64 12)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<ClassMethod>___as_string__"(%"Array<ClassMethod>.580406"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1, i64 0, i32 0
  %.7 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<ClassMethod>.580406"*, %string.580129*)*, %string.580129* (%"Array<ClassMethod>.580406"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<ClassMethod>.580406"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.580411"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, PropId>_set"(%"Bucket<string, PropId>.580411"* nocapture %.1, %string.580129* %.2, %PropId.580339* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.1, i64 0, i32 2
  store %PropId.580339* %.3, %PropId.580339** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.580407"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.580411"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, PropId>.580411"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, PropId>_vtable_ty.580412"**
  store %"Bucket<string, PropId>_vtable_ty.580412"* @"Bucket<string, PropId>_vtable_data", %"Bucket<string, PropId>_vtable_ty.580412"** %.26, align 8
  call void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.580411"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, PropId>.580411"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, PropId>_hash_fnc"(%"Map<string, PropId>.580407"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, PropId>_resize"(%"Map<string, PropId>.580407"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.580411"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, PropId>.580411"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, PropId>_vtable_ty.580412"**
  store %"Bucket<string, PropId>_vtable_ty.580412"* @"Bucket<string, PropId>_vtable_data", %"Bucket<string, PropId>_vtable_ty.580412"** %.45, align 8
  call void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.580411"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, PropId>.580411"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, PropId>_set"(%"Map<string, PropId>.580407"* %.1, %string.580129* %.2, %PropId.580339* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, PropId>.580407"*, %string.580129*)*, i64 (%"Map<string, PropId>.580407"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, PropId>.580407"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, PropId>.580407"*)*, void (%"Map<string, PropId>.580407"*)** %.32, align 8
  call void %.33(%"Map<string, PropId>.580407"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.39, i64 %.19
  %.41 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, PropId>_vtable_ty.580412"*, %"Bucket<string, PropId>_vtable_ty.580412"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, PropId>_vtable_ty.580412", %"Bucket<string, PropId>_vtable_ty.580412"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, PropId>.580411"*, %string.580129*, %PropId.580339*)*, void (%"Bucket<string, PropId>.580411"*, %string.580129*, %PropId.580339*)** %.92, align 8
  call void %.93(%"Bucket<string, PropId>.580411"* %.89, %string.580129* %.2, %PropId.580339* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.70, i64 %.65
  %.72 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %PropId.580339* @"Map<string, PropId>_get"(%"Map<string, PropId>.580407"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, PropId>.580407"*, %string.580129*)*, i64 (%"Map<string, PropId>.580407"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, PropId>.580407"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.22, i64 %.17
  %.24 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.54, i64 %.48
  %.56 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %PropId.580339* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.91, i64 0, i32 2
  %.93 = load %PropId.580339*, %PropId.580339** %.92, align 8
  ret %PropId.580339* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, PropId>>_constructor"(%"Array<Bucket<string, PropId>>.580413"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.580411"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, PropId>>_resize"(%"Array<Bucket<string, PropId>>.580413"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.580411"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, PropId>>_swap"(%"Array<Bucket<string, PropId>>.580413"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, PropId>.580411"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, PropId>.580411"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, PropId>.580411"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, PropId>>___sl__"(%"Array<Bucket<string, PropId>>.580413"* %.1, %"Bucket<string, PropId>.580411"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, PropId>>.580413"*)*, void (%"Array<Bucket<string, PropId>>.580413"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, PropId>>.580413"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.31, i64 %.24
  store %"Bucket<string, PropId>.580411"* %.2, %"Bucket<string, PropId>.580411"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, PropId>>___setitem__"(%"Array<Bucket<string, PropId>>.580413"* nocapture readonly %.1, i64 %.2, %"Bucket<string, PropId>.580411"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.30, i64 %.2
  store %"Bucket<string, PropId>.580411"* %.3, %"Bucket<string, PropId>.580411"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, PropId>>_append"(%"Array<Bucket<string, PropId>>.580413"* %.1, %"Bucket<string, PropId>.580411"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)*, void (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, PropId>>.580413"* %.1, %"Bucket<string, PropId>.580411"* %.2)
  ret void
}

define %"Bucket<string, PropId>.580411"* @"Array<Bucket<string, PropId>>___getitem__"(%"Array<Bucket<string, PropId>>.580413"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.28, i64 %.2
  %.30 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.29, align 8
  ret %"Bucket<string, PropId>.580411"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, PropId>.580411"* null
}

define i1 @"Array<Bucket<string, PropId>>___eq__"(%"Array<Bucket<string, PropId>>.580413"* %.1, %"Array<Bucket<string, PropId>>.580413"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, PropId>.580411"* %.30(%"Array<Bucket<string, PropId>>.580413"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, PropId>.580411"* %.37(%"Array<Bucket<string, PropId>>.580413"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, PropId>.580411"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, PropId>.580411"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, PropId>>___in__"(%"Array<Bucket<string, PropId>>.580413"* %.1, %"Bucket<string, PropId>.580411"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, PropId>.580411"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, PropId>.580411"* %.21(%"Array<Bucket<string, PropId>>.580413"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, PropId>.580411"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, PropId>>_find"(%"Array<Bucket<string, PropId>>.580413"* nocapture readonly %.1, %"Bucket<string, PropId>.580411"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, PropId>.580411"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, PropId>.580411"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, PropId>>_join"(%"Array<Bucket<string, PropId>>.580413"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.218, i64 0, i64 0), i64 23)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.218, i64 0, i64 0), i64 23)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, PropId>>___as_string__"(%"Array<Bucket<string, PropId>>.580413"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, PropId>>.580413"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, PropId>>.580413"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, PropId>>.580413"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, PropId>>.580413"* @"Map<string, PropId>_get_buckets"(%"Map<string, PropId>.580407"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, PropId>>.580413"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, PropId>>_vtable_ty.580414"**
  store %"Array<Bucket<string, PropId>>_vtable_ty.580414"* @"Array<Bucket<string, PropId>>_vtable_data", %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, PropId>.580411"**, %"Bucket<string, PropId>.580411"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, PropId>.580411"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, PropId>.580411"*, align 8
  %4 = bitcast %"Bucket<string, PropId>.580411"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, PropId>.580411"*
  %.36 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, PropId>>.580413"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, PropId>.580411"*, %"Bucket<string, PropId>.580411"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)*, void (%"Array<Bucket<string, PropId>>.580413"*, %"Bucket<string, PropId>.580411"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, PropId>>.580413"* %.9, %"Bucket<string, PropId>.580411"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumField_constructor(%EnumField.580415* nocapture %.1, %string.580129* %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %EnumField.580415, %EnumField.580415* %.1, i64 0, i32 2
  store %string.580129* %.2, %string.580129** %.9, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<EnumField>_constructor"(%"Array<EnumField>.580419"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 1
  %0 = bitcast %EnumField.580415*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<EnumField>_resize"(%"Array<EnumField>.580419"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 1
  %0 = bitcast %EnumField.580415*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<EnumField>_swap"(%"Array<EnumField>.580419"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 1
  %.12 = load %EnumField.580415**, %EnumField.580415*** %.11, align 8
  %.13 = getelementptr inbounds %EnumField.580415*, %EnumField.580415** %.12, i64 %.2
  %0 = bitcast %EnumField.580415** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %EnumField.580415*, %EnumField.580415** %.12, i64 %.3
  %1 = bitcast %EnumField.580415** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %EnumField.580415**, %EnumField.580415*** %.11, align 8
  %.33 = getelementptr inbounds %EnumField.580415*, %EnumField.580415** %.31, i64 %.3
  %2 = bitcast %EnumField.580415** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<EnumField>___sl__"(%"Array<EnumField>.580419"* %.1, %EnumField.580415* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 0
  %.17 = load %"Array<EnumField>_vtable_ty.580420"*, %"Array<EnumField>_vtable_ty.580420"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<EnumField>_vtable_ty.580420", %"Array<EnumField>_vtable_ty.580420"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<EnumField>.580419"*)*, void (%"Array<EnumField>.580419"*)** %.18, align 8
  call void %.19(%"Array<EnumField>.580419"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 1
  %.31 = load %EnumField.580415**, %EnumField.580415*** %.30, align 8
  %.33 = getelementptr inbounds %EnumField.580415*, %EnumField.580415** %.31, i64 %.24
  store %EnumField.580415* %.2, %EnumField.580415** %.33, align 8
  ret void
}

define void @"Array<EnumField>___setitem__"(%"Array<EnumField>.580419"* nocapture readonly %.1, i64 %.2, %EnumField.580415* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 1
  %.30 = load %EnumField.580415**, %EnumField.580415*** %.29, align 8
  %.32 = getelementptr inbounds %EnumField.580415*, %EnumField.580415** %.30, i64 %.2
  store %EnumField.580415* %.3, %EnumField.580415** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumField>_append"(%"Array<EnumField>.580419"* %.1, %EnumField.580415* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 0
  %.9 = load %"Array<EnumField>_vtable_ty.580420"*, %"Array<EnumField>_vtable_ty.580420"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<EnumField>_vtable_ty.580420", %"Array<EnumField>_vtable_ty.580420"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<EnumField>.580419"*, %EnumField.580415*)*, void (%"Array<EnumField>.580419"*, %EnumField.580415*)** %.10, align 8
  call void %.11(%"Array<EnumField>.580419"* %.1, %EnumField.580415* %.2)
  ret void
}

define %EnumField.580415* @"Array<EnumField>___getitem__"(%"Array<EnumField>.580419"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 1
  %.28 = load %EnumField.580415**, %EnumField.580415*** %.27, align 8
  %.29 = getelementptr inbounds %EnumField.580415*, %EnumField.580415** %.28, i64 %.2
  %.30 = load %EnumField.580415*, %EnumField.580415** %.29, align 8
  ret %EnumField.580415* %.30

.4.endif:                                         ; preds = %.4
  ret %EnumField.580415* null
}

define i1 @"Array<EnumField>___eq__"(%"Array<EnumField>.580419"* %.1, %"Array<EnumField>.580419"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<EnumField>_vtable_ty.580420"*, %"Array<EnumField>_vtable_ty.580420"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<EnumField>_vtable_ty.580420", %"Array<EnumField>_vtable_ty.580420"* %.28, i64 0, i32 5
  %.30 = load %EnumField.580415* (%"Array<EnumField>.580419"*, i64)*, %EnumField.580415* (%"Array<EnumField>.580419"*, i64)** %.29, align 8
  %.31 = call %EnumField.580415* %.30(%"Array<EnumField>.580419"* %.1, i64 %storemerge3)
  %.35 = load %"Array<EnumField>_vtable_ty.580420"*, %"Array<EnumField>_vtable_ty.580420"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<EnumField>_vtable_ty.580420", %"Array<EnumField>_vtable_ty.580420"* %.35, i64 0, i32 5
  %.37 = load %EnumField.580415* (%"Array<EnumField>.580419"*, i64)*, %EnumField.580415* (%"Array<EnumField>.580419"*, i64)** %.36, align 8
  %.38 = call %EnumField.580415* %.37(%"Array<EnumField>.580419"* %.2, i64 %storemerge3)
  %0 = ptrtoint %EnumField.580415* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %EnumField.580415* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<EnumField>___in__"(%"Array<EnumField>.580419"* %.1, %EnumField.580415* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %EnumField.580415* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<EnumField>_vtable_ty.580420"*, %"Array<EnumField>_vtable_ty.580420"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<EnumField>_vtable_ty.580420", %"Array<EnumField>_vtable_ty.580420"* %.19, i64 0, i32 5
  %.21 = load %EnumField.580415* (%"Array<EnumField>.580419"*, i64)*, %EnumField.580415* (%"Array<EnumField>.580419"*, i64)** %.20, align 8
  %.22 = call %EnumField.580415* %.21(%"Array<EnumField>.580419"* %.1, i64 %storemerge4)
  %1 = ptrtoint %EnumField.580415* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<EnumField>_find"(%"Array<EnumField>.580419"* nocapture readonly %.1, %EnumField.580415* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 1
  %.19 = load %EnumField.580415**, %EnumField.580415*** %.18, align 8
  %0 = ptrtoint %EnumField.580415* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %EnumField.580415*, %EnumField.580415** %.19, i64 %storemerge5
  %1 = bitcast %EnumField.580415** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<EnumField>_join"(%"Array<EnumField>.580419"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.219, i64 0, i64 0), i64 10)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.219, i64 0, i64 0), i64 10)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<EnumField>___as_string__"(%"Array<EnumField>.580419"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.1, i64 0, i32 0
  %.7 = load %"Array<EnumField>_vtable_ty.580420"*, %"Array<EnumField>_vtable_ty.580420"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<EnumField>_vtable_ty.580420", %"Array<EnumField>_vtable_ty.580420"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<EnumField>.580419"*, %string.580129*)*, %string.580129* (%"Array<EnumField>.580419"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<EnumField>.580419"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @Enum_constructor(%Enum.580417* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<EnumField>_vtable_ty.580420"**
  store %"Array<EnumField>_vtable_ty.580420"* @"Array<EnumField>_vtable_data", %"Array<EnumField>_vtable_ty.580420"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Enum.580417, %Enum.580417* %.1, i64 0, i32 3
  %3 = bitcast %"Array<EnumField>.580419"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Var>_constructor"(%"Array<Var>.580423"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 1
  %0 = bitcast %Var.580395*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Var>_resize"(%"Array<Var>.580423"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 1
  %0 = bitcast %Var.580395*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Var>_swap"(%"Array<Var>.580423"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 1
  %.12 = load %Var.580395**, %Var.580395*** %.11, align 8
  %.13 = getelementptr inbounds %Var.580395*, %Var.580395** %.12, i64 %.2
  %0 = bitcast %Var.580395** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Var.580395*, %Var.580395** %.12, i64 %.3
  %1 = bitcast %Var.580395** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Var.580395**, %Var.580395*** %.11, align 8
  %.33 = getelementptr inbounds %Var.580395*, %Var.580395** %.31, i64 %.3
  %2 = bitcast %Var.580395** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Var>___sl__"(%"Array<Var>.580423"* %.1, %Var.580395* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 0
  %.17 = load %"Array<Var>_vtable_ty.580432"*, %"Array<Var>_vtable_ty.580432"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Var>_vtable_ty.580432", %"Array<Var>_vtable_ty.580432"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Var>.580423"*)*, void (%"Array<Var>.580423"*)** %.18, align 8
  call void %.19(%"Array<Var>.580423"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 1
  %.31 = load %Var.580395**, %Var.580395*** %.30, align 8
  %.33 = getelementptr inbounds %Var.580395*, %Var.580395** %.31, i64 %.24
  store %Var.580395* %.2, %Var.580395** %.33, align 8
  ret void
}

define void @"Array<Var>___setitem__"(%"Array<Var>.580423"* nocapture readonly %.1, i64 %.2, %Var.580395* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 1
  %.30 = load %Var.580395**, %Var.580395*** %.29, align 8
  %.32 = getelementptr inbounds %Var.580395*, %Var.580395** %.30, i64 %.2
  store %Var.580395* %.3, %Var.580395** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Var>_append"(%"Array<Var>.580423"* %.1, %Var.580395* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 0
  %.9 = load %"Array<Var>_vtable_ty.580432"*, %"Array<Var>_vtable_ty.580432"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Var>_vtable_ty.580432", %"Array<Var>_vtable_ty.580432"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Var>.580423"*, %Var.580395*)*, void (%"Array<Var>.580423"*, %Var.580395*)** %.10, align 8
  call void %.11(%"Array<Var>.580423"* %.1, %Var.580395* %.2)
  ret void
}

define %Var.580395* @"Array<Var>___getitem__"(%"Array<Var>.580423"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 1
  %.28 = load %Var.580395**, %Var.580395*** %.27, align 8
  %.29 = getelementptr inbounds %Var.580395*, %Var.580395** %.28, i64 %.2
  %.30 = load %Var.580395*, %Var.580395** %.29, align 8
  ret %Var.580395* %.30

.4.endif:                                         ; preds = %.4
  ret %Var.580395* null
}

define i1 @"Array<Var>___eq__"(%"Array<Var>.580423"* %.1, %"Array<Var>.580423"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Var>_vtable_ty.580432"*, %"Array<Var>_vtable_ty.580432"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Var>_vtable_ty.580432", %"Array<Var>_vtable_ty.580432"* %.28, i64 0, i32 5
  %.30 = load %Var.580395* (%"Array<Var>.580423"*, i64)*, %Var.580395* (%"Array<Var>.580423"*, i64)** %.29, align 8
  %.31 = call %Var.580395* %.30(%"Array<Var>.580423"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Var>_vtable_ty.580432"*, %"Array<Var>_vtable_ty.580432"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Var>_vtable_ty.580432", %"Array<Var>_vtable_ty.580432"* %.35, i64 0, i32 5
  %.37 = load %Var.580395* (%"Array<Var>.580423"*, i64)*, %Var.580395* (%"Array<Var>.580423"*, i64)** %.36, align 8
  %.38 = call %Var.580395* %.37(%"Array<Var>.580423"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Var.580395* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Var.580395* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Var>___in__"(%"Array<Var>.580423"* %.1, %Var.580395* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Var.580395* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Var>_vtable_ty.580432"*, %"Array<Var>_vtable_ty.580432"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Var>_vtable_ty.580432", %"Array<Var>_vtable_ty.580432"* %.19, i64 0, i32 5
  %.21 = load %Var.580395* (%"Array<Var>.580423"*, i64)*, %Var.580395* (%"Array<Var>.580423"*, i64)** %.20, align 8
  %.22 = call %Var.580395* %.21(%"Array<Var>.580423"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Var.580395* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Var>_find"(%"Array<Var>.580423"* nocapture readonly %.1, %Var.580395* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 1
  %.19 = load %Var.580395**, %Var.580395*** %.18, align 8
  %0 = ptrtoint %Var.580395* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Var.580395*, %Var.580395** %.19, i64 %storemerge5
  %1 = bitcast %Var.580395** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Var>_join"(%"Array<Var>.580423"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.220, i64 0, i64 0), i64 4)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.220, i64 0, i64 0), i64 4)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Var>___as_string__"(%"Array<Var>.580423"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.1, i64 0, i32 0
  %.7 = load %"Array<Var>_vtable_ty.580432"*, %"Array<Var>_vtable_ty.580432"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Var>_vtable_ty.580432", %"Array<Var>_vtable_ty.580432"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Var>.580423"*, %string.580129*)*, %string.580129* (%"Array<Var>.580423"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Var>.580423"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Const>_constructor"(%"Array<Const>.580424"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 1
  %0 = bitcast %Const.580397*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Const>_resize"(%"Array<Const>.580424"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 1
  %0 = bitcast %Const.580397*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Const>_swap"(%"Array<Const>.580424"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 1
  %.12 = load %Const.580397**, %Const.580397*** %.11, align 8
  %.13 = getelementptr inbounds %Const.580397*, %Const.580397** %.12, i64 %.2
  %0 = bitcast %Const.580397** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Const.580397*, %Const.580397** %.12, i64 %.3
  %1 = bitcast %Const.580397** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Const.580397**, %Const.580397*** %.11, align 8
  %.33 = getelementptr inbounds %Const.580397*, %Const.580397** %.31, i64 %.3
  %2 = bitcast %Const.580397** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Const>___sl__"(%"Array<Const>.580424"* %.1, %Const.580397* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 0
  %.17 = load %"Array<Const>_vtable_ty.580433"*, %"Array<Const>_vtable_ty.580433"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Const>_vtable_ty.580433", %"Array<Const>_vtable_ty.580433"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Const>.580424"*)*, void (%"Array<Const>.580424"*)** %.18, align 8
  call void %.19(%"Array<Const>.580424"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 1
  %.31 = load %Const.580397**, %Const.580397*** %.30, align 8
  %.33 = getelementptr inbounds %Const.580397*, %Const.580397** %.31, i64 %.24
  store %Const.580397* %.2, %Const.580397** %.33, align 8
  ret void
}

define void @"Array<Const>___setitem__"(%"Array<Const>.580424"* nocapture readonly %.1, i64 %.2, %Const.580397* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 1
  %.30 = load %Const.580397**, %Const.580397*** %.29, align 8
  %.32 = getelementptr inbounds %Const.580397*, %Const.580397** %.30, i64 %.2
  store %Const.580397* %.3, %Const.580397** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Const>_append"(%"Array<Const>.580424"* %.1, %Const.580397* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 0
  %.9 = load %"Array<Const>_vtable_ty.580433"*, %"Array<Const>_vtable_ty.580433"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Const>_vtable_ty.580433", %"Array<Const>_vtable_ty.580433"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Const>.580424"*, %Const.580397*)*, void (%"Array<Const>.580424"*, %Const.580397*)** %.10, align 8
  call void %.11(%"Array<Const>.580424"* %.1, %Const.580397* %.2)
  ret void
}

define %Const.580397* @"Array<Const>___getitem__"(%"Array<Const>.580424"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 1
  %.28 = load %Const.580397**, %Const.580397*** %.27, align 8
  %.29 = getelementptr inbounds %Const.580397*, %Const.580397** %.28, i64 %.2
  %.30 = load %Const.580397*, %Const.580397** %.29, align 8
  ret %Const.580397* %.30

.4.endif:                                         ; preds = %.4
  ret %Const.580397* null
}

define i1 @"Array<Const>___eq__"(%"Array<Const>.580424"* %.1, %"Array<Const>.580424"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Const>_vtable_ty.580433"*, %"Array<Const>_vtable_ty.580433"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Const>_vtable_ty.580433", %"Array<Const>_vtable_ty.580433"* %.28, i64 0, i32 5
  %.30 = load %Const.580397* (%"Array<Const>.580424"*, i64)*, %Const.580397* (%"Array<Const>.580424"*, i64)** %.29, align 8
  %.31 = call %Const.580397* %.30(%"Array<Const>.580424"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Const>_vtable_ty.580433"*, %"Array<Const>_vtable_ty.580433"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Const>_vtable_ty.580433", %"Array<Const>_vtable_ty.580433"* %.35, i64 0, i32 5
  %.37 = load %Const.580397* (%"Array<Const>.580424"*, i64)*, %Const.580397* (%"Array<Const>.580424"*, i64)** %.36, align 8
  %.38 = call %Const.580397* %.37(%"Array<Const>.580424"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Const.580397* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Const.580397* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Const>___in__"(%"Array<Const>.580424"* %.1, %Const.580397* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Const.580397* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Const>_vtable_ty.580433"*, %"Array<Const>_vtable_ty.580433"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Const>_vtable_ty.580433", %"Array<Const>_vtable_ty.580433"* %.19, i64 0, i32 5
  %.21 = load %Const.580397* (%"Array<Const>.580424"*, i64)*, %Const.580397* (%"Array<Const>.580424"*, i64)** %.20, align 8
  %.22 = call %Const.580397* %.21(%"Array<Const>.580424"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Const.580397* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Const>_find"(%"Array<Const>.580424"* nocapture readonly %.1, %Const.580397* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 1
  %.19 = load %Const.580397**, %Const.580397*** %.18, align 8
  %0 = ptrtoint %Const.580397* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Const.580397*, %Const.580397** %.19, i64 %storemerge5
  %1 = bitcast %Const.580397** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Const>_join"(%"Array<Const>.580424"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.221, i64 0, i64 0), i64 6)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.221, i64 0, i64 0), i64 6)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Const>___as_string__"(%"Array<Const>.580424"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.1, i64 0, i32 0
  %.7 = load %"Array<Const>_vtable_ty.580433"*, %"Array<Const>_vtable_ty.580433"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Const>_vtable_ty.580433", %"Array<Const>_vtable_ty.580433"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Const>.580424"*, %string.580129*)*, %string.580129* (%"Array<Const>.580424"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Const>.580424"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Class>_constructor"(%"Array<Class>.580425"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 1
  %0 = bitcast %Class.580403*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Class>_resize"(%"Array<Class>.580425"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 1
  %0 = bitcast %Class.580403*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Class>_swap"(%"Array<Class>.580425"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 1
  %.12 = load %Class.580403**, %Class.580403*** %.11, align 8
  %.13 = getelementptr inbounds %Class.580403*, %Class.580403** %.12, i64 %.2
  %0 = bitcast %Class.580403** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Class.580403*, %Class.580403** %.12, i64 %.3
  %1 = bitcast %Class.580403** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Class.580403**, %Class.580403*** %.11, align 8
  %.33 = getelementptr inbounds %Class.580403*, %Class.580403** %.31, i64 %.3
  %2 = bitcast %Class.580403** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Class>___sl__"(%"Array<Class>.580425"* %.1, %Class.580403* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 0
  %.17 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Class>.580425"*)*, void (%"Array<Class>.580425"*)** %.18, align 8
  call void %.19(%"Array<Class>.580425"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 1
  %.31 = load %Class.580403**, %Class.580403*** %.30, align 8
  %.33 = getelementptr inbounds %Class.580403*, %Class.580403** %.31, i64 %.24
  store %Class.580403* %.2, %Class.580403** %.33, align 8
  ret void
}

define void @"Array<Class>___setitem__"(%"Array<Class>.580425"* nocapture readonly %.1, i64 %.2, %Class.580403* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 1
  %.30 = load %Class.580403**, %Class.580403*** %.29, align 8
  %.32 = getelementptr inbounds %Class.580403*, %Class.580403** %.30, i64 %.2
  store %Class.580403* %.3, %Class.580403** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Class>_append"(%"Array<Class>.580425"* %.1, %Class.580403* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 0
  %.9 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Class>.580425"*, %Class.580403*)*, void (%"Array<Class>.580425"*, %Class.580403*)** %.10, align 8
  call void %.11(%"Array<Class>.580425"* %.1, %Class.580403* %.2)
  ret void
}

define %Class.580403* @"Array<Class>___getitem__"(%"Array<Class>.580425"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 1
  %.28 = load %Class.580403**, %Class.580403*** %.27, align 8
  %.29 = getelementptr inbounds %Class.580403*, %Class.580403** %.28, i64 %.2
  %.30 = load %Class.580403*, %Class.580403** %.29, align 8
  ret %Class.580403* %.30

.4.endif:                                         ; preds = %.4
  ret %Class.580403* null
}

define i1 @"Array<Class>___eq__"(%"Array<Class>.580425"* %.1, %"Array<Class>.580425"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.28, i64 0, i32 5
  %.30 = load %Class.580403* (%"Array<Class>.580425"*, i64)*, %Class.580403* (%"Array<Class>.580425"*, i64)** %.29, align 8
  %.31 = call %Class.580403* %.30(%"Array<Class>.580425"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.35, i64 0, i32 5
  %.37 = load %Class.580403* (%"Array<Class>.580425"*, i64)*, %Class.580403* (%"Array<Class>.580425"*, i64)** %.36, align 8
  %.38 = call %Class.580403* %.37(%"Array<Class>.580425"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Class.580403* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Class.580403* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Class>___in__"(%"Array<Class>.580425"* %.1, %Class.580403* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Class.580403* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.19, i64 0, i32 5
  %.21 = load %Class.580403* (%"Array<Class>.580425"*, i64)*, %Class.580403* (%"Array<Class>.580425"*, i64)** %.20, align 8
  %.22 = call %Class.580403* %.21(%"Array<Class>.580425"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Class.580403* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Class>_find"(%"Array<Class>.580425"* nocapture readonly %.1, %Class.580403* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 1
  %.19 = load %Class.580403**, %Class.580403*** %.18, align 8
  %0 = ptrtoint %Class.580403* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Class.580403*, %Class.580403** %.19, i64 %storemerge5
  %1 = bitcast %Class.580403** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Class>_join"(%"Array<Class>.580425"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.222, i64 0, i64 0), i64 6)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.222, i64 0, i64 0), i64 6)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Class>___as_string__"(%"Array<Class>.580425"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.1, i64 0, i32 0
  %.7 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Class>.580425"*, %string.580129*)*, %string.580129* (%"Array<Class>.580425"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Class>.580425"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Function>_constructor"(%"Array<Function>.580426"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 1
  %0 = bitcast %Function.580391*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Function>_resize"(%"Array<Function>.580426"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 1
  %0 = bitcast %Function.580391*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Function>_swap"(%"Array<Function>.580426"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 1
  %.12 = load %Function.580391**, %Function.580391*** %.11, align 8
  %.13 = getelementptr inbounds %Function.580391*, %Function.580391** %.12, i64 %.2
  %0 = bitcast %Function.580391** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Function.580391*, %Function.580391** %.12, i64 %.3
  %1 = bitcast %Function.580391** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Function.580391**, %Function.580391*** %.11, align 8
  %.33 = getelementptr inbounds %Function.580391*, %Function.580391** %.31, i64 %.3
  %2 = bitcast %Function.580391** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Function>___sl__"(%"Array<Function>.580426"* %.1, %Function.580391* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 0
  %.17 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Function>.580426"*)*, void (%"Array<Function>.580426"*)** %.18, align 8
  call void %.19(%"Array<Function>.580426"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 1
  %.31 = load %Function.580391**, %Function.580391*** %.30, align 8
  %.33 = getelementptr inbounds %Function.580391*, %Function.580391** %.31, i64 %.24
  store %Function.580391* %.2, %Function.580391** %.33, align 8
  ret void
}

define void @"Array<Function>___setitem__"(%"Array<Function>.580426"* nocapture readonly %.1, i64 %.2, %Function.580391* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 1
  %.30 = load %Function.580391**, %Function.580391*** %.29, align 8
  %.32 = getelementptr inbounds %Function.580391*, %Function.580391** %.30, i64 %.2
  store %Function.580391* %.3, %Function.580391** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Function>_append"(%"Array<Function>.580426"* %.1, %Function.580391* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 0
  %.9 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Function>.580426"*, %Function.580391*)*, void (%"Array<Function>.580426"*, %Function.580391*)** %.10, align 8
  call void %.11(%"Array<Function>.580426"* %.1, %Function.580391* %.2)
  ret void
}

define %Function.580391* @"Array<Function>___getitem__"(%"Array<Function>.580426"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 1
  %.28 = load %Function.580391**, %Function.580391*** %.27, align 8
  %.29 = getelementptr inbounds %Function.580391*, %Function.580391** %.28, i64 %.2
  %.30 = load %Function.580391*, %Function.580391** %.29, align 8
  ret %Function.580391* %.30

.4.endif:                                         ; preds = %.4
  ret %Function.580391* null
}

define i1 @"Array<Function>___eq__"(%"Array<Function>.580426"* %.1, %"Array<Function>.580426"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.28, i64 0, i32 5
  %.30 = load %Function.580391* (%"Array<Function>.580426"*, i64)*, %Function.580391* (%"Array<Function>.580426"*, i64)** %.29, align 8
  %.31 = call %Function.580391* %.30(%"Array<Function>.580426"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.35, i64 0, i32 5
  %.37 = load %Function.580391* (%"Array<Function>.580426"*, i64)*, %Function.580391* (%"Array<Function>.580426"*, i64)** %.36, align 8
  %.38 = call %Function.580391* %.37(%"Array<Function>.580426"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Function.580391* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Function.580391* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Function>___in__"(%"Array<Function>.580426"* %.1, %Function.580391* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Function.580391* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.19, i64 0, i32 5
  %.21 = load %Function.580391* (%"Array<Function>.580426"*, i64)*, %Function.580391* (%"Array<Function>.580426"*, i64)** %.20, align 8
  %.22 = call %Function.580391* %.21(%"Array<Function>.580426"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Function.580391* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Function>_find"(%"Array<Function>.580426"* nocapture readonly %.1, %Function.580391* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 1
  %.19 = load %Function.580391**, %Function.580391*** %.18, align 8
  %0 = ptrtoint %Function.580391* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Function.580391*, %Function.580391** %.19, i64 %storemerge5
  %1 = bitcast %Function.580391** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Function>_join"(%"Array<Function>.580426"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.223, i64 0, i64 0), i64 9)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.223, i64 0, i64 0), i64 9)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Function>___as_string__"(%"Array<Function>.580426"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.1, i64 0, i32 0
  %.7 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Function>.580426"*, %string.580129*)*, %string.580129* (%"Array<Function>.580426"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Function>.580426"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Enum>_constructor"(%"Array<Enum>.580427"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 1
  %0 = bitcast %Enum.580417*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Enum>_resize"(%"Array<Enum>.580427"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 1
  %0 = bitcast %Enum.580417*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Enum>_swap"(%"Array<Enum>.580427"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 1
  %.12 = load %Enum.580417**, %Enum.580417*** %.11, align 8
  %.13 = getelementptr inbounds %Enum.580417*, %Enum.580417** %.12, i64 %.2
  %0 = bitcast %Enum.580417** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Enum.580417*, %Enum.580417** %.12, i64 %.3
  %1 = bitcast %Enum.580417** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Enum.580417**, %Enum.580417*** %.11, align 8
  %.33 = getelementptr inbounds %Enum.580417*, %Enum.580417** %.31, i64 %.3
  %2 = bitcast %Enum.580417** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Enum>___sl__"(%"Array<Enum>.580427"* %.1, %Enum.580417* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 0
  %.17 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Enum>.580427"*)*, void (%"Array<Enum>.580427"*)** %.18, align 8
  call void %.19(%"Array<Enum>.580427"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 1
  %.31 = load %Enum.580417**, %Enum.580417*** %.30, align 8
  %.33 = getelementptr inbounds %Enum.580417*, %Enum.580417** %.31, i64 %.24
  store %Enum.580417* %.2, %Enum.580417** %.33, align 8
  ret void
}

define void @"Array<Enum>___setitem__"(%"Array<Enum>.580427"* nocapture readonly %.1, i64 %.2, %Enum.580417* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 1
  %.30 = load %Enum.580417**, %Enum.580417*** %.29, align 8
  %.32 = getelementptr inbounds %Enum.580417*, %Enum.580417** %.30, i64 %.2
  store %Enum.580417* %.3, %Enum.580417** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Enum>_append"(%"Array<Enum>.580427"* %.1, %Enum.580417* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 0
  %.9 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Enum>.580427"*, %Enum.580417*)*, void (%"Array<Enum>.580427"*, %Enum.580417*)** %.10, align 8
  call void %.11(%"Array<Enum>.580427"* %.1, %Enum.580417* %.2)
  ret void
}

define %Enum.580417* @"Array<Enum>___getitem__"(%"Array<Enum>.580427"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 1
  %.28 = load %Enum.580417**, %Enum.580417*** %.27, align 8
  %.29 = getelementptr inbounds %Enum.580417*, %Enum.580417** %.28, i64 %.2
  %.30 = load %Enum.580417*, %Enum.580417** %.29, align 8
  ret %Enum.580417* %.30

.4.endif:                                         ; preds = %.4
  ret %Enum.580417* null
}

define i1 @"Array<Enum>___eq__"(%"Array<Enum>.580427"* %.1, %"Array<Enum>.580427"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.28, i64 0, i32 5
  %.30 = load %Enum.580417* (%"Array<Enum>.580427"*, i64)*, %Enum.580417* (%"Array<Enum>.580427"*, i64)** %.29, align 8
  %.31 = call %Enum.580417* %.30(%"Array<Enum>.580427"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.35, i64 0, i32 5
  %.37 = load %Enum.580417* (%"Array<Enum>.580427"*, i64)*, %Enum.580417* (%"Array<Enum>.580427"*, i64)** %.36, align 8
  %.38 = call %Enum.580417* %.37(%"Array<Enum>.580427"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Enum.580417* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Enum.580417* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Enum>___in__"(%"Array<Enum>.580427"* %.1, %Enum.580417* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Enum.580417* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.19, i64 0, i32 5
  %.21 = load %Enum.580417* (%"Array<Enum>.580427"*, i64)*, %Enum.580417* (%"Array<Enum>.580427"*, i64)** %.20, align 8
  %.22 = call %Enum.580417* %.21(%"Array<Enum>.580427"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Enum.580417* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Enum>_find"(%"Array<Enum>.580427"* nocapture readonly %.1, %Enum.580417* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 1
  %.19 = load %Enum.580417**, %Enum.580417*** %.18, align 8
  %0 = ptrtoint %Enum.580417* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Enum.580417*, %Enum.580417** %.19, i64 %storemerge5
  %1 = bitcast %Enum.580417** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Enum>_join"(%"Array<Enum>.580427"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.224, i64 0, i64 0), i64 5)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.224, i64 0, i64 0), i64 5)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Enum>___as_string__"(%"Array<Enum>.580427"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.1, i64 0, i32 0
  %.7 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Enum>.580427"*, %string.580129*)*, %string.580129* (%"Array<Enum>.580427"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Enum>.580427"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Scope>_constructor"(%"Array<Scope>.580428"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 1
  %0 = bitcast %Scope.580363*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Scope>_resize"(%"Array<Scope>.580428"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 1
  %0 = bitcast %Scope.580363*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Scope>_swap"(%"Array<Scope>.580428"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 1
  %.12 = load %Scope.580363**, %Scope.580363*** %.11, align 8
  %.13 = getelementptr inbounds %Scope.580363*, %Scope.580363** %.12, i64 %.2
  %0 = bitcast %Scope.580363** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Scope.580363*, %Scope.580363** %.12, i64 %.3
  %1 = bitcast %Scope.580363** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Scope.580363**, %Scope.580363*** %.11, align 8
  %.33 = getelementptr inbounds %Scope.580363*, %Scope.580363** %.31, i64 %.3
  %2 = bitcast %Scope.580363** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Scope>___sl__"(%"Array<Scope>.580428"* %.1, %Scope.580363* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 0
  %.17 = load %"Array<Scope>_vtable_ty.580437"*, %"Array<Scope>_vtable_ty.580437"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Scope>_vtable_ty.580437", %"Array<Scope>_vtable_ty.580437"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Scope>.580428"*)*, void (%"Array<Scope>.580428"*)** %.18, align 8
  call void %.19(%"Array<Scope>.580428"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 1
  %.31 = load %Scope.580363**, %Scope.580363*** %.30, align 8
  %.33 = getelementptr inbounds %Scope.580363*, %Scope.580363** %.31, i64 %.24
  store %Scope.580363* %.2, %Scope.580363** %.33, align 8
  ret void
}

define void @"Array<Scope>___setitem__"(%"Array<Scope>.580428"* nocapture readonly %.1, i64 %.2, %Scope.580363* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 1
  %.30 = load %Scope.580363**, %Scope.580363*** %.29, align 8
  %.32 = getelementptr inbounds %Scope.580363*, %Scope.580363** %.30, i64 %.2
  store %Scope.580363* %.3, %Scope.580363** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Scope>_append"(%"Array<Scope>.580428"* %.1, %Scope.580363* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 0
  %.9 = load %"Array<Scope>_vtable_ty.580437"*, %"Array<Scope>_vtable_ty.580437"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Scope>_vtable_ty.580437", %"Array<Scope>_vtable_ty.580437"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Scope>.580428"*, %Scope.580363*)*, void (%"Array<Scope>.580428"*, %Scope.580363*)** %.10, align 8
  call void %.11(%"Array<Scope>.580428"* %.1, %Scope.580363* %.2)
  ret void
}

define %Scope.580363* @"Array<Scope>___getitem__"(%"Array<Scope>.580428"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 1
  %.28 = load %Scope.580363**, %Scope.580363*** %.27, align 8
  %.29 = getelementptr inbounds %Scope.580363*, %Scope.580363** %.28, i64 %.2
  %.30 = load %Scope.580363*, %Scope.580363** %.29, align 8
  ret %Scope.580363* %.30

.4.endif:                                         ; preds = %.4
  ret %Scope.580363* null
}

define i1 @"Array<Scope>___eq__"(%"Array<Scope>.580428"* %.1, %"Array<Scope>.580428"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Scope>_vtable_ty.580437"*, %"Array<Scope>_vtable_ty.580437"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Scope>_vtable_ty.580437", %"Array<Scope>_vtable_ty.580437"* %.28, i64 0, i32 5
  %.30 = load %Scope.580363* (%"Array<Scope>.580428"*, i64)*, %Scope.580363* (%"Array<Scope>.580428"*, i64)** %.29, align 8
  %.31 = call %Scope.580363* %.30(%"Array<Scope>.580428"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Scope>_vtable_ty.580437"*, %"Array<Scope>_vtable_ty.580437"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Scope>_vtable_ty.580437", %"Array<Scope>_vtable_ty.580437"* %.35, i64 0, i32 5
  %.37 = load %Scope.580363* (%"Array<Scope>.580428"*, i64)*, %Scope.580363* (%"Array<Scope>.580428"*, i64)** %.36, align 8
  %.38 = call %Scope.580363* %.37(%"Array<Scope>.580428"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Scope.580363* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Scope.580363* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Scope>___in__"(%"Array<Scope>.580428"* %.1, %Scope.580363* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Scope.580363* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Scope>_vtable_ty.580437"*, %"Array<Scope>_vtable_ty.580437"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Scope>_vtable_ty.580437", %"Array<Scope>_vtable_ty.580437"* %.19, i64 0, i32 5
  %.21 = load %Scope.580363* (%"Array<Scope>.580428"*, i64)*, %Scope.580363* (%"Array<Scope>.580428"*, i64)** %.20, align 8
  %.22 = call %Scope.580363* %.21(%"Array<Scope>.580428"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Scope.580363* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Scope>_find"(%"Array<Scope>.580428"* nocapture readonly %.1, %Scope.580363* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 1
  %.19 = load %Scope.580363**, %Scope.580363*** %.18, align 8
  %0 = ptrtoint %Scope.580363* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Scope.580363*, %Scope.580363** %.19, i64 %storemerge5
  %1 = bitcast %Scope.580363** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Scope>_join"(%"Array<Scope>.580428"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.225, i64 0, i64 0), i64 6)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.225, i64 0, i64 0), i64 6)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Scope>___as_string__"(%"Array<Scope>.580428"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.1, i64 0, i32 0
  %.7 = load %"Array<Scope>_vtable_ty.580437"*, %"Array<Scope>_vtable_ty.580437"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Scope>_vtable_ty.580437", %"Array<Scope>_vtable_ty.580437"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Scope>.580428"*, %string.580129*)*, %string.580129* (%"Array<Scope>.580428"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Scope>.580428"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ConstDeclaration>_constructor"(%"Array<ConstDeclaration>.580429"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclaration.580353*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ConstDeclaration>_resize"(%"Array<ConstDeclaration>.580429"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclaration.580353*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<ConstDeclaration>_swap"(%"Array<ConstDeclaration>.580429"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 1
  %.12 = load %ConstDeclaration.580353**, %ConstDeclaration.580353*** %.11, align 8
  %.13 = getelementptr inbounds %ConstDeclaration.580353*, %ConstDeclaration.580353** %.12, i64 %.2
  %0 = bitcast %ConstDeclaration.580353** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %ConstDeclaration.580353*, %ConstDeclaration.580353** %.12, i64 %.3
  %1 = bitcast %ConstDeclaration.580353** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %ConstDeclaration.580353**, %ConstDeclaration.580353*** %.11, align 8
  %.33 = getelementptr inbounds %ConstDeclaration.580353*, %ConstDeclaration.580353** %.31, i64 %.3
  %2 = bitcast %ConstDeclaration.580353** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<ConstDeclaration>___sl__"(%"Array<ConstDeclaration>.580429"* %.1, %ConstDeclaration.580353* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 0
  %.17 = load %"Array<ConstDeclaration>_vtable_ty.580438"*, %"Array<ConstDeclaration>_vtable_ty.580438"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.580438", %"Array<ConstDeclaration>_vtable_ty.580438"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ConstDeclaration>.580429"*)*, void (%"Array<ConstDeclaration>.580429"*)** %.18, align 8
  call void %.19(%"Array<ConstDeclaration>.580429"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 1
  %.31 = load %ConstDeclaration.580353**, %ConstDeclaration.580353*** %.30, align 8
  %.33 = getelementptr inbounds %ConstDeclaration.580353*, %ConstDeclaration.580353** %.31, i64 %.24
  store %ConstDeclaration.580353* %.2, %ConstDeclaration.580353** %.33, align 8
  ret void
}

define void @"Array<ConstDeclaration>___setitem__"(%"Array<ConstDeclaration>.580429"* nocapture readonly %.1, i64 %.2, %ConstDeclaration.580353* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 1
  %.30 = load %ConstDeclaration.580353**, %ConstDeclaration.580353*** %.29, align 8
  %.32 = getelementptr inbounds %ConstDeclaration.580353*, %ConstDeclaration.580353** %.30, i64 %.2
  store %ConstDeclaration.580353* %.3, %ConstDeclaration.580353** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ConstDeclaration>_append"(%"Array<ConstDeclaration>.580429"* %.1, %ConstDeclaration.580353* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 0
  %.9 = load %"Array<ConstDeclaration>_vtable_ty.580438"*, %"Array<ConstDeclaration>_vtable_ty.580438"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.580438", %"Array<ConstDeclaration>_vtable_ty.580438"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)*, void (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)** %.10, align 8
  call void %.11(%"Array<ConstDeclaration>.580429"* %.1, %ConstDeclaration.580353* %.2)
  ret void
}

define %ConstDeclaration.580353* @"Array<ConstDeclaration>___getitem__"(%"Array<ConstDeclaration>.580429"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 1
  %.28 = load %ConstDeclaration.580353**, %ConstDeclaration.580353*** %.27, align 8
  %.29 = getelementptr inbounds %ConstDeclaration.580353*, %ConstDeclaration.580353** %.28, i64 %.2
  %.30 = load %ConstDeclaration.580353*, %ConstDeclaration.580353** %.29, align 8
  ret %ConstDeclaration.580353* %.30

.4.endif:                                         ; preds = %.4
  ret %ConstDeclaration.580353* null
}

define i1 @"Array<ConstDeclaration>___eq__"(%"Array<ConstDeclaration>.580429"* %.1, %"Array<ConstDeclaration>.580429"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ConstDeclaration>_vtable_ty.580438"*, %"Array<ConstDeclaration>_vtable_ty.580438"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.580438", %"Array<ConstDeclaration>_vtable_ty.580438"* %.28, i64 0, i32 5
  %.30 = load %ConstDeclaration.580353* (%"Array<ConstDeclaration>.580429"*, i64)*, %ConstDeclaration.580353* (%"Array<ConstDeclaration>.580429"*, i64)** %.29, align 8
  %.31 = call %ConstDeclaration.580353* %.30(%"Array<ConstDeclaration>.580429"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ConstDeclaration>_vtable_ty.580438"*, %"Array<ConstDeclaration>_vtable_ty.580438"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.580438", %"Array<ConstDeclaration>_vtable_ty.580438"* %.35, i64 0, i32 5
  %.37 = load %ConstDeclaration.580353* (%"Array<ConstDeclaration>.580429"*, i64)*, %ConstDeclaration.580353* (%"Array<ConstDeclaration>.580429"*, i64)** %.36, align 8
  %.38 = call %ConstDeclaration.580353* %.37(%"Array<ConstDeclaration>.580429"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ConstDeclaration.580353* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ConstDeclaration.580353* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ConstDeclaration>___in__"(%"Array<ConstDeclaration>.580429"* %.1, %ConstDeclaration.580353* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ConstDeclaration.580353* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ConstDeclaration>_vtable_ty.580438"*, %"Array<ConstDeclaration>_vtable_ty.580438"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.580438", %"Array<ConstDeclaration>_vtable_ty.580438"* %.19, i64 0, i32 5
  %.21 = load %ConstDeclaration.580353* (%"Array<ConstDeclaration>.580429"*, i64)*, %ConstDeclaration.580353* (%"Array<ConstDeclaration>.580429"*, i64)** %.20, align 8
  %.22 = call %ConstDeclaration.580353* %.21(%"Array<ConstDeclaration>.580429"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ConstDeclaration.580353* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ConstDeclaration>_find"(%"Array<ConstDeclaration>.580429"* nocapture readonly %.1, %ConstDeclaration.580353* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 1
  %.19 = load %ConstDeclaration.580353**, %ConstDeclaration.580353*** %.18, align 8
  %0 = ptrtoint %ConstDeclaration.580353* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ConstDeclaration.580353*, %ConstDeclaration.580353** %.19, i64 %storemerge5
  %1 = bitcast %ConstDeclaration.580353** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<ConstDeclaration>_join"(%"Array<ConstDeclaration>.580429"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.226, i64 0, i64 0), i64 17)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.226, i64 0, i64 0), i64 17)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<ConstDeclaration>___as_string__"(%"Array<ConstDeclaration>.580429"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.1, i64 0, i32 0
  %.7 = load %"Array<ConstDeclaration>_vtable_ty.580438"*, %"Array<ConstDeclaration>_vtable_ty.580438"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.580438", %"Array<ConstDeclaration>_vtable_ty.580438"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<ConstDeclaration>.580429"*, %string.580129*)*, %string.580129* (%"Array<ConstDeclaration>.580429"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<ConstDeclaration>.580429"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<VarDeclaration>_constructor"(%"Array<VarDeclaration>.580430"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclaration.580351*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<VarDeclaration>_resize"(%"Array<VarDeclaration>.580430"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclaration.580351*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<VarDeclaration>_swap"(%"Array<VarDeclaration>.580430"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 1
  %.12 = load %VarDeclaration.580351**, %VarDeclaration.580351*** %.11, align 8
  %.13 = getelementptr inbounds %VarDeclaration.580351*, %VarDeclaration.580351** %.12, i64 %.2
  %0 = bitcast %VarDeclaration.580351** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %VarDeclaration.580351*, %VarDeclaration.580351** %.12, i64 %.3
  %1 = bitcast %VarDeclaration.580351** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %VarDeclaration.580351**, %VarDeclaration.580351*** %.11, align 8
  %.33 = getelementptr inbounds %VarDeclaration.580351*, %VarDeclaration.580351** %.31, i64 %.3
  %2 = bitcast %VarDeclaration.580351** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<VarDeclaration>___sl__"(%"Array<VarDeclaration>.580430"* %.1, %VarDeclaration.580351* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 0
  %.17 = load %"Array<VarDeclaration>_vtable_ty.580439"*, %"Array<VarDeclaration>_vtable_ty.580439"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.580439", %"Array<VarDeclaration>_vtable_ty.580439"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<VarDeclaration>.580430"*)*, void (%"Array<VarDeclaration>.580430"*)** %.18, align 8
  call void %.19(%"Array<VarDeclaration>.580430"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 1
  %.31 = load %VarDeclaration.580351**, %VarDeclaration.580351*** %.30, align 8
  %.33 = getelementptr inbounds %VarDeclaration.580351*, %VarDeclaration.580351** %.31, i64 %.24
  store %VarDeclaration.580351* %.2, %VarDeclaration.580351** %.33, align 8
  ret void
}

define void @"Array<VarDeclaration>___setitem__"(%"Array<VarDeclaration>.580430"* nocapture readonly %.1, i64 %.2, %VarDeclaration.580351* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 1
  %.30 = load %VarDeclaration.580351**, %VarDeclaration.580351*** %.29, align 8
  %.32 = getelementptr inbounds %VarDeclaration.580351*, %VarDeclaration.580351** %.30, i64 %.2
  store %VarDeclaration.580351* %.3, %VarDeclaration.580351** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarDeclaration>_append"(%"Array<VarDeclaration>.580430"* %.1, %VarDeclaration.580351* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 0
  %.9 = load %"Array<VarDeclaration>_vtable_ty.580439"*, %"Array<VarDeclaration>_vtable_ty.580439"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.580439", %"Array<VarDeclaration>_vtable_ty.580439"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)*, void (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)** %.10, align 8
  call void %.11(%"Array<VarDeclaration>.580430"* %.1, %VarDeclaration.580351* %.2)
  ret void
}

define %VarDeclaration.580351* @"Array<VarDeclaration>___getitem__"(%"Array<VarDeclaration>.580430"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 1
  %.28 = load %VarDeclaration.580351**, %VarDeclaration.580351*** %.27, align 8
  %.29 = getelementptr inbounds %VarDeclaration.580351*, %VarDeclaration.580351** %.28, i64 %.2
  %.30 = load %VarDeclaration.580351*, %VarDeclaration.580351** %.29, align 8
  ret %VarDeclaration.580351* %.30

.4.endif:                                         ; preds = %.4
  ret %VarDeclaration.580351* null
}

define i1 @"Array<VarDeclaration>___eq__"(%"Array<VarDeclaration>.580430"* %.1, %"Array<VarDeclaration>.580430"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<VarDeclaration>_vtable_ty.580439"*, %"Array<VarDeclaration>_vtable_ty.580439"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.580439", %"Array<VarDeclaration>_vtable_ty.580439"* %.28, i64 0, i32 5
  %.30 = load %VarDeclaration.580351* (%"Array<VarDeclaration>.580430"*, i64)*, %VarDeclaration.580351* (%"Array<VarDeclaration>.580430"*, i64)** %.29, align 8
  %.31 = call %VarDeclaration.580351* %.30(%"Array<VarDeclaration>.580430"* %.1, i64 %storemerge3)
  %.35 = load %"Array<VarDeclaration>_vtable_ty.580439"*, %"Array<VarDeclaration>_vtable_ty.580439"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.580439", %"Array<VarDeclaration>_vtable_ty.580439"* %.35, i64 0, i32 5
  %.37 = load %VarDeclaration.580351* (%"Array<VarDeclaration>.580430"*, i64)*, %VarDeclaration.580351* (%"Array<VarDeclaration>.580430"*, i64)** %.36, align 8
  %.38 = call %VarDeclaration.580351* %.37(%"Array<VarDeclaration>.580430"* %.2, i64 %storemerge3)
  %0 = ptrtoint %VarDeclaration.580351* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %VarDeclaration.580351* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<VarDeclaration>___in__"(%"Array<VarDeclaration>.580430"* %.1, %VarDeclaration.580351* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %VarDeclaration.580351* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<VarDeclaration>_vtable_ty.580439"*, %"Array<VarDeclaration>_vtable_ty.580439"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.580439", %"Array<VarDeclaration>_vtable_ty.580439"* %.19, i64 0, i32 5
  %.21 = load %VarDeclaration.580351* (%"Array<VarDeclaration>.580430"*, i64)*, %VarDeclaration.580351* (%"Array<VarDeclaration>.580430"*, i64)** %.20, align 8
  %.22 = call %VarDeclaration.580351* %.21(%"Array<VarDeclaration>.580430"* %.1, i64 %storemerge4)
  %1 = ptrtoint %VarDeclaration.580351* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<VarDeclaration>_find"(%"Array<VarDeclaration>.580430"* nocapture readonly %.1, %VarDeclaration.580351* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 1
  %.19 = load %VarDeclaration.580351**, %VarDeclaration.580351*** %.18, align 8
  %0 = ptrtoint %VarDeclaration.580351* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %VarDeclaration.580351*, %VarDeclaration.580351** %.19, i64 %storemerge5
  %1 = bitcast %VarDeclaration.580351** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<VarDeclaration>_join"(%"Array<VarDeclaration>.580430"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.227, i64 0, i64 0), i64 15)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.227, i64 0, i64 0), i64 15)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<VarDeclaration>___as_string__"(%"Array<VarDeclaration>.580430"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.1, i64 0, i32 0
  %.7 = load %"Array<VarDeclaration>_vtable_ty.580439"*, %"Array<VarDeclaration>_vtable_ty.580439"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.580439", %"Array<VarDeclaration>_vtable_ty.580439"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<VarDeclaration>.580430"*, %string.580129*)*, %string.580129* (%"Array<VarDeclaration>.580430"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<VarDeclaration>.580430"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, ClassDeclarationNode>_constructor"(%"Bucket<string, ClassDeclarationNode>.580441"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, ClassDeclarationNode>_set"(%"Bucket<string, ClassDeclarationNode>.580441"* nocapture %.1, %string.580129* %.2, %ClassDeclarationNode.580235* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.1, i64 0, i32 2
  store %ClassDeclarationNode.580235* %.3, %ClassDeclarationNode.580235** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, ClassDeclarationNode>_constructor"(%"Map<string, ClassDeclarationNode>.580431"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, ClassDeclarationNode>.580441"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442"**
  store %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442"* @"Bucket<string, ClassDeclarationNode>_vtable_data", %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442"** %.26, align 8
  call void @"Bucket<string, ClassDeclarationNode>_constructor"(%"Bucket<string, ClassDeclarationNode>.580441"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, ClassDeclarationNode>_hash_fnc"(%"Map<string, ClassDeclarationNode>.580431"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, ClassDeclarationNode>_resize"(%"Map<string, ClassDeclarationNode>.580431"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, ClassDeclarationNode>.580441"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442"**
  store %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442"* @"Bucket<string, ClassDeclarationNode>_vtable_data", %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442"** %.45, align 8
  call void @"Bucket<string, ClassDeclarationNode>_constructor"(%"Bucket<string, ClassDeclarationNode>.580441"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, ClassDeclarationNode>_set"(%"Map<string, ClassDeclarationNode>.580431"* %.1, %string.580129* %.2, %ClassDeclarationNode.580235* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, ClassDeclarationNode>_vtable_ty.580440"*, %"Map<string, ClassDeclarationNode>_vtable_ty.580440"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.580440", %"Map<string, ClassDeclarationNode>_vtable_ty.580440"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)*, i64 (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, ClassDeclarationNode>.580431"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, ClassDeclarationNode>_vtable_ty.580440"*, %"Map<string, ClassDeclarationNode>_vtable_ty.580440"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.580440", %"Map<string, ClassDeclarationNode>_vtable_ty.580440"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, ClassDeclarationNode>.580431"*)*, void (%"Map<string, ClassDeclarationNode>.580431"*)** %.32, align 8
  call void %.33(%"Map<string, ClassDeclarationNode>.580431"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.39, i64 %.19
  %.41 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442"*, %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442", %"Bucket<string, ClassDeclarationNode>_vtable_ty.580442"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, ClassDeclarationNode>.580441"*, %string.580129*, %ClassDeclarationNode.580235*)*, void (%"Bucket<string, ClassDeclarationNode>.580441"*, %string.580129*, %ClassDeclarationNode.580235*)** %.92, align 8
  call void %.93(%"Bucket<string, ClassDeclarationNode>.580441"* %.89, %string.580129* %.2, %ClassDeclarationNode.580235* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.70, i64 %.65
  %.72 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %ClassDeclarationNode.580235* @"Map<string, ClassDeclarationNode>_get"(%"Map<string, ClassDeclarationNode>.580431"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, ClassDeclarationNode>_vtable_ty.580440"*, %"Map<string, ClassDeclarationNode>_vtable_ty.580440"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.580440", %"Map<string, ClassDeclarationNode>_vtable_ty.580440"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)*, i64 (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, ClassDeclarationNode>.580431"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.22, i64 %.17
  %.24 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.54, i64 %.48
  %.56 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %ClassDeclarationNode.580235* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.91, i64 0, i32 2
  %.93 = load %ClassDeclarationNode.580235*, %ClassDeclarationNode.580235** %.92, align 8
  ret %ClassDeclarationNode.580235* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, ClassDeclarationNode>>_constructor"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, ClassDeclarationNode>>_resize"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, ClassDeclarationNode>>_swap"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, ClassDeclarationNode>>___sl__"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, %"Bucket<string, ClassDeclarationNode>.580441"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.31, i64 %.24
  store %"Bucket<string, ClassDeclarationNode>.580441"* %.2, %"Bucket<string, ClassDeclarationNode>.580441"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, ClassDeclarationNode>>___setitem__"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* nocapture readonly %.1, i64 %.2, %"Bucket<string, ClassDeclarationNode>.580441"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.30, i64 %.2
  store %"Bucket<string, ClassDeclarationNode>.580441"* %.3, %"Bucket<string, ClassDeclarationNode>.580441"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, ClassDeclarationNode>>_append"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, %"Bucket<string, ClassDeclarationNode>.580441"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, %"Bucket<string, ClassDeclarationNode>.580441"* %.2)
  ret void
}

define %"Bucket<string, ClassDeclarationNode>.580441"* @"Array<Bucket<string, ClassDeclarationNode>>___getitem__"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.28, i64 %.2
  %.30 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.29, align 8
  ret %"Bucket<string, ClassDeclarationNode>.580441"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, ClassDeclarationNode>.580441"* null
}

define i1 @"Array<Bucket<string, ClassDeclarationNode>>___eq__"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, ClassDeclarationNode>.580441"* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64)*, %"Bucket<string, ClassDeclarationNode>.580441"* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, ClassDeclarationNode>.580441"* %.30(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, ClassDeclarationNode>.580441"* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64)*, %"Bucket<string, ClassDeclarationNode>.580441"* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, ClassDeclarationNode>.580441"* %.37(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, ClassDeclarationNode>.580441"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, ClassDeclarationNode>.580441"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, ClassDeclarationNode>>___in__"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, %"Bucket<string, ClassDeclarationNode>.580441"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, ClassDeclarationNode>.580441"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, ClassDeclarationNode>.580441"* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64)*, %"Bucket<string, ClassDeclarationNode>.580441"* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, ClassDeclarationNode>.580441"* %.21(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, ClassDeclarationNode>.580441"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, ClassDeclarationNode>>_find"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* nocapture readonly %.1, %"Bucket<string, ClassDeclarationNode>.580441"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, ClassDeclarationNode>.580441"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, ClassDeclarationNode>>_join"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.228, i64 0, i64 0), i64 37)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.228, i64 0, i64 0), i64 37)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, ClassDeclarationNode>>___as_string__"(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.580443", %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, ClassDeclarationNode>>.580443"* @"Map<string, ClassDeclarationNode>_get_buckets"(%"Map<string, ClassDeclarationNode>.580431"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, ClassDeclarationNode>>.580443"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"**
  store %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"* @"Array<Bucket<string, ClassDeclarationNode>>_vtable_data", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, ClassDeclarationNode>.580441"**, %"Bucket<string, ClassDeclarationNode>.580441"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, ClassDeclarationNode>.580441"*, align 8
  %4 = bitcast %"Bucket<string, ClassDeclarationNode>.580441"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, ClassDeclarationNode>.580441"*
  %.36 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.580441", %"Bucket<string, ClassDeclarationNode>.580441"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, ClassDeclarationNode>.580441"*, %"Bucket<string, ClassDeclarationNode>.580441"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.580444"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.580443"*, %"Bucket<string, ClassDeclarationNode>.580441"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, ClassDeclarationNode>>.580443"* %.9, %"Bucket<string, ClassDeclarationNode>.580441"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @Module_constructor(%Module.580421* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<Function>_vtable_ty.580435"**
  store %"Array<Function>_vtable_ty.580435"* @"Array<Function>_vtable_data", %"Array<Function>_vtable_ty.580435"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Module.580421, %Module.580421* %.1, i64 0, i32 6
  %3 = bitcast %"Array<Function>.580426"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.23 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.25 to %"Array<Var>_vtable_ty.580432"**
  store %"Array<Var>_vtable_ty.580432"* @"Array<Var>_vtable_data", %"Array<Var>_vtable_ty.580432"** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %4 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %4, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %5 = bitcast i8* %.31 to i64*
  store i64 0, i64* %5, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %6 = bitcast i8* %.33 to i64*
  store i64 8, i64* %6, align 8
  %.35 = getelementptr inbounds %Module.580421, %Module.580421* %.1, i64 0, i32 3
  %7 = bitcast %"Array<Var>.580423"** %.35 to i8**
  store i8* %.25, i8** %7, align 8
  %.39 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.41 to %"Array<Class>_vtable_ty.580434"**
  store %"Array<Class>_vtable_ty.580434"* @"Array<Class>_vtable_data", %"Array<Class>_vtable_ty.580434"** %.43, align 8
  %.45 = getelementptr inbounds i8, i8* %.41, i64 8
  %8 = bitcast i8* %.45 to i8**
  store i8* %.39, i8** %8, align 8
  %.47 = getelementptr inbounds i8, i8* %.41, i64 16
  %9 = bitcast i8* %.47 to i64*
  store i64 0, i64* %9, align 8
  %.49 = getelementptr inbounds i8, i8* %.41, i64 24
  %10 = bitcast i8* %.49 to i64*
  store i64 8, i64* %10, align 8
  %.51 = getelementptr inbounds %Module.580421, %Module.580421* %.1, i64 0, i32 5
  %11 = bitcast %"Array<Class>.580425"** %.51 to i8**
  store i8* %.41, i8** %11, align 8
  %.55 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.57 to %"Array<Function>_vtable_ty.580435"**
  store %"Array<Function>_vtable_ty.580435"* @"Array<Function>_vtable_data", %"Array<Function>_vtable_ty.580435"** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %12 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %12, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %13 = bitcast i8* %.63 to i64*
  store i64 0, i64* %13, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %14 = bitcast i8* %.65 to i64*
  store i64 8, i64* %14, align 8
  store i8* %.57, i8** %3, align 8
  %.71 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.73 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.75 = bitcast i8* %.73 to %"Array<Enum>_vtable_ty.580436"**
  store %"Array<Enum>_vtable_ty.580436"* @"Array<Enum>_vtable_data", %"Array<Enum>_vtable_ty.580436"** %.75, align 8
  %.77 = getelementptr inbounds i8, i8* %.73, i64 8
  %15 = bitcast i8* %.77 to i8**
  store i8* %.71, i8** %15, align 8
  %.79 = getelementptr inbounds i8, i8* %.73, i64 16
  %16 = bitcast i8* %.79 to i64*
  store i64 0, i64* %16, align 8
  %.81 = getelementptr inbounds i8, i8* %.73, i64 24
  %17 = bitcast i8* %.81 to i64*
  store i64 8, i64* %17, align 8
  %.83 = getelementptr inbounds %Module.580421, %Module.580421* %.1, i64 0, i32 7
  %18 = bitcast %"Array<Enum>.580427"** %.83 to i8**
  store i8* %.73, i8** %18, align 8
  %.87 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.89 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.91 = bitcast i8* %.89 to %"Array<Scope>_vtable_ty.580437"**
  store %"Array<Scope>_vtable_ty.580437"* @"Array<Scope>_vtable_data", %"Array<Scope>_vtable_ty.580437"** %.91, align 8
  %.93 = getelementptr inbounds i8, i8* %.89, i64 8
  %19 = bitcast i8* %.93 to i8**
  store i8* %.87, i8** %19, align 8
  %.95 = getelementptr inbounds i8, i8* %.89, i64 16
  %20 = bitcast i8* %.95 to i64*
  store i64 0, i64* %20, align 8
  %.97 = getelementptr inbounds i8, i8* %.89, i64 24
  %21 = bitcast i8* %.97 to i64*
  store i64 8, i64* %21, align 8
  %.99 = getelementptr inbounds %Module.580421, %Module.580421* %.1, i64 0, i32 8
  %22 = bitcast %"Array<Scope>.580428"** %.99 to i8**
  store i8* %.89, i8** %22, align 8
  %.103 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.105 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.105 to %"Array<ConstDeclaration>_vtable_ty.580438"**
  store %"Array<ConstDeclaration>_vtable_ty.580438"* @"Array<ConstDeclaration>_vtable_data", %"Array<ConstDeclaration>_vtable_ty.580438"** %.107, align 8
  %.109 = getelementptr inbounds i8, i8* %.105, i64 8
  %23 = bitcast i8* %.109 to i8**
  store i8* %.103, i8** %23, align 8
  %.111 = getelementptr inbounds i8, i8* %.105, i64 16
  %24 = bitcast i8* %.111 to i64*
  store i64 0, i64* %24, align 8
  %.113 = getelementptr inbounds i8, i8* %.105, i64 24
  %25 = bitcast i8* %.113 to i64*
  store i64 8, i64* %25, align 8
  %.115 = getelementptr inbounds %Module.580421, %Module.580421* %.1, i64 0, i32 9
  %26 = bitcast %"Array<ConstDeclaration>.580429"** %.115 to i8**
  store i8* %.105, i8** %26, align 8
  %.119 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.121 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.123 = bitcast i8* %.121 to %"Array<VarDeclaration>_vtable_ty.580439"**
  store %"Array<VarDeclaration>_vtable_ty.580439"* @"Array<VarDeclaration>_vtable_data", %"Array<VarDeclaration>_vtable_ty.580439"** %.123, align 8
  %.125 = getelementptr inbounds i8, i8* %.121, i64 8
  %27 = bitcast i8* %.125 to i8**
  store i8* %.119, i8** %27, align 8
  %.127 = getelementptr inbounds i8, i8* %.121, i64 16
  %28 = bitcast i8* %.127 to i64*
  store i64 0, i64* %28, align 8
  %.129 = getelementptr inbounds i8, i8* %.121, i64 24
  %29 = bitcast i8* %.129 to i64*
  store i64 8, i64* %29, align 8
  %.131 = getelementptr inbounds %Module.580421, %Module.580421* %.1, i64 0, i32 10
  %30 = bitcast %"Array<VarDeclaration>.580430"** %.131 to i8**
  store i8* %.121, i8** %30, align 8
  %.135 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.137 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.137 to %"Array<Const>_vtable_ty.580433"**
  store %"Array<Const>_vtable_ty.580433"* @"Array<Const>_vtable_data", %"Array<Const>_vtable_ty.580433"** %.139, align 8
  %.141 = getelementptr inbounds i8, i8* %.137, i64 8
  %31 = bitcast i8* %.141 to i8**
  store i8* %.135, i8** %31, align 8
  %.143 = getelementptr inbounds i8, i8* %.137, i64 16
  %32 = bitcast i8* %.143 to i64*
  store i64 0, i64* %32, align 8
  %.145 = getelementptr inbounds i8, i8* %.137, i64 24
  %33 = bitcast i8* %.145 to i64*
  store i64 8, i64* %33, align 8
  %.147 = getelementptr inbounds %Module.580421, %Module.580421* %.1, i64 0, i32 4
  %34 = bitcast %"Array<Const>.580424"** %.147 to i8**
  store i8* %.137, i8** %34, align 8
  %.150 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.151 = bitcast i8* %.150 to %"Map<string, ClassDeclarationNode>.580431"*
  %.152 = bitcast i8* %.150 to %"Map<string, ClassDeclarationNode>_vtable_ty.580440"**
  store %"Map<string, ClassDeclarationNode>_vtable_ty.580440"* @"Map<string, ClassDeclarationNode>_vtable_data", %"Map<string, ClassDeclarationNode>_vtable_ty.580440"** %.152, align 8
  call void @"Map<string, ClassDeclarationNode>_constructor"(%"Map<string, ClassDeclarationNode>.580431"* %.151)
  %.155 = getelementptr inbounds %Module.580421, %Module.580421* %.1, i64 0, i32 11
  %35 = bitcast %"Map<string, ClassDeclarationNode>.580431"** %.155 to i8**
  store i8* %.150, i8** %35, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Module>_constructor"(%"Array<Module>.580447"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 1
  %0 = bitcast %Module.580421*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Module>_resize"(%"Array<Module>.580447"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 1
  %0 = bitcast %Module.580421*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Module>_swap"(%"Array<Module>.580447"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 1
  %.12 = load %Module.580421**, %Module.580421*** %.11, align 8
  %.13 = getelementptr inbounds %Module.580421*, %Module.580421** %.12, i64 %.2
  %0 = bitcast %Module.580421** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %Module.580421*, %Module.580421** %.12, i64 %.3
  %1 = bitcast %Module.580421** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %Module.580421**, %Module.580421*** %.11, align 8
  %.33 = getelementptr inbounds %Module.580421*, %Module.580421** %.31, i64 %.3
  %2 = bitcast %Module.580421** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Module>___sl__"(%"Array<Module>.580447"* %.1, %Module.580421* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Module>.580447"*)*, void (%"Array<Module>.580447"*)** %.18, align 8
  call void %.19(%"Array<Module>.580447"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 1
  %.31 = load %Module.580421**, %Module.580421*** %.30, align 8
  %.33 = getelementptr inbounds %Module.580421*, %Module.580421** %.31, i64 %.24
  store %Module.580421* %.2, %Module.580421** %.33, align 8
  ret void
}

define void @"Array<Module>___setitem__"(%"Array<Module>.580447"* nocapture readonly %.1, i64 %.2, %Module.580421* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 1
  %.30 = load %Module.580421**, %Module.580421*** %.29, align 8
  %.32 = getelementptr inbounds %Module.580421*, %Module.580421** %.30, i64 %.2
  store %Module.580421* %.3, %Module.580421** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Module>_append"(%"Array<Module>.580447"* %.1, %Module.580421* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 0
  %.9 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Module>.580447"*, %Module.580421*)*, void (%"Array<Module>.580447"*, %Module.580421*)** %.10, align 8
  call void %.11(%"Array<Module>.580447"* %.1, %Module.580421* %.2)
  ret void
}

define %Module.580421* @"Array<Module>___getitem__"(%"Array<Module>.580447"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 1
  %.28 = load %Module.580421**, %Module.580421*** %.27, align 8
  %.29 = getelementptr inbounds %Module.580421*, %Module.580421** %.28, i64 %.2
  %.30 = load %Module.580421*, %Module.580421** %.29, align 8
  ret %Module.580421* %.30

.4.endif:                                         ; preds = %.4
  ret %Module.580421* null
}

define i1 @"Array<Module>___eq__"(%"Array<Module>.580447"* %.1, %"Array<Module>.580447"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.28, i64 0, i32 5
  %.30 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.29, align 8
  %.31 = call %Module.580421* %.30(%"Array<Module>.580447"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.35, i64 0, i32 5
  %.37 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.36, align 8
  %.38 = call %Module.580421* %.37(%"Array<Module>.580447"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Module.580421* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Module.580421* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Module>___in__"(%"Array<Module>.580447"* %.1, %Module.580421* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Module.580421* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.19, i64 0, i32 5
  %.21 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.20, align 8
  %.22 = call %Module.580421* %.21(%"Array<Module>.580447"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Module.580421* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Module>_find"(%"Array<Module>.580447"* nocapture readonly %.1, %Module.580421* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 1
  %.19 = load %Module.580421**, %Module.580421*** %.18, align 8
  %0 = ptrtoint %Module.580421* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Module.580421*, %Module.580421** %.19, i64 %storemerge5
  %1 = bitcast %Module.580421** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Module>_join"(%"Array<Module>.580447"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.229, i64 0, i64 0), i64 7)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.229, i64 0, i64 0), i64 7)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Module>___as_string__"(%"Array<Module>.580447"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.1, i64 0, i32 0
  %.7 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Module>.580447"*, %string.580129*)*, %string.580129* (%"Array<Module>.580447"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Module>.580447"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree nounwind
define void @Program_constructor(%Program.580445* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<Module>_vtable_ty.580448"**
  store %"Array<Module>_vtable_ty.580448"* @"Array<Module>_vtable_data", %"Array<Module>_vtable_ty.580448"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Program.580445, %Program.580445* %.1, i64 0, i32 1
  %3 = bitcast %"Array<Module>.580447"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  ret void
}

define %Var.580395* @get_var(%Program.580445* nocapture readonly %.1, %VarId.580331* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %VarId.580331, %VarId.580331* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %VarId.580331, %VarId.580331* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.580445, %Program.580445* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.17, i64 0, i32 5
  %.19 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.18, align 8
  %.20 = call %Module.580421* %.19(%"Array<Module>.580447"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.580421, %Module.580421* %.20, i64 0, i32 3
  %.22 = load %"Array<Var>.580423"*, %"Array<Var>.580423"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.22, i64 0, i32 0
  %.24 = load %"Array<Var>_vtable_ty.580432"*, %"Array<Var>_vtable_ty.580432"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Var>_vtable_ty.580432", %"Array<Var>_vtable_ty.580432"* %.24, i64 0, i32 5
  %.26 = load %Var.580395* (%"Array<Var>.580423"*, i64)*, %Var.580395* (%"Array<Var>.580423"*, i64)** %.25, align 8
  %.27 = call %Var.580395* %.26(%"Array<Var>.580423"* %.22, i64 %.9)
  ret %Var.580395* %.27
}

define %Const.580397* @get_const(%Program.580445* nocapture readonly %.1, %ConstId.580337* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %ConstId.580337, %ConstId.580337* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %ConstId.580337, %ConstId.580337* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.580445, %Program.580445* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.17, i64 0, i32 5
  %.19 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.18, align 8
  %.20 = call %Module.580421* %.19(%"Array<Module>.580447"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.580421, %Module.580421* %.20, i64 0, i32 4
  %.22 = load %"Array<Const>.580424"*, %"Array<Const>.580424"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.22, i64 0, i32 0
  %.24 = load %"Array<Const>_vtable_ty.580433"*, %"Array<Const>_vtable_ty.580433"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Const>_vtable_ty.580433", %"Array<Const>_vtable_ty.580433"* %.24, i64 0, i32 5
  %.26 = load %Const.580397* (%"Array<Const>.580424"*, i64)*, %Const.580397* (%"Array<Const>.580424"*, i64)** %.25, align 8
  %.27 = call %Const.580397* %.26(%"Array<Const>.580424"* %.22, i64 %.9)
  ret %Const.580397* %.27
}

define %Function.580391* @get_func(%Program.580445* nocapture readonly %.1, %VarId.580331* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %VarId.580331, %VarId.580331* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %VarId.580331, %VarId.580331* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.580445, %Program.580445* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.17, i64 0, i32 5
  %.19 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.18, align 8
  %.20 = call %Module.580421* %.19(%"Array<Module>.580447"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.580421, %Module.580421* %.20, i64 0, i32 6
  %.22 = load %"Array<Function>.580426"*, %"Array<Function>.580426"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.22, i64 0, i32 0
  %.24 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.24, i64 0, i32 5
  %.26 = load %Function.580391* (%"Array<Function>.580426"*, i64)*, %Function.580391* (%"Array<Function>.580426"*, i64)** %.25, align 8
  %.27 = call %Function.580391* %.26(%"Array<Function>.580426"* %.22, i64 %.9)
  ret %Function.580391* %.27
}

define %Scope.580363* @get_scope(%Program.580445* nocapture readonly %.1, %ScopeId.580361* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %ScopeId.580361, %ScopeId.580361* %.2, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %ScopeId.580361, %ScopeId.580361* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.580445, %Program.580445* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.17, i64 0, i32 5
  %.19 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.18, align 8
  %.20 = call %Module.580421* %.19(%"Array<Module>.580447"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.580421, %Module.580421* %.20, i64 0, i32 8
  %.22 = load %"Array<Scope>.580428"*, %"Array<Scope>.580428"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.22, i64 0, i32 0
  %.24 = load %"Array<Scope>_vtable_ty.580437"*, %"Array<Scope>_vtable_ty.580437"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Scope>_vtable_ty.580437", %"Array<Scope>_vtable_ty.580437"* %.24, i64 0, i32 5
  %.26 = load %Scope.580363* (%"Array<Scope>.580428"*, i64)*, %Scope.580363* (%"Array<Scope>.580428"*, i64)** %.25, align 8
  %.27 = call %Scope.580363* %.26(%"Array<Scope>.580428"* %.22, i64 %.9)
  ret %Scope.580363* %.27
}

define %Class.580403* @get_class(%Program.580445* nocapture readonly %.1, %ClassId.580289* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %ClassId.580289, %ClassId.580289* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %ClassId.580289, %ClassId.580289* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.580445, %Program.580445* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.17, i64 0, i32 5
  %.19 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.18, align 8
  %.20 = call %Module.580421* %.19(%"Array<Module>.580447"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.580421, %Module.580421* %.20, i64 0, i32 5
  %.22 = load %"Array<Class>.580425"*, %"Array<Class>.580425"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.22, i64 0, i32 0
  %.24 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.24, i64 0, i32 5
  %.26 = load %Class.580403* (%"Array<Class>.580425"*, i64)*, %Class.580403* (%"Array<Class>.580425"*, i64)** %.25, align 8
  %.27 = call %Class.580403* %.26(%"Array<Class>.580425"* %.22, i64 %.9)
  ret %Class.580403* %.27
}

define %ClassMethod.580401* @get_method(%Program.580445* nocapture readonly %.1, %PropId.580339* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.12 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.580287** %.12 to %ClassId.580289**
  %.131 = load %ClassId.580289*, %ClassId.580289** %0, align 8
  %.15 = call %Class.580403* @get_class(%Program.580445* %.1, %ClassId.580289* %.131)
  %.16 = getelementptr inbounds %Class.580403, %Class.580403* %.15, i64 0, i32 6
  %.17 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.17, i64 0, i32 0
  %.19 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.19, i64 0, i32 5
  %.21 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.20, align 8
  %.22 = call %ClassMethod.580401* %.21(%"Array<ClassMethod>.580406"* %.17, i64 %.9)
  ret %ClassMethod.580401* %.22
}

define %Type.580273* @get_class_prop_type(%Program.580445* nocapture readonly %.1, %PropId.580339* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.580287** %.9 to %ClassId.580289**
  %.101 = load %ClassId.580289*, %ClassId.580289** %0, align 8
  %.12 = call %Class.580403* @get_class(%Program.580445* %.1, %ClassId.580289* %.101)
  %.15 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 0
  %.20 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 3
  %.21 = load i64, i64* %.20, align 8
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %Class.580403, %Class.580403* %.12, i64 0, i32 6
  %.24 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.24, i64 0, i32 0
  %.26 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.26, i64 0, i32 5
  %.28 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.27, align 8
  %.29 = call %ClassMethod.580401* %.28(%"Array<ClassMethod>.580406"* %.24, i64 %.21)
  %.30 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.29, i64 0, i32 5
  %1 = bitcast %FunctionType.580279** %.30 to %Type.580273**
  %.312 = load %Type.580273*, %Type.580273** %1, align 8
  ret %Type.580273* %.312

.4.endif:                                         ; preds = %.4
  %.38 = getelementptr inbounds %Class.580403, %Class.580403* %.12, i64 0, i32 5
  %.39 = load %"Array<ClassField>.580405"*, %"Array<ClassField>.580405"** %.38, align 8
  %.40 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.39, i64 0, i32 0
  %.41 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.40, align 8
  %.42 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.41, i64 0, i32 5
  %.43 = load %ClassField.580399* (%"Array<ClassField>.580405"*, i64)*, %ClassField.580399* (%"Array<ClassField>.580405"*, i64)** %.42, align 8
  %.44 = call %ClassField.580399* %.43(%"Array<ClassField>.580405"* %.39, i64 %.21)
  %.45 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.44, i64 0, i32 5
  %.46 = load %Type.580273*, %Type.580273** %.45, align 8
  ret %Type.580273* %.46
}

define i64 @get_class_prop_visibility(%Program.580445* nocapture readonly %.1, %PropId.580339* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.580287** %.9 to %ClassId.580289**
  %.101 = load %ClassId.580289*, %ClassId.580289** %0, align 8
  %.12 = call %Class.580403* @get_class(%Program.580445* %.1, %ClassId.580289* %.101)
  %.15 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 0
  %.20 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 3
  %.21 = load i64, i64* %.20, align 8
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %Class.580403, %Class.580403* %.12, i64 0, i32 6
  %.24 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.24, i64 0, i32 0
  %.26 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.26, i64 0, i32 5
  %.28 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.27, align 8
  %.29 = call %ClassMethod.580401* %.28(%"Array<ClassMethod>.580406"* %.24, i64 %.21)
  %.30 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.29, i64 0, i32 3
  %.31 = load i64, i64* %.30, align 8
  ret i64 %.31

.4.endif:                                         ; preds = %.4
  %.37 = getelementptr inbounds %Class.580403, %Class.580403* %.12, i64 0, i32 5
  %.38 = load %"Array<ClassField>.580405"*, %"Array<ClassField>.580405"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.38, i64 0, i32 0
  %.40 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.40, i64 0, i32 5
  %.42 = load %ClassField.580399* (%"Array<ClassField>.580405"*, i64)*, %ClassField.580399* (%"Array<ClassField>.580405"*, i64)** %.41, align 8
  %.43 = call %ClassField.580399* %.42(%"Array<ClassField>.580405"* %.38, i64 %.21)
  %.44 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.43, i64 0, i32 3
  %.45 = load i64, i64* %.44, align 8
  ret i64 %.45
}

define i64 @get_vtable_index(%Program.580445* nocapture readonly %.1, %PropId.580339* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.580287** %.9 to %ClassId.580289**
  %.101 = load %ClassId.580289*, %ClassId.580289** %0, align 8
  %.12 = call %Class.580403* @get_class(%Program.580445* %.1, %ClassId.580289* %.101)
  %.15 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 0
  %.20 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 3
  %.21 = load i64, i64* %.20, align 8
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %Class.580403, %Class.580403* %.12, i64 0, i32 6
  %.24 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.24, i64 0, i32 0
  %.26 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.26, i64 0, i32 5
  %.28 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.27, align 8
  %.29 = call %ClassMethod.580401* %.28(%"Array<ClassMethod>.580406"* %.24, i64 %.21)
  %.30 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.29, i64 0, i32 10
  %.31 = load i64, i64* %.30, align 8
  ret i64 %.31

.4.endif:                                         ; preds = %.4
  %.37 = getelementptr inbounds %Class.580403, %Class.580403* %.12, i64 0, i32 5
  %.38 = load %"Array<ClassField>.580405"*, %"Array<ClassField>.580405"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.38, i64 0, i32 0
  %.40 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.40, i64 0, i32 5
  %.42 = load %ClassField.580399* (%"Array<ClassField>.580405"*, i64)*, %ClassField.580399* (%"Array<ClassField>.580405"*, i64)** %.41, align 8
  %.43 = call %ClassField.580399* %.42(%"Array<ClassField>.580405"* %.38, i64 %.21)
  %.44 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.43, i64 0, i32 7
  %.45 = load i64, i64* %.44, align 8
  ret i64 %.45
}

define i1 @is_class_prop_static(%Program.580445* nocapture readonly %.1, %PropId.580339* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.580287** %.9 to %ClassId.580289**
  %.101 = load %ClassId.580289*, %ClassId.580289** %0, align 8
  %.12 = call %Class.580403* @get_class(%Program.580445* %.1, %ClassId.580289* %.101)
  %.15 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 0
  %.20 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 3
  %.21 = load i64, i64* %.20, align 8
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %Class.580403, %Class.580403* %.12, i64 0, i32 6
  %.24 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.24, i64 0, i32 0
  %.26 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.26, i64 0, i32 5
  %.28 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.27, align 8
  %.29 = call %ClassMethod.580401* %.28(%"Array<ClassMethod>.580406"* %.24, i64 %.21)
  %.30 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.29, i64 0, i32 2
  %.31 = load i1, i1* %.30, align 1
  ret i1 %.31

.4.endif:                                         ; preds = %.4
  %.37 = getelementptr inbounds %Class.580403, %Class.580403* %.12, i64 0, i32 5
  %.38 = load %"Array<ClassField>.580405"*, %"Array<ClassField>.580405"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.38, i64 0, i32 0
  %.40 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.40, i64 0, i32 5
  %.42 = load %ClassField.580399* (%"Array<ClassField>.580405"*, i64)*, %ClassField.580399* (%"Array<ClassField>.580405"*, i64)** %.41, align 8
  %.43 = call %ClassField.580399* %.42(%"Array<ClassField>.580405"* %.38, i64 %.21)
  %.44 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.43, i64 0, i32 2
  %.45 = load i1, i1* %.44, align 1
  ret i1 %.45
}

define i1 @is_operator_overload_name(%string.580129* %.1) local_unnamed_addr {
.3:
  %.6 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %string.580129*
  %.7.repack = bitcast i8* %.6 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.7.repack, align 8
  %.7.repack1 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.7.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.230, i64 0, i64 0), i8** %0, align 8
  %.7.repack2 = getelementptr inbounds i8, i8* %.6, i64 16
  %1 = bitcast i8* %.7.repack2 to i64*
  store i64 6, i64* %1, align 8
  %.7.repack3 = getelementptr inbounds i8, i8* %.6, i64 24
  %2 = bitcast i8* %.7.repack3 to i64*
  store i64 6, i64* %2, align 8
  %.9 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  %.10 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.10, i64 0, i32 3
  %.12 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.11, align 8
  %.13 = call i1 %.12(%string.580129* %.1, %string.580129* %.7)
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3.endif.endif.endif.endi...endif.4.endif, %.3.endif.endif.endif.endi...endif.4, %.3.endif.endif.endif.endi...endif.3.endif.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif, %.3.endif.endif.endif.endi...endif.3, %.3.endif.endif.endif.endi...endif.2.endif.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif, %.3.endif.endif.endif.endi...endif.2, %.3.endif.endif.endif.endi...endif.1.endif.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif, %.3.endif.endif.endif.endi...endif.1, %.3.endif.endif.endif.endi...endif.endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif, %.3.endif.endif.endif.endi...endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif, %.3.endif.endif.endif, %.3.endif.endif, %.3.endif, %.3
  ret i1 true

.3.endif:                                         ; preds = %.3
  %.17 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.580129*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.18.repack, align 8
  %.18.repack4 = getelementptr inbounds i8, i8* %.17, i64 8
  %3 = bitcast i8* %.18.repack4 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.231, i64 0, i64 0), i8** %3, align 8
  %.18.repack5 = getelementptr inbounds i8, i8* %.17, i64 16
  %4 = bitcast i8* %.18.repack5 to i64*
  store i64 7, i64* %4, align 8
  %.18.repack6 = getelementptr inbounds i8, i8* %.17, i64 24
  %5 = bitcast i8* %.18.repack6 to i64*
  store i64 7, i64* %5, align 8
  %.21 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.22 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.21, i64 0, i32 3
  %.23 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.22, align 8
  %.24 = call i1 %.23(%string.580129* %.1, %string.580129* %.18)
  br i1 %.24, label %.3.if, label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif
  %.28 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %string.580129*
  %.29.repack = bitcast i8* %.28 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.29.repack, align 8
  %.29.repack7 = getelementptr inbounds i8, i8* %.28, i64 8
  %6 = bitcast i8* %.29.repack7 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.232, i64 0, i64 0), i8** %6, align 8
  %.29.repack8 = getelementptr inbounds i8, i8* %.28, i64 16
  %7 = bitcast i8* %.29.repack8 to i64*
  store i64 7, i64* %7, align 8
  %.29.repack9 = getelementptr inbounds i8, i8* %.28, i64 24
  %8 = bitcast i8* %.29.repack9 to i64*
  store i64 7, i64* %8, align 8
  %.32 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.33 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.32, i64 0, i32 3
  %.34 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.33, align 8
  %.35 = call i1 %.34(%string.580129* %.1, %string.580129* %.29)
  br i1 %.35, label %.3.if, label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.39 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.580129*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40.repack, align 8
  %.40.repack10 = getelementptr inbounds i8, i8* %.39, i64 8
  %9 = bitcast i8* %.40.repack10 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.233, i64 0, i64 0), i8** %9, align 8
  %.40.repack11 = getelementptr inbounds i8, i8* %.39, i64 16
  %10 = bitcast i8* %.40.repack11 to i64*
  store i64 7, i64* %10, align 8
  %.40.repack12 = getelementptr inbounds i8, i8* %.39, i64 24
  %11 = bitcast i8* %.40.repack12 to i64*
  store i64 7, i64* %11, align 8
  %.43 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.44 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.43, i64 0, i32 3
  %.45 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.44, align 8
  %.46 = call i1 %.45(%string.580129* %.1, %string.580129* %.40)
  br i1 %.46, label %.3.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.580129*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.51.repack, align 8
  %.51.repack13 = getelementptr inbounds i8, i8* %.50, i64 8
  %12 = bitcast i8* %.51.repack13 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.234, i64 0, i64 0), i8** %12, align 8
  %.51.repack14 = getelementptr inbounds i8, i8* %.50, i64 16
  %13 = bitcast i8* %.51.repack14 to i64*
  store i64 7, i64* %13, align 8
  %.51.repack15 = getelementptr inbounds i8, i8* %.50, i64 24
  %14 = bitcast i8* %.51.repack15 to i64*
  store i64 7, i64* %14, align 8
  %.54 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.54, i64 0, i32 3
  %.56 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.55, align 8
  %.57 = call i1 %.56(%string.580129* %.1, %string.580129* %.51)
  br i1 %.57, label %.3.if, label %.3.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif:                 ; preds = %.3.endif.endif.endif.endif
  %.61 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.580129*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.62.repack, align 8
  %.62.repack16 = getelementptr inbounds i8, i8* %.61, i64 8
  %15 = bitcast i8* %.62.repack16 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.235, i64 0, i64 0), i8** %15, align 8
  %.62.repack17 = getelementptr inbounds i8, i8* %.61, i64 16
  %16 = bitcast i8* %.62.repack17 to i64*
  store i64 6, i64* %16, align 8
  %.62.repack18 = getelementptr inbounds i8, i8* %.61, i64 24
  %17 = bitcast i8* %.62.repack18 to i64*
  store i64 6, i64* %17, align 8
  %.65 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.66 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.65, i64 0, i32 3
  %.67 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.66, align 8
  %.68 = call i1 %.67(%string.580129* %.1, %string.580129* %.62)
  br i1 %.68, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3.endif.endif.endif.endif.endif
  %.72 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.580129*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.73.repack, align 8
  %.73.repack19 = getelementptr inbounds i8, i8* %.72, i64 8
  %18 = bitcast i8* %.73.repack19 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.236, i64 0, i64 0), i8** %18, align 8
  %.73.repack20 = getelementptr inbounds i8, i8* %.72, i64 16
  %19 = bitcast i8* %.73.repack20 to i64*
  store i64 8, i64* %19, align 8
  %.73.repack21 = getelementptr inbounds i8, i8* %.72, i64 24
  %20 = bitcast i8* %.73.repack21 to i64*
  store i64 8, i64* %20, align 8
  %.76 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.77 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.76, i64 0, i32 3
  %.78 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.77, align 8
  %.79 = call i1 %.78(%string.580129* %.1, %string.580129* %.73)
  br i1 %.79, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.3.endif.endif.endif.endif.endif.endif
  %.83 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.580129*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.84.repack, align 8
  %.84.repack22 = getelementptr inbounds i8, i8* %.83, i64 8
  %21 = bitcast i8* %.84.repack22 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.237, i64 0, i64 0), i8** %21, align 8
  %.84.repack23 = getelementptr inbounds i8, i8* %.83, i64 16
  %22 = bitcast i8* %.84.repack23 to i64*
  store i64 8, i64* %22, align 8
  %.84.repack24 = getelementptr inbounds i8, i8* %.83, i64 24
  %23 = bitcast i8* %.84.repack24 to i64*
  store i64 8, i64* %23, align 8
  %.87 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.87, i64 0, i32 3
  %.89 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.88, align 8
  %.90 = call i1 %.89(%string.580129* %.1, %string.580129* %.84)
  br i1 %.90, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif
  %.94 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.95 = bitcast i8* %.94 to %string.580129*
  %.95.repack = bitcast i8* %.94 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.95.repack, align 8
  %.95.repack25 = getelementptr inbounds i8, i8* %.94, i64 8
  %24 = bitcast i8* %.95.repack25 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.238, i64 0, i64 0), i8** %24, align 8
  %.95.repack26 = getelementptr inbounds i8, i8* %.94, i64 16
  %25 = bitcast i8* %.95.repack26 to i64*
  store i64 8, i64* %25, align 8
  %.95.repack27 = getelementptr inbounds i8, i8* %.94, i64 24
  %26 = bitcast i8* %.95.repack27 to i64*
  store i64 8, i64* %26, align 8
  %.98 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.99 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.98, i64 0, i32 3
  %.100 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.99, align 8
  %.101 = call i1 %.100(%string.580129* %.1, %string.580129* %.95)
  br i1 %.101, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif
  %.105 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.106 = bitcast i8* %.105 to %string.580129*
  %.106.repack = bitcast i8* %.105 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.106.repack, align 8
  %.106.repack28 = getelementptr inbounds i8, i8* %.105, i64 8
  %27 = bitcast i8* %.106.repack28 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.239, i64 0, i64 0), i8** %27, align 8
  %.106.repack29 = getelementptr inbounds i8, i8* %.105, i64 16
  %28 = bitcast i8* %.106.repack29 to i64*
  store i64 8, i64* %28, align 8
  %.106.repack30 = getelementptr inbounds i8, i8* %.105, i64 24
  %29 = bitcast i8* %.106.repack30 to i64*
  store i64 8, i64* %29, align 8
  %.109 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.110 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.109, i64 0, i32 3
  %.111 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.110, align 8
  %.112 = call i1 %.111(%string.580129* %.1, %string.580129* %.106)
  br i1 %.112, label %.3.if, label %.3.endif.endif.endif.endi...endif

.3.endif.endif.endif.endi...endif:                ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.116 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.117 = bitcast i8* %.116 to %string.580129*
  %.117.repack = bitcast i8* %.116 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.117.repack, align 8
  %.117.repack31 = getelementptr inbounds i8, i8* %.116, i64 8
  %30 = bitcast i8* %.117.repack31 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.240, i64 0, i64 0), i8** %30, align 8
  %.117.repack32 = getelementptr inbounds i8, i8* %.116, i64 16
  %31 = bitcast i8* %.117.repack32 to i64*
  store i64 7, i64* %31, align 8
  %.117.repack33 = getelementptr inbounds i8, i8* %.116, i64 24
  %32 = bitcast i8* %.117.repack33 to i64*
  store i64 7, i64* %32, align 8
  %.120 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.121 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.120, i64 0, i32 3
  %.122 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.121, align 8
  %.123 = call i1 %.122(%string.580129* %.1, %string.580129* %.117)
  br i1 %.123, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3.endif.endif.endif.endi...endif
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.580129*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.128.repack, align 8
  %.128.repack34 = getelementptr inbounds i8, i8* %.127, i64 8
  %33 = bitcast i8* %.128.repack34 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.241, i64 0, i64 0), i8** %33, align 8
  %.128.repack35 = getelementptr inbounds i8, i8* %.127, i64 16
  %34 = bitcast i8* %.128.repack35 to i64*
  store i64 8, i64* %34, align 8
  %.128.repack36 = getelementptr inbounds i8, i8* %.127, i64 24
  %35 = bitcast i8* %.128.repack36 to i64*
  store i64 8, i64* %35, align 8
  %.131 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.132 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.131, i64 0, i32 3
  %.133 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.132, align 8
  %.134 = call i1 %.133(%string.580129* %.1, %string.580129* %.128)
  br i1 %.134, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif:    ; preds = %.3.endif.endif.endif.endi...endif.endif
  %.138 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.138 to %string.580129*
  %.139.repack = bitcast i8* %.138 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.139.repack, align 8
  %.139.repack37 = getelementptr inbounds i8, i8* %.138, i64 8
  %36 = bitcast i8* %.139.repack37 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.242, i64 0, i64 0), i8** %36, align 8
  %.139.repack38 = getelementptr inbounds i8, i8* %.138, i64 16
  %37 = bitcast i8* %.139.repack38 to i64*
  store i64 8, i64* %37, align 8
  %.139.repack39 = getelementptr inbounds i8, i8* %.138, i64 24
  %38 = bitcast i8* %.139.repack39 to i64*
  store i64 8, i64* %38, align 8
  %.142 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.143 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.142, i64 0, i32 3
  %.144 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.143, align 8
  %.145 = call i1 %.144(%string.580129* %.1, %string.580129* %.139)
  br i1 %.145, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif
  %.149 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.150 = bitcast i8* %.149 to %string.580129*
  %.150.repack = bitcast i8* %.149 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.150.repack, align 8
  %.150.repack40 = getelementptr inbounds i8, i8* %.149, i64 8
  %39 = bitcast i8* %.150.repack40 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.243, i64 0, i64 0), i8** %39, align 8
  %.150.repack41 = getelementptr inbounds i8, i8* %.149, i64 16
  %40 = bitcast i8* %.150.repack41 to i64*
  store i64 11, i64* %40, align 8
  %.150.repack42 = getelementptr inbounds i8, i8* %.149, i64 24
  %41 = bitcast i8* %.150.repack42 to i64*
  store i64 11, i64* %41, align 8
  %.153 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.154 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.153, i64 0, i32 3
  %.155 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.154, align 8
  %.156 = call i1 %.155(%string.580129* %.1, %string.580129* %.150)
  br i1 %.156, label %.3.if, label %.3.endif.endif.endif.endi...endif.1

.3.endif.endif.endif.endi...endif.1:              ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.endif
  %.160 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.580129*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.161.repack, align 8
  %.161.repack43 = getelementptr inbounds i8, i8* %.160, i64 8
  %42 = bitcast i8* %.161.repack43 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.244, i64 0, i64 0), i8** %42, align 8
  %.161.repack44 = getelementptr inbounds i8, i8* %.160, i64 16
  %43 = bitcast i8* %.161.repack44 to i64*
  store i64 11, i64* %43, align 8
  %.161.repack45 = getelementptr inbounds i8, i8* %.160, i64 24
  %44 = bitcast i8* %.161.repack45 to i64*
  store i64 11, i64* %44, align 8
  %.164 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.165 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.164, i64 0, i32 3
  %.166 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.165, align 8
  %.167 = call i1 %.166(%string.580129* %.1, %string.580129* %.161)
  br i1 %.167, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif

.3.endif.endif.endif.endi...endif.1.endif:        ; preds = %.3.endif.endif.endif.endi...endif.1
  %.171 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.172 = bitcast i8* %.171 to %string.580129*
  %.172.repack = bitcast i8* %.171 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.172.repack, align 8
  %.172.repack46 = getelementptr inbounds i8, i8* %.171, i64 8
  %45 = bitcast i8* %.172.repack46 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.245, i64 0, i64 0), i8** %45, align 8
  %.172.repack47 = getelementptr inbounds i8, i8* %.171, i64 16
  %46 = bitcast i8* %.172.repack47 to i64*
  store i64 6, i64* %46, align 8
  %.172.repack48 = getelementptr inbounds i8, i8* %.171, i64 24
  %47 = bitcast i8* %.172.repack48 to i64*
  store i64 6, i64* %47, align 8
  %.175 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.176 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.175, i64 0, i32 3
  %.177 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.176, align 8
  %.178 = call i1 %.177(%string.580129* %.1, %string.580129* %.172)
  br i1 %.178, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.1.endif
  %.182 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.183 = bitcast i8* %.182 to %string.580129*
  %.183.repack = bitcast i8* %.182 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.183.repack, align 8
  %.183.repack49 = getelementptr inbounds i8, i8* %.182, i64 8
  %48 = bitcast i8* %.183.repack49 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.246, i64 0, i64 0), i8** %48, align 8
  %.183.repack50 = getelementptr inbounds i8, i8* %.182, i64 16
  %49 = bitcast i8* %.183.repack50 to i64*
  store i64 6, i64* %49, align 8
  %.183.repack51 = getelementptr inbounds i8, i8* %.182, i64 24
  %50 = bitcast i8* %.183.repack51 to i64*
  store i64 6, i64* %50, align 8
  %.186 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.187 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.186, i64 0, i32 3
  %.188 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.187, align 8
  %.189 = call i1 %.188(%string.580129* %.1, %string.580129* %.183)
  br i1 %.189, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif
  %.193 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.194 = bitcast i8* %.193 to %string.580129*
  %.194.repack = bitcast i8* %.193 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.194.repack, align 8
  %.194.repack52 = getelementptr inbounds i8, i8* %.193, i64 8
  %51 = bitcast i8* %.194.repack52 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.247, i64 0, i64 0), i8** %51, align 8
  %.194.repack53 = getelementptr inbounds i8, i8* %.193, i64 16
  %52 = bitcast i8* %.194.repack53 to i64*
  store i64 7, i64* %52, align 8
  %.194.repack54 = getelementptr inbounds i8, i8* %.193, i64 24
  %53 = bitcast i8* %.194.repack54 to i64*
  store i64 7, i64* %53, align 8
  %.197 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.198 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.197, i64 0, i32 3
  %.199 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.198, align 8
  %.200 = call i1 %.199(%string.580129* %.1, %string.580129* %.194)
  br i1 %.200, label %.3.if, label %.3.endif.endif.endif.endi...endif.2

.3.endif.endif.endif.endi...endif.2:              ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif.endif
  %.204 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.205 = bitcast i8* %.204 to %string.580129*
  %.205.repack = bitcast i8* %.204 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.205.repack, align 8
  %.205.repack55 = getelementptr inbounds i8, i8* %.204, i64 8
  %54 = bitcast i8* %.205.repack55 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.248, i64 0, i64 0), i8** %54, align 8
  %.205.repack56 = getelementptr inbounds i8, i8* %.204, i64 16
  %55 = bitcast i8* %.205.repack56 to i64*
  store i64 7, i64* %55, align 8
  %.205.repack57 = getelementptr inbounds i8, i8* %.204, i64 24
  %56 = bitcast i8* %.205.repack57 to i64*
  store i64 7, i64* %56, align 8
  %.208 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.209 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.208, i64 0, i32 3
  %.210 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.209, align 8
  %.211 = call i1 %.210(%string.580129* %.1, %string.580129* %.205)
  br i1 %.211, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif

.3.endif.endif.endif.endi...endif.2.endif:        ; preds = %.3.endif.endif.endif.endi...endif.2
  %.215 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.216 = bitcast i8* %.215 to %string.580129*
  %.216.repack = bitcast i8* %.215 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.216.repack, align 8
  %.216.repack58 = getelementptr inbounds i8, i8* %.215, i64 8
  %57 = bitcast i8* %.216.repack58 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.249, i64 0, i64 0), i8** %57, align 8
  %.216.repack59 = getelementptr inbounds i8, i8* %.215, i64 16
  %58 = bitcast i8* %.216.repack59 to i64*
  store i64 6, i64* %58, align 8
  %.216.repack60 = getelementptr inbounds i8, i8* %.215, i64 24
  %59 = bitcast i8* %.216.repack60 to i64*
  store i64 6, i64* %59, align 8
  %.219 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.220 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.219, i64 0, i32 3
  %.221 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.220, align 8
  %.222 = call i1 %.221(%string.580129* %.1, %string.580129* %.216)
  br i1 %.222, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.2.endif
  %.226 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.227 = bitcast i8* %.226 to %string.580129*
  %.227.repack = bitcast i8* %.226 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.227.repack, align 8
  %.227.repack61 = getelementptr inbounds i8, i8* %.226, i64 8
  %60 = bitcast i8* %.227.repack61 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.250, i64 0, i64 0), i8** %60, align 8
  %.227.repack62 = getelementptr inbounds i8, i8* %.226, i64 16
  %61 = bitcast i8* %.227.repack62 to i64*
  store i64 6, i64* %61, align 8
  %.227.repack63 = getelementptr inbounds i8, i8* %.226, i64 24
  %62 = bitcast i8* %.227.repack63 to i64*
  store i64 6, i64* %62, align 8
  %.230 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.231 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.230, i64 0, i32 3
  %.232 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.231, align 8
  %.233 = call i1 %.232(%string.580129* %.1, %string.580129* %.227)
  br i1 %.233, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif
  %.237 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.238 = bitcast i8* %.237 to %string.580129*
  %.238.repack = bitcast i8* %.237 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.238.repack, align 8
  %.238.repack64 = getelementptr inbounds i8, i8* %.237, i64 8
  %63 = bitcast i8* %.238.repack64 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.251, i64 0, i64 0), i8** %63, align 8
  %.238.repack65 = getelementptr inbounds i8, i8* %.237, i64 16
  %64 = bitcast i8* %.238.repack65 to i64*
  store i64 6, i64* %64, align 8
  %.238.repack66 = getelementptr inbounds i8, i8* %.237, i64 24
  %65 = bitcast i8* %.238.repack66 to i64*
  store i64 6, i64* %65, align 8
  %.241 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.242 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.241, i64 0, i32 3
  %.243 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.242, align 8
  %.244 = call i1 %.243(%string.580129* %.1, %string.580129* %.238)
  br i1 %.244, label %.3.if, label %.3.endif.endif.endif.endi...endif.3

.3.endif.endif.endif.endi...endif.3:              ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif.endif
  %.248 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.249 = bitcast i8* %.248 to %string.580129*
  %.249.repack = bitcast i8* %.248 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.249.repack, align 8
  %.249.repack67 = getelementptr inbounds i8, i8* %.248, i64 8
  %66 = bitcast i8* %.249.repack67 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.252, i64 0, i64 0), i8** %66, align 8
  %.249.repack68 = getelementptr inbounds i8, i8* %.248, i64 16
  %67 = bitcast i8* %.249.repack68 to i64*
  store i64 6, i64* %67, align 8
  %.249.repack69 = getelementptr inbounds i8, i8* %.248, i64 24
  %68 = bitcast i8* %.249.repack69 to i64*
  store i64 6, i64* %68, align 8
  %.252 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.253 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.252, i64 0, i32 3
  %.254 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.253, align 8
  %.255 = call i1 %.254(%string.580129* %.1, %string.580129* %.249)
  br i1 %.255, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif

.3.endif.endif.endif.endi...endif.3.endif:        ; preds = %.3.endif.endif.endif.endi...endif.3
  %.259 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.260 = bitcast i8* %.259 to %string.580129*
  %.260.repack = bitcast i8* %.259 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.260.repack, align 8
  %.260.repack70 = getelementptr inbounds i8, i8* %.259, i64 8
  %69 = bitcast i8* %.260.repack70 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.253, i64 0, i64 0), i8** %69, align 8
  %.260.repack71 = getelementptr inbounds i8, i8* %.259, i64 16
  %70 = bitcast i8* %.260.repack71 to i64*
  store i64 6, i64* %70, align 8
  %.260.repack72 = getelementptr inbounds i8, i8* %.259, i64 24
  %71 = bitcast i8* %.260.repack72 to i64*
  store i64 6, i64* %71, align 8
  %.263 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.264 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.263, i64 0, i32 3
  %.265 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.264, align 8
  %.266 = call i1 %.265(%string.580129* %.1, %string.580129* %.260)
  br i1 %.266, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.3.endif
  %.270 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.271 = bitcast i8* %.270 to %string.580129*
  %.271.repack = bitcast i8* %.270 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.271.repack, align 8
  %.271.repack73 = getelementptr inbounds i8, i8* %.270, i64 8
  %72 = bitcast i8* %.271.repack73 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.254, i64 0, i64 0), i8** %72, align 8
  %.271.repack74 = getelementptr inbounds i8, i8* %.270, i64 16
  %73 = bitcast i8* %.271.repack74 to i64*
  store i64 6, i64* %73, align 8
  %.271.repack75 = getelementptr inbounds i8, i8* %.270, i64 24
  %74 = bitcast i8* %.271.repack75 to i64*
  store i64 6, i64* %74, align 8
  %.274 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.275 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.274, i64 0, i32 3
  %.276 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.275, align 8
  %.277 = call i1 %.276(%string.580129* %.1, %string.580129* %.271)
  br i1 %.277, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif
  %.281 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.282 = bitcast i8* %.281 to %string.580129*
  %.282.repack = bitcast i8* %.281 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.282.repack, align 8
  %.282.repack76 = getelementptr inbounds i8, i8* %.281, i64 8
  %75 = bitcast i8* %.282.repack76 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.255, i64 0, i64 0), i8** %75, align 8
  %.282.repack77 = getelementptr inbounds i8, i8* %.281, i64 16
  %76 = bitcast i8* %.282.repack77 to i64*
  store i64 7, i64* %76, align 8
  %.282.repack78 = getelementptr inbounds i8, i8* %.281, i64 24
  %77 = bitcast i8* %.282.repack78 to i64*
  store i64 7, i64* %77, align 8
  %.285 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.286 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.285, i64 0, i32 3
  %.287 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.286, align 8
  %.288 = call i1 %.287(%string.580129* %.1, %string.580129* %.282)
  br i1 %.288, label %.3.if, label %.3.endif.endif.endif.endi...endif.4

.3.endif.endif.endif.endi...endif.4:              ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif.endif
  %.292 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.293 = bitcast i8* %.292 to %string.580129*
  %.293.repack = bitcast i8* %.292 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.293.repack, align 8
  %.293.repack79 = getelementptr inbounds i8, i8* %.292, i64 8
  %78 = bitcast i8* %.293.repack79 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.256, i64 0, i64 0), i8** %78, align 8
  %.293.repack80 = getelementptr inbounds i8, i8* %.292, i64 16
  %79 = bitcast i8* %.293.repack80 to i64*
  store i64 7, i64* %79, align 8
  %.293.repack81 = getelementptr inbounds i8, i8* %.292, i64 24
  %80 = bitcast i8* %.293.repack81 to i64*
  store i64 7, i64* %80, align 8
  %.296 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.297 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.296, i64 0, i32 3
  %.298 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.297, align 8
  %.299 = call i1 %.298(%string.580129* %.1, %string.580129* %.293)
  br i1 %.299, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif

.3.endif.endif.endif.endi...endif.4.endif:        ; preds = %.3.endif.endif.endif.endi...endif.4
  %.303 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.304 = bitcast i8* %.303 to %string.580129*
  %.304.repack = bitcast i8* %.303 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.304.repack, align 8
  %.304.repack82 = getelementptr inbounds i8, i8* %.303, i64 8
  %81 = bitcast i8* %.304.repack82 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.257, i64 0, i64 0), i8** %81, align 8
  %.304.repack83 = getelementptr inbounds i8, i8* %.303, i64 16
  %82 = bitcast i8* %.304.repack83 to i64*
  store i64 8, i64* %82, align 8
  %.304.repack84 = getelementptr inbounds i8, i8* %.303, i64 24
  %83 = bitcast i8* %.304.repack84 to i64*
  store i64 8, i64* %83, align 8
  %.307 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.308 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.307, i64 0, i32 3
  %.309 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.308, align 8
  %.310 = call i1 %.309(%string.580129* %.1, %string.580129* %.304)
  br i1 %.310, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif.endif

.3.endif.endif.endif.endi...endif.4.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.4.endif
  %.314 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.315 = bitcast i8* %.314 to %string.580129*
  %.315.repack = bitcast i8* %.314 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.315.repack, align 8
  %.315.repack85 = getelementptr inbounds i8, i8* %.314, i64 8
  %84 = bitcast i8* %.315.repack85 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.258, i64 0, i64 0), i8** %84, align 8
  %.315.repack86 = getelementptr inbounds i8, i8* %.314, i64 16
  %85 = bitcast i8* %.315.repack86 to i64*
  store i64 8, i64* %85, align 8
  %.315.repack87 = getelementptr inbounds i8, i8* %.314, i64 24
  %86 = bitcast i8* %.315.repack87 to i64*
  store i64 8, i64* %86, align 8
  %.318 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.9, align 8
  %.319 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.318, i64 0, i32 3
  %.320 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.319, align 8
  %.321 = call i1 %.320(%string.580129* %.1, %string.580129* %.315)
  ret i1 %.321
}

; Function Attrs: nofree nounwind
define noalias %string.580129* @bin_op_to_op_overload_name(i64 %.1) local_unnamed_addr #3 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endi...endif.4.endif.endif [
    i64 0, label %.3.if
    i64 1, label %.3.endif.if
    i64 2, label %.3.endif.endif.if
    i64 3, label %.3.endif.endif.endif.if
    i64 4, label %.3.endif.endif.endif.endif.if
    i64 5, label %.3.endif.endif.endif.endif.endif.if
    i64 19, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 20, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 21, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 22, label %.3.endif.endif.endif.endi...if
    i64 23, label %.3.endif.endif.endif.endi...endif.if
    i64 24, label %.3.endif.endif.endif.endi...endif.endif.if
    i64 6, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i64 7, label %.3.endif.endif.endif.endi...if.1
    i64 8, label %.3.endif.endif.endif.endi...endif.1.if
    i64 9, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i64 10, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i64 11, label %.3.endif.endif.endif.endi...if.2
    i64 12, label %.3.endif.endif.endif.endi...endif.2.if
    i64 13, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i64 28, label %.3.endif.endif.endif.endi...endif.2.endif.endif.if
    i64 29, label %.3.endif.endif.endif.endi...if.3
    i64 14, label %.3.endif.endif.endif.endi...endif.3.if
    i64 15, label %.3.endif.endif.endif.endi...endif.3.endif.if
    i64 16, label %.3.endif.endif.endif.endi...endif.3.endif.endif.if
    i64 25, label %.3.endif.endif.endif.endi...if.4
    i64 27, label %.3.endif.endif.endif.endi...endif.4.if
    i64 17, label %.3.endif.endif.endif.endi...endif.4.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.580129*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9.repack, align 8
  %.9.repack82 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack82 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.231, i64 0, i64 0), i8** %0, align 8
  %.9.repack83 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack83 to i64*
  store i64 7, i64* %1, align 8
  %.9.repack84 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack84 to i64*
  store i64 7, i64* %2, align 8
  ret %string.580129* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.580129*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.16.repack, align 8
  %.16.repack79 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack79 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.232, i64 0, i64 0), i8** %3, align 8
  %.16.repack80 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack80 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack81 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack81 to i64*
  store i64 7, i64* %5, align 8
  ret %string.580129* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.580129*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.23.repack, align 8
  %.23.repack76 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack76 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.233, i64 0, i64 0), i8** %6, align 8
  %.23.repack77 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack77 to i64*
  store i64 7, i64* %7, align 8
  %.23.repack78 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack78 to i64*
  store i64 7, i64* %8, align 8
  ret %string.580129* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.580129*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.30.repack, align 8
  %.30.repack73 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack73 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.234, i64 0, i64 0), i8** %9, align 8
  %.30.repack74 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack74 to i64*
  store i64 7, i64* %10, align 8
  %.30.repack75 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack75 to i64*
  store i64 7, i64* %11, align 8
  ret %string.580129* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.580129*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.37.repack, align 8
  %.37.repack70 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack70 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.256, i64 0, i64 0), i8** %12, align 8
  %.37.repack71 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack71 to i64*
  store i64 7, i64* %13, align 8
  %.37.repack72 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack72 to i64*
  store i64 7, i64* %14, align 8
  ret %string.580129* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.580129*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.44.repack, align 8
  %.44.repack67 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack67 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.255, i64 0, i64 0), i8** %15, align 8
  %.44.repack68 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack68 to i64*
  store i64 7, i64* %16, align 8
  %.44.repack69 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack69 to i64*
  store i64 7, i64* %17, align 8
  ret %string.580129* %.44

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.580129*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.51.repack, align 8
  %.51.repack64 = getelementptr inbounds i8, i8* %.50, i64 8
  %18 = bitcast i8* %.51.repack64 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.236, i64 0, i64 0), i8** %18, align 8
  %.51.repack65 = getelementptr inbounds i8, i8* %.50, i64 16
  %19 = bitcast i8* %.51.repack65 to i64*
  store i64 8, i64* %19, align 8
  %.51.repack66 = getelementptr inbounds i8, i8* %.50, i64 24
  %20 = bitcast i8* %.51.repack66 to i64*
  store i64 8, i64* %20, align 8
  ret %string.580129* %.51

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.580129*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.58.repack, align 8
  %.58.repack61 = getelementptr inbounds i8, i8* %.57, i64 8
  %21 = bitcast i8* %.58.repack61 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.237, i64 0, i64 0), i8** %21, align 8
  %.58.repack62 = getelementptr inbounds i8, i8* %.57, i64 16
  %22 = bitcast i8* %.58.repack62 to i64*
  store i64 8, i64* %22, align 8
  %.58.repack63 = getelementptr inbounds i8, i8* %.57, i64 24
  %23 = bitcast i8* %.58.repack63 to i64*
  store i64 8, i64* %23, align 8
  ret %string.580129* %.58

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  %.64 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %string.580129*
  %.65.repack = bitcast i8* %.64 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.65.repack, align 8
  %.65.repack58 = getelementptr inbounds i8, i8* %.64, i64 8
  %24 = bitcast i8* %.65.repack58 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.238, i64 0, i64 0), i8** %24, align 8
  %.65.repack59 = getelementptr inbounds i8, i8* %.64, i64 16
  %25 = bitcast i8* %.65.repack59 to i64*
  store i64 8, i64* %25, align 8
  %.65.repack60 = getelementptr inbounds i8, i8* %.64, i64 24
  %26 = bitcast i8* %.65.repack60 to i64*
  store i64 8, i64* %26, align 8
  ret %string.580129* %.65

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  %.71 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %string.580129*
  %.72.repack = bitcast i8* %.71 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.72.repack, align 8
  %.72.repack55 = getelementptr inbounds i8, i8* %.71, i64 8
  %27 = bitcast i8* %.72.repack55 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.239, i64 0, i64 0), i8** %27, align 8
  %.72.repack56 = getelementptr inbounds i8, i8* %.71, i64 16
  %28 = bitcast i8* %.72.repack56 to i64*
  store i64 8, i64* %28, align 8
  %.72.repack57 = getelementptr inbounds i8, i8* %.71, i64 24
  %29 = bitcast i8* %.72.repack57 to i64*
  store i64 8, i64* %29, align 8
  ret %string.580129* %.72

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  %.78 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.580129*
  %.79.repack = bitcast i8* %.78 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.79.repack, align 8
  %.79.repack52 = getelementptr inbounds i8, i8* %.78, i64 8
  %30 = bitcast i8* %.79.repack52 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.258, i64 0, i64 0), i8** %30, align 8
  %.79.repack53 = getelementptr inbounds i8, i8* %.78, i64 16
  %31 = bitcast i8* %.79.repack53 to i64*
  store i64 8, i64* %31, align 8
  %.79.repack54 = getelementptr inbounds i8, i8* %.78, i64 24
  %32 = bitcast i8* %.79.repack54 to i64*
  store i64 8, i64* %32, align 8
  ret %string.580129* %.79

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3
  %.85 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.580129*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.86.repack, align 8
  %.86.repack49 = getelementptr inbounds i8, i8* %.85, i64 8
  %33 = bitcast i8* %.86.repack49 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.257, i64 0, i64 0), i8** %33, align 8
  %.86.repack50 = getelementptr inbounds i8, i8* %.85, i64 16
  %34 = bitcast i8* %.86.repack50 to i64*
  store i64 8, i64* %34, align 8
  %.86.repack51 = getelementptr inbounds i8, i8* %.85, i64 24
  %35 = bitcast i8* %.86.repack51 to i64*
  store i64 8, i64* %35, align 8
  ret %string.580129* %.86

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3
  %.92 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.580129*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.93.repack, align 8
  %.93.repack46 = getelementptr inbounds i8, i8* %.92, i64 8
  %36 = bitcast i8* %.93.repack46 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.259, i64 0, i64 0), i8** %36, align 8
  %.93.repack47 = getelementptr inbounds i8, i8* %.92, i64 16
  %37 = bitcast i8* %.93.repack47 to i64*
  store i64 6, i64* %37, align 8
  %.93.repack48 = getelementptr inbounds i8, i8* %.92, i64 24
  %38 = bitcast i8* %.93.repack48 to i64*
  store i64 6, i64* %38, align 8
  ret %string.580129* %.93

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3
  %.99 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.580129*
  %.100.repack = bitcast i8* %.99 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.100.repack, align 8
  %.100.repack43 = getelementptr inbounds i8, i8* %.99, i64 8
  %39 = bitcast i8* %.100.repack43 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.254, i64 0, i64 0), i8** %39, align 8
  %.100.repack44 = getelementptr inbounds i8, i8* %.99, i64 16
  %40 = bitcast i8* %.100.repack44 to i64*
  store i64 6, i64* %40, align 8
  %.100.repack45 = getelementptr inbounds i8, i8* %.99, i64 24
  %41 = bitcast i8* %.100.repack45 to i64*
  store i64 6, i64* %41, align 8
  ret %string.580129* %.100

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3
  %.106 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.580129*
  %.107.repack = bitcast i8* %.106 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.107.repack, align 8
  %.107.repack40 = getelementptr inbounds i8, i8* %.106, i64 8
  %42 = bitcast i8* %.107.repack40 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.250, i64 0, i64 0), i8** %42, align 8
  %.107.repack41 = getelementptr inbounds i8, i8* %.106, i64 16
  %43 = bitcast i8* %.107.repack41 to i64*
  store i64 6, i64* %43, align 8
  %.107.repack42 = getelementptr inbounds i8, i8* %.106, i64 24
  %44 = bitcast i8* %.107.repack42 to i64*
  store i64 6, i64* %44, align 8
  ret %string.580129* %.107

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.580129*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.114.repack, align 8
  %.114.repack37 = getelementptr inbounds i8, i8* %.113, i64 8
  %45 = bitcast i8* %.114.repack37 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.253, i64 0, i64 0), i8** %45, align 8
  %.114.repack38 = getelementptr inbounds i8, i8* %.113, i64 16
  %46 = bitcast i8* %.114.repack38 to i64*
  store i64 6, i64* %46, align 8
  %.114.repack39 = getelementptr inbounds i8, i8* %.113, i64 24
  %47 = bitcast i8* %.114.repack39 to i64*
  store i64 6, i64* %47, align 8
  ret %string.580129* %.114

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3
  %.120 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.580129*
  %.121.repack = bitcast i8* %.120 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.121.repack, align 8
  %.121.repack34 = getelementptr inbounds i8, i8* %.120, i64 8
  %48 = bitcast i8* %.121.repack34 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.230, i64 0, i64 0), i8** %48, align 8
  %.121.repack35 = getelementptr inbounds i8, i8* %.120, i64 16
  %49 = bitcast i8* %.121.repack35 to i64*
  store i64 6, i64* %49, align 8
  %.121.repack36 = getelementptr inbounds i8, i8* %.120, i64 24
  %50 = bitcast i8* %.121.repack36 to i64*
  store i64 6, i64* %50, align 8
  ret %string.580129* %.121

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.580129*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.128.repack, align 8
  %.128.repack31 = getelementptr inbounds i8, i8* %.127, i64 8
  %51 = bitcast i8* %.128.repack31 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.252, i64 0, i64 0), i8** %51, align 8
  %.128.repack32 = getelementptr inbounds i8, i8* %.127, i64 16
  %52 = bitcast i8* %.128.repack32 to i64*
  store i64 6, i64* %52, align 8
  %.128.repack33 = getelementptr inbounds i8, i8* %.127, i64 24
  %53 = bitcast i8* %.128.repack33 to i64*
  store i64 6, i64* %53, align 8
  ret %string.580129* %.128

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3
  %.134 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %string.580129*
  %.135.repack = bitcast i8* %.134 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.135.repack, align 8
  %.135.repack28 = getelementptr inbounds i8, i8* %.134, i64 8
  %54 = bitcast i8* %.135.repack28 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.245, i64 0, i64 0), i8** %54, align 8
  %.135.repack29 = getelementptr inbounds i8, i8* %.134, i64 16
  %55 = bitcast i8* %.135.repack29 to i64*
  store i64 6, i64* %55, align 8
  %.135.repack30 = getelementptr inbounds i8, i8* %.134, i64 24
  %56 = bitcast i8* %.135.repack30 to i64*
  store i64 6, i64* %56, align 8
  ret %string.580129* %.135

.3.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.3
  %.141 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.142 = bitcast i8* %.141 to %string.580129*
  %.142.repack = bitcast i8* %.141 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.142.repack, align 8
  %.142.repack25 = getelementptr inbounds i8, i8* %.141, i64 8
  %57 = bitcast i8* %.142.repack25 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.246, i64 0, i64 0), i8** %57, align 8
  %.142.repack26 = getelementptr inbounds i8, i8* %.141, i64 16
  %58 = bitcast i8* %.142.repack26 to i64*
  store i64 6, i64* %58, align 8
  %.142.repack27 = getelementptr inbounds i8, i8* %.141, i64 24
  %59 = bitcast i8* %.142.repack27 to i64*
  store i64 6, i64* %59, align 8
  ret %string.580129* %.142

.3.endif.endif.endif.endi...endif.2.endif.endif.if: ; preds = %.3
  %.148 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.149 = bitcast i8* %.148 to %string.580129*
  %.149.repack = bitcast i8* %.148 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.149.repack, align 8
  %.149.repack22 = getelementptr inbounds i8, i8* %.148, i64 8
  %60 = bitcast i8* %.149.repack22 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.247, i64 0, i64 0), i8** %60, align 8
  %.149.repack23 = getelementptr inbounds i8, i8* %.148, i64 16
  %61 = bitcast i8* %.149.repack23 to i64*
  store i64 7, i64* %61, align 8
  %.149.repack24 = getelementptr inbounds i8, i8* %.148, i64 24
  %62 = bitcast i8* %.149.repack24 to i64*
  store i64 7, i64* %62, align 8
  ret %string.580129* %.149

.3.endif.endif.endif.endi...if.3:                 ; preds = %.3
  %.155 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.156 = bitcast i8* %.155 to %string.580129*
  %.156.repack = bitcast i8* %.155 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.156.repack, align 8
  %.156.repack19 = getelementptr inbounds i8, i8* %.155, i64 8
  %63 = bitcast i8* %.156.repack19 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.248, i64 0, i64 0), i8** %63, align 8
  %.156.repack20 = getelementptr inbounds i8, i8* %.155, i64 16
  %64 = bitcast i8* %.156.repack20 to i64*
  store i64 7, i64* %64, align 8
  %.156.repack21 = getelementptr inbounds i8, i8* %.155, i64 24
  %65 = bitcast i8* %.156.repack21 to i64*
  store i64 7, i64* %65, align 8
  ret %string.580129* %.156

.3.endif.endif.endif.endi...endif.3.if:           ; preds = %.3
  %.162 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.162 to %string.580129*
  %.163.repack = bitcast i8* %.162 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.163.repack, align 8
  %.163.repack16 = getelementptr inbounds i8, i8* %.162, i64 8
  %66 = bitcast i8* %.163.repack16 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.235, i64 0, i64 0), i8** %66, align 8
  %.163.repack17 = getelementptr inbounds i8, i8* %.162, i64 16
  %67 = bitcast i8* %.163.repack17 to i64*
  store i64 6, i64* %67, align 8
  %.163.repack18 = getelementptr inbounds i8, i8* %.162, i64 24
  %68 = bitcast i8* %.163.repack18 to i64*
  store i64 6, i64* %68, align 8
  ret %string.580129* %.163

.3.endif.endif.endif.endi...endif.3.endif.if:     ; preds = %.3
  %.169 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.580129*
  %.170.repack = bitcast i8* %.169 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.170.repack, align 8
  %.170.repack13 = getelementptr inbounds i8, i8* %.169, i64 8
  %69 = bitcast i8* %.170.repack13 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.260, i64 0, i64 0), i8** %69, align 8
  %.170.repack14 = getelementptr inbounds i8, i8* %.169, i64 16
  %70 = bitcast i8* %.170.repack14 to i64*
  store i64 7, i64* %70, align 8
  %.170.repack15 = getelementptr inbounds i8, i8* %.169, i64 24
  %71 = bitcast i8* %.170.repack15 to i64*
  store i64 7, i64* %71, align 8
  ret %string.580129* %.170

.3.endif.endif.endif.endi...endif.3.endif.endif.if: ; preds = %.3
  %.176 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.177 = bitcast i8* %.176 to %string.580129*
  %.177.repack = bitcast i8* %.176 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.177.repack, align 8
  %.177.repack10 = getelementptr inbounds i8, i8* %.176, i64 8
  %72 = bitcast i8* %.177.repack10 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.261, i64 0, i64 0), i8** %72, align 8
  %.177.repack11 = getelementptr inbounds i8, i8* %.176, i64 16
  %73 = bitcast i8* %.177.repack11 to i64*
  store i64 7, i64* %73, align 8
  %.177.repack12 = getelementptr inbounds i8, i8* %.176, i64 24
  %74 = bitcast i8* %.177.repack12 to i64*
  store i64 7, i64* %74, align 8
  ret %string.580129* %.177

.3.endif.endif.endif.endi...if.4:                 ; preds = %.3
  %.183 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.184 = bitcast i8* %.183 to %string.580129*
  %.184.repack = bitcast i8* %.183 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.184.repack, align 8
  %.184.repack7 = getelementptr inbounds i8, i8* %.183, i64 8
  %75 = bitcast i8* %.184.repack7 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.241, i64 0, i64 0), i8** %75, align 8
  %.184.repack8 = getelementptr inbounds i8, i8* %.183, i64 16
  %76 = bitcast i8* %.184.repack8 to i64*
  store i64 8, i64* %76, align 8
  %.184.repack9 = getelementptr inbounds i8, i8* %.183, i64 24
  %77 = bitcast i8* %.184.repack9 to i64*
  store i64 8, i64* %77, align 8
  ret %string.580129* %.184

.3.endif.endif.endif.endi...endif.4.if:           ; preds = %.3
  %.190 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.191 = bitcast i8* %.190 to %string.580129*
  %.191.repack = bitcast i8* %.190 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.191.repack, align 8
  %.191.repack4 = getelementptr inbounds i8, i8* %.190, i64 8
  %78 = bitcast i8* %.191.repack4 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.242, i64 0, i64 0), i8** %78, align 8
  %.191.repack5 = getelementptr inbounds i8, i8* %.190, i64 16
  %79 = bitcast i8* %.191.repack5 to i64*
  store i64 8, i64* %79, align 8
  %.191.repack6 = getelementptr inbounds i8, i8* %.190, i64 24
  %80 = bitcast i8* %.191.repack6 to i64*
  store i64 8, i64* %80, align 8
  ret %string.580129* %.191

.3.endif.endif.endif.endi...endif.4.endif.if:     ; preds = %.3
  %.197 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.198 = bitcast i8* %.197 to %string.580129*
  %.198.repack = bitcast i8* %.197 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.198.repack, align 8
  %.198.repack1 = getelementptr inbounds i8, i8* %.197, i64 8
  %81 = bitcast i8* %.198.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.249, i64 0, i64 0), i8** %81, align 8
  %.198.repack2 = getelementptr inbounds i8, i8* %.197, i64 16
  %82 = bitcast i8* %.198.repack2 to i64*
  store i64 6, i64* %82, align 8
  %.198.repack3 = getelementptr inbounds i8, i8* %.197, i64 24
  %83 = bitcast i8* %.198.repack3 to i64*
  store i64 6, i64* %83, align 8
  ret %string.580129* %.198

.3.endif.endif.endif.endi...endif.4.endif.endif:  ; preds = %.3
  ret %string.580129* null
}

define i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif [
    i64 0, label %.4.if
    i64 1, label %.4.endif.if
    i64 8, label %.4.endif.endif.if
    i64 9, label %.4.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %.14 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %0 = bitcast %Expression.580293* %.14 to i64*
  %.15 = load i64, i64* %0, align 8
  ret i64 %.15

.4.endif.if:                                      ; preds = %.4
  %.24 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %1 = bitcast %Expression.580293* %.24 to double*
  %.25 = load double, double* %1, align 8
  %.26 = fptosi double %.25 to i64
  ret i64 %.26

.4.endif.endif.if:                                ; preds = %.4
  %bin_exp = alloca %BinaryExpression.580317*, align 8
  %2 = bitcast %BinaryExpression.580317** %bin_exp to %Expression.580293**
  store %Expression.580293* %.2, %Expression.580293** %2, align 8
  %3 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1, i32 1
  %.38 = load i64, i64* %3, align 8
  %.39 = icmp eq i64 %.38, 0
  br i1 %.39, label %.4.endif.endif.if.if, label %.4.endif.endif.if.endif

.4.endif.endif.endif:                             ; preds = %.4.endif.endif.if.endif
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif [
    i64 9, label %.4.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.if
  ]

.4.endif.endif.if.if:                             ; preds = %.4.endif.endif.if
  %.43 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %4 = bitcast %Expression.580293* %.43 to %Expression.580293**
  %.44 = load %Expression.580293*, %Expression.580293** %4, align 8
  %.45 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.44)
  %.47 = load %BinaryExpression.580317*, %BinaryExpression.580317** %bin_exp, align 8
  %.48 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.47, i64 0, i32 7
  %.49 = load %Expression.580293*, %Expression.580293** %.48, align 8
  %.50 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.49)
  %.51 = add i64 %.50, %.45
  ret i64 %.51

.4.endif.endif.if.endif:                          ; preds = %.4.endif.endif.if
  %5 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1, i32 1
  %.55 = load i64, i64* %5, align 8
  switch i64 %.55, label %.4.endif.endif.endif [
    i64 1, label %.4.endif.endif.if.endif.if
    i64 2, label %.4.endif.endif.if.endif.endif.if
    i64 3, label %.4.endif.endif.if.endif.endif.endif.if
    i64 4, label %.4.endif.endif.if.endif.endif.endif.endif.if
    i64 12, label %.4.endif.endif.if.endif.endif.endif.endif.endif.if
    i64 13, label %.4.endif.endif.if.endif.e...if
    i64 14, label %.4.endif.endif.if.endif.e...endif.if
    i64 15, label %.4.endif.endif.if.endif.e...endif.endif.if
    i64 16, label %.4.endif.endif.if.endif.e...endif.endif.endif.if
  ]

.4.endif.endif.if.endif.if:                       ; preds = %.4.endif.endif.if.endif
  %.60 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %6 = bitcast %Expression.580293* %.60 to %Expression.580293**
  %.61 = load %Expression.580293*, %Expression.580293** %6, align 8
  %.62 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.61)
  %.64 = load %BinaryExpression.580317*, %BinaryExpression.580317** %bin_exp, align 8
  %.65 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.64, i64 0, i32 7
  %.66 = load %Expression.580293*, %Expression.580293** %.65, align 8
  %.67 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.66)
  %.68 = sub i64 %.62, %.67
  ret i64 %.68

.4.endif.endif.if.endif.endif.if:                 ; preds = %.4.endif.endif.if.endif
  %.77 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %7 = bitcast %Expression.580293* %.77 to %Expression.580293**
  %.78 = load %Expression.580293*, %Expression.580293** %7, align 8
  %.79 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.78)
  %.81 = load %BinaryExpression.580317*, %BinaryExpression.580317** %bin_exp, align 8
  %.82 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.81, i64 0, i32 7
  %.83 = load %Expression.580293*, %Expression.580293** %.82, align 8
  %.84 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.83)
  %.85 = mul i64 %.84, %.79
  ret i64 %.85

.4.endif.endif.if.endif.endif.endif.if:           ; preds = %.4.endif.endif.if.endif
  %.94 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %8 = bitcast %Expression.580293* %.94 to %Expression.580293**
  %.95 = load %Expression.580293*, %Expression.580293** %8, align 8
  %.96 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.95)
  %.98 = load %BinaryExpression.580317*, %BinaryExpression.580317** %bin_exp, align 8
  %.99 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.98, i64 0, i32 7
  %.100 = load %Expression.580293*, %Expression.580293** %.99, align 8
  %.101 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.100)
  %.102 = sdiv i64 %.96, %.101
  ret i64 %.102

.4.endif.endif.if.endif.endif.endif.endif.if:     ; preds = %.4.endif.endif.if.endif
  %.111 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %9 = bitcast %Expression.580293* %.111 to %Expression.580293**
  %.112 = load %Expression.580293*, %Expression.580293** %9, align 8
  %.113 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.112)
  %.115 = load %BinaryExpression.580317*, %BinaryExpression.580317** %bin_exp, align 8
  %.116 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.115, i64 0, i32 7
  %.117 = load %Expression.580293*, %Expression.580293** %.116, align 8
  %.118 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.117)
  %.119 = srem i64 %.113, %.118
  ret i64 %.119

.4.endif.endif.if.endif.endif.endif.endif.endif.if: ; preds = %.4.endif.endif.if.endif
  %.128 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %10 = bitcast %Expression.580293* %.128 to %Expression.580293**
  %.129 = load %Expression.580293*, %Expression.580293** %10, align 8
  %.130 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.129)
  %.132 = load %BinaryExpression.580317*, %BinaryExpression.580317** %bin_exp, align 8
  %.133 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.132, i64 0, i32 7
  %.134 = load %Expression.580293*, %Expression.580293** %.133, align 8
  %.135 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.134)
  %.136 = shl i64 %.130, %.135
  ret i64 %.136

.4.endif.endif.if.endif.e...if:                   ; preds = %.4.endif.endif.if.endif
  %.145 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %11 = bitcast %Expression.580293* %.145 to %Expression.580293**
  %.146 = load %Expression.580293*, %Expression.580293** %11, align 8
  %.147 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.146)
  %.149 = load %BinaryExpression.580317*, %BinaryExpression.580317** %bin_exp, align 8
  %.150 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.149, i64 0, i32 7
  %.151 = load %Expression.580293*, %Expression.580293** %.150, align 8
  %.152 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.151)
  %.153 = ashr i64 %.147, %.152
  ret i64 %.153

.4.endif.endif.if.endif.e...endif.if:             ; preds = %.4.endif.endif.if.endif
  %.162 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %12 = bitcast %Expression.580293* %.162 to %Expression.580293**
  %.163 = load %Expression.580293*, %Expression.580293** %12, align 8
  %.164 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.163)
  %.166 = load %BinaryExpression.580317*, %BinaryExpression.580317** %bin_exp, align 8
  %.167 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.166, i64 0, i32 7
  %.168 = load %Expression.580293*, %Expression.580293** %.167, align 8
  %.169 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.168)
  %.170 = or i64 %.169, %.164
  ret i64 %.170

.4.endif.endif.if.endif.e...endif.endif.if:       ; preds = %.4.endif.endif.if.endif
  %.179 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %13 = bitcast %Expression.580293* %.179 to %Expression.580293**
  %.180 = load %Expression.580293*, %Expression.580293** %13, align 8
  %.181 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.180)
  %.183 = load %BinaryExpression.580317*, %BinaryExpression.580317** %bin_exp, align 8
  %.184 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.183, i64 0, i32 7
  %.185 = load %Expression.580293*, %Expression.580293** %.184, align 8
  %.186 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.185)
  %.187 = and i64 %.186, %.181
  ret i64 %.187

.4.endif.endif.if.endif.e...endif.endif.endif.if: ; preds = %.4.endif.endif.if.endif
  %.196 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %14 = bitcast %Expression.580293* %.196 to %Expression.580293**
  %.197 = load %Expression.580293*, %Expression.580293** %14, align 8
  %.198 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.197)
  %.200 = load %BinaryExpression.580317*, %BinaryExpression.580317** %bin_exp, align 8
  %.201 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.200, i64 0, i32 7
  %.202 = load %Expression.580293*, %Expression.580293** %.201, align 8
  %.203 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.202)
  %.204 = xor i64 %.203, %.198
  ret i64 %.204

.4.endif.endif.endif.if:                          ; preds = %.4, %.4.endif.endif.endif
  %.216 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %15 = bitcast %Expression.580293* %.216 to i64*
  %.217 = load i64, i64* %15, align 8
  %.218 = icmp eq i64 %.217, 4
  br i1 %.218, label %.4.endif.endif.endif.if.if, label %.4.endif.endif.endif.if.endif

.4.endif.endif.endif.endif:                       ; preds = %.4.endif.endif.endif.if.endif
  %.243 = icmp eq i64 %.9, 7
  br i1 %.243, label %.4.endif.endif.endif.endif.if, label %.4.endif.endif.endif.endif.endif

.4.endif.endif.endif.if.if:                       ; preds = %.4.endif.endif.endif.if
  %.222 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1, i32 1
  %16 = bitcast i64* %.222 to %Expression.580293**
  %.223 = load %Expression.580293*, %Expression.580293** %16, align 8
  %.224 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.223)
  %.225 = sub i64 0, %.224
  ret i64 %.225

.4.endif.endif.endif.if.endif:                    ; preds = %.4.endif.endif.endif.if
  %.228 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %17 = bitcast %Expression.580293* %.228 to i64*
  %.229 = load i64, i64* %17, align 8
  %.230 = icmp eq i64 %.229, 5
  br i1 %.230, label %.4.endif.endif.endif.if.endif.if, label %.4.endif.endif.endif.endif

.4.endif.endif.endif.if.endif.if:                 ; preds = %.4.endif.endif.endif.if.endif
  %.234 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1, i32 1
  %18 = bitcast i64* %.234 to %Expression.580293**
  %.235 = load %Expression.580293*, %Expression.580293** %18, align 8
  %.236 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.235)
  %.237 = xor i64 %.236, -1
  ret i64 %.237

.4.endif.endif.endif.endif.if:                    ; preds = %.4, %.4.endif.endif.endif, %.4.endif.endif.endif.endif
  %.251 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %19 = bitcast %Expression.580293* %.251 to %ConstId.580337**
  %.2521 = load %ConstId.580337*, %ConstId.580337** %19, align 8
  %.254 = call %Const.580397* @get_const(%Program.580445* %.1, %ConstId.580337* %.2521)
  %.255 = getelementptr inbounds %Const.580397, %Const.580397* %.254, i64 0, i32 3
  %.256 = load %Expression.580293*, %Expression.580293** %.255, align 8
  %.257 = call i64 @evaluate_const_int_expression(%Program.580445* %.1, %Expression.580293* %.256)
  ret i64 %.257

.4.endif.endif.endif.endif.endif:                 ; preds = %.4, %.4.endif.endif.endif, %.4.endif.endif.endif.endif
  ret i64 -99999999
}

; Function Attrs: nofree nounwind
define void @TypeChecker_constructor(%TypeChecker.580449* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 2
  store i64 -1, i64* %.7, align 8
  %.10 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 9
  store i1 false, i1* %.10, align 1
  %.13 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.14 = bitcast i8* %.13 to %Program.580445*
  %.15 = bitcast i8* %.13 to %Program_vtable_ty.580446**
  store %Program_vtable_ty.580446* @Program_vtable_data, %Program_vtable_ty.580446** %.15, align 8
  call void @Program_constructor(%Program.580445* %.14)
  %.21 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %0 = bitcast %Program.580445** %.21 to i8**
  store i8* %.13, i8** %0, align 8
  ret void
}

define %Module.580421* @TypeChecker_get_current_module(%TypeChecker.580449* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.10 = load %Program.580445*, %Program.580445** %.9, align 8
  %.11 = getelementptr inbounds %Program.580445, %Program.580445* %.10, i64 0, i32 1
  %.12 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.11, align 8
  %.13 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.12, i64 0, i32 0
  %.14 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.13, align 8
  %.15 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.14, i64 0, i32 5
  %.16 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.15, align 8
  %.17 = call %Module.580421* %.16(%"Array<Module>.580447"* %.12, i64 %.7)
  ret %Module.580421* %.17
}

define %Scope.580363* @TypeChecker_get_current_scope(%TypeChecker.580449* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.7 = load %Program.580445*, %Program.580445** %.6, align 8
  %.9 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 6
  %.10 = load %ScopeId.580361*, %ScopeId.580361** %.9, align 8
  %.11 = call %Scope.580363* @get_scope(%Program.580445* %.7, %ScopeId.580361* %.10)
  ret %Scope.580363* %.11
}

define %Scope.580363* @TypeChecker_get_module_scope(%TypeChecker.580449* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.7, i64 0, i32 0
  %.9 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.8, align 8
  %.10 = call %Module.580421* %.9(%TypeChecker.580449* %.1)
  %.11 = getelementptr inbounds %Module.580421, %Module.580421* %.10, i64 0, i32 8
  %.12 = load %"Array<Scope>.580428"*, %"Array<Scope>.580428"** %.11, align 8
  %.13 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.12, i64 0, i32 0
  %.14 = load %"Array<Scope>_vtable_ty.580437"*, %"Array<Scope>_vtable_ty.580437"** %.13, align 8
  %.15 = getelementptr inbounds %"Array<Scope>_vtable_ty.580437", %"Array<Scope>_vtable_ty.580437"* %.14, i64 0, i32 5
  %.16 = load %Scope.580363* (%"Array<Scope>.580428"*, i64)*, %Scope.580363* (%"Array<Scope>.580428"*, i64)** %.15, align 8
  %.17 = call %Scope.580363* %.16(%"Array<Scope>.580428"* %.12, i64 0)
  ret %Scope.580363* %.17
}

define %Function.580391* @TypeChecker_get_current_function(%TypeChecker.580449* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 4
  %.7 = load %VarId.580331*, %VarId.580331** %.6, align 8
  %.8 = getelementptr inbounds %VarId.580331, %VarId.580331* %.7, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.12 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.11, align 8
  %.13 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.12, i64 0, i32 0
  %.14 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.13, align 8
  %.15 = call %Module.580421* %.14(%TypeChecker.580449* %.1)
  %.16 = getelementptr inbounds %Module.580421, %Module.580421* %.15, i64 0, i32 6
  %.17 = load %"Array<Function>.580426"*, %"Array<Function>.580426"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.17, i64 0, i32 0
  %.19 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.19, i64 0, i32 5
  %.21 = load %Function.580391* (%"Array<Function>.580426"*, i64)*, %Function.580391* (%"Array<Function>.580426"*, i64)** %.20, align 8
  %.22 = call %Function.580391* %.21(%"Array<Function>.580426"* %.17, i64 %.9)
  ret %Function.580391* %.22
}

define %FunctionType.580279* @TypeChecker_get_current_function_type(%TypeChecker.580449* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 5
  %0 = bitcast %PropId.580339** %.6 to i64*
  %.71 = load i64, i64* %0, align 8
  %.8 = trunc i64 %.71 to i32
  %.10.not = icmp eq i32 %.8, 0
  br i1 %.10.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.14 = load %PropId.580339*, %PropId.580339** %.6, align 8
  %.15 = getelementptr inbounds %PropId.580339, %PropId.580339* %.14, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.18 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.19 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.18, align 8
  %.20 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.19, i64 0, i32 5
  %.21 = load %Class.580403* (%TypeChecker.580449*)*, %Class.580403* (%TypeChecker.580449*)** %.20, align 8
  %.22 = call %Class.580403* %.21(%TypeChecker.580449* %.1)
  %.23 = getelementptr inbounds %Class.580403, %Class.580403* %.22, i64 0, i32 6
  %.24 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.24, i64 0, i32 0
  %.26 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.26, i64 0, i32 5
  %.28 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.27, align 8
  %.29 = call %ClassMethod.580401* %.28(%"Array<ClassMethod>.580406"* %.24, i64 %.16)
  %.30 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.29, i64 0, i32 5
  %.31 = load %FunctionType.580279*, %FunctionType.580279** %.30, align 8
  ret %FunctionType.580279* %.31

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.35 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.34, align 8
  %.36 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.35, i64 0, i32 3
  %.37 = load %Function.580391* (%TypeChecker.580449*)*, %Function.580391* (%TypeChecker.580449*)** %.36, align 8
  %.38 = call %Function.580391* %.37(%TypeChecker.580449* %.1)
  %.39 = getelementptr inbounds %Function.580391, %Function.580391* %.38, i64 0, i32 5
  %.40 = load %FunctionType.580279*, %FunctionType.580279** %.39, align 8
  ret %FunctionType.580279* %.40
}

define %Class.580403* @TypeChecker_get_current_class(%TypeChecker.580449* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.7 = load %Program.580445*, %Program.580445** %.6, align 8
  %.9 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 3
  %.10 = load %ClassId.580289*, %ClassId.580289** %.9, align 8
  %.11 = call %Class.580403* @get_class(%Program.580445* %.7, %ClassId.580289* %.10)
  ret %Class.580403* %.11
}

define %Class.580403* @TypeChecker_get_class_from_var_id(%TypeChecker.580449* nocapture readonly %.1, %VarId.580331* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %VarId.580331, %VarId.580331* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %VarId.580331, %VarId.580331* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.15 = load %Program.580445*, %Program.580445** %.14, align 8
  %.16 = getelementptr inbounds %Program.580445, %Program.580445* %.15, i64 0, i32 1
  %.17 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.17, i64 0, i32 0
  %.19 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.19, i64 0, i32 5
  %.21 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.20, align 8
  %.22 = call %Module.580421* %.21(%"Array<Module>.580447"* %.17, i64 %.12)
  %.23 = getelementptr inbounds %Module.580421, %Module.580421* %.22, i64 0, i32 5
  %.24 = load %"Array<Class>.580425"*, %"Array<Class>.580425"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.24, i64 0, i32 0
  %.26 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.26, i64 0, i32 5
  %.28 = load %Class.580403* (%"Array<Class>.580425"*, i64)*, %Class.580403* (%"Array<Class>.580425"*, i64)** %.27, align 8
  %.29 = call %Class.580403* %.28(%"Array<Class>.580425"* %.24, i64 %.9)
  ret %Class.580403* %.29
}

define %Enum.580417* @TypeChecker_get_enum(%TypeChecker.580449* nocapture readonly %.1, %EnumId.580291* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %EnumId.580291, %EnumId.580291* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %EnumId.580291, %EnumId.580291* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.15 = load %Program.580445*, %Program.580445** %.14, align 8
  %.16 = getelementptr inbounds %Program.580445, %Program.580445* %.15, i64 0, i32 1
  %.17 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.17, i64 0, i32 0
  %.19 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.19, i64 0, i32 5
  %.21 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.20, align 8
  %.22 = call %Module.580421* %.21(%"Array<Module>.580447"* %.17, i64 %.12)
  %.23 = getelementptr inbounds %Module.580421, %Module.580421* %.22, i64 0, i32 7
  %.24 = load %"Array<Enum>.580427"*, %"Array<Enum>.580427"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.24, i64 0, i32 0
  %.26 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.26, i64 0, i32 5
  %.28 = load %Enum.580417* (%"Array<Enum>.580427"*, i64)*, %Enum.580417* (%"Array<Enum>.580427"*, i64)** %.27, align 8
  %.29 = call %Enum.580417* %.28(%"Array<Enum>.580427"* %.24, i64 %.9)
  ret %Enum.580417* %.29
}

define %Enum.580417* @TypeChecker_get_enum_from_var_id(%TypeChecker.580449* nocapture readonly %.1, %VarId.580331* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %VarId.580331, %VarId.580331* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %VarId.580331, %VarId.580331* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.15 = load %Program.580445*, %Program.580445** %.14, align 8
  %.16 = getelementptr inbounds %Program.580445, %Program.580445* %.15, i64 0, i32 1
  %.17 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.17, i64 0, i32 0
  %.19 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.19, i64 0, i32 5
  %.21 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.20, align 8
  %.22 = call %Module.580421* %.21(%"Array<Module>.580447"* %.17, i64 %.12)
  %.23 = getelementptr inbounds %Module.580421, %Module.580421* %.22, i64 0, i32 7
  %.24 = load %"Array<Enum>.580427"*, %"Array<Enum>.580427"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.24, i64 0, i32 0
  %.26 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.26, i64 0, i32 5
  %.28 = load %Enum.580417* (%"Array<Enum>.580427"*, i64)*, %Enum.580417* (%"Array<Enum>.580427"*, i64)** %.27, align 8
  %.29 = call %Enum.580417* %.28(%"Array<Enum>.580427"* %.24, i64 %.9)
  ret %Enum.580417* %.29
}

define i1 @TypeChecker_types_are_eq(%TypeChecker.580449* %.1, %Type.580273* %.2, %Type.580273* %.3) {
.5:
  %.10 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %Type.580273, %Type.580273* %.3, i64 0, i32 1
  %.14 = load i64, i64* %.13, align 8
  %.15.not = icmp eq i64 %.11, %.14
  br i1 %.15.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %for.body, %.5.endif.endif, %.5.endif.endif.endif.endif.if.endif, %.5.endif.endif.endif.endif.if, %.5.endif.if.endif, %.5.endif.if, %.5
  %merge = phi i1 [ false, %.5.endif.if.endif ], [ false, %.5.endif.if ], [ false, %.5 ], [ true, %.5.endif.endif.endif.endif.if ], [ false, %.5.endif.endif.endif.endif.if.endif ], [ true, %.5.endif.endif ], [ false, %for.body ]
  ret i1 %merge

.5.endif:                                         ; preds = %.5
  %.21 = icmp eq i64 %.11, 17
  br i1 %.21, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %t1_fnc_type = alloca %FunctionType.580279*, align 8
  %0 = bitcast %FunctionType.580279** %t1_fnc_type to %Type.580273**
  store %Type.580273* %.2, %Type.580273** %0, align 8
  %t2_fnc_type = alloca %FunctionType.580279*, align 8
  %1 = bitcast %FunctionType.580279** %t2_fnc_type to %Type.580273**
  store %Type.580273* %.3, %Type.580273** %1, align 8
  %.30 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %2 = bitcast %Type.580273* %.30 to %"Array<Type>.580281"**
  %.31 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %2, align 8
  %.32 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.31, i64 0, i32 2
  %.33 = load i64, i64* %.32, align 8
  %.35 = getelementptr inbounds %Type.580273, %Type.580273* %.3, i64 1
  %3 = bitcast %Type.580273* %.35 to %"Array<Type>.580281"**
  %.36 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %3, align 8
  %.37 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.36, i64 0, i32 2
  %.38 = load i64, i64* %.37, align 8
  %.39.not = icmp eq i64 %.33, %.38
  br i1 %.39.not, label %.5.endif.if.endif, label %.5.if

.5.endif.endif:                                   ; preds = %for.cond, %for.cond.preheader, %.5.endif
  %.105 = load i64, i64* %.10, align 8
  switch i64 %.105, label %.5.if [
    i64 16, label %.5.endif.endif.if
    i64 15, label %.5.endif.endif.endif.if
    i64 13, label %.5.endif.endif.endif.endif.if
    i64 14, label %.5.endif.endif.endif.endif.endif.if
  ]

.5.endif.if.endif:                                ; preds = %.5.endif.if
  %.43 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.44 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.43, align 8
  %.45 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.44, i64 0, i32 9
  %.46 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.45, align 8
  %.47 = load %FunctionType.580279*, %FunctionType.580279** %t2_fnc_type, align 8
  %.48 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.47, i64 0, i32 3
  %.49 = load %Type.580273*, %Type.580273** %.48, align 8
  %.50 = load %FunctionType.580279*, %FunctionType.580279** %t1_fnc_type, align 8
  %.51 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.50, i64 0, i32 3
  %.52 = load %Type.580273*, %Type.580273** %.51, align 8
  %.53 = call i1 %.46(%TypeChecker.580449* %.1, %Type.580273* %.49, %Type.580273* %.52)
  br i1 %.53, label %for.cond.preheader, label %.5.if

for.cond.preheader:                               ; preds = %.5.endif.if.endif
  %.62 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.50, i64 0, i32 2
  %.6314 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.62, align 8
  %.6415 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.6314, i64 0, i32 2
  %.6516 = load i64, i64* %.6415, align 8
  %.6617 = icmp sgt i64 %.6516, 0
  br i1 %.6617, label %for.body.lr.ph, label %.5.endif.endif

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.84 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.47, i64 0, i32 2
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.63 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.62, align 8
  %.64 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.63, i64 0, i32 2
  %.65 = load i64, i64* %.64, align 8
  %.66 = icmp slt i64 %.99, %.65
  br i1 %.66, label %for.body, label %.5.endif.endif

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %.6319 = phi %"Array<Type>.580281"* [ %.6314, %for.body.lr.ph ], [ %.63, %for.cond ]
  %storemerge18 = phi i64 [ 0, %for.body.lr.ph ], [ %.99, %for.cond ]
  %.70 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.43, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.70, i64 0, i32 9
  %.72 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.71, align 8
  %.77 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.6319, i64 0, i32 0
  %.78 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.77, align 8
  %.79 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.78, i64 0, i32 5
  %.80 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.79, align 8
  %.81 = call %Type.580273* %.80(%"Array<Type>.580281"* %.6319, i64 %storemerge18)
  %.85 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.84, align 8
  %.86 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.85, i64 0, i32 0
  %.87 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.86, align 8
  %.88 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.87, i64 0, i32 5
  %.89 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.88, align 8
  %.90 = call %Type.580273* %.89(%"Array<Type>.580281"* %.85, i64 %storemerge18)
  %.91 = call i1 %.72(%TypeChecker.580449* %.1, %Type.580273* %.81, %Type.580273* %.90)
  %.99 = add nuw nsw i64 %storemerge18, 1
  br i1 %.91, label %for.cond, label %.5.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %t1_arr_type = alloca %ArrayType.580295*, align 8
  %4 = bitcast %ArrayType.580295** %t1_arr_type to %Type.580273**
  store %Type.580273* %.2, %Type.580273** %4, align 8
  %t2_arr_type = alloca %ArrayType.580295*, align 8
  %5 = bitcast %ArrayType.580295** %t2_arr_type to %Type.580273**
  store %Type.580273* %.3, %Type.580273** %5, align 8
  %6 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1, i32 1
  %.116 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds %Type.580273, %Type.580273* %.3, i64 1, i32 1
  %.119 = load i64, i64* %7, align 8
  %.120 = icmp eq i64 %.116, %.119
  %.122 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.123 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.122, align 8
  %.124 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.123, i64 0, i32 9
  %.125 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.124, align 8
  %.126 = load %ArrayType.580295*, %ArrayType.580295** %t1_arr_type, align 8
  %.127 = getelementptr inbounds %ArrayType.580295, %ArrayType.580295* %.126, i64 0, i32 2
  %.128 = load %Type.580273*, %Type.580273** %.127, align 8
  %.129 = load %ArrayType.580295*, %ArrayType.580295** %t2_arr_type, align 8
  %.130 = getelementptr inbounds %ArrayType.580295, %ArrayType.580295* %.129, i64 0, i32 2
  %.131 = load %Type.580273*, %Type.580273** %.130, align 8
  %.132 = call i1 %.125(%TypeChecker.580449* %.1, %Type.580273* %.128, %Type.580273* %.131)
  %.133 = and i1 %.120, %.132
  ret i1 %.133

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif
  %t1_ptr_type = alloca %PointerType.580277*, align 8
  %8 = bitcast %PointerType.580277** %t1_ptr_type to %Type.580273**
  store %Type.580273* %.2, %Type.580273** %8, align 8
  %t2_ptr_type = alloca %PointerType.580277*, align 8
  %9 = bitcast %PointerType.580277** %t2_ptr_type to %Type.580273**
  store %Type.580273* %.3, %Type.580273** %9, align 8
  %.147 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.148 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.147, align 8
  %.149 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.148, i64 0, i32 9
  %.150 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.149, align 8
  %.151 = load %PointerType.580277*, %PointerType.580277** %t1_ptr_type, align 8
  %.152 = getelementptr inbounds %PointerType.580277, %PointerType.580277* %.151, i64 0, i32 2
  %.153 = load %Type.580273*, %Type.580273** %.152, align 8
  %.154 = load %PointerType.580277*, %PointerType.580277** %t2_ptr_type, align 8
  %.155 = getelementptr inbounds %PointerType.580277, %PointerType.580277* %.154, i64 0, i32 2
  %.156 = load %Type.580273*, %Type.580273** %.155, align 8
  %.157 = call i1 %.150(%TypeChecker.580449* %.1, %Type.580273* %.153, %Type.580273* %.156)
  ret i1 %.157

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif
  %t2_obj_type = alloca %ObjectType.580297*, align 8
  %10 = bitcast %ObjectType.580297** %t2_obj_type to %Type.580273**
  store %Type.580273* %.3, %Type.580273** %10, align 8
  %.171 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %11 = bitcast %Type.580273* %.171 to i64*
  %.17267 = load i64, i64* %11, align 8
  %t1_obj_typeid = alloca %TypeId.580287*, align 8
  %12 = bitcast %TypeId.580287** %t1_obj_typeid to i64*
  store i64 %.17267, i64* %12, align 8
  %.175 = load %ObjectType.580297*, %ObjectType.580297** %t2_obj_type, align 8
  %.176 = getelementptr inbounds %ObjectType.580297, %ObjectType.580297* %.175, i64 0, i32 2
  %13 = bitcast %ClassId.580289** %.176 to i64*
  %.17789 = load i64, i64* %13, align 8
  %t2_obj_typeid = alloca %TypeId.580287*, align 8
  %14 = bitcast %TypeId.580287** %t2_obj_typeid to i64*
  store i64 %.17789, i64* %14, align 8
  %.180 = load %TypeId.580287*, %TypeId.580287** %t1_obj_typeid, align 8
  %.181.cast = inttoptr i64 %.17789 to %TypeId.580287*
  %.182 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.180, i64 0, i32 0
  %.183 = load %TypeId_vtable_ty.580288*, %TypeId_vtable_ty.580288** %.182, align 8
  %.184 = getelementptr inbounds %TypeId_vtable_ty.580288, %TypeId_vtable_ty.580288* %.183, i64 0, i32 0
  %.185 = load i1 (%TypeId.580287*, %TypeId.580287*)*, i1 (%TypeId.580287*, %TypeId.580287*)** %.184, align 8
  %.186 = call i1 %.185(%TypeId.580287* %.180, %TypeId.580287* %.181.cast)
  br i1 %.186, label %.5.if, label %.5.endif.endif.endif.endif.if.endif

.5.endif.endif.endif.endif.if.endif:              ; preds = %.5.endif.endif.endif.endif.if
  %.190 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.191 = load %Program.580445*, %Program.580445** %.190, align 8
  %15 = bitcast %TypeId.580287** %t2_obj_typeid to %ClassId.580289**
  %.19210 = load %ClassId.580289*, %ClassId.580289** %15, align 8
  %.194 = call %Class.580403* @get_class(%Program.580445* %.191, %ClassId.580289* %.19210)
  %.197 = getelementptr inbounds %Class.580403, %Class.580403* %.194, i64 0, i32 3
  %16 = bitcast %Type.580273** %.197 to i64*
  %.19811 = load i64, i64* %16, align 8
  %.199 = trunc i64 %.19811 to i32
  %.201.not = icmp eq i32 %.199, 0
  br i1 %.201.not, label %.5.if, label %.5.endif.endif.endif.endif.if.endif.if

.5.endif.endif.endif.endif.if.endif.if:           ; preds = %.5.endif.endif.endif.endif.if.endif
  %.204 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.205 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.204, align 8
  %.206 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.205, i64 0, i32 9
  %.207 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.206, align 8
  %.212 = load %Type.580273*, %Type.580273** %.197, align 8
  %.213 = call i1 %.207(%TypeChecker.580449* %.1, %Type.580273* %.2, %Type.580273* %.212)
  ret i1 %.213

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif
  %.228 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %17 = bitcast %Type.580273* %.228 to %TypeId.580287**
  %.2291213 = load %TypeId.580287*, %TypeId.580287** %17, align 8
  %.233 = getelementptr inbounds %Type.580273, %Type.580273* %.3, i64 1
  %18 = bitcast %Type.580273* %.233 to %TypeId.580287**
  %.234345 = load %TypeId.580287*, %TypeId.580287** %18, align 8
  %.239 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.2291213, i64 0, i32 0
  %.240 = load %TypeId_vtable_ty.580288*, %TypeId_vtable_ty.580288** %.239, align 8
  %.241 = getelementptr inbounds %TypeId_vtable_ty.580288, %TypeId_vtable_ty.580288* %.240, i64 0, i32 0
  %.242 = load i1 (%TypeId.580287*, %TypeId.580287*)*, i1 (%TypeId.580287*, %TypeId.580287*)** %.241, align 8
  %.243 = call i1 %.242(%TypeId.580287* %.2291213, %TypeId.580287* %.234345)
  ret i1 %.243
}

define %string.580129* @TypeChecker_dump_type(%TypeChecker.580449* %.1, %Type.580273* %.2) {
.4:
  %.8 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif [
    i64 17, label %.4.if
    i64 15, label %.4.endif.if
    i64 13, label %.4.endif.endif.if
    i64 14, label %.4.endif.endif.endif.if
    i64 16, label %.4.endif.endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %fnc_ty = alloca %FunctionType.580279*, align 8
  %0 = bitcast %FunctionType.580279** %fnc_ty to %Type.580273**
  store %Type.580273* %.2, %Type.580273** %0, align 8
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %1 = bitcast i8* %.19 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %1, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %args_tys_str = alloca %string.580129*, align 8
  %2 = bitcast %string.580129** %args_tys_str to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.21, i8 0, i64 16, i1 false)
  store i8* %.15, i8** %2, align 8
  %.301 = load %FunctionType.580279*, %FunctionType.580279** %fnc_ty, align 8
  %.312 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.301, i64 0, i32 2
  %.323 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.312, align 8
  %.334 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.323, i64 0, i32 2
  %.345 = load i64, i64* %.334, align 8
  %.356 = icmp sgt i64 %.345, 0
  %.377 = load %string.580129*, %string.580129** %args_tys_str, align 8
  %.39 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.408 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.39, align 8
  %.419 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.408, i64 0, i32 10
  %.4210 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.419, align 8
  br i1 %.356, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4.if
  %.30 = load %FunctionType.580279*, %FunctionType.580279** %fnc_ty, align 8
  %.31 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.30, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.4214 = phi %string.580129* (%TypeChecker.580449*, %Type.580273*)* [ %.4210, %for.body.lr.ph ], [ %.42, %for.body ]
  %.3713 = phi %string.580129* [ %.377, %for.body.lr.ph ], [ %.57, %for.body ]
  %.3212 = phi %"Array<Type>.580281"* [ %.323, %for.body.lr.ph ], [ %.32, %for.body ]
  %storemerge11 = phi i64 [ 0, %for.body.lr.ph ], [ %.63, %for.body ]
  %.47 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.3212, i64 0, i32 0
  %.48 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.47, align 8
  %.49 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.48, i64 0, i32 5
  %.50 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.49, align 8
  %.51 = call %Type.580273* %.50(%"Array<Type>.580281"* %.3212, i64 %storemerge11)
  %.52 = call %string.580129* %.4214(%TypeChecker.580449* %.1, %Type.580273* %.51)
  %.53 = getelementptr inbounds %string.580129, %string.580129* %.3713, i64 0, i32 0
  %.54 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.53, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.54, i64 0, i32 0
  %.56 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.55, align 8
  %.57 = call %string.580129* %.56(%string.580129* %.3713, %string.580129* %.52)
  %.63 = add nuw nsw i64 %storemerge11, 1
  %.32 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.31, align 8
  %.33 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.32, i64 0, i32 2
  %.34 = load i64, i64* %.33, align 8
  %.35 = icmp slt i64 %.63, %.34
  %.40 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.39, align 8
  %.41 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.40, i64 0, i32 10
  %.42 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.41, align 8
  br i1 %.35, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.body
  store %string.580129* %.57, %string.580129** %args_tys_str, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4.if
  %.30.lcssa = phi %FunctionType.580279* [ %.30, %for.cond.for.end_crit_edge ], [ %.301, %.4.if ]
  %.37.lcssa = phi %string.580129* [ %.57, %for.cond.for.end_crit_edge ], [ %.377, %.4.if ]
  %.42.lcssa = phi %string.580129* (%TypeChecker.580449*, %Type.580273*)* [ %.42, %for.cond.for.end_crit_edge ], [ %.4210, %.4.if ]
  %.73 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.30.lcssa, i64 0, i32 3
  %.74 = load %Type.580273*, %Type.580273** %.73, align 8
  %.75 = call %string.580129* %.42.lcssa(%TypeChecker.580449* %.1, %Type.580273* %.74)
  %.76 = getelementptr inbounds %string.580129, %string.580129* %.37.lcssa, i64 0, i32 0
  %.77 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.76, align 8
  %.78 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.77, i64 0, i32 10
  %.79 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.78, align 8
  %.80 = call i8* %.79(%string.580129* %.37.lcssa)
  %.81 = getelementptr inbounds %string.580129, %string.580129* %.75, i64 0, i32 0
  %.82 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.81, align 8
  %.83 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.82, i64 0, i32 10
  %.84 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.83, align 8
  %.85 = call i8* %.84(%string.580129* %.75)
  %.87 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.262, i64 0, i64 0), i8* %.80, i8* %.85)
  %.89 = call i8* @malloc(i64 %.87)
  %.90 = call i64 (i8*, i8*, ...) @sprintf(i8* %.89, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.262, i64 0, i64 0), i8* %.80, i8* %.85)
  %.91 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.92 = bitcast i8* %.91 to %string.580129*
  %.93 = bitcast i8* %.91 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds i8, i8* %.91, i64 8
  %3 = bitcast i8* %.95 to i8**
  store i8* %.89, i8** %3, align 8
  %.97 = getelementptr inbounds i8, i8* %.91, i64 16
  %4 = bitcast i8* %.97 to i64*
  store i64 %.87, i64* %4, align 8
  %.99 = getelementptr inbounds i8, i8* %.91, i64 24
  %5 = bitcast i8* %.99 to i64*
  store i64 %.87, i64* %5, align 8
  ret %string.580129* %.92

.4.endif.if:                                      ; preds = %.4
  %.108 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.109 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.108, align 8
  %.110 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.109, i64 0, i32 10
  %.111 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.110, align 8
  %.114 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %6 = bitcast %Type.580273* %.114 to %Type.580273**
  %.115 = load %Type.580273*, %Type.580273** %6, align 8
  %.116 = call %string.580129* %.111(%TypeChecker.580449* %.1, %Type.580273* %.115)
  %.117 = getelementptr inbounds %string.580129, %string.580129* %.116, i64 0, i32 0
  %.118 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.117, align 8
  %.119 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.118, i64 0, i32 10
  %.120 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.119, align 8
  %.121 = call i8* %.120(%string.580129* %.116)
  %.123 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.263, i64 0, i64 0), i8* %.121)
  %.125 = call i8* @malloc(i64 %.123)
  %.126 = call i64 (i8*, i8*, ...) @sprintf(i8* %.125, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.263, i64 0, i64 0), i8* %.121)
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.580129*
  %.129 = bitcast i8* %.127 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.129, align 8
  %.131 = getelementptr inbounds i8, i8* %.127, i64 8
  %7 = bitcast i8* %.131 to i8**
  store i8* %.125, i8** %7, align 8
  %.133 = getelementptr inbounds i8, i8* %.127, i64 16
  %8 = bitcast i8* %.133 to i64*
  store i64 %.123, i64* %8, align 8
  %.135 = getelementptr inbounds i8, i8* %.127, i64 24
  %9 = bitcast i8* %.135 to i64*
  store i64 %.123, i64* %9, align 8
  ret %string.580129* %.128

.4.endif.endif.if:                                ; preds = %.4
  %.144 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.145 = load %Program.580445*, %Program.580445** %.144, align 8
  %.148 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %10 = bitcast %Type.580273* %.148 to %ClassId.580289**
  %.149 = load %ClassId.580289*, %ClassId.580289** %10, align 8
  %.150 = call %Class.580403* @get_class(%Program.580445* %.145, %ClassId.580289* %.149)
  %.151 = getelementptr inbounds %Class.580403, %Class.580403* %.150, i64 0, i32 2
  %.152 = load %string.580129*, %string.580129** %.151, align 8
  ret %string.580129* %.152

.4.endif.endif.endif.if:                          ; preds = %.4
  %.160 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.161 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.160, align 8
  %.162 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.161, i64 0, i32 7
  %.163 = load %Enum.580417* (%TypeChecker.580449*, %EnumId.580291*)*, %Enum.580417* (%TypeChecker.580449*, %EnumId.580291*)** %.162, align 8
  %.166 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %11 = bitcast %Type.580273* %.166 to %EnumId.580291**
  %.167 = load %EnumId.580291*, %EnumId.580291** %11, align 8
  %.168 = call %Enum.580417* %.163(%TypeChecker.580449* %.1, %EnumId.580291* %.167)
  %.169 = getelementptr inbounds %Enum.580417, %Enum.580417* %.168, i64 0, i32 2
  %.170 = load %string.580129*, %string.580129** %.169, align 8
  ret %string.580129* %.170

.4.endif.endif.endif.endif.if:                    ; preds = %.4
  %arr_ty = alloca %ArrayType.580295*, align 8
  %12 = bitcast %ArrayType.580295** %arr_ty to %Type.580273**
  store %Type.580273* %.2, %Type.580273** %12, align 8
  %.181 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.182 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.181, align 8
  %.183 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.182, i64 0, i32 10
  %.184 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.183, align 8
  %.186 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %13 = bitcast %Type.580273* %.186 to %Type.580273**
  %.187 = load %Type.580273*, %Type.580273** %13, align 8
  %.188 = call %string.580129* %.184(%TypeChecker.580449* %.1, %Type.580273* %.187)
  %.189 = load %ArrayType.580295*, %ArrayType.580295** %arr_ty, align 8
  %.190 = getelementptr inbounds %ArrayType.580295, %ArrayType.580295* %.189, i64 0, i32 3
  %.191 = load i64, i64* %.190, align 8
  %.192 = getelementptr inbounds %string.580129, %string.580129* %.188, i64 0, i32 0
  %.193 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.192, align 8
  %.194 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.193, i64 0, i32 10
  %.195 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.194, align 8
  %.196 = call i8* %.195(%string.580129* %.188)
  %.198 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.264, i64 0, i64 0), i8* %.196, i64 %.191)
  %.200 = call i8* @malloc(i64 %.198)
  %.201 = call i64 (i8*, i8*, ...) @sprintf(i8* %.200, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.264, i64 0, i64 0), i8* %.196, i64 %.191)
  %.202 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.203 = bitcast i8* %.202 to %string.580129*
  %.204 = bitcast i8* %.202 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.204, align 8
  %.206 = getelementptr inbounds i8, i8* %.202, i64 8
  %14 = bitcast i8* %.206 to i8**
  store i8* %.200, i8** %14, align 8
  %.208 = getelementptr inbounds i8, i8* %.202, i64 16
  %15 = bitcast i8* %.208 to i64*
  store i64 %.198, i64* %15, align 8
  %.210 = getelementptr inbounds i8, i8* %.202, i64 24
  %16 = bitcast i8* %.210 to i64*
  store i64 %.198, i64* %16, align 8
  ret %string.580129* %.203

.4.endif.endif.endif.endif.endif:                 ; preds = %.4
  %.214 = call %string.580129* @dump_type(%Type.580273* %.2, i1 false)
  ret %string.580129* %.214
}

define %Scope.580363* @TypeChecker_create_scope(%TypeChecker.580449* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.7, i64 0, i32 0
  %.9 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.8, align 8
  %.10 = call %Module.580421* %.9(%TypeChecker.580449* %.1)
  %.13 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 2
  %.14 = load i64, i64* %.13, align 8
  %.16 = getelementptr inbounds %Module.580421, %Module.580421* %.10, i64 0, i32 8
  %.17 = load %"Array<Scope>.580428"*, %"Array<Scope>.580428"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.17, i64 0, i32 2
  %.19 = load i64, i64* %.18, align 8
  %.20 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = bitcast i8* %.20 to %Scope.580363*
  %.22 = bitcast i8* %.20 to %Scope_vtable_ty.580364**
  store %Scope_vtable_ty.580364* @Scope_vtable_data, %Scope_vtable_ty.580364** %.22, align 8
  call void @Scope_constructor(%Scope.580363* %.21, i64 %.14, i64 %.19)
  %.28 = load %"Array<Scope>.580428"*, %"Array<Scope>.580428"** %.16, align 8
  %.30 = getelementptr inbounds %"Array<Scope>.580428", %"Array<Scope>.580428"* %.28, i64 0, i32 0
  %.31 = load %"Array<Scope>_vtable_ty.580437"*, %"Array<Scope>_vtable_ty.580437"** %.30, align 8
  %.32 = getelementptr inbounds %"Array<Scope>_vtable_ty.580437", %"Array<Scope>_vtable_ty.580437"* %.31, i64 0, i32 2
  %.33 = load void (%"Array<Scope>.580428"*, %Scope.580363*)*, void (%"Array<Scope>.580428"*, %Scope.580363*)** %.32, align 8
  call void %.33(%"Array<Scope>.580428"* %.28, %Scope.580363* %.21)
  ret %Scope.580363* %.21
}

define i1 @TypeChecker_is_constant_in_scope(%TypeChecker.580449* %.1, %string.580129* %.2) {
.4:
  %.9 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.10 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.9, align 8
  %.11 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.10, i64 0, i32 13
  %.12 = load %VarId.580331* (%TypeChecker.580449*, %string.580129*)*, %VarId.580331* (%TypeChecker.580449*, %string.580129*)** %.11, align 8
  %.14 = call %VarId.580331* %.12(%TypeChecker.580449* %.1, %string.580129* %.2)
  %0 = ptrtoint %VarId.580331* %.14 to i64
  %.17 = trunc i64 %0 to i32
  %.19.not = icmp eq i32 %.17, 0
  br i1 %.19.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.22 = getelementptr inbounds %VarId.580331, %VarId.580331* %.14, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 2
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %is_constant.0 = phi i1 [ %.24, %.4.if ], [ false, %.4 ]
  ret i1 %is_constant.0
}

define %VarId.580331* @TypeChecker_get_var_from_current_scope(%TypeChecker.580449* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.9, i64 0, i32 1
  %.11 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.10, align 8
  %.12 = call %Scope.580363* %.11(%TypeChecker.580449* %.1)
  %.15 = getelementptr inbounds %Scope.580363, %Scope.580363* %.12, i64 0, i32 2
  %.16 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.15, align 8
  %.17 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.16, i64 0, i32 0
  %.18 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.17, align 8
  %.19 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.18, i64 0, i32 3
  %.20 = load %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)*, %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)** %.19, align 8
  %.22 = call %VarId.580331* %.20(%"Map<string, VarId>.580365"* %.16, %string.580129* %.2)
  %.25 = getelementptr inbounds %Scope.580363, %Scope.580363* %.12, i64 0, i32 6
  %0 = bitcast %ScopeId.580361** %.25 to i64*
  %.261 = load i64, i64* %0, align 8
  %.27 = trunc i64 %.261 to i32
  %.29 = icmp ne i32 %.27, 0
  %1 = ptrtoint %VarId.580331* %.22 to i64
  %.31 = trunc i64 %1 to i32
  %.33 = icmp eq i32 %.31, 0
  %.34 = and i1 %.29, %.33
  br i1 %.34, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.4
  %.37 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %current_scope.0 = phi %Scope.580363* [ %.42, %while.entry.endif ], [ %.12, %while.entry.preheader ]
  %.38 = load %Program.580445*, %Program.580445** %.37, align 8
  %.40 = getelementptr inbounds %Scope.580363, %Scope.580363* %current_scope.0, i64 0, i32 6
  %.41 = load %ScopeId.580361*, %ScopeId.580361** %.40, align 8
  %.42 = call %Scope.580363* @get_scope(%Program.580445* %.38, %ScopeId.580361* %.41)
  %.45 = getelementptr inbounds %Scope.580363, %Scope.580363* %.42, i64 0, i32 2
  %.46 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.45, align 8
  %.47 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.46, i64 0, i32 0
  %.48 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.47, align 8
  %.49 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.48, i64 0, i32 3
  %.50 = load %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)*, %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)** %.49, align 8
  %.52 = call %VarId.580331* %.50(%"Map<string, VarId>.580365"* %.46, %string.580129* %.2)
  %2 = ptrtoint %VarId.580331* %.52 to i64
  %.55 = trunc i64 %2 to i32
  %.57 = icmp eq i32 %.55, 0
  br i1 %.57, label %while.entry.if, label %while.entry.endif

while.exit:                                       ; preds = %while.entry.endif, %.4
  %value.0 = phi %VarId.580331* [ %.22, %.4 ], [ %value.1, %while.entry.endif ]
  ret %VarId.580331* %value.0

while.entry.if:                                   ; preds = %while.entry
  %.60 = getelementptr inbounds %Scope.580363, %Scope.580363* %.42, i64 0, i32 4
  %.61 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.60, align 8
  %.62 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.61, i64 0, i32 0
  %.63 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.62, align 8
  %.64 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.63, i64 0, i32 3
  %.65 = load %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)*, %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)** %.64, align 8
  %.67 = call %VarId.580331* %.65(%"Map<string, VarId>.580365"* %.61, %string.580129* %.2)
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.if, %while.entry
  %value.1 = phi %VarId.580331* [ %.67, %while.entry.if ], [ %.52, %while.entry ]
  %.71 = getelementptr inbounds %Scope.580363, %Scope.580363* %.42, i64 0, i32 6
  %3 = bitcast %ScopeId.580361** %.71 to i64*
  %.722 = load i64, i64* %3, align 8
  %.73 = trunc i64 %.722 to i32
  %.75 = icmp ne i32 %.73, 0
  %4 = ptrtoint %VarId.580331* %value.1 to i64
  %.77 = trunc i64 %4 to i32
  %.79 = icmp eq i32 %.77, 0
  %.80 = and i1 %.75, %.79
  br i1 %.80, label %while.entry, label %while.exit
}

define %Type.580273* @TypeChecker_get_type_from_current_scope(%TypeChecker.580449* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.9, i64 0, i32 1
  %.11 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.10, align 8
  %.12 = call %Scope.580363* %.11(%TypeChecker.580449* %.1)
  %.14 = call %Type.580273* @Type_unknown()
  %.183 = getelementptr inbounds %Scope.580363, %Scope.580363* %.12, i64 0, i32 7
  %.194 = load %"Map<string, Type>.580368"*, %"Map<string, Type>.580368"** %.183, align 8
  %.205 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.194, i64 0, i32 0
  %.216 = load %"Map<string, Type>_vtable_ty.580384"*, %"Map<string, Type>_vtable_ty.580384"** %.205, align 8
  %.227 = getelementptr inbounds %"Map<string, Type>_vtable_ty.580384", %"Map<string, Type>_vtable_ty.580384"* %.216, i64 0, i32 3
  %.238 = load %Type.580273* (%"Map<string, Type>.580368"*, %string.580129*)*, %Type.580273* (%"Map<string, Type>.580368"*, %string.580129*)** %.227, align 8
  %.259 = call %Type.580273* %.238(%"Map<string, Type>.580368"* %.194, %string.580129* %.2)
  %0 = ptrtoint %Type.580273* %.259 to i64
  %.2810 = trunc i64 %0 to i32
  %.30.not11 = icmp eq i32 %.2810, 0
  br i1 %.30.not11, label %while.entry.endif.lr.ph, label %while.exit

while.entry.endif.lr.ph:                          ; preds = %.4
  %.92 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  br label %while.entry.endif

while.exit:                                       ; preds = %while.entry.endif.endif.endif, %while.entry.endif.endif.endif.endif, %.4, %while.entry.endif.endif.if, %while.entry.endif.if
  %found_type.0 = phi %Type.580273* [ %.56, %while.entry.endif.if ], [ %.80, %while.entry.endif.endif.if ], [ %.259, %.4 ], [ %.25, %while.entry.endif.endif.endif.endif ], [ %.14, %while.entry.endif.endif.endif ]
  ret %Type.580273* %found_type.0

while.entry.endif:                                ; preds = %while.entry.endif.lr.ph, %while.entry.endif.endif.endif.endif
  %current_scope.012 = phi %Scope.580363* [ %.12, %while.entry.endif.lr.ph ], [ %.97, %while.entry.endif.endif.endif.endif ]
  %.36 = getelementptr inbounds %Scope.580363, %Scope.580363* %current_scope.012, i64 0, i32 3
  %.37 = load %"Map<string, ClassId>.580366"*, %"Map<string, ClassId>.580366"** %.36, align 8
  %.38 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.37, i64 0, i32 0
  %.39 = load %"Map<string, ClassId>_vtable_ty.580374"*, %"Map<string, ClassId>_vtable_ty.580374"** %.38, align 8
  %.40 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.580374", %"Map<string, ClassId>_vtable_ty.580374"* %.39, i64 0, i32 3
  %.41 = load %ClassId.580289* (%"Map<string, ClassId>.580366"*, %string.580129*)*, %ClassId.580289* (%"Map<string, ClassId>.580366"*, %string.580129*)** %.40, align 8
  %.43 = call %ClassId.580289* %.41(%"Map<string, ClassId>.580366"* %.37, %string.580129* %.2)
  %1 = ptrtoint %ClassId.580289* %.43 to i64
  %.46 = trunc i64 %1 to i32
  %.48.not = icmp eq i32 %.46, 0
  br i1 %.48.not, label %while.entry.endif.endif, label %while.entry.endif.if

while.entry.endif.if:                             ; preds = %while.entry.endif
  %.51 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.52 = bitcast i8* %.51 to %ObjectType.580297*
  %.53 = bitcast i8* %.51 to %ObjectType_vtable_ty.580298**
  store %ObjectType_vtable_ty.580298* @ObjectType_vtable_data, %ObjectType_vtable_ty.580298** %.53, align 8
  call void @ObjectType_constructor(%ObjectType.580297* %.52, %ClassId.580289* %.43)
  %.56 = bitcast i8* %.51 to %Type.580273*
  br label %while.exit

while.entry.endif.endif:                          ; preds = %while.entry.endif
  %.60 = getelementptr inbounds %Scope.580363, %Scope.580363* %current_scope.012, i64 0, i32 5
  %.61 = load %"Map<string, EnumId>.580367"*, %"Map<string, EnumId>.580367"** %.60, align 8
  %.62 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.61, i64 0, i32 0
  %.63 = load %"Map<string, EnumId>_vtable_ty.580379"*, %"Map<string, EnumId>_vtable_ty.580379"** %.62, align 8
  %.64 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.580379", %"Map<string, EnumId>_vtable_ty.580379"* %.63, i64 0, i32 3
  %.65 = load %EnumId.580291* (%"Map<string, EnumId>.580367"*, %string.580129*)*, %EnumId.580291* (%"Map<string, EnumId>.580367"*, %string.580129*)** %.64, align 8
  %.67 = call %EnumId.580291* %.65(%"Map<string, EnumId>.580367"* %.61, %string.580129* %.2)
  %2 = ptrtoint %EnumId.580291* %.67 to i64
  %.70 = trunc i64 %2 to i32
  %.72.not = icmp eq i32 %.70, 0
  br i1 %.72.not, label %while.entry.endif.endif.endif, label %while.entry.endif.endif.if

while.entry.endif.endif.if:                       ; preds = %while.entry.endif.endif
  %.75 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.76 = bitcast i8* %.75 to %EnumType.580299*
  %.77 = bitcast i8* %.75 to %EnumType_vtable_ty.580300**
  store %EnumType_vtable_ty.580300* @EnumType_vtable_data, %EnumType_vtable_ty.580300** %.77, align 8
  call void @EnumType_constructor(%EnumType.580299* %.76, %EnumId.580291* %.67)
  %.80 = bitcast i8* %.75 to %Type.580273*
  br label %while.exit

while.entry.endif.endif.endif:                    ; preds = %while.entry.endif.endif
  %.84 = getelementptr inbounds %Scope.580363, %Scope.580363* %current_scope.012, i64 0, i32 6
  %3 = bitcast %ScopeId.580361** %.84 to i64*
  %.851 = load i64, i64* %3, align 8
  %.86 = trunc i64 %.851 to i32
  %.88 = icmp eq i32 %.86, 0
  br i1 %.88, label %while.exit, label %while.entry.endif.endif.endif.endif

while.entry.endif.endif.endif.endif:              ; preds = %while.entry.endif.endif.endif
  %.93 = load %Program.580445*, %Program.580445** %.92, align 8
  %.96 = load %ScopeId.580361*, %ScopeId.580361** %.84, align 8
  %.97 = call %Scope.580363* @get_scope(%Program.580445* %.93, %ScopeId.580361* %.96)
  %.18 = getelementptr inbounds %Scope.580363, %Scope.580363* %.97, i64 0, i32 7
  %.19 = load %"Map<string, Type>.580368"*, %"Map<string, Type>.580368"** %.18, align 8
  %.20 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.19, i64 0, i32 0
  %.21 = load %"Map<string, Type>_vtable_ty.580384"*, %"Map<string, Type>_vtable_ty.580384"** %.20, align 8
  %.22 = getelementptr inbounds %"Map<string, Type>_vtable_ty.580384", %"Map<string, Type>_vtable_ty.580384"* %.21, i64 0, i32 3
  %.23 = load %Type.580273* (%"Map<string, Type>.580368"*, %string.580129*)*, %Type.580273* (%"Map<string, Type>.580368"*, %string.580129*)** %.22, align 8
  %.25 = call %Type.580273* %.23(%"Map<string, Type>.580368"* %.19, %string.580129* %.2)
  %4 = ptrtoint %Type.580273* %.25 to i64
  %.28 = trunc i64 %4 to i32
  %.30.not = icmp eq i32 %.28, 0
  br i1 %.30.not, label %while.entry.endif, label %while.exit
}

define %Scope.580363* @TypeChecker_create_child_scope_within_current_scope(%TypeChecker.580449* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.7, i64 0, i32 11
  %.9 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.8, align 8
  %.10 = call %Scope.580363* %.9(%TypeChecker.580449* %.1)
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 6
  %0 = bitcast %ScopeId.580361** %.14 to i64*
  %.151 = load i64, i64* %0, align 8
  %.16 = getelementptr inbounds %Scope.580363, %Scope.580363* %.10, i64 0, i32 6
  %1 = bitcast %ScopeId.580361** %.16 to i64*
  store i64 %.151, i64* %1, align 8
  ret %Scope.580363* %.10
}

define void @TypeChecker_error(%TypeChecker.580449* nocapture readonly %.1, i64 %.2, %string.580129* %.3, %FloRange.580135* %.4) {
.6:
  %.12 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 8
  %.13 = load %"Array<FloError>.580139"*, %"Array<FloError>.580139"** %.12, align 8
  %.17 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %FloError.580137*
  %.19 = bitcast i8* %.17 to %FloError_vtable_ty.580138**
  store %FloError_vtable_ty.580138* @FloError_vtable_data, %FloError_vtable_ty.580138** %.19, align 8
  call void @FloError_constructor(%FloError.580137* %.18, i64 %.2, %string.580129* %.3, %FloRange.580135* %.4)
  %.22 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.13, i64 0, i32 0
  %.23 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.22, align 8
  %.24 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.23, i64 0, i32 2
  %.25 = load void (%"Array<FloError>.580139"*, %FloError.580137*)*, void (%"Array<FloError>.580139"*, %FloError.580137*)** %.24, align 8
  call void %.25(%"Array<FloError>.580139"* %.13, %FloError.580137* %.18)
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @TypeChecker_has_errored(%TypeChecker.580449* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 8
  %.7 = load %"Array<FloError>.580139"*, %"Array<FloError>.580139"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.7, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp sgt i64 %.9, 0
  ret i1 %.10
}

define %Program.580445* @TypeChecker_check(%TypeChecker.580449* %.1, %ModuleAST.580255* nocapture readonly %.2, %string.580129* %.3, %"Array<FloError>.580139"* %.4) {
.6:
  %.12 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.14 = add i64 %.13, 1
  store i64 %.14, i64* %.12, align 8
  %.20 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 7
  store %string.580129* %.3, %string.580129** %.20, align 8
  %.24 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 8
  store %"Array<FloError>.580139"* %.4, %"Array<FloError>.580139"** %.24, align 8
  %.27 = call dereferenceable_or_null(96) i8* @malloc(i64 96)
  %.28 = bitcast i8* %.27 to %Module.580421*
  %.29 = bitcast i8* %.27 to %Module_vtable_ty.580422**
  store %Module_vtable_ty.580422* @Module_vtable_data, %Module_vtable_ty.580422** %.29, align 8
  call void @Module_constructor(%Module.580421* %.28)
  %.35 = getelementptr inbounds i8, i8* %.27, i64 16
  %0 = bitcast i8* %.35 to %string.580129**
  store %string.580129* %.3, %string.580129** %0, align 8
  %.38 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.39 = load %Program.580445*, %Program.580445** %.38, align 8
  %.40 = getelementptr inbounds %Program.580445, %Program.580445* %.39, i64 0, i32 1
  %.41 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.40, align 8
  %.43 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.41, i64 0, i32 0
  %.44 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.43, align 8
  %.45 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.44, i64 0, i32 2
  %.46 = load void (%"Array<Module>.580447"*, %Module.580421*)*, void (%"Array<Module>.580447"*, %Module.580421*)** %.45, align 8
  call void %.46(%"Array<Module>.580447"* %.41, %Module.580421* %.28)
  %.49 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.50 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.51 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.50, i64 0, i32 11
  %.52 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.51, align 8
  %.53 = call %Scope.580363* %.52(%TypeChecker.580449* %.1)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %ConstId.580337*
  %.59 = bitcast i8* %.57 to %ConstId_vtable_ty.580338**
  store %ConstId_vtable_ty.580338* @ConstId_vtable_data, %ConstId_vtable_ty.580338** %.59, align 8
  call void @ConstId_constructor(%ConstId.580337* %.58, i64 -1, i64 -1)
  %.64 = getelementptr inbounds %Scope.580363, %Scope.580363* %.53, i64 0, i32 2
  %.65 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.64, align 8
  %.66 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.65, i64 0, i32 0
  %.67 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.66, align 8
  %.68 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.67, i64 0, i32 2
  %.69 = load void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)*, void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)** %.68, align 8
  %.70 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.71 = bitcast i8* %.70 to %string.580129*
  %.71.repack = bitcast i8* %.70 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.71.repack, align 8
  %.71.repack1 = getelementptr inbounds i8, i8* %.70, i64 8
  %1 = bitcast i8* %.71.repack1 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.265, i64 0, i64 0), i8** %1, align 8
  %.71.repack2 = getelementptr inbounds i8, i8* %.70, i64 16
  %2 = bitcast i8* %.71.repack2 to i64*
  store i64 4, i64* %2, align 8
  %.71.repack3 = getelementptr inbounds i8, i8* %.70, i64 24
  %3 = bitcast i8* %.71.repack3 to i64*
  store i64 4, i64* %3, align 8
  %.74 = bitcast i8* %.57 to %VarId.580331*
  call void %.69(%"Map<string, VarId>.580365"* %.65, %string.580129* %.71, %VarId.580331* %.74)
  %.78 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.64, align 8
  %.79 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.78, i64 0, i32 0
  %.80 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.79, align 8
  %.81 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.80, i64 0, i32 2
  %.82 = load void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)*, void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)** %.81, align 8
  %.83 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.580129*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.84.repack, align 8
  %.84.repack4 = getelementptr inbounds i8, i8* %.83, i64 8
  %4 = bitcast i8* %.84.repack4 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.266, i64 0, i64 0), i8** %4, align 8
  %.84.repack5 = getelementptr inbounds i8, i8* %.83, i64 16
  %5 = bitcast i8* %.84.repack5 to i64*
  store i64 5, i64* %5, align 8
  %.84.repack6 = getelementptr inbounds i8, i8* %.83, i64 24
  %6 = bitcast i8* %.84.repack6 to i64*
  store i64 5, i64* %6, align 8
  call void %.82(%"Map<string, VarId>.580365"* %.78, %string.580129* %.84, %VarId.580331* %.74)
  %.91 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.64, align 8
  %.92 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.91, i64 0, i32 0
  %.93 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.92, align 8
  %.94 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.93, i64 0, i32 2
  %.95 = load void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)*, void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)** %.94, align 8
  %.96 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.580129*
  %.97.repack = bitcast i8* %.96 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.97.repack, align 8
  %.97.repack7 = getelementptr inbounds i8, i8* %.96, i64 8
  %7 = bitcast i8* %.97.repack7 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.267, i64 0, i64 0), i8** %7, align 8
  %.97.repack8 = getelementptr inbounds i8, i8* %.96, i64 16
  %8 = bitcast i8* %.97.repack8 to i64*
  store i64 4, i64* %8, align 8
  %.97.repack9 = getelementptr inbounds i8, i8* %.96, i64 24
  %9 = bitcast i8* %.97.repack9 to i64*
  store i64 4, i64* %9, align 8
  call void %.95(%"Map<string, VarId>.580365"* %.91, %string.580129* %.97, %VarId.580331* %.74)
  %.104 = getelementptr inbounds %Scope.580363, %Scope.580363* %.53, i64 0, i32 1
  %10 = bitcast %ScopeId.580361** %.104 to i64*
  %.10510 = load i64, i64* %10, align 8
  %.106 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 6
  %11 = bitcast %ScopeId.580361** %.106 to i64*
  store i64 %.10510, i64* %11, align 8
  %.112 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 3
  %.122 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.2, i64 0, i32 4
  %12 = bitcast %ClassId.580289** %.112 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  %.123104 = load %"Array<ImportNode>.580260"*, %"Array<ImportNode>.580260"** %.122, align 8
  %.124105 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.123104, i64 0, i32 2
  %.125106 = load i64, i64* %.124105, align 8
  %.126107 = icmp sgt i64 %.125106, 0
  br i1 %.126107, label %for.body, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body, %.6
  %.155 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.2, i64 0, i32 3
  %.15697 = load %"Array<EnumNode>.580259"*, %"Array<EnumNode>.580259"** %.155, align 8
  %.15798 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.15697, i64 0, i32 2
  %.15899 = load i64, i64* %.15798, align 8
  %.159100 = icmp sgt i64 %.15899, 0
  br i1 %.159100, label %for.body.1, label %for.cond.2.preheader

for.body:                                         ; preds = %.6, %for.body
  %.123109 = phi %"Array<ImportNode>.580260"* [ %.123, %for.body ], [ %.123104, %.6 ]
  %storemerge108 = phi i64 [ %.147, %for.body ], [ 0, %.6 ]
  %.130 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.130, i64 0, i32 25
  %.132 = load void (%TypeChecker.580449*, %ImportNode.580249*)*, void (%TypeChecker.580449*, %ImportNode.580249*)** %.131, align 8
  %.137 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.123109, i64 0, i32 0
  %.138 = load %"Array<ImportNode>_vtable_ty.580267"*, %"Array<ImportNode>_vtable_ty.580267"** %.137, align 8
  %.139 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.580267", %"Array<ImportNode>_vtable_ty.580267"* %.138, i64 0, i32 5
  %.140 = load %ImportNode.580249* (%"Array<ImportNode>.580260"*, i64)*, %ImportNode.580249* (%"Array<ImportNode>.580260"*, i64)** %.139, align 8
  %.141 = call %ImportNode.580249* %.140(%"Array<ImportNode>.580260"* %.123109, i64 %storemerge108)
  call void %.132(%TypeChecker.580449* %.1, %ImportNode.580249* %.141)
  %.147 = add nuw nsw i64 %storemerge108, 1
  %.123 = load %"Array<ImportNode>.580260"*, %"Array<ImportNode>.580260"** %.122, align 8
  %.124 = getelementptr inbounds %"Array<ImportNode>.580260", %"Array<ImportNode>.580260"* %.123, i64 0, i32 2
  %.125 = load i64, i64* %.124, align 8
  %.126 = icmp slt i64 %.147, %.125
  br i1 %.126, label %for.body, label %for.cond.1.preheader

for.cond.2.preheader:                             ; preds = %for.body.1, %for.cond.1.preheader
  %.188 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.2, i64 0, i32 2
  %.18987 = load %"Array<ClassDeclarationNode>.580258"*, %"Array<ClassDeclarationNode>.580258"** %.188, align 8
  %.19088 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.18987, i64 0, i32 2
  %.19189 = load i64, i64* %.19088, align 8
  %.19290 = icmp sgt i64 %.19189, 0
  %.19691 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  br i1 %.19290, label %for.body.2, label %for.end.2

for.body.1:                                       ; preds = %for.cond.1.preheader, %for.body.1
  %.156102 = phi %"Array<EnumNode>.580259"* [ %.156, %for.body.1 ], [ %.15697, %for.cond.1.preheader ]
  %storemerge11101 = phi i64 [ %.180, %for.body.1 ], [ 0, %for.cond.1.preheader ]
  %.163 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.164 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.163, i64 0, i32 26
  %.165 = load void (%TypeChecker.580449*, %EnumNode.580245*)*, void (%TypeChecker.580449*, %EnumNode.580245*)** %.164, align 8
  %.170 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.156102, i64 0, i32 0
  %.171 = load %"Array<EnumNode>_vtable_ty.580266"*, %"Array<EnumNode>_vtable_ty.580266"** %.170, align 8
  %.172 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.580266", %"Array<EnumNode>_vtable_ty.580266"* %.171, i64 0, i32 5
  %.173 = load %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)*, %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)** %.172, align 8
  %.174 = call %EnumNode.580245* %.173(%"Array<EnumNode>.580259"* %.156102, i64 %storemerge11101)
  call void %.165(%TypeChecker.580449* %.1, %EnumNode.580245* %.174)
  %.180 = add nuw nsw i64 %storemerge11101, 1
  %.156 = load %"Array<EnumNode>.580259"*, %"Array<EnumNode>.580259"** %.155, align 8
  %.157 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.156, i64 0, i32 2
  %.158 = load i64, i64* %.157, align 8
  %.159 = icmp slt i64 %.180, %.158
  br i1 %.159, label %for.body.1, label %for.cond.2.preheader

for.body.2:                                       ; preds = %for.cond.2.preheader, %for.body.2
  %.19694 = phi %TypeChecker_vtable_ty.580450* [ %.196, %for.body.2 ], [ %.19691, %for.cond.2.preheader ]
  %.18993 = phi %"Array<ClassDeclarationNode>.580258"* [ %.189, %for.body.2 ], [ %.18987, %for.cond.2.preheader ]
  %storemerge1292 = phi i64 [ %.213, %for.body.2 ], [ 0, %for.cond.2.preheader ]
  %.197 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.19694, i64 0, i32 27
  %.198 = load void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)** %.197, align 8
  %.203 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.18993, i64 0, i32 0
  %.204 = load %"Array<ClassDeclarationNode>_vtable_ty.580265"*, %"Array<ClassDeclarationNode>_vtable_ty.580265"** %.203, align 8
  %.205 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.580265", %"Array<ClassDeclarationNode>_vtable_ty.580265"* %.204, i64 0, i32 5
  %.206 = load %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)*, %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)** %.205, align 8
  %.207 = call %ClassDeclarationNode.580235* %.206(%"Array<ClassDeclarationNode>.580258"* %.18993, i64 %storemerge1292)
  call void %.198(%TypeChecker.580449* %.1, %ClassDeclarationNode.580235* %.207)
  %.213 = add nuw nsw i64 %storemerge1292, 1
  %.189 = load %"Array<ClassDeclarationNode>.580258"*, %"Array<ClassDeclarationNode>.580258"** %.188, align 8
  %.190 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.189, i64 0, i32 2
  %.191 = load i64, i64* %.190, align 8
  %.192 = icmp slt i64 %.213, %.191
  %.196 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  br i1 %.192, label %for.body.2, label %for.end.2

for.end.2:                                        ; preds = %for.body.2, %for.cond.2.preheader
  %.196.lcssa = phi %TypeChecker_vtable_ty.580450* [ %.19691, %for.cond.2.preheader ], [ %.196, %for.body.2 ]
  %.219 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.196.lcssa, i64 0, i32 17
  %.220 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.219, align 8
  %.221 = call i1 %.220(%TypeChecker.580449* %.1)
  br i1 %.221, label %for.end.2.if, label %for.cond.3.preheader

for.cond.3.preheader:                             ; preds = %for.end.2
  %.229 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.2, i64 0, i32 7
  %.23081 = load %"Array<TypeAliasNode>.580263"*, %"Array<TypeAliasNode>.580263"** %.229, align 8
  %.23182 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.23081, i64 0, i32 2
  %.23283 = load i64, i64* %.23182, align 8
  %.23384 = icmp sgt i64 %.23283, 0
  br i1 %.23384, label %for.body.3.lr.ph, label %for.cond.4.preheader

for.body.3.lr.ph:                                 ; preds = %for.cond.3.preheader
  %.308 = getelementptr inbounds %Scope.580363, %Scope.580363* %.53, i64 0, i32 7
  br label %for.body.3

for.end.2.if:                                     ; preds = %for.end.6, %for.end.2
  ret %Program.580445* null

for.cond.4.preheader:                             ; preds = %for.body.3.endif, %for.cond.3.preheader
  %.329 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.2, i64 0, i32 5
  %.33075 = load %"Array<ConstDeclarationStatement>.580261"*, %"Array<ConstDeclarationStatement>.580261"** %.329, align 8
  %.33176 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.33075, i64 0, i32 2
  %.33277 = load i64, i64* %.33176, align 8
  %.33378 = icmp sgt i64 %.33277, 0
  br i1 %.33378, label %for.body.4, label %for.cond.5.preheader

for.body.3:                                       ; preds = %for.body.3.lr.ph, %for.body.3.endif
  %.23086 = phi %"Array<TypeAliasNode>.580263"* [ %.23081, %for.body.3.lr.ph ], [ %.230, %for.body.3.endif ]
  %storemerge1385 = phi i64 [ 0, %for.body.3.lr.ph ], [ %.321, %for.body.3.endif ]
  %.239 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.23086, i64 0, i32 0
  %.240 = load %"Array<TypeAliasNode>_vtable_ty.580270"*, %"Array<TypeAliasNode>_vtable_ty.580270"** %.239, align 8
  %.241 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.580270", %"Array<TypeAliasNode>_vtable_ty.580270"* %.240, i64 0, i32 5
  %.242 = load %TypeAliasNode.580253* (%"Array<TypeAliasNode>.580263"*, i64)*, %TypeAliasNode.580253* (%"Array<TypeAliasNode>.580263"*, i64)** %.241, align 8
  %.243 = call %TypeAliasNode.580253* %.242(%"Array<TypeAliasNode>.580263"* %.23086, i64 %storemerge1385)
  %.247 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.248 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.247, i64 0, i32 35
  %.249 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.248, align 8
  %.251 = getelementptr inbounds %TypeAliasNode.580253, %TypeAliasNode.580253* %.243, i64 0, i32 2
  %.252 = load %TypeNode.580161*, %TypeNode.580161** %.251, align 8
  %.253 = call %Type.580273* %.249(%TypeChecker.580449* %.1, %TypeNode.580161* %.252)
  %.256 = getelementptr inbounds %TypeAliasNode.580253, %TypeAliasNode.580253* %.243, i64 0, i32 1
  %.2572021 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.256, align 8
  %.260 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.2572021, i64 0, i32 3
  %13 = bitcast %string.580129** %.260 to i64*
  %.26122 = load i64, i64* %13, align 8
  %alias_name = alloca %string.580129*, align 8
  %14 = bitcast %string.580129** %alias_name to i64*
  store i64 %.26122, i64* %14, align 8
  %.265 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.266 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.265, i64 0, i32 14
  %.267 = load %Type.580273* (%TypeChecker.580449*, %string.580129*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*)** %.266, align 8
  %.268.cast = inttoptr i64 %.26122 to %string.580129*
  %.269 = call %Type.580273* %.267(%TypeChecker.580449* %.1, %string.580129* %.268.cast)
  %.270 = getelementptr inbounds %Type.580273, %Type.580273* %.269, i64 0, i32 1
  %.271 = load i64, i64* %.270, align 8
  %.272.not = icmp eq i64 %.271, 21
  br i1 %.272.not, label %for.body.3.endif, label %for.body.3.if

for.body.3.if:                                    ; preds = %for.body.3
  %.276 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.277 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.276, i64 0, i32 16
  %.278 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.277, align 8
  %.279 = load %string.580129*, %string.580129** %alias_name, align 8
  %.280 = getelementptr inbounds %string.580129, %string.580129* %.279, i64 0, i32 0
  %.281 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.280, align 8
  %.282 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.281, i64 0, i32 10
  %.283 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.282, align 8
  %.284 = call i8* %.283(%string.580129* %.279)
  %.286 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.268, i64 0, i64 0), i8* %.284)
  %.288 = call i8* @malloc(i64 %.286)
  %.289 = call i64 (i8*, i8*, ...) @sprintf(i8* %.288, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.268, i64 0, i64 0), i8* %.284)
  %.290 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.291 = bitcast i8* %.290 to %string.580129*
  %.292 = bitcast i8* %.290 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.292, align 8
  %.294 = getelementptr inbounds i8, i8* %.290, i64 8
  %15 = bitcast i8* %.294 to i8**
  store i8* %.288, i8** %15, align 8
  %.296 = getelementptr inbounds i8, i8* %.290, i64 16
  %16 = bitcast i8* %.296 to i64*
  store i64 %.286, i64* %16, align 8
  %.298 = getelementptr inbounds i8, i8* %.290, i64 24
  %17 = bitcast i8* %.298 to i64*
  store i64 %.286, i64* %17, align 8
  %.302 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.256, align 8
  %.303 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.302, i64 0, i32 2
  %.304 = load %FloRange.580135*, %FloRange.580135** %.303, align 8
  call void %.278(%TypeChecker.580449* %.1, i64 1, %string.580129* %.291, %FloRange.580135* %.304)
  ret %Program.580445* null

for.body.3.endif:                                 ; preds = %for.body.3
  %.309 = load %"Map<string, Type>.580368"*, %"Map<string, Type>.580368"** %.308, align 8
  %.310 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.309, i64 0, i32 0
  %.311 = load %"Map<string, Type>_vtable_ty.580384"*, %"Map<string, Type>_vtable_ty.580384"** %.310, align 8
  %.312 = getelementptr inbounds %"Map<string, Type>_vtable_ty.580384", %"Map<string, Type>_vtable_ty.580384"* %.311, i64 0, i32 2
  %.313 = load void (%"Map<string, Type>.580368"*, %string.580129*, %Type.580273*)*, void (%"Map<string, Type>.580368"*, %string.580129*, %Type.580273*)** %.312, align 8
  %.314 = load %string.580129*, %string.580129** %alias_name, align 8
  call void %.313(%"Map<string, Type>.580368"* %.309, %string.580129* %.314, %Type.580273* %.253)
  %.321 = add nuw nsw i64 %storemerge1385, 1
  %.230 = load %"Array<TypeAliasNode>.580263"*, %"Array<TypeAliasNode>.580263"** %.229, align 8
  %.231 = getelementptr inbounds %"Array<TypeAliasNode>.580263", %"Array<TypeAliasNode>.580263"* %.230, i64 0, i32 2
  %.232 = load i64, i64* %.231, align 8
  %.233 = icmp slt i64 %.321, %.232
  br i1 %.233, label %for.body.3, label %for.cond.4.preheader

for.cond.5.preheader:                             ; preds = %for.body.4, %for.cond.4.preheader
  %.362 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.2, i64 0, i32 6
  %.36369 = load %"Array<VarDeclarationStatement>.580262"*, %"Array<VarDeclarationStatement>.580262"** %.362, align 8
  %.36470 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.36369, i64 0, i32 2
  %.36571 = load i64, i64* %.36470, align 8
  %.36672 = icmp sgt i64 %.36571, 0
  br i1 %.36672, label %for.body.5, label %for.cond.6.preheader

for.body.4:                                       ; preds = %for.cond.4.preheader, %for.body.4
  %.33080 = phi %"Array<ConstDeclarationStatement>.580261"* [ %.330, %for.body.4 ], [ %.33075, %for.cond.4.preheader ]
  %storemerge1479 = phi i64 [ %.354, %for.body.4 ], [ 0, %for.cond.4.preheader ]
  %.337 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.338 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.337, i64 0, i32 22
  %.339 = load void (%TypeChecker.580449*, %ConstDeclarationStatement.580221*)*, void (%TypeChecker.580449*, %ConstDeclarationStatement.580221*)** %.338, align 8
  %.344 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.33080, i64 0, i32 0
  %.345 = load %"Array<ConstDeclarationStatement>_vtable_ty.580268"*, %"Array<ConstDeclarationStatement>_vtable_ty.580268"** %.344, align 8
  %.346 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.580268", %"Array<ConstDeclarationStatement>_vtable_ty.580268"* %.345, i64 0, i32 5
  %.347 = load %ConstDeclarationStatement.580221* (%"Array<ConstDeclarationStatement>.580261"*, i64)*, %ConstDeclarationStatement.580221* (%"Array<ConstDeclarationStatement>.580261"*, i64)** %.346, align 8
  %.348 = call %ConstDeclarationStatement.580221* %.347(%"Array<ConstDeclarationStatement>.580261"* %.33080, i64 %storemerge1479)
  call void %.339(%TypeChecker.580449* %.1, %ConstDeclarationStatement.580221* %.348)
  %.354 = add nuw nsw i64 %storemerge1479, 1
  %.330 = load %"Array<ConstDeclarationStatement>.580261"*, %"Array<ConstDeclarationStatement>.580261"** %.329, align 8
  %.331 = getelementptr inbounds %"Array<ConstDeclarationStatement>.580261", %"Array<ConstDeclarationStatement>.580261"* %.330, i64 0, i32 2
  %.332 = load i64, i64* %.331, align 8
  %.333 = icmp slt i64 %.354, %.332
  br i1 %.333, label %for.body.4, label %for.cond.5.preheader

for.cond.6.preheader:                             ; preds = %for.body.5, %for.cond.5.preheader
  %.395 = getelementptr inbounds %ModuleAST.580255, %ModuleAST.580255* %.2, i64 0, i32 1
  %.39660 = load %"Array<FunctionDeclarationNode>.580257"*, %"Array<FunctionDeclarationNode>.580257"** %.395, align 8
  %.39761 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.39660, i64 0, i32 2
  %.39862 = load i64, i64* %.39761, align 8
  %.39963 = icmp sgt i64 %.39862, 0
  %.40364 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  br i1 %.39963, label %for.body.6, label %for.end.6

for.body.5:                                       ; preds = %for.cond.5.preheader, %for.body.5
  %.36374 = phi %"Array<VarDeclarationStatement>.580262"* [ %.363, %for.body.5 ], [ %.36369, %for.cond.5.preheader ]
  %storemerge1573 = phi i64 [ %.387, %for.body.5 ], [ 0, %for.cond.5.preheader ]
  %.370 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.371 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.370, i64 0, i32 23
  %.372 = load void (%TypeChecker.580449*, %VarDeclarationStatement.580219*)*, void (%TypeChecker.580449*, %VarDeclarationStatement.580219*)** %.371, align 8
  %.377 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.36374, i64 0, i32 0
  %.378 = load %"Array<VarDeclarationStatement>_vtable_ty.580269"*, %"Array<VarDeclarationStatement>_vtable_ty.580269"** %.377, align 8
  %.379 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.580269", %"Array<VarDeclarationStatement>_vtable_ty.580269"* %.378, i64 0, i32 5
  %.380 = load %VarDeclarationStatement.580219* (%"Array<VarDeclarationStatement>.580262"*, i64)*, %VarDeclarationStatement.580219* (%"Array<VarDeclarationStatement>.580262"*, i64)** %.379, align 8
  %.381 = call %VarDeclarationStatement.580219* %.380(%"Array<VarDeclarationStatement>.580262"* %.36374, i64 %storemerge1573)
  call void %.372(%TypeChecker.580449* %.1, %VarDeclarationStatement.580219* %.381)
  %.387 = add nuw nsw i64 %storemerge1573, 1
  %.363 = load %"Array<VarDeclarationStatement>.580262"*, %"Array<VarDeclarationStatement>.580262"** %.362, align 8
  %.364 = getelementptr inbounds %"Array<VarDeclarationStatement>.580262", %"Array<VarDeclarationStatement>.580262"* %.363, i64 0, i32 2
  %.365 = load i64, i64* %.364, align 8
  %.366 = icmp slt i64 %.387, %.365
  br i1 %.366, label %for.body.5, label %for.cond.6.preheader

for.body.6:                                       ; preds = %for.cond.6.preheader, %for.body.6
  %.40367 = phi %TypeChecker_vtable_ty.580450* [ %.403, %for.body.6 ], [ %.40364, %for.cond.6.preheader ]
  %.39666 = phi %"Array<FunctionDeclarationNode>.580257"* [ %.396, %for.body.6 ], [ %.39660, %for.cond.6.preheader ]
  %storemerge1665 = phi i64 [ %.420, %for.body.6 ], [ 0, %for.cond.6.preheader ]
  %.404 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.40367, i64 0, i32 28
  %.405 = load void (%TypeChecker.580449*, %FunctionDeclarationNode.580225*)*, void (%TypeChecker.580449*, %FunctionDeclarationNode.580225*)** %.404, align 8
  %.410 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.39666, i64 0, i32 0
  %.411 = load %"Array<FunctionDeclarationNode>_vtable_ty.580264"*, %"Array<FunctionDeclarationNode>_vtable_ty.580264"** %.410, align 8
  %.412 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.580264", %"Array<FunctionDeclarationNode>_vtable_ty.580264"* %.411, i64 0, i32 5
  %.413 = load %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)*, %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)** %.412, align 8
  %.414 = call %FunctionDeclarationNode.580225* %.413(%"Array<FunctionDeclarationNode>.580257"* %.39666, i64 %storemerge1665)
  call void %.405(%TypeChecker.580449* %.1, %FunctionDeclarationNode.580225* %.414)
  %.420 = add nuw nsw i64 %storemerge1665, 1
  %.396 = load %"Array<FunctionDeclarationNode>.580257"*, %"Array<FunctionDeclarationNode>.580257"** %.395, align 8
  %.397 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.396, i64 0, i32 2
  %.398 = load i64, i64* %.397, align 8
  %.399 = icmp slt i64 %.420, %.398
  %.403 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  br i1 %.399, label %for.body.6, label %for.end.6

for.end.6:                                        ; preds = %for.body.6, %for.cond.6.preheader
  %.403.lcssa = phi %TypeChecker_vtable_ty.580450* [ %.40364, %for.cond.6.preheader ], [ %.403, %for.body.6 ]
  %.426 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.403.lcssa, i64 0, i32 17
  %.427 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.426, align 8
  %.428 = call i1 %.427(%TypeChecker.580449* %.1)
  br i1 %.428, label %for.end.2.if, label %for.cond.7.preheader

for.cond.7.preheader:                             ; preds = %for.end.6
  %.43754 = load %"Array<ClassDeclarationNode>.580258"*, %"Array<ClassDeclarationNode>.580258"** %.188, align 8
  %.43855 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.43754, i64 0, i32 2
  %.43956 = load i64, i64* %.43855, align 8
  %.44057 = icmp sgt i64 %.43956, 0
  br i1 %.44057, label %for.body.7, label %for.cond.8.preheader

for.cond.8.preheader:                             ; preds = %for.body.7, %for.cond.7.preheader
  %.47049 = load %"Array<EnumNode>.580259"*, %"Array<EnumNode>.580259"** %.155, align 8
  %.47150 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.47049, i64 0, i32 2
  %.47251 = load i64, i64* %.47150, align 8
  %.47352 = icmp sgt i64 %.47251, 0
  br i1 %.47352, label %for.body.8.lr.ph, label %for.cond.9.preheader

for.body.8.lr.ph:                                 ; preds = %for.cond.8.preheader
  %.482 = getelementptr inbounds i8, i8* %.27, i64 56
  %18 = bitcast i8* %.482 to %"Array<Enum>.580427"**
  br label %for.body.8

for.body.7:                                       ; preds = %for.cond.7.preheader, %for.body.7
  %.43759 = phi %"Array<ClassDeclarationNode>.580258"* [ %.437, %for.body.7 ], [ %.43754, %for.cond.7.preheader ]
  %storemerge1758 = phi i64 [ %.461, %for.body.7 ], [ 0, %for.cond.7.preheader ]
  %.444 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.445 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.444, i64 0, i32 33
  %.446 = load void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)** %.445, align 8
  %.451 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.43759, i64 0, i32 0
  %.452 = load %"Array<ClassDeclarationNode>_vtable_ty.580265"*, %"Array<ClassDeclarationNode>_vtable_ty.580265"** %.451, align 8
  %.453 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.580265", %"Array<ClassDeclarationNode>_vtable_ty.580265"* %.452, i64 0, i32 5
  %.454 = load %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)*, %ClassDeclarationNode.580235* (%"Array<ClassDeclarationNode>.580258"*, i64)** %.453, align 8
  %.455 = call %ClassDeclarationNode.580235* %.454(%"Array<ClassDeclarationNode>.580258"* %.43759, i64 %storemerge1758)
  call void %.446(%TypeChecker.580449* %.1, %ClassDeclarationNode.580235* %.455)
  %.461 = add nuw nsw i64 %storemerge1758, 1
  %.437 = load %"Array<ClassDeclarationNode>.580258"*, %"Array<ClassDeclarationNode>.580258"** %.188, align 8
  %.438 = getelementptr inbounds %"Array<ClassDeclarationNode>.580258", %"Array<ClassDeclarationNode>.580258"* %.437, i64 0, i32 2
  %.439 = load i64, i64* %.438, align 8
  %.440 = icmp slt i64 %.461, %.439
  br i1 %.440, label %for.body.7, label %for.cond.8.preheader

for.cond.9.preheader:                             ; preds = %for.body.8, %for.cond.8.preheader
  %.51244 = load %"Array<FunctionDeclarationNode>.580257"*, %"Array<FunctionDeclarationNode>.580257"** %.395, align 8
  %.51345 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.51244, i64 0, i32 2
  %.51446 = load i64, i64* %.51345, align 8
  %.51547 = icmp sgt i64 %.51446, 0
  br i1 %.51547, label %for.body.9.lr.ph, label %for.end.9

for.body.9.lr.ph:                                 ; preds = %for.cond.9.preheader
  %.524 = getelementptr inbounds i8, i8* %.27, i64 48
  %19 = bitcast i8* %.524 to %"Array<Function>.580426"**
  br label %for.body.9

for.body.8:                                       ; preds = %for.body.8.lr.ph, %for.body.8
  %storemerge1853 = phi i64 [ 0, %for.body.8.lr.ph ], [ %.503, %for.body.8 ]
  %.477 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.478 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.477, i64 0, i32 29
  %.479 = load void (%TypeChecker.580449*, %Enum.580417*, %EnumNode.580245*)*, void (%TypeChecker.580449*, %Enum.580417*, %EnumNode.580245*)** %.478, align 8
  %.483 = load %"Array<Enum>.580427"*, %"Array<Enum>.580427"** %18, align 8
  %.484 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.483, i64 0, i32 0
  %.485 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.484, align 8
  %.486 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.485, i64 0, i32 5
  %.487 = load %Enum.580417* (%"Array<Enum>.580427"*, i64)*, %Enum.580417* (%"Array<Enum>.580427"*, i64)** %.486, align 8
  %.488 = call %Enum.580417* %.487(%"Array<Enum>.580427"* %.483, i64 %storemerge1853)
  %.492 = load %"Array<EnumNode>.580259"*, %"Array<EnumNode>.580259"** %.155, align 8
  %.493 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.492, i64 0, i32 0
  %.494 = load %"Array<EnumNode>_vtable_ty.580266"*, %"Array<EnumNode>_vtable_ty.580266"** %.493, align 8
  %.495 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.580266", %"Array<EnumNode>_vtable_ty.580266"* %.494, i64 0, i32 5
  %.496 = load %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)*, %EnumNode.580245* (%"Array<EnumNode>.580259"*, i64)** %.495, align 8
  %.497 = call %EnumNode.580245* %.496(%"Array<EnumNode>.580259"* %.492, i64 %storemerge1853)
  call void %.479(%TypeChecker.580449* %.1, %Enum.580417* %.488, %EnumNode.580245* %.497)
  %.503 = add nuw nsw i64 %storemerge1853, 1
  %.470 = load %"Array<EnumNode>.580259"*, %"Array<EnumNode>.580259"** %.155, align 8
  %.471 = getelementptr inbounds %"Array<EnumNode>.580259", %"Array<EnumNode>.580259"* %.470, i64 0, i32 2
  %.472 = load i64, i64* %.471, align 8
  %.473 = icmp slt i64 %.503, %.472
  br i1 %.473, label %for.body.8, label %for.cond.9.preheader

for.body.9:                                       ; preds = %for.body.9.lr.ph, %for.body.9
  %storemerge1948 = phi i64 [ 0, %for.body.9.lr.ph ], [ %.545, %for.body.9 ]
  %.519 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.49, align 8
  %.520 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.519, i64 0, i32 34
  %.521 = load void (%TypeChecker.580449*, %Function.580391*, %FunctionDeclarationNode.580225*)*, void (%TypeChecker.580449*, %Function.580391*, %FunctionDeclarationNode.580225*)** %.520, align 8
  %.525 = load %"Array<Function>.580426"*, %"Array<Function>.580426"** %19, align 8
  %.526 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.525, i64 0, i32 0
  %.527 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.526, align 8
  %.528 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.527, i64 0, i32 5
  %.529 = load %Function.580391* (%"Array<Function>.580426"*, i64)*, %Function.580391* (%"Array<Function>.580426"*, i64)** %.528, align 8
  %.530 = call %Function.580391* %.529(%"Array<Function>.580426"* %.525, i64 %storemerge1948)
  %.534 = load %"Array<FunctionDeclarationNode>.580257"*, %"Array<FunctionDeclarationNode>.580257"** %.395, align 8
  %.535 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.534, i64 0, i32 0
  %.536 = load %"Array<FunctionDeclarationNode>_vtable_ty.580264"*, %"Array<FunctionDeclarationNode>_vtable_ty.580264"** %.535, align 8
  %.537 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.580264", %"Array<FunctionDeclarationNode>_vtable_ty.580264"* %.536, i64 0, i32 5
  %.538 = load %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)*, %FunctionDeclarationNode.580225* (%"Array<FunctionDeclarationNode>.580257"*, i64)** %.537, align 8
  %.539 = call %FunctionDeclarationNode.580225* %.538(%"Array<FunctionDeclarationNode>.580257"* %.534, i64 %storemerge1948)
  call void %.521(%TypeChecker.580449* %.1, %Function.580391* %.530, %FunctionDeclarationNode.580225* %.539)
  %.545 = add nuw nsw i64 %storemerge1948, 1
  %.512 = load %"Array<FunctionDeclarationNode>.580257"*, %"Array<FunctionDeclarationNode>.580257"** %.395, align 8
  %.513 = getelementptr inbounds %"Array<FunctionDeclarationNode>.580257", %"Array<FunctionDeclarationNode>.580257"* %.512, i64 0, i32 2
  %.514 = load i64, i64* %.513, align 8
  %.515 = icmp slt i64 %.545, %.514
  br i1 %.515, label %for.body.9, label %for.end.9

for.end.9:                                        ; preds = %for.body.9, %for.cond.9.preheader
  %.550 = load %Program.580445*, %Program.580445** %.38, align 8
  ret %Program.580445* %.550
}

define %Type.580273* @TypeChecker_create_generic_instance_in_module(%TypeChecker.580449* %.1, %string.580129* %.2, %"Array<Type>.580281"* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.11, i64 0, i32 0
  %.13 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.12, align 8
  %.14 = call %Module.580421* %.13(%TypeChecker.580449* %.1)
  %.15 = getelementptr inbounds %Module.580421, %Module.580421* %.14, i64 0, i32 11
  %.16 = load %"Map<string, ClassDeclarationNode>.580431"*, %"Map<string, ClassDeclarationNode>.580431"** %.15, align 8
  %.17 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.16, i64 0, i32 0
  %.18 = load %"Map<string, ClassDeclarationNode>_vtable_ty.580440"*, %"Map<string, ClassDeclarationNode>_vtable_ty.580440"** %.17, align 8
  %.19 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.580440", %"Map<string, ClassDeclarationNode>_vtable_ty.580440"* %.18, i64 0, i32 3
  %.20 = load %ClassDeclarationNode.580235* (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)*, %ClassDeclarationNode.580235* (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)** %.19, align 8
  %.22 = call %ClassDeclarationNode.580235* %.20(%"Map<string, ClassDeclarationNode>.580431"* %.16, %string.580129* %.2)
  %0 = ptrtoint %ClassDeclarationNode.580235* %.22 to i64
  %.25 = trunc i64 %0 to i32
  %.27 = icmp eq i32 %.25, 0
  br i1 %.27, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %for.end, %.5
  %merge = phi %Type.580273* [ null, %.5 ], [ %.216, %for.end ]
  ret %Type.580273* %merge

.5.endif:                                         ; preds = %.5
  %.31 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.22, i64 0, i32 2
  %1 = bitcast %"Array<GenericParameterNode>.580237"** %.31 to i64*
  %.321 = load i64, i64* %1, align 8
  %generic_params = alloca %"Array<GenericParameterNode>.580237"*, align 8
  %2 = bitcast %"Array<GenericParameterNode>.580237"** %generic_params to i64*
  store i64 %.321, i64* %2, align 8
  %.34.cast = inttoptr i64 %.321 to %"Array<GenericParameterNode>.580237"*
  %.35 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.34.cast, i64 0, i32 2
  %.36 = load i64, i64* %.35, align 8
  %.38 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.3, i64 0, i32 2
  %.39 = load i64, i64* %.38, align 8
  %.40.not = icmp eq i64 %.36, %.39
  br i1 %.40.not, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.44 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.45 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.44, i64 0, i32 16
  %.46 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.45, align 8
  %.47 = load %"Array<GenericParameterNode>.580237"*, %"Array<GenericParameterNode>.580237"** %generic_params, align 8
  %.48 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.47, i64 0, i32 2
  %.49 = load i64, i64* %.48, align 8
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.269, i64 0, i64 0), i64 %.49, i64 %.39)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.269, i64 0, i64 0), i64 %.49, i64 %.39)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %3 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %3, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %4 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %4, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %5 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %5, align 8
  %.69 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.47, i64 0, i32 0
  %.70 = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.69, align 8
  %.71 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.70, i64 0, i32 5
  %.72 = load %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)*, %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)** %.71, align 8
  %.73 = call %GenericParameterNode.580233* %.72(%"Array<GenericParameterNode>.580237"* %.47, i64 0)
  %.74 = getelementptr inbounds %GenericParameterNode.580233, %GenericParameterNode.580233* %.73, i64 0, i32 1
  %.75 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.74, align 8
  %.76 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.75, i64 0, i32 2
  %.77 = load %FloRange.580135*, %FloRange.580135** %.76, align 8
  call void %.46(%TypeChecker.580449* %.1, i64 5, %string.580129* %.59, %FloRange.580135* %.77)
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif, %.5.endif.if
  %.82 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.83 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.82, i64 0, i32 15
  %.84 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.83, align 8
  %.85 = call %Scope.580363* %.84(%TypeChecker.580449* %.1)
  %.87 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.89 = bitcast i8* %.87 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.89, align 8
  %.91 = getelementptr inbounds i8, i8* %.87, i64 8
  %6 = bitcast i8* %.91 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %6, align 8
  %.93 = getelementptr inbounds i8, i8* %.87, i64 16
  %param_strings = alloca %string.580129*, align 8
  %7 = bitcast %string.580129** %param_strings to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.93, i8 0, i64 16, i1 false)
  store i8* %.87, i8** %7, align 8
  %.1027 = load %"Array<GenericParameterNode>.580237"*, %"Array<GenericParameterNode>.580237"** %generic_params, align 8
  %.1038 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1027, i64 0, i32 2
  %.1049 = load i64, i64* %.1038, align 8
  %.10510 = icmp sgt i64 %.1049, 0
  br i1 %.10510, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif.endif
  %.127 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.3, i64 0, i32 0
  %.160 = getelementptr inbounds %Scope.580363, %Scope.580363* %.85, i64 0, i32 7
  %.102 = load %"Array<GenericParameterNode>.580237"*, %"Array<GenericParameterNode>.580237"** %generic_params, align 8
  %.103 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.102, i64 0, i32 2
  %param_strings.promoted = load %string.580129*, %string.580129** %param_strings, align 8
  %.109.peel = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.1027, i64 0, i32 0
  %.110.peel = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.109.peel, align 8
  %.111.peel = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.110.peel, i64 0, i32 5
  %.112.peel = load %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)*, %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)** %.111.peel, align 8
  %.113.peel = call %GenericParameterNode.580233* %.112.peel(%"Array<GenericParameterNode>.580237"* %.1027, i64 0)
  %.114.peel = getelementptr inbounds %GenericParameterNode.580233, %GenericParameterNode.580233* %.113.peel, i64 0, i32 1
  %.115.peel = load %IdentifierToken.580155*, %IdentifierToken.580155** %.114.peel, align 8
  %.116.peel = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.115.peel, i64 0, i32 3
  %8 = bitcast %string.580129** %.116.peel to i64*
  %.1176.peel = load i64, i64* %8, align 8
  %param_name.peel = alloca %string.580129*, align 8
  %9 = bitcast %string.580129** %param_name.peel to i64*
  store i64 %.1176.peel, i64* %9, align 8
  %.122.peel = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.123.peel = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.122.peel, i64 0, i32 10
  %.124.peel = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.123.peel, align 8
  %.128.peel = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.127, align 8
  %.129.peel = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.128.peel, i64 0, i32 5
  %.130.peel = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.129.peel, align 8
  %.131.peel = call %Type.580273* %.130.peel(%"Array<Type>.580281"* %.3, i64 0)
  %.132.peel = call %string.580129* %.124.peel(%TypeChecker.580449* %.1, %Type.580273* %.131.peel)
  %.133.peel = getelementptr inbounds %string.580129, %string.580129* %.132.peel, i64 0, i32 0
  %.134.peel = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.133.peel, align 8
  %.135.peel = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.134.peel, i64 0, i32 10
  %.136.peel = load i8* (%string.580129*)*, i8* (%string.580129*)** %.135.peel, align 8
  %.137.peel = call i8* %.136.peel(%string.580129* %.132.peel)
  %.139.peel = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.270, i64 0, i64 0), i8* %.137.peel)
  %.141.peel = call i8* @malloc(i64 %.139.peel)
  %.142.peel = call i64 (i8*, i8*, ...) @sprintf(i8* %.141.peel, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.270, i64 0, i64 0), i8* %.137.peel)
  %.143.peel = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.144.peel = bitcast i8* %.143.peel to %string.580129*
  %.145.peel = bitcast i8* %.143.peel to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.145.peel, align 8
  %.147.peel = getelementptr inbounds i8, i8* %.143.peel, i64 8
  %10 = bitcast i8* %.147.peel to i8**
  store i8* %.141.peel, i8** %10, align 8
  %.149.peel = getelementptr inbounds i8, i8* %.143.peel, i64 16
  %11 = bitcast i8* %.149.peel to i64*
  store i64 %.139.peel, i64* %11, align 8
  %.151.peel = getelementptr inbounds i8, i8* %.143.peel, i64 24
  %12 = bitcast i8* %.151.peel to i64*
  store i64 %.139.peel, i64* %12, align 8
  %.153.peel = getelementptr inbounds %string.580129, %string.580129* %param_strings.promoted, i64 0, i32 0
  %.154.peel = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.153.peel, align 8
  %.155.peel = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.154.peel, i64 0, i32 0
  %.156.peel = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.155.peel, align 8
  %.157.peel = call %string.580129* %.156.peel(%string.580129* %param_strings.promoted, %string.580129* %.144.peel)
  %.161.peel = load %"Map<string, Type>.580368"*, %"Map<string, Type>.580368"** %.160, align 8
  %.162.peel = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.161.peel, i64 0, i32 0
  %.163.peel = load %"Map<string, Type>_vtable_ty.580384"*, %"Map<string, Type>_vtable_ty.580384"** %.162.peel, align 8
  %.164.peel = getelementptr inbounds %"Map<string, Type>_vtable_ty.580384", %"Map<string, Type>_vtable_ty.580384"* %.163.peel, i64 0, i32 2
  %.165.peel = load void (%"Map<string, Type>.580368"*, %string.580129*, %Type.580273*)*, void (%"Map<string, Type>.580368"*, %string.580129*, %Type.580273*)** %.164.peel, align 8
  %.166.peel = load %string.580129*, %string.580129** %param_name.peel, align 8
  %.170.peel = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.127, align 8
  %.171.peel = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.170.peel, i64 0, i32 5
  %.172.peel = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.171.peel, align 8
  %.173.peel = call %Type.580273* %.172.peel(%"Array<Type>.580281"* %.3, i64 0)
  call void %.165.peel(%"Map<string, Type>.580368"* %.161.peel, %string.580129* %.166.peel, %Type.580273* %.173.peel)
  %.104.peel = load i64, i64* %.103, align 8
  %.105.peel = icmp sgt i64 %.104.peel, 1
  br i1 %.105.peel, label %for.body.lr.ph.peel.newph, label %for.cond.for.end_crit_edge

for.body.lr.ph.peel.newph:                        ; preds = %for.body.lr.ph
  %.109 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.102, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.peel.newph
  %.15713 = phi %string.580129* [ %.157.peel, %for.body.lr.ph.peel.newph ], [ %.157, %for.body ]
  %storemerge11 = phi i64 [ 1, %for.body.lr.ph.peel.newph ], [ %.179, %for.body ]
  %.110 = load %"Array<GenericParameterNode>_vtable_ty.580240"*, %"Array<GenericParameterNode>_vtable_ty.580240"** %.109, align 8
  %.111 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.580240", %"Array<GenericParameterNode>_vtable_ty.580240"* %.110, i64 0, i32 5
  %.112 = load %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)*, %GenericParameterNode.580233* (%"Array<GenericParameterNode>.580237"*, i64)** %.111, align 8
  %.113 = call %GenericParameterNode.580233* %.112(%"Array<GenericParameterNode>.580237"* %.102, i64 %storemerge11)
  %.114 = getelementptr inbounds %GenericParameterNode.580233, %GenericParameterNode.580233* %.113, i64 0, i32 1
  %.115 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.114, align 8
  %.116 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.115, i64 0, i32 3
  %13 = bitcast %string.580129** %.116 to i64*
  %.1176 = load i64, i64* %13, align 8
  %param_name = alloca %string.580129*, align 8
  %14 = bitcast %string.580129** %param_name to i64*
  store i64 %.1176, i64* %14, align 8
  %.122 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.123 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.122, i64 0, i32 10
  %.124 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.123, align 8
  %.128 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.127, align 8
  %.129 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.128, i64 0, i32 5
  %.130 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.129, align 8
  %.131 = call %Type.580273* %.130(%"Array<Type>.580281"* %.3, i64 %storemerge11)
  %.132 = call %string.580129* %.124(%TypeChecker.580449* %.1, %Type.580273* %.131)
  %.133 = getelementptr inbounds %string.580129, %string.580129* %.132, i64 0, i32 0
  %.134 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.133, align 8
  %.135 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.134, i64 0, i32 10
  %.136 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.135, align 8
  %.137 = call i8* %.136(%string.580129* %.132)
  %.139 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.270, i64 0, i64 0), i8* %.137)
  %.141 = call i8* @malloc(i64 %.139)
  %.142 = call i64 (i8*, i8*, ...) @sprintf(i8* %.141, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.270, i64 0, i64 0), i8* %.137)
  %.143 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.144 = bitcast i8* %.143 to %string.580129*
  %.145 = bitcast i8* %.143 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.145, align 8
  %.147 = getelementptr inbounds i8, i8* %.143, i64 8
  %15 = bitcast i8* %.147 to i8**
  store i8* %.141, i8** %15, align 8
  %.149 = getelementptr inbounds i8, i8* %.143, i64 16
  %16 = bitcast i8* %.149 to i64*
  store i64 %.139, i64* %16, align 8
  %.151 = getelementptr inbounds i8, i8* %.143, i64 24
  %17 = bitcast i8* %.151 to i64*
  store i64 %.139, i64* %17, align 8
  %.153 = getelementptr inbounds %string.580129, %string.580129* %.15713, i64 0, i32 0
  %.154 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.153, align 8
  %.155 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.154, i64 0, i32 0
  %.156 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.155, align 8
  %.157 = call %string.580129* %.156(%string.580129* %.15713, %string.580129* %.144)
  %.161 = load %"Map<string, Type>.580368"*, %"Map<string, Type>.580368"** %.160, align 8
  %.162 = getelementptr inbounds %"Map<string, Type>.580368", %"Map<string, Type>.580368"* %.161, i64 0, i32 0
  %.163 = load %"Map<string, Type>_vtable_ty.580384"*, %"Map<string, Type>_vtable_ty.580384"** %.162, align 8
  %.164 = getelementptr inbounds %"Map<string, Type>_vtable_ty.580384", %"Map<string, Type>_vtable_ty.580384"* %.163, i64 0, i32 2
  %.165 = load void (%"Map<string, Type>.580368"*, %string.580129*, %Type.580273*)*, void (%"Map<string, Type>.580368"*, %string.580129*, %Type.580273*)** %.164, align 8
  %.166 = load %string.580129*, %string.580129** %param_name, align 8
  %.170 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.127, align 8
  %.171 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.170, i64 0, i32 5
  %.172 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.171, align 8
  %.173 = call %Type.580273* %.172(%"Array<Type>.580281"* %.3, i64 %storemerge11)
  call void %.165(%"Map<string, Type>.580368"* %.161, %string.580129* %.166, %Type.580273* %.173)
  %.179 = add nuw nsw i64 %storemerge11, 1
  %.104 = load i64, i64* %.103, align 8
  %.105 = icmp slt i64 %.179, %.104
  br i1 %.105, label %for.body, label %for.cond.for.end_crit_edge, !llvm.loop !0

for.cond.for.end_crit_edge:                       ; preds = %for.body, %for.body.lr.ph
  %.157.lcssa = phi %string.580129* [ %.157.peel, %for.body.lr.ph ], [ %.157, %for.body ]
  store %string.580129* %.157.lcssa, %string.580129** %param_strings, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.5.endif.endif
  %.183 = load %string.580129*, %string.580129** %param_strings, align 8
  %.184 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  %.185 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.184, align 8
  %.186 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.185, i64 0, i32 10
  %.187 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.186, align 8
  %.188 = call i8* %.187(%string.580129* %.2)
  %.189 = getelementptr inbounds %string.580129, %string.580129* %.183, i64 0, i32 0
  %.190 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.189, align 8
  %.191 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.190, i64 0, i32 10
  %.192 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.191, align 8
  %.193 = call i8* %.192(%string.580129* %.183)
  %.195 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.271, i64 0, i64 0), i8* %.188, i8* %.193)
  %.197 = call i8* @malloc(i64 %.195)
  %.198 = call i64 (i8*, i8*, ...) @sprintf(i8* %.197, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.271, i64 0, i64 0), i8* %.188, i8* %.193)
  %.199 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.201 = bitcast i8* %.199 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.201, align 8
  %.203 = getelementptr inbounds i8, i8* %.199, i64 8
  %18 = bitcast i8* %.203 to i8**
  store i8* %.197, i8** %18, align 8
  %.205 = getelementptr inbounds i8, i8* %.199, i64 16
  %19 = bitcast i8* %.205 to i64*
  store i64 %.195, i64* %19, align 8
  %.207 = getelementptr inbounds i8, i8* %.199, i64 24
  %20 = bitcast i8* %.207 to i64*
  store i64 %.195, i64* %20, align 8
  %instantiated_generic_name = alloca %string.580129*, align 8
  %21 = bitcast %string.580129** %instantiated_generic_name to i8**
  store i8* %.199, i8** %21, align 8
  %.212 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.213 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.212, i64 0, i32 14
  %.214 = load %Type.580273* (%TypeChecker.580449*, %string.580129*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*)** %.213, align 8
  %.215.cast = bitcast i8* %.199 to %string.580129*
  %.216 = call %Type.580273* %.214(%TypeChecker.580449* %.1, %string.580129* %.215.cast)
  %.219 = getelementptr inbounds %Type.580273, %Type.580273* %.216, i64 0, i32 1
  %.220 = load i64, i64* %.219, align 8
  %.221.not = icmp eq i64 %.220, 21
  br i1 %.221.not, label %for.end.endif, label %.5.if

for.end.endif:                                    ; preds = %for.end
  %.226 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.22, i64 0, i32 1
  %.227 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.226, align 8
  %22 = bitcast %string.580129** %instantiated_generic_name to i64*
  %.2282 = load i64, i64* %22, align 8
  %.229 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.227, i64 0, i32 3
  %23 = bitcast %string.580129** %.229 to i64*
  store i64 %.2282, i64* %23, align 8
  %.233 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.235 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.237 = bitcast i8* %.235 to %"Array<GenericParameterNode>_vtable_ty.580240"**
  store %"Array<GenericParameterNode>_vtable_ty.580240"* @"Array<GenericParameterNode>_vtable_data", %"Array<GenericParameterNode>_vtable_ty.580240"** %.237, align 8
  %.239 = getelementptr inbounds i8, i8* %.235, i64 8
  %24 = bitcast i8* %.239 to i8**
  store i8* %.233, i8** %24, align 8
  %.241 = getelementptr inbounds i8, i8* %.235, i64 16
  %25 = bitcast i8* %.241 to i64*
  store i64 0, i64* %25, align 8
  %.243 = getelementptr inbounds i8, i8* %.235, i64 24
  %26 = bitcast i8* %.243 to i64*
  store i64 8, i64* %26, align 8
  %27 = bitcast %"Array<GenericParameterNode>.580237"** %.31 to i8**
  store i8* %.235, i8** %27, align 8
  %.249 = getelementptr inbounds %Scope.580363, %Scope.580363* %.85, i64 0, i32 1
  %28 = bitcast %ScopeId.580361** %.249 to i64*
  %.2503 = load i64, i64* %28, align 8
  %.251 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 6
  %29 = bitcast %ScopeId.580361** %.251 to i64*
  store i64 %.2503, i64* %29, align 8
  %.255 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.256 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.255, i64 0, i32 27
  %.257 = load void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)** %.256, align 8
  call void %.257(%TypeChecker.580449* %.1, %ClassDeclarationNode.580235* %.22)
  %.262 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.263 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.262, i64 0, i32 33
  %.264 = load void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %ClassDeclarationNode.580235*)** %.263, align 8
  call void %.264(%TypeChecker.580449* %.1, %ClassDeclarationNode.580235* %.22)
  %.269 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.226, align 8
  %.271 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.269, i64 0, i32 3
  store %string.580129* %.2, %string.580129** %.271, align 8
  store i64 %.321, i64* %1, align 8
  %.279 = getelementptr inbounds %Scope.580363, %Scope.580363* %.85, i64 0, i32 6
  %30 = bitcast %ScopeId.580361** %.279 to i64*
  %.2805 = load i64, i64* %30, align 8
  store i64 %.2805, i64* %29, align 8
  %.285 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.286 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.285, i64 0, i32 14
  %.287 = load %Type.580273* (%TypeChecker.580449*, %string.580129*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*)** %.286, align 8
  %.288 = load %string.580129*, %string.580129** %instantiated_generic_name, align 8
  %.289 = call %Type.580273* %.287(%TypeChecker.580449* %.1, %string.580129* %.288)
  ret %Type.580273* %.289
}

define %Var.580395* @TypeChecker_declare_var_within_current_scope(%TypeChecker.580449* %.1, %string.580129* %.2, %Expression.580293* %.3, %Type.580273* %.4) {
.6:
  %.13 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %Var.580395*
  %.15 = bitcast i8* %.13 to %Var_vtable_ty.580396**
  store %Var_vtable_ty.580396* @Var_vtable_data, %Var_vtable_ty.580396** %.15, align 8
  call void @Var_constructor(%Var.580395* %.14, %Expression.580293* %.3, %Type.580273* %.4)
  %.20 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.21, i64 0, i32 0
  %.23 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.22, align 8
  %.24 = call %Module.580421* %.23(%TypeChecker.580449* %.1)
  %.28 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.20, align 8
  %.29 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.28, i64 0, i32 1
  %.30 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.29, align 8
  %.31 = call %Scope.580363* %.30(%TypeChecker.580449* %.1)
  %.34 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 2
  %.35 = load i64, i64* %.34, align 8
  %.37 = getelementptr inbounds %Module.580421, %Module.580421* %.24, i64 0, i32 3
  %.38 = load %"Array<Var>.580423"*, %"Array<Var>.580423"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.38, i64 0, i32 2
  %.40 = load i64, i64* %.39, align 8
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %VarId.580331*
  %.43 = bitcast i8* %.41 to %VarId_vtable_ty.580332**
  store %VarId_vtable_ty.580332* @VarId_vtable_data, %VarId_vtable_ty.580332** %.43, align 8
  call void @VarId_constructor(%VarId.580331* %.42, i64 1, i64 %.35, i64 %.40)
  %.49 = getelementptr inbounds i8, i8* %.13, i64 16
  %0 = bitcast i8* %.49 to i8**
  store i8* %.41, i8** %0, align 8
  %.53 = load %"Array<Var>.580423"*, %"Array<Var>.580423"** %.37, align 8
  %.55 = getelementptr inbounds %"Array<Var>.580423", %"Array<Var>.580423"* %.53, i64 0, i32 0
  %.56 = load %"Array<Var>_vtable_ty.580432"*, %"Array<Var>_vtable_ty.580432"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<Var>_vtable_ty.580432", %"Array<Var>_vtable_ty.580432"* %.56, i64 0, i32 2
  %.58 = load void (%"Array<Var>.580423"*, %Var.580395*)*, void (%"Array<Var>.580423"*, %Var.580395*)** %.57, align 8
  call void %.58(%"Array<Var>.580423"* %.53, %Var.580395* %.14)
  %.61 = getelementptr inbounds %Scope.580363, %Scope.580363* %.31, i64 0, i32 2
  %.62 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.61, align 8
  %.63 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.62, i64 0, i32 0
  %.64 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.63, align 8
  %.65 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.64, i64 0, i32 2
  %.66 = load void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)*, void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)** %.65, align 8
  call void %.66(%"Map<string, VarId>.580365"* %.62, %string.580129* %.2, %VarId.580331* %.42)
  ret %Var.580395* %.14
}

define %Const.580397* @TypeChecker_declare_const_within_current_scope(%TypeChecker.580449* %.1, %string.580129* %.2, %Expression.580293* %.3, %Type.580273* %.4) {
.6:
  %.13 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %Const.580397*
  %.15 = bitcast i8* %.13 to %Const_vtable_ty.580398**
  store %Const_vtable_ty.580398* @Const_vtable_data, %Const_vtable_ty.580398** %.15, align 8
  call void @Const_constructor(%Const.580397* %.14, %Expression.580293* %.3, %Type.580273* %.4)
  %.20 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.21, i64 0, i32 0
  %.23 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.22, align 8
  %.24 = call %Module.580421* %.23(%TypeChecker.580449* %.1)
  %.28 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.20, align 8
  %.29 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.28, i64 0, i32 1
  %.30 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.29, align 8
  %.31 = call %Scope.580363* %.30(%TypeChecker.580449* %.1)
  %.34 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 2
  %.35 = load i64, i64* %.34, align 8
  %.37 = getelementptr inbounds %Module.580421, %Module.580421* %.24, i64 0, i32 4
  %.38 = load %"Array<Const>.580424"*, %"Array<Const>.580424"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.38, i64 0, i32 2
  %.40 = load i64, i64* %.39, align 8
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %ConstId.580337*
  %.43 = bitcast i8* %.41 to %ConstId_vtable_ty.580338**
  store %ConstId_vtable_ty.580338* @ConstId_vtable_data, %ConstId_vtable_ty.580338** %.43, align 8
  call void @ConstId_constructor(%ConstId.580337* %.42, i64 %.35, i64 %.40)
  %.49 = getelementptr inbounds i8, i8* %.13, i64 16
  %0 = bitcast i8* %.49 to i8**
  store i8* %.41, i8** %0, align 8
  %.53 = load %"Array<Const>.580424"*, %"Array<Const>.580424"** %.37, align 8
  %.55 = getelementptr inbounds %"Array<Const>.580424", %"Array<Const>.580424"* %.53, i64 0, i32 0
  %.56 = load %"Array<Const>_vtable_ty.580433"*, %"Array<Const>_vtable_ty.580433"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<Const>_vtable_ty.580433", %"Array<Const>_vtable_ty.580433"* %.56, i64 0, i32 2
  %.58 = load void (%"Array<Const>.580424"*, %Const.580397*)*, void (%"Array<Const>.580424"*, %Const.580397*)** %.57, align 8
  call void %.58(%"Array<Const>.580424"* %.53, %Const.580397* %.14)
  %.61 = getelementptr inbounds %Scope.580363, %Scope.580363* %.31, i64 0, i32 2
  %.62 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.61, align 8
  %.63 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.62, i64 0, i32 0
  %.64 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.63, align 8
  %.65 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.64, i64 0, i32 2
  %.66 = load void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)*, void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)** %.65, align 8
  %.69 = bitcast i8* %.41 to %VarId.580331*
  call void %.66(%"Map<string, VarId>.580365"* %.62, %string.580129* %.2, %VarId.580331* %.69)
  ret %Const.580397* %.14
}

define void @TypeChecker_declare_global_const(%TypeChecker.580449* %.1, %ConstDeclarationStatement.580221* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.9, i64 0, i32 64
  %.11 = load %ConstDeclaration.580353* (%TypeChecker.580449*, %ConstDeclarationStatement.580221*)*, %ConstDeclaration.580353* (%TypeChecker.580449*, %ConstDeclarationStatement.580221*)** %.10, align 8
  %.13 = call %ConstDeclaration.580353* %.11(%TypeChecker.580449* %.1, %ConstDeclarationStatement.580221* %.2)
  %.16 = getelementptr inbounds %ConstDeclaration.580353, %ConstDeclaration.580353* %.13, i64 0, i32 4
  store i1 true, i1* %.16, align 1
  %.20 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.21 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.20, i64 0, i32 0
  %.22 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.21, align 8
  %.23 = call %Module.580421* %.22(%TypeChecker.580449* %.1)
  %.24 = getelementptr inbounds %Module.580421, %Module.580421* %.23, i64 0, i32 9
  %.25 = load %"Array<ConstDeclaration>.580429"*, %"Array<ConstDeclaration>.580429"** %.24, align 8
  %.27 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.25, i64 0, i32 0
  %.28 = load %"Array<ConstDeclaration>_vtable_ty.580438"*, %"Array<ConstDeclaration>_vtable_ty.580438"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.580438", %"Array<ConstDeclaration>_vtable_ty.580438"* %.28, i64 0, i32 2
  %.30 = load void (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)*, void (%"Array<ConstDeclaration>.580429"*, %ConstDeclaration.580353*)** %.29, align 8
  call void %.30(%"Array<ConstDeclaration>.580429"* %.25, %ConstDeclaration.580353* %.13)
  ret void
}

define void @TypeChecker_declare_global_var(%TypeChecker.580449* %.1, %VarDeclarationStatement.580219* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.9, i64 0, i32 63
  %.11 = load %VarDeclaration.580351* (%TypeChecker.580449*, %VarDeclarationStatement.580219*)*, %VarDeclaration.580351* (%TypeChecker.580449*, %VarDeclarationStatement.580219*)** %.10, align 8
  %.13 = call %VarDeclaration.580351* %.11(%TypeChecker.580449* %.1, %VarDeclarationStatement.580219* %.2)
  %.17 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.18 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.17, i64 0, i32 17
  %.19 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.18, align 8
  %.20 = call i1 %.19(%TypeChecker.580449* %.1)
  br i1 %.20, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret void

.4.endif:                                         ; preds = %.4
  %.24 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.25 = load %Program.580445*, %Program.580445** %.24, align 8
  %.27 = getelementptr inbounds %VarDeclaration.580351, %VarDeclaration.580351* %.13, i64 0, i32 3
  %.28 = load %VarId.580331*, %VarId.580331** %.27, align 8
  %.29 = call %Var.580395* @get_var(%Program.580445* %.25, %VarId.580331* %.28)
  %.30 = getelementptr inbounds %Var.580395, %Var.580395* %.29, i64 0, i32 3
  %.31 = load %Expression.580293*, %Expression.580293** %.30, align 8
  %.32 = getelementptr inbounds %Expression.580293, %Expression.580293* %.31, i64 0, i32 2
  %.33 = load i1, i1* %.32, align 1
  br i1 %.33, label %.4.endif.endif, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.38 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.39 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.38, i64 0, i32 16
  %.40 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.39, align 8
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %string.580129*
  %.42.repack = bitcast i8* %.41 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.42.repack, align 8
  %.42.repack1 = getelementptr inbounds i8, i8* %.41, i64 8
  %0 = bitcast i8* %.42.repack1 to i8**
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.272, i64 0, i64 0), i8** %0, align 8
  %.42.repack2 = getelementptr inbounds i8, i8* %.41, i64 16
  %1 = bitcast i8* %.42.repack2 to i64*
  store i64 54, i64* %1, align 8
  %.42.repack3 = getelementptr inbounds i8, i8* %.41, i64 24
  %2 = bitcast i8* %.42.repack3 to i64*
  store i64 54, i64* %2, align 8
  %.45 = getelementptr inbounds %VarDeclarationStatement.580219, %VarDeclarationStatement.580219* %.2, i64 0, i32 5
  %.46 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.45, align 8
  %.47 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.46, i64 0, i32 1
  %.48 = load %FloRange.580135*, %FloRange.580135** %.47, align 8
  call void %.40(%TypeChecker.580449* %.1, i64 4, %string.580129* %.42, %FloRange.580135* %.48)
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.52 = getelementptr inbounds %VarDeclaration.580351, %VarDeclaration.580351* %.13, i64 0, i32 4
  store i1 true, i1* %.52, align 1
  %.56 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.57 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.56, i64 0, i32 0
  %.58 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.57, align 8
  %.59 = call %Module.580421* %.58(%TypeChecker.580449* %.1)
  %.60 = getelementptr inbounds %Module.580421, %Module.580421* %.59, i64 0, i32 10
  %.61 = load %"Array<VarDeclaration>.580430"*, %"Array<VarDeclaration>.580430"** %.60, align 8
  %.63 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.61, i64 0, i32 0
  %.64 = load %"Array<VarDeclaration>_vtable_ty.580439"*, %"Array<VarDeclaration>_vtable_ty.580439"** %.63, align 8
  %.65 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.580439", %"Array<VarDeclaration>_vtable_ty.580439"* %.64, i64 0, i32 2
  %.66 = load void (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)*, void (%"Array<VarDeclaration>.580430"*, %VarDeclaration.580351*)** %.65, align 8
  call void %.66(%"Array<VarDeclaration>.580430"* %.61, %VarDeclaration.580351* %.13)
  ret void
}

define noalias %FunctionType.580279* @TypeChecker_init_function_signature(%TypeChecker.580449* %.1, %"Array<ArgNode>.580227"* %.2, %TypeNode.580161* %.3, %"Array<FunctionArg>.580393"* %.4) {
.6:
  %.12 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.14 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.15 = bitcast i8* %.14 to %"Array<Type>.580281"*
  %.16 = bitcast i8* %.14 to %"Array<Type>_vtable_ty.580282"**
  store %"Array<Type>_vtable_ty.580282"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.580282"** %.16, align 8
  %.18 = getelementptr inbounds i8, i8* %.14, i64 8
  %0 = bitcast i8* %.18 to i8**
  store i8* %.12, i8** %0, align 8
  %.20 = getelementptr inbounds i8, i8* %.14, i64 16
  %1 = bitcast i8* %.20 to i64*
  store i64 0, i64* %1, align 8
  %.22 = getelementptr inbounds i8, i8* %.14, i64 24
  %2 = bitcast i8* %.22 to i64*
  store i64 8, i64* %2, align 8
  %.30 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.2, i64 0, i32 2
  %.319 = load i64, i64* %.30, align 8
  %.3210 = icmp sgt i64 %.319, 0
  br i1 %.3210, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.6
  %.36 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.2, i64 0, i32 0
  %.69 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.88 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.184 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.4, i64 0, i32 0
  %.194 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif
  %storemerge11 = phi i64 [ 0, %for.body.lr.ph ], [ %.223, %for.body.endif.endif ]
  %.37 = load %"Array<ArgNode>_vtable_ty.580228"*, %"Array<ArgNode>_vtable_ty.580228"** %.36, align 8
  %.38 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.580228", %"Array<ArgNode>_vtable_ty.580228"* %.37, i64 0, i32 5
  %.39 = load %ArgNode.580223* (%"Array<ArgNode>.580227"*, i64)*, %ArgNode.580223* (%"Array<ArgNode>.580227"*, i64)** %.38, align 8
  %.40 = call %ArgNode.580223* %.39(%"Array<ArgNode>.580227"* %.2, i64 %storemerge11)
  %.42 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.43 = bitcast i8* %.42 to %FunctionArg.580389*
  %.44 = bitcast i8* %.42 to %FunctionArg_vtable_ty.580390**
  store %FunctionArg_vtable_ty.580390* @FunctionArg_vtable_data, %FunctionArg_vtable_ty.580390** %.44, align 8
  call void @FunctionArg_constructor(%FunctionArg.580389* %.43)
  %fnc_arg = alloca %FunctionArg.580389*, align 8
  %3 = bitcast %FunctionArg.580389** %fnc_arg to i8**
  store i8* %.42, i8** %3, align 8
  %.50 = getelementptr inbounds %ArgNode.580223, %ArgNode.580223* %.40, i64 0, i32 1
  %.51 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.50, align 8
  %.52 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.51, i64 0, i32 3
  %4 = bitcast %string.580129** %.52 to i64*
  %.531 = load i64, i64* %4, align 8
  %.54 = getelementptr inbounds i8, i8* %.42, i64 48
  %5 = bitcast i8* %.54 to i64*
  store i64 %.531, i64* %5, align 8
  %.56 = load %FunctionArg.580389*, %FunctionArg.580389** %fnc_arg, align 8
  %.57 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.56, i64 0, i32 7
  store %Expression.580293* null, %Expression.580293** %.57, align 8
  %.59 = call %Type.580273* @Type_unknown()
  %arg_type = alloca %Type.580273*, align 8
  store %Type.580273* %.59, %Type.580273** %arg_type, align 8
  %.62 = getelementptr inbounds %ArgNode.580223, %ArgNode.580223* %.40, i64 0, i32 2
  %6 = bitcast %TypeNode.580161** %.62 to i64*
  %.632 = load i64, i64* %6, align 8
  %.64 = trunc i64 %.632 to i32
  %.66.not = icmp eq i32 %.64, 0
  br i1 %.66.not, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif.endif, %.6
  %.227 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.228 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.227, align 8
  %.229 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.228, i64 0, i32 35
  %.230 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.229, align 8
  %.232 = call %Type.580273* %.230(%TypeChecker.580449* %.1, %TypeNode.580161* %.3)
  %.236 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.237 = bitcast i8* %.236 to %FunctionType.580279*
  %.238 = bitcast i8* %.236 to %FunctionType_vtable_ty.580280**
  store %FunctionType_vtable_ty.580280* @FunctionType_vtable_data, %FunctionType_vtable_ty.580280** %.238, align 8
  call void @FunctionType_constructor(%FunctionType.580279* %.237, %"Array<Type>.580281"* %.15, %Type.580273* %.232)
  ret %FunctionType.580279* %.237

for.body.if:                                      ; preds = %for.body
  %.70 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.69, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.70, i64 0, i32 35
  %.72 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.71, align 8
  %.75 = load %TypeNode.580161*, %TypeNode.580161** %.62, align 8
  %.76 = call %Type.580273* %.72(%TypeChecker.580449* %.1, %TypeNode.580161* %.75)
  store %Type.580273* %.76, %Type.580273** %arg_type, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.80 = getelementptr inbounds %ArgNode.580223, %ArgNode.580223* %.40, i64 0, i32 3
  %7 = bitcast %ExpressionNode.580177** %.80 to i64*
  %.813 = load i64, i64* %7, align 8
  %.82 = trunc i64 %.813 to i32
  %.84.not = icmp eq i32 %.82, 0
  br i1 %.84.not, label %for.body.endif.endif, label %for.body.endif.if

for.body.endif.if:                                ; preds = %for.body.endif
  %.89 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.88, align 8
  %.90 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.89, i64 0, i32 60
  %.91 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.90, align 8
  %.92 = load %Type.580273*, %Type.580273** %arg_type, align 8
  %.95 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.80, align 8
  %.96 = call %Expression.580293* %.91(%TypeChecker.580449* %.1, %Type.580273* %.92, %ExpressionNode.580177* %.95)
  store %Expression.580293* %.96, %Expression.580293** %.57, align 8
  %.100 = getelementptr inbounds %Type.580273, %Type.580273* %.92, i64 0, i32 1
  %.101 = load i64, i64* %.100, align 8
  %.102 = icmp eq i64 %.101, 21
  br i1 %.102, label %for.body.endif.if.if, label %for.body.endif.if.else

for.body.endif.endif:                             ; preds = %for.body.endif.if.else.if, %for.body.endif.if.else, %for.body.endif.if.if, %for.body.endif
  %.185 = load %"Array<FunctionArg>_vtable_ty.580394"*, %"Array<FunctionArg>_vtable_ty.580394"** %.184, align 8
  %.186 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.580394", %"Array<FunctionArg>_vtable_ty.580394"* %.185, i64 0, i32 2
  %.187 = load void (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)*, void (%"Array<FunctionArg>.580393"*, %FunctionArg.580389*)** %.186, align 8
  call void %.187(%"Array<FunctionArg>.580393"* %.4, %FunctionArg.580389* %.56)
  %8 = bitcast %Type.580273** %arg_type to i64*
  %.1904 = load i64, i64* %8, align 8
  %.191 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.56, i64 0, i32 4
  %9 = bitcast %Type.580273** %.191 to i64*
  store i64 %.1904, i64* %9, align 8
  %.195 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.194, align 8
  %.196 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.195, i64 0, i32 20
  %.197 = load %Var.580395* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)*, %Var.580395* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)** %.196, align 8
  %.199 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.56, i64 0, i32 6
  %.200 = load %string.580129*, %string.580129** %.199, align 8
  %.2015.cast = bitcast %FunctionArg.580389* %.56 to %Expression.580293*
  %.203 = load %Type.580273*, %Type.580273** %arg_type, align 8
  %.204 = call %Var.580395* %.197(%TypeChecker.580449* %.1, %string.580129* %.200, %Expression.580293* %.2015.cast, %Type.580273* %.203)
  %.208 = getelementptr inbounds %Var.580395, %Var.580395* %.204, i64 0, i32 2
  %10 = bitcast %VarId.580331** %.208 to i64*
  %.2096 = load i64, i64* %10, align 8
  %.210 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.56, i64 0, i32 5
  %11 = bitcast %VarId.580331** %.210 to i64*
  store i64 %.2096, i64* %11, align 8
  %.215 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.16, align 8
  %.216 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.215, i64 0, i32 2
  %.217 = load void (%"Array<Type>.580281"*, %Type.580273*)*, void (%"Array<Type>.580281"*, %Type.580273*)** %.216, align 8
  call void %.217(%"Array<Type>.580281"* %.15, %Type.580273* %.203)
  %.223 = add nuw nsw i64 %storemerge11, 1
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp slt i64 %.223, %.31
  br i1 %.32, label %for.body, label %for.end

for.body.endif.if.if:                             ; preds = %for.body.endif.if
  %.107 = getelementptr inbounds %Expression.580293, %Expression.580293* %.96, i64 0, i32 4
  %12 = bitcast %Type.580273** %.107 to i64*
  %.1087 = load i64, i64* %12, align 8
  %13 = bitcast %Type.580273** %arg_type to i64*
  store i64 %.1087, i64* %13, align 8
  br label %for.body.endif.endif

for.body.endif.if.else:                           ; preds = %for.body.endif.if
  %.113 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.88, align 8
  %.114 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.113, i64 0, i32 9
  %.115 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.114, align 8
  %.120 = getelementptr inbounds %Expression.580293, %Expression.580293* %.96, i64 0, i32 4
  %.121 = load %Type.580273*, %Type.580273** %.120, align 8
  %.122 = call i1 %.115(%TypeChecker.580449* %.1, %Type.580273* %.92, %Type.580273* %.121)
  br i1 %.122, label %for.body.endif.endif, label %for.body.endif.if.else.if

for.body.endif.if.else.if:                        ; preds = %for.body.endif.if.else
  %.127 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.88, align 8
  %.128 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.127, i64 0, i32 16
  %.129 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.128, align 8
  %.133 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.127, i64 0, i32 10
  %.134 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.133, align 8
  %.136 = call %string.580129* %.134(%TypeChecker.580449* %.1, %Type.580273* %.92)
  %.139 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.88, align 8
  %.140 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.139, i64 0, i32 10
  %.141 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.140, align 8
  %.144 = load %Expression.580293*, %Expression.580293** %.57, align 8
  %.145 = getelementptr inbounds %Expression.580293, %Expression.580293* %.144, i64 0, i32 4
  %.146 = load %Type.580273*, %Type.580273** %.145, align 8
  %.147 = call %string.580129* %.141(%TypeChecker.580449* %.1, %Type.580273* %.146)
  %.148 = getelementptr inbounds %string.580129, %string.580129* %.136, i64 0, i32 0
  %.149 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.148, align 8
  %.150 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.149, i64 0, i32 10
  %.151 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.150, align 8
  %.152 = call i8* %.151(%string.580129* %.136)
  %.153 = getelementptr inbounds %string.580129, %string.580129* %.147, i64 0, i32 0
  %.154 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.153, align 8
  %.155 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.154, i64 0, i32 10
  %.156 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.155, align 8
  %.157 = call i8* %.156(%string.580129* %.147)
  %.159 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.273, i64 0, i64 0), i8* %.152, i8* %.157)
  %.161 = call i8* @malloc(i64 %.159)
  %.162 = call i64 (i8*, i8*, ...) @sprintf(i8* %.161, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.273, i64 0, i64 0), i8* %.152, i8* %.157)
  %.163 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.164 = bitcast i8* %.163 to %string.580129*
  %.165 = bitcast i8* %.163 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.165, align 8
  %.167 = getelementptr inbounds i8, i8* %.163, i64 8
  %14 = bitcast i8* %.167 to i8**
  store i8* %.161, i8** %14, align 8
  %.169 = getelementptr inbounds i8, i8* %.163, i64 16
  %15 = bitcast i8* %.169 to i64*
  store i64 %.159, i64* %15, align 8
  %.171 = getelementptr inbounds i8, i8* %.163, i64 24
  %16 = bitcast i8* %.171 to i64*
  store i64 %.159, i64* %16, align 8
  %.175 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.80, align 8
  %.176 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.175, i64 0, i32 1
  %.177 = load %FloRange.580135*, %FloRange.580135** %.176, align 8
  call void %.129(%TypeChecker.580449* %.1, i64 5, %string.580129* %.164, %FloRange.580135* %.177)
  br label %for.body.endif.endif
}

define void @TypeChecker_check_module_import(%TypeChecker.580449* %.1, %ImportNode.580249* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %ImportNode.580249, %ImportNode.580249* %.2, i64 0, i32 2
  %.9 = load %StrToken.580149*, %StrToken.580149** %.8, align 8
  %.10 = getelementptr inbounds %StrToken.580149, %StrToken.580149* %.9, i64 0, i32 4
  %.11 = load %"Array<Array<Token>>.580151"*, %"Array<Array<Token>>.580151"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<Array<Token>>.580151", %"Array<Array<Token>>.580151"* %.11, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp sgt i64 %.13, 0
  br i1 %.14, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.17 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.18 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.17, align 8
  %.19 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.18, i64 0, i32 16
  %.20 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.19, align 8
  %.21 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %string.580129*
  %.22.repack = bitcast i8* %.21 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.22.repack, align 8
  %.22.repack2 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.22.repack2 to i8**
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.274, i64 0, i64 0), i8** %0, align 8
  %.22.repack3 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.22.repack3 to i64*
  store i64 51, i64* %1, align 8
  %.22.repack4 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.22.repack4 to i64*
  store i64 51, i64* %2, align 8
  %.27 = getelementptr inbounds %StrToken.580149, %StrToken.580149* %.9, i64 0, i32 2
  %.28 = load %FloRange.580135*, %FloRange.580135** %.27, align 8
  call void %.20(%TypeChecker.580449* %.1, i64 4, %string.580129* %.22, %FloRange.580135* %.28)
  ret void

.4.endif:                                         ; preds = %.4
  ret void
}

define void @TypeChecker_declare_enum_within_current_scope(%TypeChecker.580449* %.1, %EnumNode.580245* nocapture readonly %.2) {
.4:
  %.7 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.8 = bitcast i8* %.7 to %Enum.580417*
  %.9 = bitcast i8* %.7 to %Enum_vtable_ty.580418**
  store %Enum_vtable_ty.580418* @Enum_vtable_data, %Enum_vtable_ty.580418** %.9, align 8
  call void @Enum_constructor(%Enum.580417* %.8)
  %.14 = getelementptr inbounds %EnumNode.580245, %EnumNode.580245* %.2, i64 0, i32 1
  %.15 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.14, align 8
  %.16 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.15, i64 0, i32 3
  %.17 = load %string.580129*, %string.580129** %.16, align 8
  %.20 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.21, i64 0, i32 1
  %.23 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.22, align 8
  %.24 = call %Scope.580363* %.23(%TypeChecker.580449* %.1)
  %.28 = getelementptr inbounds i8, i8* %.7, i64 16
  %0 = bitcast i8* %.28 to %string.580129**
  store %string.580129* %.17, %string.580129** %0, align 8
  %.32 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.20, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.32, i64 0, i32 14
  %.34 = load %Type.580273* (%TypeChecker.580449*, %string.580129*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*)** %.33, align 8
  %.36 = call %Type.580273* %.34(%TypeChecker.580449* %.1, %string.580129* %.17)
  %.37 = getelementptr inbounds %Type.580273, %Type.580273* %.36, i64 0, i32 1
  %.38 = load i64, i64* %.37, align 8
  %.39.not = icmp eq i64 %.38, 21
  br i1 %.39.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.43 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.20, align 8
  %.44 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.43, i64 0, i32 16
  %.45 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.44, align 8
  %.47 = getelementptr inbounds %string.580129, %string.580129* %.17, i64 0, i32 0
  %.48 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.47, align 8
  %.49 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.48, i64 0, i32 10
  %.50 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.49, align 8
  %.51 = call i8* %.50(%string.580129* %.17)
  %.53 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.268, i64 0, i64 0), i8* %.51)
  %.55 = call i8* @malloc(i64 %.53)
  %.56 = call i64 (i8*, i8*, ...) @sprintf(i8* %.55, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.268, i64 0, i64 0), i8* %.51)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.580129*
  %.59 = bitcast i8* %.57 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %1 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %1, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %2 = bitcast i8* %.63 to i64*
  store i64 %.53, i64* %2, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %3 = bitcast i8* %.65 to i64*
  store i64 %.53, i64* %3, align 8
  %.69 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.14, align 8
  %.70 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.69, i64 0, i32 2
  %.71 = load %FloRange.580135*, %FloRange.580135** %.70, align 8
  call void %.45(%TypeChecker.580449* %.1, i64 1, %string.580129* %.58, %FloRange.580135* %.71)
  ret void

.4.endif:                                         ; preds = %.4
  %.75 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.76 = bitcast i8* %.75 to %"Map<string, PropId>.580407"*
  %.77 = bitcast i8* %.75 to %"Map<string, PropId>_vtable_ty.580410"**
  store %"Map<string, PropId>_vtable_ty.580410"* @"Map<string, PropId>_vtable_data", %"Map<string, PropId>_vtable_ty.580410"** %.77, align 8
  call void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.580407"* %.76)
  %.821.cast = ptrtoint i8* %.75 to i64
  %.83 = getelementptr inbounds i8, i8* %.7, i64 32
  %4 = bitcast i8* %.83 to i64*
  store i64 %.821.cast, i64* %4, align 8
  %.87 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.89 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.91 = bitcast i8* %.89 to %"Array<EnumField>_vtable_ty.580420"**
  store %"Array<EnumField>_vtable_ty.580420"* @"Array<EnumField>_vtable_data", %"Array<EnumField>_vtable_ty.580420"** %.91, align 8
  %.93 = getelementptr inbounds i8, i8* %.89, i64 8
  %5 = bitcast i8* %.93 to i8**
  store i8* %.87, i8** %5, align 8
  %.95 = getelementptr inbounds i8, i8* %.89, i64 16
  %6 = bitcast i8* %.95 to i64*
  store i64 0, i64* %6, align 8
  %.97 = getelementptr inbounds i8, i8* %.89, i64 24
  %7 = bitcast i8* %.97 to i64*
  store i64 8, i64* %7, align 8
  %.99 = getelementptr inbounds i8, i8* %.7, i64 24
  %8 = bitcast i8* %.99 to i8**
  store i8* %.89, i8** %8, align 8
  %.103 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 2
  %.104 = load i64, i64* %.103, align 8
  %.107 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.20, align 8
  %.108 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.107, i64 0, i32 0
  %.109 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.108, align 8
  %.110 = call %Module.580421* %.109(%TypeChecker.580449* %.1)
  %.111 = getelementptr inbounds %Module.580421, %Module.580421* %.110, i64 0, i32 7
  %.112 = load %"Array<Enum>.580427"*, %"Array<Enum>.580427"** %.111, align 8
  %.113 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.112, i64 0, i32 2
  %.114 = load i64, i64* %.113, align 8
  %.115 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.116 = bitcast i8* %.115 to %EnumId.580291*
  %.117 = bitcast i8* %.115 to %EnumId_vtable_ty.580292**
  store %EnumId_vtable_ty.580292* @EnumId_vtable_data, %EnumId_vtable_ty.580292** %.117, align 8
  call void @EnumId_constructor(%EnumId.580291* %.116, i64 %.104, i64 %.114)
  %.120 = getelementptr inbounds i8, i8* %.7, i64 8
  %9 = bitcast i8* %.120 to i8**
  store i8* %.115, i8** %9, align 8
  %.124 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.20, align 8
  %.125 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.124, i64 0, i32 0
  %.126 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.125, align 8
  %.127 = call %Module.580421* %.126(%TypeChecker.580449* %.1)
  %.128 = getelementptr inbounds %Module.580421, %Module.580421* %.127, i64 0, i32 7
  %.129 = load %"Array<Enum>.580427"*, %"Array<Enum>.580427"** %.128, align 8
  %.131 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.129, i64 0, i32 0
  %.132 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.131, align 8
  %.133 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.132, i64 0, i32 2
  %.134 = load void (%"Array<Enum>.580427"*, %Enum.580417*)*, void (%"Array<Enum>.580427"*, %Enum.580417*)** %.133, align 8
  call void %.134(%"Array<Enum>.580427"* %.129, %Enum.580417* %.8)
  %.137 = getelementptr inbounds %Scope.580363, %Scope.580363* %.24, i64 0, i32 5
  %.138 = load %"Map<string, EnumId>.580367"*, %"Map<string, EnumId>.580367"** %.137, align 8
  %.139 = getelementptr inbounds %"Map<string, EnumId>.580367", %"Map<string, EnumId>.580367"* %.138, i64 0, i32 0
  %.140 = load %"Map<string, EnumId>_vtable_ty.580379"*, %"Map<string, EnumId>_vtable_ty.580379"** %.139, align 8
  %.141 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.580379", %"Map<string, EnumId>_vtable_ty.580379"* %.140, i64 0, i32 2
  %.142 = load void (%"Map<string, EnumId>.580367"*, %string.580129*, %EnumId.580291*)*, void (%"Map<string, EnumId>.580367"*, %string.580129*, %EnumId.580291*)** %.141, align 8
  %.145 = load %string.580129*, %string.580129** %0, align 8
  %10 = bitcast i8* %.120 to %EnumId.580291**
  %.148 = load %EnumId.580291*, %EnumId.580291** %10, align 8
  call void %.142(%"Map<string, EnumId>.580367"* %.138, %string.580129* %.145, %EnumId.580291* %.148)
  %.151 = getelementptr inbounds %Scope.580363, %Scope.580363* %.24, i64 0, i32 2
  %.152 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.151, align 8
  %.153 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.152, i64 0, i32 0
  %.154 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.153, align 8
  %.155 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.154, i64 0, i32 2
  %.156 = load void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)*, void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)** %.155, align 8
  %.159 = load %string.580129*, %string.580129** %0, align 8
  %.162 = load %EnumId.580291*, %EnumId.580291** %10, align 8
  %.163 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.164 = bitcast i8* %.163 to %EnumVarId.580335*
  %.165 = bitcast i8* %.163 to %EnumVarId_vtable_ty.580336**
  store %EnumVarId_vtable_ty.580336* @EnumVarId_vtable_data, %EnumVarId_vtable_ty.580336** %.165, align 8
  call void @EnumVarId_constructor(%EnumVarId.580335* %.164, %EnumId.580291* %.162)
  %.168 = bitcast i8* %.163 to %VarId.580331*
  call void %.156(%"Map<string, VarId>.580365"* %.152, %string.580129* %.159, %VarId.580331* %.168)
  ret void
}

define void @TypeChecker_declare_class_within_module(%TypeChecker.580449* %.1, %ClassDeclarationNode.580235* %.2) {
.4:
  %.8 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.2, i64 0, i32 1
  %.9 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.9, i64 0, i32 3
  %.11 = load %string.580129*, %string.580129** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.15, i64 0, i32 14
  %.17 = load %Type.580273* (%TypeChecker.580449*, %string.580129*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*)** %.16, align 8
  %.19 = call %Type.580273* %.17(%TypeChecker.580449* %.1, %string.580129* %.11)
  %.20 = getelementptr inbounds %Type.580273, %Type.580273* %.19, i64 0, i32 1
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp ne i64 %.21, 21
  %.25 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.26 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.25, i64 0, i32 0
  %.27 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.26, align 8
  %.28 = call %Module.580421* %.27(%TypeChecker.580449* %.1)
  %.29 = getelementptr inbounds %Module.580421, %Module.580421* %.28, i64 0, i32 11
  %.30 = load %"Map<string, ClassDeclarationNode>.580431"*, %"Map<string, ClassDeclarationNode>.580431"** %.29, align 8
  %.31 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.30, i64 0, i32 0
  %.32 = load %"Map<string, ClassDeclarationNode>_vtable_ty.580440"*, %"Map<string, ClassDeclarationNode>_vtable_ty.580440"** %.31, align 8
  %.33 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.580440", %"Map<string, ClassDeclarationNode>_vtable_ty.580440"* %.32, i64 0, i32 3
  %.34 = load %ClassDeclarationNode.580235* (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)*, %ClassDeclarationNode.580235* (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*)** %.33, align 8
  %.36 = call %ClassDeclarationNode.580235* %.34(%"Map<string, ClassDeclarationNode>.580431"* %.30, %string.580129* %.11)
  %0 = ptrtoint %ClassDeclarationNode.580235* %.36 to i64
  %.37 = trunc i64 %0 to i32
  %.39 = icmp ne i32 %.37, 0
  %.40 = or i1 %.22, %.39
  br i1 %.40, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.44 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.45 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.44, i64 0, i32 16
  %.46 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.45, align 8
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.11, i64 0, i32 0
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.11)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.268, i64 0, i64 0), i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.268, i64 0, i64 0), i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.70 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.8, align 8
  %.71 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.70, i64 0, i32 2
  %.72 = load %FloRange.580135*, %FloRange.580135** %.71, align 8
  call void %.46(%TypeChecker.580449* %.1, i64 1, %string.580129* %.59, %FloRange.580135* %.72)
  ret void

.4.endif:                                         ; preds = %.4
  %.76 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.2, i64 0, i32 2
  %.77 = load %"Array<GenericParameterNode>.580237"*, %"Array<GenericParameterNode>.580237"** %.76, align 8
  %.78 = getelementptr inbounds %"Array<GenericParameterNode>.580237", %"Array<GenericParameterNode>.580237"* %.77, i64 0, i32 2
  %.79 = load i64, i64* %.78, align 8
  %.80 = icmp sgt i64 %.79, 0
  br i1 %.80, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %.4.endif
  %.84 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.85 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.84, i64 0, i32 0
  %.86 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.85, align 8
  %.87 = call %Module.580421* %.86(%TypeChecker.580449* %.1)
  %.88 = getelementptr inbounds %Module.580421, %Module.580421* %.87, i64 0, i32 11
  %.89 = load %"Map<string, ClassDeclarationNode>.580431"*, %"Map<string, ClassDeclarationNode>.580431"** %.88, align 8
  %.90 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.580431", %"Map<string, ClassDeclarationNode>.580431"* %.89, i64 0, i32 0
  %.91 = load %"Map<string, ClassDeclarationNode>_vtable_ty.580440"*, %"Map<string, ClassDeclarationNode>_vtable_ty.580440"** %.90, align 8
  %.92 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.580440", %"Map<string, ClassDeclarationNode>_vtable_ty.580440"* %.91, i64 0, i32 2
  %.93 = load void (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*, %ClassDeclarationNode.580235*)*, void (%"Map<string, ClassDeclarationNode>.580431"*, %string.580129*, %ClassDeclarationNode.580235*)** %.92, align 8
  call void %.93(%"Map<string, ClassDeclarationNode>.580431"* %.89, %string.580129* %.11, %ClassDeclarationNode.580235* %.2)
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.99 = call dereferenceable_or_null(96) i8* @malloc(i64 96)
  %.101 = bitcast i8* %.99 to %Class_vtable_ty.580404**
  store %Class_vtable_ty.580404* @Class_vtable_data, %Class_vtable_ty.580404** %.101, align 8
  %.108 = getelementptr inbounds i8, i8* %.99, i64 72
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.108, i8 0, i64 16, i1 false)
  %.112 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.114 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.116 = bitcast i8* %.114 to %"Array<ClassField>_vtable_ty.580408"**
  store %"Array<ClassField>_vtable_ty.580408"* @"Array<ClassField>_vtable_data", %"Array<ClassField>_vtable_ty.580408"** %.116, align 8
  %.118 = getelementptr inbounds i8, i8* %.114, i64 8
  %4 = bitcast i8* %.118 to i8**
  store i8* %.112, i8** %4, align 8
  %.120 = getelementptr inbounds i8, i8* %.114, i64 16
  %5 = bitcast i8* %.120 to i64*
  store i64 0, i64* %5, align 8
  %.122 = getelementptr inbounds i8, i8* %.114, i64 24
  %6 = bitcast i8* %.122 to i64*
  store i64 8, i64* %6, align 8
  %.124 = getelementptr inbounds i8, i8* %.99, i64 40
  %7 = bitcast i8* %.124 to i8**
  store i8* %.114, i8** %7, align 8
  %.128 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.130 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.132 = bitcast i8* %.130 to %"Array<ClassMethod>_vtable_ty.580409"**
  store %"Array<ClassMethod>_vtable_ty.580409"* @"Array<ClassMethod>_vtable_data", %"Array<ClassMethod>_vtable_ty.580409"** %.132, align 8
  %.134 = getelementptr inbounds i8, i8* %.130, i64 8
  %8 = bitcast i8* %.134 to i8**
  store i8* %.128, i8** %8, align 8
  %.136 = getelementptr inbounds i8, i8* %.130, i64 16
  %9 = bitcast i8* %.136 to i64*
  store i64 0, i64* %9, align 8
  %.138 = getelementptr inbounds i8, i8* %.130, i64 24
  %10 = bitcast i8* %.138 to i64*
  store i64 8, i64* %10, align 8
  %.140 = getelementptr inbounds i8, i8* %.99, i64 48
  %11 = bitcast i8* %.140 to i8**
  store i8* %.130, i8** %11, align 8
  %.143 = getelementptr inbounds i8, i8* %.99, i64 88
  %12 = bitcast i8* %.143 to i1*
  store i1 false, i1* %12, align 1
  %.146 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.147 = bitcast i8* %.146 to %"Map<string, PropId>.580407"*
  %.148 = bitcast i8* %.146 to %"Map<string, PropId>_vtable_ty.580410"**
  store %"Map<string, PropId>_vtable_ty.580410"* @"Map<string, PropId>_vtable_data", %"Map<string, PropId>_vtable_ty.580410"** %.148, align 8
  call void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.580407"* %.147)
  %prop_map = alloca %"Map<string, PropId>.580407"*, align 8
  %13 = bitcast %"Map<string, PropId>.580407"** %prop_map to i8**
  store i8* %.146, i8** %13, align 8
  %.153 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.154 = bitcast i8* %.153 to %"Map<string, PropId>.580407"*
  %.155 = bitcast i8* %.153 to %"Map<string, PropId>_vtable_ty.580410"**
  store %"Map<string, PropId>_vtable_ty.580410"* @"Map<string, PropId>_vtable_data", %"Map<string, PropId>_vtable_ty.580410"** %.155, align 8
  call void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.580407"* %.154)
  %static_prop_map = alloca %"Map<string, PropId>.580407"*, align 8
  %14 = bitcast %"Map<string, PropId>.580407"** %static_prop_map to i8**
  store i8* %.153, i8** %14, align 8
  %.161 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.162 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.161, i64 0, i32 2
  %.163 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.162, align 8
  %.164 = call %Scope.580363* %.163(%TypeChecker.580449* %.1)
  %.167 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.2, i64 0, i32 3
  %15 = bitcast %RecordTypeNode.580163** %.167 to i64*
  %.1681 = load i64, i64* %15, align 8
  %.169 = trunc i64 %.1681 to i32
  %.171.not = icmp eq i32 %.169, 0
  br i1 %.171.not, label %.4.endif.endif.else, label %.4.endif.endif.if

.4.endif.endif.if:                                ; preds = %.4.endif.endif
  %.176 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.177 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.176, i64 0, i32 35
  %.178 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.177, align 8
  %16 = bitcast %RecordTypeNode.580163** %.167 to %TypeNode.580161**
  %.1814 = load %TypeNode.580161*, %TypeNode.580161** %16, align 8
  %.183 = call %Type.580273* %.178(%TypeChecker.580449* %.1, %TypeNode.580161* %.1814)
  %.184 = getelementptr inbounds i8, i8* %.99, i64 24
  %17 = bitcast i8* %.184 to %Type.580273**
  store %Type.580273* %.183, %Type.580273** %17, align 8
  %.188 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.189 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.188, i64 0, i32 17
  %.190 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.189, align 8
  %.191 = call i1 %.190(%TypeChecker.580449* %.1)
  br i1 %.191, label %.4.endif.endif.if.if, label %.4.endif.endif.endif

.4.endif.endif.else:                              ; preds = %.4.endif.endif
  %.196 = getelementptr inbounds i8, i8* %.99, i64 24
  %18 = bitcast i8* %.196 to %Type.580273**
  store %Type.580273* null, %Type.580273** %18, align 8
  br label %.4.endif.endif.endif

.4.endif.endif.endif:                             ; preds = %.4.endif.endif.if, %.4.endif.endif.else
  %.110.cast = bitcast i8* %.99 to %Class.580403*
  %19 = bitcast %"Map<string, PropId>.580407"** %prop_map to i64*
  %.2002 = load i64, i64* %19, align 8
  %.201 = getelementptr inbounds i8, i8* %.99, i64 56
  %20 = bitcast i8* %.201 to i64*
  store i64 %.2002, i64* %20, align 8
  %21 = bitcast %"Map<string, PropId>.580407"** %static_prop_map to i64*
  %.2043 = load i64, i64* %21, align 8
  %.205 = getelementptr inbounds i8, i8* %.99, i64 64
  %22 = bitcast i8* %.205 to i64*
  store i64 %.2043, i64* %22, align 8
  %.209 = getelementptr inbounds i8, i8* %.99, i64 16
  %23 = bitcast i8* %.209 to %string.580129**
  store %string.580129* %.11, %string.580129** %23, align 8
  %.213 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 2
  %.214 = load i64, i64* %.213, align 8
  %.217 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.218 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.217, i64 0, i32 0
  %.219 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.218, align 8
  %.220 = call %Module.580421* %.219(%TypeChecker.580449* %.1)
  %.221 = getelementptr inbounds %Module.580421, %Module.580421* %.220, i64 0, i32 5
  %.222 = load %"Array<Class>.580425"*, %"Array<Class>.580425"** %.221, align 8
  %.223 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.222, i64 0, i32 2
  %.224 = load i64, i64* %.223, align 8
  %.225 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.226 = bitcast i8* %.225 to %ClassId.580289*
  %.227 = bitcast i8* %.225 to %ClassId_vtable_ty.580290**
  store %ClassId_vtable_ty.580290* @ClassId_vtable_data, %ClassId_vtable_ty.580290** %.227, align 8
  call void @ClassId_constructor(%ClassId.580289* %.226, i64 %.214, i64 %.224)
  %.230 = getelementptr inbounds i8, i8* %.99, i64 8
  %24 = bitcast i8* %.230 to %ClassId.580289**
  %25 = bitcast i8* %.230 to i8**
  store i8* %.225, i8** %25, align 8
  %.234 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.235 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.234, i64 0, i32 0
  %.236 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.235, align 8
  %.237 = call %Module.580421* %.236(%TypeChecker.580449* %.1)
  %.238 = getelementptr inbounds %Module.580421, %Module.580421* %.237, i64 0, i32 5
  %.239 = load %"Array<Class>.580425"*, %"Array<Class>.580425"** %.238, align 8
  %.241 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.239, i64 0, i32 0
  %.242 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.241, align 8
  %.243 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.242, i64 0, i32 2
  %.244 = load void (%"Array<Class>.580425"*, %Class.580403*)*, void (%"Array<Class>.580425"*, %Class.580403*)** %.243, align 8
  call void %.244(%"Array<Class>.580425"* %.239, %Class.580403* %.110.cast)
  %.247 = getelementptr inbounds %Scope.580363, %Scope.580363* %.164, i64 0, i32 3
  %.248 = load %"Map<string, ClassId>.580366"*, %"Map<string, ClassId>.580366"** %.247, align 8
  %.249 = getelementptr inbounds %"Map<string, ClassId>.580366", %"Map<string, ClassId>.580366"* %.248, i64 0, i32 0
  %.250 = load %"Map<string, ClassId>_vtable_ty.580374"*, %"Map<string, ClassId>_vtable_ty.580374"** %.249, align 8
  %.251 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.580374", %"Map<string, ClassId>_vtable_ty.580374"* %.250, i64 0, i32 2
  %.252 = load void (%"Map<string, ClassId>.580366"*, %string.580129*, %ClassId.580289*)*, void (%"Map<string, ClassId>.580366"*, %string.580129*, %ClassId.580289*)** %.251, align 8
  %.256 = load %ClassId.580289*, %ClassId.580289** %24, align 8
  call void %.252(%"Map<string, ClassId>.580366"* %.248, %string.580129* %.11, %ClassId.580289* %.256)
  %.259 = getelementptr inbounds %Scope.580363, %Scope.580363* %.164, i64 0, i32 2
  %.260 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.259, align 8
  %.261 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.260, i64 0, i32 0
  %.262 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.261, align 8
  %.263 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.262, i64 0, i32 2
  %.264 = load void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)*, void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)** %.263, align 8
  %.268 = load %ClassId.580289*, %ClassId.580289** %24, align 8
  %.269 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.270 = bitcast i8* %.269 to %ClassVarId.580333*
  %.271 = bitcast i8* %.269 to %ClassVarId_vtable_ty.580334**
  store %ClassVarId_vtable_ty.580334* @ClassVarId_vtable_data, %ClassVarId_vtable_ty.580334** %.271, align 8
  call void @ClassVarId_constructor(%ClassVarId.580333* %.270, %ClassId.580289* %.268)
  %.274 = bitcast i8* %.269 to %VarId.580331*
  call void %.264(%"Map<string, VarId>.580365"* %.260, %string.580129* %.11, %VarId.580331* %.274)
  ret void

.4.endif.endif.if.if:                             ; preds = %.4.endif.endif.if
  ret void
}

define void @TypeChecker_declare_function_within_current_scope(%TypeChecker.580449* %.1, %FunctionDeclarationNode.580225* nocapture readonly %.2) {
.4:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = bitcast i8* %.7 to %Function_vtable_ty.580392**
  store %Function_vtable_ty.580392* @Function_vtable_data, %Function_vtable_ty.580392** %.9, align 8
  %.14 = getelementptr inbounds %FunctionDeclarationNode.580225, %FunctionDeclarationNode.580225* %.2, i64 0, i32 5
  %.15 = load i1, i1* %.14, align 1
  %.16 = getelementptr inbounds i8, i8* %.7, i64 56
  %0 = bitcast i8* %.16 to i1*
  store i1 %.15, i1* %0, align 1
  %.19 = getelementptr inbounds %FunctionDeclarationNode.580225, %FunctionDeclarationNode.580225* %.2, i64 0, i32 1
  %.20 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.19, align 8
  %.21 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.20, i64 0, i32 3
  %.22 = load %string.580129*, %string.580129** %.21, align 8
  %.26 = getelementptr inbounds i8, i8* %.7, i64 16
  %1 = bitcast i8* %.26 to %string.580129**
  store %string.580129* %.22, %string.580129** %1, align 8
  %.29 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.30 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.29, align 8
  %.31 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.30, i64 0, i32 12
  %.32 = load i1 (%TypeChecker.580449*, %string.580129*)*, i1 (%TypeChecker.580449*, %string.580129*)** %.31, align 8
  %.34 = call i1 %.32(%TypeChecker.580449* %.1, %string.580129* %.22)
  %.38 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.29, align 8
  br i1 %.34, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.39 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.38, i64 0, i32 16
  %.40 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.39, align 8
  %.42 = getelementptr inbounds %string.580129, %string.580129* %.22, i64 0, i32 0
  %.43 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.42, align 8
  %.44 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.43, i64 0, i32 10
  %.45 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.44, align 8
  %.46 = call i8* %.45(%string.580129* %.22)
  %.48 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.275, i64 0, i64 0), i8* %.46)
  %.50 = call i8* @malloc(i64 %.48)
  %.51 = call i64 (i8*, i8*, ...) @sprintf(i8* %.50, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.275, i64 0, i64 0), i8* %.46)
  %.52 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.53 = bitcast i8* %.52 to %string.580129*
  %.54 = bitcast i8* %.52 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.54, align 8
  %.56 = getelementptr inbounds i8, i8* %.52, i64 8
  %2 = bitcast i8* %.56 to i8**
  store i8* %.50, i8** %2, align 8
  %.58 = getelementptr inbounds i8, i8* %.52, i64 16
  %3 = bitcast i8* %.58 to i64*
  store i64 %.48, i64* %3, align 8
  %.60 = getelementptr inbounds i8, i8* %.52, i64 24
  %4 = bitcast i8* %.60 to i64*
  store i64 %.48, i64* %4, align 8
  %.64 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.19, align 8
  %.65 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.64, i64 0, i32 2
  %.66 = load %FloRange.580135*, %FloRange.580135** %.65, align 8
  call void %.40(%TypeChecker.580449* %.1, i64 1, %string.580129* %.53, %FloRange.580135* %.66)
  ret void

.4.endif:                                         ; preds = %.4
  %.72 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.38, i64 0, i32 14
  %.73 = load %Type.580273* (%TypeChecker.580449*, %string.580129*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*)** %.72, align 8
  %.75 = call %Type.580273* %.73(%TypeChecker.580449* %.1, %string.580129* %.22)
  %.76 = getelementptr inbounds %Type.580273, %Type.580273* %.75, i64 0, i32 1
  %.77 = load i64, i64* %.76, align 8
  %.78.not = icmp eq i64 %.77, 21
  br i1 %.78.not, label %.4.endif.endif, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.82 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.29, align 8
  %.83 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.82, i64 0, i32 16
  %.84 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.83, align 8
  %.86 = getelementptr inbounds %string.580129, %string.580129* %.22, i64 0, i32 0
  %.87 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.86, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.87, i64 0, i32 10
  %.89 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.88, align 8
  %.90 = call i8* %.89(%string.580129* %.22)
  %.92 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.276, i64 0, i64 0), i8* %.90)
  %.94 = call i8* @malloc(i64 %.92)
  %.95 = call i64 (i8*, i8*, ...) @sprintf(i8* %.94, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.276, i64 0, i64 0), i8* %.90)
  %.96 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.580129*
  %.98 = bitcast i8* %.96 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.98, align 8
  %.100 = getelementptr inbounds i8, i8* %.96, i64 8
  %5 = bitcast i8* %.100 to i8**
  store i8* %.94, i8** %5, align 8
  %.102 = getelementptr inbounds i8, i8* %.96, i64 16
  %6 = bitcast i8* %.102 to i64*
  store i64 %.92, i64* %6, align 8
  %.104 = getelementptr inbounds i8, i8* %.96, i64 24
  %7 = bitcast i8* %.104 to i64*
  store i64 %.92, i64* %7, align 8
  %.108 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.19, align 8
  %.109 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.108, i64 0, i32 2
  %.110 = load %FloRange.580135*, %FloRange.580135** %.109, align 8
  call void %.84(%TypeChecker.580449* %.1, i64 1, %string.580129* %.97, %FloRange.580135* %.110)
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.8 = bitcast i8* %.7 to %Function.580391*
  %.115 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.29, align 8
  %.116 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.115, i64 0, i32 15
  %.117 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.116, align 8
  %.118 = call %Scope.580363* %.117(%TypeChecker.580449* %.1)
  %.122 = getelementptr inbounds %Scope.580363, %Scope.580363* %.118, i64 0, i32 1
  %8 = bitcast %ScopeId.580361** %.122 to i64*
  %.1231 = load i64, i64* %8, align 8
  %.124 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 6
  %9 = bitcast %ScopeId.580361** %.124 to i64*
  store i64 %.1231, i64* %9, align 8
  %.128 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.130 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.132 = bitcast i8* %.130 to %"Array<FunctionArg>_vtable_ty.580394"**
  store %"Array<FunctionArg>_vtable_ty.580394"* @"Array<FunctionArg>_vtable_data", %"Array<FunctionArg>_vtable_ty.580394"** %.132, align 8
  %.134 = getelementptr inbounds i8, i8* %.130, i64 8
  %10 = bitcast i8* %.134 to i8**
  store i8* %.128, i8** %10, align 8
  %.136 = getelementptr inbounds i8, i8* %.130, i64 16
  %11 = bitcast i8* %.136 to i64*
  store i64 0, i64* %11, align 8
  %.138 = getelementptr inbounds i8, i8* %.130, i64 24
  %12 = bitcast i8* %.138 to i64*
  store i64 8, i64* %12, align 8
  %.140 = getelementptr inbounds i8, i8* %.7, i64 24
  %13 = bitcast i8* %.140 to i8**
  store i8* %.130, i8** %13, align 8
  %.145 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.29, align 8
  %.146 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.145, i64 0, i32 24
  %.147 = load %FunctionType.580279* (%TypeChecker.580449*, %"Array<ArgNode>.580227"*, %TypeNode.580161*, %"Array<FunctionArg>.580393"*)*, %FunctionType.580279* (%TypeChecker.580449*, %"Array<ArgNode>.580227"*, %TypeNode.580161*, %"Array<FunctionArg>.580393"*)** %.146, align 8
  %.149 = getelementptr inbounds %FunctionDeclarationNode.580225, %FunctionDeclarationNode.580225* %.2, i64 0, i32 2
  %.150 = load %"Array<ArgNode>.580227"*, %"Array<ArgNode>.580227"** %.149, align 8
  %.152 = getelementptr inbounds %FunctionDeclarationNode.580225, %FunctionDeclarationNode.580225* %.2, i64 0, i32 4
  %.153 = load %TypeNode.580161*, %TypeNode.580161** %.152, align 8
  %14 = bitcast i8* %.140 to %"Array<FunctionArg>.580393"**
  %.156 = load %"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"** %14, align 8
  %.157 = call %FunctionType.580279* %.147(%TypeChecker.580449* %.1, %"Array<ArgNode>.580227"* %.150, %TypeNode.580161* %.153, %"Array<FunctionArg>.580393"* %.156)
  %.158 = getelementptr inbounds i8, i8* %.7, i64 40
  %15 = bitcast i8* %.158 to %FunctionType.580279**
  store %FunctionType.580279* %.157, %FunctionType.580279** %15, align 8
  %.162 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 2
  %.163 = load i64, i64* %.162, align 8
  %.166 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.29, align 8
  %.167 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.166, i64 0, i32 0
  %.168 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.167, align 8
  %.169 = call %Module.580421* %.168(%TypeChecker.580449* %.1)
  %.170 = getelementptr inbounds %Module.580421, %Module.580421* %.169, i64 0, i32 6
  %.171 = load %"Array<Function>.580426"*, %"Array<Function>.580426"** %.170, align 8
  %.172 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.171, i64 0, i32 2
  %.173 = load i64, i64* %.172, align 8
  %.174 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.175 = bitcast i8* %.174 to %VarId.580331*
  %.176 = bitcast i8* %.174 to %VarId_vtable_ty.580332**
  store %VarId_vtable_ty.580332* @VarId_vtable_data, %VarId_vtable_ty.580332** %.176, align 8
  call void @VarId_constructor(%VarId.580331* %.175, i64 0, i64 %.163, i64 %.173)
  %.179 = getelementptr inbounds i8, i8* %.7, i64 8
  %16 = bitcast i8* %.179 to i8**
  store i8* %.174, i8** %16, align 8
  %.183 = getelementptr inbounds %Scope.580363, %Scope.580363* %.118, i64 0, i32 6
  %17 = bitcast %ScopeId.580361** %.183 to i64*
  %.1842 = load i64, i64* %17, align 8
  store i64 %.1842, i64* %9, align 8
  %.1903 = load i64, i64* %8, align 8
  %.191 = getelementptr inbounds i8, i8* %.7, i64 48
  %18 = bitcast i8* %.191 to i64*
  store i64 %.1903, i64* %18, align 8
  %.195 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.29, align 8
  %.196 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.195, i64 0, i32 0
  %.197 = load %Module.580421* (%TypeChecker.580449*)*, %Module.580421* (%TypeChecker.580449*)** %.196, align 8
  %.198 = call %Module.580421* %.197(%TypeChecker.580449* %.1)
  %.199 = getelementptr inbounds %Module.580421, %Module.580421* %.198, i64 0, i32 6
  %.200 = load %"Array<Function>.580426"*, %"Array<Function>.580426"** %.199, align 8
  %.202 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.200, i64 0, i32 0
  %.203 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.202, align 8
  %.204 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.203, i64 0, i32 2
  %.205 = load void (%"Array<Function>.580426"*, %Function.580391*)*, void (%"Array<Function>.580426"*, %Function.580391*)** %.204, align 8
  call void %.205(%"Array<Function>.580426"* %.200, %Function.580391* %.8)
  %.209 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.29, align 8
  %.210 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.209, i64 0, i32 1
  %.211 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.210, align 8
  %.212 = call %Scope.580363* %.211(%TypeChecker.580449* %.1)
  %.213 = getelementptr inbounds %Scope.580363, %Scope.580363* %.212, i64 0, i32 4
  %.214 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.213, align 8
  %.215 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.214, i64 0, i32 0
  %.216 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.215, align 8
  %.217 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.216, i64 0, i32 2
  %.218 = load void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)*, void (%"Map<string, VarId>.580365"*, %string.580129*, %VarId.580331*)** %.217, align 8
  %.221 = load %string.580129*, %string.580129** %1, align 8
  %19 = bitcast i8* %.179 to %VarId.580331**
  %.224 = load %VarId.580331*, %VarId.580331** %19, align 8
  call void %.218(%"Map<string, VarId>.580365"* %.214, %string.580129* %.221, %VarId.580331* %.224)
  ret void
}

define void @TypeChecker_check_enum_body(%TypeChecker.580449* %.1, %Enum.580417* nocapture readonly %.2, %EnumNode.580245* nocapture readonly %.3) {
.5:
  %.11 = getelementptr inbounds %EnumNode.580245, %EnumNode.580245* %.3, i64 0, i32 3
  %0 = bitcast %TypeNode.580161** %.11 to i64*
  %.122 = load i64, i64* %0, align 8
  %.13 = trunc i64 %.122 to i32
  %.15 = icmp eq i32 %.13, 0
  br i1 %.15, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.17 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.18 = bitcast i8* %.17 to %Type.580273*
  %.19 = bitcast i8* %.17 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.19, align 8
  call void @Type_constructor(%Type.580273* %.18, i64 7)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.25 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.26 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.25, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.26, i64 0, i32 35
  %.28 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.27, align 8
  %.31 = load %TypeNode.580161*, %TypeNode.580161** %.11, align 8
  %.32 = call %Type.580273* %.28(%TypeChecker.580449* %.1, %TypeNode.580161* %.31)
  %.35 = call i1 @is_int(%Type.580273* %.32)
  br i1 %.35, label %.5.endif, label %.5.else.if

.5.endif:                                         ; preds = %.5.else.if, %.5.else, %.5.if
  %enum_variant.0 = phi %Type.580273* [ %.18, %.5.if ], [ %.32, %.5.else ], [ %.32, %.5.else.if ]
  %next_enum_value = alloca i64, align 8
  store i64 0, i64* %next_enum_value, align 8
  %.84 = getelementptr inbounds %EnumNode.580245, %EnumNode.580245* %.3, i64 0, i32 2
  %.8514 = load %"Array<EnumNodeField>.580247"*, %"Array<EnumNodeField>.580247"** %.84, align 8
  %.8615 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.8514, i64 0, i32 2
  %.8716 = load i64, i64* %.8615, align 8
  %.8817 = icmp sgt i64 %.8716, 0
  br i1 %.8817, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif
  %.115 = getelementptr inbounds %Enum.580417, %Enum.580417* %.2, i64 0, i32 1
  %1 = bitcast %EnumId.580291** %.115 to %TypeId.580287**
  %.135 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.238 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.270 = getelementptr inbounds %Enum.580417, %Enum.580417* %.2, i64 0, i32 4
  %.282 = getelementptr inbounds %Enum.580417, %Enum.580417* %.2, i64 0, i32 3
  %next_enum_value.promoted = load i64, i64* %next_enum_value, align 8
  br label %for.body

.5.else.if:                                       ; preds = %.5.else
  %.40 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.25, align 8
  %.41 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.40, i64 0, i32 16
  %.42 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.41, align 8
  %.46 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.40, i64 0, i32 10
  %.47 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.46, align 8
  %.49 = call %string.580129* %.47(%TypeChecker.580449* %.1, %Type.580273* %.32)
  %.50 = getelementptr inbounds %string.580129, %string.580129* %.49, i64 0, i32 0
  %.51 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.50, align 8
  %.52 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.51, i64 0, i32 10
  %.53 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.52, align 8
  %.54 = call i8* %.53(%string.580129* %.49)
  %.56 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.277, i64 0, i64 0), i8* %.54)
  %.58 = call i8* @malloc(i64 %.56)
  %.59 = call i64 (i8*, i8*, ...) @sprintf(i8* %.58, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.277, i64 0, i64 0), i8* %.54)
  %.60 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.61 = bitcast i8* %.60 to %string.580129*
  %.62 = bitcast i8* %.60 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.62, align 8
  %.64 = getelementptr inbounds i8, i8* %.60, i64 8
  %2 = bitcast i8* %.64 to i8**
  store i8* %.58, i8** %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.60, i64 16
  %3 = bitcast i8* %.66 to i64*
  store i64 %.56, i64* %3, align 8
  %.68 = getelementptr inbounds i8, i8* %.60, i64 24
  %4 = bitcast i8* %.68 to i64*
  store i64 %.56, i64* %4, align 8
  %.72 = load %TypeNode.580161*, %TypeNode.580161** %.11, align 8
  %.73 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %.72, i64 0, i32 1
  %.74 = load %FloRange.580135*, %FloRange.580135** %.73, align 8
  call void %.42(%TypeChecker.580449* %.1, i64 5, %string.580129* %.61, %FloRange.580135* %.74)
  br label %.5.endif

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge620 = phi i64 [ %next_enum_value.promoted, %for.body.lr.ph ], [ %storemerge6, %for.body.endif ]
  %.8519 = phi %"Array<EnumNodeField>.580247"* [ %.8514, %for.body.lr.ph ], [ %.85, %for.body.endif ]
  %storemerge18 = phi i64 [ 0, %for.body.lr.ph ], [ %.294, %for.body.endif ]
  %.94 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.8519, i64 0, i32 0
  %.95 = load %"Array<EnumNodeField>_vtable_ty.580248"*, %"Array<EnumNodeField>_vtable_ty.580248"** %.94, align 8
  %.96 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.580248", %"Array<EnumNodeField>_vtable_ty.580248"* %.95, i64 0, i32 5
  %.97 = load %EnumNodeField.580243* (%"Array<EnumNodeField>.580247"*, i64)*, %EnumNodeField.580243* (%"Array<EnumNodeField>.580247"*, i64)** %.96, align 8
  %.98 = call %EnumNodeField.580243* %.97(%"Array<EnumNodeField>.580247"* %.8519, i64 %storemerge18)
  %.101 = getelementptr inbounds %EnumNodeField.580243, %EnumNodeField.580243* %.98, i64 0, i32 1
  %.102 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.101, align 8
  %.103 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.102, i64 0, i32 3
  %5 = bitcast %string.580129** %.103 to i64*
  %.1043 = load i64, i64* %5, align 8
  %enum_name = alloca %string.580129*, align 8
  %6 = bitcast %string.580129** %enum_name to i64*
  store i64 %.1043, i64* %6, align 8
  %.106.cast = inttoptr i64 %.1043 to %string.580129*
  %.107 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.108 = bitcast i8* %.107 to %EnumField.580415*
  %.109 = bitcast i8* %.107 to %EnumField_vtable_ty.580416**
  store %EnumField_vtable_ty.580416* @EnumField_vtable_data, %EnumField_vtable_ty.580416** %.109, align 8
  call void @EnumField_constructor(%EnumField.580415* %.108, %string.580129* %.106.cast)
  %enum_field = alloca %EnumField.580415*, align 8
  %7 = bitcast %EnumField.580415** %enum_field to i8**
  store i8* %.107, i8** %7, align 8
  %.1164 = load %TypeId.580287*, %TypeId.580287** %1, align 8
  %.119 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.120 = bitcast i8* %.119 to %PropId.580339*
  %.121 = bitcast i8* %.119 to %PropId_vtable_ty.580340**
  store %PropId_vtable_ty.580340* @PropId_vtable_data, %PropId_vtable_ty.580340** %.121, align 8
  call void @PropId_constructor(%PropId.580339* %.120, i64 1, %TypeId.580287* %.1164, i64 %storemerge18)
  %.124 = getelementptr inbounds i8, i8* %.107, i64 8
  %8 = bitcast i8* %.124 to i8**
  store i8* %.119, i8** %8, align 8
  %.127 = getelementptr inbounds %EnumNodeField.580243, %EnumNodeField.580243* %.98, i64 0, i32 2
  %9 = bitcast %ExpressionNode.580177** %.127 to i64*
  %.1285 = load i64, i64* %9, align 8
  %.129 = trunc i64 %.1285 to i32
  %.131.not = icmp eq i32 %.129, 0
  %.247 = load %EnumField.580415*, %EnumField.580415** %enum_field, align 8
  br i1 %.131.not, label %for.body.else, label %for.body.if

for.cond.for.end_crit_edge:                       ; preds = %for.body.endif
  store i64 %storemerge6, i64* %next_enum_value, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.5.endif
  ret void

for.body.if:                                      ; preds = %for.body
  %.136 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.135, align 8
  %.137 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.136, i64 0, i32 60
  %.138 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.137, align 8
  %.142 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.127, align 8
  %.143 = call %Expression.580293* %.138(%TypeChecker.580449* %.1, %Type.580273* %enum_variant.0, %ExpressionNode.580177* %.142)
  %.144 = getelementptr inbounds %EnumField.580415, %EnumField.580415* %.247, i64 0, i32 3
  store %Expression.580293* %.143, %Expression.580293** %.144, align 8
  %.149 = getelementptr inbounds %Expression.580293, %Expression.580293* %.143, i64 0, i32 2
  %.150 = load i1, i1* %.149, align 1
  %.170 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.135, align 8
  br i1 %.150, label %for.body.if.endif, label %for.body.if.if

for.body.else:                                    ; preds = %for.body
  %.249 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.250 = bitcast i8* %.249 to %IntExpression.580303*
  %.251 = bitcast i8* %.249 to %IntExpression_vtable_ty.580304**
  store %IntExpression_vtable_ty.580304* @IntExpression_vtable_data, %IntExpression_vtable_ty.580304** %.251, align 8
  call void @IntExpression_constructor(%IntExpression.580303* %.250, i64 %storemerge620)
  %.255 = getelementptr inbounds %EnumField.580415, %EnumField.580415* %.247, i64 0, i32 3
  %10 = bitcast %Expression.580293** %.255 to i8**
  store i8* %.249, i8** %10, align 8
  %.261 = getelementptr inbounds i8, i8* %.249, i64 32
  %11 = bitcast i8* %.261 to %Type.580273**
  store %Type.580273* %enum_variant.0, %Type.580273** %11, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if.endif.endif, %for.body.else
  %storemerge6.in = phi i64 [ %storemerge620, %for.body.else ], [ %.243, %for.body.if.endif.endif ]
  %storemerge6 = add i64 %storemerge6.in, 1
  %.271 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.270, align 8
  %.272 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.271, i64 0, i32 0
  %.273 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.272, align 8
  %.274 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.273, i64 0, i32 2
  %.275 = load void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)*, void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)** %.274, align 8
  %.276 = load %string.580129*, %string.580129** %enum_name, align 8
  %.278 = getelementptr inbounds %EnumField.580415, %EnumField.580415* %.247, i64 0, i32 1
  %.279 = load %PropId.580339*, %PropId.580339** %.278, align 8
  call void %.275(%"Map<string, PropId>.580407"* %.271, %string.580129* %.276, %PropId.580339* %.279)
  %.283 = load %"Array<EnumField>.580419"*, %"Array<EnumField>.580419"** %.282, align 8
  %.285 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.283, i64 0, i32 0
  %.286 = load %"Array<EnumField>_vtable_ty.580420"*, %"Array<EnumField>_vtable_ty.580420"** %.285, align 8
  %.287 = getelementptr inbounds %"Array<EnumField>_vtable_ty.580420", %"Array<EnumField>_vtable_ty.580420"* %.286, i64 0, i32 2
  %.288 = load void (%"Array<EnumField>.580419"*, %EnumField.580415*)*, void (%"Array<EnumField>.580419"*, %EnumField.580415*)** %.287, align 8
  call void %.288(%"Array<EnumField>.580419"* %.283, %EnumField.580415* %.247)
  %.294 = add nuw nsw i64 %storemerge18, 1
  %.85 = load %"Array<EnumNodeField>.580247"*, %"Array<EnumNodeField>.580247"** %.84, align 8
  %.86 = getelementptr inbounds %"Array<EnumNodeField>.580247", %"Array<EnumNodeField>.580247"* %.85, i64 0, i32 2
  %.87 = load i64, i64* %.86, align 8
  %.88 = icmp slt i64 %.294, %.87
  br i1 %.88, label %for.body, label %for.cond.for.end_crit_edge

for.body.if.if:                                   ; preds = %for.body.if
  store i64 %storemerge620, i64* %next_enum_value, align 8
  %.156 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.170, i64 0, i32 16
  %.157 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.156, align 8
  %.158 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.159 = bitcast i8* %.158 to %string.580129*
  %.159.repack = bitcast i8* %.158 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.159.repack, align 8
  %.159.repack7 = getelementptr inbounds i8, i8* %.158, i64 8
  %12 = bitcast i8* %.159.repack7 to i8**
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.278, i64 0, i64 0), i8** %12, align 8
  %.159.repack8 = getelementptr inbounds i8, i8* %.158, i64 16
  %13 = bitcast i8* %.159.repack8 to i64*
  store i64 37, i64* %13, align 8
  %.159.repack9 = getelementptr inbounds i8, i8* %.158, i64 24
  %14 = bitcast i8* %.159.repack9 to i64*
  store i64 37, i64* %14, align 8
  %.163 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.127, align 8
  %.164 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.163, i64 0, i32 1
  %.165 = load %FloRange.580135*, %FloRange.580135** %.164, align 8
  call void %.157(%TypeChecker.580449* %.1, i64 5, %string.580129* %.159, %FloRange.580135* %.165)
  ret void

for.body.if.endif:                                ; preds = %for.body.if
  %.171 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.170, i64 0, i32 9
  %.172 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.171, align 8
  %.177 = getelementptr inbounds %Expression.580293, %Expression.580293* %.143, i64 0, i32 4
  %.178 = load %Type.580273*, %Type.580273** %.177, align 8
  %.179 = call i1 %.172(%TypeChecker.580449* %.1, %Type.580273* %enum_variant.0, %Type.580273* %.178)
  br i1 %.179, label %for.body.if.endif.endif, label %for.body.if.endif.if

for.body.if.endif.if:                             ; preds = %for.body.if.endif
  store i64 %storemerge620, i64* %next_enum_value, align 8
  %.135.le = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.184 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.135.le, align 8
  %.185 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.184, i64 0, i32 16
  %.186 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.185, align 8
  %.190 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.184, i64 0, i32 10
  %.191 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.190, align 8
  %.193 = call %string.580129* %.191(%TypeChecker.580449* %.1, %Type.580273* %enum_variant.0)
  %.196 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.135.le, align 8
  %.197 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.196, i64 0, i32 10
  %.198 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.197, align 8
  %.201 = load %Expression.580293*, %Expression.580293** %.144, align 8
  %.202 = getelementptr inbounds %Expression.580293, %Expression.580293* %.201, i64 0, i32 4
  %.203 = load %Type.580273*, %Type.580273** %.202, align 8
  %.204 = call %string.580129* %.198(%TypeChecker.580449* %.1, %Type.580273* %.203)
  %.205 = getelementptr inbounds %string.580129, %string.580129* %.193, i64 0, i32 0
  %.206 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.205, align 8
  %.207 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.206, i64 0, i32 10
  %.208 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.207, align 8
  %.209 = call i8* %.208(%string.580129* %.193)
  %.210 = getelementptr inbounds %string.580129, %string.580129* %.204, i64 0, i32 0
  %.211 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.210, align 8
  %.212 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.211, i64 0, i32 10
  %.213 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.212, align 8
  %.214 = call i8* %.213(%string.580129* %.204)
  %.216 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.279, i64 0, i64 0), i8* %.209, i8* %.214)
  %.218 = call i8* @malloc(i64 %.216)
  %.219 = call i64 (i8*, i8*, ...) @sprintf(i8* %.218, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.279, i64 0, i64 0), i8* %.209, i8* %.214)
  %.220 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.221 = bitcast i8* %.220 to %string.580129*
  %.222 = bitcast i8* %.220 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.222, align 8
  %.224 = getelementptr inbounds i8, i8* %.220, i64 8
  %15 = bitcast i8* %.224 to i8**
  store i8* %.218, i8** %15, align 8
  %.226 = getelementptr inbounds i8, i8* %.220, i64 16
  %16 = bitcast i8* %.226 to i64*
  store i64 %.216, i64* %16, align 8
  %.228 = getelementptr inbounds i8, i8* %.220, i64 24
  %17 = bitcast i8* %.228 to i64*
  store i64 %.216, i64* %17, align 8
  %.232 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.127, align 8
  %.233 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.232, i64 0, i32 1
  %.234 = load %FloRange.580135*, %FloRange.580135** %.233, align 8
  call void %.186(%TypeChecker.580449* %.1, i64 5, %string.580129* %.221, %FloRange.580135* %.234)
  ret void

for.body.if.endif.endif:                          ; preds = %for.body.if.endif
  %.239 = load %Program.580445*, %Program.580445** %.238, align 8
  %.242 = load %Expression.580293*, %Expression.580293** %.144, align 8
  %.243 = call i64 @evaluate_const_int_expression(%Program.580445* %.239, %Expression.580293* %.242)
  br label %for.body.endif
}

define void @TypeChecker_declare_class_fields(%TypeChecker.580449* %.1, %Class.580403* nocapture readonly %.2, %ClassDeclarationNode.580235* nocapture readonly %.3) {
.5:
  %.18 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.3, i64 0, i32 4
  %.1927 = load %"Array<FieldNode>.580238"*, %"Array<FieldNode>.580238"** %.18, align 8
  %.2028 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1927, i64 0, i32 2
  %.2129 = load i64, i64* %.2028, align 8
  %.2230 = icmp sgt i64 %.2129, 0
  br i1 %.2230, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.10 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 10
  %.11 = load i64, i64* %.10, align 8
  %.53 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.83 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 1
  %0 = bitcast %ClassId.580289** %.83 to %TypeId.580287**
  %.96 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.119 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 7
  %.192 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.456 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 8
  %.494 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif.endif.endif
  %.1933 = phi %"Array<FieldNode>.580238"* [ %.1927, %for.body.lr.ph ], [ %.19, %for.body.endif.endif.endif.endif ]
  %current_vtable_index.032 = phi i64 [ %.11, %for.body.lr.ph ], [ %current_vtable_index.1, %for.body.endif.endif.endif.endif ]
  %storemerge31 = phi i64 [ 0, %for.body.lr.ph ], [ %.506, %for.body.endif.endif.endif.endif ]
  %.28 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.1933, i64 0, i32 0
  %.29 = load %"Array<FieldNode>_vtable_ty.580241"*, %"Array<FieldNode>_vtable_ty.580241"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.580241", %"Array<FieldNode>_vtable_ty.580241"* %.29, i64 0, i32 5
  %.31 = load %FieldNode.580231* (%"Array<FieldNode>.580238"*, i64)*, %FieldNode.580231* (%"Array<FieldNode>.580238"*, i64)** %.30, align 8
  %.32 = call %FieldNode.580231* %.31(%"Array<FieldNode>.580238"* %.1933, i64 %storemerge31)
  %.34 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.36 = bitcast i8* %.34 to %ClassField_vtable_ty.580400**
  store %ClassField_vtable_ty.580400* @ClassField_vtable_data, %ClassField_vtable_ty.580400** %.36, align 8
  %field = alloca %ClassField.580399*, align 8
  %1 = bitcast %ClassField.580399** %field to i8**
  store i8* %.34, i8** %1, align 8
  %.41 = getelementptr inbounds %FieldNode.580231, %FieldNode.580231* %.32, i64 0, i32 1
  %.42 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.41, align 8
  %.43 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.42, i64 0, i32 3
  %2 = bitcast %string.580129** %.43 to i64*
  %.444 = load i64, i64* %2, align 8
  %.45 = getelementptr inbounds i8, i8* %.34, i64 32
  %3 = bitcast i8* %.45 to i64*
  store i64 %.444, i64* %3, align 8
  %.47 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.48 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.47, i64 0, i32 4
  %.49 = load %string.580129*, %string.580129** %.48, align 8
  %.50 = call i1 @is_operator_overload_name(%string.580129* %.49)
  br i1 %.50, label %for.body.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif.endif.endif.endif, %for.body.endif, %for.body.endif.endif.endif.if, %.5
  ret void

for.body.if:                                      ; preds = %for.body
  %.54 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.53, align 8
  %.55 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.54, i64 0, i32 16
  %.56 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.55, align 8
  %.57 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.58 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.57, i64 0, i32 4
  %.59 = load %string.580129*, %string.580129** %.58, align 8
  %.60 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.61 = bitcast i8* %.60 to %string.580129*
  %.61.repack = bitcast i8* %.60 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.61.repack, align 8
  %.61.repack11 = getelementptr inbounds i8, i8* %.60, i64 8
  %4 = bitcast i8* %.61.repack11 to i8**
  store i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.280, i64 0, i64 0), i8** %4, align 8
  %.61.repack12 = getelementptr inbounds i8, i8* %.60, i64 16
  %5 = bitcast i8* %.61.repack12 to i64*
  store i64 75, i64* %5, align 8
  %.61.repack13 = getelementptr inbounds i8, i8* %.60, i64 24
  %6 = bitcast i8* %.61.repack13 to i64*
  store i64 75, i64* %6, align 8
  %.63 = getelementptr inbounds %string.580129, %string.580129* %.59, i64 0, i32 0
  %.64 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.63, align 8
  %.65 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.64, i64 0, i32 0
  %.66 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.65, align 8
  %.67 = call %string.580129* %.66(%string.580129* %.59, %string.580129* %.61)
  %.70 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.41, align 8
  %.71 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.70, i64 0, i32 2
  %.72 = load %FloRange.580135*, %FloRange.580135** %.71, align 8
  call void %.56(%TypeChecker.580449* %.1, i64 1, %string.580129* %.67, %FloRange.580135* %.72)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if, %for.body
  %.75 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.77 = getelementptr inbounds %FieldNode.580231, %FieldNode.580231* %.32, i64 0, i32 2
  %.78 = load i64, i64* %.77, align 8
  %.79 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.75, i64 0, i32 3
  store i64 %.78, i64* %.79, align 8
  %.845 = load %TypeId.580287*, %TypeId.580287** %0, align 8
  %.87 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.88 = bitcast i8* %.87 to %PropId.580339*
  %.89 = bitcast i8* %.87 to %PropId_vtable_ty.580340**
  store %PropId_vtable_ty.580340* @PropId_vtable_data, %PropId_vtable_ty.580340** %.89, align 8
  call void @PropId_constructor(%PropId.580339* %.88, i64 1, %TypeId.580287* %.845, i64 %storemerge31)
  %.92 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.75, i64 0, i32 1
  %7 = bitcast %PropId.580339** %.92 to i8**
  store i8* %.87, i8** %7, align 8
  %.94 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.97 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.98 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.97, i64 0, i32 35
  %.99 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.98, align 8
  %.101 = getelementptr inbounds %FieldNode.580231, %FieldNode.580231* %.32, i64 0, i32 4
  %.102 = load %TypeNode.580161*, %TypeNode.580161** %.101, align 8
  %.103 = call %Type.580273* %.99(%TypeChecker.580449* %.1, %TypeNode.580161* %.102)
  %.104 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.94, i64 0, i32 5
  store %Type.580273* %.103, %Type.580273** %.104, align 8
  %.106 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.108 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.106, i64 0, i32 7
  store i64 %current_vtable_index.032, i64* %.108, align 8
  %.112 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.113 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.112, i64 0, i32 17
  %.114 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.113, align 8
  %.115 = call i1 %.114(%TypeChecker.580449* %.1)
  br i1 %.115, label %for.end, label %for.body.endif.endif

for.body.endif.endif:                             ; preds = %for.body.endif
  %.120 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.119, align 8
  %.121 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.120, i64 0, i32 0
  %.122 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.121, align 8
  %.123 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.122, i64 0, i32 3
  %.124 = load %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)** %.123, align 8
  %.125 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.126 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.125, i64 0, i32 4
  %.127 = load %string.580129*, %string.580129** %.126, align 8
  %.128 = call %PropId.580339* %.124(%"Map<string, PropId>.580407"* %.120, %string.580129* %.127)
  %8 = ptrtoint %PropId.580339* %.128 to i64
  %.131 = trunc i64 %8 to i32
  %.133.not = icmp eq i32 %.131, 0
  br i1 %.133.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.if

for.body.endif.endif.if:                          ; preds = %for.body.endif.endif
  %.136 = getelementptr inbounds %PropId.580339, %PropId.580339* %.128, i64 0, i32 2
  %.137 = load %TypeId.580287*, %TypeId.580287** %.136, align 8
  %.14010 = load %TypeId.580287*, %TypeId.580287** %0, align 8
  %.141 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.137, i64 0, i32 0
  %.142 = load %TypeId_vtable_ty.580288*, %TypeId_vtable_ty.580288** %.141, align 8
  %.143 = getelementptr inbounds %TypeId_vtable_ty.580288, %TypeId_vtable_ty.580288* %.142, i64 0, i32 0
  %.144 = load i1 (%TypeId.580287*, %TypeId.580287*)*, i1 (%TypeId.580287*, %TypeId.580287*)** %.143, align 8
  %.146 = call i1 %.144(%TypeId.580287* %.137, %TypeId.580287* %.14010)
  br i1 %.146, label %for.body.endif.endif.if.if, label %for.body.endif.endif.if.endif

for.body.endif.endif.endif:                       ; preds = %for.body.endif.endif.if.endif.endif, %for.body.endif.endif
  %.328 = getelementptr inbounds %FieldNode.580231, %FieldNode.580231* %.32, i64 0, i32 3
  %9 = bitcast %ExpressionNode.580177** %.328 to i64*
  %.3296 = load i64, i64* %9, align 8
  %.330 = trunc i64 %.3296 to i32
  %.332.not = icmp eq i32 %.330, 0
  %.470 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  br i1 %.332.not, label %for.body.endif.endif.endif.else, label %for.body.endif.endif.endif.if

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %.150 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.151 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.150, i64 0, i32 16
  %.152 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.151, align 8
  %.153 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.154 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.153, i64 0, i32 4
  %.155 = load %string.580129*, %string.580129** %.154, align 8
  %.157 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 2
  %.158 = load %string.580129*, %string.580129** %.157, align 8
  %.159 = getelementptr inbounds %string.580129, %string.580129* %.155, i64 0, i32 0
  %.160 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.159, align 8
  %.161 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.160, i64 0, i32 10
  %.162 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.161, align 8
  %.163 = call i8* %.162(%string.580129* %.155)
  %.164 = getelementptr inbounds %string.580129, %string.580129* %.158, i64 0, i32 0
  %.165 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.164, align 8
  %.166 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.165, i64 0, i32 10
  %.167 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.166, align 8
  %.168 = call i8* %.167(%string.580129* %.158)
  %.170 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.281, i64 0, i64 0), i8* %.163, i8* %.168)
  %.172 = call i8* @malloc(i64 %.170)
  %.173 = call i64 (i8*, i8*, ...) @sprintf(i8* %.172, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.281, i64 0, i64 0), i8* %.163, i8* %.168)
  %.174 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.175 = bitcast i8* %.174 to %string.580129*
  %.176 = bitcast i8* %.174 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.176, align 8
  %.178 = getelementptr inbounds i8, i8* %.174, i64 8
  %10 = bitcast i8* %.178 to i8**
  store i8* %.172, i8** %10, align 8
  %.180 = getelementptr inbounds i8, i8* %.174, i64 16
  %11 = bitcast i8* %.180 to i64*
  store i64 %.170, i64* %11, align 8
  %.182 = getelementptr inbounds i8, i8* %.174, i64 24
  %12 = bitcast i8* %.182 to i64*
  store i64 %.170, i64* %12, align 8
  %.186 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.41, align 8
  %.187 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.186, i64 0, i32 2
  %.188 = load %FloRange.580135*, %FloRange.580135** %.187, align 8
  call void %.152(%TypeChecker.580449* %.1, i64 1, %string.580129* %.175, %FloRange.580135* %.188)
  ret void

for.body.endif.endif.if.endif:                    ; preds = %for.body.endif.endif.if
  %.193 = load %Program.580445*, %Program.580445** %.192, align 8
  %.195 = call %Type.580273* @get_class_prop_type(%Program.580445* %.193, %PropId.580339* %.128)
  %.199 = load %Program.580445*, %Program.580445** %.192, align 8
  %.201 = call i64 @get_class_prop_visibility(%Program.580445* %.199, %PropId.580339* %.128)
  %.205 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.206 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.205, i64 0, i32 9
  %.207 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.206, align 8
  %.209 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.210 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.209, i64 0, i32 5
  %.211 = load %Type.580273*, %Type.580273** %.210, align 8
  %.212 = call i1 %.207(%TypeChecker.580449* %.1, %Type.580273* %.195, %Type.580273* %.211)
  br i1 %.212, label %for.body.endif.endif.if.endif.endif, label %for.body.endif.endif.if.endif.if

for.body.endif.endif.if.endif.if:                 ; preds = %for.body.endif.endif.if.endif
  %.217 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.218 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.217, i64 0, i32 16
  %.219 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.218, align 8
  %.220 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.221 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.220, i64 0, i32 4
  %.222 = load %string.580129*, %string.580129** %.221, align 8
  %.224 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 2
  %.225 = load %string.580129*, %string.580129** %.224, align 8
  %.229 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.217, i64 0, i32 10
  %.230 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.229, align 8
  %.232 = call %string.580129* %.230(%TypeChecker.580449* %.1, %Type.580273* %.195)
  %.233 = getelementptr inbounds %string.580129, %string.580129* %.222, i64 0, i32 0
  %.234 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.233, align 8
  %.235 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.234, i64 0, i32 10
  %.236 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.235, align 8
  %.237 = call i8* %.236(%string.580129* %.222)
  %.238 = getelementptr inbounds %string.580129, %string.580129* %.225, i64 0, i32 0
  %.239 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.238, align 8
  %.240 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.239, i64 0, i32 10
  %.241 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.240, align 8
  %.242 = call i8* %.241(%string.580129* %.225)
  %.243 = getelementptr inbounds %string.580129, %string.580129* %.232, i64 0, i32 0
  %.244 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.243, align 8
  %.245 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.244, i64 0, i32 10
  %.246 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.245, align 8
  %.247 = call i8* %.246(%string.580129* %.232)
  %.249 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @str.282, i64 0, i64 0), i8* %.237, i8* %.242, i8* %.247)
  %.251 = call i8* @malloc(i64 %.249)
  %.252 = call i64 (i8*, i8*, ...) @sprintf(i8* %.251, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @str.282, i64 0, i64 0), i8* %.237, i8* %.242, i8* %.247)
  %.253 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.254 = bitcast i8* %.253 to %string.580129*
  %.255 = bitcast i8* %.253 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.255, align 8
  %.257 = getelementptr inbounds i8, i8* %.253, i64 8
  %13 = bitcast i8* %.257 to i8**
  store i8* %.251, i8** %13, align 8
  %.259 = getelementptr inbounds i8, i8* %.253, i64 16
  %14 = bitcast i8* %.259 to i64*
  store i64 %.249, i64* %14, align 8
  %.261 = getelementptr inbounds i8, i8* %.253, i64 24
  %15 = bitcast i8* %.261 to i64*
  store i64 %.249, i64* %15, align 8
  %.265 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.41, align 8
  %.266 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.265, i64 0, i32 2
  %.267 = load %FloRange.580135*, %FloRange.580135** %.266, align 8
  call void %.219(%TypeChecker.580449* %.1, i64 5, %string.580129* %.254, %FloRange.580135* %.267)
  ret void

for.body.endif.endif.if.endif.endif:              ; preds = %for.body.endif.endif.if.endif
  %.270 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.271 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.270, i64 0, i32 3
  %.272 = load i64, i64* %.271, align 8
  %.274.not = icmp eq i64 %.272, %.201
  br i1 %.274.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.if.endif.endif.if

for.body.endif.endif.if.endif.endif.if:           ; preds = %for.body.endif.endif.if.endif.endif
  %.278 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.279 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.278, i64 0, i32 16
  %.280 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.279, align 8
  %.282 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.270, i64 0, i32 4
  %.283 = load %string.580129*, %string.580129** %.282, align 8
  %.285 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 2
  %.286 = load %string.580129*, %string.580129** %.285, align 8
  %.288 = call %string.580129* @dump_access(i64 %.201)
  %.289 = getelementptr inbounds %string.580129, %string.580129* %.283, i64 0, i32 0
  %.290 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.289, align 8
  %.291 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.290, i64 0, i32 10
  %.292 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.291, align 8
  %.293 = call i8* %.292(%string.580129* %.283)
  %.294 = getelementptr inbounds %string.580129, %string.580129* %.286, i64 0, i32 0
  %.295 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.294, align 8
  %.296 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.295, i64 0, i32 10
  %.297 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.296, align 8
  %.298 = call i8* %.297(%string.580129* %.286)
  %.299 = getelementptr inbounds %string.580129, %string.580129* %.288, i64 0, i32 0
  %.300 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.299, align 8
  %.301 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.300, i64 0, i32 10
  %.302 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.301, align 8
  %.303 = call i8* %.302(%string.580129* %.288)
  %.305 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.283, i64 0, i64 0), i8* %.293, i8* %.298, i8* %.303)
  %.307 = call i8* @malloc(i64 %.305)
  %.308 = call i64 (i8*, i8*, ...) @sprintf(i8* %.307, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.283, i64 0, i64 0), i8* %.293, i8* %.298, i8* %.303)
  %.309 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.310 = bitcast i8* %.309 to %string.580129*
  %.311 = bitcast i8* %.309 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.311, align 8
  %.313 = getelementptr inbounds i8, i8* %.309, i64 8
  %16 = bitcast i8* %.313 to i8**
  store i8* %.307, i8** %16, align 8
  %.315 = getelementptr inbounds i8, i8* %.309, i64 16
  %17 = bitcast i8* %.315 to i64*
  store i64 %.305, i64* %17, align 8
  %.317 = getelementptr inbounds i8, i8* %.309, i64 24
  %18 = bitcast i8* %.317 to i64*
  store i64 %.305, i64* %18, align 8
  %.321 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.41, align 8
  %.322 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.321, i64 0, i32 2
  %.323 = load %FloRange.580135*, %FloRange.580135** %.322, align 8
  call void %.280(%TypeChecker.580449* %.1, i64 4, %string.580129* %.310, %FloRange.580135* %.323)
  ret void

for.body.endif.endif.endif.if:                    ; preds = %for.body.endif.endif.endif
  %.337 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.338 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.337, i64 0, i32 60
  %.339 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.338, align 8
  %.341 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.470, i64 0, i32 5
  %.342 = load %Type.580273*, %Type.580273** %.341, align 8
  %.345 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.328, align 8
  %.346 = call %Expression.580293* %.339(%TypeChecker.580449* %.1, %Type.580273* %.342, %ExpressionNode.580177* %.345)
  %.347 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.470, i64 0, i32 6
  store %Expression.580293* %.346, %Expression.580293** %.347, align 8
  %.351 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.352 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.351, i64 0, i32 17
  %.353 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.352, align 8
  %.354 = call i1 %.353(%TypeChecker.580449* %.1)
  br i1 %.354, label %for.end, label %for.body.endif.endif.endif.if.endif

for.body.endif.endif.endif.else:                  ; preds = %for.body.endif.endif.endif
  %.471 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.470, i64 0, i32 2
  store i1 false, i1* %.471, align 1
  %.475 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.119, align 8
  %.476 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.475, i64 0, i32 0
  %.477 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.476, align 8
  %.478 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.477, i64 0, i32 2
  %.479 = load void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)*, void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)** %.478, align 8
  %.481 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.470, i64 0, i32 4
  %.482 = load %string.580129*, %string.580129** %.481, align 8
  %.484 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.470, i64 0, i32 1
  %.485 = load %PropId.580339*, %PropId.580339** %.484, align 8
  call void %.479(%"Map<string, PropId>.580407"* %.475, %string.580129* %.482, %PropId.580339* %.485)
  %.490 = add i64 %current_vtable_index.032, 1
  br label %for.body.endif.endif.endif.endif

for.body.endif.endif.endif.endif:                 ; preds = %for.body.endif.endif.endif.if.endif.endif.endif, %for.body.endif.endif.endif.else
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.032, %for.body.endif.endif.endif.if.endif.endif.endif ], [ %.490, %for.body.endif.endif.endif.else ]
  %.495 = load %"Array<ClassField>.580405"*, %"Array<ClassField>.580405"** %.494, align 8
  %.496 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.497 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.495, i64 0, i32 0
  %.498 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.497, align 8
  %.499 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.498, i64 0, i32 2
  %.500 = load void (%"Array<ClassField>.580405"*, %ClassField.580399*)*, void (%"Array<ClassField>.580405"*, %ClassField.580399*)** %.499, align 8
  call void %.500(%"Array<ClassField>.580405"* %.495, %ClassField.580399* %.496)
  %.506 = add nuw nsw i64 %storemerge31, 1
  %.19 = load %"Array<FieldNode>.580238"*, %"Array<FieldNode>.580238"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FieldNode>.580238", %"Array<FieldNode>.580238"* %.19, i64 0, i32 2
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp slt i64 %.506, %.21
  br i1 %.22, label %for.body, label %for.end

for.body.endif.endif.endif.if.endif:              ; preds = %for.body.endif.endif.endif.if
  %.359 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.360 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.359, i64 0, i32 9
  %.361 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.360, align 8
  %.362 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.363 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.362, i64 0, i32 5
  %.364 = load %Type.580273*, %Type.580273** %.363, align 8
  %.366 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.362, i64 0, i32 6
  %.367 = load %Expression.580293*, %Expression.580293** %.366, align 8
  %.368 = getelementptr inbounds %Expression.580293, %Expression.580293* %.367, i64 0, i32 4
  %.369 = load %Type.580273*, %Type.580273** %.368, align 8
  %.370 = call i1 %.361(%TypeChecker.580449* %.1, %Type.580273* %.364, %Type.580273* %.369)
  br i1 %.370, label %for.body.endif.endif.endif.if.endif.endif, label %for.body.endif.endif.endif.if.endif.if

for.body.endif.endif.endif.if.endif.if:           ; preds = %for.body.endif.endif.endif.if.endif
  %.375 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.376 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.375, i64 0, i32 16
  %.377 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.376, align 8
  %.381 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.375, i64 0, i32 10
  %.382 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.381, align 8
  %.383 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.384 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.383, i64 0, i32 5
  %.385 = load %Type.580273*, %Type.580273** %.384, align 8
  %.386 = call %string.580129* %.382(%TypeChecker.580449* %.1, %Type.580273* %.385)
  %.389 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.390 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.389, i64 0, i32 10
  %.391 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.390, align 8
  %.392 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.393 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.392, i64 0, i32 6
  %.394 = load %Expression.580293*, %Expression.580293** %.393, align 8
  %.395 = getelementptr inbounds %Expression.580293, %Expression.580293* %.394, i64 0, i32 4
  %.396 = load %Type.580273*, %Type.580273** %.395, align 8
  %.397 = call %string.580129* %.391(%TypeChecker.580449* %.1, %Type.580273* %.396)
  %.398 = getelementptr inbounds %string.580129, %string.580129* %.386, i64 0, i32 0
  %.399 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.398, align 8
  %.400 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.399, i64 0, i32 10
  %.401 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.400, align 8
  %.402 = call i8* %.401(%string.580129* %.386)
  %.403 = getelementptr inbounds %string.580129, %string.580129* %.397, i64 0, i32 0
  %.404 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.403, align 8
  %.405 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.404, i64 0, i32 10
  %.406 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.405, align 8
  %.407 = call i8* %.406(%string.580129* %.397)
  %.409 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.284, i64 0, i64 0), i8* %.402, i8* %.407)
  %.411 = call i8* @malloc(i64 %.409)
  %.412 = call i64 (i8*, i8*, ...) @sprintf(i8* %.411, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.284, i64 0, i64 0), i8* %.402, i8* %.407)
  %.413 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.414 = bitcast i8* %.413 to %string.580129*
  %.415 = bitcast i8* %.413 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.415, align 8
  %.417 = getelementptr inbounds i8, i8* %.413, i64 8
  %19 = bitcast i8* %.417 to i8**
  store i8* %.411, i8** %19, align 8
  %.419 = getelementptr inbounds i8, i8* %.413, i64 16
  %20 = bitcast i8* %.419 to i64*
  store i64 %.409, i64* %20, align 8
  %.421 = getelementptr inbounds i8, i8* %.413, i64 24
  %21 = bitcast i8* %.421 to i64*
  store i64 %.409, i64* %21, align 8
  %.425 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.328, align 8
  %.426 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.425, i64 0, i32 1
  %.427 = load %FloRange.580135*, %FloRange.580135** %.426, align 8
  call void %.377(%TypeChecker.580449* %.1, i64 5, %string.580129* %.414, %FloRange.580135* %.427)
  br label %for.body.endif.endif.endif.if.endif.endif

for.body.endif.endif.endif.if.endif.endif:        ; preds = %for.body.endif.endif.endif.if.endif, %for.body.endif.endif.endif.if.endif.if
  %.430 = load %ClassField.580399*, %ClassField.580399** %field, align 8
  %.431 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.430, i64 0, i32 6
  %.432 = load %Expression.580293*, %Expression.580293** %.431, align 8
  %.433 = getelementptr inbounds %Expression.580293, %Expression.580293* %.432, i64 0, i32 2
  %.434 = load i1, i1* %.433, align 1
  br i1 %.434, label %for.body.endif.endif.endif.if.endif.endif.endif, label %for.body.endif.endif.endif.if.endif.endif.if

for.body.endif.endif.endif.if.endif.endif.if:     ; preds = %for.body.endif.endif.endif.if.endif.endif
  %.439 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.96, align 8
  %.440 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.439, i64 0, i32 16
  %.441 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.440, align 8
  %.442 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.443 = bitcast i8* %.442 to %string.580129*
  %.443.repack = bitcast i8* %.442 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.443.repack, align 8
  %.443.repack7 = getelementptr inbounds i8, i8* %.442, i64 8
  %22 = bitcast i8* %.443.repack7 to i8**
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.285, i64 0, i64 0), i8** %22, align 8
  %.443.repack8 = getelementptr inbounds i8, i8* %.442, i64 16
  %23 = bitcast i8* %.443.repack8 to i64*
  store i64 45, i64* %23, align 8
  %.443.repack9 = getelementptr inbounds i8, i8* %.442, i64 24
  %24 = bitcast i8* %.443.repack9 to i64*
  store i64 45, i64* %24, align 8
  %.447 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.328, align 8
  %.448 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.447, i64 0, i32 1
  %.449 = load %FloRange.580135*, %FloRange.580135** %.448, align 8
  call void %.441(%TypeChecker.580449* %.1, i64 4, %string.580129* %.443, %FloRange.580135* %.449)
  ret void

for.body.endif.endif.endif.if.endif.endif.endif:  ; preds = %for.body.endif.endif.endif.if.endif.endif
  %.453 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.430, i64 0, i32 2
  store i1 true, i1* %.453, align 1
  %.457 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.456, align 8
  %.458 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.457, i64 0, i32 0
  %.459 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.458, align 8
  %.460 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.459, i64 0, i32 2
  %.461 = load void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)*, void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)** %.460, align 8
  %.463 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.430, i64 0, i32 4
  %.464 = load %string.580129*, %string.580129** %.463, align 8
  %.466 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.430, i64 0, i32 1
  %.467 = load %PropId.580339*, %PropId.580339** %.466, align 8
  call void %.461(%"Map<string, PropId>.580407"* %.457, %string.580129* %.464, %PropId.580339* %.467)
  br label %for.body.endif.endif.endif.endif
}

define void @TypeChecker_declare_class_methods(%TypeChecker.580449* %.1, %Class.580403* nocapture %.2, %ClassDeclarationNode.580235* nocapture readonly %.3) {
.5:
  %.18 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.3, i64 0, i32 5
  %.1968 = load %"Array<MethodNode>.580239"*, %"Array<MethodNode>.580239"** %.18, align 8
  %.2069 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1968, i64 0, i32 2
  %.2170 = load i64, i64* %.2069, align 8
  %.2271 = icmp sgt i64 %.2170, 0
  br i1 %.2271, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.10 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 9
  %.11 = load i64, i64* %.10, align 8
  %.50 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.60 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 6
  %0 = bitcast %ScopeId.580361** %.60 to i64*
  %.217 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 7
  %.235 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 1
  %1 = bitcast %ClassId.580289** %.235 to %TypeId.580287**
  %.286 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.433 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 1
  %2 = bitcast %ClassId.580289** %.433 to %TypeId.580287**
  %.542 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 4
  %3 = bitcast %PropId.580339** %.542 to i64*
  %.495 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 8
  %.615 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif.endif
  %.1974 = phi %"Array<MethodNode>.580239"* [ %.1968, %for.body.lr.ph ], [ %.19, %for.body.endif.endif.endif ]
  %current_vtable_index.073 = phi i64 [ %.11, %for.body.lr.ph ], [ %current_vtable_index.1, %for.body.endif.endif.endif ]
  %storemerge72 = phi i64 [ 0, %for.body.lr.ph ], [ %.633, %for.body.endif.endif.endif ]
  %.24 = call dereferenceable_or_null(88) i8* @malloc(i64 88)
  %.26 = bitcast i8* %.24 to %ClassMethod_vtable_ty.580402**
  store %ClassMethod_vtable_ty.580402* @ClassMethod_vtable_data, %ClassMethod_vtable_ty.580402** %.26, align 8
  %method = alloca %ClassMethod.580401*, align 8
  %4 = bitcast %ClassMethod.580401** %method to i8**
  store i8* %.24, i8** %4, align 8
  %.33 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.1974, i64 0, i32 0
  %.34 = load %"Array<MethodNode>_vtable_ty.580242"*, %"Array<MethodNode>_vtable_ty.580242"** %.33, align 8
  %.35 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.580242", %"Array<MethodNode>_vtable_ty.580242"* %.34, i64 0, i32 5
  %.36 = load %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)*, %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)** %.35, align 8
  %.37 = call %MethodNode.580229* %.36(%"Array<MethodNode>.580239"* %.1974, i64 %storemerge72)
  %.40 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.37, i64 0, i32 1
  %.41 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.40, align 8
  %.42 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.41, i64 0, i32 3
  %5 = bitcast %string.580129** %.42 to i64*
  %.432 = load i64, i64* %5, align 8
  %name = alloca %string.580129*, align 8
  %6 = bitcast %string.580129** %name to i64*
  store i64 %.432, i64* %6, align 8
  %.45 = load %ClassMethod.580401*, %ClassMethod.580401** %method, align 8
  %.47 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.45, i64 0, i32 4
  %7 = bitcast %string.580129** %.47 to i64*
  store i64 %.432, i64* %7, align 8
  %.51 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.52 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.51, i64 0, i32 15
  %.53 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.52, align 8
  %.54 = call %Scope.580363* %.53(%TypeChecker.580449* %.1)
  %.58 = getelementptr inbounds %Scope.580363, %Scope.580363* %.54, i64 0, i32 1
  %8 = bitcast %ScopeId.580361** %.58 to i64*
  %.596 = load i64, i64* %8, align 8
  store i64 %.596, i64* %0, align 8
  %.64 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.66 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.68 = bitcast i8* %.66 to %"Array<FunctionArg>_vtable_ty.580394"**
  store %"Array<FunctionArg>_vtable_ty.580394"* @"Array<FunctionArg>_vtable_data", %"Array<FunctionArg>_vtable_ty.580394"** %.68, align 8
  %.70 = getelementptr inbounds i8, i8* %.66, i64 8
  %9 = bitcast i8* %.70 to i8**
  store i8* %.64, i8** %9, align 8
  %.72 = getelementptr inbounds i8, i8* %.66, i64 16
  %10 = bitcast i8* %.72 to i64*
  store i64 0, i64* %10, align 8
  %.74 = getelementptr inbounds i8, i8* %.66, i64 24
  %11 = bitcast i8* %.74 to i64*
  store i64 8, i64* %11, align 8
  %.76 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.45, i64 0, i32 7
  %12 = bitcast %"Array<FunctionArg>.580393"** %.76 to i8**
  store i8* %.66, i8** %12, align 8
  %.78 = load %string.580129*, %string.580129** %name, align 8
  %.79 = call i1 @is_operator_overload_name(%string.580129* %.78)
  br i1 %.79, label %for.body.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif.endif.endif, %.5
  ret void

for.body.if:                                      ; preds = %for.body
  %.82 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.83 = bitcast i8* %.82 to %string.580129*
  %.83.repack = bitcast i8* %.82 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.83.repack, align 8
  %.83.repack34 = getelementptr inbounds i8, i8* %.82, i64 8
  %13 = bitcast i8* %.83.repack34 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.244, i64 0, i64 0), i8** %13, align 8
  %.83.repack35 = getelementptr inbounds i8, i8* %.82, i64 16
  %14 = bitcast i8* %.83.repack35 to i64*
  store i64 11, i64* %14, align 8
  %.83.repack36 = getelementptr inbounds i8, i8* %.82, i64 24
  %15 = bitcast i8* %.83.repack36 to i64*
  store i64 11, i64* %15, align 8
  %.85 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.86 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.85, align 8
  %.87 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.86, i64 0, i32 3
  %.88 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.87, align 8
  %.89 = call i1 %.88(%string.580129* %.78, %string.580129* %.83)
  %. = select i1 %.89, i64 2, i64 1
  %.96 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.37, i64 0, i32 2
  %.97 = load %"Array<ArgNode>.580227"*, %"Array<ArgNode>.580227"** %.96, align 8
  %.98 = getelementptr inbounds %"Array<ArgNode>.580227", %"Array<ArgNode>.580227"* %.97, i64 0, i32 2
  %.99 = load i64, i64* %.98, align 8
  %.101.not = icmp eq i64 %.99, %.
  br i1 %.101.not, label %end.endif, label %end.if

for.body.endif:                                   ; preds = %end.endif, %for.body
  %.182 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.37, i64 0, i32 7
  %.183 = load i1, i1* %.182, align 1
  %.184 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.45, i64 0, i32 8
  store i1 %.183, i1* %.184, align 1
  %.188 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.37, i64 0, i32 6
  %.189 = load i1, i1* %.188, align 1
  %.190 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.45, i64 0, i32 2
  store i1 %.189, i1* %.190, align 1
  %.194 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.37, i64 0, i32 4
  %.195 = load i64, i64* %.194, align 8
  %.196 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.45, i64 0, i32 3
  store i64 %.195, i64* %.196, align 8
  %.201 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.202 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.201, i64 0, i32 24
  %.203 = load %FunctionType.580279* (%TypeChecker.580449*, %"Array<ArgNode>.580227"*, %TypeNode.580161*, %"Array<FunctionArg>.580393"*)*, %FunctionType.580279* (%TypeChecker.580449*, %"Array<ArgNode>.580227"*, %TypeNode.580161*, %"Array<FunctionArg>.580393"*)** %.202, align 8
  %.205 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.37, i64 0, i32 2
  %.206 = load %"Array<ArgNode>.580227"*, %"Array<ArgNode>.580227"** %.205, align 8
  %.208 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.37, i64 0, i32 5
  %.209 = load %TypeNode.580161*, %TypeNode.580161** %.208, align 8
  %.212 = load %"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"** %.76, align 8
  %.213 = call %FunctionType.580279* %.203(%TypeChecker.580449* %.1, %"Array<ArgNode>.580227"* %.206, %TypeNode.580161* %.209, %"Array<FunctionArg>.580393"* %.212)
  %.214 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.45, i64 0, i32 5
  store %FunctionType.580279* %.213, %FunctionType.580279** %.214, align 8
  %.218 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.217, align 8
  %.219 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.218, i64 0, i32 0
  %.220 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.219, align 8
  %.221 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.220, i64 0, i32 3
  %.222 = load %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)** %.221, align 8
  %.224 = call %PropId.580339* %.222(%"Map<string, PropId>.580407"* %.218, %string.580129* %.78)
  %16 = ptrtoint %PropId.580339* %.224 to i64
  %.227 = trunc i64 %16 to i32
  %.229.not = icmp eq i32 %.227, 0
  br i1 %.229.not, label %for.body.endif.endif, label %for.body.endif.if

end.if:                                           ; preds = %for.body.if
  %.85.le76 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.105 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.106 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.105, i64 0, i32 16
  %.107 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.106, align 8
  %.116 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.85.le76, align 8
  %.117 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.116, i64 0, i32 10
  %.118 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.117, align 8
  %.119 = call i8* %.118(%string.580129* %.78)
  %.121 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @str.286, i64 0, i64 0), i64 %., i8* %.119, i64 %.99)
  %.123 = call i8* @malloc(i64 %.121)
  %.124 = call i64 (i8*, i8*, ...) @sprintf(i8* %.123, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @str.286, i64 0, i64 0), i64 %., i8* %.119, i64 %.99)
  %.125 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.126 = bitcast i8* %.125 to %string.580129*
  %.127 = bitcast i8* %.125 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.127, align 8
  %.129 = getelementptr inbounds i8, i8* %.125, i64 8
  %17 = bitcast i8* %.129 to i8**
  store i8* %.123, i8** %17, align 8
  %.131 = getelementptr inbounds i8, i8* %.125, i64 16
  %18 = bitcast i8* %.131 to i64*
  store i64 %.121, i64* %18, align 8
  %.133 = getelementptr inbounds i8, i8* %.125, i64 24
  %19 = bitcast i8* %.133 to i64*
  store i64 %.121, i64* %19, align 8
  %.137 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.40, align 8
  %.138 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.137, i64 0, i32 2
  %.139 = load %FloRange.580135*, %FloRange.580135** %.138, align 8
  call void %.107(%TypeChecker.580449* %.1, i64 4, %string.580129* %.126, %FloRange.580135* %.139)
  ret void

end.endif:                                        ; preds = %for.body.if
  %.143 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.37, i64 0, i32 6
  %.144 = load i1, i1* %.143, align 1
  br i1 %.144, label %end.endif.if, label %for.body.endif

end.endif.if:                                     ; preds = %end.endif
  %.85.le = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.148 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.149 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.148, i64 0, i32 16
  %.150 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.149, align 8
  %.153 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.85.le, align 8
  %.154 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.153, i64 0, i32 10
  %.155 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.154, align 8
  %.156 = call i8* %.155(%string.580129* %.78)
  %.158 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.287, i64 0, i64 0), i8* %.156)
  %.160 = call i8* @malloc(i64 %.158)
  %.161 = call i64 (i8*, i8*, ...) @sprintf(i8* %.160, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.287, i64 0, i64 0), i8* %.156)
  %.162 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.162 to %string.580129*
  %.164 = bitcast i8* %.162 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.164, align 8
  %.166 = getelementptr inbounds i8, i8* %.162, i64 8
  %20 = bitcast i8* %.166 to i8**
  store i8* %.160, i8** %20, align 8
  %.168 = getelementptr inbounds i8, i8* %.162, i64 16
  %21 = bitcast i8* %.168 to i64*
  store i64 %.158, i64* %21, align 8
  %.170 = getelementptr inbounds i8, i8* %.162, i64 24
  %22 = bitcast i8* %.170 to i64*
  store i64 %.158, i64* %22, align 8
  %.174 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.40, align 8
  %.175 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.174, i64 0, i32 2
  %.176 = load %FloRange.580135*, %FloRange.580135** %.175, align 8
  call void %.150(%TypeChecker.580449* %.1, i64 4, %string.580129* %.163, %FloRange.580135* %.176)
  ret void

for.body.endif.if:                                ; preds = %for.body.endif
  %.232 = getelementptr inbounds %PropId.580339, %PropId.580339* %.224, i64 0, i32 2
  %.233 = load %TypeId.580287*, %TypeId.580287** %.232, align 8
  %.23632 = load %TypeId.580287*, %TypeId.580287** %1, align 8
  %.237 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.233, i64 0, i32 0
  %.238 = load %TypeId_vtable_ty.580288*, %TypeId_vtable_ty.580288** %.237, align 8
  %.239 = getelementptr inbounds %TypeId_vtable_ty.580288, %TypeId_vtable_ty.580288* %.238, i64 0, i32 0
  %.240 = load i1 (%TypeId.580287*, %TypeId.580287*)*, i1 (%TypeId.580287*, %TypeId.580287*)** %.239, align 8
  %.242 = call i1 %.240(%TypeId.580287* %.233, %TypeId.580287* %.23632)
  br i1 %.242, label %for.body.endif.if.if, label %for.body.endif.if.endif

for.body.endif.endif:                             ; preds = %for.body.endif, %for.body.endif.if.endif.endif.endif
  %.422.sink = phi i64 [ %.422, %for.body.endif.if.endif.endif.endif ], [ %current_vtable_index.073, %for.body.endif ]
  %.423 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.45, i64 0, i32 10
  store i64 %.422.sink, i64* %.423, align 8
  %.4347 = load %TypeId.580287*, %TypeId.580287** %2, align 8
  %.437 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.438 = bitcast i8* %.437 to %PropId.580339*
  %.439 = bitcast i8* %.437 to %PropId_vtable_ty.580340**
  store %PropId_vtable_ty.580340* @PropId_vtable_data, %PropId_vtable_ty.580340** %.439, align 8
  call void @PropId_constructor(%PropId.580339* %.438, i64 0, %TypeId.580287* %.4347, i64 %storemerge72)
  %.442 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.45, i64 0, i32 1
  %23 = bitcast %PropId.580339** %.442 to i8**
  store i8* %.437, i8** %23, align 8
  %.446 = load i1, i1* %.188, align 1
  br i1 %.446, label %for.body.endif.endif.if, label %for.body.endif.endif.else

for.body.endif.if.if:                             ; preds = %for.body.endif.if
  %.246 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.247 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.246, i64 0, i32 16
  %.248 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.247, align 8
  %.251 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 2
  %.252 = load %string.580129*, %string.580129** %.251, align 8
  %.253 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.254 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.253, align 8
  %.255 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.254, i64 0, i32 10
  %.256 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.255, align 8
  %.257 = call i8* %.256(%string.580129* %.78)
  %.258 = getelementptr inbounds %string.580129, %string.580129* %.252, i64 0, i32 0
  %.259 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.258, align 8
  %.260 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.259, i64 0, i32 10
  %.261 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.260, align 8
  %.262 = call i8* %.261(%string.580129* %.252)
  %.264 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.288, i64 0, i64 0), i8* %.257, i8* %.262)
  %.266 = call i8* @malloc(i64 %.264)
  %.267 = call i64 (i8*, i8*, ...) @sprintf(i8* %.266, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.288, i64 0, i64 0), i8* %.257, i8* %.262)
  %.268 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.269 = bitcast i8* %.268 to %string.580129*
  %.270 = bitcast i8* %.268 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.270, align 8
  %.272 = getelementptr inbounds i8, i8* %.268, i64 8
  %24 = bitcast i8* %.272 to i8**
  store i8* %.266, i8** %24, align 8
  %.274 = getelementptr inbounds i8, i8* %.268, i64 16
  %25 = bitcast i8* %.274 to i64*
  store i64 %.264, i64* %25, align 8
  %.276 = getelementptr inbounds i8, i8* %.268, i64 24
  %26 = bitcast i8* %.276 to i64*
  store i64 %.264, i64* %26, align 8
  %.280 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.40, align 8
  %.281 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.280, i64 0, i32 2
  %.282 = load %FloRange.580135*, %FloRange.580135** %.281, align 8
  call void %.248(%TypeChecker.580449* %.1, i64 1, %string.580129* %.269, %FloRange.580135* %.282)
  ret void

for.body.endif.if.endif:                          ; preds = %for.body.endif.if
  %.287 = load %Program.580445*, %Program.580445** %.286, align 8
  %.289 = call %Type.580273* @get_class_prop_type(%Program.580445* %.287, %PropId.580339* %.224)
  %.293 = load %Program.580445*, %Program.580445** %.286, align 8
  %.295 = call i64 @get_class_prop_visibility(%Program.580445* %.293, %PropId.580339* %.224)
  %.299 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.300 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.299, i64 0, i32 9
  %.301 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.300, align 8
  %27 = bitcast %FunctionType.580279** %.214 to %Type.580273**
  %.30533 = load %Type.580273*, %Type.580273** %27, align 8
  %.307 = call i1 %.301(%TypeChecker.580449* %.1, %Type.580273* %.289, %Type.580273* %.30533)
  br i1 %.307, label %for.body.endif.if.endif.endif, label %for.body.endif.if.endif.if

for.body.endif.if.endif.if:                       ; preds = %for.body.endif.if.endif
  %.312 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.313 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.312, i64 0, i32 16
  %.314 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.313, align 8
  %.317 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 2
  %.318 = load %string.580129*, %string.580129** %.317, align 8
  %.322 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.312, i64 0, i32 10
  %.323 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.322, align 8
  %.325 = call %string.580129* %.323(%TypeChecker.580449* %.1, %Type.580273* %.289)
  %.326 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.327 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.326, align 8
  %.328 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.327, i64 0, i32 10
  %.329 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.328, align 8
  %.330 = call i8* %.329(%string.580129* %.78)
  %.331 = getelementptr inbounds %string.580129, %string.580129* %.318, i64 0, i32 0
  %.332 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.331, align 8
  %.333 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.332, i64 0, i32 10
  %.334 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.333, align 8
  %.335 = call i8* %.334(%string.580129* %.318)
  %.336 = getelementptr inbounds %string.580129, %string.580129* %.325, i64 0, i32 0
  %.337 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.336, align 8
  %.338 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.337, i64 0, i32 10
  %.339 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.338, align 8
  %.340 = call i8* %.339(%string.580129* %.325)
  %.342 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @str.289, i64 0, i64 0), i8* %.330, i8* %.335, i8* %.340)
  %.344 = call i8* @malloc(i64 %.342)
  %.345 = call i64 (i8*, i8*, ...) @sprintf(i8* %.344, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @str.289, i64 0, i64 0), i8* %.330, i8* %.335, i8* %.340)
  %.346 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.347 = bitcast i8* %.346 to %string.580129*
  %.348 = bitcast i8* %.346 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.348, align 8
  %.350 = getelementptr inbounds i8, i8* %.346, i64 8
  %28 = bitcast i8* %.350 to i8**
  store i8* %.344, i8** %28, align 8
  %.352 = getelementptr inbounds i8, i8* %.346, i64 16
  %29 = bitcast i8* %.352 to i64*
  store i64 %.342, i64* %29, align 8
  %.354 = getelementptr inbounds i8, i8* %.346, i64 24
  %30 = bitcast i8* %.354 to i64*
  store i64 %.342, i64* %30, align 8
  %.358 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.40, align 8
  %.359 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.358, i64 0, i32 2
  %.360 = load %FloRange.580135*, %FloRange.580135** %.359, align 8
  call void %.314(%TypeChecker.580449* %.1, i64 5, %string.580129* %.347, %FloRange.580135* %.360)
  ret void

for.body.endif.if.endif.endif:                    ; preds = %for.body.endif.if.endif
  %.365 = load i64, i64* %.196, align 8
  %.367.not = icmp eq i64 %.365, %.295
  br i1 %.367.not, label %for.body.endif.if.endif.endif.endif, label %for.body.endif.if.endif.endif.if

for.body.endif.if.endif.endif.if:                 ; preds = %for.body.endif.if.endif.endif
  %.371 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.372 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.371, i64 0, i32 16
  %.373 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.372, align 8
  %.376 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 2
  %.377 = load %string.580129*, %string.580129** %.376, align 8
  %.379 = call %string.580129* @dump_access(i64 %.295)
  %.380 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.381 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.380, align 8
  %.382 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.381, i64 0, i32 10
  %.383 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.382, align 8
  %.384 = call i8* %.383(%string.580129* %.78)
  %.385 = getelementptr inbounds %string.580129, %string.580129* %.377, i64 0, i32 0
  %.386 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.385, align 8
  %.387 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.386, i64 0, i32 10
  %.388 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.387, align 8
  %.389 = call i8* %.388(%string.580129* %.377)
  %.390 = getelementptr inbounds %string.580129, %string.580129* %.379, i64 0, i32 0
  %.391 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.390, align 8
  %.392 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.391, i64 0, i32 10
  %.393 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.392, align 8
  %.394 = call i8* %.393(%string.580129* %.379)
  %.396 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.290, i64 0, i64 0), i8* %.384, i8* %.389, i8* %.394)
  %.398 = call i8* @malloc(i64 %.396)
  %.399 = call i64 (i8*, i8*, ...) @sprintf(i8* %.398, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.290, i64 0, i64 0), i8* %.384, i8* %.389, i8* %.394)
  %.400 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.401 = bitcast i8* %.400 to %string.580129*
  %.402 = bitcast i8* %.400 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.402, align 8
  %.404 = getelementptr inbounds i8, i8* %.400, i64 8
  %31 = bitcast i8* %.404 to i8**
  store i8* %.398, i8** %31, align 8
  %.406 = getelementptr inbounds i8, i8* %.400, i64 16
  %32 = bitcast i8* %.406 to i64*
  store i64 %.396, i64* %32, align 8
  %.408 = getelementptr inbounds i8, i8* %.400, i64 24
  %33 = bitcast i8* %.408 to i64*
  store i64 %.396, i64* %33, align 8
  %.412 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.40, align 8
  %.413 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.412, i64 0, i32 2
  %.414 = load %FloRange.580135*, %FloRange.580135** %.413, align 8
  call void %.373(%TypeChecker.580449* %.1, i64 4, %string.580129* %.401, %FloRange.580135* %.414)
  ret void

for.body.endif.if.endif.endif.endif:              ; preds = %for.body.endif.if.endif.endif
  %.420 = load %Program.580445*, %Program.580445** %.286, align 8
  %.422 = call i64 @get_vtable_index(%Program.580445* %.420, %PropId.580339* %.224)
  br label %for.body.endif.endif

for.body.endif.endif.if:                          ; preds = %for.body.endif.endif
  %.450 = load i1, i1* %.182, align 1
  br i1 %.450, label %for.body.endif.endif.if.if, label %for.body.endif.endif.if.endif

for.body.endif.endif.else:                        ; preds = %for.body.endif.endif
  %.509 = load %string.580129*, %string.580129** %.47, align 8
  %.510 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.511 = bitcast i8* %.510 to %string.580129*
  %.511.repack = bitcast i8* %.510 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.511.repack, align 8
  %.511.repack8 = getelementptr inbounds i8, i8* %.510, i64 8
  %34 = bitcast i8* %.511.repack8 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.292, i64 0, i64 0), i8** %34, align 8
  %.511.repack9 = getelementptr inbounds i8, i8* %.510, i64 16
  %35 = bitcast i8* %.511.repack9 to i64*
  store i64 11, i64* %35, align 8
  %.511.repack10 = getelementptr inbounds i8, i8* %.510, i64 24
  %36 = bitcast i8* %.511.repack10 to i64*
  store i64 11, i64* %36, align 8
  %.513 = getelementptr inbounds %string.580129, %string.580129* %.509, i64 0, i32 0
  %.514 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.513, align 8
  %.515 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.514, i64 0, i32 3
  %.516 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.515, align 8
  %.517 = call i1 %.516(%string.580129* %.509, %string.580129* %.511)
  br i1 %.517, label %for.body.endif.endif.else.if, label %for.body.endif.endif.else.else

for.body.endif.endif.endif:                       ; preds = %for.body.endif.endif.else.endif, %for.body.endif.endif.if.endif.endif
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.073, %for.body.endif.endif.if.endif.endif ], [ %current_vtable_index.2, %for.body.endif.endif.else.endif ]
  %.608 = load %ClassMethod.580401*, %ClassMethod.580401** %method, align 8
  %.61114 = load i64, i64* %8, align 8
  %.612 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.608, i64 0, i32 9
  %37 = bitcast %ScopeId.580361** %.612 to i64*
  store i64 %.61114, i64* %37, align 8
  %.616 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.615, align 8
  %.618 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.616, i64 0, i32 0
  %.619 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.618, align 8
  %.620 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.619, i64 0, i32 2
  %.621 = load void (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)*, void (%"Array<ClassMethod>.580406"*, %ClassMethod.580401*)** %.620, align 8
  call void %.621(%"Array<ClassMethod>.580406"* %.616, %ClassMethod.580401* %.608)
  %.625 = getelementptr inbounds %Scope.580363, %Scope.580363* %.54, i64 0, i32 6
  %38 = bitcast %ScopeId.580361** %.625 to i64*
  %.62615 = load i64, i64* %38, align 8
  store i64 %.62615, i64* %0, align 8
  %.633 = add nuw nsw i64 %storemerge72, 1
  %.19 = load %"Array<MethodNode>.580239"*, %"Array<MethodNode>.580239"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.19, i64 0, i32 2
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp slt i64 %.633, %.21
  br i1 %.22, label %for.body, label %for.end

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %.454 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.455 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.454, i64 0, i32 16
  %.456 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.455, align 8
  %.457 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.458 = bitcast i8* %.457 to %string.580129*
  %.458.repack = bitcast i8* %.457 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.458.repack, align 8
  %.458.repack29 = getelementptr inbounds i8, i8* %.457, i64 8
  %39 = bitcast i8* %.458.repack29 to i8**
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.291, i64 0, i64 0), i8** %39, align 8
  %.458.repack30 = getelementptr inbounds i8, i8* %.457, i64 16
  %40 = bitcast i8* %.458.repack30 to i64*
  store i64 31, i64* %40, align 8
  %.458.repack31 = getelementptr inbounds i8, i8* %.457, i64 24
  %41 = bitcast i8* %.458.repack31 to i64*
  store i64 31, i64* %41, align 8
  %.462 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.40, align 8
  %.463 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.462, i64 0, i32 2
  %.464 = load %FloRange.580135*, %FloRange.580135** %.463, align 8
  call void %.456(%TypeChecker.580449* %.1, i64 4, %string.580129* %.458, %FloRange.580135* %.464)
  ret void

for.body.endif.endif.if.endif:                    ; preds = %for.body.endif.endif.if
  %.469 = load %string.580129*, %string.580129** %.47, align 8
  %.470 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.471 = bitcast i8* %.470 to %string.580129*
  %.471.repack = bitcast i8* %.470 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.471.repack, align 8
  %.471.repack23 = getelementptr inbounds i8, i8* %.470, i64 8
  %42 = bitcast i8* %.471.repack23 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.292, i64 0, i64 0), i8** %42, align 8
  %.471.repack24 = getelementptr inbounds i8, i8* %.470, i64 16
  %43 = bitcast i8* %.471.repack24 to i64*
  store i64 11, i64* %43, align 8
  %.471.repack25 = getelementptr inbounds i8, i8* %.470, i64 24
  %44 = bitcast i8* %.471.repack25 to i64*
  store i64 11, i64* %44, align 8
  %.473 = getelementptr inbounds %string.580129, %string.580129* %.469, i64 0, i32 0
  %.474 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.473, align 8
  %.475 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.474, i64 0, i32 3
  %.476 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.475, align 8
  %.477 = call i1 %.476(%string.580129* %.469, %string.580129* %.471)
  br i1 %.477, label %for.body.endif.endif.if.endif.if, label %for.body.endif.endif.if.endif.endif

for.body.endif.endif.if.endif.if:                 ; preds = %for.body.endif.endif.if.endif
  %.481 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.482 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.481, i64 0, i32 16
  %.483 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.482, align 8
  %.484 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.485 = bitcast i8* %.484 to %string.580129*
  %.485.repack = bitcast i8* %.484 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.485.repack, align 8
  %.485.repack26 = getelementptr inbounds i8, i8* %.484, i64 8
  %45 = bitcast i8* %.485.repack26 to i8**
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.293, i64 0, i64 0), i8** %45, align 8
  %.485.repack27 = getelementptr inbounds i8, i8* %.484, i64 16
  %46 = bitcast i8* %.485.repack27 to i64*
  store i64 33, i64* %46, align 8
  %.485.repack28 = getelementptr inbounds i8, i8* %.484, i64 24
  %47 = bitcast i8* %.485.repack28 to i64*
  store i64 33, i64* %47, align 8
  %.489 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.40, align 8
  %.490 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.489, i64 0, i32 2
  %.491 = load %FloRange.580135*, %FloRange.580135** %.490, align 8
  call void %.483(%TypeChecker.580449* %.1, i64 4, %string.580129* %.485, %FloRange.580135* %.491)
  ret void

for.body.endif.endif.if.endif.endif:              ; preds = %for.body.endif.endif.if.endif
  %.496 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.495, align 8
  %.497 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.496, i64 0, i32 0
  %.498 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.497, align 8
  %.499 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.498, i64 0, i32 2
  %.500 = load void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)*, void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)** %.499, align 8
  %.504 = load %PropId.580339*, %PropId.580339** %.442, align 8
  call void %.500(%"Map<string, PropId>.580407"* %.496, %string.580129* %.78, %PropId.580339* %.504)
  br label %for.body.endif.endif.endif

for.body.endif.endif.else.if:                     ; preds = %for.body.endif.endif.else
  %.521 = load i1, i1* %.182, align 1
  br i1 %.521, label %for.body.endif.endif.else.if.if, label %for.body.endif.endif.else.if.endif

for.body.endif.endif.else.else:                   ; preds = %for.body.endif.endif.else
  %.547 = load i64, i64* %.196, align 8
  %.548.not = icmp eq i64 %.547, 0
  br i1 %.548.not, label %for.body.endif.endif.else.else.else, label %for.body.endif.endif.else.else.if

for.body.endif.endif.else.endif:                  ; preds = %for.body.endif.endif.else.else.endif, %for.body.endif.endif.else.if.endif
  %current_vtable_index.2 = phi i64 [ %current_vtable_index.073, %for.body.endif.endif.else.if.endif ], [ %current_vtable_index.3, %for.body.endif.endif.else.else.endif ]
  %.591 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.592 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.591, i64 0, i32 21
  %.593 = load %Const.580397* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)*, %Const.580397* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)** %.592, align 8
  %.594 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.595 = bitcast i8* %.594 to %string.580129*
  %.595.repack = bitcast i8* %.594 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.595.repack, align 8
  %.595.repack11 = getelementptr inbounds i8, i8* %.594, i64 8
  %48 = bitcast i8* %.595.repack11 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.180, i64 0, i64 0), i8** %48, align 8
  %.595.repack12 = getelementptr inbounds i8, i8* %.594, i64 16
  %49 = bitcast i8* %.595.repack12 to i64*
  store i64 4, i64* %49, align 8
  %.595.repack13 = getelementptr inbounds i8, i8* %.594, i64 24
  %50 = bitcast i8* %.595.repack13 to i64*
  store i64 4, i64* %50, align 8
  %.599 = load %ClassId.580289*, %ClassId.580289** %.433, align 8
  %.600 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.601 = bitcast i8* %.600 to %ObjectType.580297*
  %.602 = bitcast i8* %.600 to %ObjectType_vtable_ty.580298**
  store %ObjectType_vtable_ty.580298* @ObjectType_vtable_data, %ObjectType_vtable_ty.580298** %.602, align 8
  call void @ObjectType_constructor(%ObjectType.580297* %.601, %ClassId.580289* %.599)
  %.605 = bitcast i8* %.600 to %Type.580273*
  %.606 = call %Const.580397* %.593(%TypeChecker.580449* %.1, %string.580129* %.595, %Expression.580293* null, %Type.580273* %.605)
  br label %for.body.endif.endif.endif

for.body.endif.endif.else.if.if:                  ; preds = %for.body.endif.endif.else.if
  %.525 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.526 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.525, i64 0, i32 16
  %.527 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.526, align 8
  %.528 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.529 = bitcast i8* %.528 to %string.580129*
  %.529.repack = bitcast i8* %.528 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.529.repack, align 8
  %.529.repack20 = getelementptr inbounds i8, i8* %.528, i64 8
  %51 = bitcast i8* %.529.repack20 to i8**
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.294, i64 0, i64 0), i8** %51, align 8
  %.529.repack21 = getelementptr inbounds i8, i8* %.528, i64 16
  %52 = bitcast i8* %.529.repack21 to i64*
  store i64 35, i64* %52, align 8
  %.529.repack22 = getelementptr inbounds i8, i8* %.528, i64 24
  %53 = bitcast i8* %.529.repack22 to i64*
  store i64 35, i64* %53, align 8
  %.533 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.40, align 8
  %.534 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.533, i64 0, i32 2
  %.535 = load %FloRange.580135*, %FloRange.580135** %.534, align 8
  call void %.527(%TypeChecker.580449* %.1, i64 4, %string.580129* %.529, %FloRange.580135* %.535)
  ret void

for.body.endif.endif.else.if.endif:               ; preds = %for.body.endif.endif.else.if
  %54 = bitcast %PropId.580339** %.442 to i64*
  %.54119 = load i64, i64* %54, align 8
  store i64 %.54119, i64* %3, align 8
  br label %for.body.endif.endif.else.endif

for.body.endif.endif.else.else.if:                ; preds = %for.body.endif.endif.else.else
  %.553 = add i64 %current_vtable_index.073, 1
  br label %for.body.endif.endif.else.else.endif

for.body.endif.endif.else.else.else:              ; preds = %for.body.endif.endif.else.else
  %.558 = load i1, i1* %.182, align 1
  br i1 %.558, label %for.body.endif.endif.else.else.else.if, label %for.body.endif.endif.else.else.endif

for.body.endif.endif.else.else.endif:             ; preds = %for.body.endif.endif.else.else.else, %for.body.endif.endif.else.else.if
  %current_vtable_index.3 = phi i64 [ %.553, %for.body.endif.endif.else.else.if ], [ %current_vtable_index.073, %for.body.endif.endif.else.else.else ]
  %.578 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.217, align 8
  %.579 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.578, i64 0, i32 0
  %.580 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.579, align 8
  %.581 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.580, i64 0, i32 2
  %.582 = load void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)*, void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)** %.581, align 8
  %.586 = load %PropId.580339*, %PropId.580339** %.442, align 8
  call void %.582(%"Map<string, PropId>.580407"* %.578, %string.580129* %.78, %PropId.580339* %.586)
  br label %for.body.endif.endif.else.endif

for.body.endif.endif.else.else.else.if:           ; preds = %for.body.endif.endif.else.else.else
  %.562 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.50, align 8
  %.563 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.562, i64 0, i32 16
  %.564 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.563, align 8
  %.565 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.566 = bitcast i8* %.565 to %string.580129*
  %.566.repack = bitcast i8* %.565 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.566.repack, align 8
  %.566.repack16 = getelementptr inbounds i8, i8* %.565, i64 8
  %55 = bitcast i8* %.566.repack16 to i8**
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @str.295, i64 0, i64 0), i8** %55, align 8
  %.566.repack17 = getelementptr inbounds i8, i8* %.565, i64 16
  %56 = bitcast i8* %.566.repack17 to i64*
  store i64 58, i64* %56, align 8
  %.566.repack18 = getelementptr inbounds i8, i8* %.565, i64 24
  %57 = bitcast i8* %.566.repack18 to i64*
  store i64 58, i64* %57, align 8
  %.570 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.40, align 8
  %.571 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.570, i64 0, i32 2
  %.572 = load %FloRange.580135*, %FloRange.580135** %.571, align 8
  call void %.564(%TypeChecker.580449* %.1, i64 4, %string.580129* %.566, %FloRange.580135* %.572)
  ret void
}

define void @TypeChecker_add_inherited_props_to_class(%TypeChecker.580449* %.1, %Class.580403* nocapture %.2, %ClassDeclarationNode.580235* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 3
  %0 = bitcast %Type.580273** %.10 to %ObjectType.580297**
  %.112 = load %ObjectType.580297*, %ObjectType.580297** %0, align 8
  %.15 = getelementptr inbounds %ObjectType.580297, %ObjectType.580297* %.112, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17.not = icmp eq i64 %.16, 13
  br i1 %.17.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.20 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.21, i64 0, i32 16
  %.23 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.22, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.21, i64 0, i32 10
  %.28 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.27, align 8
  %.30 = bitcast %ObjectType.580297* %.112 to %Type.580273*
  %.31 = call %string.580129* %.28(%TypeChecker.580449* %.1, %Type.580273* %.30)
  %.32 = getelementptr inbounds %string.580129, %string.580129* %.31, i64 0, i32 0
  %.33 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.32, align 8
  %.34 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.33, i64 0, i32 10
  %.35 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.34, align 8
  %.36 = call i8* %.35(%string.580129* %.31)
  %.38 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.296, i64 0, i64 0), i8* %.36)
  %.40 = call i8* @malloc(i64 %.38)
  %.41 = call i64 (i8*, i8*, ...) @sprintf(i8* %.40, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.296, i64 0, i64 0), i8* %.36)
  %.42 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.42 to %string.580129*
  %.44 = bitcast i8* %.42 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.44, align 8
  %.46 = getelementptr inbounds i8, i8* %.42, i64 8
  %1 = bitcast i8* %.46 to i8**
  store i8* %.40, i8** %1, align 8
  %.48 = getelementptr inbounds i8, i8* %.42, i64 16
  %2 = bitcast i8* %.48 to i64*
  store i64 %.38, i64* %2, align 8
  %.50 = getelementptr inbounds i8, i8* %.42, i64 24
  %3 = bitcast i8* %.50 to i64*
  store i64 %.38, i64* %3, align 8
  %.53 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.3, i64 0, i32 3
  %.54 = load %RecordTypeNode.580163*, %RecordTypeNode.580163** %.53, align 8
  %.55 = getelementptr inbounds %RecordTypeNode.580163, %RecordTypeNode.580163* %.54, i64 0, i32 1
  %.56 = load %FloRange.580135*, %FloRange.580135** %.55, align 8
  call void %.23(%TypeChecker.580449* %.1, i64 5, %string.580129* %.43, %FloRange.580135* %.56)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.60 = getelementptr inbounds %ObjectType.580297, %ObjectType.580297* %.112, i64 0, i32 2
  %.6134 = load %ClassId.580289*, %ClassId.580289** %.60, align 8
  %.64 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.65 = load %Program.580445*, %Program.580445** %.64, align 8
  %.67 = call %Class.580403* @get_class(%Program.580445* %.65, %ClassId.580289* %.6134)
  %.70 = getelementptr inbounds %Class.580403, %Class.580403* %.67, i64 0, i32 7
  %.71 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.70, align 8
  %.72 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.71, i64 0, i32 0
  %.73 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.72, align 8
  %.74 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.73, i64 0, i32 4
  %.75 = load %"Array<Bucket<string, PropId>>.580413"* (%"Map<string, PropId>.580407"*)*, %"Array<Bucket<string, PropId>>.580413"* (%"Map<string, PropId>.580407"*)** %.74, align 8
  %.76 = call %"Array<Bucket<string, PropId>>.580413"* %.75(%"Map<string, PropId>.580407"* %.71)
  %.83 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.76, i64 0, i32 2
  %.848 = load i64, i64* %.83, align 8
  %.859 = icmp sgt i64 %.848, 0
  br i1 %.859, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif
  %.89 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.76, i64 0, i32 0
  %.114 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 7
  %.158 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 10
  %.171 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 9
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge10 = phi i64 [ 0, %for.body.lr.ph ], [ %.193, %for.incr ]
  %.90 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.89, align 8
  %.91 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.90, i64 0, i32 5
  %.92 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.91, align 8
  %.93 = call %"Bucket<string, PropId>.580411"* %.92(%"Array<Bucket<string, PropId>>.580413"* %.76, i64 %storemerge10)
  %.94 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.93, i64 0, i32 1
  %4 = bitcast %string.580129** %.94 to i64*
  %.955 = load i64, i64* %4, align 8
  %parent_prop_name = alloca %string.580129*, align 8
  %5 = bitcast %string.580129** %parent_prop_name to i64*
  store i64 %.955, i64* %5, align 8
  %.100 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.89, align 8
  %.101 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.100, i64 0, i32 5
  %.102 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.101, align 8
  %.103 = call %"Bucket<string, PropId>.580411"* %.102(%"Array<Bucket<string, PropId>>.580413"* %.76, i64 %storemerge10)
  %.104 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.103, i64 0, i32 2
  %6 = bitcast %PropId.580339** %.104 to i64*
  %.1056 = load i64, i64* %6, align 8
  %parent_prop_id = alloca %PropId.580339*, align 8
  %7 = bitcast %PropId.580339** %parent_prop_id to i64*
  store i64 %.1056, i64* %7, align 8
  %.109 = load %Program.580445*, %Program.580445** %.64, align 8
  %.110.cast = inttoptr i64 %.1056 to %PropId.580339*
  %.111 = call %Type.580273* @get_class_prop_type(%Program.580445* %.109, %PropId.580339* %.110.cast)
  %.115 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.114, align 8
  %.116 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.115, i64 0, i32 0
  %.117 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.116, align 8
  %.118 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.117, i64 0, i32 3
  %.119 = load %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)** %.118, align 8
  %.120 = load %string.580129*, %string.580129** %parent_prop_name, align 8
  %.121 = call %PropId.580339* %.119(%"Map<string, PropId>.580407"* %.115, %string.580129* %.120)
  %child_prop_id = alloca %PropId.580339*, align 8
  store %PropId.580339* %.121, %PropId.580339** %child_prop_id, align 8
  %.125 = load %Program.580445*, %Program.580445** %.64, align 8
  %.126 = load %PropId.580339*, %PropId.580339** %parent_prop_id, align 8
  %.127 = call i64 @get_class_prop_visibility(%Program.580445* %.125, %PropId.580339* %.126)
  %.131 = load %Program.580445*, %Program.580445** %.64, align 8
  %.133 = call i1 @is_class_prop_static(%Program.580445* %.131, %PropId.580339* %.126)
  br i1 %.133, label %for.incr, label %for.body.endif

for.incr:                                         ; preds = %for.body.endif.endif, %for.body.endif.endif.if.endif.endif, %for.body.endif, %for.body
  %.193 = add nuw nsw i64 %storemerge10, 1
  %.84 = load i64, i64* %.83, align 8
  %.85 = icmp slt i64 %.193, %.84
  br i1 %.85, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.5.endif
  ret void

for.body.endif:                                   ; preds = %for.body
  %.139 = icmp eq i64 %.127, 0
  %.141 = getelementptr inbounds %Type.580273, %Type.580273* %.111, i64 0, i32 1
  %.142 = load i64, i64* %.141, align 8
  %.143 = icmp eq i64 %.142, 17
  %.144 = and i1 %.139, %.143
  br i1 %.144, label %for.incr, label %for.body.endif.endif

for.body.endif.endif:                             ; preds = %for.body.endif
  %8 = bitcast %PropId.580339** %child_prop_id to i64*
  %.1477 = load i64, i64* %8, align 8
  %.148 = trunc i64 %.1477 to i32
  %.150 = icmp eq i32 %.148, 0
  br i1 %.150, label %for.body.endif.endif.if, label %for.incr

for.body.endif.endif.if:                          ; preds = %for.body.endif.endif
  %.153 = getelementptr inbounds %PropId.580339, %PropId.580339* %.126, i64 0, i32 1
  %.154 = load i64, i64* %.153, align 8
  %.155 = icmp eq i64 %.154, 1
  br i1 %.155, label %for.body.endif.endif.if.if, label %for.body.endif.endif.if.endif

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %.159 = load i64, i64* %.158, align 8
  %.160 = add i64 %.159, 1
  store i64 %.160, i64* %.158, align 8
  br label %for.body.endif.endif.if.endif

for.body.endif.endif.if.endif:                    ; preds = %for.body.endif.endif.if.if, %for.body.endif.endif.if
  %.167 = load i64, i64* %.153, align 8
  %.168 = icmp eq i64 %.167, 0
  br i1 %.168, label %for.body.endif.endif.if.endif.if, label %for.body.endif.endif.if.endif.endif

for.body.endif.endif.if.endif.if:                 ; preds = %for.body.endif.endif.if.endif
  %.172 = load i64, i64* %.171, align 8
  %.173 = add i64 %.172, 1
  store i64 %.173, i64* %.171, align 8
  br label %for.body.endif.endif.if.endif.endif

for.body.endif.endif.if.endif.endif:              ; preds = %for.body.endif.endif.if.endif.if, %for.body.endif.endif.if.endif
  %.180 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.114, align 8
  %.181 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.180, i64 0, i32 0
  %.182 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.181, align 8
  %.183 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.182, i64 0, i32 2
  %.184 = load void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)*, void (%"Map<string, PropId>.580407"*, %string.580129*, %PropId.580339*)** %.183, align 8
  call void %.184(%"Map<string, PropId>.580407"* %.180, %string.580129* %.120, %PropId.580339* %.126)
  br label %for.incr
}

define void @TypeChecker_check_class_body(%TypeChecker.580449* %.1, %ClassDeclarationNode.580235* %.2) {
.4:
  %.8 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.2, i64 0, i32 1
  %.9 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.9, i64 0, i32 3
  %.11 = load %string.580129*, %string.580129** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.15, i64 0, i32 14
  %.17 = load %Type.580273* (%TypeChecker.580449*, %string.580129*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*)** %.16, align 8
  %.19 = call %Type.580273* %.17(%TypeChecker.580449* %.1, %string.580129* %.11)
  %.22 = getelementptr inbounds %Type.580273, %Type.580273* %.19, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 21
  br i1 %.24, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %for.body.1.endif, %.4.endif.endif.endif, %.4.endif.endif, %.4
  ret void

.4.endif:                                         ; preds = %.4
  %.29 = getelementptr inbounds %Type.580273, %Type.580273* %.19, i64 1
  %0 = bitcast %Type.580273* %.29 to %ClassId.580289**
  %.3056 = load %ClassId.580289*, %ClassId.580289** %0, align 8
  %.33 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.34 = load %Program.580445*, %Program.580445** %.33, align 8
  %.36 = call %Class.580403* @get_class(%Program.580445* %.34, %ClassId.580289* %.3056)
  %.40 = getelementptr inbounds %Class.580403, %Class.580403* %.36, i64 0, i32 1
  %1 = bitcast %ClassId.580289** %.40 to i64*
  %.417 = load i64, i64* %1, align 8
  %.42 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 3
  %2 = bitcast %ClassId.580289** %.42 to i64*
  store i64 %.417, i64* %2, align 8
  %.45 = getelementptr inbounds %Class.580403, %Class.580403* %.36, i64 0, i32 3
  %3 = bitcast %Type.580273** %.45 to i64*
  %.468 = load i64, i64* %3, align 8
  %.47 = trunc i64 %.468 to i32
  %.49.not = icmp eq i32 %.47, 0
  br i1 %.49.not, label %.4.endif.endif, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.53 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.54 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.53, i64 0, i32 32
  %.55 = load void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)** %.54, align 8
  call void %.55(%TypeChecker.580449* %.1, %Class.580403* %.36, %ClassDeclarationNode.580235* %.2)
  br label %.4.endif.endif

.4.endif.endif:                                   ; preds = %.4.endif, %.4.endif.if
  %.62 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.63 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.62, i64 0, i32 30
  %.64 = load void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)** %.63, align 8
  call void %.64(%TypeChecker.580449* %.1, %Class.580403* %.36, %ClassDeclarationNode.580235* %.2)
  %.70 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.70, i64 0, i32 17
  %.72 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.71, align 8
  %.73 = call i1 %.72(%TypeChecker.580449* %.1)
  br i1 %.73, label %.4.if, label %.4.endif.endif.endif

.4.endif.endif.endif:                             ; preds = %.4.endif.endif
  %.78 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.79 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.78, i64 0, i32 31
  %.80 = load void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)*, void (%TypeChecker.580449*, %Class.580403*, %ClassDeclarationNode.580235*)** %.79, align 8
  call void %.80(%TypeChecker.580449* %.1, %Class.580403* %.36, %ClassDeclarationNode.580235* %.2)
  %.86 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.87 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.86, i64 0, i32 17
  %.88 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.87, align 8
  %.89 = call i1 %.88(%TypeChecker.580449* %.1)
  br i1 %.89, label %.4.if, label %.4.endif.endif.endif.endif

.4.endif.endif.endif.endif:                       ; preds = %.4.endif.endif.endif
  %.93 = getelementptr inbounds %Class.580403, %Class.580403* %.36, i64 0, i32 7
  %.94 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.93, align 8
  %.95 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.94, i64 0, i32 0
  %.96 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.95, align 8
  %.97 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.96, i64 0, i32 4
  %.98 = load %"Array<Bucket<string, PropId>>.580413"* (%"Map<string, PropId>.580407"*)*, %"Array<Bucket<string, PropId>>.580413"* (%"Map<string, PropId>.580407"*)** %.97, align 8
  %.99 = call %"Array<Bucket<string, PropId>>.580413"* %.98(%"Map<string, PropId>.580407"* %.94)
  %.106 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.99, i64 0, i32 2
  %.10726 = load i64, i64* %.106, align 8
  %.10827 = icmp sgt i64 %.10726, 0
  br i1 %.10827, label %for.body.lr.ph, label %for.entry.1

for.body.lr.ph:                                   ; preds = %.4.endif.endif.endif.endif
  %.112 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.99, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge28 = phi i64 [ 0, %for.body.lr.ph ], [ %.194, %for.body.endif ]
  %.113 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.112, align 8
  %.114 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.113, i64 0, i32 5
  %.115 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.114, align 8
  %.116 = call %"Bucket<string, PropId>.580411"* %.115(%"Array<Bucket<string, PropId>>.580413"* %.99, i64 %storemerge28)
  %.117 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.116, i64 0, i32 2
  %4 = bitcast %PropId.580339** %.117 to i64*
  %.11816 = load i64, i64* %4, align 8
  %prop_id = alloca %PropId.580339*, align 8
  %5 = bitcast %PropId.580339** %prop_id to i64*
  store i64 %.11816, i64* %5, align 8
  %.123 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.112, align 8
  %.124 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.123, i64 0, i32 5
  %.125 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.124, align 8
  %.126 = call %"Bucket<string, PropId>.580411"* %.125(%"Array<Bucket<string, PropId>>.580413"* %.99, i64 %storemerge28)
  %.127 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.126, i64 0, i32 1
  %6 = bitcast %string.580129** %.127 to i64*
  %.12817 = load i64, i64* %6, align 8
  %prop_name = alloca %string.580129*, align 8
  %7 = bitcast %string.580129** %prop_name to i64*
  store i64 %.12817, i64* %7, align 8
  %.130 = load %PropId.580339*, %PropId.580339** %prop_id, align 8
  %.131 = getelementptr inbounds %PropId.580339, %PropId.580339* %.130, i64 0, i32 1
  %.132 = load i64, i64* %.131, align 8
  %.133 = icmp eq i64 %.132, 0
  br i1 %.133, label %for.body.if, label %for.body.endif

for.body.if:                                      ; preds = %for.body
  %.137 = load %Program.580445*, %Program.580445** %.33, align 8
  %.139 = call %ClassMethod.580401* @get_method(%Program.580445* %.137, %PropId.580339* %.130)
  %.142 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.139, i64 0, i32 8
  %.143 = load i1, i1* %.142, align 1
  br i1 %.143, label %for.body.if.if, label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if, %for.body
  %.194 = add nuw nsw i64 %storemerge28, 1
  %.107 = load i64, i64* %.106, align 8
  %.108 = icmp slt i64 %.194, %.107
  br i1 %.108, label %for.body, label %for.entry.1

for.body.if.if:                                   ; preds = %for.body.if
  %.146 = getelementptr inbounds %Class.580403, %Class.580403* %.36, i64 0, i32 4
  %8 = bitcast %PropId.580339** %.146 to i64*
  %.14718 = load i64, i64* %8, align 8
  %.148 = trunc i64 %.14718 to i32
  %.150.not = icmp eq i32 %.148, 0
  br i1 %.150.not, label %for.body.if.if.endif, label %for.body.if.if.if

for.body.if.if.if:                                ; preds = %for.body.if.if
  %.154 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.155 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.154, i64 0, i32 16
  %.156 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.155, align 8
  %.157 = load %string.580129*, %string.580129** %prop_name, align 8
  %.158 = getelementptr inbounds %string.580129, %string.580129* %.157, i64 0, i32 0
  %.159 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.158, align 8
  %.160 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.159, i64 0, i32 10
  %.161 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.160, align 8
  %.162 = call i8* %.161(%string.580129* %.157)
  %.164 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @str.297, i64 0, i64 0), i8* %.162)
  %.166 = call i8* @malloc(i64 %.164)
  %.167 = call i64 (i8*, i8*, ...) @sprintf(i8* %.166, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @str.297, i64 0, i64 0), i8* %.162)
  %.168 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.169 = bitcast i8* %.168 to %string.580129*
  %.170 = bitcast i8* %.168 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.170, align 8
  %.172 = getelementptr inbounds i8, i8* %.168, i64 8
  %9 = bitcast i8* %.172 to i8**
  store i8* %.166, i8** %9, align 8
  %.174 = getelementptr inbounds i8, i8* %.168, i64 16
  %10 = bitcast i8* %.174 to i64*
  store i64 %.164, i64* %10, align 8
  %.176 = getelementptr inbounds i8, i8* %.168, i64 24
  %11 = bitcast i8* %.176 to i64*
  store i64 %.164, i64* %11, align 8
  %.180 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.8, align 8
  %.181 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.180, i64 0, i32 2
  %.182 = load %FloRange.580135*, %FloRange.580135** %.181, align 8
  call void %.156(%TypeChecker.580449* %.1, i64 4, %string.580129* %.169, %FloRange.580135* %.182)
  ret void

for.body.if.if.endif:                             ; preds = %for.body.if.if
  %.186 = getelementptr inbounds %Class.580403, %Class.580403* %.36, i64 0, i32 11
  store i1 true, i1* %.186, align 1
  br label %for.entry.1

for.entry.1:                                      ; preds = %for.body.endif, %.4.endif.endif.endif.endif, %for.body.if.if.endif
  %.202 = getelementptr inbounds %Class.580403, %Class.580403* %.36, i64 0, i32 6
  %.20320 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.202, align 8
  %.20421 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.20320, i64 0, i32 2
  %.20522 = load i64, i64* %.20421, align 8
  %.20623 = icmp sgt i64 %.20522, 0
  br i1 %.20623, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.entry.1
  %.222 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 5
  %12 = bitcast %PropId.580339** %.222 to i64*
  %.226 = getelementptr inbounds %ClassDeclarationNode.580235, %ClassDeclarationNode.580235* %.2, i64 0, i32 5
  %.238 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 6
  %13 = bitcast %ScopeId.580361** %.238 to i64*
  br label %for.body.1

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.incr.1
  %.20325 = phi %"Array<ClassMethod>.580406"* [ %.20320, %for.body.1.lr.ph ], [ %.203, %for.incr.1 ]
  %storemerge924 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.333, %for.incr.1 ]
  %.212 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.20325, i64 0, i32 0
  %.213 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.212, align 8
  %.214 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.213, i64 0, i32 5
  %.215 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.214, align 8
  %.216 = call %ClassMethod.580401* %.215(%"Array<ClassMethod>.580406"* %.20325, i64 %storemerge924)
  %.220 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.216, i64 0, i32 1
  %14 = bitcast %PropId.580339** %.220 to i64*
  %.22110 = load i64, i64* %14, align 8
  store i64 %.22110, i64* %12, align 8
  %.227 = load %"Array<MethodNode>.580239"*, %"Array<MethodNode>.580239"** %.226, align 8
  %.228 = getelementptr inbounds %"Array<MethodNode>.580239", %"Array<MethodNode>.580239"* %.227, i64 0, i32 0
  %.229 = load %"Array<MethodNode>_vtable_ty.580242"*, %"Array<MethodNode>_vtable_ty.580242"** %.228, align 8
  %.230 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.580242", %"Array<MethodNode>_vtable_ty.580242"* %.229, i64 0, i32 5
  %.231 = load %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)*, %MethodNode.580229* (%"Array<MethodNode>.580239"*, i64)** %.230, align 8
  %.232 = call %MethodNode.580229* %.231(%"Array<MethodNode>.580239"* %.227, i64 %storemerge924)
  %.236 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.216, i64 0, i32 9
  %15 = bitcast %ScopeId.580361** %.236 to i64*
  %.23711 = load i64, i64* %15, align 8
  store i64 %.23711, i64* %13, align 8
  %.241 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.216, i64 0, i32 8
  %.242 = load i1, i1* %.241, align 1
  br i1 %.242, label %for.incr.1, label %for.body.1.endif

for.incr.1:                                       ; preds = %for.body.1, %for.body.1.endif.endif.endif
  %.333 = add nuw nsw i64 %storemerge924, 1
  %.203 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.202, align 8
  %.204 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.203, i64 0, i32 2
  %.205 = load i64, i64* %.204, align 8
  %.206 = icmp slt i64 %.333, %.205
  br i1 %.206, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.incr.1, %for.entry.1
  store %ClassId.580289* null, %ClassId.580289** %.42, align 8
  ret void

for.body.1.endif:                                 ; preds = %for.body.1
  %.248 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.249 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.248, i64 0, i32 71
  %.250 = load %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)*, %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)** %.249, align 8
  %.252 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.232, i64 0, i32 3
  %.253 = load %BlockNode.580173*, %BlockNode.580173** %.252, align 8
  %.254 = call %Block.580345* %.250(%TypeChecker.580449* %.1, %BlockNode.580173* %.253)
  %.255 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.216, i64 0, i32 6
  store %Block.580345* %.254, %Block.580345** %.255, align 8
  %.259 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.260 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.259, i64 0, i32 17
  %.261 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.260, align 8
  %.262 = call i1 %.261(%TypeChecker.580449* %.1)
  br i1 %.262, label %.4.if, label %for.body.1.endif.endif

for.body.1.endif.endif:                           ; preds = %for.body.1.endif
  %.267 = load %Block.580345*, %Block.580345** %.255, align 8
  %.268 = getelementptr inbounds %Block.580345, %Block.580345* %.267, i64 0, i32 2
  %.269 = load i1, i1* %.268, align 1
  br i1 %.269, label %for.body.1.endif.endif.endif, label %for.body.1.endif.endif.if

for.body.1.endif.endif.if:                        ; preds = %for.body.1.endif.endif
  %.273 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.216, i64 0, i32 5
  %.274 = load %FunctionType.580279*, %FunctionType.580279** %.273, align 8
  %.275 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.274, i64 0, i32 3
  %.276 = load %Type.580273*, %Type.580273** %.275, align 8
  %.277 = getelementptr inbounds %Type.580273, %Type.580273* %.276, i64 0, i32 1
  %.278 = load i64, i64* %.277, align 8
  %.279 = icmp eq i64 %.278, 12
  br i1 %.279, label %for.body.1.endif.endif.if.if, label %for.body.1.endif.endif.if.else

for.body.1.endif.endif.endif:                     ; preds = %for.body.1.endif.endif, %for.body.1.endif.endif.if.if
  store %PropId.580339* null, %PropId.580339** %.222, align 8
  %.320 = load %Program.580445*, %Program.580445** %.33, align 8
  %.323 = load %ScopeId.580361*, %ScopeId.580361** %.236, align 8
  %.324 = call %Scope.580363* @get_scope(%Program.580445* %.320, %ScopeId.580361* %.323)
  %.325 = getelementptr inbounds %Scope.580363, %Scope.580363* %.324, i64 0, i32 6
  %16 = bitcast %ScopeId.580361** %.325 to i64*
  %.32612 = load i64, i64* %16, align 8
  store i64 %.32612, i64* %13, align 8
  br label %for.incr.1

for.body.1.endif.endif.if.if:                     ; preds = %for.body.1.endif.endif.if
  %.284 = getelementptr inbounds %Block.580345, %Block.580345* %.267, i64 0, i32 1
  %.285 = load %"Array<Statement>.580347"*, %"Array<Statement>.580347"** %.284, align 8
  %.286 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.287 = bitcast i8* %.286 to %ReturnStatement.580359*
  %.288 = bitcast i8* %.286 to %ReturnStatement_vtable_ty.580360**
  store %ReturnStatement_vtable_ty.580360* @ReturnStatement_vtable_data, %ReturnStatement_vtable_ty.580360** %.288, align 8
  call void @ReturnStatement_constructor(%ReturnStatement.580359* %.287)
  %.291 = bitcast i8* %.286 to %Statement.580285*
  %.292 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.285, i64 0, i32 0
  %.293 = load %"Array<Statement>_vtable_ty.580348"*, %"Array<Statement>_vtable_ty.580348"** %.292, align 8
  %.294 = getelementptr inbounds %"Array<Statement>_vtable_ty.580348", %"Array<Statement>_vtable_ty.580348"* %.293, i64 0, i32 2
  %.295 = load void (%"Array<Statement>.580347"*, %Statement.580285*)*, void (%"Array<Statement>.580347"*, %Statement.580285*)** %.294, align 8
  call void %.295(%"Array<Statement>.580347"* %.285, %Statement.580285* %.291)
  br label %for.body.1.endif.endif.endif

for.body.1.endif.endif.if.else:                   ; preds = %for.body.1.endif.endif.if
  %.300 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.301 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.300, i64 0, i32 16
  %.302 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.301, align 8
  %.303 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.304 = bitcast i8* %.303 to %string.580129*
  %.304.repack = bitcast i8* %.303 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.304.repack, align 8
  %.304.repack13 = getelementptr inbounds i8, i8* %.303, i64 8
  %17 = bitcast i8* %.304.repack13 to i8**
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.298, i64 0, i64 0), i8** %17, align 8
  %.304.repack14 = getelementptr inbounds i8, i8* %.303, i64 16
  %18 = bitcast i8* %.304.repack14 to i64*
  store i64 38, i64* %18, align 8
  %.304.repack15 = getelementptr inbounds i8, i8* %.303, i64 24
  %19 = bitcast i8* %.304.repack15 to i64*
  store i64 38, i64* %19, align 8
  %.307 = getelementptr inbounds %MethodNode.580229, %MethodNode.580229* %.232, i64 0, i32 5
  %.308 = load %TypeNode.580161*, %TypeNode.580161** %.307, align 8
  %.309 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %.308, i64 0, i32 1
  %.310 = load %FloRange.580135*, %FloRange.580135** %.309, align 8
  call void %.302(%TypeChecker.580449* %.1, i64 4, %string.580129* %.304, %FloRange.580135* %.310)
  ret void
}

define void @TypeChecker_check_function_body(%TypeChecker.580449* %.1, %Function.580391* nocapture %.2, %FunctionDeclarationNode.580225* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 7
  %.11 = load i1, i1* %.10, align 1
  br i1 %.11, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif, %.5
  ret void

.5.endif:                                         ; preds = %.5
  %.16 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 1
  %0 = bitcast %VarId.580331** %.16 to i64*
  %.171 = load i64, i64* %0, align 8
  %.18 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 4
  %1 = bitcast %VarId.580331** %.18 to i64*
  store i64 %.171, i64* %1, align 8
  %.22 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 6
  %2 = bitcast %ScopeId.580361** %.22 to i64*
  %.232 = load i64, i64* %2, align 8
  %.24 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 6
  %3 = bitcast %ScopeId.580361** %.24 to i64*
  store i64 %.232, i64* %3, align 8
  %.28 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.29 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.28, align 8
  %.30 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.29, i64 0, i32 71
  %.31 = load %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)*, %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)** %.30, align 8
  %.33 = getelementptr inbounds %FunctionDeclarationNode.580225, %FunctionDeclarationNode.580225* %.3, i64 0, i32 3
  %.34 = load %BlockNode.580173*, %BlockNode.580173** %.33, align 8
  %.35 = call %Block.580345* %.31(%TypeChecker.580449* %.1, %BlockNode.580173* %.34)
  %.36 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 4
  store %Block.580345* %.35, %Block.580345** %.36, align 8
  %.40 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.28, align 8
  %.41 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.40, i64 0, i32 17
  %.42 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.41, align 8
  %.43 = call i1 %.42(%TypeChecker.580449* %.1)
  br i1 %.43, label %.5.if, label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif
  %.48 = load %Block.580345*, %Block.580345** %.36, align 8
  %.49 = getelementptr inbounds %Block.580345, %Block.580345* %.48, i64 0, i32 2
  %.50 = load i1, i1* %.49, align 1
  br i1 %.50, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.54 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 5
  %.55 = load %FunctionType.580279*, %FunctionType.580279** %.54, align 8
  %.56 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.55, i64 0, i32 3
  %.57 = load %Type.580273*, %Type.580273** %.56, align 8
  %.58 = getelementptr inbounds %Type.580273, %Type.580273* %.57, i64 0, i32 1
  %.59 = load i64, i64* %.58, align 8
  %.60 = icmp eq i64 %.59, 12
  br i1 %.60, label %.5.endif.endif.if.if, label %.5.endif.endif.if.else

.5.endif.endif.endif:                             ; preds = %.5.endif.endif, %.5.endif.endif.if.if
  store %VarId.580331* null, %VarId.580331** %.18, align 8
  %.100 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.101 = load %Program.580445*, %Program.580445** %.100, align 8
  %.104 = load %ScopeId.580361*, %ScopeId.580361** %.22, align 8
  %.105 = call %Scope.580363* @get_scope(%Program.580445* %.101, %ScopeId.580361* %.104)
  %.106 = getelementptr inbounds %Scope.580363, %Scope.580363* %.105, i64 0, i32 6
  %4 = bitcast %ScopeId.580361** %.106 to i64*
  %.1073 = load i64, i64* %4, align 8
  store i64 %.1073, i64* %3, align 8
  ret void

.5.endif.endif.if.if:                             ; preds = %.5.endif.endif.if
  %.65 = getelementptr inbounds %Block.580345, %Block.580345* %.48, i64 0, i32 1
  %.66 = load %"Array<Statement>.580347"*, %"Array<Statement>.580347"** %.65, align 8
  %.67 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.68 = bitcast i8* %.67 to %ReturnStatement.580359*
  %.69 = bitcast i8* %.67 to %ReturnStatement_vtable_ty.580360**
  store %ReturnStatement_vtable_ty.580360* @ReturnStatement_vtable_data, %ReturnStatement_vtable_ty.580360** %.69, align 8
  call void @ReturnStatement_constructor(%ReturnStatement.580359* %.68)
  %.72 = bitcast i8* %.67 to %Statement.580285*
  %.73 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.66, i64 0, i32 0
  %.74 = load %"Array<Statement>_vtable_ty.580348"*, %"Array<Statement>_vtable_ty.580348"** %.73, align 8
  %.75 = getelementptr inbounds %"Array<Statement>_vtable_ty.580348", %"Array<Statement>_vtable_ty.580348"* %.74, i64 0, i32 2
  %.76 = load void (%"Array<Statement>.580347"*, %Statement.580285*)*, void (%"Array<Statement>.580347"*, %Statement.580285*)** %.75, align 8
  call void %.76(%"Array<Statement>.580347"* %.66, %Statement.580285* %.72)
  br label %.5.endif.endif.endif

.5.endif.endif.if.else:                           ; preds = %.5.endif.endif.if
  %.81 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.28, align 8
  %.82 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.81, i64 0, i32 16
  %.83 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.82, align 8
  %.84 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.85 = bitcast i8* %.84 to %string.580129*
  %.85.repack = bitcast i8* %.84 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.85.repack, align 8
  %.85.repack4 = getelementptr inbounds i8, i8* %.84, i64 8
  %5 = bitcast i8* %.85.repack4 to i8**
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.299, i64 0, i64 0), i8** %5, align 8
  %.85.repack5 = getelementptr inbounds i8, i8* %.84, i64 16
  %6 = bitcast i8* %.85.repack5 to i64*
  store i64 40, i64* %6, align 8
  %.85.repack6 = getelementptr inbounds i8, i8* %.84, i64 24
  %7 = bitcast i8* %.85.repack6 to i64*
  store i64 40, i64* %7, align 8
  %.88 = getelementptr inbounds %FunctionDeclarationNode.580225, %FunctionDeclarationNode.580225* %.3, i64 0, i32 4
  %.89 = load %TypeNode.580161*, %TypeNode.580161** %.88, align 8
  %.90 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %.89, i64 0, i32 1
  %.91 = load %FloRange.580135*, %FloRange.580135** %.90, align 8
  call void %.83(%TypeChecker.580449* %.1, i64 4, %string.580129* %.85, %FloRange.580135* %.91)
  ret void
}

define %Type.580273* @TypeChecker_check_type(%TypeChecker.580449* %.1, %TypeNode.580161* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %.2, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp eq i64 %.9, 0
  br i1 %.10, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.12 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.13 = bitcast i8* %.12 to %Type.580273*
  %.14 = bitcast i8* %.12 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.14, align 8
  call void @Type_constructor(%Type.580273* %.13, i64 0)
  ret %Type.580273* %.13

.4.endif:                                         ; preds = %.4
  %.20.off = add i64 %.9, -1
  %0 = icmp ult i64 %.20.off, 11
  br i1 %0, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %.4.endif
  %.31 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.32 = bitcast i8* %.31 to %Type.580273*
  %.33 = bitcast i8* %.31 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.33, align 8
  call void @Type_constructor(%Type.580273* %.32, i64 %.9)
  ret %Type.580273* %.32

.4.endif.endif:                                   ; preds = %.4.endif
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif.endif.endif [
    i64 12, label %.4.endif.endif.if
    i64 15, label %.4.endif.endif.endif.if
    i64 16, label %.4.endif.endif.endif.endif.if
    i64 17, label %.4.endif.endif.endif.endif.endif.if
    i64 18, label %.4.endif.endif.endif.endif.endif.endif.if
  ]

.4.endif.endif.if:                                ; preds = %.4.endif.endif
  %.42 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.43 = bitcast i8* %.42 to %Type.580273*
  %.44 = bitcast i8* %.42 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.44, align 8
  call void @Type_constructor(%Type.580273* %.43, i64 12)
  ret %Type.580273* %.43

.4.endif.endif.endif.if:                          ; preds = %.4.endif.endif
  %.54 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.55 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.54, align 8
  %.56 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.55, i64 0, i32 35
  %.57 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.56, align 8
  %.60 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %.2, i64 1
  %1 = bitcast %TypeNode.580161* %.60 to %TypeNode.580161**
  %.61 = load %TypeNode.580161*, %TypeNode.580161** %1, align 8
  %.62 = call %Type.580273* %.57(%TypeChecker.580449* %.1, %TypeNode.580161* %.61)
  %.63 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.64 = bitcast i8* %.63 to %PointerType.580277*
  %.65 = bitcast i8* %.63 to %PointerType_vtable_ty.580278**
  store %PointerType_vtable_ty.580278* @PointerType_vtable_data, %PointerType_vtable_ty.580278** %.65, align 8
  call void @PointerType_constructor(%PointerType.580277* %.64, %Type.580273* %.62)
  %.68 = bitcast i8* %.63 to %Type.580273*
  ret %Type.580273* %.68

.4.endif.endif.endif.endif.if:                    ; preds = %.4.endif.endif
  %array_node = alloca %ArrayTypeNode.580179*, align 8
  %2 = bitcast %ArrayTypeNode.580179** %array_node to %TypeNode.580161**
  store %TypeNode.580161* %.2, %TypeNode.580161** %2, align 8
  %.79 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.80 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.79, align 8
  %.81 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.80, i64 0, i32 60
  %.82 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.81, align 8
  %.83 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.84 = bitcast i8* %.83 to %Type.580273*
  %.85 = bitcast i8* %.83 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.85, align 8
  call void @Type_constructor(%Type.580273* %.84, i64 7)
  %.88 = load %ArrayTypeNode.580179*, %ArrayTypeNode.580179** %array_node, align 8
  %.89 = getelementptr inbounds %ArrayTypeNode.580179, %ArrayTypeNode.580179* %.88, i64 0, i32 4
  %.90 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.89, align 8
  %.91 = call %Expression.580293* %.82(%TypeChecker.580449* %.1, %Type.580273* %.84, %ExpressionNode.580177* %.90)
  %.94 = getelementptr inbounds %Expression.580293, %Expression.580293* %.91, i64 0, i32 4
  %.95 = load %Type.580273*, %Type.580273** %.94, align 8
  %.96 = call i1 @is_int(%Type.580273* %.95)
  br i1 %.96, label %.4.endif.endif.endif.endif.if.endif, label %.4.endif.endif.endif.endif.if.if

.4.endif.endif.endif.endif.if.if:                 ; preds = %.4.endif.endif.endif.endif.if
  %.101 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.79, align 8
  %.102 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.101, i64 0, i32 16
  %.103 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.102, align 8
  %.104 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.105 = bitcast i8* %.104 to %string.580129*
  %.105.repack = bitcast i8* %.104 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.105.repack, align 8
  %.105.repack10 = getelementptr inbounds i8, i8* %.104, i64 8
  %3 = bitcast i8* %.105.repack10 to i8**
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.300, i64 0, i64 0), i8** %3, align 8
  %.105.repack11 = getelementptr inbounds i8, i8* %.104, i64 16
  %4 = bitcast i8* %.105.repack11 to i64*
  store i64 16, i64* %4, align 8
  %.105.repack12 = getelementptr inbounds i8, i8* %.104, i64 24
  %5 = bitcast i8* %.105.repack12 to i64*
  store i64 16, i64* %5, align 8
  %.109 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.89, align 8
  %.110 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.109, i64 0, i32 1
  %.111 = load %FloRange.580135*, %FloRange.580135** %.110, align 8
  call void %.103(%TypeChecker.580449* %.1, i64 4, %string.580129* %.105, %FloRange.580135* %.111)
  ret %Type.580273* null

.4.endif.endif.endif.endif.if.endif:              ; preds = %.4.endif.endif.endif.endif.if
  %.115 = getelementptr inbounds %Expression.580293, %Expression.580293* %.91, i64 0, i32 2
  %.116 = load i1, i1* %.115, align 1
  br i1 %.116, label %.4.endif.endif.endif.endif.if.endif.endif, label %.4.endif.endif.endif.endif.if.endif.if

.4.endif.endif.endif.endif.if.endif.if:           ; preds = %.4.endif.endif.endif.endif.if.endif
  %.121 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.79, align 8
  %.122 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.121, i64 0, i32 16
  %.123 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.122, align 8
  %.124 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.125 = bitcast i8* %.124 to %string.580129*
  %.125.repack = bitcast i8* %.124 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.125.repack, align 8
  %.125.repack7 = getelementptr inbounds i8, i8* %.124, i64 8
  %6 = bitcast i8* %.125.repack7 to i8**
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @str.301, i64 0, i64 0), i8** %6, align 8
  %.125.repack8 = getelementptr inbounds i8, i8* %.124, i64 16
  %7 = bitcast i8* %.125.repack8 to i64*
  store i64 30, i64* %7, align 8
  %.125.repack9 = getelementptr inbounds i8, i8* %.124, i64 24
  %8 = bitcast i8* %.125.repack9 to i64*
  store i64 30, i64* %8, align 8
  %.129 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.89, align 8
  %.130 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.129, i64 0, i32 1
  %.131 = load %FloRange.580135*, %FloRange.580135** %.130, align 8
  call void %.123(%TypeChecker.580449* %.1, i64 4, %string.580129* %.125, %FloRange.580135* %.131)
  ret %Type.580273* null

.4.endif.endif.endif.endif.if.endif.endif:        ; preds = %.4.endif.endif.endif.endif.if.endif
  %.135 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.136 = load %Program.580445*, %Program.580445** %.135, align 8
  %.138 = call i64 @evaluate_const_int_expression(%Program.580445* %.136, %Expression.580293* %.91)
  %.141 = icmp slt i64 %.138, 0
  %.145 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.79, align 8
  br i1 %.141, label %.4.endif.endif.endif.endif.if.endif.endif.if, label %.4.endif.endif.endif.endif.if.endif.endif.endif

.4.endif.endif.endif.endif.if.endif.endif.if:     ; preds = %.4.endif.endif.endif.endif.if.endif.endif
  %.146 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.145, i64 0, i32 16
  %.147 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.146, align 8
  %.148 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.149 = bitcast i8* %.148 to %string.580129*
  %.149.repack = bitcast i8* %.148 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.149.repack, align 8
  %.149.repack4 = getelementptr inbounds i8, i8* %.148, i64 8
  %9 = bitcast i8* %.149.repack4 to i8**
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.302, i64 0, i64 0), i8** %9, align 8
  %.149.repack5 = getelementptr inbounds i8, i8* %.148, i64 16
  %10 = bitcast i8* %.149.repack5 to i64*
  store i64 31, i64* %10, align 8
  %.149.repack6 = getelementptr inbounds i8, i8* %.148, i64 24
  %11 = bitcast i8* %.149.repack6 to i64*
  store i64 31, i64* %11, align 8
  %.153 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.89, align 8
  %.154 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.153, i64 0, i32 1
  %.155 = load %FloRange.580135*, %FloRange.580135** %.154, align 8
  call void %.147(%TypeChecker.580449* %.1, i64 4, %string.580129* %.149, %FloRange.580135* %.155)
  ret %Type.580273* null

.4.endif.endif.endif.endif.if.endif.endif.endif:  ; preds = %.4.endif.endif.endif.endif.if.endif.endif
  %.161 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.145, i64 0, i32 35
  %.162 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.161, align 8
  %.164 = getelementptr inbounds %ArrayTypeNode.580179, %ArrayTypeNode.580179* %.88, i64 0, i32 3
  %.165 = load %TypeNode.580161*, %TypeNode.580161** %.164, align 8
  %.166 = call %Type.580273* %.162(%TypeChecker.580449* %.1, %TypeNode.580161* %.165)
  %.170 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.171 = bitcast i8* %.170 to %ArrayType.580295*
  %.172 = bitcast i8* %.170 to %ArrayType_vtable_ty.580296**
  store %ArrayType_vtable_ty.580296* @ArrayType_vtable_data, %ArrayType_vtable_ty.580296** %.172, align 8
  call void @ArrayType_constructor(%ArrayType.580295* %.171, %Type.580273* %.166, i64 %.138)
  %.175 = bitcast i8* %.170 to %Type.580273*
  ret %Type.580273* %.175

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4.endif.endif
  %fnc_node = alloca %FunctionTypeNode.580167*, align 8
  %12 = bitcast %FunctionTypeNode.580167** %fnc_node to %TypeNode.580161**
  store %TypeNode.580161* %.2, %TypeNode.580161** %12, align 8
  %.186 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.188 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.190 = bitcast i8* %.188 to %"Array<Type>_vtable_ty.580282"**
  store %"Array<Type>_vtable_ty.580282"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.580282"** %.190, align 8
  %.192 = getelementptr inbounds i8, i8* %.188, i64 8
  %13 = bitcast i8* %.192 to i8**
  store i8* %.186, i8** %13, align 8
  %.194 = getelementptr inbounds i8, i8* %.188, i64 16
  %14 = bitcast i8* %.194 to i64*
  store i64 0, i64* %14, align 8
  %.196 = getelementptr inbounds i8, i8* %.188, i64 24
  %15 = bitcast i8* %.196 to i64*
  store i64 8, i64* %15, align 8
  %arg_types = alloca %"Array<Type>.580281"*, align 8
  %16 = bitcast %"Array<Type>.580281"** %arg_types to i8**
  store i8* %.188, i8** %16, align 8
  %.20313 = load %FunctionTypeNode.580167*, %FunctionTypeNode.580167** %fnc_node, align 8
  %.20414 = getelementptr inbounds %FunctionTypeNode.580167, %FunctionTypeNode.580167* %.20313, i64 0, i32 3
  %.20515 = load %"Array<TypeNode>.580165"*, %"Array<TypeNode>.580165"** %.20414, align 8
  %.20616 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.20515, i64 0, i32 2
  %.20717 = load i64, i64* %.20616, align 8
  %.20818 = icmp sgt i64 %.20717, 0
  br i1 %.20818, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4.endif.endif.endif.endif.endif.if
  %.210 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %arg_types, align 8
  %.212 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.226 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.210, i64 0, i32 0
  %.203 = load %FunctionTypeNode.580167*, %FunctionTypeNode.580167** %fnc_node, align 8
  %.204 = getelementptr inbounds %FunctionTypeNode.580167, %FunctionTypeNode.580167* %.203, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.20520 = phi %"Array<TypeNode>.580165"* [ %.20515, %for.body.lr.ph ], [ %.205, %for.body ]
  %storemerge319 = phi i64 [ 0, %for.body.lr.ph ], [ %.235, %for.body ]
  %.213 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.212, align 8
  %.214 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.213, i64 0, i32 35
  %.215 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.214, align 8
  %.220 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.20520, i64 0, i32 0
  %.221 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.220, align 8
  %.222 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.221, i64 0, i32 5
  %.223 = load %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)*, %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)** %.222, align 8
  %.224 = call %TypeNode.580161* %.223(%"Array<TypeNode>.580165"* %.20520, i64 %storemerge319)
  %.225 = call %Type.580273* %.215(%TypeChecker.580449* %.1, %TypeNode.580161* %.224)
  %.227 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.226, align 8
  %.228 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.227, i64 0, i32 2
  %.229 = load void (%"Array<Type>.580281"*, %Type.580273*)*, void (%"Array<Type>.580281"*, %Type.580273*)** %.228, align 8
  call void %.229(%"Array<Type>.580281"* %.210, %Type.580273* %.225)
  %.235 = add nuw nsw i64 %storemerge319, 1
  %.205 = load %"Array<TypeNode>.580165"*, %"Array<TypeNode>.580165"** %.204, align 8
  %.206 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.205, i64 0, i32 2
  %.207 = load i64, i64* %.206, align 8
  %.208 = icmp slt i64 %.235, %.207
  br i1 %.208, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.4.endif.endif.endif.endif.endif.if
  %.203.lcssa = phi %FunctionTypeNode.580167* [ %.20313, %.4.endif.endif.endif.endif.endif.if ], [ %.203, %for.body ]
  %.239 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.240 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.239, align 8
  %.241 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.240, i64 0, i32 35
  %.242 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.241, align 8
  %.244 = getelementptr inbounds %FunctionTypeNode.580167, %FunctionTypeNode.580167* %.203.lcssa, i64 0, i32 4
  %.245 = load %TypeNode.580161*, %TypeNode.580161** %.244, align 8
  %.246 = call %Type.580273* %.242(%TypeChecker.580449* %.1, %TypeNode.580161* %.245)
  %.248 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %arg_types, align 8
  %.250 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.251 = bitcast i8* %.250 to %FunctionType.580279*
  %.252 = bitcast i8* %.250 to %FunctionType_vtable_ty.580280**
  store %FunctionType_vtable_ty.580280* @FunctionType_vtable_data, %FunctionType_vtable_ty.580280** %.252, align 8
  call void @FunctionType_constructor(%FunctionType.580279* %.251, %"Array<Type>.580281"* %.248, %Type.580273* %.246)
  %.255 = bitcast i8* %.250 to %Type.580273*
  ret %Type.580273* %.255

.4.endif.endif.endif.endif.endif.endif.if:        ; preds = %.4.endif.endif
  %record_type = alloca %RecordTypeNode.580163*, align 8
  %17 = bitcast %RecordTypeNode.580163** %record_type to %TypeNode.580161**
  store %TypeNode.580161* %.2, %TypeNode.580161** %17, align 8
  %.266 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.268 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.270 = bitcast i8* %.268 to %"Array<Type>_vtable_ty.580282"**
  store %"Array<Type>_vtable_ty.580282"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.580282"** %.270, align 8
  %.272 = getelementptr inbounds i8, i8* %.268, i64 8
  %18 = bitcast i8* %.272 to i8**
  store i8* %.266, i8** %18, align 8
  %.274 = getelementptr inbounds i8, i8* %.268, i64 16
  %19 = bitcast i8* %.274 to i64*
  store i64 0, i64* %19, align 8
  %.276 = getelementptr inbounds i8, i8* %.268, i64 24
  %20 = bitcast i8* %.276 to i64*
  store i64 8, i64* %20, align 8
  %types = alloca %"Array<Type>.580281"*, align 8
  %21 = bitcast %"Array<Type>.580281"** %types to i8**
  store i8* %.268, i8** %21, align 8
  %.279 = load %RecordTypeNode.580163*, %RecordTypeNode.580163** %record_type, align 8
  %.280 = getelementptr inbounds %RecordTypeNode.580163, %RecordTypeNode.580163* %.279, i64 0, i32 3
  %22 = bitcast %IdentifierToken.580155** %.280 to i64*
  %.2811 = load i64, i64* %22, align 8
  %identifer_tok = alloca %IdentifierToken.580155*, align 8
  %23 = bitcast %IdentifierToken.580155** %identifer_tok to i64*
  store i64 %.2811, i64* %23, align 8
  %.284 = getelementptr inbounds %RecordTypeNode.580163, %RecordTypeNode.580163* %.279, i64 0, i32 4
  %.285 = load %"Array<TypeNode>.580165"*, %"Array<TypeNode>.580165"** %.284, align 8
  %.286 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.285, i64 0, i32 2
  %.287 = load i64, i64* %.286, align 8
  %.288 = icmp sgt i64 %.287, 0
  br i1 %.288, label %for.cond.1.preheader, label %.4.endif.endif.endif.endif.endif.endif.if.endif

for.cond.1.preheader:                             ; preds = %.4.endif.endif.endif.endif.endif.endif.if
  %.29621 = load %"Array<TypeNode>.580165"*, %"Array<TypeNode>.580165"** %.284, align 8
  %.29722 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.29621, i64 0, i32 2
  %.29823 = load i64, i64* %.29722, align 8
  %.29924 = icmp sgt i64 %.29823, 0
  br i1 %.29924, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.301 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %types, align 8
  %.303 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.317 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.301, i64 0, i32 0
  br label %for.body.1

.4.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.4.endif.endif
  %.427 = call %Type.580273* @Type_unknown()
  ret %Type.580273* %.427

.4.endif.endif.endif.endif.endif.endif.if.endif:  ; preds = %for.end.1.endif, %.4.endif.endif.endif.endif.endif.endif.if
  %.378 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.379 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.378, align 8
  %.380 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.379, i64 0, i32 14
  %.381 = load %Type.580273* (%TypeChecker.580449*, %string.580129*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*)** %.380, align 8
  %.382 = load %IdentifierToken.580155*, %IdentifierToken.580155** %identifer_tok, align 8
  %.383 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.382, i64 0, i32 3
  %.384 = load %string.580129*, %string.580129** %.383, align 8
  %.385 = call %Type.580273* %.381(%TypeChecker.580449* %.1, %string.580129* %.384)
  %.388 = getelementptr inbounds %Type.580273, %Type.580273* %.385, i64 0, i32 1
  %.389 = load i64, i64* %.388, align 8
  %.390 = icmp eq i64 %.389, 21
  br i1 %.390, label %.4.endif.endif.endif.endif.endif.endif.if.endif.if, label %for.end.1.if

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.29626 = phi %"Array<TypeNode>.580165"* [ %.29621, %for.body.1.lr.ph ], [ %.296, %for.body.1 ]
  %storemerge25 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.326, %for.body.1 ]
  %.304 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.303, align 8
  %.305 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.304, i64 0, i32 35
  %.306 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.305, align 8
  %.311 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.29626, i64 0, i32 0
  %.312 = load %"Array<TypeNode>_vtable_ty.580166"*, %"Array<TypeNode>_vtable_ty.580166"** %.311, align 8
  %.313 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.580166", %"Array<TypeNode>_vtable_ty.580166"* %.312, i64 0, i32 5
  %.314 = load %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)*, %TypeNode.580161* (%"Array<TypeNode>.580165"*, i64)** %.313, align 8
  %.315 = call %TypeNode.580161* %.314(%"Array<TypeNode>.580165"* %.29626, i64 %storemerge25)
  %.316 = call %Type.580273* %.306(%TypeChecker.580449* %.1, %TypeNode.580161* %.315)
  %.318 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.317, align 8
  %.319 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.318, i64 0, i32 2
  %.320 = load void (%"Array<Type>.580281"*, %Type.580273*)*, void (%"Array<Type>.580281"*, %Type.580273*)** %.319, align 8
  call void %.320(%"Array<Type>.580281"* %.301, %Type.580273* %.316)
  %.326 = add nuw nsw i64 %storemerge25, 1
  %.296 = load %"Array<TypeNode>.580165"*, %"Array<TypeNode>.580165"** %.284, align 8
  %.297 = getelementptr inbounds %"Array<TypeNode>.580165", %"Array<TypeNode>.580165"* %.296, i64 0, i32 2
  %.298 = load i64, i64* %.297, align 8
  %.299 = icmp slt i64 %.326, %.298
  br i1 %.299, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  %.330 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.331 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.330, align 8
  %.332 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.331, i64 0, i32 17
  %.333 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.332, align 8
  %.334 = call i1 %.333(%TypeChecker.580449* %.1)
  br i1 %.334, label %for.end.1.if, label %for.end.1.endif

for.end.1.if:                                     ; preds = %.4.endif.endif.endif.endif.endif.endif.if.endif, %for.end.1.endif.if, %for.end.1.endif.if.if, %for.end.1
  %merge = phi %Type.580273* [ null, %for.end.1 ], [ %.346, %for.end.1.endif.if.if ], [ %.346, %for.end.1.endif.if ], [ %.385, %.4.endif.endif.endif.endif.endif.endif.if.endif ]
  ret %Type.580273* %merge

for.end.1.endif:                                  ; preds = %for.end.1
  %.339 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.330, align 8
  %.340 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.339, i64 0, i32 19
  %.341 = load %Type.580273* (%TypeChecker.580449*, %string.580129*, %"Array<Type>.580281"*)*, %Type.580273* (%TypeChecker.580449*, %string.580129*, %"Array<Type>.580281"*)** %.340, align 8
  %.342 = load %IdentifierToken.580155*, %IdentifierToken.580155** %identifer_tok, align 8
  %.343 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.342, i64 0, i32 3
  %.344 = load %string.580129*, %string.580129** %.343, align 8
  %.345 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %types, align 8
  %.346 = call %Type.580273* %.341(%TypeChecker.580449* %.1, %string.580129* %.344, %"Array<Type>.580281"* %.345)
  %24 = ptrtoint %Type.580273* %.346 to i64
  %.349 = trunc i64 %24 to i32
  %.351.not = icmp eq i32 %.349, 0
  br i1 %.351.not, label %.4.endif.endif.endif.endif.endif.endif.if.endif, label %for.end.1.endif.if

for.end.1.endif.if:                               ; preds = %for.end.1.endif
  %.355 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.330, align 8
  %.356 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.355, i64 0, i32 17
  %.357 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.356, align 8
  %.358 = call i1 %.357(%TypeChecker.580449* %.1)
  br i1 %.358, label %for.end.1.endif.if.if, label %for.end.1.if

for.end.1.endif.if.if:                            ; preds = %for.end.1.endif.if
  %.361 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 8
  %.362 = load %"Array<FloError>.580139"*, %"Array<FloError>.580139"** %.361, align 8
  %.363 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.362, i64 0, i32 0
  %.364 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.363, align 8
  %.365 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.364, i64 0, i32 5
  %.366 = load %FloError.580137* (%"Array<FloError>.580139"*, i64)*, %FloError.580137* (%"Array<FloError>.580139"*, i64)** %.365, align 8
  %.367 = call %FloError.580137* %.366(%"Array<FloError>.580139"* %.362, i64 0)
  %.369 = getelementptr inbounds %TypeNode.580161, %TypeNode.580161* %.2, i64 0, i32 1
  %25 = bitcast %FloRange.580135** %.369 to i64*
  %.3702 = load i64, i64* %25, align 8
  %.371 = getelementptr inbounds %FloError.580137, %FloError.580137* %.367, i64 0, i32 3
  %26 = bitcast %FloRange.580135** %.371 to i64*
  store i64 %.3702, i64* %26, align 8
  br label %for.end.1.if

.4.endif.endif.endif.endif.endif.endif.if.endif.if: ; preds = %.4.endif.endif.endif.endif.endif.endif.if.endif
  %.394 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.378, align 8
  %.395 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.394, i64 0, i32 16
  %.396 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.395, align 8
  %.399 = load %string.580129*, %string.580129** %.383, align 8
  %.400 = getelementptr inbounds %string.580129, %string.580129* %.399, i64 0, i32 0
  %.401 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.400, align 8
  %.402 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.401, i64 0, i32 10
  %.403 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.402, align 8
  %.404 = call i8* %.403(%string.580129* %.399)
  %.406 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.303, i64 0, i64 0), i8* %.404)
  %.408 = call i8* @malloc(i64 %.406)
  %.409 = call i64 (i8*, i8*, ...) @sprintf(i8* %.408, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.303, i64 0, i64 0), i8* %.404)
  %.410 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.411 = bitcast i8* %.410 to %string.580129*
  %.412 = bitcast i8* %.410 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.412, align 8
  %.414 = getelementptr inbounds i8, i8* %.410, i64 8
  %27 = bitcast i8* %.414 to i8**
  store i8* %.408, i8** %27, align 8
  %.416 = getelementptr inbounds i8, i8* %.410, i64 16
  %28 = bitcast i8* %.416 to i64*
  store i64 %.406, i64* %28, align 8
  %.418 = getelementptr inbounds i8, i8* %.410, i64 24
  %29 = bitcast i8* %.418 to i64*
  store i64 %.406, i64* %29, align 8
  %.421 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.382, i64 0, i32 2
  %.422 = load %FloRange.580135*, %FloRange.580135** %.421, align 8
  call void %.396(%TypeChecker.580449* %.1, i64 5, %string.580129* %.411, %FloRange.580135* %.422)
  ret %Type.580273* null
}

define %ArrayExpression.580315* @TypeChecker_check_array_expression(%TypeChecker.580449* %.1, %Type.580273* %.2, %ArrayExpressionNode.580193* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.11, i64 0, i32 17
  %.13 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.12, align 8
  %.14 = call i1 %.13(%TypeChecker.580449* %.1)
  br i1 %.14, label %.5.if, label %.5.endif

.5.if.loopexit:                                   ; preds = %for.body
  store i1 %.14913, i1* %is_constant, align 1
  br label %.5.if

.5.if:                                            ; preds = %.5.if.loopexit, %.5.endif.endif.if, %.5
  ret %ArrayExpression.580315* null

.5.endif:                                         ; preds = %.5
  %.18 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.20 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.20 to %"Array<Expression>_vtable_ty.580312"**
  store %"Array<Expression>_vtable_ty.580312"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.580312"** %.22, align 8
  %.24 = getelementptr inbounds i8, i8* %.20, i64 8
  %0 = bitcast i8* %.24 to i8**
  store i8* %.18, i8** %0, align 8
  %.26 = getelementptr inbounds i8, i8* %.20, i64 16
  %1 = bitcast i8* %.26 to i64*
  store i64 0, i64* %1, align 8
  %.28 = getelementptr inbounds i8, i8* %.20, i64 24
  %2 = bitcast i8* %.28 to i64*
  store i64 8, i64* %2, align 8
  %elements = alloca %"Array<Expression>.580311"*, align 8
  %3 = bitcast %"Array<Expression>.580311"** %elements to i8**
  store i8* %.20, i8** %3, align 8
  %.31 = call %Type.580273* @Type_unknown()
  %element_type = alloca %Type.580273*, align 8
  store %Type.580273* %.31, %Type.580273** %element_type, align 8
  %array_type = alloca %Type.580273*, align 8
  store %Type.580273* %.2, %Type.580273** %array_type, align 8
  %is_constant = alloca i1, align 1
  store i1 true, i1* %is_constant, align 1
  %.37 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 0, i32 1
  %.38 = load i64, i64* %.37, align 8
  %.39 = icmp eq i64 %.38, 16
  br i1 %.39, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.43 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %4 = bitcast %Type.580273* %.43 to i64*
  %.443 = load i64, i64* %4, align 8
  %5 = bitcast %Type.580273** %element_type to i64*
  store i64 %.443, i64* %5, align 8
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif.if, %.5.endif
  %.48 = getelementptr inbounds %ArrayExpressionNode.580193, %ArrayExpressionNode.580193* %.3, i64 0, i32 4
  %.49 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.48, align 8
  %.50 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.49, i64 0, i32 2
  %.51 = load i64, i64* %.50, align 8
  %.52 = icmp sgt i64 %.51, 0
  br i1 %.52, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.54 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %elements, align 8
  %.57 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.58 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.57, i64 0, i32 60
  %.59 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.58, align 8
  %.60 = load %Type.580273*, %Type.580273** %element_type, align 8
  %.64 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.49, i64 0, i32 0
  %.65 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.64, align 8
  %.66 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.65, i64 0, i32 5
  %.67 = load %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)*, %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)** %.66, align 8
  %.68 = call %ExpressionNode.580177* %.67(%"Array<ExpressionNode>.580189"* %.49, i64 0)
  %.69 = call %Expression.580293* %.59(%TypeChecker.580449* %.1, %Type.580273* %.60, %ExpressionNode.580177* %.68)
  %.70 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.54, i64 0, i32 0
  %.71 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.70, align 8
  %.72 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.71, i64 0, i32 2
  %.73 = load void (%"Array<Expression>.580311"*, %Expression.580293*)*, void (%"Array<Expression>.580311"*, %Expression.580293*)** %.72, align 8
  call void %.73(%"Array<Expression>.580311"* %.54, %Expression.580293* %.69)
  %.77 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.78 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.77, i64 0, i32 17
  %.79 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.78, align 8
  %.80 = call i1 %.79(%TypeChecker.580449* %.1)
  br i1 %.80, label %.5.if, label %.5.endif.endif.if.endif

for.cond..5.endif.endif.endif.loopexit_crit_edge: ; preds = %for.body.endif.if
  store i1 %.149, i1* %is_constant, align 1
  br label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %for.entry, %for.cond..5.endif.endif.endif.loopexit_crit_edge, %.5.endif.endif
  %.239 = load i64, i64* %.37, align 8
  %.240 = icmp eq i64 %.239, 16
  br i1 %.240, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.if.endif:                          ; preds = %.5.endif.endif.if
  %.84 = getelementptr inbounds %Type.580273, %Type.580273* %.60, i64 0, i32 1
  %.85 = load i64, i64* %.84, align 8
  %.86 = icmp eq i64 %.85, 21
  br i1 %.86, label %.5.endif.endif.if.endif.if, label %for.entry

.5.endif.endif.if.endif.if:                       ; preds = %.5.endif.endif.if.endif
  %.91 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.70, align 8
  %.92 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.91, i64 0, i32 5
  %.93 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.92, align 8
  %.94 = call %Expression.580293* %.93(%"Array<Expression>.580311"* %.54, i64 0)
  %.95 = getelementptr inbounds %Expression.580293, %Expression.580293* %.94, i64 0, i32 2
  %.96 = load i1, i1* %.95, align 1
  store i1 %.96, i1* %is_constant, align 1
  %.101 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.70, align 8
  %.102 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.101, i64 0, i32 5
  %.103 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.102, align 8
  %.104 = call %Expression.580293* %.103(%"Array<Expression>.580311"* %.54, i64 0)
  %.105 = getelementptr inbounds %Expression.580293, %Expression.580293* %.104, i64 0, i32 4
  %6 = bitcast %Type.580273** %.105 to i64*
  %.1062 = load i64, i64* %6, align 8
  %7 = bitcast %Type.580273** %element_type to i64*
  store i64 %.1062, i64* %7, align 8
  br label %for.entry

for.entry:                                        ; preds = %.5.endif.endif.if.endif, %.5.endif.endif.if.endif.if
  %.1157 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.48, align 8
  %.1168 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.1157, i64 0, i32 2
  %.1179 = load i64, i64* %.1168, align 8
  %.11810 = icmp sgt i64 %.1179, 1
  br i1 %.11810, label %for.body.lr.ph, label %.5.endif.endif.endif

for.body.lr.ph:                                   ; preds = %for.entry
  %.125 = load %Type.580273*, %Type.580273** %element_type, align 8
  %is_constant.promoted = load i1, i1* %is_constant, align 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.if
  %.14913 = phi i1 [ %is_constant.promoted, %for.body.lr.ph ], [ %.149, %for.body.endif.if ]
  %.11512 = phi %"Array<ExpressionNode>.580189"* [ %.1157, %for.body.lr.ph ], [ %.115, %for.body.endif.if ]
  %storemerge11 = phi i64 [ 1, %for.body.lr.ph ], [ %.233, %for.body.endif.if ]
  %.122 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.123 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.122, i64 0, i32 60
  %.124 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.123, align 8
  %.130 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.11512, i64 0, i32 0
  %.131 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.130, align 8
  %.132 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.131, i64 0, i32 5
  %.133 = load %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)*, %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)** %.132, align 8
  %.134 = call %ExpressionNode.580177* %.133(%"Array<ExpressionNode>.580189"* %.11512, i64 %storemerge11)
  %.135 = call %Expression.580293* %.124(%TypeChecker.580449* %.1, %Type.580273* %.125, %ExpressionNode.580177* %.134)
  %.139 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.140 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.139, i64 0, i32 17
  %.141 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.140, align 8
  %.142 = call i1 %.141(%TypeChecker.580449* %.1)
  br i1 %.142, label %.5.if.loopexit, label %for.body.endif

for.body.endif:                                   ; preds = %for.body
  %.147 = getelementptr inbounds %Expression.580293, %Expression.580293* %.135, i64 0, i32 2
  %.148 = load i1, i1* %.147, align 1
  %.149 = and i1 %.14913, %.148
  %.153 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.154 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.153, i64 0, i32 9
  %.155 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.154, align 8
  %.158 = getelementptr inbounds %Expression.580293, %Expression.580293* %.135, i64 0, i32 4
  %.159 = load %Type.580273*, %Type.580273** %.158, align 8
  %.160 = call i1 %.155(%TypeChecker.580449* %.1, %Type.580273* %.125, %Type.580273* %.159)
  br i1 %.160, label %for.body.endif.if, label %for.body.endif.else

for.body.endif.if:                                ; preds = %for.body.endif
  %.165 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.70, align 8
  %.166 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.165, i64 0, i32 2
  %.167 = load void (%"Array<Expression>.580311"*, %Expression.580293*)*, void (%"Array<Expression>.580311"*, %Expression.580293*)** %.166, align 8
  call void %.167(%"Array<Expression>.580311"* %.54, %Expression.580293* %.135)
  %.233 = add nuw nsw i64 %storemerge11, 1
  %.115 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.48, align 8
  %.116 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.115, i64 0, i32 2
  %.117 = load i64, i64* %.116, align 8
  %.118 = icmp slt i64 %.233, %.117
  br i1 %.118, label %for.body, label %for.cond..5.endif.endif.endif.loopexit_crit_edge

for.body.endif.else:                              ; preds = %for.body.endif
  store i1 %.149, i1* %is_constant, align 1
  %.172 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.173 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.172, i64 0, i32 16
  %.174 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.173, align 8
  %.178 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.172, i64 0, i32 10
  %.179 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.178, align 8
  %.181 = call %string.580129* %.179(%TypeChecker.580449* %.1, %Type.580273* %.125)
  %.184 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.185 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.184, i64 0, i32 10
  %.186 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.185, align 8
  %.189 = load %Type.580273*, %Type.580273** %.158, align 8
  %.190 = call %string.580129* %.186(%TypeChecker.580449* %.1, %Type.580273* %.189)
  %.191 = getelementptr inbounds %string.580129, %string.580129* %.181, i64 0, i32 0
  %.192 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.191, align 8
  %.193 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.192, i64 0, i32 10
  %.194 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.193, align 8
  %.195 = call i8* %.194(%string.580129* %.181)
  %.196 = getelementptr inbounds %string.580129, %string.580129* %.190, i64 0, i32 0
  %.197 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.196, align 8
  %.198 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.197, i64 0, i32 10
  %.199 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.198, align 8
  %.200 = call i8* %.199(%string.580129* %.190)
  %.202 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.304, i64 0, i64 0), i8* %.195, i8* %.200)
  %.204 = call i8* @malloc(i64 %.202)
  %.205 = call i64 (i8*, i8*, ...) @sprintf(i8* %.204, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.304, i64 0, i64 0), i8* %.195, i8* %.200)
  %.206 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.207 = bitcast i8* %.206 to %string.580129*
  %.208 = bitcast i8* %.206 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.208, align 8
  %.210 = getelementptr inbounds i8, i8* %.206, i64 8
  %8 = bitcast i8* %.210 to i8**
  store i8* %.204, i8** %8, align 8
  %.212 = getelementptr inbounds i8, i8* %.206, i64 16
  %9 = bitcast i8* %.212 to i64*
  store i64 %.202, i64* %9, align 8
  %.214 = getelementptr inbounds i8, i8* %.206, i64 24
  %10 = bitcast i8* %.214 to i64*
  store i64 %.202, i64* %10, align 8
  %.219 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.48, align 8
  %.220 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.219, i64 0, i32 0
  %.221 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.220, align 8
  %.222 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.221, i64 0, i32 5
  %.223 = load %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)*, %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)** %.222, align 8
  %.224 = call %ExpressionNode.580177* %.223(%"Array<ExpressionNode>.580189"* %.219, i64 %storemerge11)
  %.225 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.224, i64 0, i32 1
  %.226 = load %FloRange.580135*, %FloRange.580135** %.225, align 8
  call void %.174(%TypeChecker.580449* %.1, i64 5, %string.580129* %.207, %FloRange.580135* %.226)
  ret %ArrayExpression.580315* null

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.242 = load %Type.580273*, %Type.580273** %element_type, align 8
  %.243 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %elements, align 8
  %.244 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.243, i64 0, i32 2
  %.245 = load i64, i64* %.244, align 8
  %.246 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.247 = bitcast i8* %.246 to %ArrayType.580295*
  %.248 = bitcast i8* %.246 to %ArrayType_vtable_ty.580296**
  store %ArrayType_vtable_ty.580296* @ArrayType_vtable_data, %ArrayType_vtable_ty.580296** %.248, align 8
  call void @ArrayType_constructor(%ArrayType.580295* %.247, %Type.580273* %.242, i64 %.245)
  %11 = bitcast %Type.580273** %array_type to i8**
  store i8* %.246, i8** %11, align 8
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif.if, %.5.endif.endif.endif
  %.254 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %elements, align 8
  %.255 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.256 = bitcast i8* %.255 to %ArrayExpression.580315*
  %.257 = bitcast i8* %.255 to %ArrayExpression_vtable_ty.580316**
  store %ArrayExpression_vtable_ty.580316* @ArrayExpression_vtable_data, %ArrayExpression_vtable_ty.580316** %.257, align 8
  call void @ArrayExpression_constructor(%ArrayExpression.580315* %.256, %"Array<Expression>.580311"* %.254)
  %arr_exp = alloca %ArrayExpression.580315*, align 8
  %12 = bitcast %ArrayExpression.580315** %arr_exp to i8**
  store i8* %.255, i8** %12, align 8
  %.262 = load i1, i1* %is_constant, align 1
  %.263 = getelementptr inbounds i8, i8* %.255, i64 16
  %13 = bitcast i8* %.263 to i1*
  store i1 %.262, i1* %13, align 1
  %14 = bitcast %Type.580273** %array_type to i64*
  %.2661 = load i64, i64* %14, align 8
  %.267 = getelementptr inbounds i8, i8* %.255, i64 32
  %15 = bitcast i8* %.267 to i64*
  store i64 %.2661, i64* %15, align 8
  %.269 = load %ArrayExpression.580315*, %ArrayExpression.580315** %arr_exp, align 8
  ret %ArrayExpression.580315* %.269
}

define noalias %Expression.580293* @TypeChecker_check_var_access_expr(%TypeChecker.580449* %.1, %Type.580273* %.2, %VarAccessExpressionNode.580191* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %VarAccessExpressionNode.580191, %VarAccessExpressionNode.580191* %.3, i64 0, i32 4
  %.11 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.10, align 8
  %.12 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.11, i64 0, i32 3
  %.13 = load %string.580129*, %string.580129** %.12, align 8
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %string.580129*
  %.17.repack = bitcast i8* %.16 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.17.repack, align 8
  %.17.repack1 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.17.repack1 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.265, i64 0, i64 0), i8** %0, align 8
  %.17.repack2 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.17.repack2 to i64*
  store i64 4, i64* %1, align 8
  %.17.repack3 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.17.repack3 to i64*
  store i64 4, i64* %2, align 8
  %.19 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.20 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.19, align 8
  %.21 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.20, i64 0, i32 3
  %.22 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.21, align 8
  %.23 = call i1 %.22(%string.580129* %.13, %string.580129* %.17)
  br i1 %.23, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.25 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.26 = bitcast i8* %.25 to %BooleanExpression.580305*
  %.27 = bitcast i8* %.25 to %BooleanExpression_vtable_ty.580306**
  store %BooleanExpression_vtable_ty.580306* @BooleanExpression_vtable_data, %BooleanExpression_vtable_ty.580306** %.27, align 8
  call void @BooleanExpression_constructor(%BooleanExpression.580305* %.26, i64 1)
  %.30 = bitcast i8* %.25 to %Expression.580293*
  ret %Expression.580293* %.30

.5.endif:                                         ; preds = %.5
  %.33 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.580129*
  %.34.repack = bitcast i8* %.33 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.34.repack, align 8
  %.34.repack4 = getelementptr inbounds i8, i8* %.33, i64 8
  %3 = bitcast i8* %.34.repack4 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.266, i64 0, i64 0), i8** %3, align 8
  %.34.repack5 = getelementptr inbounds i8, i8* %.33, i64 16
  %4 = bitcast i8* %.34.repack5 to i64*
  store i64 5, i64* %4, align 8
  %.34.repack6 = getelementptr inbounds i8, i8* %.33, i64 24
  %5 = bitcast i8* %.34.repack6 to i64*
  store i64 5, i64* %5, align 8
  %.37 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.19, align 8
  %.38 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.37, i64 0, i32 3
  %.39 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.38, align 8
  %.40 = call i1 %.39(%string.580129* %.13, %string.580129* %.34)
  br i1 %.40, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.42 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.43 = bitcast i8* %.42 to %BooleanExpression.580305*
  %.44 = bitcast i8* %.42 to %BooleanExpression_vtable_ty.580306**
  store %BooleanExpression_vtable_ty.580306* @BooleanExpression_vtable_data, %BooleanExpression_vtable_ty.580306** %.44, align 8
  call void @BooleanExpression_constructor(%BooleanExpression.580305* %.43, i64 0)
  %.47 = bitcast i8* %.42 to %Expression.580293*
  ret %Expression.580293* %.47

.5.endif.endif:                                   ; preds = %.5.endif
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.580129*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.51.repack, align 8
  %.51.repack7 = getelementptr inbounds i8, i8* %.50, i64 8
  %6 = bitcast i8* %.51.repack7 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.267, i64 0, i64 0), i8** %6, align 8
  %.51.repack8 = getelementptr inbounds i8, i8* %.50, i64 16
  %7 = bitcast i8* %.51.repack8 to i64*
  store i64 4, i64* %7, align 8
  %.51.repack9 = getelementptr inbounds i8, i8* %.50, i64 24
  %8 = bitcast i8* %.51.repack9 to i64*
  store i64 4, i64* %8, align 8
  %.54 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.19, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.54, i64 0, i32 3
  %.56 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.55, align 8
  %.57 = call i1 %.56(%string.580129* %.13, %string.580129* %.51)
  br i1 %.57, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.60 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.61 = bitcast i8* %.60 to %NullExpression.580313*
  %.62 = bitcast i8* %.60 to %NullExpression_vtable_ty.580314**
  store %NullExpression_vtable_ty.580314* @NullExpression_vtable_data, %NullExpression_vtable_ty.580314** %.62, align 8
  call void @NullExpression_constructor(%NullExpression.580313* %.61, %Type.580273* %.2)
  %.65 = bitcast i8* %.60 to %Expression.580293*
  ret %Expression.580293* %.65

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.68 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.69 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.68, align 8
  %.70 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.69, i64 0, i32 1
  %.71 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.70, align 8
  %.72 = call %Scope.580363* %.71(%TypeChecker.580449* %.1)
  %.76 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.68, align 8
  %.77 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.76, i64 0, i32 13
  %.78 = load %VarId.580331* (%TypeChecker.580449*, %string.580129*)*, %VarId.580331* (%TypeChecker.580449*, %string.580129*)** %.77, align 8
  %.80 = call %VarId.580331* %.78(%TypeChecker.580449* %.1, %string.580129* %.13)
  %resolved = alloca %VarId.580331*, align 8
  store %VarId.580331* %.80, %VarId.580331** %resolved, align 8
  %.82 = call %Type.580273* @Type_unknown()
  %var_ty = alloca %Type.580273*, align 8
  store %Type.580273* %.82, %Type.580273** %var_ty, align 8
  %9 = ptrtoint %VarId.580331* %.80 to i64
  %.85 = trunc i64 %9 to i32
  %.87.not = icmp eq i32 %.85, 0
  br i1 %.87.not, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %10 = bitcast %VarId.580331** %resolved to i64*
  %.8910 = load i64, i64* %10, align 8
  %var_id = alloca %VarId.580331*, align 8
  %11 = bitcast %VarId.580331** %var_id to i64*
  store i64 %.8910, i64* %11, align 8
  %.91.cast = inttoptr i64 %.8910 to %VarId.580331*
  %.92 = getelementptr inbounds %VarId.580331, %VarId.580331* %.91.cast, i64 0, i32 1
  %.93 = load i64, i64* %.92, align 8
  %.94 = icmp eq i64 %.93, 0
  br i1 %.94, label %.5.endif.endif.endif.if.if, label %.5.endif.endif.endif.if.else

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.166 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.68, align 8
  %.167 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.166, i64 0, i32 16
  %.168 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.167, align 8
  %.171 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.19, align 8
  %.172 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.171, i64 0, i32 10
  %.173 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.172, align 8
  %.174 = call i8* %.173(%string.580129* %.13)
  %.176 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.305, i64 0, i64 0), i8* %.174)
  %.178 = call i8* @malloc(i64 %.176)
  %.179 = call i64 (i8*, i8*, ...) @sprintf(i8* %.178, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.305, i64 0, i64 0), i8* %.174)
  %.180 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.181 = bitcast i8* %.180 to %string.580129*
  %.182 = bitcast i8* %.180 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.182, align 8
  %.184 = getelementptr inbounds i8, i8* %.180, i64 8
  %12 = bitcast i8* %.184 to i8**
  store i8* %.178, i8** %12, align 8
  %.186 = getelementptr inbounds i8, i8* %.180, i64 16
  %13 = bitcast i8* %.186 to i64*
  store i64 %.176, i64* %13, align 8
  %.188 = getelementptr inbounds i8, i8* %.180, i64 24
  %14 = bitcast i8* %.188 to i64*
  store i64 %.176, i64* %14, align 8
  %.191 = getelementptr inbounds %VarAccessExpressionNode.580191, %VarAccessExpressionNode.580191* %.3, i64 0, i32 1
  %.192 = load %FloRange.580135*, %FloRange.580135** %.191, align 8
  call void %.168(%TypeChecker.580449* %.1, i64 1, %string.580129* %.181, %FloRange.580135* %.192)
  ret %Expression.580293* null

.5.endif.endif.endif.if.if:                       ; preds = %.5.endif.endif.endif.if
  %.97 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.98 = load %Program.580445*, %Program.580445** %.97, align 8
  %.99 = load %VarId.580331*, %VarId.580331** %var_id, align 8
  %.100 = call %Function.580391* @get_func(%Program.580445* %.98, %VarId.580331* %.99)
  %.101 = getelementptr inbounds %Function.580391, %Function.580391* %.100, i64 0, i32 5
  %15 = bitcast %FunctionType.580279** %.101 to i64*
  %.1021415 = load i64, i64* %15, align 8
  %16 = bitcast %Type.580273** %var_ty to i64*
  store i64 %.1021415, i64* %16, align 8
  br label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else:                     ; preds = %.5.endif.endif.endif.if
  %.106 = load %VarId.580331*, %VarId.580331** %var_id, align 8
  %.107 = getelementptr inbounds %VarId.580331, %VarId.580331* %.106, i64 0, i32 1
  %.108 = load i64, i64* %.107, align 8
  switch i64 %.108, label %.5.endif.endif.endif.if.else.else.else [
    i64 1, label %.5.endif.endif.endif.if.else.if
    i64 2, label %.5.endif.endif.endif.if.else.else.if
  ]

.5.endif.endif.endif.if.endif:                    ; preds = %.5.endif.endif.endif.if.else.else.else, %.5.endif.endif.endif.if.else.else.else.if, %.5.endif.endif.endif.if.else.else.if, %.5.endif.endif.endif.if.else.if, %.5.endif.endif.endif.if.if
  %.155 = load %VarId.580331*, %VarId.580331** %var_id, align 8
  %.156 = load %Type.580273*, %Type.580273** %var_ty, align 8
  %.157 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.158 = bitcast i8* %.157 to %VarAccessExpression.580343*
  %.159 = bitcast i8* %.157 to %VarAccessExpression_vtable_ty.580344**
  store %VarAccessExpression_vtable_ty.580344* @VarAccessExpression_vtable_data, %VarAccessExpression_vtable_ty.580344** %.159, align 8
  call void @VarAccessExpression_constructor(%VarAccessExpression.580343* %.158, %VarId.580331* %.155, %Type.580273* %.156)
  %.162 = bitcast i8* %.157 to %Expression.580293*
  ret %Expression.580293* %.162

.5.endif.endif.endif.if.else.if:                  ; preds = %.5.endif.endif.endif.if.else
  %.112 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.113 = load %Program.580445*, %Program.580445** %.112, align 8
  %.115 = call %Var.580395* @get_var(%Program.580445* %.113, %VarId.580331* %.106)
  %.116 = getelementptr inbounds %Var.580395, %Var.580395* %.115, i64 0, i32 1
  %17 = bitcast %Type.580273** %.116 to i64*
  %.11713 = load i64, i64* %17, align 8
  %18 = bitcast %Type.580273** %var_ty to i64*
  store i64 %.11713, i64* %18, align 8
  br label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else.else.if:             ; preds = %.5.endif.endif.endif.if.else
  %.126 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.127 = load %Program.580445*, %Program.580445** %.126, align 8
  %19 = bitcast %VarId.580331** %var_id to %ConstId.580337**
  %.12811 = load %ConstId.580337*, %ConstId.580337** %19, align 8
  %.130 = call %Const.580397* @get_const(%Program.580445* %.127, %ConstId.580337* %.12811)
  %.131 = getelementptr inbounds %Const.580397, %Const.580397* %.130, i64 0, i32 1
  %20 = bitcast %Type.580273** %.131 to i64*
  %.13212 = load i64, i64* %20, align 8
  %21 = bitcast %Type.580273** %var_ty to i64*
  store i64 %.13212, i64* %21, align 8
  br label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else.else.else:           ; preds = %.5.endif.endif.endif.if.else
  %22 = add i64 %.108, -3
  %23 = icmp ult i64 %22, 2
  br i1 %23, label %.5.endif.endif.endif.if.else.else.else.if, label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else.else.else.if:        ; preds = %.5.endif.endif.endif.if.else.else.else
  %.145 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.146 = bitcast i8* %.145 to %Type.580273*
  %.147 = bitcast i8* %.145 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.147, align 8
  call void @Type_constructor(%Type.580273* %.146, i64 18)
  %24 = bitcast %Type.580273** %var_ty to i8**
  store i8* %.145, i8** %24, align 8
  br label %.5.endif.endif.endif.if.endif
}

define %Expression.580293* @TypeChecker_check_assignment(%TypeChecker.580449* %.1, %Expression.580293* %.2, %Expression.580293* %.3, %BinaryExpressionNode.580205* %.4) {
.6:
  %.12 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.4, i64 0, i32 5
  %.13 = load i64, i64* %.12, align 8
  %.16.not = icmp eq i64 %.13, 18
  br i1 %.16.not, label %.6.endif, label %.6.if

.6.if:                                            ; preds = %.6
  %.19 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 0, i32 4
  %.20 = load %Type.580273*, %Type.580273** %.19, align 8
  %.21 = call i1 @is_object(%Type.580273* %.20)
  br i1 %.21, label %.6.if.if, label %.6.if.endif

.6.endif:                                         ; preds = %.6, %.6.if.endif
  %right.0 = phi %Expression.580293* [ %.62, %.6.if.endif ], [ %.3, %.6 ]
  %.66 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 0, i32 4
  %.67 = load %Type.580273*, %Type.580273** %.66, align 8
  %.68 = getelementptr inbounds %Type.580273, %Type.580273* %.67, i64 0, i32 1
  %.69 = load i64, i64* %.68, align 8
  %.70 = icmp eq i64 %.69, 18
  br i1 %.70, label %.6.endif.if, label %.6.endif.endif

.6.if.if:                                         ; preds = %.6.if
  %.24 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.25 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.24, align 8
  %.26 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.25, i64 0, i32 39
  %.27 = load %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*)** %.26, align 8
  %.30 = call %Expression.580293* %.27(%TypeChecker.580449* %.1, %Expression.580293* %.2, %BinaryExpressionNode.580205* %.4)
  %0 = ptrtoint %Expression.580293* %.30 to i64
  %.33 = trunc i64 %0 to i32
  %.35 = icmp ne i32 %.33, 0
  %.38 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.24, align 8
  %.39 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.38, i64 0, i32 17
  %.40 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.39, align 8
  %.41 = call i1 %.40(%TypeChecker.580449* %.1)
  %.42 = or i1 %.35, %.41
  br i1 %.42, label %.6.if.if.if, label %.6.if.endif

.6.if.endif:                                      ; preds = %.6.if.if, %.6.if
  %.49 = call i64 @lower_bin_assign_op(i64 %.13)
  store i64 %.49, i64* %.12, align 8
  %.53 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.54 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.53, align 8
  %.55 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.54, i64 0, i32 42
  %.56 = load %BinaryExpression.580317* (%TypeChecker.580449*, %Type.580273*, %BinaryExpressionNode.580205*)*, %BinaryExpression.580317* (%TypeChecker.580449*, %Type.580273*, %BinaryExpressionNode.580205*)** %.55, align 8
  %.59 = load %Type.580273*, %Type.580273** %.19, align 8
  %.61 = call %BinaryExpression.580317* %.56(%TypeChecker.580449* %.1, %Type.580273* %.59, %BinaryExpressionNode.580205* %.4)
  %.62 = bitcast %BinaryExpression.580317* %.61 to %Expression.580293*
  br label %.6.endif

.6.if.if.if:                                      ; preds = %.6.if.if
  ret %Expression.580293* %.30

.6.endif.if:                                      ; preds = %.6.endif
  %.73 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.74 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.73, align 8
  %.75 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.74, i64 0, i32 16
  %.76 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.75, align 8
  %.77 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.78 = bitcast i8* %.77 to %string.580129*
  %.78.repack = bitcast i8* %.77 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.78.repack, align 8
  %.78.repack4 = getelementptr inbounds i8, i8* %.77, i64 8
  %1 = bitcast i8* %.78.repack4 to i8**
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.306, i64 0, i64 0), i8** %1, align 8
  %.78.repack5 = getelementptr inbounds i8, i8* %.77, i64 16
  %2 = bitcast i8* %.78.repack5 to i64*
  store i64 33, i64* %2, align 8
  %.78.repack6 = getelementptr inbounds i8, i8* %.77, i64 24
  %3 = bitcast i8* %.78.repack6 to i64*
  store i64 33, i64* %3, align 8
  %.81 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.4, i64 0, i32 1
  %.82 = load %FloRange.580135*, %FloRange.580135** %.81, align 8
  call void %.76(%TypeChecker.580449* %.1, i64 5, %string.580129* %.78, %FloRange.580135* %.82)
  ret %Expression.580293* null

.6.endif.endif:                                   ; preds = %.6.endif
  %.86 = call i1 @check_is_var(%Expression.580293* %.2)
  %.103 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.104 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.103, align 8
  br i1 %.86, label %.6.endif.endif.endif, label %.6.endif.endif.if

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.92 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.104, i64 0, i32 16
  %.93 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.92, align 8
  %.94 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.95 = bitcast i8* %.94 to %string.580129*
  %.95.repack = bitcast i8* %.94 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.95.repack, align 8
  %.95.repack1 = getelementptr inbounds i8, i8* %.94, i64 8
  %4 = bitcast i8* %.95.repack1 to i8**
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.307, i64 0, i64 0), i8** %4, align 8
  %.95.repack2 = getelementptr inbounds i8, i8* %.94, i64 16
  %5 = bitcast i8* %.95.repack2 to i64*
  store i64 35, i64* %5, align 8
  %.95.repack3 = getelementptr inbounds i8, i8* %.94, i64 24
  %6 = bitcast i8* %.95.repack3 to i64*
  store i64 35, i64* %6, align 8
  %.98 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.4, i64 0, i32 1
  %.99 = load %FloRange.580135*, %FloRange.580135** %.98, align 8
  call void %.93(%TypeChecker.580449* %.1, i64 5, %string.580129* %.95, %FloRange.580135* %.99)
  ret %Expression.580293* null

.6.endif.endif.endif:                             ; preds = %.6.endif.endif
  %.105 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.104, i64 0, i32 9
  %.106 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.105, align 8
  %.111 = getelementptr inbounds %Expression.580293, %Expression.580293* %right.0, i64 0, i32 4
  %.112 = load %Type.580273*, %Type.580273** %.111, align 8
  %.113 = call i1 %.106(%TypeChecker.580449* %.1, %Type.580273* %.67, %Type.580273* %.112)
  br i1 %.113, label %.6.endif.endif.endif.endif, label %.6.endif.endif.endif.if

.6.endif.endif.endif.if:                          ; preds = %.6.endif.endif.endif
  %.118 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.103, align 8
  %.119 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.118, i64 0, i32 16
  %.120 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.119, align 8
  %.124 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.118, i64 0, i32 10
  %.125 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.124, align 8
  %.128 = load %Type.580273*, %Type.580273** %.111, align 8
  %.129 = call %string.580129* %.125(%TypeChecker.580449* %.1, %Type.580273* %.128)
  %.132 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.103, align 8
  %.133 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.132, i64 0, i32 10
  %.134 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.133, align 8
  %.137 = load %Type.580273*, %Type.580273** %.66, align 8
  %.138 = call %string.580129* %.134(%TypeChecker.580449* %.1, %Type.580273* %.137)
  %.139 = getelementptr inbounds %string.580129, %string.580129* %.129, i64 0, i32 0
  %.140 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.139, align 8
  %.141 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.140, i64 0, i32 10
  %.142 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.141, align 8
  %.143 = call i8* %.142(%string.580129* %.129)
  %.144 = getelementptr inbounds %string.580129, %string.580129* %.138, i64 0, i32 0
  %.145 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.144, align 8
  %.146 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.145, i64 0, i32 10
  %.147 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.146, align 8
  %.148 = call i8* %.147(%string.580129* %.138)
  %.150 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.308, i64 0, i64 0), i8* %.143, i8* %.148)
  %.152 = call i8* @malloc(i64 %.150)
  %.153 = call i64 (i8*, i8*, ...) @sprintf(i8* %.152, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.308, i64 0, i64 0), i8* %.143, i8* %.148)
  %.154 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.155 = bitcast i8* %.154 to %string.580129*
  %.156 = bitcast i8* %.154 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.156, align 8
  %.158 = getelementptr inbounds i8, i8* %.154, i64 8
  %7 = bitcast i8* %.158 to i8**
  store i8* %.152, i8** %7, align 8
  %.160 = getelementptr inbounds i8, i8* %.154, i64 16
  %8 = bitcast i8* %.160 to i64*
  store i64 %.150, i64* %8, align 8
  %.162 = getelementptr inbounds i8, i8* %.154, i64 24
  %9 = bitcast i8* %.162 to i64*
  store i64 %.150, i64* %9, align 8
  %.165 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.4, i64 0, i32 1
  %.166 = load %FloRange.580135*, %FloRange.580135** %.165, align 8
  call void %.120(%TypeChecker.580449* %.1, i64 5, %string.580129* %.155, %FloRange.580135* %.166)
  ret %Expression.580293* null

.6.endif.endif.endif.endif:                       ; preds = %.6.endif.endif.endif
  %.173 = load %Type.580273*, %Type.580273** %.111, align 8
  %.174 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.175 = bitcast i8* %.174 to %BinaryExpression.580317*
  %.176 = bitcast i8* %.174 to %BinaryExpression_vtable_ty.580318**
  store %BinaryExpression_vtable_ty.580318* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.580318** %.176, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.580317* %.175, %Expression.580293* %.2, i64 18, %Expression.580293* %right.0, %Type.580273* %.173, i1 false)
  %.179 = bitcast i8* %.174 to %Expression.580293*
  ret %Expression.580293* %.179
}

define noalias %Expression.580293* @TypeChecker_check_object_bin_assign(%TypeChecker.580449* %.1, %Expression.580293* %.2, %BinaryExpressionNode.580205* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 0, i32 4
  %0 = bitcast %Type.580273** %.10 to %ObjectType.580297**
  %.115 = load %ObjectType.580297*, %ObjectType.580297** %0, align 8
  %.15 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 5
  %.16 = load i64, i64* %.15, align 8
  %.19 = call %string.580129* @bin_op_to_op_overload_name(i64 %.16)
  %.22 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.23 = load %Program.580445*, %Program.580445** %.22, align 8
  %.25 = getelementptr inbounds %ObjectType.580297, %ObjectType.580297* %.115, i64 0, i32 2
  %.26 = load %ClassId.580289*, %ClassId.580289** %.25, align 8
  %.27 = call %Class.580403* @get_class(%Program.580445* %.23, %ClassId.580289* %.26)
  %.30 = getelementptr inbounds %Class.580403, %Class.580403* %.27, i64 0, i32 7
  %.31 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.31, i64 0, i32 0
  %.33 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.32, align 8
  %.34 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.33, i64 0, i32 3
  %.35 = load %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)** %.34, align 8
  %.37 = call %PropId.580339* %.35(%"Map<string, PropId>.580407"* %.31, %string.580129* %.19)
  %1 = ptrtoint %PropId.580339* %.37 to i64
  %.40 = trunc i64 %1 to i32
  %.42 = icmp eq i32 %.40, 0
  br i1 %.42, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  ret %Expression.580293* null

.5.endif:                                         ; preds = %.5
  %.47 = load %Program.580445*, %Program.580445** %.22, align 8
  %.49 = call %Type.580273* @get_class_prop_type(%Program.580445* %.47, %PropId.580339* %.37)
  %method_type = alloca %FunctionType.580279*, align 8
  %2 = bitcast %FunctionType.580279** %method_type to %Type.580273**
  store %Type.580273* %.49, %Type.580273** %2, align 8
  %.53 = getelementptr inbounds %Type.580273, %Type.580273* %.49, i64 1
  %3 = bitcast %Type.580273* %.53 to %"Array<Type>.580281"**
  %.54 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %3, align 8
  %.55 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.54, i64 0, i32 0
  %.56 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.56, i64 0, i32 5
  %.58 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.57, align 8
  %.59 = call %Type.580273* %.58(%"Array<Type>.580281"* %.54, i64 0)
  %.62 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.63 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.62, align 8
  %.64 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.63, i64 0, i32 60
  %.65 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.64, align 8
  %.68 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 6
  %.69 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.68, align 8
  %.70 = call %Expression.580293* %.65(%TypeChecker.580449* %.1, %Type.580273* %.59, %ExpressionNode.580177* %.69)
  %right = alloca %Expression.580293*, align 8
  store %Expression.580293* %.70, %Expression.580293** %right, align 8
  %.74 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.62, align 8
  %.75 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.74, i64 0, i32 9
  %.76 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.75, align 8
  %.79 = getelementptr inbounds %Expression.580293, %Expression.580293* %.70, i64 0, i32 4
  %.80 = load %Type.580273*, %Type.580273** %.79, align 8
  %.81 = call i1 %.76(%TypeChecker.580449* %.1, %Type.580273* %.59, %Type.580273* %.80)
  br i1 %.81, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.86 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.62, align 8
  %.87 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.86, i64 0, i32 16
  %.88 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.87, align 8
  %.92 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.86, i64 0, i32 10
  %.93 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.92, align 8
  %.95 = call %string.580129* %.93(%TypeChecker.580449* %.1, %Type.580273* %.59)
  %.98 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.62, align 8
  %.99 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.98, i64 0, i32 10
  %.100 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.99, align 8
  %.103 = load %Type.580273*, %Type.580273** %.79, align 8
  %.104 = call %string.580129* %.100(%TypeChecker.580449* %.1, %Type.580273* %.103)
  %.105 = getelementptr inbounds %string.580129, %string.580129* %.95, i64 0, i32 0
  %.106 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.105, align 8
  %.107 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.106, i64 0, i32 10
  %.108 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.107, align 8
  %.109 = call i8* %.108(%string.580129* %.95)
  %.110 = getelementptr inbounds %string.580129, %string.580129* %.104, i64 0, i32 0
  %.111 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.110, align 8
  %.112 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.111, i64 0, i32 10
  %.113 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.112, align 8
  %.114 = call i8* %.113(%string.580129* %.104)
  %.116 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.309, i64 0, i64 0), i8* %.109, i8* %.114)
  %.118 = call i8* @malloc(i64 %.116)
  %.119 = call i64 (i8*, i8*, ...) @sprintf(i8* %.118, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.309, i64 0, i64 0), i8* %.109, i8* %.114)
  %.120 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.580129*
  %.122 = bitcast i8* %.120 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.122, align 8
  %.124 = getelementptr inbounds i8, i8* %.120, i64 8
  %4 = bitcast i8* %.124 to i8**
  store i8* %.118, i8** %4, align 8
  %.126 = getelementptr inbounds i8, i8* %.120, i64 16
  %5 = bitcast i8* %.126 to i64*
  store i64 %.116, i64* %5, align 8
  %.128 = getelementptr inbounds i8, i8* %.120, i64 24
  %6 = bitcast i8* %.128 to i64*
  store i64 %.116, i64* %6, align 8
  %.132 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.68, align 8
  %.133 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.132, i64 0, i32 1
  %.134 = load %FloRange.580135*, %FloRange.580135** %.133, align 8
  call void %.88(%TypeChecker.580449* %.1, i64 5, %string.580129* %.121, %FloRange.580135* %.134)
  ret %Expression.580293* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.141 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.142 = bitcast i8* %.141 to %MemberExpression.580341*
  %.143 = bitcast i8* %.141 to %MemberExpression_vtable_ty.580342**
  store %MemberExpression_vtable_ty.580342* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.580342** %.143, align 8
  call void @MemberExpression_constructor(%MemberExpression.580341* %.142, %Expression.580293* %.2, %PropId.580339* %.37, %Type.580273* %.49)
  %member_exp = alloca %MemberExpression.580341*, align 8
  %7 = bitcast %MemberExpression.580341** %member_exp to i8**
  store i8* %.141, i8** %7, align 8
  %8 = bitcast %Expression.580293** %right to i64*
  %.1477 = load i64, i64* %8, align 8
  %.149 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %9 = bitcast i8* %.149 to i64*
  store i64 %.1477, i64* %9, align 8
  %.153 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.155 = bitcast i8* %.153 to %"Array<Expression>_vtable_ty.580312"**
  store %"Array<Expression>_vtable_ty.580312"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.580312"** %.155, align 8
  %.157 = getelementptr inbounds i8, i8* %.153, i64 8
  %10 = bitcast i8* %.157 to i8**
  store i8* %.149, i8** %10, align 8
  %.159 = getelementptr inbounds i8, i8* %.153, i64 16
  %11 = bitcast i8* %.159 to i64*
  store i64 1, i64* %11, align 8
  %.161 = getelementptr inbounds i8, i8* %.153, i64 24
  %12 = bitcast i8* %.161 to i64*
  store i64 8, i64* %12, align 8
  %13 = bitcast %MemberExpression.580341** %member_exp to %Expression.580293**
  %.1648 = load %Expression.580293*, %Expression.580293** %13, align 8
  %.166.cast = bitcast i8* %.153 to %"Array<Expression>.580311"*
  %.167 = load %FunctionType.580279*, %FunctionType.580279** %method_type, align 8
  %.168 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.167, i64 0, i32 3
  %.169 = load %Type.580273*, %Type.580273** %.168, align 8
  %.170 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.171 = bitcast i8* %.170 to %CallExpression.580329*
  %.172 = bitcast i8* %.170 to %CallExpression_vtable_ty.580330**
  store %CallExpression_vtable_ty.580330* @CallExpression_vtable_data, %CallExpression_vtable_ty.580330** %.172, align 8
  call void @CallExpression_constructor(%CallExpression.580329* %.171, %Expression.580293* %.1648, %"Array<Expression>.580311"* %.166.cast, %Type.580273* %.169)
  %.175 = bitcast i8* %.170 to %Expression.580293*
  ret %Expression.580293* %.175
}

define noalias %Expression.580293* @TypeChecker_check_object_binary_expr(%TypeChecker.580449* %.1, %Expression.580293* %.2, %BinaryExpressionNode.580205* nocapture readonly %.3, %Expression.580293* %.4) {
.6:
  %.12 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 0, i32 4
  %0 = bitcast %Type.580273** %.12 to %ObjectType.580297**
  %.135 = load %ObjectType.580297*, %ObjectType.580297** %0, align 8
  %.17 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 5
  %.18 = load i64, i64* %.17, align 8
  %.21 = call %string.580129* @bin_op_to_op_overload_name(i64 %.18)
  %1 = ptrtoint %string.580129* %.21 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, 0
  br i1 %.26, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.29 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.30 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.29, align 8
  %.31 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.30, i64 0, i32 16
  %.32 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.31, align 8
  %.34 = call %string.580129* @dump_bin_op(i64 %.18)
  %.35 = getelementptr inbounds %string.580129, %string.580129* %.34, i64 0, i32 0
  %.36 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.35, align 8
  %.37 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.36, i64 0, i32 10
  %.38 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.37, align 8
  %.39 = call i8* %.38(%string.580129* %.34)
  %.41 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.310, i64 0, i64 0), i8* %.39)
  %.43 = call i8* @malloc(i64 %.41)
  %.44 = call i64 (i8*, i8*, ...) @sprintf(i8* %.43, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.310, i64 0, i64 0), i8* %.39)
  %.45 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.46 = bitcast i8* %.45 to %string.580129*
  %.47 = bitcast i8* %.45 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.47, align 8
  %.49 = getelementptr inbounds i8, i8* %.45, i64 8
  %2 = bitcast i8* %.49 to i8**
  store i8* %.43, i8** %2, align 8
  %.51 = getelementptr inbounds i8, i8* %.45, i64 16
  %3 = bitcast i8* %.51 to i64*
  store i64 %.41, i64* %3, align 8
  %.53 = getelementptr inbounds i8, i8* %.45, i64 24
  %4 = bitcast i8* %.53 to i64*
  store i64 %.41, i64* %4, align 8
  %.56 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 1
  %.57 = load %FloRange.580135*, %FloRange.580135** %.56, align 8
  call void %.32(%TypeChecker.580449* %.1, i64 4, %string.580129* %.46, %FloRange.580135* %.57)
  ret %Expression.580293* null

.6.endif:                                         ; preds = %.6
  %.61 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.62 = load %Program.580445*, %Program.580445** %.61, align 8
  %.64 = getelementptr inbounds %ObjectType.580297, %ObjectType.580297* %.135, i64 0, i32 2
  %.65 = load %ClassId.580289*, %ClassId.580289** %.64, align 8
  %.66 = call %Class.580403* @get_class(%Program.580445* %.62, %ClassId.580289* %.65)
  %.69 = getelementptr inbounds %Class.580403, %Class.580403* %.66, i64 0, i32 7
  %.70 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.69, align 8
  %.71 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.70, i64 0, i32 0
  %.72 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.71, align 8
  %.73 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.72, i64 0, i32 3
  %.74 = load %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)** %.73, align 8
  %.76 = call %PropId.580339* %.74(%"Map<string, PropId>.580407"* %.70, %string.580129* %.21)
  %5 = ptrtoint %PropId.580339* %.76 to i64
  %.79 = trunc i64 %5 to i32
  %.81 = icmp eq i32 %.79, 0
  br i1 %.81, label %.6.endif.if, label %.6.endif.endif

.6.endif.if:                                      ; preds = %.6.endif
  %.84 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.85 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.84, align 8
  %.86 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.85, i64 0, i32 16
  %.87 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.86, align 8
  %.89 = call %string.580129* @dump_bin_op(i64 %.18)
  %.91 = getelementptr inbounds %Class.580403, %Class.580403* %.66, i64 0, i32 2
  %.92 = load %string.580129*, %string.580129** %.91, align 8
  %.94 = getelementptr inbounds %string.580129, %string.580129* %.89, i64 0, i32 0
  %.95 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.94, align 8
  %.96 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.95, i64 0, i32 10
  %.97 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.96, align 8
  %.98 = call i8* %.97(%string.580129* %.89)
  %.99 = getelementptr inbounds %string.580129, %string.580129* %.92, i64 0, i32 0
  %.100 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.99, align 8
  %.101 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.100, i64 0, i32 10
  %.102 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.101, align 8
  %.103 = call i8* %.102(%string.580129* %.92)
  %.104 = getelementptr inbounds %string.580129, %string.580129* %.21, i64 0, i32 0
  %.105 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.104, align 8
  %.106 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.105, i64 0, i32 10
  %.107 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.106, align 8
  %.108 = call i8* %.107(%string.580129* %.21)
  %.110 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @str.311, i64 0, i64 0), i8* %.98, i8* %.103, i8* %.108)
  %.112 = call i8* @malloc(i64 %.110)
  %.113 = call i64 (i8*, i8*, ...) @sprintf(i8* %.112, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @str.311, i64 0, i64 0), i8* %.98, i8* %.103, i8* %.108)
  %.114 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.115 = bitcast i8* %.114 to %string.580129*
  %.116 = bitcast i8* %.114 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.116, align 8
  %.118 = getelementptr inbounds i8, i8* %.114, i64 8
  %6 = bitcast i8* %.118 to i8**
  store i8* %.112, i8** %6, align 8
  %.120 = getelementptr inbounds i8, i8* %.114, i64 16
  %7 = bitcast i8* %.120 to i64*
  store i64 %.110, i64* %7, align 8
  %.122 = getelementptr inbounds i8, i8* %.114, i64 24
  %8 = bitcast i8* %.122 to i64*
  store i64 %.110, i64* %8, align 8
  %.125 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 1
  %.126 = load %FloRange.580135*, %FloRange.580135** %.125, align 8
  call void %.87(%TypeChecker.580449* %.1, i64 1, %string.580129* %.115, %FloRange.580135* %.126)
  ret %Expression.580293* null

.6.endif.endif:                                   ; preds = %.6.endif
  %.131 = load %Program.580445*, %Program.580445** %.61, align 8
  %.133 = call %Type.580273* @get_class_prop_type(%Program.580445* %.131, %PropId.580339* %.76)
  %method_type = alloca %FunctionType.580279*, align 8
  %9 = bitcast %FunctionType.580279** %method_type to %Type.580273**
  store %Type.580273* %.133, %Type.580273** %9, align 8
  %.137 = getelementptr inbounds %Type.580273, %Type.580273* %.133, i64 1
  %10 = bitcast %Type.580273* %.137 to %"Array<Type>.580281"**
  %.138 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %10, align 8
  %.139 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.138, i64 0, i32 0
  %.140 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.139, align 8
  %.141 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.140, i64 0, i32 5
  %.142 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.141, align 8
  %.143 = call %Type.580273* %.142(%"Array<Type>.580281"* %.138, i64 0)
  %11 = ptrtoint %Expression.580293* %.4 to i64
  %.146 = trunc i64 %11 to i32
  %.148 = icmp eq i32 %.146, 0
  br i1 %.148, label %.6.endif.endif.if, label %.6.endif.endif.endif

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.151 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.152 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.151, align 8
  %.153 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.152, i64 0, i32 60
  %.154 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.153, align 8
  %.157 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 6
  %.158 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.157, align 8
  %.159 = call %Expression.580293* %.154(%TypeChecker.580449* %.1, %Type.580273* %.143, %ExpressionNode.580177* %.158)
  br label %.6.endif.endif.endif

.6.endif.endif.endif:                             ; preds = %.6.endif.endif.if, %.6.endif.endif
  %right.0 = phi %Expression.580293* [ %.159, %.6.endif.endif.if ], [ %.4, %.6.endif.endif ]
  %.163 = call i1 @is_null(%Expression.580293* %right.0)
  %12 = and i64 %.18, -2
  %13 = icmp eq i64 %12, 10
  %.169 = and i1 %13, %.163
  br i1 %.169, label %.6.endif.endif.endif.if, label %.6.endif.endif.endif.endif

.6.endif.endif.endif.if:                          ; preds = %.6.endif.endif.endif
  %.174 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.175 = bitcast i8* %.174 to %BooleanType.580275*
  %.176 = bitcast i8* %.174 to %BooleanType_vtable_ty.580276**
  store %BooleanType_vtable_ty.580276* @BooleanType_vtable_data, %BooleanType_vtable_ty.580276** %.176, align 8
  call void @BooleanType_constructor(%BooleanType.580275* %.175)
  %.179 = bitcast i8* %.174 to %Type.580273*
  %.180 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.181 = bitcast i8* %.180 to %BinaryExpression.580317*
  %.182 = bitcast i8* %.180 to %BinaryExpression_vtable_ty.580318**
  store %BinaryExpression_vtable_ty.580318* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.580318** %.182, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.580317* %.181, %Expression.580293* %.2, i64 %.18, %Expression.580293* %right.0, %Type.580273* %.179, i1 false)
  %.185 = bitcast i8* %.180 to %Expression.580293*
  ret %Expression.580293* %.185

.6.endif.endif.endif.endif:                       ; preds = %.6.endif.endif.endif
  %.188 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.189 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.188, align 8
  %.190 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.189, i64 0, i32 9
  %.191 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.190, align 8
  %.194 = getelementptr inbounds %Expression.580293, %Expression.580293* %right.0, i64 0, i32 4
  %.195 = load %Type.580273*, %Type.580273** %.194, align 8
  %.196 = call i1 %.191(%TypeChecker.580449* %.1, %Type.580273* %.143, %Type.580273* %.195)
  br i1 %.196, label %.6.endif.endif.endif.endif.endif, label %.6.endif.endif.endif.endif.if

.6.endif.endif.endif.endif.if:                    ; preds = %.6.endif.endif.endif.endif
  %.201 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.188, align 8
  %.202 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.201, i64 0, i32 16
  %.203 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.202, align 8
  %.207 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.201, i64 0, i32 10
  %.208 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.207, align 8
  %.210 = call %string.580129* %.208(%TypeChecker.580449* %.1, %Type.580273* %.143)
  %.213 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.188, align 8
  %.214 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.213, i64 0, i32 10
  %.215 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.214, align 8
  %.218 = load %Type.580273*, %Type.580273** %.194, align 8
  %.219 = call %string.580129* %.215(%TypeChecker.580449* %.1, %Type.580273* %.218)
  %.220 = getelementptr inbounds %string.580129, %string.580129* %.210, i64 0, i32 0
  %.221 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.220, align 8
  %.222 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.221, i64 0, i32 10
  %.223 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.222, align 8
  %.224 = call i8* %.223(%string.580129* %.210)
  %.225 = getelementptr inbounds %string.580129, %string.580129* %.219, i64 0, i32 0
  %.226 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.225, align 8
  %.227 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.226, i64 0, i32 10
  %.228 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.227, align 8
  %.229 = call i8* %.228(%string.580129* %.219)
  %.231 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.309, i64 0, i64 0), i8* %.224, i8* %.229)
  %.233 = call i8* @malloc(i64 %.231)
  %.234 = call i64 (i8*, i8*, ...) @sprintf(i8* %.233, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.309, i64 0, i64 0), i8* %.224, i8* %.229)
  %.235 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.236 = bitcast i8* %.235 to %string.580129*
  %.237 = bitcast i8* %.235 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.237, align 8
  %.239 = getelementptr inbounds i8, i8* %.235, i64 8
  %14 = bitcast i8* %.239 to i8**
  store i8* %.233, i8** %14, align 8
  %.241 = getelementptr inbounds i8, i8* %.235, i64 16
  %15 = bitcast i8* %.241 to i64*
  store i64 %.231, i64* %15, align 8
  %.243 = getelementptr inbounds i8, i8* %.235, i64 24
  %16 = bitcast i8* %.243 to i64*
  store i64 %.231, i64* %16, align 8
  %.246 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 6
  %.247 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.246, align 8
  %.248 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.247, i64 0, i32 1
  %.249 = load %FloRange.580135*, %FloRange.580135** %.248, align 8
  call void %.203(%TypeChecker.580449* %.1, i64 5, %string.580129* %.236, %FloRange.580135* %.249)
  ret %Expression.580293* null

.6.endif.endif.endif.endif.endif:                 ; preds = %.6.endif.endif.endif.endif
  %.256 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.257 = bitcast i8* %.256 to %MemberExpression.580341*
  %.258 = bitcast i8* %.256 to %MemberExpression_vtable_ty.580342**
  store %MemberExpression_vtable_ty.580342* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.580342** %.258, align 8
  call void @MemberExpression_constructor(%MemberExpression.580341* %.257, %Expression.580293* %.2, %PropId.580339* %.76, %Type.580273* %.133)
  %member_exp = alloca %MemberExpression.580341*, align 8
  %17 = bitcast %MemberExpression.580341** %member_exp to i8**
  store i8* %.256, i8** %17, align 8
  %.264 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %.265 = bitcast i8* %.264 to %Expression.580293**
  store %Expression.580293* %right.0, %Expression.580293** %.265, align 8
  %.268 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.270 = bitcast i8* %.268 to %"Array<Expression>_vtable_ty.580312"**
  store %"Array<Expression>_vtable_ty.580312"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.580312"** %.270, align 8
  %.272 = getelementptr inbounds i8, i8* %.268, i64 8
  %18 = bitcast i8* %.272 to i8**
  store i8* %.264, i8** %18, align 8
  %.274 = getelementptr inbounds i8, i8* %.268, i64 16
  %19 = bitcast i8* %.274 to i64*
  store i64 1, i64* %19, align 8
  %.276 = getelementptr inbounds i8, i8* %.268, i64 24
  %20 = bitcast i8* %.276 to i64*
  store i64 8, i64* %20, align 8
  %21 = bitcast %MemberExpression.580341** %member_exp to %Expression.580293**
  %.2797 = load %Expression.580293*, %Expression.580293** %21, align 8
  %.281.cast = bitcast i8* %.268 to %"Array<Expression>.580311"*
  %.282 = load %FunctionType.580279*, %FunctionType.580279** %method_type, align 8
  %.283 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.282, i64 0, i32 3
  %.284 = load %Type.580273*, %Type.580273** %.283, align 8
  %.285 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.286 = bitcast i8* %.285 to %CallExpression.580329*
  %.287 = bitcast i8* %.285 to %CallExpression_vtable_ty.580330**
  store %CallExpression_vtable_ty.580330* @CallExpression_vtable_data, %CallExpression_vtable_ty.580330** %.287, align 8
  call void @CallExpression_constructor(%CallExpression.580329* %.286, %Expression.580293* %.2797, %"Array<Expression>.580311"* %.281.cast, %Type.580273* %.284)
  %.290 = bitcast i8* %.285 to %Expression.580293*
  ret %Expression.580293* %.290
}

define noalias %Expression.580293* @TypeChecker_check_object_setitem_expr(%TypeChecker.580449* %.1, %Expression.580293* %.2, %BinaryExpressionNode.580205* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 0, i32 4
  %0 = bitcast %Type.580273** %.10 to %ObjectType.580297**
  %.112 = load %ObjectType.580297*, %ObjectType.580297** %0, align 8
  %.15 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 4
  %1 = bitcast %ExpressionNode.580177** %.15 to %ExpressionIndexNode.580197**
  %.164 = load %ExpressionIndexNode.580197*, %ExpressionIndexNode.580197** %1, align 8
  %.20 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.21 = load %Program.580445*, %Program.580445** %.20, align 8
  %.23 = getelementptr inbounds %ObjectType.580297, %ObjectType.580297* %.112, i64 0, i32 2
  %.24 = load %ClassId.580289*, %ClassId.580289** %.23, align 8
  %.25 = call %Class.580403* @get_class(%Program.580445* %.21, %ClassId.580289* %.24)
  %.28 = getelementptr inbounds %Class.580403, %Class.580403* %.25, i64 0, i32 7
  %.29 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.28, align 8
  %.30 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.29, i64 0, i32 0
  %.31 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.31, i64 0, i32 3
  %.33 = load %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)** %.32, align 8
  %.34 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.35 = bitcast i8* %.34 to %string.580129*
  %.35.repack = bitcast i8* %.34 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.35.repack, align 8
  %.35.repack5 = getelementptr inbounds i8, i8* %.34, i64 8
  %2 = bitcast i8* %.35.repack5 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.244, i64 0, i64 0), i8** %2, align 8
  %.35.repack6 = getelementptr inbounds i8, i8* %.34, i64 16
  %3 = bitcast i8* %.35.repack6 to i64*
  store i64 11, i64* %3, align 8
  %.35.repack7 = getelementptr inbounds i8, i8* %.34, i64 24
  %4 = bitcast i8* %.35.repack7 to i64*
  store i64 11, i64* %4, align 8
  %.37 = call %PropId.580339* %.33(%"Map<string, PropId>.580407"* %.29, %string.580129* %.35)
  %5 = ptrtoint %PropId.580339* %.37 to i64
  %.40 = trunc i64 %5 to i32
  %.42 = icmp eq i32 %.40, 0
  br i1 %.42, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.45 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.46 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.45, align 8
  %.47 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.46, i64 0, i32 16
  %.48 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.47, align 8
  %.50 = getelementptr inbounds %Class.580403, %Class.580403* %.25, i64 0, i32 2
  %.51 = load %string.580129*, %string.580129** %.50, align 8
  %.52 = getelementptr inbounds %string.580129, %string.580129* %.51, i64 0, i32 0
  %.53 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.52, align 8
  %.54 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.53, i64 0, i32 10
  %.55 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.54, align 8
  %.56 = call i8* %.55(%string.580129* %.51)
  %.58 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @str.312, i64 0, i64 0), i8* %.56)
  %.60 = call i8* @malloc(i64 %.58)
  %.61 = call i64 (i8*, i8*, ...) @sprintf(i8* %.60, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @str.312, i64 0, i64 0), i8* %.56)
  %.62 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.63 = bitcast i8* %.62 to %string.580129*
  %.64 = bitcast i8* %.62 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.64, align 8
  %.66 = getelementptr inbounds i8, i8* %.62, i64 8
  %6 = bitcast i8* %.66 to i8**
  store i8* %.60, i8** %6, align 8
  %.68 = getelementptr inbounds i8, i8* %.62, i64 16
  %7 = bitcast i8* %.68 to i64*
  store i64 %.58, i64* %7, align 8
  %.70 = getelementptr inbounds i8, i8* %.62, i64 24
  %8 = bitcast i8* %.70 to i64*
  store i64 %.58, i64* %8, align 8
  %.73 = getelementptr inbounds %ExpressionIndexNode.580197, %ExpressionIndexNode.580197* %.164, i64 0, i32 1
  %.74 = load %FloRange.580135*, %FloRange.580135** %.73, align 8
  call void %.48(%TypeChecker.580449* %.1, i64 4, %string.580129* %.63, %FloRange.580135* %.74)
  ret %Expression.580293* null

.5.endif:                                         ; preds = %.5
  %.79 = load %Program.580445*, %Program.580445** %.20, align 8
  %.81 = call %Type.580273* @get_class_prop_type(%Program.580445* %.79, %PropId.580339* %.37)
  %method_type = alloca %FunctionType.580279*, align 8
  %9 = bitcast %FunctionType.580279** %method_type to %Type.580273**
  store %Type.580273* %.81, %Type.580273** %9, align 8
  %.85 = getelementptr inbounds %Type.580273, %Type.580273* %.81, i64 1
  %10 = bitcast %Type.580273* %.85 to %"Array<Type>.580281"**
  %.86 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %10, align 8
  %.87 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.86, i64 0, i32 0
  %.88 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.87, align 8
  %.89 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.88, i64 0, i32 5
  %.90 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.89, align 8
  %.91 = call %Type.580273* %.90(%"Array<Type>.580281"* %.86, i64 0)
  %.93 = load %FunctionType.580279*, %FunctionType.580279** %method_type, align 8
  %.94 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.93, i64 0, i32 2
  %.95 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.94, align 8
  %.96 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.95, i64 0, i32 0
  %.97 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.96, align 8
  %.98 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.97, i64 0, i32 5
  %.99 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.98, align 8
  %.100 = call %Type.580273* %.99(%"Array<Type>.580281"* %.95, i64 1)
  %.103 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.104 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.103, align 8
  %.105 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.104, i64 0, i32 60
  %.106 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.105, align 8
  %.109 = getelementptr inbounds %ExpressionIndexNode.580197, %ExpressionIndexNode.580197* %.164, i64 0, i32 5
  %.110 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.109, align 8
  %.111 = call %Expression.580293* %.106(%TypeChecker.580449* %.1, %Type.580273* %.91, %ExpressionNode.580177* %.110)
  %index = alloca %Expression.580293*, align 8
  store %Expression.580293* %.111, %Expression.580293** %index, align 8
  %.115 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.103, align 8
  %.116 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.115, i64 0, i32 9
  %.117 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.116, align 8
  %.120 = getelementptr inbounds %Expression.580293, %Expression.580293* %.111, i64 0, i32 4
  %.121 = load %Type.580273*, %Type.580273** %.120, align 8
  %.122 = call i1 %.117(%TypeChecker.580449* %.1, %Type.580273* %.91, %Type.580273* %.121)
  %.180 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.103, align 8
  br i1 %.122, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.128 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.180, i64 0, i32 16
  %.129 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.128, align 8
  %.133 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.180, i64 0, i32 10
  %.134 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.133, align 8
  %.136 = call %string.580129* %.134(%TypeChecker.580449* %.1, %Type.580273* %.91)
  %.139 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.103, align 8
  %.140 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.139, i64 0, i32 10
  %.141 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.140, align 8
  %.144 = load %Type.580273*, %Type.580273** %.120, align 8
  %.145 = call %string.580129* %.141(%TypeChecker.580449* %.1, %Type.580273* %.144)
  %.146 = getelementptr inbounds %string.580129, %string.580129* %.136, i64 0, i32 0
  %.147 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.146, align 8
  %.148 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.147, i64 0, i32 10
  %.149 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.148, align 8
  %.150 = call i8* %.149(%string.580129* %.136)
  %.151 = getelementptr inbounds %string.580129, %string.580129* %.145, i64 0, i32 0
  %.152 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.151, align 8
  %.153 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.152, i64 0, i32 10
  %.154 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.153, align 8
  %.155 = call i8* %.154(%string.580129* %.145)
  %.157 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.309, i64 0, i64 0), i8* %.150, i8* %.155)
  %.159 = call i8* @malloc(i64 %.157)
  %.160 = call i64 (i8*, i8*, ...) @sprintf(i8* %.159, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.309, i64 0, i64 0), i8* %.150, i8* %.155)
  %.161 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.162 = bitcast i8* %.161 to %string.580129*
  %.163 = bitcast i8* %.161 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.163, align 8
  %.165 = getelementptr inbounds i8, i8* %.161, i64 8
  %11 = bitcast i8* %.165 to i8**
  store i8* %.159, i8** %11, align 8
  %.167 = getelementptr inbounds i8, i8* %.161, i64 16
  %12 = bitcast i8* %.167 to i64*
  store i64 %.157, i64* %12, align 8
  %.169 = getelementptr inbounds i8, i8* %.161, i64 24
  %13 = bitcast i8* %.169 to i64*
  store i64 %.157, i64* %13, align 8
  %.173 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.109, align 8
  %.174 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.173, i64 0, i32 1
  %.175 = load %FloRange.580135*, %FloRange.580135** %.174, align 8
  call void %.129(%TypeChecker.580449* %.1, i64 5, %string.580129* %.162, %FloRange.580135* %.175)
  ret %Expression.580293* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.181 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.180, i64 0, i32 60
  %.182 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.181, align 8
  %.185 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 6
  %.186 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.185, align 8
  %.187 = call %Expression.580293* %.182(%TypeChecker.580449* %.1, %Type.580273* %.100, %ExpressionNode.580177* %.186)
  %value = alloca %Expression.580293*, align 8
  store %Expression.580293* %.187, %Expression.580293** %value, align 8
  %.191 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.103, align 8
  %.192 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.191, i64 0, i32 9
  %.193 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.192, align 8
  %.197 = load %Type.580273*, %Type.580273** %.120, align 8
  %.198 = call i1 %.193(%TypeChecker.580449* %.1, %Type.580273* %.91, %Type.580273* %.197)
  br i1 %.198, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.203 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.103, align 8
  %.204 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.203, i64 0, i32 16
  %.205 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.204, align 8
  %.209 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.203, i64 0, i32 10
  %.210 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.209, align 8
  %.212 = call %string.580129* %.210(%TypeChecker.580449* %.1, %Type.580273* %.100)
  %.215 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.103, align 8
  %.216 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.215, i64 0, i32 10
  %.217 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.216, align 8
  %.219 = getelementptr inbounds %Expression.580293, %Expression.580293* %.187, i64 0, i32 4
  %.220 = load %Type.580273*, %Type.580273** %.219, align 8
  %.221 = call %string.580129* %.217(%TypeChecker.580449* %.1, %Type.580273* %.220)
  %.222 = getelementptr inbounds %string.580129, %string.580129* %.212, i64 0, i32 0
  %.223 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.222, align 8
  %.224 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.223, i64 0, i32 10
  %.225 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.224, align 8
  %.226 = call i8* %.225(%string.580129* %.212)
  %.227 = getelementptr inbounds %string.580129, %string.580129* %.221, i64 0, i32 0
  %.228 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.227, align 8
  %.229 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.228, i64 0, i32 10
  %.230 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.229, align 8
  %.231 = call i8* %.230(%string.580129* %.221)
  %.233 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.309, i64 0, i64 0), i8* %.226, i8* %.231)
  %.235 = call i8* @malloc(i64 %.233)
  %.236 = call i64 (i8*, i8*, ...) @sprintf(i8* %.235, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.309, i64 0, i64 0), i8* %.226, i8* %.231)
  %.237 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.238 = bitcast i8* %.237 to %string.580129*
  %.239 = bitcast i8* %.237 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.239, align 8
  %.241 = getelementptr inbounds i8, i8* %.237, i64 8
  %14 = bitcast i8* %.241 to i8**
  store i8* %.235, i8** %14, align 8
  %.243 = getelementptr inbounds i8, i8* %.237, i64 16
  %15 = bitcast i8* %.243 to i64*
  store i64 %.233, i64* %15, align 8
  %.245 = getelementptr inbounds i8, i8* %.237, i64 24
  %16 = bitcast i8* %.245 to i64*
  store i64 %.233, i64* %16, align 8
  %.249 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.185, align 8
  %.250 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.249, i64 0, i32 1
  %.251 = load %FloRange.580135*, %FloRange.580135** %.250, align 8
  call void %.205(%TypeChecker.580449* %.1, i64 5, %string.580129* %.238, %FloRange.580135* %.251)
  ret %Expression.580293* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.258 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.259 = bitcast i8* %.258 to %MemberExpression.580341*
  %.260 = bitcast i8* %.258 to %MemberExpression_vtable_ty.580342**
  store %MemberExpression_vtable_ty.580342* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.580342** %.260, align 8
  call void @MemberExpression_constructor(%MemberExpression.580341* %.259, %Expression.580293* %.2, %PropId.580339* %.37, %Type.580273* %.81)
  %member_expr = alloca %MemberExpression.580341*, align 8
  %17 = bitcast %MemberExpression.580341** %member_expr to i8**
  store i8* %.258, i8** %17, align 8
  %18 = bitcast %Expression.580293** %index to i64*
  %.2649 = load i64, i64* %18, align 8
  %19 = bitcast %Expression.580293** %value to i64*
  %.26510 = load i64, i64* %19, align 8
  %.267 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %20 = bitcast i8* %.267 to i64*
  store i64 %.2649, i64* %20, align 8
  %.271 = getelementptr inbounds i8, i8* %.267, i64 8
  %21 = bitcast i8* %.271 to i64*
  store i64 %.26510, i64* %21, align 8
  %.273 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.275 = bitcast i8* %.273 to %"Array<Expression>_vtable_ty.580312"**
  store %"Array<Expression>_vtable_ty.580312"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.580312"** %.275, align 8
  %.277 = getelementptr inbounds i8, i8* %.273, i64 8
  %22 = bitcast i8* %.277 to i8**
  store i8* %.267, i8** %22, align 8
  %.279 = getelementptr inbounds i8, i8* %.273, i64 16
  %23 = bitcast i8* %.279 to i64*
  store i64 2, i64* %23, align 8
  %.281 = getelementptr inbounds i8, i8* %.273, i64 24
  %24 = bitcast i8* %.281 to i64*
  store i64 16, i64* %24, align 8
  %25 = bitcast %MemberExpression.580341** %member_expr to %Expression.580293**
  %.28411 = load %Expression.580293*, %Expression.580293** %25, align 8
  %.286.cast = bitcast i8* %.273 to %"Array<Expression>.580311"*
  %.288 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.93, i64 0, i32 3
  %.289 = load %Type.580273*, %Type.580273** %.288, align 8
  %.290 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.291 = bitcast i8* %.290 to %CallExpression.580329*
  %.292 = bitcast i8* %.290 to %CallExpression_vtable_ty.580330**
  store %CallExpression_vtable_ty.580330* @CallExpression_vtable_data, %CallExpression_vtable_ty.580330** %.292, align 8
  call void @CallExpression_constructor(%CallExpression.580329* %.291, %Expression.580293* %.28411, %"Array<Expression>.580311"* %.286.cast, %Type.580273* %.289)
  %.295 = bitcast i8* %.290 to %Expression.580293*
  ret %Expression.580293* %.295
}

define %BinaryExpression.580317* @TypeChecker_check_bin_expr(%TypeChecker.580449* %.1, %Type.580273* %.2, %BinaryExpressionNode.580205* %.3) {
.5:
  %.10 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 5
  %.11 = load i64, i64* %.10, align 8
  %.11.off = add i64 %.11, -18
  %0 = icmp ult i64 %.11.off, 12
  %.20 = icmp eq i64 %.11, 18
  %.22 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 4
  %.23 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.22, align 8
  %.24 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.23, i64 0, i32 3
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp eq i64 %.25, 13
  %.27 = and i1 %.20, %.26
  br i1 %.27, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.30 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.31 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.30, align 8
  %.32 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.31, i64 0, i32 60
  %.33 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.32, align 8
  %.34 = call %Type.580273* @Type_unknown()
  %1 = bitcast %ExpressionNode.580177** %.22 to %ExpressionIndexNode.580197**
  %.3710 = load %ExpressionIndexNode.580197*, %ExpressionIndexNode.580197** %1, align 8
  %.39 = getelementptr inbounds %ExpressionIndexNode.580197, %ExpressionIndexNode.580197* %.3710, i64 0, i32 4
  %.40 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.39, align 8
  %.41 = call %Expression.580293* %.33(%TypeChecker.580449* %.1, %Type.580273* %.34, %ExpressionNode.580177* %.40)
  %.44 = getelementptr inbounds %Expression.580293, %Expression.580293* %.41, i64 0, i32 4
  %.45 = load %Type.580273*, %Type.580273** %.44, align 8
  %.46 = call i1 @is_object(%Type.580273* %.45)
  br i1 %.46, label %.5.if.if, label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.60 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.61 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.60, align 8
  %.62 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.61, i64 0, i32 60
  %.63 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.62, align 8
  %.67 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.22, align 8
  %.68 = call %Expression.580293* %.63(%TypeChecker.580449* %.1, %Type.580273* %.2, %ExpressionNode.580177* %.67)
  %left = alloca %Expression.580293*, align 8
  store %Expression.580293* %.68, %Expression.580293** %left, align 8
  %.72 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.60, align 8
  %.73 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.72, i64 0, i32 17
  %.74 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.73, align 8
  %.75 = call i1 %.74(%TypeChecker.580449* %.1)
  br i1 %.75, label %.5.endif.if, label %.5.endif.endif

.5.if.if:                                         ; preds = %.5.if
  %.50 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.30, align 8
  %.51 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.50, i64 0, i32 41
  %.52 = load %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*)** %.51, align 8
  %.55 = call %Expression.580293* %.52(%TypeChecker.580449* %.1, %Expression.580293* %.41, %BinaryExpressionNode.580205* %.3)
  %.56 = bitcast %Expression.580293* %.55 to %BinaryExpression.580317*
  ret %BinaryExpression.580317* %.56

.5.endif.if:                                      ; preds = %.5.endif.endif.endif.endif, %.5.endif
  ret %BinaryExpression.580317* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.78 = load %Expression.580293*, %Expression.580293** %left, align 8
  %.79 = getelementptr inbounds %Expression.580293, %Expression.580293* %.78, i64 0, i32 4
  %.80 = load %Type.580273*, %Type.580273** %.79, align 8
  %.81 = call i1 @is_object(%Type.580273* %.80)
  %.83 = xor i1 %0, true
  %.84 = and i1 %.81, %.83
  %.88 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.60, align 8
  br i1 %.84, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.89 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.88, i64 0, i32 40
  %.90 = load %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*, %Expression.580293*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*, %Expression.580293*)** %.89, align 8
  %.93 = call %Expression.580293* %.90(%TypeChecker.580449* %.1, %Expression.580293* %.78, %BinaryExpressionNode.580205* %.3, %Expression.580293* null)
  %.94 = bitcast %Expression.580293* %.93 to %BinaryExpression.580317*
  ret %BinaryExpression.580317* %.94

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.99 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.88, i64 0, i32 60
  %.100 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.99, align 8
  %.105 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 6
  %.106 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.105, align 8
  %.107 = call %Expression.580293* %.100(%TypeChecker.580449* %.1, %Type.580273* %.80, %ExpressionNode.580177* %.106)
  %right = alloca %Expression.580293*, align 8
  store %Expression.580293* %.107, %Expression.580293** %right, align 8
  %.110 = getelementptr inbounds %Expression.580293, %Expression.580293* %.107, i64 0, i32 4
  %.111 = load %Type.580273*, %Type.580273** %.110, align 8
  %.112 = call i1 @is_object(%Type.580273* %.111)
  %.114 = icmp eq i64 %.11, 17
  %.115 = and i1 %.114, %.112
  %.119 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.60, align 8
  br i1 %.115, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.120 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.119, i64 0, i32 40
  %.121 = load %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*, %Expression.580293*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %BinaryExpressionNode.580205*, %Expression.580293*)** %.120, align 8
  %.124 = load %Expression.580293*, %Expression.580293** %left, align 8
  %.125 = call %Expression.580293* %.121(%TypeChecker.580449* %.1, %Expression.580293* %.107, %BinaryExpressionNode.580205* %.3, %Expression.580293* %.124)
  %.126 = bitcast %Expression.580293* %.125 to %BinaryExpression.580317*
  ret %BinaryExpression.580317* %.126

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.119, i64 0, i32 17
  %.132 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.131, align 8
  %.133 = call i1 %.132(%TypeChecker.580449* %.1)
  br i1 %.133, label %.5.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.136 = load %Expression.580293*, %Expression.580293** %left, align 8
  %.137 = getelementptr inbounds %Expression.580293, %Expression.580293* %.136, i64 0, i32 2
  %.138 = load i1, i1* %.137, align 1
  %.139 = load %Expression.580293*, %Expression.580293** %right, align 8
  %.140 = getelementptr inbounds %Expression.580293, %Expression.580293* %.139, i64 0, i32 2
  %.141 = load i1, i1* %.140, align 1
  %.142 = and i1 %.138, %.141
  br i1 %0, label %.5.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif.endif.endif.endif
  %.148 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.60, align 8
  %.149 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.148, i64 0, i32 38
  %.150 = load %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %Expression.580293*, %BinaryExpressionNode.580205*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %Expression.580293*, %BinaryExpressionNode.580205*)** %.149, align 8
  %.154 = call %Expression.580293* %.150(%TypeChecker.580449* %.1, %Expression.580293* %.136, %Expression.580293* %.139, %BinaryExpressionNode.580205* %.3)
  %.155 = bitcast %Expression.580293* %.154 to %BinaryExpression.580317*
  ret %BinaryExpression.580317* %.155

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif
  %.158 = getelementptr inbounds %Expression.580293, %Expression.580293* %.136, i64 0, i32 4
  %.159 = load %Type.580273*, %Type.580273** %.158, align 8
  %.160 = getelementptr inbounds %Type.580273, %Type.580273* %.159, i64 0, i32 1
  %.161 = load i64, i64* %.160, align 8
  %.162 = icmp eq i64 %.161, 21
  %.164 = getelementptr inbounds %Expression.580293, %Expression.580293* %.139, i64 0, i32 4
  %.165 = load %Type.580273*, %Type.580273** %.164, align 8
  %.166 = getelementptr inbounds %Type.580273, %Type.580273* %.165, i64 0, i32 1
  %.167 = load i64, i64* %.166, align 8
  %.168 = icmp ne i64 %.167, 21
  %.169 = and i1 %.162, %.168
  br i1 %.169, label %.5.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5.endif.endif.endif.endif.endif.endif
  %2 = bitcast %Type.580273** %.164 to i64*
  %.1746 = load i64, i64* %2, align 8
  %3 = bitcast %Type.580273** %.158 to i64*
  store i64 %.1746, i64* %3, align 8
  br label %.5.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.5.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif
  %.180 = load %Type.580273*, %Type.580273** %.158, align 8
  %.181 = call i1 @is_numeric(%Type.580273* %.180)
  %.184 = load %Type.580273*, %Type.580273** %.164, align 8
  %.185 = call i1 @is_numeric(%Type.580273* %.184)
  %.186 = and i1 %.181, %.185
  br i1 %.186, label %.5.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.else

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5.endif.endif.endif.endif.endif.endif.endif
  %.189 = icmp eq i64 %.11, 5
  br i1 %.189, label %.5.endif.endif.endif.endif.endif.endif.endif.if.if, label %.5.endif.endif.endif.endif.endif.endif.endif.if.endif

.5.endif.endif.endif.endif.endif.endif.endif.else: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif
  %.318 = call i1 @is_bool(%Type.580273* %.180)
  %.322 = call i1 @is_bool(%Type.580273* %.184)
  %.323 = and i1 %.318, %.322
  %4 = and i64 %.11, -2
  %5 = icmp eq i64 %4, 14
  %or.cond = and i1 %5, %.323
  br i1 %or.cond, label %.5.endif.endif.endif.endi...if.2, label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.else, %.5.endif.endif.endif.endi...endif.1
  %.11.off1 = add i64 %.11, -6
  %6 = icmp ult i64 %.11.off1, 6
  br i1 %6, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.if.if: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if
  %.194 = call i1 @is_int(%Type.580273* %.180)
  br i1 %.194, label %.5.endif.endif.endif.endif.endif.endif.endif.if.if.if, label %.5.endif.endif.endif.endif.endif.endif.endif.if.if.endif

.5.endif.endif.endif.endif.endif.endif.endif.if.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if
  %7 = icmp ult i64 %.11, 10
  br i1 %7, label %.5.endif.endif.endif.endi...if.1, label %.5.endif.endif.endif.endi...endif.1

.5.endif.endif.endif.endif.endif.endif.endif.if.if.if: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if.if
  %.197 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.198 = bitcast i8* %.197 to %Type.580273*
  %.199 = bitcast i8* %.197 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.199, align 8
  call void @Type_constructor(%Type.580273* %.198, i64 11)
  %.202 = call %Expression.580293* @cast_exp_to_type(%Expression.580293* %.136, %Type.580273* %.198)
  store %Expression.580293* %.202, %Expression.580293** %left, align 8
  br label %.5.endif.endif.endif.endif.endif.endif.endif.if.if.endif

.5.endif.endif.endif.endif.endif.endif.endif.if.if.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if.if.if, %.5.endif.endif.endif.endif.endif.endif.endif.if.if
  %.205 = load %Expression.580293*, %Expression.580293** %right, align 8
  %.206 = getelementptr inbounds %Expression.580293, %Expression.580293* %.205, i64 0, i32 4
  %.207 = load %Type.580273*, %Type.580273** %.206, align 8
  %.208 = call i1 @is_int(%Type.580273* %.207)
  br i1 %.208, label %.5.endif.endif.endif.endi...if, label %.5.endif.endif.endif.endi...endif

.5.endif.endif.endif.endi...if:                   ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if.if.endif
  %.211 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.212 = bitcast i8* %.211 to %Type.580273*
  %.213 = bitcast i8* %.211 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.213, align 8
  call void @Type_constructor(%Type.580273* %.212, i64 11)
  %.216 = call %Expression.580293* @cast_exp_to_type(%Expression.580293* %.205, %Type.580273* %.212)
  store %Expression.580293* %.216, %Expression.580293** %right, align 8
  br label %.5.endif.endif.endif.endi...endif

.5.endif.endif.endif.endi...endif:                ; preds = %.5.endif.endif.endif.endi...if, %.5.endif.endif.endif.endif.endif.endif.endif.if.if.endif
  %.219 = load %Expression.580293*, %Expression.580293** %left, align 8
  %.221 = load %Expression.580293*, %Expression.580293** %right, align 8
  %.223 = getelementptr inbounds %Expression.580293, %Expression.580293* %.219, i64 0, i32 4
  %.224 = load %Type.580273*, %Type.580273** %.223, align 8
  %.225 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.226 = bitcast i8* %.225 to %BinaryExpression.580317*
  %.227 = bitcast i8* %.225 to %BinaryExpression_vtable_ty.580318**
  store %BinaryExpression_vtable_ty.580318* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.580318** %.227, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.580317* %.226, %Expression.580293* %.219, i64 %.11, %Expression.580293* %.221, %Type.580273* %.224, i1 false)
  ret %BinaryExpression.580317* %.226

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if.endif
  call void @check_cast_lower_bits(%Expression.580293** nonnull %left, %Expression.580293** nonnull %right)
  %.238 = load %Expression.580293*, %Expression.580293** %left, align 8
  %.239 = getelementptr inbounds %Expression.580293, %Expression.580293* %.238, i64 0, i32 4
  %8 = bitcast %Type.580273** %.239 to i64*
  %.2405 = load i64, i64* %8, align 8
  %exp_type = alloca %Type.580273*, align 8
  %9 = bitcast %Type.580273** %exp_type to i64*
  store i64 %.2405, i64* %9, align 8
  %.243 = icmp sgt i64 %.11, 5
  br i1 %.243, label %.5.endif.endif.endif.endi...if.1.if, label %.5.endif.endif.endif.endi...if.1.endif

.5.endif.endif.endif.endi...endif.1:              ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if.endif
  %.11.off4 = add i64 %.11, -12
  %10 = icmp ult i64 %.11.off4, 5
  br i1 %10, label %.5.endif.endif.endif.endi...endif.1.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endi...if.1.if:              ; preds = %.5.endif.endif.endif.endi...if.1
  %.248 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.249 = bitcast i8* %.248 to %BooleanType.580275*
  %.250 = bitcast i8* %.248 to %BooleanType_vtable_ty.580276**
  store %BooleanType_vtable_ty.580276* @BooleanType_vtable_data, %BooleanType_vtable_ty.580276** %.250, align 8
  call void @BooleanType_constructor(%BooleanType.580275* %.249)
  %11 = bitcast %Type.580273** %exp_type to i8**
  store i8* %.248, i8** %11, align 8
  br label %.5.endif.endif.endif.endi...if.1.endif

.5.endif.endif.endif.endi...if.1.endif:           ; preds = %.5.endif.endif.endif.endi...if.1.if, %.5.endif.endif.endif.endi...if.1
  %.256 = load %Expression.580293*, %Expression.580293** %left, align 8
  %.258 = load %Expression.580293*, %Expression.580293** %right, align 8
  %.259 = load %Type.580273*, %Type.580273** %exp_type, align 8
  %.261 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.262 = bitcast i8* %.261 to %BinaryExpression.580317*
  %.263 = bitcast i8* %.261 to %BinaryExpression_vtable_ty.580318**
  store %BinaryExpression_vtable_ty.580318* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.580318** %.263, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.580317* %.262, %Expression.580293* %.256, i64 %.11, %Expression.580293* %.258, %Type.580273* %.259, i1 %.142)
  ret %BinaryExpression.580317* %.262

.5.endif.endif.endif.endi...endif.1.if:           ; preds = %.5.endif.endif.endif.endi...endif.1
  %.276 = call i1 @is_float(%Type.580273* %.180)
  br i1 %.276, label %.5.endif.endif.endif.endi...endif.1.if.if, label %.5.endif.endif.endif.endi...endif.1.if.endif

.5.endif.endif.endif.endi...endif.1.if.if:        ; preds = %.5.endif.endif.endif.endi...endif.1.if
  %.279 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.280 = bitcast i8* %.279 to %Type.580273*
  %.281 = bitcast i8* %.279 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.281, align 8
  call void @Type_constructor(%Type.580273* %.280, i64 7)
  %.284 = call %Expression.580293* @cast_exp_to_type(%Expression.580293* %.136, %Type.580273* %.280)
  store %Expression.580293* %.284, %Expression.580293** %left, align 8
  br label %.5.endif.endif.endif.endi...endif.1.if.endif

.5.endif.endif.endif.endi...endif.1.if.endif:     ; preds = %.5.endif.endif.endif.endi...endif.1.if.if, %.5.endif.endif.endif.endi...endif.1.if
  %.287 = load %Expression.580293*, %Expression.580293** %right, align 8
  %.288 = getelementptr inbounds %Expression.580293, %Expression.580293* %.287, i64 0, i32 4
  %.289 = load %Type.580273*, %Type.580273** %.288, align 8
  %.290 = call i1 @is_float(%Type.580273* %.289)
  br i1 %.290, label %.5.endif.endif.endif.endi...endif.1.if.endif.if, label %.5.endif.endif.endif.endi...endif.1.if.endif.endif

.5.endif.endif.endif.endi...endif.1.if.endif.if:  ; preds = %.5.endif.endif.endif.endi...endif.1.if.endif
  %.293 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.294 = bitcast i8* %.293 to %Type.580273*
  %.295 = bitcast i8* %.293 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.295, align 8
  call void @Type_constructor(%Type.580273* %.294, i64 7)
  %.298 = call %Expression.580293* @cast_exp_to_type(%Expression.580293* %.287, %Type.580273* %.294)
  store %Expression.580293* %.298, %Expression.580293** %right, align 8
  br label %.5.endif.endif.endif.endi...endif.1.if.endif.endif

.5.endif.endif.endif.endi...endif.1.if.endif.endif: ; preds = %.5.endif.endif.endif.endi...endif.1.if.endif.if, %.5.endif.endif.endif.endi...endif.1.if.endif
  %.301 = load %Expression.580293*, %Expression.580293** %left, align 8
  %.303 = load %Expression.580293*, %Expression.580293** %right, align 8
  %.305 = getelementptr inbounds %Expression.580293, %Expression.580293* %.301, i64 0, i32 4
  %.306 = load %Type.580273*, %Type.580273** %.305, align 8
  %.308 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.309 = bitcast i8* %.308 to %BinaryExpression.580317*
  %.310 = bitcast i8* %.308 to %BinaryExpression_vtable_ty.580318**
  store %BinaryExpression_vtable_ty.580318* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.580318** %.310, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.580317* %.309, %Expression.580293* %.301, i64 %.11, %Expression.580293* %.303, %Type.580273* %.306, i1 %.142)
  ret %BinaryExpression.580317* %.309

.5.endif.endif.endif.endi...if.2:                 ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.else
  %.338 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.339 = bitcast i8* %.338 to %BinaryExpression.580317*
  %.340 = bitcast i8* %.338 to %BinaryExpression_vtable_ty.580318**
  store %BinaryExpression_vtable_ty.580318* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.580318** %.340, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.580317* %.339, %Expression.580293* %.136, i64 %.11, %Expression.580293* %.139, %Type.580273* %.180, i1 %.142)
  ret %BinaryExpression.580317* %.339

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif
  %.353 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.354 = bitcast i8* %.353 to %BooleanType.580275*
  %.355 = bitcast i8* %.353 to %BooleanType_vtable_ty.580276**
  store %BooleanType_vtable_ty.580276* @BooleanType_vtable_data, %BooleanType_vtable_ty.580276** %.355, align 8
  call void @BooleanType_constructor(%BooleanType.580275* %.354)
  %.359 = load %Expression.580293*, %Expression.580293** %left, align 8
  %.361 = load %Expression.580293*, %Expression.580293** %right, align 8
  %.3622.cast = bitcast i8* %.353 to %Type.580273*
  %.365 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.366 = bitcast i8* %.365 to %BinaryExpression.580317*
  %.367 = bitcast i8* %.365 to %BinaryExpression_vtable_ty.580318**
  store %BinaryExpression_vtable_ty.580318* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.580318** %.367, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.580317* %.366, %Expression.580293* %.359, i64 %.11, %Expression.580293* %.361, %Type.580273* %.3622.cast, i1 %.142)
  ret %BinaryExpression.580317* %.366

.5.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif
  %12 = icmp ult i64 %.11, 2
  %.379 = call i1 @is_pointer(%Type.580273* %.180)
  %.380 = and i1 %12, %.379
  %.384 = getelementptr inbounds %Type.580273, %Type.580273* %.184, i64 0, i32 1
  %.385 = load i64, i64* %.384, align 8
  %.386 = icmp eq i64 %.385, 7
  %.387 = and i1 %.380, %.386
  br i1 %.387, label %.5.endif.endif.endif.endi...if.3, label %.5.endif.endif.endif.endi...endif.3

.5.endif.endif.endif.endi...if.3:                 ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.395 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.396 = bitcast i8* %.395 to %BinaryExpression.580317*
  %.397 = bitcast i8* %.395 to %BinaryExpression_vtable_ty.580318**
  store %BinaryExpression_vtable_ty.580318* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.580318** %.397, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.580317* %.396, %Expression.580293* %.136, i64 %.11, %Expression.580293* %.139, %Type.580273* %.180, i1 false)
  ret %BinaryExpression.580317* %.396

.5.endif.endif.endif.endi...endif.3:              ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.403 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.60, align 8
  %.404 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.403, i64 0, i32 16
  %.405 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.404, align 8
  %.407 = call %string.580129* @dump_bin_op(i64 %.11)
  %.410 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.60, align 8
  %.411 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.410, i64 0, i32 10
  %.412 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.411, align 8
  %.413 = load %Expression.580293*, %Expression.580293** %left, align 8
  %.414 = getelementptr inbounds %Expression.580293, %Expression.580293* %.413, i64 0, i32 4
  %.415 = load %Type.580273*, %Type.580273** %.414, align 8
  %.416 = call %string.580129* %.412(%TypeChecker.580449* %.1, %Type.580273* %.415)
  %.419 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.60, align 8
  %.420 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.419, i64 0, i32 10
  %.421 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.420, align 8
  %.422 = load %Expression.580293*, %Expression.580293** %right, align 8
  %.423 = getelementptr inbounds %Expression.580293, %Expression.580293* %.422, i64 0, i32 4
  %.424 = load %Type.580273*, %Type.580273** %.423, align 8
  %.425 = call %string.580129* %.421(%TypeChecker.580449* %.1, %Type.580273* %.424)
  %.426 = getelementptr inbounds %string.580129, %string.580129* %.407, i64 0, i32 0
  %.427 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.426, align 8
  %.428 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.427, i64 0, i32 10
  %.429 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.428, align 8
  %.430 = call i8* %.429(%string.580129* %.407)
  %.431 = getelementptr inbounds %string.580129, %string.580129* %.416, i64 0, i32 0
  %.432 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.431, align 8
  %.433 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.432, i64 0, i32 10
  %.434 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.433, align 8
  %.435 = call i8* %.434(%string.580129* %.416)
  %.436 = getelementptr inbounds %string.580129, %string.580129* %.425, i64 0, i32 0
  %.437 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.436, align 8
  %.438 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.437, i64 0, i32 10
  %.439 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.438, align 8
  %.440 = call i8* %.439(%string.580129* %.425)
  %.442 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @str.313, i64 0, i64 0), i8* %.430, i8* %.435, i8* %.440)
  %.444 = call i8* @malloc(i64 %.442)
  %.445 = call i64 (i8*, i8*, ...) @sprintf(i8* %.444, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @str.313, i64 0, i64 0), i8* %.430, i8* %.435, i8* %.440)
  %.446 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.447 = bitcast i8* %.446 to %string.580129*
  %.448 = bitcast i8* %.446 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.448, align 8
  %.450 = getelementptr inbounds i8, i8* %.446, i64 8
  %13 = bitcast i8* %.450 to i8**
  store i8* %.444, i8** %13, align 8
  %.452 = getelementptr inbounds i8, i8* %.446, i64 16
  %14 = bitcast i8* %.452 to i64*
  store i64 %.442, i64* %14, align 8
  %.454 = getelementptr inbounds i8, i8* %.446, i64 24
  %15 = bitcast i8* %.454 to i64*
  store i64 %.442, i64* %15, align 8
  %.457 = getelementptr inbounds %BinaryExpressionNode.580205, %BinaryExpressionNode.580205* %.3, i64 0, i32 1
  %.458 = load %FloRange.580135*, %FloRange.580135** %.457, align 8
  call void %.405(%TypeChecker.580449* %.1, i64 5, %string.580129* %.447, %FloRange.580135* %.458)
  ret %BinaryExpression.580317* null
}

define noalias %UnaryExpression.580319* @TypeChecker_check_unary_expr(%TypeChecker.580449* %.1, %Type.580273* %.2, %UnaryExpressionNode.580209* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %UnaryExpressionNode.580209, %UnaryExpressionNode.580209* %.3, i64 0, i32 4
  %.11 = load i64, i64* %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.15, i64 0, i32 60
  %.17 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.16, align 8
  %.20 = getelementptr inbounds %UnaryExpressionNode.580209, %UnaryExpressionNode.580209* %.3, i64 0, i32 5
  %.21 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.20, align 8
  %.22 = call %Expression.580293* %.17(%TypeChecker.580449* %.1, %Type.580273* %.2, %ExpressionNode.580177* %.21)
  %.26 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.26, i64 0, i32 17
  %.28 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.27, align 8
  %.29 = call i1 %.28(%TypeChecker.580449* %.1)
  br i1 %.29, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  ret %UnaryExpression.580319* null

.5.endif:                                         ; preds = %.5
  %.33 = getelementptr inbounds %Expression.580293, %Expression.580293* %.22, i64 0, i32 4
  %0 = bitcast %Type.580273** %.33 to i64*
  %.341 = load i64, i64* %0, align 8
  %ty = alloca %Type.580273*, align 8
  %1 = bitcast %Type.580273** %ty to i64*
  store i64 %.341, i64* %1, align 8
  %.37 = getelementptr inbounds %Expression.580293, %Expression.580293* %.22, i64 0, i32 2
  %.38 = load i1, i1* %.37, align 1
  switch i64 %.11, label %.5.endif.endif.endif [
    i64 4, label %.5.endif.if
    i64 5, label %.5.endif.endif.if
  ]

.5.endif.if:                                      ; preds = %.5.endif
  %.43 = load %Type.580273*, %Type.580273** %ty, align 8
  %.44 = call i1 @is_numeric(%Type.580273* %.43)
  br i1 %.44, label %.5.endif.if.if, label %.5.endif.if.endif

.5.endif.if.if:                                   ; preds = %.5.endif.if
  %.50 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.51 = bitcast i8* %.50 to %UnaryExpression.580319*
  %.52 = bitcast i8* %.50 to %UnaryExpression_vtable_ty.580320**
  store %UnaryExpression_vtable_ty.580320* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.580320** %.52, align 8
  call void @UnaryExpression_constructor(%UnaryExpression.580319* %.51, i64 %.11, %Expression.580293* %.22, %Type.580273* %.43, i1 %.38)
  ret %UnaryExpression.580319* %.51

.5.endif.if.endif:                                ; preds = %.5.endif.if
  %.58 = icmp eq i64 %.11, 5
  br i1 %.58, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif, %.5.endif.if.endif
  %.60 = load %Type.580273*, %Type.580273** %ty, align 8
  %.61 = call i1 @is_bool(%Type.580273* %.60)
  %.63 = call i1 @is_numeric(%Type.580273* %.60)
  %.64 = or i1 %.61, %.63
  br i1 %.64, label %.5.endif.endif.if.if, label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif.if, %.5.endif, %.5.endif.if.endif
  %2 = icmp ult i64 %.11, 4
  br i1 %2, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.if.if:                             ; preds = %.5.endif.endif.if
  %.70 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.71 = bitcast i8* %.70 to %UnaryExpression.580319*
  %.72 = bitcast i8* %.70 to %UnaryExpression_vtable_ty.580320**
  store %UnaryExpression_vtable_ty.580320* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.580320** %.72, align 8
  call void @UnaryExpression_constructor(%UnaryExpression.580319* %.71, i64 %.11, %Expression.580293* %.22, %Type.580273* %.60, i1 %.38)
  ret %UnaryExpression.580319* %.71

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.83 = load %Type.580273*, %Type.580273** %ty, align 8
  %.84 = call i1 @is_numeric(%Type.580273* %.83)
  %.86 = call i1 @is_pointer(%Type.580273* %.83)
  %.87 = or i1 %.84, %.86
  br i1 %.87, label %.5.endif.endif.endif.if.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif.if, %.5.endif.endif.endif
  %.138 = icmp eq i64 %.11, 6
  br i1 %.138, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.if.if:                       ; preds = %.5.endif.endif.endif.if
  %.90 = call i1 @check_is_var(%Expression.580293* %.22)
  br i1 %.90, label %.5.endif.endif.endif.if.if.endif, label %.5.endif.endif.endif.if.if.if

.5.endif.endif.endif.if.if.if:                    ; preds = %.5.endif.endif.endif.if.if
  %.95 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.96 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.95, i64 0, i32 16
  %.97 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.96, align 8
  %.99 = call %string.580129* @dump_unary_op(i64 %.11)
  %.100 = getelementptr inbounds %string.580129, %string.580129* %.99, i64 0, i32 0
  %.101 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.100, align 8
  %.102 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.101, i64 0, i32 10
  %.103 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.102, align 8
  %.104 = call i8* %.103(%string.580129* %.99)
  %.106 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.314, i64 0, i64 0), i8* %.104)
  %.108 = call i8* @malloc(i64 %.106)
  %.109 = call i64 (i8*, i8*, ...) @sprintf(i8* %.108, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.314, i64 0, i64 0), i8* %.104)
  %.110 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.111 = bitcast i8* %.110 to %string.580129*
  %.112 = bitcast i8* %.110 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.112, align 8
  %.114 = getelementptr inbounds i8, i8* %.110, i64 8
  %3 = bitcast i8* %.114 to i8**
  store i8* %.108, i8** %3, align 8
  %.116 = getelementptr inbounds i8, i8* %.110, i64 16
  %4 = bitcast i8* %.116 to i64*
  store i64 %.106, i64* %4, align 8
  %.118 = getelementptr inbounds i8, i8* %.110, i64 24
  %5 = bitcast i8* %.118 to i64*
  store i64 %.106, i64* %5, align 8
  %.122 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.20, align 8
  %.123 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.122, i64 0, i32 1
  %.124 = load %FloRange.580135*, %FloRange.580135** %.123, align 8
  call void %.97(%TypeChecker.580449* %.1, i64 4, %string.580129* %.111, %FloRange.580135* %.124)
  ret %UnaryExpression.580319* null

.5.endif.endif.endif.if.if.endif:                 ; preds = %.5.endif.endif.endif.if.if
  %.130 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.131 = bitcast i8* %.130 to %UnaryExpression.580319*
  %.132 = bitcast i8* %.130 to %UnaryExpression_vtable_ty.580320**
  store %UnaryExpression_vtable_ty.580320* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.580320** %.132, align 8
  call void @UnaryExpression_constructor(%UnaryExpression.580319* %.131, i64 %.11, %Expression.580293* %.22, %Type.580273* %.83, i1 false)
  ret %UnaryExpression.580319* %.131

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.141 = call i1 @check_is_var(%Expression.580293* %.22)
  br i1 %.141, label %.5.endif.endif.endif.endif.if.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif
  %.163 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.164 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.163, i64 0, i32 16
  %.165 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.164, align 8
  %.167 = call %string.580129* @dump_unary_op(i64 %.11)
  %.170 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.171 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.170, i64 0, i32 10
  %.172 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.171, align 8
  %.173 = load %Type.580273*, %Type.580273** %ty, align 8
  %.174 = call %string.580129* %.172(%TypeChecker.580449* %.1, %Type.580273* %.173)
  %.175 = getelementptr inbounds %string.580129, %string.580129* %.167, i64 0, i32 0
  %.176 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.175, align 8
  %.177 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.176, i64 0, i32 10
  %.178 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.177, align 8
  %.179 = call i8* %.178(%string.580129* %.167)
  %.180 = getelementptr inbounds %string.580129, %string.580129* %.174, i64 0, i32 0
  %.181 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.180, align 8
  %.182 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.181, i64 0, i32 10
  %.183 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.182, align 8
  %.184 = call i8* %.183(%string.580129* %.174)
  %.186 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.315, i64 0, i64 0), i8* %.179, i8* %.184)
  %.188 = call i8* @malloc(i64 %.186)
  %.189 = call i64 (i8*, i8*, ...) @sprintf(i8* %.188, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.315, i64 0, i64 0), i8* %.179, i8* %.184)
  %.190 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.191 = bitcast i8* %.190 to %string.580129*
  %.192 = bitcast i8* %.190 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.192, align 8
  %.194 = getelementptr inbounds i8, i8* %.190, i64 8
  %6 = bitcast i8* %.194 to i8**
  store i8* %.188, i8** %6, align 8
  %.196 = getelementptr inbounds i8, i8* %.190, i64 16
  %7 = bitcast i8* %.196 to i64*
  store i64 %.186, i64* %7, align 8
  %.198 = getelementptr inbounds i8, i8* %.190, i64 24
  %8 = bitcast i8* %.198 to i64*
  store i64 %.186, i64* %8, align 8
  %.201 = getelementptr inbounds %UnaryExpressionNode.580209, %UnaryExpressionNode.580209* %.3, i64 0, i32 1
  %.202 = load %FloRange.580135*, %FloRange.580135** %.201, align 8
  call void %.165(%TypeChecker.580449* %.1, i64 5, %string.580129* %.191, %FloRange.580135* %.202)
  ret %UnaryExpression.580319* null

.5.endif.endif.endif.endif.if.if:                 ; preds = %.5.endif.endif.endif.endif.if
  %.147 = load %Type.580273*, %Type.580273** %.33, align 8
  %.148 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.149 = bitcast i8* %.148 to %PointerType.580277*
  %.150 = bitcast i8* %.148 to %PointerType_vtable_ty.580278**
  store %PointerType_vtable_ty.580278* @PointerType_vtable_data, %PointerType_vtable_ty.580278** %.150, align 8
  call void @PointerType_constructor(%PointerType.580277* %.149, %Type.580273* %.147)
  %.153 = bitcast i8* %.148 to %Type.580273*
  %.154 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.155 = bitcast i8* %.154 to %UnaryExpression.580319*
  %.156 = bitcast i8* %.154 to %UnaryExpression_vtable_ty.580320**
  store %UnaryExpression_vtable_ty.580320* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.580320** %.156, align 8
  call void @UnaryExpression_constructor(%UnaryExpression.580319* %.155, i64 %.11, %Expression.580293* %.22, %Type.580273* %.153, i1 false)
  ret %UnaryExpression.580319* %.155
}

define noalias %TypeCastExpression.580323* @TypeChecker_check_typecast_expr(%TypeChecker.580449* %.1, %TypeCastExpressionNode.580203* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.9, i64 0, i32 60
  %.11 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.10, align 8
  %.12 = call %Type.580273* @Type_unknown()
  %.14 = getelementptr inbounds %TypeCastExpressionNode.580203, %TypeCastExpressionNode.580203* %.2, i64 0, i32 4
  %.15 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.14, align 8
  %.16 = call %Expression.580293* %.11(%TypeChecker.580449* %.1, %Type.580273* %.12, %ExpressionNode.580177* %.15)
  %.20 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.21 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.20, i64 0, i32 35
  %.22 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.21, align 8
  %.24 = getelementptr inbounds %TypeCastExpressionNode.580203, %TypeCastExpressionNode.580203* %.2, i64 0, i32 5
  %.25 = load %TypeNode.580161*, %TypeNode.580161** %.24, align 8
  %.26 = call %Type.580273* %.22(%TypeChecker.580449* %.1, %TypeNode.580161* %.25)
  %.30 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.31 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.30, i64 0, i32 17
  %.32 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.31, align 8
  %.33 = call i1 %.32(%TypeChecker.580449* %.1)
  br i1 %.33, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret %TypeCastExpression.580323* null

.4.endif:                                         ; preds = %.4
  %.38 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.39 = bitcast i8* %.38 to %TypeCastExpression.580323*
  %.40 = bitcast i8* %.38 to %TypeCastExpression_vtable_ty.580324**
  store %TypeCastExpression_vtable_ty.580324* @TypeCastExpression_vtable_data, %TypeCastExpression_vtable_ty.580324** %.40, align 8
  call void @TypeCastExpression_constructor(%TypeCastExpression.580323* %.39, %Expression.580293* %.16, %Type.580273* %.26)
  ret %TypeCastExpression.580323* %.39
}

define noalias %string.580129* @TypeChecker_check_constructor_call(%TypeChecker.580449* %.1, %ClassId.580289* nocapture readonly %.2, %"Array<ExpressionNode>.580189"* %.3, %"Array<Expression>.580311"** nocapture %.4) {
.6:
  %.12 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.13 = load %Program.580445*, %Program.580445** %.12, align 8
  %.15 = call %Class.580403* @get_class(%Program.580445* %.13, %ClassId.580289* %.2)
  %.18 = getelementptr inbounds %Class.580403, %Class.580403* %.15, i64 0, i32 4
  %.19 = load %PropId.580339*, %PropId.580339** %.18, align 8
  %0 = ptrtoint %PropId.580339* %.19 to i64
  %.22 = trunc i64 %0 to i32
  %.24 = icmp eq i32 %.22, 0
  br i1 %.24, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.26 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %string.580129*
  %.27.repack = bitcast i8* %.26 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.27.repack, align 8
  %.27.repack3 = getelementptr inbounds i8, i8* %.26, i64 8
  %1 = bitcast i8* %.27.repack3 to i8**
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.316, i64 0, i64 0), i8** %1, align 8
  %.27.repack4 = getelementptr inbounds i8, i8* %.26, i64 16
  %2 = bitcast i8* %.27.repack4 to i64*
  store i64 44, i64* %2, align 8
  %.27.repack5 = getelementptr inbounds i8, i8* %.26, i64 24
  %3 = bitcast i8* %.27.repack5 to i64*
  store i64 44, i64* %3, align 8
  ret %string.580129* %.27

.6.endif:                                         ; preds = %.6
  %.31 = getelementptr inbounds %PropId.580339, %PropId.580339* %.19, i64 0, i32 3
  %.32 = load i64, i64* %.31, align 8
  %.34 = getelementptr inbounds %Class.580403, %Class.580403* %.15, i64 0, i32 6
  %.35 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.35, i64 0, i32 0
  %.37 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.36, align 8
  %.38 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.37, i64 0, i32 5
  %.39 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.38, align 8
  %.40 = call %ClassMethod.580401* %.39(%"Array<ClassMethod>.580406"* %.35, i64 %.32)
  %.43 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.40, i64 0, i32 5
  %4 = bitcast %FunctionType.580279** %.43 to i64*
  %.441 = load i64, i64* %4, align 8
  %construct_type = alloca %FunctionType.580279*, align 8
  %5 = bitcast %FunctionType.580279** %construct_type to i64*
  store i64 %.441, i64* %5, align 8
  %.47 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.48 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.47, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.48, i64 0, i32 53
  %.50 = load %"Array<Expression>.580311"* (%TypeChecker.580449*, %FunctionType.580279*, %"Array<FunctionArg>.580393"*, %"Array<ExpressionNode>.580189"*)*, %"Array<Expression>.580311"* (%TypeChecker.580449*, %FunctionType.580279*, %"Array<FunctionArg>.580393"*, %"Array<ExpressionNode>.580189"*)** %.49, align 8
  %.51.cast = inttoptr i64 %.441 to %FunctionType.580279*
  %.53 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.40, i64 0, i32 7
  %.54 = load %"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"** %.53, align 8
  %.56 = call %"Array<Expression>.580311"* %.50(%TypeChecker.580449* %.1, %FunctionType.580279* %.51.cast, %"Array<FunctionArg>.580393"* %.54, %"Array<ExpressionNode>.580189"* %.3)
  %checked_args = alloca %"Array<Expression>.580311"*, align 8
  store %"Array<Expression>.580311"* %.56, %"Array<Expression>.580311"** %checked_args, align 8
  %.60 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.47, align 8
  %.61 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.60, i64 0, i32 17
  %.62 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.61, align 8
  %.63 = call i1 %.62(%TypeChecker.580449* %.1)
  br i1 %.63, label %.6.endif.if, label %.6.endif.endif

.6.endif.if:                                      ; preds = %.6.endif
  ret %string.580129* null

.6.endif.endif:                                   ; preds = %.6.endif
  %.68 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.47, align 8
  %.69 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.68, i64 0, i32 54
  %.70 = load i64 (%TypeChecker.580449*, %FunctionType.580279*, %"Array<Expression>.580311"*)*, i64 (%TypeChecker.580449*, %FunctionType.580279*, %"Array<Expression>.580311"*)** %.69, align 8
  %.71 = load %FunctionType.580279*, %FunctionType.580279** %construct_type, align 8
  %.73 = call i64 %.70(%TypeChecker.580449* %.1, %FunctionType.580279* %.71, %"Array<Expression>.580311"* %.56)
  %.77 = icmp sgt i64 %.73, -2
  br i1 %.77, label %.6.endif.endif.if, label %.6.endif.endif.endif

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.81 = icmp eq i64 %.73, -1
  br i1 %.81, label %.6.endif.endif.if.if, label %.6.endif.endif.if.else

.6.endif.endif.endif:                             ; preds = %.6.endif.endif
  %6 = bitcast %"Array<Expression>.580311"** %checked_args to i64*
  %.1662 = load i64, i64* %6, align 8
  %7 = bitcast %"Array<Expression>.580311"** %.4 to i64*
  store i64 %.1662, i64* %7, align 8
  ret %string.580129* null

.6.endif.endif.if.if:                             ; preds = %.6.endif.endif.if
  %.84 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.71, i64 0, i32 2
  %.85 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.84, align 8
  %.86 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.85, i64 0, i32 2
  %.87 = load i64, i64* %.86, align 8
  %.89 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.3, i64 0, i32 2
  %.90 = load i64, i64* %.89, align 8
  %.92 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.317, i64 0, i64 0), i64 %.87, i64 %.90)
  %.94 = call i8* @malloc(i64 %.92)
  %.95 = call i64 (i8*, i8*, ...) @sprintf(i8* %.94, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.317, i64 0, i64 0), i64 %.87, i64 %.90)
  %.96 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.580129*
  %.98 = bitcast i8* %.96 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.98, align 8
  %.100 = getelementptr inbounds i8, i8* %.96, i64 8
  %8 = bitcast i8* %.100 to i8**
  store i8* %.94, i8** %8, align 8
  %.102 = getelementptr inbounds i8, i8* %.96, i64 16
  %9 = bitcast i8* %.102 to i64*
  store i64 %.92, i64* %9, align 8
  %.104 = getelementptr inbounds i8, i8* %.96, i64 24
  %10 = bitcast i8* %.104 to i64*
  store i64 %.92, i64* %10, align 8
  ret %string.580129* %.97

.6.endif.endif.if.else:                           ; preds = %.6.endif.endif.if
  %.109 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.47, align 8
  %.110 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.109, i64 0, i32 10
  %.111 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.110, align 8
  %.114 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.71, i64 0, i32 2
  %.115 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.114, align 8
  %.116 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.115, i64 0, i32 0
  %.117 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.116, align 8
  %.118 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.117, i64 0, i32 5
  %.119 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.118, align 8
  %.120 = call %Type.580273* %.119(%"Array<Type>.580281"* %.115, i64 %.73)
  %.121 = call %string.580129* %.111(%TypeChecker.580449* %.1, %Type.580273* %.120)
  %.124 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.47, align 8
  %.125 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.124, i64 0, i32 10
  %.126 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.125, align 8
  %.129 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.56, i64 0, i32 0
  %.130 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.129, align 8
  %.131 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.130, i64 0, i32 5
  %.132 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.131, align 8
  %.133 = call %Expression.580293* %.132(%"Array<Expression>.580311"* %.56, i64 %.73)
  %.134 = getelementptr inbounds %Expression.580293, %Expression.580293* %.133, i64 0, i32 4
  %.135 = load %Type.580273*, %Type.580273** %.134, align 8
  %.136 = call %string.580129* %.126(%TypeChecker.580449* %.1, %Type.580273* %.135)
  %.138 = getelementptr inbounds %string.580129, %string.580129* %.121, i64 0, i32 0
  %.139 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.138, align 8
  %.140 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.139, i64 0, i32 10
  %.141 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.140, align 8
  %.142 = call i8* %.141(%string.580129* %.121)
  %.143 = getelementptr inbounds %string.580129, %string.580129* %.136, i64 0, i32 0
  %.144 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.143, align 8
  %.145 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.144, i64 0, i32 10
  %.146 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.145, align 8
  %.147 = call i8* %.146(%string.580129* %.136)
  %.149 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.318, i64 0, i64 0), i8* %.142, i8* %.147, i64 %.73)
  %.151 = call i8* @malloc(i64 %.149)
  %.152 = call i64 (i8*, i8*, ...) @sprintf(i8* %.151, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.318, i64 0, i64 0), i8* %.142, i8* %.147, i64 %.73)
  %.153 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.154 = bitcast i8* %.153 to %string.580129*
  %.155 = bitcast i8* %.153 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.155, align 8
  %.157 = getelementptr inbounds i8, i8* %.153, i64 8
  %11 = bitcast i8* %.157 to i8**
  store i8* %.151, i8** %11, align 8
  %.159 = getelementptr inbounds i8, i8* %.153, i64 16
  %12 = bitcast i8* %.159 to i64*
  store i64 %.149, i64* %12, align 8
  %.161 = getelementptr inbounds i8, i8* %.153, i64 24
  %13 = bitcast i8* %.161 to i64*
  store i64 %.149, i64* %13, align 8
  ret %string.580129* %.154
}

define noalias %NewExpression.580325* @TypeChecker_check_new_expr(%TypeChecker.580449* %.1, %NewExpressionNode.580195* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.9, i64 0, i32 35
  %.11 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.10, align 8
  %.13 = getelementptr inbounds %NewExpressionNode.580195, %NewExpressionNode.580195* %.2, i64 0, i32 4
  %.14 = load %TypeNode.580161*, %TypeNode.580161** %.13, align 8
  %.15 = call %Type.580273* %.11(%TypeChecker.580449* %.1, %TypeNode.580161* %.14)
  %.20 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.22 to %"Array<Expression>_vtable_ty.580312"**
  store %"Array<Expression>_vtable_ty.580312"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.580312"** %.24, align 8
  %.26 = getelementptr inbounds i8, i8* %.22, i64 8
  %0 = bitcast i8* %.26 to i8**
  store i8* %.20, i8** %0, align 8
  %.28 = getelementptr inbounds i8, i8* %.22, i64 16
  %1 = bitcast i8* %.28 to i64*
  store i64 0, i64* %1, align 8
  %.30 = getelementptr inbounds i8, i8* %.22, i64 24
  %2 = bitcast i8* %.30 to i64*
  store i64 8, i64* %2, align 8
  %args = alloca %"Array<Expression>.580311"*, align 8
  %3 = bitcast %"Array<Expression>.580311"** %args to i8**
  store i8* %.22, i8** %3, align 8
  %.35 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.36 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.35, i64 0, i32 17
  %.37 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.36, align 8
  %.38 = call i1 %.37(%TypeChecker.580449* %.1)
  br i1 %.38, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret %NewExpression.580325* null

.4.endif:                                         ; preds = %.4
  %.42 = getelementptr inbounds %Type.580273, %Type.580273* %.15, i64 0, i32 1
  %.43 = load i64, i64* %.42, align 8
  %.44 = icmp eq i64 %.43, 13
  br i1 %.44, label %.4.endif.if, label %.4.endif.else

.4.endif.if:                                      ; preds = %.4.endif
  %.48 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.48, i64 0, i32 45
  %.50 = load %string.580129* (%TypeChecker.580449*, %ClassId.580289*, %"Array<ExpressionNode>.580189"*, %"Array<Expression>.580311"**)*, %string.580129* (%TypeChecker.580449*, %ClassId.580289*, %"Array<ExpressionNode>.580189"*, %"Array<Expression>.580311"**)** %.49, align 8
  %.53 = getelementptr inbounds %Type.580273, %Type.580273* %.15, i64 1
  %4 = bitcast %Type.580273* %.53 to %ClassId.580289**
  %.54 = load %ClassId.580289*, %ClassId.580289** %4, align 8
  %.56 = getelementptr inbounds %NewExpressionNode.580195, %NewExpressionNode.580195* %.2, i64 0, i32 6
  %.57 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.56, align 8
  %.58 = call %string.580129* %.50(%TypeChecker.580449* %.1, %ClassId.580289* %.54, %"Array<ExpressionNode>.580189"* %.57, %"Array<Expression>.580311"** nonnull %args)
  %5 = ptrtoint %string.580129* %.58 to i64
  %.61 = trunc i64 %5 to i32
  %.63.not = icmp eq i32 %.61, 0
  br i1 %.63.not, label %.4.endif.endif, label %.4.endif.if.if

.4.endif.else:                                    ; preds = %.4.endif
  %.78 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.79 = bitcast i8* %.78 to %PointerType.580277*
  %.80 = bitcast i8* %.78 to %PointerType_vtable_ty.580278**
  store %PointerType_vtable_ty.580278* @PointerType_vtable_data, %PointerType_vtable_ty.580278** %.80, align 8
  call void @PointerType_constructor(%PointerType.580277* %.79, %Type.580273* %.15)
  %.83 = bitcast i8* %.78 to %Type.580273*
  br label %.4.endif.endif

.4.endif.endif:                                   ; preds = %.4.endif.if, %.4.endif.else
  %value_type.0 = phi %Type.580273* [ %.83, %.4.endif.else ], [ %.15, %.4.endif.if ]
  %.87 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %args, align 8
  %.89 = getelementptr inbounds %NewExpressionNode.580195, %NewExpressionNode.580195* %.2, i64 0, i32 5
  %.90 = load i1, i1* %.89, align 1
  %.92 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.93 = bitcast i8* %.92 to %NewExpression.580325*
  %.94 = bitcast i8* %.92 to %NewExpression_vtable_ty.580326**
  store %NewExpression_vtable_ty.580326* @NewExpression_vtable_data, %NewExpression_vtable_ty.580326** %.94, align 8
  call void @NewExpression_constructor(%NewExpression.580325* %.93, %Type.580273* %.15, %"Array<Expression>.580311"* %.87, i1 %.90, %Type.580273* %value_type.0)
  ret %NewExpression.580325* %.93

.4.endif.if.if:                                   ; preds = %.4.endif.if
  %.67 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.68 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.67, i64 0, i32 16
  %.69 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.68, align 8
  %.72 = getelementptr inbounds %NewExpressionNode.580195, %NewExpressionNode.580195* %.2, i64 0, i32 1
  %.73 = load %FloRange.580135*, %FloRange.580135** %.72, align 8
  call void %.69(%TypeChecker.580449* %.1, i64 4, %string.580129* %.58, %FloRange.580135* %.73)
  ret %NewExpression.580325* null
}

define noalias %string.580129* @TypeChecker_check_member_access(%TypeChecker.580449* nocapture readonly %.1, %PropId.580339* nocapture readonly %.2) {
.4:
  %.9 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.10 = load %Program.580445*, %Program.580445** %.9, align 8
  %.12 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.580287** %.12 to %ClassId.580289**
  %.131 = load %ClassId.580289*, %ClassId.580289** %0, align 8
  %.15 = call %Class.580403* @get_class(%Program.580445* %.10, %ClassId.580289* %.131)
  %.29 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 1
  %.30 = load i64, i64* %.29, align 8
  %.31 = icmp eq i64 %.30, 0
  %.34 = getelementptr inbounds %PropId.580339, %PropId.580339* %.2, i64 0, i32 3
  %.35 = load i64, i64* %.34, align 8
  br i1 %.31, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.37 = getelementptr inbounds %Class.580403, %Class.580403* %.15, i64 0, i32 6
  %.38 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.38, i64 0, i32 0
  %.40 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.40, i64 0, i32 5
  %.42 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.41, align 8
  %.43 = call %ClassMethod.580401* %.42(%"Array<ClassMethod>.580406"* %.38, i64 %.35)
  %.46 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.43, i64 0, i32 3
  %.50 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.43, i64 0, i32 4
  br label %.4.endif

.4.else:                                          ; preds = %.4
  %.58 = getelementptr inbounds %Class.580403, %Class.580403* %.15, i64 0, i32 5
  %.59 = load %"Array<ClassField>.580405"*, %"Array<ClassField>.580405"** %.58, align 8
  %.60 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.59, i64 0, i32 0
  %.61 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.60, align 8
  %.62 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.61, i64 0, i32 5
  %.63 = load %ClassField.580399* (%"Array<ClassField>.580405"*, i64)*, %ClassField.580399* (%"Array<ClassField>.580405"*, i64)** %.62, align 8
  %.64 = call %ClassField.580399* %.63(%"Array<ClassField>.580405"* %.59, i64 %.35)
  %.67 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.64, i64 0, i32 3
  %.71 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.64, i64 0, i32 4
  br label %.4.endif

.4.endif:                                         ; preds = %.4.else, %.4.if
  %visibility.0.in = phi i64* [ %.46, %.4.if ], [ %.67, %.4.else ]
  %member_name.0.in = phi %string.580129** [ %.50, %.4.if ], [ %.71, %.4.else ]
  %member_name.0 = load %string.580129*, %string.580129** %member_name.0.in, align 8
  %visibility.0 = load i64, i64* %visibility.0.in, align 8
  %.76 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 3
  %1 = bitcast %ClassId.580289** %.76 to i64*
  %.772 = load i64, i64* %1, align 8
  %.78 = trunc i64 %.772 to i32
  %.80.not = icmp eq i32 %.78, 0
  br i1 %.80.not, label %.4.endif.else, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.84 = load %ClassId.580289*, %ClassId.580289** %.76, align 8
  %.85 = getelementptr inbounds %ClassId.580289, %ClassId.580289* %.84, i64 0, i32 1
  %.86 = load i64, i64* %.85, align 8
  %.88 = getelementptr inbounds %Class.580403, %Class.580403* %.15, i64 0, i32 1
  %.89 = load %ClassId.580289*, %ClassId.580289** %.88, align 8
  %.90 = getelementptr inbounds %ClassId.580289, %ClassId.580289* %.89, i64 0, i32 1
  %.91 = load i64, i64* %.90, align 8
  %.92 = icmp ne i64 %.86, %.91
  %.96 = getelementptr inbounds %ClassId.580289, %ClassId.580289* %.89, i64 0, i32 3
  %.97 = load i64, i64* %.96, align 8
  %.101 = getelementptr inbounds %ClassId.580289, %ClassId.580289* %.84, i64 0, i32 3
  %.102 = load i64, i64* %.101, align 8
  %.103 = icmp ne i64 %.97, %.102
  %.104 = or i1 %.92, %.103
  %.107 = icmp eq i64 %visibility.0, 0
  %or.cond = and i1 %.107, %.104
  br i1 %or.cond, label %.4.endif.if.if.if, label %.4.endif.endif

.4.endif.else:                                    ; preds = %.4.endif
  %.142.not = icmp eq i64 %visibility.0, 1
  br i1 %.142.not, label %.4.endif.endif, label %.4.endif.else.if

.4.endif.endif:                                   ; preds = %.4.endif.else, %.4.endif.if
  ret %string.580129* null

.4.endif.if.if.if:                                ; preds = %.4.endif.if
  %.111 = getelementptr inbounds %Class.580403, %Class.580403* %.15, i64 0, i32 2
  %.112 = load %string.580129*, %string.580129** %.111, align 8
  %.113 = getelementptr inbounds %string.580129, %string.580129* %member_name.0, i64 0, i32 0
  %.114 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.113, align 8
  %.115 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.114, i64 0, i32 10
  %.116 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.115, align 8
  %.117 = call i8* %.116(%string.580129* %member_name.0)
  %.118 = getelementptr inbounds %string.580129, %string.580129* %.112, i64 0, i32 0
  %.119 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.118, align 8
  %.120 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.119, i64 0, i32 10
  %.121 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.120, align 8
  %.122 = call i8* %.121(%string.580129* %.112)
  %.124 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.319, i64 0, i64 0), i8* %.117, i8* %.122)
  %.126 = call i8* @malloc(i64 %.124)
  %.127 = call i64 (i8*, i8*, ...) @sprintf(i8* %.126, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.319, i64 0, i64 0), i8* %.117, i8* %.122)
  %.128 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.129 = bitcast i8* %.128 to %string.580129*
  %.130 = bitcast i8* %.128 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.130, align 8
  %.132 = getelementptr inbounds i8, i8* %.128, i64 8
  %2 = bitcast i8* %.132 to i8**
  store i8* %.126, i8** %2, align 8
  %.134 = getelementptr inbounds i8, i8* %.128, i64 16
  %3 = bitcast i8* %.134 to i64*
  store i64 %.124, i64* %3, align 8
  %.136 = getelementptr inbounds i8, i8* %.128, i64 24
  %4 = bitcast i8* %.136 to i64*
  store i64 %.124, i64* %4, align 8
  ret %string.580129* %.129

.4.endif.else.if:                                 ; preds = %.4.endif.else
  %.146 = call %string.580129* @dump_access(i64 %visibility.0)
  %.148 = getelementptr inbounds %Class.580403, %Class.580403* %.15, i64 0, i32 2
  %.149 = load %string.580129*, %string.580129** %.148, align 8
  %.150 = getelementptr inbounds %string.580129, %string.580129* %member_name.0, i64 0, i32 0
  %.151 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.150, align 8
  %.152 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.151, i64 0, i32 10
  %.153 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.152, align 8
  %.154 = call i8* %.153(%string.580129* %member_name.0)
  %.155 = getelementptr inbounds %string.580129, %string.580129* %.146, i64 0, i32 0
  %.156 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.155, align 8
  %.157 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.156, i64 0, i32 10
  %.158 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.157, align 8
  %.159 = call i8* %.158(%string.580129* %.146)
  %.160 = getelementptr inbounds %string.580129, %string.580129* %.149, i64 0, i32 0
  %.161 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.160, align 8
  %.162 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.161, i64 0, i32 10
  %.163 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.162, align 8
  %.164 = call i8* %.163(%string.580129* %.149)
  %.166 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.320, i64 0, i64 0), i8* %.154, i8* %.159, i8* %.164)
  %.168 = call i8* @malloc(i64 %.166)
  %.169 = call i64 (i8*, i8*, ...) @sprintf(i8* %.168, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.320, i64 0, i64 0), i8* %.154, i8* %.159, i8* %.164)
  %.170 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.171 = bitcast i8* %.170 to %string.580129*
  %.172 = bitcast i8* %.170 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.172, align 8
  %.174 = getelementptr inbounds i8, i8* %.170, i64 8
  %5 = bitcast i8* %.174 to i8**
  store i8* %.168, i8** %5, align 8
  %.176 = getelementptr inbounds i8, i8* %.170, i64 16
  %6 = bitcast i8* %.176 to i64*
  store i64 %.166, i64* %6, align 8
  %.178 = getelementptr inbounds i8, i8* %.170, i64 24
  %7 = bitcast i8* %.178 to i64*
  store i64 %.166, i64* %7, align 8
  ret %string.580129* %.171
}

define noalias %MemberExpression.580341* @TypeChecker_check_member_expr(%TypeChecker.580449* %.1, %Type.580273* nocapture readnone %.2, %MemberExpressionNode.580199* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.11, i64 0, i32 60
  %.13 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.12, align 8
  %.14 = call %Type.580273* @Type_unknown()
  %.16 = getelementptr inbounds %MemberExpressionNode.580199, %MemberExpressionNode.580199* %.3, i64 0, i32 4
  %.17 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.16, align 8
  %.18 = call %Expression.580293* %.13(%TypeChecker.580449* %.1, %Type.580273* %.14, %ExpressionNode.580177* %.17)
  %.22 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.23 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.22, i64 0, i32 17
  %.24 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.23, align 8
  %.25 = call i1 %.24(%TypeChecker.580449* %.1)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  ret %MemberExpression.580341* null

.5.endif:                                         ; preds = %.5
  %.29 = getelementptr inbounds %Expression.580293, %Expression.580293* %.18, i64 0, i32 4
  %0 = bitcast %Type.580273** %.29 to i64*
  %.308 = load i64, i64* %0, align 8
  %prop_owner_type = alloca %Type.580273*, align 8
  %1 = bitcast %Type.580273** %prop_owner_type to i64*
  store i64 %.308, i64* %1, align 8
  %.33 = getelementptr inbounds %MemberExpressionNode.580199, %MemberExpressionNode.580199* %.3, i64 0, i32 5
  %.34 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.33, align 8
  %.35 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.34, i64 0, i32 3
  %2 = bitcast %string.580129** %.35 to i64*
  %.369 = load i64, i64* %2, align 8
  %prop_name = alloca %string.580129*, align 8
  %3 = bitcast %string.580129** %prop_name to i64*
  store i64 %.369, i64* %3, align 8
  %.38 = call %Type.580273* @Type_unknown()
  %prop_ty = alloca %Type.580273*, align 8
  store %Type.580273* %.38, %Type.580273** %prop_ty, align 8
  %prop_id = alloca %PropId.580339*, align 8
  store %PropId.580339* null, %PropId.580339** %prop_id, align 8
  %.43 = load %Type.580273*, %Type.580273** %prop_owner_type, align 8
  %.44 = getelementptr inbounds %Type.580273, %Type.580273* %.43, i64 0, i32 1
  %.45 = load i64, i64* %.44, align 8
  switch i64 %.45, label %.5.endif.else.else [
    i64 13, label %.5.endif.if
    i64 18, label %.5.endif.else.if
  ]

.5.endif.if:                                      ; preds = %.5.endif
  %.49 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.50 = load %Program.580445*, %Program.580445** %.49, align 8
  %4 = bitcast %Type.580273** %prop_owner_type to %ObjectType.580297**
  %.5111 = load %ObjectType.580297*, %ObjectType.580297** %4, align 8
  %.53 = getelementptr inbounds %ObjectType.580297, %ObjectType.580297* %.5111, i64 0, i32 2
  %.54 = load %ClassId.580289*, %ClassId.580289** %.53, align 8
  %.55 = call %Class.580403* @get_class(%Program.580445* %.50, %ClassId.580289* %.54)
  %.58 = getelementptr inbounds %Class.580403, %Class.580403* %.55, i64 0, i32 7
  %.59 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.58, align 8
  %.60 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.59, i64 0, i32 0
  %.61 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.60, align 8
  %.62 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.61, i64 0, i32 3
  %.63 = load %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)** %.62, align 8
  %.64 = load %string.580129*, %string.580129** %prop_name, align 8
  %.65 = call %PropId.580339* %.63(%"Map<string, PropId>.580407"* %.59, %string.580129* %.64)
  store %PropId.580339* %.65, %PropId.580339** %prop_id, align 8
  %5 = ptrtoint %PropId.580339* %.65 to i64
  %.68 = trunc i64 %5 to i32
  %.70 = icmp eq i32 %.68, 0
  %.74 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  br i1 %.70, label %.5.endif.if.if, label %.5.endif.if.endif

.5.endif.endif:                                   ; preds = %.5.endif.else.if.if.endif.endif, %.5.endif.else.if.else.endif, %.5.endif.if.endif.endif
  %.381 = load %PropId.580339*, %PropId.580339** %prop_id, align 8
  %.382 = load %Type.580273*, %Type.580273** %prop_ty, align 8
  %.383 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.384 = bitcast i8* %.383 to %MemberExpression.580341*
  %.385 = bitcast i8* %.383 to %MemberExpression_vtable_ty.580342**
  store %MemberExpression_vtable_ty.580342* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.580342** %.385, align 8
  call void @MemberExpression_constructor(%MemberExpression.580341* %.384, %Expression.580293* %.18, %PropId.580339* %.381, %Type.580273* %.382)
  ret %MemberExpression.580341* %.384

.5.endif.if.if:                                   ; preds = %.5.endif.if
  %.75 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.74, i64 0, i32 16
  %.76 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.75, align 8
  %.79 = getelementptr inbounds %Class.580403, %Class.580403* %.55, i64 0, i32 2
  %.80 = load %string.580129*, %string.580129** %.79, align 8
  %.81 = getelementptr inbounds %string.580129, %string.580129* %.64, i64 0, i32 0
  %.82 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.81, align 8
  %.83 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.82, i64 0, i32 10
  %.84 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.83, align 8
  %.85 = call i8* %.84(%string.580129* %.64)
  %.86 = getelementptr inbounds %string.580129, %string.580129* %.80, i64 0, i32 0
  %.87 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.86, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.87, i64 0, i32 10
  %.89 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.88, align 8
  %.90 = call i8* %.89(%string.580129* %.80)
  %.92 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.321, i64 0, i64 0), i8* %.85, i8* %.90)
  %.94 = call i8* @malloc(i64 %.92)
  %.95 = call i64 (i8*, i8*, ...) @sprintf(i8* %.94, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.321, i64 0, i64 0), i8* %.85, i8* %.90)
  %.96 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.580129*
  %.98 = bitcast i8* %.96 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.98, align 8
  %.100 = getelementptr inbounds i8, i8* %.96, i64 8
  %6 = bitcast i8* %.100 to i8**
  store i8* %.94, i8** %6, align 8
  %.102 = getelementptr inbounds i8, i8* %.96, i64 16
  %7 = bitcast i8* %.102 to i64*
  store i64 %.92, i64* %7, align 8
  %.104 = getelementptr inbounds i8, i8* %.96, i64 24
  %8 = bitcast i8* %.104 to i64*
  store i64 %.92, i64* %8, align 8
  %.108 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.33, align 8
  %.109 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.108, i64 0, i32 2
  %.110 = load %FloRange.580135*, %FloRange.580135** %.109, align 8
  call void %.76(%TypeChecker.580449* %.1, i64 1, %string.580129* %.97, %FloRange.580135* %.110)
  ret %MemberExpression.580341* null

.5.endif.if.endif:                                ; preds = %.5.endif.if
  %.116 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.74, i64 0, i32 47
  %.117 = load %string.580129* (%TypeChecker.580449*, %PropId.580339*)*, %string.580129* (%TypeChecker.580449*, %PropId.580339*)** %.116, align 8
  %.119 = call %string.580129* %.117(%TypeChecker.580449* %.1, %PropId.580339* %.65)
  %9 = ptrtoint %string.580129* %.119 to i64
  %.122 = trunc i64 %9 to i32
  %.124.not = icmp eq i32 %.122, 0
  br i1 %.124.not, label %.5.endif.if.endif.endif, label %.5.endif.if.endif.if

.5.endif.if.endif.if:                             ; preds = %.5.endif.if.endif
  %.128 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.129 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.128, i64 0, i32 16
  %.130 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.129, align 8
  %.134 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.33, align 8
  %.135 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.134, i64 0, i32 2
  %.136 = load %FloRange.580135*, %FloRange.580135** %.135, align 8
  call void %.130(%TypeChecker.580449* %.1, i64 4, %string.580129* %.119, %FloRange.580135* %.136)
  ret %MemberExpression.580341* null

.5.endif.if.endif.endif:                          ; preds = %.5.endif.if.endif
  %.141 = load %Program.580445*, %Program.580445** %.49, align 8
  %.143 = call %Type.580273* @get_class_prop_type(%Program.580445* %.141, %PropId.580339* %.65)
  store %Type.580273* %.143, %Type.580273** %prop_ty, align 8
  br label %.5.endif.endif

.5.endif.else.if:                                 ; preds = %.5.endif
  %.153 = getelementptr inbounds %Expression.580293, %Expression.580293* %.18, i64 1
  %10 = bitcast %Expression.580293* %.153 to i64*
  %.15410 = load i64, i64* %10, align 8
  %var_id = alloca %VarId.580331*, align 8
  %11 = bitcast %VarId.580331** %var_id to i64*
  store i64 %.15410, i64* %11, align 8
  %.156.cast = inttoptr i64 %.15410 to %VarId.580331*
  %.157 = getelementptr inbounds %VarId.580331, %VarId.580331* %.156.cast, i64 0, i32 1
  %.158 = load i64, i64* %.157, align 8
  %.159 = icmp eq i64 %.158, 3
  %.163 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  br i1 %.159, label %.5.endif.else.if.if, label %.5.endif.else.if.else

.5.endif.else.else:                               ; preds = %.5.endif
  %.336 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.337 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.336, i64 0, i32 16
  %.338 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.337, align 8
  %.339 = load %string.580129*, %string.580129** %prop_name, align 8
  %.343 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.336, i64 0, i32 10
  %.344 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.343, align 8
  %.346 = call %string.580129* %.344(%TypeChecker.580449* %.1, %Type.580273* %.43)
  %.347 = getelementptr inbounds %string.580129, %string.580129* %.339, i64 0, i32 0
  %.348 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.347, align 8
  %.349 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.348, i64 0, i32 10
  %.350 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.349, align 8
  %.351 = call i8* %.350(%string.580129* %.339)
  %.352 = getelementptr inbounds %string.580129, %string.580129* %.346, i64 0, i32 0
  %.353 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.352, align 8
  %.354 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.353, i64 0, i32 10
  %.355 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.354, align 8
  %.356 = call i8* %.355(%string.580129* %.346)
  %.358 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.324, i64 0, i64 0), i8* %.351, i8* %.356)
  %.360 = call i8* @malloc(i64 %.358)
  %.361 = call i64 (i8*, i8*, ...) @sprintf(i8* %.360, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.324, i64 0, i64 0), i8* %.351, i8* %.356)
  %.362 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.363 = bitcast i8* %.362 to %string.580129*
  %.364 = bitcast i8* %.362 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.364, align 8
  %.366 = getelementptr inbounds i8, i8* %.362, i64 8
  %12 = bitcast i8* %.366 to i8**
  store i8* %.360, i8** %12, align 8
  %.368 = getelementptr inbounds i8, i8* %.362, i64 16
  %13 = bitcast i8* %.368 to i64*
  store i64 %.358, i64* %13, align 8
  %.370 = getelementptr inbounds i8, i8* %.362, i64 24
  %14 = bitcast i8* %.370 to i64*
  store i64 %.358, i64* %14, align 8
  %.374 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.16, align 8
  %.375 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.374, i64 0, i32 1
  %.376 = load %FloRange.580135*, %FloRange.580135** %.375, align 8
  call void %.338(%TypeChecker.580449* %.1, i64 4, %string.580129* %.363, %FloRange.580135* %.376)
  ret %MemberExpression.580341* null

.5.endif.else.if.if:                              ; preds = %.5.endif.else.if
  %.164 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.163, i64 0, i32 6
  %.165 = load %Class.580403* (%TypeChecker.580449*, %VarId.580331*)*, %Class.580403* (%TypeChecker.580449*, %VarId.580331*)** %.164, align 8
  %.166 = load %VarId.580331*, %VarId.580331** %var_id, align 8
  %.167 = call %Class.580403* %.165(%TypeChecker.580449* %.1, %VarId.580331* %.166)
  %.170 = getelementptr inbounds %Class.580403, %Class.580403* %.167, i64 0, i32 8
  %.171 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.170, align 8
  %.172 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.171, i64 0, i32 0
  %.173 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.172, align 8
  %.174 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.173, i64 0, i32 3
  %.175 = load %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)** %.174, align 8
  %.176 = load %string.580129*, %string.580129** %prop_name, align 8
  %.177 = call %PropId.580339* %.175(%"Map<string, PropId>.580407"* %.171, %string.580129* %.176)
  store %PropId.580339* %.177, %PropId.580339** %prop_id, align 8
  %15 = ptrtoint %PropId.580339* %.177 to i64
  %.180 = trunc i64 %15 to i32
  %.182 = icmp eq i32 %.180, 0
  %.186 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  br i1 %.182, label %.5.endif.else.if.if.if, label %.5.endif.else.if.if.endif

.5.endif.else.if.else:                            ; preds = %.5.endif.else.if
  %.261 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.163, i64 0, i32 8
  %.262 = load %Enum.580417* (%TypeChecker.580449*, %VarId.580331*)*, %Enum.580417* (%TypeChecker.580449*, %VarId.580331*)** %.261, align 8
  %.263 = load %VarId.580331*, %VarId.580331** %var_id, align 8
  %.264 = call %Enum.580417* %.262(%TypeChecker.580449* %.1, %VarId.580331* %.263)
  %.267 = getelementptr inbounds %Enum.580417, %Enum.580417* %.264, i64 0, i32 4
  %.268 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.267, align 8
  %.269 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.268, i64 0, i32 0
  %.270 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.269, align 8
  %.271 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.270, i64 0, i32 3
  %.272 = load %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)** %.271, align 8
  %.273 = load %string.580129*, %string.580129** %prop_name, align 8
  %.274 = call %PropId.580339* %.272(%"Map<string, PropId>.580407"* %.268, %string.580129* %.273)
  store %PropId.580339* %.274, %PropId.580339** %prop_id, align 8
  %16 = ptrtoint %PropId.580339* %.274 to i64
  %.277 = trunc i64 %16 to i32
  %.279 = icmp eq i32 %.277, 0
  br i1 %.279, label %.5.endif.else.if.else.if, label %.5.endif.else.if.else.endif

.5.endif.else.if.if.if:                           ; preds = %.5.endif.else.if.if
  %.187 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.186, i64 0, i32 16
  %.188 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.187, align 8
  %.191 = getelementptr inbounds %Class.580403, %Class.580403* %.167, i64 0, i32 2
  %.192 = load %string.580129*, %string.580129** %.191, align 8
  %.193 = getelementptr inbounds %string.580129, %string.580129* %.176, i64 0, i32 0
  %.194 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.193, align 8
  %.195 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.194, i64 0, i32 10
  %.196 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.195, align 8
  %.197 = call i8* %.196(%string.580129* %.176)
  %.198 = getelementptr inbounds %string.580129, %string.580129* %.192, i64 0, i32 0
  %.199 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.198, align 8
  %.200 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.199, i64 0, i32 10
  %.201 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.200, align 8
  %.202 = call i8* %.201(%string.580129* %.192)
  %.204 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.322, i64 0, i64 0), i8* %.197, i8* %.202)
  %.206 = call i8* @malloc(i64 %.204)
  %.207 = call i64 (i8*, i8*, ...) @sprintf(i8* %.206, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.322, i64 0, i64 0), i8* %.197, i8* %.202)
  %.208 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.209 = bitcast i8* %.208 to %string.580129*
  %.210 = bitcast i8* %.208 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.210, align 8
  %.212 = getelementptr inbounds i8, i8* %.208, i64 8
  %17 = bitcast i8* %.212 to i8**
  store i8* %.206, i8** %17, align 8
  %.214 = getelementptr inbounds i8, i8* %.208, i64 16
  %18 = bitcast i8* %.214 to i64*
  store i64 %.204, i64* %18, align 8
  %.216 = getelementptr inbounds i8, i8* %.208, i64 24
  %19 = bitcast i8* %.216 to i64*
  store i64 %.204, i64* %19, align 8
  %.220 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.33, align 8
  %.221 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.220, i64 0, i32 2
  %.222 = load %FloRange.580135*, %FloRange.580135** %.221, align 8
  call void %.188(%TypeChecker.580449* %.1, i64 1, %string.580129* %.209, %FloRange.580135* %.222)
  ret %MemberExpression.580341* null

.5.endif.else.if.if.endif:                        ; preds = %.5.endif.else.if.if
  %.228 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.186, i64 0, i32 47
  %.229 = load %string.580129* (%TypeChecker.580449*, %PropId.580339*)*, %string.580129* (%TypeChecker.580449*, %PropId.580339*)** %.228, align 8
  %.231 = call %string.580129* %.229(%TypeChecker.580449* %.1, %PropId.580339* %.177)
  %20 = ptrtoint %string.580129* %.231 to i64
  %.234 = trunc i64 %20 to i32
  %.236.not = icmp eq i32 %.234, 0
  br i1 %.236.not, label %.5.endif.else.if.if.endif.endif, label %.5.endif.else.if.if.endif.if

.5.endif.else.if.if.endif.if:                     ; preds = %.5.endif.else.if.if.endif
  %.240 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.241 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.240, i64 0, i32 16
  %.242 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.241, align 8
  %.246 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.33, align 8
  %.247 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.246, i64 0, i32 2
  %.248 = load %FloRange.580135*, %FloRange.580135** %.247, align 8
  call void %.242(%TypeChecker.580449* %.1, i64 4, %string.580129* %.231, %FloRange.580135* %.248)
  ret %MemberExpression.580341* null

.5.endif.else.if.if.endif.endif:                  ; preds = %.5.endif.else.if.if.endif
  %.252 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.253 = load %Program.580445*, %Program.580445** %.252, align 8
  %.255 = call %Type.580273* @get_class_prop_type(%Program.580445* %.253, %PropId.580339* %.177)
  store %Type.580273* %.255, %Type.580273** %prop_ty, align 8
  br label %.5.endif.endif

.5.endif.else.if.else.if:                         ; preds = %.5.endif.else.if.else
  %.283 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.284 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.283, i64 0, i32 16
  %.285 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.284, align 8
  %.288 = getelementptr inbounds %Enum.580417, %Enum.580417* %.264, i64 0, i32 2
  %.289 = load %string.580129*, %string.580129** %.288, align 8
  %.290 = getelementptr inbounds %string.580129, %string.580129* %.273, i64 0, i32 0
  %.291 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.290, align 8
  %.292 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.291, i64 0, i32 10
  %.293 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.292, align 8
  %.294 = call i8* %.293(%string.580129* %.273)
  %.295 = getelementptr inbounds %string.580129, %string.580129* %.289, i64 0, i32 0
  %.296 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.295, align 8
  %.297 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.296, i64 0, i32 10
  %.298 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.297, align 8
  %.299 = call i8* %.298(%string.580129* %.289)
  %.301 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.323, i64 0, i64 0), i8* %.294, i8* %.299)
  %.303 = call i8* @malloc(i64 %.301)
  %.304 = call i64 (i8*, i8*, ...) @sprintf(i8* %.303, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.323, i64 0, i64 0), i8* %.294, i8* %.299)
  %.305 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.306 = bitcast i8* %.305 to %string.580129*
  %.307 = bitcast i8* %.305 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.307, align 8
  %.309 = getelementptr inbounds i8, i8* %.305, i64 8
  %21 = bitcast i8* %.309 to i8**
  store i8* %.303, i8** %21, align 8
  %.311 = getelementptr inbounds i8, i8* %.305, i64 16
  %22 = bitcast i8* %.311 to i64*
  store i64 %.301, i64* %22, align 8
  %.313 = getelementptr inbounds i8, i8* %.305, i64 24
  %23 = bitcast i8* %.313 to i64*
  store i64 %.301, i64* %23, align 8
  %.317 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.33, align 8
  %.318 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.317, i64 0, i32 2
  %.319 = load %FloRange.580135*, %FloRange.580135** %.318, align 8
  call void %.285(%TypeChecker.580449* %.1, i64 1, %string.580129* %.306, %FloRange.580135* %.319)
  ret %MemberExpression.580341* null

.5.endif.else.if.else.endif:                      ; preds = %.5.endif.else.if.else
  %.323 = getelementptr inbounds %Enum.580417, %Enum.580417* %.264, i64 0, i32 1
  %.324 = load %EnumId.580291*, %EnumId.580291** %.323, align 8
  %.325 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.326 = bitcast i8* %.325 to %EnumType.580299*
  %.327 = bitcast i8* %.325 to %EnumType_vtable_ty.580300**
  store %EnumType_vtable_ty.580300* @EnumType_vtable_data, %EnumType_vtable_ty.580300** %.327, align 8
  call void @EnumType_constructor(%EnumType.580299* %.326, %EnumId.580291* %.324)
  %24 = bitcast %Type.580273** %prop_ty to i8**
  store i8* %.325, i8** %24, align 8
  br label %.5.endif.endif
}

define noalias %TernaryExpression.580321* @TypeChecker_check_ternary_expr(%TypeChecker.580449* %.1, %Type.580273* %.2, %TernaryExpressionNode.580207* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.11, i64 0, i32 61
  %.13 = load %Expression.580293* (%TypeChecker.580449*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %ExpressionNode.580177*)** %.12, align 8
  %.15 = getelementptr inbounds %TernaryExpressionNode.580207, %TernaryExpressionNode.580207* %.3, i64 0, i32 4
  %.16 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.15, align 8
  %.17 = call %Expression.580293* %.13(%TypeChecker.580449* %.1, %ExpressionNode.580177* %.16)
  %.21 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.21, i64 0, i32 17
  %.23 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.22, align 8
  %.24 = call i1 %.23(%TypeChecker.580449* %.1)
  br i1 %.24, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif.endif, %.5.endif, %.5
  ret %TernaryExpression.580321* null

.5.endif:                                         ; preds = %.5
  %.29 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.30 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.29, i64 0, i32 60
  %.31 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.30, align 8
  %.34 = getelementptr inbounds %TernaryExpressionNode.580207, %TernaryExpressionNode.580207* %.3, i64 0, i32 5
  %.35 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.34, align 8
  %.36 = call %Expression.580293* %.31(%TypeChecker.580449* %.1, %Type.580273* %.2, %ExpressionNode.580177* %.35)
  %.40 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.41 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.40, i64 0, i32 17
  %.42 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.41, align 8
  %.43 = call i1 %.42(%TypeChecker.580449* %.1)
  br i1 %.43, label %.5.if, label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif
  %.47 = getelementptr inbounds %Expression.580293, %Expression.580293* %.36, i64 0, i32 4
  %0 = bitcast %Type.580273** %.47 to i64*
  %.481 = load i64, i64* %0, align 8
  %is_true_ty = alloca %Type.580273*, align 8
  %1 = bitcast %Type.580273** %is_true_ty to i64*
  store i64 %.481, i64* %1, align 8
  %.52 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.52, i64 0, i32 60
  %.54 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.53, align 8
  %.55.cast = inttoptr i64 %.481 to %Type.580273*
  %.57 = getelementptr inbounds %TernaryExpressionNode.580207, %TernaryExpressionNode.580207* %.3, i64 0, i32 6
  %.58 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.57, align 8
  %.59 = call %Expression.580293* %.54(%TypeChecker.580449* %.1, %Type.580273* %.55.cast, %ExpressionNode.580177* %.58)
  %.63 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.64 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.63, i64 0, i32 17
  %.65 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.64, align 8
  %.66 = call i1 %.65(%TypeChecker.580449* %.1)
  br i1 %.66, label %.5.if, label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.70 = getelementptr inbounds %Expression.580293, %Expression.580293* %.59, i64 0, i32 4
  %2 = bitcast %Type.580273** %.70 to i64*
  %.712 = load i64, i64* %2, align 8
  %is_false_ty = alloca %Type.580273*, align 8
  %3 = bitcast %Type.580273** %is_false_ty to i64*
  store i64 %.712, i64* %3, align 8
  %.75 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.76 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.75, i64 0, i32 9
  %.77 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.76, align 8
  %.78 = load %Type.580273*, %Type.580273** %is_true_ty, align 8
  %.79.cast = inttoptr i64 %.712 to %Type.580273*
  %.80 = call i1 %.77(%TypeChecker.580449* %.1, %Type.580273* %.78, %Type.580273* %.79.cast)
  br i1 %.80, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.85 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.86 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.85, i64 0, i32 16
  %.87 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.86, align 8
  %.91 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.85, i64 0, i32 10
  %.92 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.91, align 8
  %.94 = call %string.580129* %.92(%TypeChecker.580449* %.1, %Type.580273* %.78)
  %.97 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.98 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.97, i64 0, i32 10
  %.99 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.98, align 8
  %.100 = load %Type.580273*, %Type.580273** %is_false_ty, align 8
  %.101 = call %string.580129* %.99(%TypeChecker.580449* %.1, %Type.580273* %.100)
  %.102 = getelementptr inbounds %string.580129, %string.580129* %.94, i64 0, i32 0
  %.103 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.102, align 8
  %.104 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.103, i64 0, i32 10
  %.105 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.104, align 8
  %.106 = call i8* %.105(%string.580129* %.94)
  %.107 = getelementptr inbounds %string.580129, %string.580129* %.101, i64 0, i32 0
  %.108 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.107, align 8
  %.109 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.108, i64 0, i32 10
  %.110 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.109, align 8
  %.111 = call i8* %.110(%string.580129* %.101)
  %.113 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.325, i64 0, i64 0), i8* %.106, i8* %.111)
  %.115 = call i8* @malloc(i64 %.113)
  %.116 = call i64 (i8*, i8*, ...) @sprintf(i8* %.115, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.325, i64 0, i64 0), i8* %.106, i8* %.111)
  %.117 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.118 = bitcast i8* %.117 to %string.580129*
  %.119 = bitcast i8* %.117 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.119, align 8
  %.121 = getelementptr inbounds i8, i8* %.117, i64 8
  %4 = bitcast i8* %.121 to i8**
  store i8* %.115, i8** %4, align 8
  %.123 = getelementptr inbounds i8, i8* %.117, i64 16
  %5 = bitcast i8* %.123 to i64*
  store i64 %.113, i64* %5, align 8
  %.125 = getelementptr inbounds i8, i8* %.117, i64 24
  %6 = bitcast i8* %.125 to i64*
  store i64 %.113, i64* %6, align 8
  %.128 = getelementptr inbounds %TernaryExpressionNode.580207, %TernaryExpressionNode.580207* %.3, i64 0, i32 1
  %.129 = load %FloRange.580135*, %FloRange.580135** %.128, align 8
  call void %.87(%TypeChecker.580449* %.1, i64 5, %string.580129* %.118, %FloRange.580135* %.129)
  ret %TernaryExpression.580321* null

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.135 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.136 = bitcast i8* %.135 to %TernaryExpression.580321*
  %.137 = bitcast i8* %.135 to %TernaryExpression_vtable_ty.580322**
  store %TernaryExpression_vtable_ty.580322* @TernaryExpression_vtable_data, %TernaryExpression_vtable_ty.580322** %.137, align 8
  call void @TernaryExpression_constructor(%TernaryExpression.580321* %.136, %Expression.580293* %.17, %Expression.580293* %.36, %Expression.580293* %.59)
  ret %TernaryExpression.580321* %.136
}

define noalias %Expression.580293* @TypeChecker_check_object_index_expr(%TypeChecker.580449* %.1, %Expression.580293* %.2, %ExpressionIndexNode.580197* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 0, i32 4
  %0 = bitcast %Type.580273** %.10 to %ObjectType.580297**
  %.111 = load %ObjectType.580297*, %ObjectType.580297** %0, align 8
  %.15 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.16 = load %Program.580445*, %Program.580445** %.15, align 8
  %.18 = getelementptr inbounds %ObjectType.580297, %ObjectType.580297* %.111, i64 0, i32 2
  %.19 = load %ClassId.580289*, %ClassId.580289** %.18, align 8
  %.20 = call %Class.580403* @get_class(%Program.580445* %.16, %ClassId.580289* %.19)
  %.23 = getelementptr inbounds %Class.580403, %Class.580403* %.20, i64 0, i32 7
  %.24 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.24, i64 0, i32 0
  %.26 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.25, align 8
  %.27 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.26, i64 0, i32 3
  %.28 = load %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)*, %PropId.580339* (%"Map<string, PropId>.580407"*, %string.580129*)** %.27, align 8
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.580129*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.30.repack, align 8
  %.30.repack2 = getelementptr inbounds i8, i8* %.29, i64 8
  %1 = bitcast i8* %.30.repack2 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.243, i64 0, i64 0), i8** %1, align 8
  %.30.repack3 = getelementptr inbounds i8, i8* %.29, i64 16
  %2 = bitcast i8* %.30.repack3 to i64*
  store i64 11, i64* %2, align 8
  %.30.repack4 = getelementptr inbounds i8, i8* %.29, i64 24
  %3 = bitcast i8* %.30.repack4 to i64*
  store i64 11, i64* %3, align 8
  %.32 = call %PropId.580339* %.28(%"Map<string, PropId>.580407"* %.24, %string.580129* %.30)
  %4 = ptrtoint %PropId.580339* %.32 to i64
  %.35 = trunc i64 %4 to i32
  %.37 = icmp eq i32 %.35, 0
  br i1 %.37, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.40 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.41 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.40, align 8
  %.42 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.41, i64 0, i32 16
  %.43 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.42, align 8
  %.45 = getelementptr inbounds %Class.580403, %Class.580403* %.20, i64 0, i32 2
  %.46 = load %string.580129*, %string.580129** %.45, align 8
  %.47 = getelementptr inbounds %string.580129, %string.580129* %.46, i64 0, i32 0
  %.48 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.47, align 8
  %.49 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.48, i64 0, i32 10
  %.50 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.49, align 8
  %.51 = call i8* %.50(%string.580129* %.46)
  %.53 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @str.326, i64 0, i64 0), i8* %.51)
  %.55 = call i8* @malloc(i64 %.53)
  %.56 = call i64 (i8*, i8*, ...) @sprintf(i8* %.55, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @str.326, i64 0, i64 0), i8* %.51)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.580129*
  %.59 = bitcast i8* %.57 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %5 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %5, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %6 = bitcast i8* %.63 to i64*
  store i64 %.53, i64* %6, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %7 = bitcast i8* %.65 to i64*
  store i64 %.53, i64* %7, align 8
  %.68 = getelementptr inbounds %ExpressionIndexNode.580197, %ExpressionIndexNode.580197* %.3, i64 0, i32 1
  %.69 = load %FloRange.580135*, %FloRange.580135** %.68, align 8
  call void %.43(%TypeChecker.580449* %.1, i64 4, %string.580129* %.58, %FloRange.580135* %.69)
  ret %Expression.580293* null

.5.endif:                                         ; preds = %.5
  %.74 = load %Program.580445*, %Program.580445** %.15, align 8
  %.76 = call %Type.580273* @get_class_prop_type(%Program.580445* %.74, %PropId.580339* %.32)
  %method_type = alloca %FunctionType.580279*, align 8
  %8 = bitcast %FunctionType.580279** %method_type to %Type.580273**
  store %Type.580273* %.76, %Type.580273** %8, align 8
  %.80 = getelementptr inbounds %Type.580273, %Type.580273* %.76, i64 1
  %9 = bitcast %Type.580273* %.80 to %"Array<Type>.580281"**
  %.81 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %9, align 8
  %.82 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.81, i64 0, i32 0
  %.83 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.82, align 8
  %.84 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.83, i64 0, i32 5
  %.85 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.84, align 8
  %.86 = call %Type.580273* %.85(%"Array<Type>.580281"* %.81, i64 0)
  %.89 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.90 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.89, align 8
  %.91 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.90, i64 0, i32 60
  %.92 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.91, align 8
  %.95 = getelementptr inbounds %ExpressionIndexNode.580197, %ExpressionIndexNode.580197* %.3, i64 0, i32 5
  %.96 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.95, align 8
  %.97 = call %Expression.580293* %.92(%TypeChecker.580449* %.1, %Type.580273* %.86, %ExpressionNode.580177* %.96)
  %index = alloca %Expression.580293*, align 8
  store %Expression.580293* %.97, %Expression.580293** %index, align 8
  %.101 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.89, align 8
  %.102 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.101, i64 0, i32 9
  %.103 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.102, align 8
  %.106 = getelementptr inbounds %Expression.580293, %Expression.580293* %.97, i64 0, i32 4
  %.107 = load %Type.580273*, %Type.580273** %.106, align 8
  %.108 = call i1 %.103(%TypeChecker.580449* %.1, %Type.580273* %.86, %Type.580273* %.107)
  br i1 %.108, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.113 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.89, align 8
  %.114 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.113, i64 0, i32 16
  %.115 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.114, align 8
  %.119 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.113, i64 0, i32 10
  %.120 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.119, align 8
  %.122 = call %string.580129* %.120(%TypeChecker.580449* %.1, %Type.580273* %.86)
  %.125 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.89, align 8
  %.126 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.125, i64 0, i32 10
  %.127 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.126, align 8
  %.130 = load %Type.580273*, %Type.580273** %.106, align 8
  %.131 = call %string.580129* %.127(%TypeChecker.580449* %.1, %Type.580273* %.130)
  %.132 = getelementptr inbounds %string.580129, %string.580129* %.122, i64 0, i32 0
  %.133 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.132, align 8
  %.134 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.133, i64 0, i32 10
  %.135 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.134, align 8
  %.136 = call i8* %.135(%string.580129* %.122)
  %.137 = getelementptr inbounds %string.580129, %string.580129* %.131, i64 0, i32 0
  %.138 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.137, align 8
  %.139 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.138, i64 0, i32 10
  %.140 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.139, align 8
  %.141 = call i8* %.140(%string.580129* %.131)
  %.143 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.309, i64 0, i64 0), i8* %.136, i8* %.141)
  %.145 = call i8* @malloc(i64 %.143)
  %.146 = call i64 (i8*, i8*, ...) @sprintf(i8* %.145, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.309, i64 0, i64 0), i8* %.136, i8* %.141)
  %.147 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.148 = bitcast i8* %.147 to %string.580129*
  %.149 = bitcast i8* %.147 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.149, align 8
  %.151 = getelementptr inbounds i8, i8* %.147, i64 8
  %10 = bitcast i8* %.151 to i8**
  store i8* %.145, i8** %10, align 8
  %.153 = getelementptr inbounds i8, i8* %.147, i64 16
  %11 = bitcast i8* %.153 to i64*
  store i64 %.143, i64* %11, align 8
  %.155 = getelementptr inbounds i8, i8* %.147, i64 24
  %12 = bitcast i8* %.155 to i64*
  store i64 %.143, i64* %12, align 8
  %.159 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.95, align 8
  %.160 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.159, i64 0, i32 1
  %.161 = load %FloRange.580135*, %FloRange.580135** %.160, align 8
  call void %.115(%TypeChecker.580449* %.1, i64 5, %string.580129* %.148, %FloRange.580135* %.161)
  ret %Expression.580293* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.168 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.169 = bitcast i8* %.168 to %MemberExpression.580341*
  %.170 = bitcast i8* %.168 to %MemberExpression_vtable_ty.580342**
  store %MemberExpression_vtable_ty.580342* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.580342** %.170, align 8
  call void @MemberExpression_constructor(%MemberExpression.580341* %.169, %Expression.580293* %.2, %PropId.580339* %.32, %Type.580273* %.76)
  %member_expr = alloca %MemberExpression.580341*, align 8
  %13 = bitcast %MemberExpression.580341** %member_expr to i8**
  store i8* %.168, i8** %13, align 8
  %14 = bitcast %Expression.580293** %index to i64*
  %.1746 = load i64, i64* %14, align 8
  %.176 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %15 = bitcast i8* %.176 to i64*
  store i64 %.1746, i64* %15, align 8
  %.180 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.182 = bitcast i8* %.180 to %"Array<Expression>_vtable_ty.580312"**
  store %"Array<Expression>_vtable_ty.580312"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.580312"** %.182, align 8
  %.184 = getelementptr inbounds i8, i8* %.180, i64 8
  %16 = bitcast i8* %.184 to i8**
  store i8* %.176, i8** %16, align 8
  %.186 = getelementptr inbounds i8, i8* %.180, i64 16
  %17 = bitcast i8* %.186 to i64*
  store i64 1, i64* %17, align 8
  %.188 = getelementptr inbounds i8, i8* %.180, i64 24
  %18 = bitcast i8* %.188 to i64*
  store i64 8, i64* %18, align 8
  %19 = bitcast %MemberExpression.580341** %member_expr to %Expression.580293**
  %.1917 = load %Expression.580293*, %Expression.580293** %19, align 8
  %.193.cast = bitcast i8* %.180 to %"Array<Expression>.580311"*
  %.194 = load %FunctionType.580279*, %FunctionType.580279** %method_type, align 8
  %.195 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.194, i64 0, i32 3
  %.196 = load %Type.580273*, %Type.580273** %.195, align 8
  %.197 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.198 = bitcast i8* %.197 to %CallExpression.580329*
  %.199 = bitcast i8* %.197 to %CallExpression_vtable_ty.580330**
  store %CallExpression_vtable_ty.580330* @CallExpression_vtable_data, %CallExpression_vtable_ty.580330** %.199, align 8
  call void @CallExpression_constructor(%CallExpression.580329* %.198, %Expression.580293* %.1917, %"Array<Expression>.580311"* %.193.cast, %Type.580273* %.196)
  %.202 = bitcast i8* %.197 to %Expression.580293*
  ret %Expression.580293* %.202
}

define %IndexExpression.580327* @TypeChecker_check_index_expr(%TypeChecker.580449* %.1, %Type.580273* nocapture readnone %.2, %ExpressionIndexNode.580197* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.11, i64 0, i32 60
  %.13 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.12, align 8
  %.14 = call %Type.580273* @Type_unknown()
  %.16 = getelementptr inbounds %ExpressionIndexNode.580197, %ExpressionIndexNode.580197* %.3, i64 0, i32 4
  %.17 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.16, align 8
  %.18 = call %Expression.580293* %.13(%TypeChecker.580449* %.1, %Type.580273* %.14, %ExpressionNode.580177* %.17)
  %.21 = getelementptr inbounds %Expression.580293, %Expression.580293* %.18, i64 0, i32 4
  %.22 = load %Type.580273*, %Type.580273** %.21, align 8
  %.23 = call i1 @is_object(%Type.580273* %.22)
  %.27 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  br i1 %.23, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.28 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.27, i64 0, i32 50
  %.29 = load %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %ExpressionIndexNode.580197*)*, %Expression.580293* (%TypeChecker.580449*, %Expression.580293*, %ExpressionIndexNode.580197*)** %.28, align 8
  %.32 = call %Expression.580293* %.29(%TypeChecker.580449* %.1, %Expression.580293* %.18, %ExpressionIndexNode.580197* %.3)
  %.33 = bitcast %Expression.580293* %.32 to %IndexExpression.580327*
  ret %IndexExpression.580327* %.33

.5.endif:                                         ; preds = %.5
  %.38 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.27, i64 0, i32 60
  %.39 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.38, align 8
  %.40 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.41 = bitcast i8* %.40 to %Type.580273*
  %.42 = bitcast i8* %.40 to %Type_vtable_ty.580274**
  store %Type_vtable_ty.580274* @Type_vtable_data, %Type_vtable_ty.580274** %.42, align 8
  call void @Type_constructor(%Type.580273* %.41, i64 7)
  %.46 = getelementptr inbounds %ExpressionIndexNode.580197, %ExpressionIndexNode.580197* %.3, i64 0, i32 5
  %.47 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.46, align 8
  %.48 = call %Expression.580293* %.39(%TypeChecker.580449* %.1, %Type.580273* %.41, %ExpressionNode.580177* %.47)
  %.52 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.52, i64 0, i32 17
  %.54 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.53, align 8
  %.55 = call i1 %.54(%TypeChecker.580449* %.1)
  br i1 %.55, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  ret %IndexExpression.580327* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.59 = getelementptr inbounds %Expression.580293, %Expression.580293* %.48, i64 0, i32 4
  %.60 = load %Type.580273*, %Type.580273** %.59, align 8
  %.61 = call i1 @is_int(%Type.580273* %.60)
  br i1 %.61, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.66 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.67 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.66, i64 0, i32 16
  %.68 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.67, align 8
  %.69 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.70 = bitcast i8* %.69 to %string.580129*
  %.70.repack = bitcast i8* %.69 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.70.repack, align 8
  %.70.repack6 = getelementptr inbounds i8, i8* %.69, i64 8
  %0 = bitcast i8* %.70.repack6 to i8**
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.327, i64 0, i64 0), i8** %0, align 8
  %.70.repack7 = getelementptr inbounds i8, i8* %.69, i64 16
  %1 = bitcast i8* %.70.repack7 to i64*
  store i64 34, i64* %1, align 8
  %.70.repack8 = getelementptr inbounds i8, i8* %.69, i64 24
  %2 = bitcast i8* %.70.repack8 to i64*
  store i64 34, i64* %2, align 8
  %.74 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.46, align 8
  %.75 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.74, i64 0, i32 1
  %.76 = load %FloRange.580135*, %FloRange.580135** %.75, align 8
  call void %.68(%TypeChecker.580449* %.1, i64 5, %string.580129* %.70, %FloRange.580135* %.76)
  ret %IndexExpression.580327* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.79 = call %Type.580273* @Type_unknown()
  %value_type = alloca %Type.580273*, align 8
  store %Type.580273* %.79, %Type.580273** %value_type, align 8
  %3 = bitcast %Type.580273** %.21 to i64*
  %.831 = load i64, i64* %3, align 8
  %root_type = alloca %Type.580273*, align 8
  %4 = bitcast %Type.580273** %root_type to i64*
  store i64 %.831, i64* %4, align 8
  %.85.cast = inttoptr i64 %.831 to %Type.580273*
  %.86 = getelementptr inbounds %Type.580273, %Type.580273* %.85.cast, i64 0, i32 1
  %.87 = load i64, i64* %.86, align 8
  %.88 = icmp eq i64 %.87, 15
  br i1 %.88, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.else

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %5 = bitcast %Type.580273** %root_type to %PointerType.580277**
  %.904 = load %PointerType.580277*, %PointerType.580277** %5, align 8
  %.92 = getelementptr inbounds %PointerType.580277, %PointerType.580277* %.904, i64 0, i32 2
  %6 = bitcast %Type.580273** %.92 to i64*
  %.935 = load i64, i64* %6, align 8
  %7 = bitcast %Type.580273** %value_type to i64*
  store i64 %.935, i64* %7, align 8
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.else:                        ; preds = %.5.endif.endif.endif
  %.96 = load %Type.580273*, %Type.580273** %root_type, align 8
  %.97 = getelementptr inbounds %Type.580273, %Type.580273* %.96, i64 0, i32 1
  %.98 = load i64, i64* %.97, align 8
  %.99 = icmp eq i64 %.98, 16
  br i1 %.99, label %.5.endif.endif.endif.else.if, label %.5.endif.endif.endif.else.else

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif.else.if, %.5.endif.endif.endif.if
  %.147 = load %Type.580273*, %Type.580273** %value_type, align 8
  %.148 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.149 = bitcast i8* %.148 to %IndexExpression.580327*
  %.150 = bitcast i8* %.148 to %IndexExpression_vtable_ty.580328**
  store %IndexExpression_vtable_ty.580328* @IndexExpression_vtable_data, %IndexExpression_vtable_ty.580328** %.150, align 8
  call void @IndexExpression_constructor(%IndexExpression.580327* %.149, %Expression.580293* %.18, %Expression.580293* %.48, %Type.580273* %.147)
  ret %IndexExpression.580327* %.149

.5.endif.endif.endif.else.if:                     ; preds = %.5.endif.endif.endif.else
  %8 = bitcast %Type.580273** %root_type to %ArrayType.580295**
  %.1012 = load %ArrayType.580295*, %ArrayType.580295** %8, align 8
  %.103 = getelementptr inbounds %ArrayType.580295, %ArrayType.580295* %.1012, i64 0, i32 2
  %9 = bitcast %Type.580273** %.103 to i64*
  %.1043 = load i64, i64* %9, align 8
  %10 = bitcast %Type.580273** %value_type to i64*
  store i64 %.1043, i64* %10, align 8
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.else.else:                   ; preds = %.5.endif.endif.endif.else
  %.109 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.110 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.109, i64 0, i32 16
  %.111 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.110, align 8
  %.115 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.109, i64 0, i32 10
  %.116 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.115, align 8
  %.118 = call %string.580129* %.116(%TypeChecker.580449* %.1, %Type.580273* %.96)
  %.119 = getelementptr inbounds %string.580129, %string.580129* %.118, i64 0, i32 0
  %.120 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.119, align 8
  %.121 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.120, i64 0, i32 10
  %.122 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.121, align 8
  %.123 = call i8* %.122(%string.580129* %.118)
  %.125 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.328, i64 0, i64 0), i8* %.123)
  %.127 = call i8* @malloc(i64 %.125)
  %.128 = call i64 (i8*, i8*, ...) @sprintf(i8* %.127, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.328, i64 0, i64 0), i8* %.123)
  %.129 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.130 = bitcast i8* %.129 to %string.580129*
  %.131 = bitcast i8* %.129 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.131, align 8
  %.133 = getelementptr inbounds i8, i8* %.129, i64 8
  %11 = bitcast i8* %.133 to i8**
  store i8* %.127, i8** %11, align 8
  %.135 = getelementptr inbounds i8, i8* %.129, i64 16
  %12 = bitcast i8* %.135 to i64*
  store i64 %.125, i64* %12, align 8
  %.137 = getelementptr inbounds i8, i8* %.129, i64 24
  %13 = bitcast i8* %.137 to i64*
  store i64 %.125, i64* %13, align 8
  %.140 = getelementptr inbounds %ExpressionIndexNode.580197, %ExpressionIndexNode.580197* %.3, i64 0, i32 1
  %.141 = load %FloRange.580135*, %FloRange.580135** %.140, align 8
  call void %.111(%TypeChecker.580449* %.1, i64 5, %string.580129* %.130, %FloRange.580135* %.141)
  ret %IndexExpression.580327* null
}

define %"Array<FunctionArg>.580393"* @TypeChecker_get_func_args_from_expression(%TypeChecker.580449* nocapture readonly %.1, %Expression.580293* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif [
    i64 7, label %.4.if
    i64 12, label %.4.else.if
  ]

.4.if:                                            ; preds = %.4
  %.14 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1
  %0 = bitcast %Expression.580293* %.14 to i64*
  %.153 = load i64, i64* %0, align 8
  %var_id = alloca %VarId.580331*, align 8
  %1 = bitcast %VarId.580331** %var_id to i64*
  store i64 %.153, i64* %1, align 8
  %.17.cast = inttoptr i64 %.153 to %VarId.580331*
  %.18 = getelementptr inbounds %VarId.580331, %VarId.580331* %.17.cast, i64 0, i32 1
  %.19 = load i64, i64* %.18, align 8
  %.20 = icmp eq i64 %.19, 0
  br i1 %.20, label %.4.if.if, label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  ret %"Array<FunctionArg>.580393"* null

.4.if.if:                                         ; preds = %.4.if
  %.23 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.24 = load %Program.580445*, %Program.580445** %.23, align 8
  %.25 = load %VarId.580331*, %VarId.580331** %var_id, align 8
  %.26 = call %Function.580391* @get_func(%Program.580445* %.24, %VarId.580331* %.25)
  %.27 = getelementptr inbounds %Function.580391, %Function.580391* %.26, i64 0, i32 3
  %.28 = load %"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"** %.27, align 8
  ret %"Array<FunctionArg>.580393"* %.28

.4.else.if:                                       ; preds = %.4
  %.38 = getelementptr inbounds %Expression.580293, %Expression.580293* %.2, i64 1, i32 1
  %2 = bitcast i64* %.38 to %PropId.580339**
  %.3912 = load %PropId.580339*, %PropId.580339** %2, align 8
  %.42 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 1
  %.43 = load %Program.580445*, %Program.580445** %.42, align 8
  %.45 = call %ClassMethod.580401* @get_method(%Program.580445* %.43, %PropId.580339* %.3912)
  %.46 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.45, i64 0, i32 7
  %.47 = load %"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"** %.46, align 8
  ret %"Array<FunctionArg>.580393"* %.47
}

define %"Array<Expression>.580311"* @TypeChecker_fill_in_call_args(%TypeChecker.580449* %.1, %FunctionType.580279* nocapture readonly %.2, %"Array<FunctionArg>.580393"* %.3, %"Array<ExpressionNode>.580189"* %.4) {
.6:
  %.12 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.14 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.15 = bitcast i8* %.14 to %"Array<Expression>.580311"*
  %.16 = bitcast i8* %.14 to %"Array<Expression>_vtable_ty.580312"**
  store %"Array<Expression>_vtable_ty.580312"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.580312"** %.16, align 8
  %.18 = getelementptr inbounds i8, i8* %.14, i64 8
  %0 = bitcast i8* %.18 to i8**
  store i8* %.12, i8** %0, align 8
  %.20 = getelementptr inbounds i8, i8* %.14, i64 16
  %1 = bitcast i8* %.20 to i64*
  store i64 0, i64* %1, align 8
  %.22 = getelementptr inbounds i8, i8* %.14, i64 24
  %2 = bitcast i8* %.22 to i64*
  store i64 8, i64* %2, align 8
  %.30 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.4, i64 0, i32 2
  %.3111 = load i64, i64* %.30, align 8
  %.3212 = icmp sgt i64 %.3111, 0
  br i1 %.3212, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.6
  %.35 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.2, i64 0, i32 2
  %.58 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.65 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.4, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %end
  %storemerge13 = phi i64 [ 0, %for.body.lr.ph ], [ %.80, %end ]
  %.36 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.35, align 8
  %.37 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.36, i64 0, i32 2
  %.38 = load i64, i64* %.37, align 8
  %.40 = icmp sgt i64 %.38, %storemerge13
  br i1 %.40, label %true_block, label %false_block

for.end:                                          ; preds = %end, %.6
  %.84 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.85 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.84, align 8
  %.86 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.85, i64 0, i32 17
  %.87 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.86, align 8
  %.88 = call i1 %.87(%TypeChecker.580449* %.1)
  %3 = ptrtoint %"Array<FunctionArg>.580393"* %.3 to i64
  %.90 = trunc i64 %3 to i32
  %.92 = icmp eq i32 %.90, 0
  %.93 = or i1 %.92, %.88
  br i1 %.93, label %for.end.if, label %for.end.endif

true_block:                                       ; preds = %for.body
  %.46 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.36, i64 0, i32 0
  %.47 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.46, align 8
  %.48 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.47, i64 0, i32 5
  %.49 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.48, align 8
  %.50 = call %Type.580273* %.49(%"Array<Type>.580281"* %.36, i64 %storemerge13)
  br label %end

false_block:                                      ; preds = %for.body
  %.52 = call %Type.580273* @Type_unknown()
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.54 = phi %Type.580273* [ %.50, %true_block ], [ %.52, %false_block ]
  %.59 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.58, align 8
  %.60 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.59, i64 0, i32 60
  %.61 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.60, align 8
  %.66 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.65, align 8
  %.67 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.66, i64 0, i32 5
  %.68 = load %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)*, %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)** %.67, align 8
  %.69 = call %ExpressionNode.580177* %.68(%"Array<ExpressionNode>.580189"* %.4, i64 %storemerge13)
  %.70 = call %Expression.580293* %.61(%TypeChecker.580449* %.1, %Type.580273* %.54, %ExpressionNode.580177* %.69)
  %.72 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.16, align 8
  %.73 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.72, i64 0, i32 2
  %.74 = load void (%"Array<Expression>.580311"*, %Expression.580293*)*, void (%"Array<Expression>.580311"*, %Expression.580293*)** %.73, align 8
  call void %.74(%"Array<Expression>.580311"* %.15, %Expression.580293* %.70)
  %.80 = add nuw nsw i64 %storemerge13, 1
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp slt i64 %.80, %.31
  br i1 %.32, label %for.body, label %for.end

for.end.if:                                       ; preds = %for.body.1.endif, %for.cond.1.preheader, %for.end.endif, %for.end
  ret %"Array<Expression>.580311"* %.15

for.end.endif:                                    ; preds = %for.end
  %.98 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.3, i64 0, i32 2
  %.99 = load i64, i64* %.98, align 8
  %.102 = load i64, i64* %.30, align 8
  %.103 = icmp sgt i64 %.99, %.102
  br i1 %.103, label %for.cond.1.preheader, label %for.end.if

for.cond.1.preheader:                             ; preds = %for.end.endif
  %.1148 = load i64, i64* %.98, align 8
  %.1159 = icmp slt i64 %.102, %.1148
  br i1 %.1159, label %for.body.1.lr.ph, label %for.end.if

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.119 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.3, i64 0, i32 0
  br label %for.body.1

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1.endif
  %storemerge110 = phi i64 [ %.102, %for.body.1.lr.ph ], [ %.146, %for.body.1.endif ]
  %.120 = load %"Array<FunctionArg>_vtable_ty.580394"*, %"Array<FunctionArg>_vtable_ty.580394"** %.119, align 8
  %.121 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.580394", %"Array<FunctionArg>_vtable_ty.580394"* %.120, i64 0, i32 5
  %.122 = load %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)*, %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)** %.121, align 8
  %.123 = call %FunctionArg.580389* %.122(%"Array<FunctionArg>.580393"* %.3, i64 %storemerge110)
  %.126 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.123, i64 0, i32 7
  %4 = bitcast %Expression.580293** %.126 to i64*
  %.1272 = load i64, i64* %4, align 8
  %.128 = trunc i64 %.1272 to i32
  %.130.not = icmp eq i32 %.128, 0
  br i1 %.130.not, label %for.body.1.endif, label %for.body.1.if

for.body.1.if:                                    ; preds = %for.body.1
  %.135 = load %Expression.580293*, %Expression.580293** %.126, align 8
  %.137 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.16, align 8
  %.138 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.137, i64 0, i32 2
  %.139 = load void (%"Array<Expression>.580311"*, %Expression.580293*)*, void (%"Array<Expression>.580311"*, %Expression.580293*)** %.138, align 8
  call void %.139(%"Array<Expression>.580311"* %.15, %Expression.580293* %.135)
  br label %for.body.1.endif

for.body.1.endif:                                 ; preds = %for.body.1, %for.body.1.if
  %.146 = add nsw i64 %storemerge110, 1
  %.114 = load i64, i64* %.98, align 8
  %.115 = icmp slt i64 %.146, %.114
  br i1 %.115, label %for.body.1, label %for.end.if
}

define i64 @TypeChecker_check_function_call_args_match(%TypeChecker.580449* %.1, %FunctionType.580279* nocapture readonly %.2, %"Array<Expression>.580311"* %.3) {
.5:
  %.10 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.2, i64 0, i32 2
  %.11 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.11, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.15 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.3, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.17.not = icmp eq i64 %.13, %.16
  br i1 %.17.not, label %for.cond.preheader, label %.5.if

for.cond.preheader:                               ; preds = %.5
  %.271 = load i64, i64* %.15, align 8
  %.282 = icmp sgt i64 %.271, 0
  br i1 %.282, label %for.body.lr.ph, label %.5.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.31 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.46 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.3, i64 0, i32 0
  br label %for.body

.5.if:                                            ; preds = %for.body.endif, %for.body, %for.cond.preheader, %.5
  %merge = phi i64 [ -1, %.5 ], [ -2, %for.cond.preheader ], [ %storemerge3, %for.body ], [ -2, %for.body.endif ]
  ret i64 %merge

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.62, %for.body.endif ]
  %.32 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.31, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.32, i64 0, i32 9
  %.34 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.33, align 8
  %.38 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.10, align 8
  %.39 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.38, i64 0, i32 0
  %.40 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.40, i64 0, i32 5
  %.42 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.41, align 8
  %.43 = call %Type.580273* %.42(%"Array<Type>.580281"* %.38, i64 %storemerge3)
  %.47 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.46, align 8
  %.48 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.47, i64 0, i32 5
  %.49 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.48, align 8
  %.50 = call %Expression.580293* %.49(%"Array<Expression>.580311"* %.3, i64 %storemerge3)
  %.51 = getelementptr inbounds %Expression.580293, %Expression.580293* %.50, i64 0, i32 4
  %.52 = load %Type.580273*, %Type.580273** %.51, align 8
  %.53 = call i1 %.34(%TypeChecker.580449* %.1, %Type.580273* %.43, %Type.580273* %.52)
  br i1 %.53, label %for.body.endif, label %.5.if

for.body.endif:                                   ; preds = %for.body
  %.62 = add nuw nsw i64 %storemerge3, 1
  %.27 = load i64, i64* %.15, align 8
  %.28 = icmp slt i64 %.62, %.27
  br i1 %.28, label %for.body, label %.5.if
}

define noalias %CallExpression.580329* @TypeChecker_check_call_expr(%TypeChecker.580449* %.1, %Type.580273* nocapture readnone %.2, %CallExpressionNode.580201* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.11, i64 0, i32 60
  %.13 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.12, align 8
  %.14 = call %Type.580273* @Type_unknown()
  %.16 = getelementptr inbounds %CallExpressionNode.580201, %CallExpressionNode.580201* %.3, i64 0, i32 4
  %.17 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.16, align 8
  %.18 = call %Expression.580293* %.13(%TypeChecker.580449* %.1, %Type.580273* %.14, %ExpressionNode.580177* %.17)
  %.22 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.23 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.22, i64 0, i32 17
  %.24 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.23, align 8
  %.25 = call i1 %.24(%TypeChecker.580449* %.1)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif.endif.endif.if.if, %.5.endif.endif.endif.if.else, %.5.endif.endif, %.5
  ret %CallExpression.580329* null

.5.endif:                                         ; preds = %.5
  %.29 = getelementptr inbounds %Expression.580293, %Expression.580293* %.18, i64 0, i32 4
  %.30 = load %Type.580273*, %Type.580273** %.29, align 8
  %.31 = getelementptr inbounds %Type.580273, %Type.580273* %.30, i64 0, i32 1
  %.32 = load i64, i64* %.31, align 8
  %.33.not = icmp eq i64 %.32, 17
  br i1 %.33.not, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.37 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.38 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.37, i64 0, i32 16
  %.39 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.38, align 8
  %.43 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.37, i64 0, i32 10
  %.44 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.43, align 8
  %.48 = call %string.580129* %.44(%TypeChecker.580449* %.1, %Type.580273* %.30)
  %.49 = getelementptr inbounds %string.580129, %string.580129* %.48, i64 0, i32 0
  %.50 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.49, align 8
  %.51 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.50, i64 0, i32 10
  %.52 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.51, align 8
  %.53 = call i8* %.52(%string.580129* %.48)
  %.55 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.329, i64 0, i64 0), i8* %.53)
  %.57 = call i8* @malloc(i64 %.55)
  %.58 = call i64 (i8*, i8*, ...) @sprintf(i8* %.57, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.329, i64 0, i64 0), i8* %.53)
  %.59 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.60 = bitcast i8* %.59 to %string.580129*
  %.61 = bitcast i8* %.59 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.61, align 8
  %.63 = getelementptr inbounds i8, i8* %.59, i64 8
  %0 = bitcast i8* %.63 to i8**
  store i8* %.57, i8** %0, align 8
  %.65 = getelementptr inbounds i8, i8* %.59, i64 16
  %1 = bitcast i8* %.65 to i64*
  store i64 %.55, i64* %1, align 8
  %.67 = getelementptr inbounds i8, i8* %.59, i64 24
  %2 = bitcast i8* %.67 to i64*
  store i64 %.55, i64* %2, align 8
  %.71 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.16, align 8
  %.72 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.71, i64 0, i32 1
  %.73 = load %FloRange.580135*, %FloRange.580135** %.72, align 8
  call void %.39(%TypeChecker.580449* %.1, i64 5, %string.580129* %.60, %FloRange.580135* %.73)
  ret %CallExpression.580329* null

.5.endif.endif:                                   ; preds = %.5.endif
  %3 = bitcast %Type.580273** %.29 to i64*
  %.7812 = load i64, i64* %3, align 8
  %func_ty = alloca %FunctionType.580279*, align 8
  %4 = bitcast %FunctionType.580279** %func_ty to i64*
  store i64 %.7812, i64* %4, align 8
  %.83 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.84 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.83, i64 0, i32 52
  %.85 = load %"Array<FunctionArg>.580393"* (%TypeChecker.580449*, %Expression.580293*)*, %"Array<FunctionArg>.580393"* (%TypeChecker.580449*, %Expression.580293*)** %.84, align 8
  %.87 = call %"Array<FunctionArg>.580393"* %.85(%TypeChecker.580449* %.1, %Expression.580293* %.18)
  %.91 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.92 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.91, i64 0, i32 53
  %.93 = load %"Array<Expression>.580311"* (%TypeChecker.580449*, %FunctionType.580279*, %"Array<FunctionArg>.580393"*, %"Array<ExpressionNode>.580189"*)*, %"Array<Expression>.580311"* (%TypeChecker.580449*, %FunctionType.580279*, %"Array<FunctionArg>.580393"*, %"Array<ExpressionNode>.580189"*)** %.92, align 8
  %.94 = load %FunctionType.580279*, %FunctionType.580279** %func_ty, align 8
  %.97 = getelementptr inbounds %CallExpressionNode.580201, %CallExpressionNode.580201* %.3, i64 0, i32 5
  %.98 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.97, align 8
  %.99 = call %"Array<Expression>.580311"* %.93(%TypeChecker.580449* %.1, %FunctionType.580279* %.94, %"Array<FunctionArg>.580393"* %.87, %"Array<ExpressionNode>.580189"* %.98)
  %.103 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.104 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.103, i64 0, i32 17
  %.105 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.104, align 8
  %.106 = call i1 %.105(%TypeChecker.580449* %.1)
  br i1 %.106, label %.5.if, label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.111 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.112 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.111, i64 0, i32 54
  %.113 = load i64 (%TypeChecker.580449*, %FunctionType.580279*, %"Array<Expression>.580311"*)*, i64 (%TypeChecker.580449*, %FunctionType.580279*, %"Array<Expression>.580311"*)** %.112, align 8
  %.116 = call i64 %.113(%TypeChecker.580449* %.1, %FunctionType.580279* %.94, %"Array<Expression>.580311"* %.99)
  %.120 = icmp sgt i64 %.116, -2
  br i1 %.120, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.124 = icmp eq i64 %.116, -1
  %.128 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.129 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.128, i64 0, i32 16
  %.130 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.129, align 8
  br i1 %.124, label %.5.endif.endif.endif.if.if, label %.5.endif.endif.endif.if.else

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.236 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.94, i64 0, i32 3
  %.237 = load %Type.580273*, %Type.580273** %.236, align 8
  %.238 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.239 = bitcast i8* %.238 to %CallExpression.580329*
  %.240 = bitcast i8* %.238 to %CallExpression_vtable_ty.580330**
  store %CallExpression_vtable_ty.580330* @CallExpression_vtable_data, %CallExpression_vtable_ty.580330** %.240, align 8
  call void @CallExpression_constructor(%CallExpression.580329* %.239, %Expression.580293* %.18, %"Array<Expression>.580311"* %.99, %Type.580273* %.237)
  ret %CallExpression.580329* %.239

.5.endif.endif.endif.if.if:                       ; preds = %.5.endif.endif.endif.if
  %.132 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.94, i64 0, i32 2
  %.133 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.132, align 8
  %.134 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.133, i64 0, i32 2
  %.135 = load i64, i64* %.134, align 8
  %.137 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.99, i64 0, i32 2
  %.138 = load i64, i64* %.137, align 8
  %.140 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.330, i64 0, i64 0), i64 %.135, i64 %.138)
  %.142 = call i8* @malloc(i64 %.140)
  %.143 = call i64 (i8*, i8*, ...) @sprintf(i8* %.142, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.330, i64 0, i64 0), i64 %.135, i64 %.138)
  %.144 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.145 = bitcast i8* %.144 to %string.580129*
  %.146 = bitcast i8* %.144 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.146, align 8
  %.148 = getelementptr inbounds i8, i8* %.144, i64 8
  %5 = bitcast i8* %.148 to i8**
  store i8* %.142, i8** %5, align 8
  %.150 = getelementptr inbounds i8, i8* %.144, i64 16
  %6 = bitcast i8* %.150 to i64*
  store i64 %.140, i64* %6, align 8
  %.152 = getelementptr inbounds i8, i8* %.144, i64 24
  %7 = bitcast i8* %.152 to i64*
  store i64 %.140, i64* %7, align 8
  %.155 = getelementptr inbounds %CallExpressionNode.580201, %CallExpressionNode.580201* %.3, i64 0, i32 1
  %.156 = load %FloRange.580135*, %FloRange.580135** %.155, align 8
  call void %.130(%TypeChecker.580449* %.1, i64 4, %string.580129* %.145, %FloRange.580135* %.156)
  br label %.5.if

.5.endif.endif.endif.if.else:                     ; preds = %.5.endif.endif.endif.if
  %.167 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.128, i64 0, i32 10
  %.168 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.167, align 8
  %.171 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.94, i64 0, i32 2
  %.172 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.171, align 8
  %.173 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.172, i64 0, i32 0
  %.174 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.173, align 8
  %.175 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.174, i64 0, i32 5
  %.176 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.175, align 8
  %.177 = call %Type.580273* %.176(%"Array<Type>.580281"* %.172, i64 %.116)
  %.178 = call %string.580129* %.168(%TypeChecker.580449* %.1, %Type.580273* %.177)
  %.181 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.10, align 8
  %.182 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.181, i64 0, i32 10
  %.183 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.182, align 8
  %.186 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.99, i64 0, i32 0
  %.187 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.186, align 8
  %.188 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.187, i64 0, i32 5
  %.189 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.188, align 8
  %.190 = call %Expression.580293* %.189(%"Array<Expression>.580311"* %.99, i64 %.116)
  %.191 = getelementptr inbounds %Expression.580293, %Expression.580293* %.190, i64 0, i32 4
  %.192 = load %Type.580273*, %Type.580273** %.191, align 8
  %.193 = call %string.580129* %.183(%TypeChecker.580449* %.1, %Type.580273* %.192)
  %.194 = getelementptr inbounds %string.580129, %string.580129* %.178, i64 0, i32 0
  %.195 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.194, align 8
  %.196 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.195, i64 0, i32 10
  %.197 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.196, align 8
  %.198 = call i8* %.197(%string.580129* %.178)
  %.199 = getelementptr inbounds %string.580129, %string.580129* %.193, i64 0, i32 0
  %.200 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.199, align 8
  %.201 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.200, i64 0, i32 10
  %.202 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.201, align 8
  %.203 = call i8* %.202(%string.580129* %.193)
  %.205 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.331, i64 0, i64 0), i8* %.198, i8* %.203)
  %.207 = call i8* @malloc(i64 %.205)
  %.208 = call i64 (i8*, i8*, ...) @sprintf(i8* %.207, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.331, i64 0, i64 0), i8* %.198, i8* %.203)
  %.209 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.210 = bitcast i8* %.209 to %string.580129*
  %.211 = bitcast i8* %.209 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.211, align 8
  %.213 = getelementptr inbounds i8, i8* %.209, i64 8
  %8 = bitcast i8* %.213 to i8**
  store i8* %.207, i8** %8, align 8
  %.215 = getelementptr inbounds i8, i8* %.209, i64 16
  %9 = bitcast i8* %.215 to i64*
  store i64 %.205, i64* %9, align 8
  %.217 = getelementptr inbounds i8, i8* %.209, i64 24
  %10 = bitcast i8* %.217 to i64*
  store i64 %.205, i64* %10, align 8
  %.222 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.97, align 8
  %.223 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.222, i64 0, i32 0
  %.224 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.223, align 8
  %.225 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.224, i64 0, i32 5
  %.226 = load %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)*, %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)** %.225, align 8
  %.227 = call %ExpressionNode.580177* %.226(%"Array<ExpressionNode>.580189"* %.222, i64 %.116)
  %.228 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.227, i64 0, i32 1
  %.229 = load %FloRange.580135*, %FloRange.580135** %.228, align 8
  call void %.130(%TypeChecker.580449* %.1, i64 5, %string.580129* %.210, %FloRange.580135* %.229)
  br label %.5.if
}

; Function Attrs: nofree nounwind
define noalias %IntExpression.580303* @TypeChecker_check_int_expression(%TypeChecker.580449* nocapture readnone %.1, %Type.580273* %.2, %IntExpressionNode.580181* nocapture readonly %.3) #3 {
.5:
  %.10 = getelementptr inbounds %IntExpressionNode.580181, %IntExpressionNode.580181* %.3, i64 0, i32 4
  %.11 = load %IntToken.580143*, %IntToken.580143** %.10, align 8
  %.12 = getelementptr inbounds %IntToken.580143, %IntToken.580143* %.11, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.14 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.15 = bitcast i8* %.14 to %IntExpression.580303*
  %.16 = bitcast i8* %.14 to %IntExpression_vtable_ty.580304**
  store %IntExpression_vtable_ty.580304* @IntExpression_vtable_data, %IntExpression_vtable_ty.580304** %.16, align 8
  call void @IntExpression_constructor(%IntExpression.580303* %.15, i64 %.13)
  %.21 = call i1 @is_int(%Type.580273* %.2)
  br i1 %.21, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.25 = getelementptr inbounds i8, i8* %.14, i64 32
  %0 = bitcast i8* %.25 to %Type.580273**
  store %Type.580273* %.2, %Type.580273** %0, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret %IntExpression.580303* %.15
}

; Function Attrs: nofree nounwind
define noalias %FloatExpression.580307* @TypeChecker_check_float_expression(%TypeChecker.580449* nocapture readnone %.1, %Type.580273* %.2, %FloatExpressionNode.580183* nocapture readonly %.3) #3 {
.5:
  %.10 = getelementptr inbounds %FloatExpressionNode.580183, %FloatExpressionNode.580183* %.3, i64 0, i32 4
  %.11 = load %FloatToken.580145*, %FloatToken.580145** %.10, align 8
  %.12 = getelementptr inbounds %FloatToken.580145, %FloatToken.580145* %.11, i64 0, i32 3
  %.13 = load double, double* %.12, align 8
  %.14 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.15 = bitcast i8* %.14 to %FloatExpression.580307*
  %.16 = bitcast i8* %.14 to %FloatExpression_vtable_ty.580308**
  store %FloatExpression_vtable_ty.580308* @FloatExpression_vtable_data, %FloatExpression_vtable_ty.580308** %.16, align 8
  call void @FloatExpression_constructor(%FloatExpression.580307* %.15, double %.13)
  %.21 = call i1 @is_float(%Type.580273* %.2)
  br i1 %.21, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.25 = getelementptr inbounds i8, i8* %.14, i64 32
  %0 = bitcast i8* %.25 to %Type.580273**
  store %Type.580273* %.2, %Type.580273** %0, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret %FloatExpression.580307* %.15
}

; Function Attrs: nofree nounwind
define noalias %IntExpression.580303* @TypeChecker_check_char_expression(%TypeChecker.580449* nocapture readnone %.1, %CharExpressionNode.580185* nocapture readonly %.2) #3 {
.4:
  %.8 = getelementptr inbounds %CharExpressionNode.580185, %CharExpressionNode.580185* %.2, i64 0, i32 4
  %.9 = load %CharToken.580147*, %CharToken.580147** %.8, align 8
  %.10 = getelementptr inbounds %CharToken.580147, %CharToken.580147* %.9, i64 0, i32 3
  %.11 = load i8, i8* %.10, align 1
  %.12 = zext i8 %.11 to i64
  %.13 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.14 = bitcast i8* %.13 to %IntExpression.580303*
  %.15 = bitcast i8* %.13 to %IntExpression_vtable_ty.580304**
  store %IntExpression_vtable_ty.580304* @IntExpression_vtable_data, %IntExpression_vtable_ty.580304** %.15, align 8
  call void @IntExpression_constructor(%IntExpression.580303* %.14, i64 %.12)
  %.20 = getelementptr inbounds i8, i8* %.13, i64 32
  %0 = bitcast i8* %.20 to %Type.580273**
  %.21 = load %Type.580273*, %Type.580273** %0, align 8
  %.22 = getelementptr inbounds %Type.580273, %Type.580273* %.21, i64 0, i32 1
  store i64 2, i64* %.22, align 8
  ret %IntExpression.580303* %.14
}

define %StringExpression.580309* @TypeChecker_check_string_expression(%TypeChecker.580449* %.1, %Type.580273* %.2, %StringExpressionNode.580187* nocapture readonly %.3) {
.5:
  %.10 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.12 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %"Array<Expression>.580311"*
  %.14 = bitcast i8* %.12 to %"Array<Expression>_vtable_ty.580312"**
  store %"Array<Expression>_vtable_ty.580312"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.580312"** %.14, align 8
  %.16 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.16 to i8**
  store i8* %.10, i8** %0, align 8
  %.18 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.18 to i64*
  store i64 0, i64* %1, align 8
  %.20 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.20 to i64*
  store i64 8, i64* %2, align 8
  %.28 = getelementptr inbounds %StringExpressionNode.580187, %StringExpressionNode.580187* %.3, i64 0, i32 5
  %.292 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.28, align 8
  %.303 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.292, i64 0, i32 2
  %.314 = load i64, i64* %.303, align 8
  %.325 = icmp sgt i64 %.314, 0
  br i1 %.325, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.36 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge6 = phi i64 [ 0, %for.body.lr.ph ], [ %.60, %for.body ]
  %.37 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.36, align 8
  %.38 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.37, i64 0, i32 60
  %.39 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.38, align 8
  %.40 = call %Type.580273* @Type_unknown()
  %.44 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.28, align 8
  %.45 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.44, i64 0, i32 0
  %.46 = load %"Array<ExpressionNode>_vtable_ty.580190"*, %"Array<ExpressionNode>_vtable_ty.580190"** %.45, align 8
  %.47 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.580190", %"Array<ExpressionNode>_vtable_ty.580190"* %.46, i64 0, i32 5
  %.48 = load %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)*, %ExpressionNode.580177* (%"Array<ExpressionNode>.580189"*, i64)** %.47, align 8
  %.49 = call %ExpressionNode.580177* %.48(%"Array<ExpressionNode>.580189"* %.44, i64 %storemerge6)
  %.50 = call %Expression.580293* %.39(%TypeChecker.580449* %.1, %Type.580273* %.40, %ExpressionNode.580177* %.49)
  %.52 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.14, align 8
  %.53 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.52, i64 0, i32 2
  %.54 = load void (%"Array<Expression>.580311"*, %Expression.580293*)*, void (%"Array<Expression>.580311"*, %Expression.580293*)** %.53, align 8
  call void %.54(%"Array<Expression>.580311"* %.13, %Expression.580293* %.50)
  %.60 = add nuw nsw i64 %storemerge6, 1
  %.29 = load %"Array<ExpressionNode>.580189"*, %"Array<ExpressionNode>.580189"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<ExpressionNode>.580189", %"Array<ExpressionNode>.580189"* %.29, i64 0, i32 2
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp slt i64 %.60, %.31
  br i1 %.32, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %.64 = getelementptr inbounds %StringExpressionNode.580187, %StringExpressionNode.580187* %.3, i64 0, i32 4
  %.65 = load %StrToken.580149*, %StrToken.580149** %.64, align 8
  %.66 = getelementptr inbounds %StrToken.580149, %StrToken.580149* %.65, i64 0, i32 3
  %.67 = load %string.580129*, %string.580129** %.66, align 8
  %.69 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.70 = bitcast i8* %.69 to %StringExpression.580309*
  %.71 = bitcast i8* %.69 to %StringExpression_vtable_ty.580310**
  store %StringExpression_vtable_ty.580310* @StringExpression_vtable_data, %StringExpression_vtable_ty.580310** %.71, align 8
  call void @StringExpression_constructor(%StringExpression.580309* %.70, %string.580129* %.67, %"Array<Expression>.580311"* %.13)
  %exp = alloca %StringExpression.580309*, align 8
  %3 = bitcast %StringExpression.580309** %exp to i8**
  store i8* %.69, i8** %3, align 8
  %.76 = call i1 @is_i8_ptr(%Type.580273* %.2)
  br i1 %.76, label %for.end.if, label %for.end.endif

for.end.if:                                       ; preds = %for.end
  %.78 = load %StringExpression.580309*, %StringExpression.580309** %exp, align 8
  %.80 = getelementptr inbounds %StringExpression.580309, %StringExpression.580309* %.78, i64 0, i32 4
  store %Type.580273* %.2, %Type.580273** %.80, align 8
  br label %for.end.endif

for.end.endif:                                    ; preds = %for.end.if, %for.end
  %.83 = load %StringExpression.580309*, %StringExpression.580309** %exp, align 8
  ret %StringExpression.580309* %.83
}

define %Expression.580293* @TypeChecker_check_expression(%TypeChecker.580449* %.1, %Type.580273* %.2, %ExpressionNode.580177* %.3) {
.5:
  %.10 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.3, i64 0, i32 3
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.1 [
    i64 0, label %.5.if
    i64 1, label %.5.endif.if
    i64 3, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.endif.if
    i64 6, label %.5.endif.endif.endif.endif.if
    i64 7, label %.5.endif.endif.endif.endif.endif.if
    i64 8, label %.5.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.5.endif.endif.endif.endif.endif.endif.endif.if
    i64 15, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 10, label %.5.endif.endif.endif.endi...if
    i64 11, label %.5.endif.endif.endif.endi...endif.if
    i64 12, label %.5.endif.endif.endif.endi...endif.endif.if
    i64 13, label %.5.endif.endif.endif.endi...endif.endif.endif.if
    i64 14, label %.5.endif.endif.endif.endi...if.1
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.16 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.15, align 8
  %.17 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.16, i64 0, i32 56
  %.18 = load %IntExpression.580303* (%TypeChecker.580449*, %Type.580273*, %IntExpressionNode.580181*)*, %IntExpression.580303* (%TypeChecker.580449*, %Type.580273*, %IntExpressionNode.580181*)** %.17, align 8
  %.21 = bitcast %ExpressionNode.580177* %.3 to %IntExpressionNode.580181*
  %.22 = call %IntExpression.580303* %.18(%TypeChecker.580449* %.1, %Type.580273* %.2, %IntExpressionNode.580181* %.21)
  %.23 = bitcast %IntExpression.580303* %.22 to %Expression.580293*
  ret %Expression.580293* %.23

.5.endif.if:                                      ; preds = %.5
  %.31 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.32 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.31, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.32, i64 0, i32 57
  %.34 = load %FloatExpression.580307* (%TypeChecker.580449*, %Type.580273*, %FloatExpressionNode.580183*)*, %FloatExpression.580307* (%TypeChecker.580449*, %Type.580273*, %FloatExpressionNode.580183*)** %.33, align 8
  %.37 = bitcast %ExpressionNode.580177* %.3 to %FloatExpressionNode.580183*
  %.38 = call %FloatExpression.580307* %.34(%TypeChecker.580449* %.1, %Type.580273* %.2, %FloatExpressionNode.580183* %.37)
  %.39 = bitcast %FloatExpression.580307* %.38 to %Expression.580293*
  ret %Expression.580293* %.39

.5.endif.endif.if:                                ; preds = %.5
  %.47 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.48 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.47, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.48, i64 0, i32 58
  %.50 = load %IntExpression.580303* (%TypeChecker.580449*, %CharExpressionNode.580185*)*, %IntExpression.580303* (%TypeChecker.580449*, %CharExpressionNode.580185*)** %.49, align 8
  %.52 = bitcast %ExpressionNode.580177* %.3 to %CharExpressionNode.580185*
  %.53 = call %IntExpression.580303* %.50(%TypeChecker.580449* %.1, %CharExpressionNode.580185* %.52)
  %.54 = bitcast %IntExpression.580303* %.53 to %Expression.580293*
  ret %Expression.580293* %.54

.5.endif.endif.endif.if:                          ; preds = %.5
  %.62 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.63 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.62, align 8
  %.64 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.63, i64 0, i32 59
  %.65 = load %StringExpression.580309* (%TypeChecker.580449*, %Type.580273*, %StringExpressionNode.580187*)*, %StringExpression.580309* (%TypeChecker.580449*, %Type.580273*, %StringExpressionNode.580187*)** %.64, align 8
  %.68 = bitcast %ExpressionNode.580177* %.3 to %StringExpressionNode.580187*
  %.69 = call %StringExpression.580309* %.65(%TypeChecker.580449* %.1, %Type.580273* %.2, %StringExpressionNode.580187* %.68)
  %.70 = bitcast %StringExpression.580309* %.69 to %Expression.580293*
  ret %Expression.580293* %.70

.5.endif.endif.endif.endif.if:                    ; preds = %.5
  %.78 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.79 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.78, align 8
  %.80 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.79, i64 0, i32 36
  %.81 = load %ArrayExpression.580315* (%TypeChecker.580449*, %Type.580273*, %ArrayExpressionNode.580193*)*, %ArrayExpression.580315* (%TypeChecker.580449*, %Type.580273*, %ArrayExpressionNode.580193*)** %.80, align 8
  %.84 = bitcast %ExpressionNode.580177* %.3 to %ArrayExpressionNode.580193*
  %.85 = call %ArrayExpression.580315* %.81(%TypeChecker.580449* %.1, %Type.580273* %.2, %ArrayExpressionNode.580193* %.84)
  %.86 = bitcast %ArrayExpression.580315* %.85 to %Expression.580293*
  ret %Expression.580293* %.86

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5
  %.94 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.95 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.94, align 8
  %.96 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.95, i64 0, i32 37
  %.97 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %VarAccessExpressionNode.580191*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %VarAccessExpressionNode.580191*)** %.96, align 8
  %.100 = bitcast %ExpressionNode.580177* %.3 to %VarAccessExpressionNode.580191*
  %.101 = call %Expression.580293* %.97(%TypeChecker.580449* %.1, %Type.580273* %.2, %VarAccessExpressionNode.580191* %.100)
  ret %Expression.580293* %.101

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5
  %.109 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.110 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.109, align 8
  %.111 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.110, i64 0, i32 42
  %.112 = load %BinaryExpression.580317* (%TypeChecker.580449*, %Type.580273*, %BinaryExpressionNode.580205*)*, %BinaryExpression.580317* (%TypeChecker.580449*, %Type.580273*, %BinaryExpressionNode.580205*)** %.111, align 8
  %.115 = bitcast %ExpressionNode.580177* %.3 to %BinaryExpressionNode.580205*
  %.116 = call %BinaryExpression.580317* %.112(%TypeChecker.580449* %.1, %Type.580273* %.2, %BinaryExpressionNode.580205* %.115)
  %.117 = bitcast %BinaryExpression.580317* %.116 to %Expression.580293*
  ret %Expression.580293* %.117

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5
  %.125 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.126 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.125, align 8
  %.127 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.126, i64 0, i32 43
  %.128 = load %UnaryExpression.580319* (%TypeChecker.580449*, %Type.580273*, %UnaryExpressionNode.580209*)*, %UnaryExpression.580319* (%TypeChecker.580449*, %Type.580273*, %UnaryExpressionNode.580209*)** %.127, align 8
  %.131 = bitcast %ExpressionNode.580177* %.3 to %UnaryExpressionNode.580209*
  %.132 = call %UnaryExpression.580319* %.128(%TypeChecker.580449* %.1, %Type.580273* %.2, %UnaryExpressionNode.580209* %.131)
  %.133 = bitcast %UnaryExpression.580319* %.132 to %Expression.580293*
  ret %Expression.580293* %.133

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5
  %.141 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.142 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.141, align 8
  %.143 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.142, i64 0, i32 49
  %.144 = load %TernaryExpression.580321* (%TypeChecker.580449*, %Type.580273*, %TernaryExpressionNode.580207*)*, %TernaryExpression.580321* (%TypeChecker.580449*, %Type.580273*, %TernaryExpressionNode.580207*)** %.143, align 8
  %.147 = bitcast %ExpressionNode.580177* %.3 to %TernaryExpressionNode.580207*
  %.148 = call %TernaryExpression.580321* %.144(%TypeChecker.580449* %.1, %Type.580273* %.2, %TernaryExpressionNode.580207* %.147)
  %.149 = bitcast %TernaryExpression.580321* %.148 to %Expression.580293*
  ret %Expression.580293* %.149

.5.endif.endif.endif.endi...if:                   ; preds = %.5
  %.157 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.158 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.157, align 8
  %.159 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.158, i64 0, i32 44
  %.160 = load %TypeCastExpression.580323* (%TypeChecker.580449*, %TypeCastExpressionNode.580203*)*, %TypeCastExpression.580323* (%TypeChecker.580449*, %TypeCastExpressionNode.580203*)** %.159, align 8
  %.162 = bitcast %ExpressionNode.580177* %.3 to %TypeCastExpressionNode.580203*
  %.163 = call %TypeCastExpression.580323* %.160(%TypeChecker.580449* %.1, %TypeCastExpressionNode.580203* %.162)
  %.164 = bitcast %TypeCastExpression.580323* %.163 to %Expression.580293*
  ret %Expression.580293* %.164

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5
  %.172 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.173 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.172, align 8
  %.174 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.173, i64 0, i32 46
  %.175 = load %NewExpression.580325* (%TypeChecker.580449*, %NewExpressionNode.580195*)*, %NewExpression.580325* (%TypeChecker.580449*, %NewExpressionNode.580195*)** %.174, align 8
  %.177 = bitcast %ExpressionNode.580177* %.3 to %NewExpressionNode.580195*
  %.178 = call %NewExpression.580325* %.175(%TypeChecker.580449* %.1, %NewExpressionNode.580195* %.177)
  %.179 = bitcast %NewExpression.580325* %.178 to %Expression.580293*
  ret %Expression.580293* %.179

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5
  %.187 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.188 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.187, align 8
  %.189 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.188, i64 0, i32 48
  %.190 = load %MemberExpression.580341* (%TypeChecker.580449*, %Type.580273*, %MemberExpressionNode.580199*)*, %MemberExpression.580341* (%TypeChecker.580449*, %Type.580273*, %MemberExpressionNode.580199*)** %.189, align 8
  %.193 = bitcast %ExpressionNode.580177* %.3 to %MemberExpressionNode.580199*
  %.194 = call %MemberExpression.580341* %.190(%TypeChecker.580449* %.1, %Type.580273* %.2, %MemberExpressionNode.580199* %.193)
  %.195 = bitcast %MemberExpression.580341* %.194 to %Expression.580293*
  ret %Expression.580293* %.195

.5.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.5
  %.203 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.204 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.203, align 8
  %.205 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.204, i64 0, i32 51
  %.206 = load %IndexExpression.580327* (%TypeChecker.580449*, %Type.580273*, %ExpressionIndexNode.580197*)*, %IndexExpression.580327* (%TypeChecker.580449*, %Type.580273*, %ExpressionIndexNode.580197*)** %.205, align 8
  %.209 = bitcast %ExpressionNode.580177* %.3 to %ExpressionIndexNode.580197*
  %.210 = call %IndexExpression.580327* %.206(%TypeChecker.580449* %.1, %Type.580273* %.2, %ExpressionIndexNode.580197* %.209)
  %.211 = bitcast %IndexExpression.580327* %.210 to %Expression.580293*
  ret %Expression.580293* %.211

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5
  %.219 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.220 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.219, align 8
  %.221 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.220, i64 0, i32 55
  %.222 = load %CallExpression.580329* (%TypeChecker.580449*, %Type.580273*, %CallExpressionNode.580201*)*, %CallExpression.580329* (%TypeChecker.580449*, %Type.580273*, %CallExpressionNode.580201*)** %.221, align 8
  %.225 = bitcast %ExpressionNode.580177* %.3 to %CallExpressionNode.580201*
  %.226 = call %CallExpression.580329* %.222(%TypeChecker.580449* %.1, %Type.580273* %.2, %CallExpressionNode.580201* %.225)
  %.227 = bitcast %CallExpression.580329* %.226 to %Expression.580293*
  ret %Expression.580293* %.227

.5.endif.endif.endif.endi...endif.1:              ; preds = %.5
  ret %Expression.580293* null
}

define %Expression.580293* @TypeChecker_check_condition(%TypeChecker.580449* %.1, %ExpressionNode.580177* %.2) {
.4:
  %.7 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.8 = bitcast i8* %.7 to %BooleanType.580275*
  %.9 = bitcast i8* %.7 to %BooleanType_vtable_ty.580276**
  store %BooleanType_vtable_ty.580276* @BooleanType_vtable_data, %BooleanType_vtable_ty.580276** %.9, align 8
  call void @BooleanType_constructor(%BooleanType.580275* %.8)
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.15, i64 0, i32 60
  %.17 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.16, align 8
  %.18 = call %Type.580273* @Type_unknown()
  %.20 = call %Expression.580293* %.17(%TypeChecker.580449* %.1, %Type.580273* %.18, %ExpressionNode.580177* %.2)
  %.24 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.25 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.24, i64 0, i32 17
  %.26 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.25, align 8
  %.27 = call i1 %.26(%TypeChecker.580449* %.1)
  br i1 %.27, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %true_block, %.4.endif, %.4
  %merge = phi %Expression.580293* [ null, %.4 ], [ %.39, %true_block ], [ %.20, %.4.endif ]
  ret %Expression.580293* %merge

.4.endif:                                         ; preds = %.4
  %.31 = getelementptr inbounds %Expression.580293, %Expression.580293* %.20, i64 0, i32 4
  %.32 = load %Type.580273*, %Type.580273** %.31, align 8
  %.33 = call i1 @is_bool(%Type.580273* %.32)
  br i1 %.33, label %.4.if, label %true_block

true_block:                                       ; preds = %.4.endif
  %.38 = bitcast i8* %.7 to %Type.580273*
  %.39 = call %Expression.580293* @cast_exp_to_type(%Expression.580293* %.20, %Type.580273* %.38)
  br label %.4.if
}

define noalias %IfStatement.580349* @TypeChecker_check_if_stamement(%TypeChecker.580449* %.1, %IfStatementNode.580211* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.9, i64 0, i32 61
  %.11 = load %Expression.580293* (%TypeChecker.580449*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %ExpressionNode.580177*)** %.10, align 8
  %.13 = getelementptr inbounds %IfStatementNode.580211, %IfStatementNode.580211* %.2, i64 0, i32 3
  %.14 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.13, align 8
  %.15 = call %Expression.580293* %.11(%TypeChecker.580449* %.1, %ExpressionNode.580177* %.14)
  %.19 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.20 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.19, i64 0, i32 71
  %.21 = load %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)*, %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)** %.20, align 8
  %.23 = getelementptr inbounds %IfStatementNode.580211, %IfStatementNode.580211* %.2, i64 0, i32 4
  %.24 = load %BlockNode.580173*, %BlockNode.580173** %.23, align 8
  %.25 = call %Block.580345* %.21(%TypeChecker.580449* %.1, %BlockNode.580173* %.24)
  %.28 = getelementptr inbounds %IfStatementNode.580211, %IfStatementNode.580211* %.2, i64 0, i32 5
  %0 = bitcast %BlockNode.580173** %.28 to i64*
  %.291 = load i64, i64* %0, align 8
  %.30 = trunc i64 %.291 to i32
  %.32.not = icmp eq i32 %.30, 0
  br i1 %.32.not, label %end, label %true_block

true_block:                                       ; preds = %.4
  %.36 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.37 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.36, i64 0, i32 71
  %.38 = load %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)*, %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)** %.37, align 8
  %.41 = load %BlockNode.580173*, %BlockNode.580173** %.28, align 8
  %.42 = call %Block.580345* %.38(%TypeChecker.580449* %.1, %BlockNode.580173* %.41)
  br label %end

end:                                              ; preds = %.4, %true_block
  %.45 = phi %Block.580345* [ %.42, %true_block ], [ null, %.4 ]
  %.50 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.51 = bitcast i8* %.50 to %IfStatement.580349*
  %.52 = bitcast i8* %.50 to %IfStatement_vtable_ty.580350**
  store %IfStatement_vtable_ty.580350* @IfStatement_vtable_data, %IfStatement_vtable_ty.580350** %.52, align 8
  call void @IfStatement_constructor(%IfStatement.580349* %.51, %Expression.580293* %.15, %Block.580345* %.25, %Block.580345* %.45)
  ret %IfStatement.580349* %.51
}

define noalias %VarDeclaration.580351* @TypeChecker_check_var_declaration(%TypeChecker.580449* %.1, %VarDeclarationStatement.580219* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %VarDeclarationStatement.580219, %VarDeclarationStatement.580219* %.2, i64 0, i32 3
  %.9 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.9, i64 0, i32 3
  %.11 = load %string.580129*, %string.580129** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.15, i64 0, i32 12
  %.17 = load i1 (%TypeChecker.580449*, %string.580129*)*, i1 (%TypeChecker.580449*, %string.580129*)** %.16, align 8
  %.19 = call i1 %.17(%TypeChecker.580449* %.1, %string.580129* %.11)
  %.23 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  br i1 %.19, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.24 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.23, i64 0, i32 16
  %.25 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.24, align 8
  %.27 = getelementptr inbounds %string.580129, %string.580129* %.11, i64 0, i32 0
  %.28 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.27, align 8
  %.29 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.28, i64 0, i32 10
  %.30 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.29, align 8
  %.31 = call i8* %.30(%string.580129* %.11)
  %.33 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.332, i64 0, i64 0), i8* %.31)
  %.35 = call i8* @malloc(i64 %.33)
  %.36 = call i64 (i8*, i8*, ...) @sprintf(i8* %.35, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.332, i64 0, i64 0), i8* %.31)
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.580129*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.39, align 8
  %.41 = getelementptr inbounds i8, i8* %.37, i64 8
  %0 = bitcast i8* %.41 to i8**
  store i8* %.35, i8** %0, align 8
  %.43 = getelementptr inbounds i8, i8* %.37, i64 16
  %1 = bitcast i8* %.43 to i64*
  store i64 %.33, i64* %1, align 8
  %.45 = getelementptr inbounds i8, i8* %.37, i64 24
  %2 = bitcast i8* %.45 to i64*
  store i64 %.33, i64* %2, align 8
  %.49 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.8, align 8
  %.50 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.49, i64 0, i32 2
  %.51 = load %FloRange.580135*, %FloRange.580135** %.50, align 8
  call void %.25(%TypeChecker.580449* %.1, i64 1, %string.580129* %.38, %FloRange.580135* %.51)
  ret %VarDeclaration.580351* null

.4.endif:                                         ; preds = %.4
  %.57 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.23, i64 0, i32 1
  %.58 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.57, align 8
  %.59 = call %Scope.580363* %.58(%TypeChecker.580449* %.1)
  %.62 = getelementptr inbounds %VarDeclarationStatement.580219, %VarDeclarationStatement.580219* %.2, i64 0, i32 4
  %3 = bitcast %TypeNode.580161** %.62 to i64*
  %.631 = load i64, i64* %3, align 8
  %.64 = trunc i64 %.631 to i32
  %.66.not = icmp eq i32 %.64, 0
  br i1 %.66.not, label %false_block, label %true_block

true_block:                                       ; preds = %.4.endif
  %.70 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.70, i64 0, i32 35
  %.72 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.71, align 8
  %.75 = load %TypeNode.580161*, %TypeNode.580161** %.62, align 8
  %.76 = call %Type.580273* %.72(%TypeChecker.580449* %.1, %TypeNode.580161* %.75)
  br label %end

false_block:                                      ; preds = %.4.endif
  %.78 = call %Type.580273* @Type_unknown()
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.80 = phi %Type.580273* [ %.76, %true_block ], [ %.78, %false_block ]
  %var_type = alloca %Type.580273*, align 8
  store %Type.580273* %.80, %Type.580273** %var_type, align 8
  %.84 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.85 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.84, i64 0, i32 17
  %.86 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.85, align 8
  %.87 = call i1 %.86(%TypeChecker.580449* %.1)
  br i1 %.87, label %end.if, label %end.endif

end.if:                                           ; preds = %end.1, %end
  ret %VarDeclaration.580351* null

end.endif:                                        ; preds = %end
  %.91 = getelementptr inbounds %VarDeclarationStatement.580219, %VarDeclarationStatement.580219* %.2, i64 0, i32 5
  %4 = bitcast %ExpressionNode.580177** %.91 to i64*
  %.922 = load i64, i64* %4, align 8
  %.93 = trunc i64 %.922 to i32
  %.95 = icmp eq i32 %.93, 0
  %.97 = getelementptr inbounds %Type.580273, %Type.580273* %.80, i64 0, i32 1
  %.98 = load i64, i64* %.97, align 8
  %.99 = icmp eq i64 %.98, 21
  %.100 = and i1 %.95, %.99
  br i1 %.100, label %end.endif.if, label %end.endif.endif

end.endif.if:                                     ; preds = %end.endif
  %.104 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.105 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.104, i64 0, i32 16
  %.106 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.105, align 8
  %.108 = getelementptr inbounds %string.580129, %string.580129* %.11, i64 0, i32 0
  %.109 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.108, align 8
  %.110 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.109, i64 0, i32 10
  %.111 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.110, align 8
  %.112 = call i8* %.111(%string.580129* %.11)
  %.114 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.333, i64 0, i64 0), i8* %.112)
  %.116 = call i8* @malloc(i64 %.114)
  %.117 = call i64 (i8*, i8*, ...) @sprintf(i8* %.116, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.333, i64 0, i64 0), i8* %.112)
  %.118 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.119 = bitcast i8* %.118 to %string.580129*
  %.120 = bitcast i8* %.118 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.120, align 8
  %.122 = getelementptr inbounds i8, i8* %.118, i64 8
  %5 = bitcast i8* %.122 to i8**
  store i8* %.116, i8** %5, align 8
  %.124 = getelementptr inbounds i8, i8* %.118, i64 16
  %6 = bitcast i8* %.124 to i64*
  store i64 %.114, i64* %6, align 8
  %.126 = getelementptr inbounds i8, i8* %.118, i64 24
  %7 = bitcast i8* %.126 to i64*
  store i64 %.114, i64* %7, align 8
  %.130 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.8, align 8
  %.131 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.130, i64 0, i32 2
  %.132 = load %FloRange.580135*, %FloRange.580135** %.131, align 8
  call void %.106(%TypeChecker.580449* %.1, i64 4, %string.580129* %.119, %FloRange.580135* %.132)
  ret %VarDeclaration.580351* null

end.endif.endif:                                  ; preds = %end.endif
  br i1 %.95, label %end.1, label %true_block.1

true_block.1:                                     ; preds = %end.endif.endif
  %.144 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.145 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.144, i64 0, i32 60
  %.146 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.145, align 8
  %.150 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.91, align 8
  %.151 = call %Expression.580293* %.146(%TypeChecker.580449* %.1, %Type.580273* %.80, %ExpressionNode.580177* %.150)
  br label %end.1

end.1:                                            ; preds = %end.endif.endif, %true_block.1
  %.154 = phi %Expression.580293* [ %.151, %true_block.1 ], [ null, %end.endif.endif ]
  %value = alloca %Expression.580293*, align 8
  store %Expression.580293* %.154, %Expression.580293** %value, align 8
  %.158 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.159 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.158, i64 0, i32 17
  %.160 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.159, align 8
  %.161 = call i1 %.160(%TypeChecker.580449* %.1)
  br i1 %.161, label %end.if, label %end.1.endif

end.1.endif:                                      ; preds = %end.1
  %8 = bitcast %Expression.580293** %value to i64*
  %.1644 = load i64, i64* %8, align 8
  %.165 = trunc i64 %.1644 to i32
  %.167.not = icmp eq i32 %.165, 0
  br i1 %.167.not, label %end.1.endif.endif, label %end.1.endif.if

end.1.endif.if:                                   ; preds = %end.1.endif
  %.170 = call i1 @is_null(%Expression.580293* %.154)
  %.172 = getelementptr inbounds %Expression.580293, %Expression.580293* %.154, i64 0, i32 4
  %.173 = load %Type.580273*, %Type.580273** %.172, align 8
  %.174 = getelementptr inbounds %Type.580273, %Type.580273* %.173, i64 0, i32 1
  %.175 = load i64, i64* %.174, align 8
  %.176 = icmp eq i64 %.175, 21
  %.177 = and i1 %.170, %.176
  br i1 %.177, label %end.1.endif.if.if, label %end.1.endif.if.endif

end.1.endif.endif:                                ; preds = %end.1.endif.if.endif.endif, %end.1.endif.if.endif.endif.if, %end.1.endif
  %.272 = getelementptr inbounds %Scope.580363, %Scope.580363* %.59, i64 0, i32 2
  %.273 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.272, align 8
  %.274 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.273, i64 0, i32 0
  %.275 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.274, align 8
  %.276 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.275, i64 0, i32 3
  %.277 = load %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)*, %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)** %.276, align 8
  %.279 = call %VarId.580331* %.277(%"Map<string, VarId>.580365"* %.273, %string.580129* %.11)
  %9 = ptrtoint %VarId.580331* %.279 to i64
  %.280 = trunc i64 %9 to i32
  %.282.not = icmp eq i32 %.280, 0
  %.319 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  br i1 %.282.not, label %end.1.endif.endif.endif, label %end.1.endif.endif.if

end.1.endif.if.if:                                ; preds = %end.1.endif.if
  %.181 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.182 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.181, i64 0, i32 16
  %.183 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.182, align 8
  %.184 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.185 = bitcast i8* %.184 to %string.580129*
  %.185.repack = bitcast i8* %.184 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.185.repack, align 8
  %.185.repack6 = getelementptr inbounds i8, i8* %.184, i64 8
  %10 = bitcast i8* %.185.repack6 to i8**
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @str.334, i64 0, i64 0), i8** %10, align 8
  %.185.repack7 = getelementptr inbounds i8, i8* %.184, i64 16
  %11 = bitcast i8* %.185.repack7 to i64*
  store i64 69, i64* %11, align 8
  %.185.repack8 = getelementptr inbounds i8, i8* %.184, i64 24
  %12 = bitcast i8* %.185.repack8 to i64*
  store i64 69, i64* %12, align 8
  %.188 = getelementptr inbounds %VarDeclarationStatement.580219, %VarDeclarationStatement.580219* %.2, i64 0, i32 1
  %.189 = load %FloRange.580135*, %FloRange.580135** %.188, align 8
  call void %.183(%TypeChecker.580449* %.1, i64 5, %string.580129* %.185, %FloRange.580135* %.189)
  ret %VarDeclaration.580351* null

end.1.endif.if.endif:                             ; preds = %end.1.endif.if
  %.194 = load i64, i64* %.97, align 8
  %.195 = icmp ne i64 %.194, 21
  %.198 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.199 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.198, i64 0, i32 9
  %.200 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.199, align 8
  %.205 = call i1 %.200(%TypeChecker.580449* %.1, %Type.580273* %.80, %Type.580273* %.173)
  %.206 = xor i1 %.205, true
  %.207 = and i1 %.195, %.206
  br i1 %.207, label %end.1.endif.if.endif.if, label %end.1.endif.if.endif.endif

end.1.endif.if.endif.if:                          ; preds = %end.1.endif.if.endif
  %.211 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.212 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.211, i64 0, i32 16
  %.213 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.212, align 8
  %.217 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.211, i64 0, i32 10
  %.218 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.217, align 8
  %.220 = call %string.580129* %.218(%TypeChecker.580449* %.1, %Type.580273* %.80)
  %.223 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.224 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.223, i64 0, i32 10
  %.225 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.224, align 8
  %.228 = load %Type.580273*, %Type.580273** %.172, align 8
  %.229 = call %string.580129* %.225(%TypeChecker.580449* %.1, %Type.580273* %.228)
  %.230 = getelementptr inbounds %string.580129, %string.580129* %.220, i64 0, i32 0
  %.231 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.230, align 8
  %.232 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.231, i64 0, i32 10
  %.233 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.232, align 8
  %.234 = call i8* %.233(%string.580129* %.220)
  %.235 = getelementptr inbounds %string.580129, %string.580129* %.229, i64 0, i32 0
  %.236 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.235, align 8
  %.237 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.236, i64 0, i32 10
  %.238 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.237, align 8
  %.239 = call i8* %.238(%string.580129* %.229)
  %.241 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.335, i64 0, i64 0), i8* %.234, i8* %.239)
  %.243 = call i8* @malloc(i64 %.241)
  %.244 = call i64 (i8*, i8*, ...) @sprintf(i8* %.243, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.335, i64 0, i64 0), i8* %.234, i8* %.239)
  %.245 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.246 = bitcast i8* %.245 to %string.580129*
  %.247 = bitcast i8* %.245 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.247, align 8
  %.249 = getelementptr inbounds i8, i8* %.245, i64 8
  %13 = bitcast i8* %.249 to i8**
  store i8* %.243, i8** %13, align 8
  %.251 = getelementptr inbounds i8, i8* %.245, i64 16
  %14 = bitcast i8* %.251 to i64*
  store i64 %.241, i64* %14, align 8
  %.253 = getelementptr inbounds i8, i8* %.245, i64 24
  %15 = bitcast i8* %.253 to i64*
  store i64 %.241, i64* %15, align 8
  %.256 = getelementptr inbounds %VarDeclarationStatement.580219, %VarDeclarationStatement.580219* %.2, i64 0, i32 1
  %.257 = load %FloRange.580135*, %FloRange.580135** %.256, align 8
  call void %.213(%TypeChecker.580449* %.1, i64 5, %string.580129* %.246, %FloRange.580135* %.257)
  ret %VarDeclaration.580351* null

end.1.endif.if.endif.endif:                       ; preds = %end.1.endif.if.endif
  %.262 = load i64, i64* %.97, align 8
  %.263 = icmp eq i64 %.262, 21
  br i1 %.263, label %end.1.endif.if.endif.endif.if, label %end.1.endif.endif

end.1.endif.if.endif.endif.if:                    ; preds = %end.1.endif.if.endif.endif
  %16 = bitcast %Type.580273** %.172 to i64*
  %.2675 = load i64, i64* %16, align 8
  %17 = bitcast %Type.580273** %var_type to i64*
  store i64 %.2675, i64* %17, align 8
  br label %end.1.endif.endif

end.1.endif.endif.if:                             ; preds = %end.1.endif.endif
  %.287 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.319, i64 0, i32 16
  %.288 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.287, align 8
  %.290 = getelementptr inbounds %string.580129, %string.580129* %.11, i64 0, i32 0
  %.291 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.290, align 8
  %.292 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.291, i64 0, i32 10
  %.293 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.292, align 8
  %.294 = call i8* %.293(%string.580129* %.11)
  %.296 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.336, i64 0, i64 0), i8* %.294)
  %.298 = call i8* @malloc(i64 %.296)
  %.299 = call i64 (i8*, i8*, ...) @sprintf(i8* %.298, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.336, i64 0, i64 0), i8* %.294)
  %.300 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.301 = bitcast i8* %.300 to %string.580129*
  %.302 = bitcast i8* %.300 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.302, align 8
  %.304 = getelementptr inbounds i8, i8* %.300, i64 8
  %18 = bitcast i8* %.304 to i8**
  store i8* %.298, i8** %18, align 8
  %.306 = getelementptr inbounds i8, i8* %.300, i64 16
  %19 = bitcast i8* %.306 to i64*
  store i64 %.296, i64* %19, align 8
  %.308 = getelementptr inbounds i8, i8* %.300, i64 24
  %20 = bitcast i8* %.308 to i64*
  store i64 %.296, i64* %20, align 8
  %.312 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.8, align 8
  %.313 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.312, i64 0, i32 2
  %.314 = load %FloRange.580135*, %FloRange.580135** %.313, align 8
  call void %.288(%TypeChecker.580449* %.1, i64 1, %string.580129* %.301, %FloRange.580135* %.314)
  ret %VarDeclaration.580351* null

end.1.endif.endif.endif:                          ; preds = %end.1.endif.endif
  %.320 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.319, i64 0, i32 20
  %.321 = load %Var.580395* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)*, %Var.580395* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)** %.320, align 8
  %.324 = load %Type.580273*, %Type.580273** %var_type, align 8
  %.325 = call %Var.580395* %.321(%TypeChecker.580449* %.1, %string.580129* %.11, %Expression.580293* %.154, %Type.580273* %.324)
  %.329 = getelementptr inbounds %Var.580395, %Var.580395* %.325, i64 0, i32 2
  %.330 = load %VarId.580331*, %VarId.580331** %.329, align 8
  %.331 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.332 = bitcast i8* %.331 to %VarDeclaration.580351*
  %.333 = bitcast i8* %.331 to %VarDeclaration_vtable_ty.580352**
  store %VarDeclaration_vtable_ty.580352* @VarDeclaration_vtable_data, %VarDeclaration_vtable_ty.580352** %.333, align 8
  call void @VarDeclaration_constructor(%VarDeclaration.580351* %.332, %string.580129* %.11, %VarId.580331* %.330)
  ret %VarDeclaration.580351* %.332
}

define noalias %ConstDeclaration.580353* @TypeChecker_check_const_declaration(%TypeChecker.580449* %.1, %ConstDeclarationStatement.580221* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %ConstDeclarationStatement.580221, %ConstDeclarationStatement.580221* %.2, i64 0, i32 3
  %.9 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.9, i64 0, i32 3
  %.11 = load %string.580129*, %string.580129** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.15, i64 0, i32 1
  %.17 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.16, align 8
  %.18 = call %Scope.580363* %.17(%TypeChecker.580449* %.1)
  %.22 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.23 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.22, i64 0, i32 12
  %.24 = load i1 (%TypeChecker.580449*, %string.580129*)*, i1 (%TypeChecker.580449*, %string.580129*)** %.23, align 8
  %.26 = call i1 %.24(%TypeChecker.580449* %.1, %string.580129* %.11)
  %.28 = getelementptr inbounds %Scope.580363, %Scope.580363* %.18, i64 0, i32 2
  %.29 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.28, align 8
  %.30 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.29, i64 0, i32 0
  %.31 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.31, i64 0, i32 3
  %.33 = load %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)*, %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)** %.32, align 8
  %.35 = call %VarId.580331* %.33(%"Map<string, VarId>.580365"* %.29, %string.580129* %.11)
  %0 = ptrtoint %VarId.580331* %.35 to i64
  %.36 = trunc i64 %0 to i32
  %.38 = icmp ne i32 %.36, 0
  %.39 = or i1 %.26, %.38
  br i1 %.39, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.43 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.44 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.43, i64 0, i32 16
  %.45 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.44, align 8
  %.47 = getelementptr inbounds %string.580129, %string.580129* %.11, i64 0, i32 0
  %.48 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.47, align 8
  %.49 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.48, i64 0, i32 10
  %.50 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.49, align 8
  %.51 = call i8* %.50(%string.580129* %.11)
  %.53 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.332, i64 0, i64 0), i8* %.51)
  %.55 = call i8* @malloc(i64 %.53)
  %.56 = call i64 (i8*, i8*, ...) @sprintf(i8* %.55, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.332, i64 0, i64 0), i8* %.51)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.580129*
  %.59 = bitcast i8* %.57 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %1 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %1, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %2 = bitcast i8* %.63 to i64*
  store i64 %.53, i64* %2, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %3 = bitcast i8* %.65 to i64*
  store i64 %.53, i64* %3, align 8
  %.69 = load %IdentifierToken.580155*, %IdentifierToken.580155** %.8, align 8
  %.70 = getelementptr inbounds %IdentifierToken.580155, %IdentifierToken.580155* %.69, i64 0, i32 2
  %.71 = load %FloRange.580135*, %FloRange.580135** %.70, align 8
  call void %.45(%TypeChecker.580449* %.1, i64 1, %string.580129* %.58, %FloRange.580135* %.71)
  ret %ConstDeclaration.580353* null

.4.endif:                                         ; preds = %.4
  %.75 = getelementptr inbounds %ConstDeclarationStatement.580221, %ConstDeclarationStatement.580221* %.2, i64 0, i32 4
  %4 = bitcast %TypeNode.580161** %.75 to i64*
  %.761 = load i64, i64* %4, align 8
  %.77 = trunc i64 %.761 to i32
  %.79.not = icmp eq i32 %.77, 0
  br i1 %.79.not, label %false_block, label %true_block

true_block:                                       ; preds = %.4.endif
  %.83 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.84 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.83, i64 0, i32 35
  %.85 = load %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)*, %Type.580273* (%TypeChecker.580449*, %TypeNode.580161*)** %.84, align 8
  %.88 = load %TypeNode.580161*, %TypeNode.580161** %.75, align 8
  %.89 = call %Type.580273* %.85(%TypeChecker.580449* %.1, %TypeNode.580161* %.88)
  br label %end

false_block:                                      ; preds = %.4.endif
  %.91 = call %Type.580273* @Type_unknown()
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.93 = phi %Type.580273* [ %.89, %true_block ], [ %.91, %false_block ]
  %.97 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.98 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.97, i64 0, i32 17
  %.99 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.98, align 8
  %.100 = call i1 %.99(%TypeChecker.580449* %.1)
  br i1 %.100, label %end.if, label %end.endif

end.if:                                           ; preds = %end.endif, %end
  ret %ConstDeclaration.580353* null

end.endif:                                        ; preds = %end
  %.105 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.106 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.105, i64 0, i32 60
  %.107 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.106, align 8
  %.110 = getelementptr inbounds %ConstDeclarationStatement.580221, %ConstDeclarationStatement.580221* %.2, i64 0, i32 5
  %.111 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.110, align 8
  %.112 = call %Expression.580293* %.107(%TypeChecker.580449* %.1, %Type.580273* %.93, %ExpressionNode.580177* %.111)
  %.116 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.117 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.116, i64 0, i32 17
  %.118 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.117, align 8
  %.119 = call i1 %.118(%TypeChecker.580449* %.1)
  br i1 %.119, label %end.if, label %end.endif.endif

end.endif.endif:                                  ; preds = %end.endif
  %.123 = getelementptr inbounds %Expression.580293, %Expression.580293* %.112, i64 0, i32 2
  %.124 = load i1, i1* %.123, align 1
  br i1 %.124, label %end.endif.endif.endif, label %end.endif.endif.if

end.endif.endif.if:                               ; preds = %end.endif.endif
  %.129 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.130 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.129, i64 0, i32 16
  %.131 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.130, align 8
  %.132 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.133 = bitcast i8* %.132 to %string.580129*
  %.133.repack = bitcast i8* %.132 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.133.repack, align 8
  %.133.repack6 = getelementptr inbounds i8, i8* %.132, i64 8
  %5 = bitcast i8* %.133.repack6 to i8**
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.337, i64 0, i64 0), i8** %5, align 8
  %.133.repack7 = getelementptr inbounds i8, i8* %.132, i64 16
  %6 = bitcast i8* %.133.repack7 to i64*
  store i64 48, i64* %6, align 8
  %.133.repack8 = getelementptr inbounds i8, i8* %.132, i64 24
  %7 = bitcast i8* %.133.repack8 to i64*
  store i64 48, i64* %7, align 8
  %.137 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.110, align 8
  %.138 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.137, i64 0, i32 1
  %.139 = load %FloRange.580135*, %FloRange.580135** %.138, align 8
  call void %.131(%TypeChecker.580449* %.1, i64 4, %string.580129* %.133, %FloRange.580135* %.139)
  ret %ConstDeclaration.580353* null

end.endif.endif.endif:                            ; preds = %end.endif.endif
  %.143 = call i1 @is_null(%Expression.580293* %.112)
  br i1 %.143, label %end.endif.endif.endif.if, label %end.endif.endif.endif.endif

end.endif.endif.endif.if:                         ; preds = %end.endif.endif.endif
  %.147 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.148 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.147, i64 0, i32 16
  %.149 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.148, align 8
  %.150 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.151 = bitcast i8* %.150 to %string.580129*
  %.151.repack = bitcast i8* %.150 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.151.repack, align 8
  %.151.repack3 = getelementptr inbounds i8, i8* %.150, i64 8
  %8 = bitcast i8* %.151.repack3 to i8**
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @str.334, i64 0, i64 0), i8** %8, align 8
  %.151.repack4 = getelementptr inbounds i8, i8* %.150, i64 16
  %9 = bitcast i8* %.151.repack4 to i64*
  store i64 69, i64* %9, align 8
  %.151.repack5 = getelementptr inbounds i8, i8* %.150, i64 24
  %10 = bitcast i8* %.151.repack5 to i64*
  store i64 69, i64* %10, align 8
  %.154 = getelementptr inbounds %ConstDeclarationStatement.580221, %ConstDeclarationStatement.580221* %.2, i64 0, i32 1
  %.155 = load %FloRange.580135*, %FloRange.580135** %.154, align 8
  call void %.149(%TypeChecker.580449* %.1, i64 5, %string.580129* %.151, %FloRange.580135* %.155)
  ret %ConstDeclaration.580353* null

end.endif.endif.endif.endif:                      ; preds = %end.endif.endif.endif
  %.159 = getelementptr inbounds %Type.580273, %Type.580273* %.93, i64 0, i32 1
  %.160 = load i64, i64* %.159, align 8
  %.161 = icmp ne i64 %.160, 21
  %.164 = getelementptr inbounds %Expression.580293, %Expression.580293* %.112, i64 0, i32 4
  %11 = bitcast %Type.580273** %.164 to i64*
  %.1652 = load i64, i64* %11, align 8
  %12 = ptrtoint %Type.580273* %.93 to i64
  %.166 = trunc i64 %12 to i32
  %.167 = trunc i64 %.1652 to i32
  %.168 = icmp ne i32 %.166, %.167
  %.169 = and i1 %.161, %.168
  %.173 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  br i1 %.169, label %end.endif.endif.endif.endif.if, label %end.endif.endif.endif.endif.endif

end.endif.endif.endif.endif.if:                   ; preds = %end.endif.endif.endif.endif
  %.174 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.173, i64 0, i32 16
  %.175 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.174, align 8
  %.179 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.173, i64 0, i32 10
  %.180 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.179, align 8
  %.182 = call %string.580129* %.180(%TypeChecker.580449* %.1, %Type.580273* %.93)
  %.185 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.14, align 8
  %.186 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.185, i64 0, i32 10
  %.187 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.186, align 8
  %.190 = load %Type.580273*, %Type.580273** %.164, align 8
  %.191 = call %string.580129* %.187(%TypeChecker.580449* %.1, %Type.580273* %.190)
  %.192 = getelementptr inbounds %string.580129, %string.580129* %.182, i64 0, i32 0
  %.193 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.192, align 8
  %.194 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.193, i64 0, i32 10
  %.195 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.194, align 8
  %.196 = call i8* %.195(%string.580129* %.182)
  %.197 = getelementptr inbounds %string.580129, %string.580129* %.191, i64 0, i32 0
  %.198 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.197, align 8
  %.199 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.198, i64 0, i32 10
  %.200 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.199, align 8
  %.201 = call i8* %.200(%string.580129* %.191)
  %.203 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.335, i64 0, i64 0), i8* %.196, i8* %.201)
  %.205 = call i8* @malloc(i64 %.203)
  %.206 = call i64 (i8*, i8*, ...) @sprintf(i8* %.205, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.335, i64 0, i64 0), i8* %.196, i8* %.201)
  %.207 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.208 = bitcast i8* %.207 to %string.580129*
  %.209 = bitcast i8* %.207 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.209, align 8
  %.211 = getelementptr inbounds i8, i8* %.207, i64 8
  %13 = bitcast i8* %.211 to i8**
  store i8* %.205, i8** %13, align 8
  %.213 = getelementptr inbounds i8, i8* %.207, i64 16
  %14 = bitcast i8* %.213 to i64*
  store i64 %.203, i64* %14, align 8
  %.215 = getelementptr inbounds i8, i8* %.207, i64 24
  %15 = bitcast i8* %.215 to i64*
  store i64 %.203, i64* %15, align 8
  %.218 = getelementptr inbounds %ConstDeclarationStatement.580221, %ConstDeclarationStatement.580221* %.2, i64 0, i32 1
  %.219 = load %FloRange.580135*, %FloRange.580135** %.218, align 8
  call void %.175(%TypeChecker.580449* %.1, i64 5, %string.580129* %.208, %FloRange.580135* %.219)
  ret %ConstDeclaration.580353* null

end.endif.endif.endif.endif.endif:                ; preds = %end.endif.endif.endif.endif
  %.225 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.173, i64 0, i32 21
  %.226 = load %Const.580397* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)*, %Const.580397* (%TypeChecker.580449*, %string.580129*, %Expression.580293*, %Type.580273*)** %.225, align 8
  %.231 = load %Type.580273*, %Type.580273** %.164, align 8
  %.232 = call %Const.580397* %.226(%TypeChecker.580449* %.1, %string.580129* %.11, %Expression.580293* %.112, %Type.580273* %.231)
  %.236 = getelementptr inbounds %Const.580397, %Const.580397* %.232, i64 0, i32 2
  %.237 = load %ConstId.580337*, %ConstId.580337** %.236, align 8
  %.238 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.239 = bitcast i8* %.238 to %ConstDeclaration.580353*
  %.240 = bitcast i8* %.238 to %ConstDeclaration_vtable_ty.580354**
  store %ConstDeclaration_vtable_ty.580354* @ConstDeclaration_vtable_data, %ConstDeclaration_vtable_ty.580354** %.240, align 8
  call void @ConstDeclaration_constructor(%ConstDeclaration.580353* %.239, %string.580129* %.11, %ConstId.580337* %.237)
  ret %ConstDeclaration.580353* %.239
}

define noalias %ForStatement.580355* @TypeChecker_check_for_statement(%TypeChecker.580449* %.1, %ForStatementNode.580215* nocapture readonly %.2) {
.4:
  %.7 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.8 = bitcast i8* %.7 to %ForStatement.580355*
  %.9 = bitcast i8* %.7 to %ForStatement_vtable_ty.580356**
  store %ForStatement_vtable_ty.580356* @ForStatement_vtable_data, %ForStatement_vtable_ty.580356** %.9, align 8
  call void @ForStatement_constructor(%ForStatement.580355* %.8)
  %.14 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 9
  %.15 = load i1, i1* %.14, align 1
  %.18 = getelementptr inbounds %ForStatementNode.580215, %ForStatementNode.580215* %.2, i64 0, i32 7
  %.19 = load i64, i64* %.18, align 8
  %.20 = icmp eq i64 %.19, 0
  br i1 %.20, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %ForStatementNode.580215, %ForStatementNode.580215* %.2, i64 0, i32 3
  %0 = bitcast %StatementNode.580171** %.23 to i64*
  %.241 = load i64, i64* %0, align 8
  %.25 = trunc i64 %.241 to i32
  %.27.not = icmp eq i32 %.25, 0
  br i1 %.27.not, label %.4.if.endif, label %.4.if.if

.4.endif:                                         ; preds = %.4.if.endif.endif.if, %.4.if.endif.endif, %.4
  store i1 true, i1* %.14, align 1
  %.89 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.90 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.89, align 8
  %.91 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.90, i64 0, i32 71
  %.92 = load %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)*, %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)** %.91, align 8
  %.94 = getelementptr inbounds %ForStatementNode.580215, %ForStatementNode.580215* %.2, i64 0, i32 9
  %.95 = load %BlockNode.580173*, %BlockNode.580173** %.94, align 8
  %.96 = call %Block.580345* %.92(%TypeChecker.580449* %.1, %BlockNode.580173* %.95)
  %.97 = getelementptr inbounds i8, i8* %.7, i64 40
  %1 = bitcast i8* %.97 to %Block.580345**
  store %Block.580345* %.96, %Block.580345** %1, align 8
  store i1 %.15, i1* %.14, align 1
  ret %ForStatement.580355* %.8

.4.if.if:                                         ; preds = %.4.if
  %.31 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.32 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.31, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.32, i64 0, i32 70
  %.34 = load %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)*, %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)** %.33, align 8
  %.37 = load %StatementNode.580171*, %StatementNode.580171** %.23, align 8
  %.38 = call %Statement.580285* %.34(%TypeChecker.580449* %.1, %StatementNode.580171* %.37)
  %.39 = getelementptr inbounds i8, i8* %.7, i64 16
  %2 = bitcast i8* %.39 to %Statement.580285**
  store %Statement.580285* %.38, %Statement.580285** %2, align 8
  br label %.4.if.endif

.4.if.endif:                                      ; preds = %.4.if, %.4.if.if
  %.43 = getelementptr inbounds %ForStatementNode.580215, %ForStatementNode.580215* %.2, i64 0, i32 4
  %3 = bitcast %ExpressionNode.580177** %.43 to i64*
  %.442 = load i64, i64* %3, align 8
  %.45 = trunc i64 %.442 to i32
  %.47.not = icmp eq i32 %.45, 0
  br i1 %.47.not, label %.4.if.endif.endif, label %.4.if.endif.if

.4.if.endif.if:                                   ; preds = %.4.if.endif
  %.51 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.52 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.51, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.52, i64 0, i32 61
  %.54 = load %Expression.580293* (%TypeChecker.580449*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %ExpressionNode.580177*)** %.53, align 8
  %.57 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.43, align 8
  %.58 = call %Expression.580293* %.54(%TypeChecker.580449* %.1, %ExpressionNode.580177* %.57)
  %.59 = getelementptr inbounds i8, i8* %.7, i64 24
  %4 = bitcast i8* %.59 to %Expression.580293**
  store %Expression.580293* %.58, %Expression.580293** %4, align 8
  br label %.4.if.endif.endif

.4.if.endif.endif:                                ; preds = %.4.if.endif, %.4.if.endif.if
  %.63 = getelementptr inbounds %ForStatementNode.580215, %ForStatementNode.580215* %.2, i64 0, i32 5
  %5 = bitcast %ExpressionNode.580177** %.63 to i64*
  %.643 = load i64, i64* %5, align 8
  %.65 = trunc i64 %.643 to i32
  %.67.not = icmp eq i32 %.65, 0
  br i1 %.67.not, label %.4.endif, label %.4.if.endif.endif.if

.4.if.endif.endif.if:                             ; preds = %.4.if.endif.endif
  %.71 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.72 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.71, align 8
  %.73 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.72, i64 0, i32 60
  %.74 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.73, align 8
  %.75 = call %Type.580273* @Type_unknown()
  %.78 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.63, align 8
  %.79 = call %Expression.580293* %.74(%TypeChecker.580449* %.1, %Type.580273* %.75, %ExpressionNode.580177* %.78)
  %.80 = getelementptr inbounds i8, i8* %.7, i64 32
  %6 = bitcast i8* %.80 to %Expression.580293**
  store %Expression.580293* %.79, %Expression.580293** %6, align 8
  br label %.4.endif
}

define noalias %WhileStatement.580357* @TypeChecker_check_while_statment(%TypeChecker.580449* %.1, %WhileStatementNode.580213* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.9, i64 0, i32 61
  %.11 = load %Expression.580293* (%TypeChecker.580449*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %ExpressionNode.580177*)** %.10, align 8
  %.13 = getelementptr inbounds %WhileStatementNode.580213, %WhileStatementNode.580213* %.2, i64 0, i32 3
  %.14 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.13, align 8
  %.15 = call %Expression.580293* %.11(%TypeChecker.580449* %.1, %ExpressionNode.580177* %.14)
  %.18 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 9
  %.19 = load i1, i1* %.18, align 1
  store i1 true, i1* %.18, align 1
  %.26 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.26, i64 0, i32 71
  %.28 = load %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)*, %Block.580345* (%TypeChecker.580449*, %BlockNode.580173*)** %.27, align 8
  %.30 = getelementptr inbounds %WhileStatementNode.580213, %WhileStatementNode.580213* %.2, i64 0, i32 4
  %.31 = load %BlockNode.580173*, %BlockNode.580173** %.30, align 8
  %.32 = call %Block.580345* %.28(%TypeChecker.580449* %.1, %BlockNode.580173* %.31)
  store i1 %.19, i1* %.18, align 1
  %.40 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.41 = bitcast i8* %.40 to %WhileStatement.580357*
  %.42 = bitcast i8* %.40 to %WhileStatement_vtable_ty.580358**
  store %WhileStatement_vtable_ty.580358* @WhileStatement_vtable_data, %WhileStatement_vtable_ty.580358** %.42, align 8
  call void @WhileStatement_constructor(%WhileStatement.580357* %.41, %Expression.580293* %.15, %Block.580345* %.32)
  ret %WhileStatement.580357* %.41
}

define noalias %Statement.580285* @TypeChecker_check_can_break(%TypeChecker.580449* %.1, %StatementNode.580171* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 9
  %.9 = load i1, i1* %.8, align 1
  br i1 %.9, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.13 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.14 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.13, align 8
  %.15 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.14, i64 0, i32 16
  %.16 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.15, align 8
  %.17 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.580129*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.18.repack, align 8
  %.18.repack1 = getelementptr inbounds i8, i8* %.17, i64 8
  %0 = bitcast i8* %.18.repack1 to i8**
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.338, i64 0, i64 0), i8** %0, align 8
  %.18.repack2 = getelementptr inbounds i8, i8* %.17, i64 16
  %1 = bitcast i8* %.18.repack2 to i64*
  store i64 29, i64* %1, align 8
  %.18.repack3 = getelementptr inbounds i8, i8* %.17, i64 24
  %2 = bitcast i8* %.18.repack3 to i64*
  store i64 29, i64* %2, align 8
  %.21 = getelementptr inbounds %StatementNode.580171, %StatementNode.580171* %.2, i64 0, i32 1
  %.22 = load %FloRange.580135*, %FloRange.580135** %.21, align 8
  call void %.16(%TypeChecker.580449* %.1, i64 4, %string.580129* %.18, %FloRange.580135* %.22)
  ret %Statement.580285* null

.4.endif:                                         ; preds = %.4
  %.25 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.26 = bitcast i8* %.25 to %Statement.580285*
  %.27 = bitcast i8* %.25 to %Statement_vtable_ty.580286**
  store %Statement_vtable_ty.580286* @Statement_vtable_data, %Statement_vtable_ty.580286** %.27, align 8
  call void @Statement_constructor(%Statement.580285* %.26, i64 6)
  ret %Statement.580285* %.26
}

define noalias %Statement.580285* @TypeChecker_check_can_continue(%TypeChecker.580449* %.1, %StatementNode.580171* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 9
  %.9 = load i1, i1* %.8, align 1
  br i1 %.9, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.13 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.14 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.13, align 8
  %.15 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.14, i64 0, i32 16
  %.16 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.15, align 8
  %.17 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.580129*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.18.repack, align 8
  %.18.repack1 = getelementptr inbounds i8, i8* %.17, i64 8
  %0 = bitcast i8* %.18.repack1 to i8**
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.339, i64 0, i64 0), i8** %0, align 8
  %.18.repack2 = getelementptr inbounds i8, i8* %.17, i64 16
  %1 = bitcast i8* %.18.repack2 to i64*
  store i64 32, i64* %1, align 8
  %.18.repack3 = getelementptr inbounds i8, i8* %.17, i64 24
  %2 = bitcast i8* %.18.repack3 to i64*
  store i64 32, i64* %2, align 8
  %.21 = getelementptr inbounds %StatementNode.580171, %StatementNode.580171* %.2, i64 0, i32 1
  %.22 = load %FloRange.580135*, %FloRange.580135** %.21, align 8
  call void %.16(%TypeChecker.580449* %.1, i64 4, %string.580129* %.18, %FloRange.580135* %.22)
  ret %Statement.580285* null

.4.endif:                                         ; preds = %.4
  %.25 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.26 = bitcast i8* %.25 to %Statement.580285*
  %.27 = bitcast i8* %.25 to %Statement_vtable_ty.580286**
  store %Statement_vtable_ty.580286* @Statement_vtable_data, %Statement_vtable_ty.580286** %.27, align 8
  call void @Statement_constructor(%Statement.580285* %.26, i64 5)
  ret %Statement.580285* %.26
}

define noalias %ReturnStatement.580359* @TypeChecker_check_can_return(%TypeChecker.580449* %.1, %ReturnStatementNode.580217* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %ReturnStatementNode.580217, %ReturnStatementNode.580217* %.2, i64 0, i32 3
  %.9 = load %ExpressionNode.580177*, %ExpressionNode.580177** %.8, align 8
  %.12 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.13 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.12, align 8
  %.14 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.13, i64 0, i32 4
  %.15 = load %FunctionType.580279* (%TypeChecker.580449*)*, %FunctionType.580279* (%TypeChecker.580449*)** %.14, align 8
  %.16 = call %FunctionType.580279* %.15(%TypeChecker.580449* %.1)
  %.17 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.16, i64 0, i32 3
  %.18 = load %Type.580273*, %Type.580273** %.17, align 8
  %.21 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.22 = bitcast i8* %.21 to %ReturnStatement.580359*
  %.23 = bitcast i8* %.21 to %ReturnStatement_vtable_ty.580360**
  store %ReturnStatement_vtable_ty.580360* @ReturnStatement_vtable_data, %ReturnStatement_vtable_ty.580360** %.23, align 8
  call void @ReturnStatement_constructor(%ReturnStatement.580359* %.22)
  %0 = ptrtoint %ExpressionNode.580177* %.9 to i64
  %.28 = trunc i64 %0 to i32
  %.30.not = icmp eq i32 %.28, 0
  br i1 %.30.not, label %.4.else, label %.4.if

.4.if:                                            ; preds = %.4
  %.34 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.12, align 8
  %.35 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.34, i64 0, i32 60
  %.36 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.35, align 8
  %.39 = call %Expression.580293* %.36(%TypeChecker.580449* %.1, %Type.580273* %.18, %ExpressionNode.580177* %.9)
  %rt_value = alloca %Expression.580293*, align 8
  store %Expression.580293* %.39, %Expression.580293** %rt_value, align 8
  %.43 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.12, align 8
  %.44 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.43, i64 0, i32 17
  %.45 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.44, align 8
  %.46 = call i1 %.45(%TypeChecker.580449* %.1)
  br i1 %.46, label %.4.endif, label %.4.if.endif

.4.else:                                          ; preds = %.4
  %.136 = getelementptr inbounds %Type.580273, %Type.580273* %.18, i64 0, i32 1
  %.137 = load i64, i64* %.136, align 8
  %.138.not = icmp eq i64 %.137, 12
  br i1 %.138.not, label %.4.endif, label %.4.else.if

.4.endif:                                         ; preds = %.4.else, %.4.if, %.4.if.endif.endif.endif
  %merge = phi %ReturnStatement.580359* [ %.22, %.4.if.endif.endif.endif ], [ null, %.4.if ], [ %.22, %.4.else ]
  ret %ReturnStatement.580359* %merge

.4.if.endif:                                      ; preds = %.4.if
  %.50 = getelementptr inbounds %Type.580273, %Type.580273* %.18, i64 0, i32 1
  %.51 = load i64, i64* %.50, align 8
  %.52 = icmp eq i64 %.51, 12
  %.56 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.12, align 8
  br i1 %.52, label %.4.if.endif.if, label %.4.if.endif.endif

.4.if.endif.if:                                   ; preds = %.4.if.endif
  %.57 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.56, i64 0, i32 16
  %.58 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.57, align 8
  %.59 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.60 = bitcast i8* %.59 to %string.580129*
  %.60.repack = bitcast i8* %.59 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60.repack, align 8
  %.60.repack5 = getelementptr inbounds i8, i8* %.59, i64 8
  %1 = bitcast i8* %.60.repack5 to i8**
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.340, i64 0, i64 0), i8** %1, align 8
  %.60.repack6 = getelementptr inbounds i8, i8* %.59, i64 16
  %2 = bitcast i8* %.60.repack6 to i64*
  store i64 54, i64* %2, align 8
  %.60.repack7 = getelementptr inbounds i8, i8* %.59, i64 24
  %3 = bitcast i8* %.60.repack7 to i64*
  store i64 54, i64* %3, align 8
  %.63 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.9, i64 0, i32 1
  %.64 = load %FloRange.580135*, %FloRange.580135** %.63, align 8
  call void %.58(%TypeChecker.580449* %.1, i64 5, %string.580129* %.60, %FloRange.580135* %.64)
  ret %ReturnStatement.580359* null

.4.if.endif.endif:                                ; preds = %.4.if.endif
  %.70 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.56, i64 0, i32 9
  %.71 = load i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)*, i1 (%TypeChecker.580449*, %Type.580273*, %Type.580273*)** %.70, align 8
  %.74 = getelementptr inbounds %Expression.580293, %Expression.580293* %.39, i64 0, i32 4
  %.75 = load %Type.580273*, %Type.580273** %.74, align 8
  %.76 = call i1 %.71(%TypeChecker.580449* %.1, %Type.580273* %.18, %Type.580273* %.75)
  br i1 %.76, label %.4.if.endif.endif.endif, label %.4.if.endif.endif.if

.4.if.endif.endif.if:                             ; preds = %.4.if.endif.endif
  %.81 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.12, align 8
  %.82 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.81, i64 0, i32 16
  %.83 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.82, align 8
  %.87 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.81, i64 0, i32 10
  %.88 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.87, align 8
  %.90 = call %string.580129* %.88(%TypeChecker.580449* %.1, %Type.580273* %.18)
  %.93 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.12, align 8
  %.94 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.93, i64 0, i32 10
  %.95 = load %string.580129* (%TypeChecker.580449*, %Type.580273*)*, %string.580129* (%TypeChecker.580449*, %Type.580273*)** %.94, align 8
  %.98 = load %Type.580273*, %Type.580273** %.74, align 8
  %.99 = call %string.580129* %.95(%TypeChecker.580449* %.1, %Type.580273* %.98)
  %.100 = getelementptr inbounds %string.580129, %string.580129* %.90, i64 0, i32 0
  %.101 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.100, align 8
  %.102 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.101, i64 0, i32 10
  %.103 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.102, align 8
  %.104 = call i8* %.103(%string.580129* %.90)
  %.105 = getelementptr inbounds %string.580129, %string.580129* %.99, i64 0, i32 0
  %.106 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.105, align 8
  %.107 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.106, i64 0, i32 10
  %.108 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.107, align 8
  %.109 = call i8* %.108(%string.580129* %.99)
  %.111 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.341, i64 0, i64 0), i8* %.104, i8* %.109)
  %.113 = call i8* @malloc(i64 %.111)
  %.114 = call i64 (i8*, i8*, ...) @sprintf(i8* %.113, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.341, i64 0, i64 0), i8* %.104, i8* %.109)
  %.115 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.116 = bitcast i8* %.115 to %string.580129*
  %.117 = bitcast i8* %.115 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.117, align 8
  %.119 = getelementptr inbounds i8, i8* %.115, i64 8
  %4 = bitcast i8* %.119 to i8**
  store i8* %.113, i8** %4, align 8
  %.121 = getelementptr inbounds i8, i8* %.115, i64 16
  %5 = bitcast i8* %.121 to i64*
  store i64 %.111, i64* %5, align 8
  %.123 = getelementptr inbounds i8, i8* %.115, i64 24
  %6 = bitcast i8* %.123 to i64*
  store i64 %.111, i64* %6, align 8
  %.126 = getelementptr inbounds %ExpressionNode.580177, %ExpressionNode.580177* %.9, i64 0, i32 1
  %.127 = load %FloRange.580135*, %FloRange.580135** %.126, align 8
  call void %.83(%TypeChecker.580449* %.1, i64 5, %string.580129* %.116, %FloRange.580135* %.127)
  ret %ReturnStatement.580359* null

.4.if.endif.endif.endif:                          ; preds = %.4.if.endif.endif
  %7 = bitcast %Expression.580293** %rt_value to i64*
  %.1314 = load i64, i64* %7, align 8
  %.132 = getelementptr inbounds i8, i8* %.21, i64 16
  %8 = bitcast i8* %.132 to i64*
  store i64 %.1314, i64* %8, align 8
  br label %.4.endif

.4.else.if:                                       ; preds = %.4.else
  %.142 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.12, align 8
  %.143 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.142, i64 0, i32 16
  %.144 = load void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)*, void (%TypeChecker.580449*, i64, %string.580129*, %FloRange.580135*)** %.143, align 8
  %.145 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.146 = bitcast i8* %.145 to %string.580129*
  %.146.repack = bitcast i8* %.145 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.146.repack, align 8
  %.146.repack1 = getelementptr inbounds i8, i8* %.145, i64 8
  %9 = bitcast i8* %.146.repack1 to i8**
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.342, i64 0, i64 0), i8** %9, align 8
  %.146.repack2 = getelementptr inbounds i8, i8* %.145, i64 16
  %10 = bitcast i8* %.146.repack2 to i64*
  store i64 32, i64* %10, align 8
  %.146.repack3 = getelementptr inbounds i8, i8* %.145, i64 24
  %11 = bitcast i8* %.146.repack3 to i64*
  store i64 32, i64* %11, align 8
  %.149 = getelementptr inbounds %ReturnStatementNode.580217, %ReturnStatementNode.580217* %.2, i64 0, i32 1
  %.150 = load %FloRange.580135*, %FloRange.580135** %.149, align 8
  call void %.144(%TypeChecker.580449* %.1, i64 5, %string.580129* %.146, %FloRange.580135* %.150)
  ret %ReturnStatement.580359* null
}

define %Statement.580285* @TypeChecker_check_statement(%TypeChecker.580449* %.1, %StatementNode.580171* %.2) {
.4:
  %.8 = getelementptr inbounds %StatementNode.580171, %StatementNode.580171* %.2, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.endif [
    i64 0, label %.4.if
    i64 1, label %.4.endif.if
    i64 2, label %.4.endif.endif.if
    i64 3, label %.4.endif.endif.endif.if
    i64 4, label %.4.endif.endif.endif.endif.if
    i64 5, label %.4.endif.endif.endif.endif.endif.if
    i64 6, label %.4.endif.endif.endif.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %.13 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.14 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.13, align 8
  %.15 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.14, i64 0, i32 62
  %.16 = load %IfStatement.580349* (%TypeChecker.580449*, %IfStatementNode.580211*)*, %IfStatement.580349* (%TypeChecker.580449*, %IfStatementNode.580211*)** %.15, align 8
  %.18 = bitcast %StatementNode.580171* %.2 to %IfStatementNode.580211*
  %.19 = call %IfStatement.580349* %.16(%TypeChecker.580449* %.1, %IfStatementNode.580211* %.18)
  %.20 = bitcast %IfStatement.580349* %.19 to %Statement.580285*
  ret %Statement.580285* %.20

.4.endif.if:                                      ; preds = %.4
  %.28 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.29 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.28, align 8
  %.30 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.29, i64 0, i32 63
  %.31 = load %VarDeclaration.580351* (%TypeChecker.580449*, %VarDeclarationStatement.580219*)*, %VarDeclaration.580351* (%TypeChecker.580449*, %VarDeclarationStatement.580219*)** %.30, align 8
  %.33 = bitcast %StatementNode.580171* %.2 to %VarDeclarationStatement.580219*
  %.34 = call %VarDeclaration.580351* %.31(%TypeChecker.580449* %.1, %VarDeclarationStatement.580219* %.33)
  %.35 = bitcast %VarDeclaration.580351* %.34 to %Statement.580285*
  ret %Statement.580285* %.35

.4.endif.endif.if:                                ; preds = %.4
  %.43 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.44 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.43, align 8
  %.45 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.44, i64 0, i32 64
  %.46 = load %ConstDeclaration.580353* (%TypeChecker.580449*, %ConstDeclarationStatement.580221*)*, %ConstDeclaration.580353* (%TypeChecker.580449*, %ConstDeclarationStatement.580221*)** %.45, align 8
  %.48 = bitcast %StatementNode.580171* %.2 to %ConstDeclarationStatement.580221*
  %.49 = call %ConstDeclaration.580353* %.46(%TypeChecker.580449* %.1, %ConstDeclarationStatement.580221* %.48)
  %.50 = bitcast %ConstDeclaration.580353* %.49 to %Statement.580285*
  ret %Statement.580285* %.50

.4.endif.endif.endif.if:                          ; preds = %.4
  %.58 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.59 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.58, align 8
  %.60 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.59, i64 0, i32 65
  %.61 = load %ForStatement.580355* (%TypeChecker.580449*, %ForStatementNode.580215*)*, %ForStatement.580355* (%TypeChecker.580449*, %ForStatementNode.580215*)** %.60, align 8
  %.63 = bitcast %StatementNode.580171* %.2 to %ForStatementNode.580215*
  %.64 = call %ForStatement.580355* %.61(%TypeChecker.580449* %.1, %ForStatementNode.580215* %.63)
  %.65 = bitcast %ForStatement.580355* %.64 to %Statement.580285*
  ret %Statement.580285* %.65

.4.endif.endif.endif.endif.if:                    ; preds = %.4
  %.73 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.74 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.73, align 8
  %.75 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.74, i64 0, i32 66
  %.76 = load %WhileStatement.580357* (%TypeChecker.580449*, %WhileStatementNode.580213*)*, %WhileStatement.580357* (%TypeChecker.580449*, %WhileStatementNode.580213*)** %.75, align 8
  %.78 = bitcast %StatementNode.580171* %.2 to %WhileStatementNode.580213*
  %.79 = call %WhileStatement.580357* %.76(%TypeChecker.580449* %.1, %WhileStatementNode.580213* %.78)
  %.80 = bitcast %WhileStatement.580357* %.79 to %Statement.580285*
  ret %Statement.580285* %.80

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4
  %.88 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.89 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.88, align 8
  %.90 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.89, i64 0, i32 68
  %.91 = load %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)*, %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)** %.90, align 8
  %.93 = call %Statement.580285* %.91(%TypeChecker.580449* %.1, %StatementNode.580171* %.2)
  ret %Statement.580285* %.93

.4.endif.endif.endif.endif.endif.endif.if:        ; preds = %.4
  %.101 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.102 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.101, align 8
  %.103 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.102, i64 0, i32 67
  %.104 = load %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)*, %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)** %.103, align 8
  %.106 = call %Statement.580285* %.104(%TypeChecker.580449* %.1, %StatementNode.580171* %.2)
  ret %Statement.580285* %.106

.4.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.4
  %.114 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.115 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.114, align 8
  %.116 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.115, i64 0, i32 69
  %.117 = load %ReturnStatement.580359* (%TypeChecker.580449*, %ReturnStatementNode.580217*)*, %ReturnStatement.580359* (%TypeChecker.580449*, %ReturnStatementNode.580217*)** %.116, align 8
  %.119 = bitcast %StatementNode.580171* %.2 to %ReturnStatementNode.580217*
  %.120 = call %ReturnStatement.580359* %.117(%TypeChecker.580449* %.1, %ReturnStatementNode.580217* %.119)
  %.121 = bitcast %ReturnStatement.580359* %.120 to %Statement.580285*
  ret %Statement.580285* %.121

.4.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.4
  %.129 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.130 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.129, align 8
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.130, i64 0, i32 60
  %.132 = load %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)*, %Expression.580293* (%TypeChecker.580449*, %Type.580273*, %ExpressionNode.580177*)** %.131, align 8
  %.133 = call %Type.580273* @Type_unknown()
  %.135 = bitcast %StatementNode.580171* %.2 to %ExpressionNode.580177*
  %.136 = call %Expression.580293* %.132(%TypeChecker.580449* %.1, %Type.580273* %.133, %ExpressionNode.580177* %.135)
  %.137 = bitcast %Expression.580293* %.136 to %Statement.580285*
  ret %Statement.580285* %.137

.4.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.4
  ret %Statement.580285* null
}

define %Block.580345* @TypeChecker_check_block(%TypeChecker.580449* %.1, %BlockNode.580173* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.9, i64 0, i32 17
  %.11 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.10, align 8
  %.12 = call i1 %.11(%TypeChecker.580449* %.1)
  br i1 %.12, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %for.body, %.4
  ret %Block.580345* null

.4.endif:                                         ; preds = %.4
  %.16 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.17 = bitcast i8* %.16 to %Block.580345*
  %.18 = bitcast i8* %.16 to %Block_vtable_ty.580346**
  store %Block_vtable_ty.580346* @Block_vtable_data, %Block_vtable_ty.580346** %.18, align 8
  call void @Block_constructor(%Block.580345* %.17)
  %block = alloca %Block.580345*, align 8
  %0 = bitcast %Block.580345** %block to i8**
  store i8* %.16, i8** %0, align 8
  %.24 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.25 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.24, i64 0, i32 15
  %.26 = load %Scope.580363* (%TypeChecker.580449*)*, %Scope.580363* (%TypeChecker.580449*)** %.25, align 8
  %.27 = call %Scope.580363* %.26(%TypeChecker.580449* %.1)
  %.31 = getelementptr inbounds %Scope.580363, %Scope.580363* %.27, i64 0, i32 1
  %1 = bitcast %ScopeId.580361** %.31 to i64*
  %.321 = load i64, i64* %1, align 8
  %.33 = getelementptr inbounds %TypeChecker.580449, %TypeChecker.580449* %.1, i64 0, i32 6
  %2 = bitcast %ScopeId.580361** %.33 to i64*
  store i64 %.321, i64* %2, align 8
  %.40 = getelementptr inbounds %BlockNode.580173, %BlockNode.580173* %.2, i64 0, i32 2
  %.419 = load %"Array<StatementNode>.580175"*, %"Array<StatementNode>.580175"** %.40, align 8
  %.4210 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.419, i64 0, i32 2
  %.4311 = load i64, i64* %.4210, align 8
  %.4412 = icmp sgt i64 %.4311, 0
  br i1 %.4412, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4.endif
  %.70 = load %Block.580345*, %Block.580345** %block, align 8
  %.71 = getelementptr inbounds %Block.580345, %Block.580345* %.70, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif.endif.endif.endif
  %.4114 = phi %"Array<StatementNode>.580175"* [ %.419, %for.body.lr.ph ], [ %.41, %for.body.endif.endif.endif.endif.endif ]
  %storemerge13 = phi i64 [ 0, %for.body.lr.ph ], [ %.143, %for.body.endif.endif.endif.endif.endif ]
  %.48 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.48, i64 0, i32 70
  %.50 = load %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)*, %Statement.580285* (%TypeChecker.580449*, %StatementNode.580171*)** %.49, align 8
  %.55 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.4114, i64 0, i32 0
  %.56 = load %"Array<StatementNode>_vtable_ty.580176"*, %"Array<StatementNode>_vtable_ty.580176"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.580176", %"Array<StatementNode>_vtable_ty.580176"* %.56, i64 0, i32 5
  %.58 = load %StatementNode.580171* (%"Array<StatementNode>.580175"*, i64)*, %StatementNode.580171* (%"Array<StatementNode>.580175"*, i64)** %.57, align 8
  %.59 = call %StatementNode.580171* %.58(%"Array<StatementNode>.580175"* %.4114, i64 %storemerge13)
  %.60 = call %Statement.580285* %.50(%TypeChecker.580449* %.1, %StatementNode.580171* %.59)
  %stmt = alloca %Statement.580285*, align 8
  store %Statement.580285* %.60, %Statement.580285** %stmt, align 8
  %.64 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.8, align 8
  %.65 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.64, i64 0, i32 17
  %.66 = load i1 (%TypeChecker.580449*)*, i1 (%TypeChecker.580449*)** %.65, align 8
  %.67 = call i1 %.66(%TypeChecker.580449* %.1)
  br i1 %.67, label %.4.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif.endif.endif.endif.endif, %.4.endif, %for.body.endif.endif.endif.endif.if, %for.body.endif.endif.endif.if, %for.body.endif.endif.if.if.if, %for.body.endif.if
  %.148 = getelementptr inbounds %Scope.580363, %Scope.580363* %.27, i64 0, i32 6
  %3 = bitcast %ScopeId.580361** %.148 to i64*
  %.1492 = load i64, i64* %3, align 8
  store i64 %.1492, i64* %2, align 8
  %.152 = load %Block.580345*, %Block.580345** %block, align 8
  ret %Block.580345* %.152

for.body.endif:                                   ; preds = %for.body
  %.72 = load %"Array<Statement>.580347"*, %"Array<Statement>.580347"** %.71, align 8
  %.74 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.72, i64 0, i32 0
  %.75 = load %"Array<Statement>_vtable_ty.580348"*, %"Array<Statement>_vtable_ty.580348"** %.74, align 8
  %.76 = getelementptr inbounds %"Array<Statement>_vtable_ty.580348", %"Array<Statement>_vtable_ty.580348"* %.75, i64 0, i32 2
  %.77 = load void (%"Array<Statement>.580347"*, %Statement.580285*)*, void (%"Array<Statement>.580347"*, %Statement.580285*)** %.76, align 8
  call void %.77(%"Array<Statement>.580347"* %.72, %Statement.580285* %.60)
  %.80 = getelementptr inbounds %Statement.580285, %Statement.580285* %.60, i64 0, i32 1
  %.81 = load i64, i64* %.80, align 8
  switch i64 %.81, label %for.body.endif.endif.endif.endif.endif [
    i64 7, label %for.body.endif.if
    i64 0, label %for.body.endif.endif.if
    i64 5, label %for.body.endif.endif.endif.if
    i64 6, label %for.body.endif.endif.endif.endif.if
  ]

for.body.endif.if:                                ; preds = %for.body.endif
  %.85 = getelementptr inbounds %Block.580345, %Block.580345* %.70, i64 0, i32 2
  store i1 true, i1* %.85, align 1
  br label %for.end

for.body.endif.endif.if:                          ; preds = %for.body.endif
  %4 = bitcast %Statement.580285** %stmt to i64*
  %.9334 = load i64, i64* %4, align 8
  %if_stmt = alloca %IfStatement.580349*, align 8
  %5 = bitcast %IfStatement.580349** %if_stmt to i64*
  store i64 %.9334, i64* %5, align 8
  %.96.cast = inttoptr i64 %.9334 to %IfStatement.580349*
  %.97 = getelementptr inbounds %IfStatement.580349, %IfStatement.580349* %.96.cast, i64 0, i32 4
  %6 = bitcast %Block.580345** %.97 to i64*
  %.985 = load i64, i64* %6, align 8
  %.99 = trunc i64 %.985 to i32
  %.101.not = icmp eq i32 %.99, 0
  br i1 %.101.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.if.if

for.body.endif.endif.endif:                       ; preds = %for.body.endif.endif.if.if, %for.body.endif.endif.if
  switch i64 %.81, label %for.body.endif.endif.endif.endif.endif [
    i64 5, label %for.body.endif.endif.endif.if
    i64 6, label %for.body.endif.endif.endif.endif.if
  ]

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %.103 = load %IfStatement.580349*, %IfStatement.580349** %if_stmt, align 8
  %.104 = getelementptr inbounds %IfStatement.580349, %IfStatement.580349* %.103, i64 0, i32 3
  %.105 = load %Block.580345*, %Block.580345** %.104, align 8
  %.106 = getelementptr inbounds %Block.580345, %Block.580345* %.105, i64 0, i32 2
  %.107 = load i1, i1* %.106, align 1
  %.109 = getelementptr inbounds %IfStatement.580349, %IfStatement.580349* %.103, i64 0, i32 4
  %.110 = load %Block.580345*, %Block.580345** %.109, align 8
  %.111 = getelementptr inbounds %Block.580345, %Block.580345* %.110, i64 0, i32 2
  %.112 = load i1, i1* %.111, align 1
  %.113 = and i1 %.107, %.112
  br i1 %.113, label %for.body.endif.endif.if.if.if, label %for.body.endif.endif.endif

for.body.endif.endif.if.if.if:                    ; preds = %for.body.endif.endif.if.if
  %.116 = getelementptr inbounds %Block.580345, %Block.580345* %.70, i64 0, i32 2
  store i1 true, i1* %.116, align 1
  br label %for.end

for.body.endif.endif.endif.if:                    ; preds = %for.body.endif, %for.body.endif.endif.endif
  %.127 = getelementptr inbounds %Block.580345, %Block.580345* %.70, i64 0, i32 3
  store i1 true, i1* %.127, align 1
  br label %for.end

for.body.endif.endif.endif.endif.if:              ; preds = %for.body.endif, %for.body.endif.endif.endif
  %.136 = getelementptr inbounds %Block.580345, %Block.580345* %.70, i64 0, i32 4
  store i1 true, i1* %.136, align 1
  br label %for.end

for.body.endif.endif.endif.endif.endif:           ; preds = %for.body.endif, %for.body.endif.endif.endif
  %.143 = add nuw nsw i64 %storemerge13, 1
  %.41 = load %"Array<StatementNode>.580175"*, %"Array<StatementNode>.580175"** %.40, align 8
  %.42 = getelementptr inbounds %"Array<StatementNode>.580175", %"Array<StatementNode>.580175"* %.41, i64 0, i32 2
  %.43 = load i64, i64* %.42, align 8
  %.44 = icmp slt i64 %.143, %.43
  br i1 %.44, label %for.body, label %for.end
}

declare void @LLVMShutdown() local_unnamed_addr

declare void @LLVMDisposeMessage(i8*) local_unnamed_addr

declare %LLVMContextRef.580452* @LLVMContextCreate() local_unnamed_addr

declare void @LLVMContextDispose(%LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMModuleRef.580453* @LLVMModuleCreateWithNameInContext(i8*, %LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMModuleRef.580453* @LLVMCloneModule(%LLVMModuleRef.580453*) local_unnamed_addr

declare void @LLVMDisposeModule(%LLVMModuleRef.580453*) local_unnamed_addr

declare %LLVMContextRef.580452* @LLVMGetModuleContext(%LLVMModuleRef.580453*) local_unnamed_addr

declare void @LLVMSetDataLayout(%LLVMModuleRef.580453*, i8*) local_unnamed_addr

declare void @LLVMSetTarget(%LLVMModuleRef.580453*, i8*) local_unnamed_addr

declare void @LLVMDumpModule(%LLVMModuleRef.580453*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMAddFunction(%LLVMModuleRef.580453*, i8*, %LLVMTypeRef.580454*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMGetNamedFunction(%LLVMModuleRef.580453*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMGetFirstFunction(%LLVMModuleRef.580453*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMGetNextFunction(%LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMInt1TypeInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMInt8TypeInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMInt16TypeInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMInt32TypeInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMInt64TypeInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMInt128TypeInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMIntTypeInContext(%LLVMContextRef.580452*, i64) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMInt32Type() local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMHalfTypeInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMFloatTypeInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMDoubleTypeInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMFunctionType(%LLVMTypeRef.580454*, %LLVMTypeRef.580454**, i64, i1) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMStructTypeInContext(%LLVMContextRef.580452*, %LLVMTypeRef.580454**, i64, i1) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMStructCreateNamed(%LLVMContextRef.580452*, i8*) local_unnamed_addr

declare void @LLVMStructSetBody(%LLVMTypeRef.580454*, %LLVMTypeRef.580454**, i64, i1) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMArrayType(%LLVMTypeRef.580454*, i64) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454*, i64) local_unnamed_addr

declare %LLVMTypeRef.580454* @LLVMVoidTypeInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare i1 @LLVMIsConstant(%LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstNull(%LLVMTypeRef.580454*) local_unnamed_addr

declare i1 @LLVMIsNull(%LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstInt(%LLVMTypeRef.580454*, i64, i1) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstReal(%LLVMTypeRef.580454*, double) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstStructInContext(%LLVMContextRef.580452*, %LLVMValueRef.580455**, i64, i1) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstArray(%LLVMTypeRef.580454*, %LLVMValueRef.580455**, i64) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstNeg(%LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstNot(%LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstAdd(%LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstSub(%LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstMul(%LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstAnd(%LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstOr(%LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstXor(%LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstICmp(i64, %LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstFCmp(i64, %LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstShl(%LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstAShr(%LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstSIToFP(%LLVMValueRef.580455*, %LLVMTypeRef.580454*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstFPToSI(%LLVMValueRef.580455*, %LLVMTypeRef.580454*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstBitCast(%LLVMValueRef.580455*, %LLVMTypeRef.580454*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstIntCast(%LLVMValueRef.580455*, %LLVMTypeRef.580454*, i1) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMConstFPCast(%LLVMValueRef.580455*, %LLVMTypeRef.580454*) local_unnamed_addr

declare void @LLVMSetLinkage(%LLVMValueRef.580455*, i64) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMAddGlobal(%LLVMModuleRef.580453*, %LLVMTypeRef.580454*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMGetInitializer(%LLVMValueRef.580455*) local_unnamed_addr

declare void @LLVMSetInitializer(%LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare void @LLVMSetGlobalConstant(%LLVMValueRef.580455*, i1) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMGetParam(%LLVMValueRef.580455*, i64) local_unnamed_addr

declare %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare void @LLVMDeleteBasicBlock(%LLVMBasicBlockRef.580456*) local_unnamed_addr

declare void @LLVMAddIncoming(%LLVMValueRef.580455*, %LLVMValueRef.580455**, %LLVMBasicBlockRef.580456**, i64) local_unnamed_addr

declare %LLVMBuilderRef.580460* @LLVMCreateBuilderInContext(%LLVMContextRef.580452*) local_unnamed_addr

declare void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460*, %LLVMBasicBlockRef.580456*) local_unnamed_addr

declare void @LLVMDisposeBuilder(%LLVMBuilderRef.580460*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildRetVoid(%LLVMBuilderRef.580460*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildRet(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460*, %LLVMBasicBlockRef.580456*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildCondBr(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMBasicBlockRef.580456*, %LLVMBasicBlockRef.580456*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildAdd(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildFAdd(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildSub(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildFSub(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildMul(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildFMul(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildSDiv(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildFDiv(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildSRem(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildFRem(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildShl(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildAShr(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildAnd(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildOr(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildXor(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildNeg(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildFNeg(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildNot(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildMalloc(%LLVMBuilderRef.580460*, %LLVMTypeRef.580454*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildAlloca(%LLVMBuilderRef.580460*, %LLVMTypeRef.580454*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildArrayAlloca(%LLVMBuilderRef.580460*, %LLVMTypeRef.580454*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildLoad2(%LLVMBuilderRef.580460*, %LLVMTypeRef.580454*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildStore(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMValueRef.580455*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.580460*, %LLVMTypeRef.580454*, %LLVMValueRef.580455*, %LLVMValueRef.580455**, i64, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildGlobalString(%LLVMBuilderRef.580460*, i8*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildFPToSI(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMTypeRef.580454*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildSIToFP(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMTypeRef.580454*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildBitCast(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMTypeRef.580454*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildIntCast2(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMTypeRef.580454*, i1, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildFPCast(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %LLVMTypeRef.580454*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildICmp(%LLVMBuilderRef.580460*, i64, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildFCmp(%LLVMBuilderRef.580460*, i64, %LLVMValueRef.580455*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildPhi(%LLVMBuilderRef.580460*, %LLVMTypeRef.580454*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildCall2(%LLVMBuilderRef.580460*, %LLVMTypeRef.580454*, %LLVMValueRef.580455*, %LLVMValueRef.580455**, i64, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildIsNull(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMValueRef.580455* @LLVMBuildIsNotNull(%LLVMBuilderRef.580460*, %LLVMValueRef.580455*, i8*) local_unnamed_addr

declare %LLVMPassManagerRef.580463* @LLVMCreateFunctionPassManagerForModule(%LLVMModuleRef.580453*) local_unnamed_addr

declare i1 @LLVMRunFunctionPassManager(%LLVMPassManagerRef.580463*, %LLVMValueRef.580455*) local_unnamed_addr

declare void @LLVMDisposePassManager(%LLVMPassManagerRef.580463*) local_unnamed_addr

declare i1 @LLVMVerifyModule(%LLVMModuleRef.580453*, i64, i8**) local_unnamed_addr

declare void @LLVMLinkInMCJIT() local_unnamed_addr

declare i1 @LLVMCreateExecutionEngineForModule(%LLVMExecutionEngineRef.580476**, %LLVMModuleRef.580453*, i8**) local_unnamed_addr

declare void @LLVMDisposeExecutionEngine(%LLVMExecutionEngineRef.580476*) local_unnamed_addr

declare i8* @LLVMGetFunctionAddress(%LLVMExecutionEngineRef.580476*, i8*) local_unnamed_addr

declare void @LLVMInitializeX86TargetInfo() local_unnamed_addr

declare void @LLVMInitializeX86Target() local_unnamed_addr

declare void @LLVMInitializeX86TargetMC() local_unnamed_addr

declare void @LLVMInitializeX86AsmPrinter() local_unnamed_addr

declare void @LLVMInitializeX86AsmParser() local_unnamed_addr

declare void @LLVMInitializeWebAssemblyTargetInfo() local_unnamed_addr

declare void @LLVMInitializeWebAssemblyTarget() local_unnamed_addr

declare void @LLVMInitializeWebAssemblyTargetMC() local_unnamed_addr

declare void @LLVMInitializeWebAssemblyAsmPrinter() local_unnamed_addr

declare void @LLVMInitializeWebAssemblyAsmParser() local_unnamed_addr

define void @LLVMInitializeNativeTarget() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86TargetInfo()
  call void @LLVMInitializeX86Target()
  call void @LLVMInitializeX86TargetMC()
  ret void
}

define void @LLVMInitializeNativeAsmParser() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86AsmParser()
  ret void
}

define void @LLVMInitializeNativeAsmPrinter() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86AsmPrinter()
  ret void
}

define void @LLVMInitializeAllTargets() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86Target()
  call void @LLVMInitializeWebAssemblyTarget()
  ret void
}

define void @LLVMInitializeAllTargetInfos() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86TargetInfo()
  call void @LLVMInitializeWebAssemblyTargetInfo()
  ret void
}

define void @LLVMInitializeAllTargetMCs() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86TargetMC()
  call void @LLVMInitializeWebAssemblyTargetMC()
  ret void
}

define void @LLVMInitializeAllTargetPrinters() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86AsmPrinter()
  call void @LLVMInitializeWebAssemblyAsmPrinter()
  ret void
}

define void @LLVMInitializeAllTargetParsers() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86AsmParser()
  call void @LLVMInitializeWebAssemblyAsmParser()
  ret void
}

declare %LLVMTargetRef.580472* @LLVMGetFirstTarget() local_unnamed_addr

declare i1 @LLVMGetTargetFromTriple(i8*, %LLVMTargetRef.580472**, i8**) local_unnamed_addr

declare i8* @LLVMCreateTargetDataLayout(%LLVMTargetMachineRef.580473*) local_unnamed_addr

declare i8* @LLVMGetHostCPUFeatures() local_unnamed_addr

declare %LLVMTargetMachineRef.580473* @LLVMCreateTargetMachine(%LLVMTargetRef.580472*, i8*, i8*, i8*, i64, i64, i64) local_unnamed_addr

declare void @LLVMDisposeTargetMachine(%LLVMTargetMachineRef.580473*) local_unnamed_addr

declare i8* @LLVMGetTargetMachineTriple(%LLVMTargetMachineRef.580473*) local_unnamed_addr

declare i1 @LLVMTargetMachineEmitToFile(%LLVMTargetMachineRef.580473*, %LLVMModuleRef.580453*, i8*, i64, i8**) local_unnamed_addr

declare i8* @LLVMGetDefaultTargetTriple() local_unnamed_addr

declare %LLVMDIBuilderRef.580461* @LLVMCreateDIBuilder(%LLVMModuleRef.580453*) local_unnamed_addr

declare %LLVMMetadataRef.580457* @LLVMDIBuilderCreateFile(%LLVMDIBuilderRef.580461*, i8*, i64, i8*, i64) local_unnamed_addr

declare %LLVMMetadataRef.580457* @LLVMDIBuilderCreateCompileUnit(%LLVMDIBuilderRef.580461*, i64, %LLVMMetadataRef.580457*, i8*, i64, i1, i8*, i64, i64, i8*, i64, i64, i64, i1, i1, i8*, i64, i8*, i64) local_unnamed_addr

declare void @LLVMDIBuilderFinalize(%LLVMDIBuilderRef.580461*) local_unnamed_addr

declare i1 @LLVMLinkModules2(%LLVMModuleRef.580453*, %LLVMModuleRef.580453*) local_unnamed_addr

declare %LLVMPassManagerBuilderRef.580474* @LLVMPassManagerBuilderCreate() local_unnamed_addr

declare void @LLVMPassManagerBuilderDispose(%LLVMPassManagerBuilderRef.580474*) local_unnamed_addr

declare void @LLVMPassManagerBuilderSetOptLevel(%LLVMPassManagerBuilderRef.580474*, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderUseInlinerWithThreshold(%LLVMPassManagerBuilderRef.580474*, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateFunctionPassManager(%LLVMPassManagerBuilderRef.580474*, %LLVMPassManagerRef.580463*) local_unnamed_addr

; Function Attrs: nofree nounwind
define void @"Array<LLVMMetadataRef>_constructor"(%"Array<LLVMMetadataRef>.580481"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMMetadataRef.580457*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<LLVMMetadataRef>_resize"(%"Array<LLVMMetadataRef>.580481"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMMetadataRef.580457*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<LLVMMetadataRef>_swap"(%"Array<LLVMMetadataRef>.580481"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 1
  %.12 = load %LLVMMetadataRef.580457**, %LLVMMetadataRef.580457*** %.11, align 8
  %.13 = getelementptr inbounds %LLVMMetadataRef.580457*, %LLVMMetadataRef.580457** %.12, i64 %.2
  %0 = bitcast %LLVMMetadataRef.580457** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %LLVMMetadataRef.580457*, %LLVMMetadataRef.580457** %.12, i64 %.3
  %1 = bitcast %LLVMMetadataRef.580457** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %LLVMMetadataRef.580457**, %LLVMMetadataRef.580457*** %.11, align 8
  %.33 = getelementptr inbounds %LLVMMetadataRef.580457*, %LLVMMetadataRef.580457** %.31, i64 %.3
  %2 = bitcast %LLVMMetadataRef.580457** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<LLVMMetadataRef>___sl__"(%"Array<LLVMMetadataRef>.580481"* %.1, %LLVMMetadataRef.580457* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 0
  %.17 = load %"Array<LLVMMetadataRef>_vtable_ty.580482"*, %"Array<LLVMMetadataRef>_vtable_ty.580482"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.580482", %"Array<LLVMMetadataRef>_vtable_ty.580482"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<LLVMMetadataRef>.580481"*)*, void (%"Array<LLVMMetadataRef>.580481"*)** %.18, align 8
  call void %.19(%"Array<LLVMMetadataRef>.580481"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 1
  %.31 = load %LLVMMetadataRef.580457**, %LLVMMetadataRef.580457*** %.30, align 8
  %.33 = getelementptr inbounds %LLVMMetadataRef.580457*, %LLVMMetadataRef.580457** %.31, i64 %.24
  store %LLVMMetadataRef.580457* %.2, %LLVMMetadataRef.580457** %.33, align 8
  ret void
}

define void @"Array<LLVMMetadataRef>___setitem__"(%"Array<LLVMMetadataRef>.580481"* nocapture readonly %.1, i64 %.2, %LLVMMetadataRef.580457* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 1
  %.30 = load %LLVMMetadataRef.580457**, %LLVMMetadataRef.580457*** %.29, align 8
  %.32 = getelementptr inbounds %LLVMMetadataRef.580457*, %LLVMMetadataRef.580457** %.30, i64 %.2
  store %LLVMMetadataRef.580457* %.3, %LLVMMetadataRef.580457** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMMetadataRef>_append"(%"Array<LLVMMetadataRef>.580481"* %.1, %LLVMMetadataRef.580457* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 0
  %.9 = load %"Array<LLVMMetadataRef>_vtable_ty.580482"*, %"Array<LLVMMetadataRef>_vtable_ty.580482"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.580482", %"Array<LLVMMetadataRef>_vtable_ty.580482"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457*)*, void (%"Array<LLVMMetadataRef>.580481"*, %LLVMMetadataRef.580457*)** %.10, align 8
  call void %.11(%"Array<LLVMMetadataRef>.580481"* %.1, %LLVMMetadataRef.580457* %.2)
  ret void
}

define %LLVMMetadataRef.580457* @"Array<LLVMMetadataRef>___getitem__"(%"Array<LLVMMetadataRef>.580481"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 1
  %.28 = load %LLVMMetadataRef.580457**, %LLVMMetadataRef.580457*** %.27, align 8
  %.29 = getelementptr inbounds %LLVMMetadataRef.580457*, %LLVMMetadataRef.580457** %.28, i64 %.2
  %.30 = load %LLVMMetadataRef.580457*, %LLVMMetadataRef.580457** %.29, align 8
  ret %LLVMMetadataRef.580457* %.30

.4.endif:                                         ; preds = %.4
  ret %LLVMMetadataRef.580457* null
}

define i1 @"Array<LLVMMetadataRef>___eq__"(%"Array<LLVMMetadataRef>.580481"* %.1, %"Array<LLVMMetadataRef>.580481"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<LLVMMetadataRef>_vtable_ty.580482"*, %"Array<LLVMMetadataRef>_vtable_ty.580482"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.580482", %"Array<LLVMMetadataRef>_vtable_ty.580482"* %.28, i64 0, i32 5
  %.30 = load %LLVMMetadataRef.580457* (%"Array<LLVMMetadataRef>.580481"*, i64)*, %LLVMMetadataRef.580457* (%"Array<LLVMMetadataRef>.580481"*, i64)** %.29, align 8
  %.31 = call %LLVMMetadataRef.580457* %.30(%"Array<LLVMMetadataRef>.580481"* %.1, i64 %storemerge3)
  %.35 = load %"Array<LLVMMetadataRef>_vtable_ty.580482"*, %"Array<LLVMMetadataRef>_vtable_ty.580482"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.580482", %"Array<LLVMMetadataRef>_vtable_ty.580482"* %.35, i64 0, i32 5
  %.37 = load %LLVMMetadataRef.580457* (%"Array<LLVMMetadataRef>.580481"*, i64)*, %LLVMMetadataRef.580457* (%"Array<LLVMMetadataRef>.580481"*, i64)** %.36, align 8
  %.38 = call %LLVMMetadataRef.580457* %.37(%"Array<LLVMMetadataRef>.580481"* %.2, i64 %storemerge3)
  %0 = ptrtoint %LLVMMetadataRef.580457* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %LLVMMetadataRef.580457* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<LLVMMetadataRef>___in__"(%"Array<LLVMMetadataRef>.580481"* %.1, %LLVMMetadataRef.580457* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %LLVMMetadataRef.580457* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<LLVMMetadataRef>_vtable_ty.580482"*, %"Array<LLVMMetadataRef>_vtable_ty.580482"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.580482", %"Array<LLVMMetadataRef>_vtable_ty.580482"* %.19, i64 0, i32 5
  %.21 = load %LLVMMetadataRef.580457* (%"Array<LLVMMetadataRef>.580481"*, i64)*, %LLVMMetadataRef.580457* (%"Array<LLVMMetadataRef>.580481"*, i64)** %.20, align 8
  %.22 = call %LLVMMetadataRef.580457* %.21(%"Array<LLVMMetadataRef>.580481"* %.1, i64 %storemerge4)
  %1 = ptrtoint %LLVMMetadataRef.580457* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<LLVMMetadataRef>_find"(%"Array<LLVMMetadataRef>.580481"* nocapture readonly %.1, %LLVMMetadataRef.580457* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 1
  %.19 = load %LLVMMetadataRef.580457**, %LLVMMetadataRef.580457*** %.18, align 8
  %0 = ptrtoint %LLVMMetadataRef.580457* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %LLVMMetadataRef.580457*, %LLVMMetadataRef.580457** %.19, i64 %storemerge5
  %1 = bitcast %LLVMMetadataRef.580457** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<LLVMMetadataRef>_join"(%"Array<LLVMMetadataRef>.580481"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.343, i64 0, i64 0), i64 16)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.343, i64 0, i64 0), i64 16)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<LLVMMetadataRef>___as_string__"(%"Array<LLVMMetadataRef>.580481"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<LLVMMetadataRef>.580481", %"Array<LLVMMetadataRef>.580481"* %.1, i64 0, i32 0
  %.7 = load %"Array<LLVMMetadataRef>_vtable_ty.580482"*, %"Array<LLVMMetadataRef>_vtable_ty.580482"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.580482", %"Array<LLVMMetadataRef>_vtable_ty.580482"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<LLVMMetadataRef>.580481"*, %string.580129*)*, %string.580129* (%"Array<LLVMMetadataRef>.580481"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<LLVMMetadataRef>.580481"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define void @DebugInfo_constructor(%DebugInfo.580479* nocapture %.1, %LLVMModuleRef.580453* %.2, %string.580129* %.3) local_unnamed_addr {
.5:
  %.11 = call %LLVMDIBuilderRef.580461* @LLVMCreateDIBuilder(%LLVMModuleRef.580453* %.2)
  %.12 = getelementptr inbounds %DebugInfo.580479, %DebugInfo.580479* %.1, i64 0, i32 1
  store %LLVMDIBuilderRef.580461* %.11, %LLVMDIBuilderRef.580461** %.12, align 8
  %.19 = getelementptr inbounds %string.580129, %string.580129* %.3, i64 0, i32 0
  %.20 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.19, align 8
  %.21 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.20, i64 0, i32 10
  %.22 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.21, align 8
  %.23 = call i8* %.22(%string.580129* %.3)
  %.25 = getelementptr inbounds %string.580129, %string.580129* %.3, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27 = call %LLVMMetadataRef.580457* @LLVMDIBuilderCreateFile(%LLVMDIBuilderRef.580461* %.11, i8* %.23, i64 %.26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.344, i64 0, i64 0), i64 1)
  %.28 = getelementptr inbounds %DebugInfo.580479, %DebugInfo.580479* %.1, i64 0, i32 4
  store %LLVMMetadataRef.580457* %.27, %LLVMMetadataRef.580457** %.28, align 8
  %.33 = load %LLVMDIBuilderRef.580461*, %LLVMDIBuilderRef.580461** %.12, align 8
  %.37 = call %LLVMMetadataRef.580457* @LLVMDIBuilderCreateCompileUnit(%LLVMDIBuilderRef.580461* %.33, i64 1, %LLVMMetadataRef.580457* %.27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.345, i64 0, i64 0), i64 12, i1 false, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i64 0, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i64 0, i64 1, i64 0, i1 false, i1 true, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.344, i64 0, i64 0), i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i64 0)
  %.38 = getelementptr inbounds %DebugInfo.580479, %DebugInfo.580479* %.1, i64 0, i32 2
  store %LLVMMetadataRef.580457* %.37, %LLVMMetadataRef.580457** %.38, align 8
  ret void
}

define void @DebugInfo_finalize(%DebugInfo.580479* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %DebugInfo.580479, %DebugInfo.580479* %.1, i64 0, i32 1
  %.7 = load %LLVMDIBuilderRef.580461*, %LLVMDIBuilderRef.580461** %.6, align 8
  call void @LLVMDIBuilderFinalize(%LLVMDIBuilderRef.580461* %.7)
  ret void
}

define void @GeneratedModule_constructor(%GeneratedModule.580483* %.1, %LLVMModuleRef.580453* %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 1
  store %LLVMModuleRef.580453* %.2, %LLVMModuleRef.580453** %.9, align 8
  %.12 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 2
  store i8* null, i8** %.12, align 8
  %.19 = call i1 @LLVMVerifyModule(%LLVMModuleRef.580453* %.2, i64 0, i8** nonnull %.12)
  %.21 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 0
  %.22 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.21, align 8
  %.23 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.22, i64 0, i32 0
  %.24 = load void (%GeneratedModule.580483*)*, void (%GeneratedModule.580483*)** %.23, align 8
  call void %.24(%GeneratedModule.580483* %.1)
  call void @LLVMLinkInMCJIT()
  call void @LLVMInitializeAllTargets()
  call void @LLVMInitializeAllTargetInfos()
  call void @LLVMInitializeAllTargetMCs()
  call void @LLVMInitializeAllTargetPrinters()
  call void @LLVMInitializeAllTargetParsers()
  ret void
}

define void @GeneratedModule_check_errors(%GeneratedModule.580483* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 2
  %.7 = load i8*, i8** %.6, align 8
  %.9 = load i8, i8* %.7, align 1
  %.10.not = icmp eq i8 %.9, 0
  br i1 %.10.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.15 = call %string.580129* @string_from_cstring(i8* nonnull %.7)
  %.16 = getelementptr inbounds %string.580129, %string.580129* %.15, i64 0, i32 0
  %.17 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.16, align 8
  %.18 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.17, i64 0, i32 10
  %.19 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.18, align 8
  %.20 = call i8* %.19(%string.580129* %.15)
  %.22 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.346, i64 0, i64 0), i8* %.20)
  %.24 = call i8* @malloc(i64 %.22)
  %.25 = call i64 (i8*, i8*, ...) @sprintf(i8* %.24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.346, i64 0, i64 0), i8* %.20)
  %.26 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %string.580129*
  %.28 = bitcast i8* %.26 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.28, align 8
  %.30 = getelementptr inbounds i8, i8* %.26, i64 8
  %0 = bitcast i8* %.30 to i8**
  store i8* %.24, i8** %0, align 8
  %.32 = getelementptr inbounds i8, i8* %.26, i64 16
  %1 = bitcast i8* %.32 to i64*
  store i64 %.22, i64* %1, align 8
  %.34 = getelementptr inbounds i8, i8* %.26, i64 24
  %2 = bitcast i8* %.34 to i64*
  store i64 %.22, i64* %2, align 8
  %.39 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.40 = call i8* %.39(%string.580129* %.27)
  %.41 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.44 = load i8*, i8** %.6, align 8
  call void @LLVMDisposeMessage(i8* %.44)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  ret void
}

define void @GeneratedModule_run_passes(%GeneratedModule.580483* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 1
  %.9 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.8, align 8
  %.10 = call %LLVMPassManagerRef.580463* @LLVMCreateFunctionPassManagerForModule(%LLVMModuleRef.580453* %.9)
  %.12 = call %LLVMPassManagerBuilderRef.580474* @LLVMPassManagerBuilderCreate()
  call void @LLVMPassManagerBuilderSetOptLevel(%LLVMPassManagerBuilderRef.580474* %.12, i64 %.2)
  call void @LLVMPassManagerBuilderUseInlinerWithThreshold(%LLVMPassManagerBuilderRef.580474* %.12, i64 255)
  %.21 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.8, align 8
  %.22 = call %LLVMValueRef.580455* @LLVMGetFirstFunction(%LLVMModuleRef.580453* %.21)
  call void @LLVMPassManagerBuilderPopulateFunctionPassManager(%LLVMPassManagerBuilderRef.580474* %.12, %LLVMPassManagerRef.580463* %.10)
  %0 = ptrtoint %LLVMValueRef.580455* %.22 to i64
  %.28 = trunc i64 %0 to i32
  %.30.not = icmp eq i32 %.28, 0
  br i1 %.30.not, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry
  %func.0 = phi %LLVMValueRef.580455* [ %.36, %while.entry ], [ %.22, %.4 ]
  %.34 = call i1 @LLVMRunFunctionPassManager(%LLVMPassManagerRef.580463* %.10, %LLVMValueRef.580455* %func.0)
  %.36 = call %LLVMValueRef.580455* @LLVMGetNextFunction(%LLVMValueRef.580455* %func.0)
  %1 = ptrtoint %LLVMValueRef.580455* %.36 to i64
  %.39 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, 0
  br i1 %.41.not, label %while.exit, label %while.entry

while.exit:                                       ; preds = %while.entry, %.4
  call void @LLVMDisposePassManager(%LLVMPassManagerRef.580463* %.10)
  call void @LLVMPassManagerBuilderDispose(%LLVMPassManagerBuilderRef.580474* %.12)
  ret void
}

define void @GeneratedModule_exec(%GeneratedModule.580483* %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 0
  %.7 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.6, align 8
  %.8 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.7, i64 0, i32 6
  %.9 = load %LLVMModuleRef.580453* (%GeneratedModule.580483*)*, %LLVMModuleRef.580453* (%GeneratedModule.580483*)** %.8, align 8
  %.10 = call %LLVMModuleRef.580453* %.9(%GeneratedModule.580483* %.1)
  %engine = alloca %LLVMExecutionEngineRef.580476*, align 8
  store %LLVMExecutionEngineRef.580476* null, %LLVMExecutionEngineRef.580476** %engine, align 8
  %.15 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 2
  %.16 = call i1 @LLVMCreateExecutionEngineForModule(%LLVMExecutionEngineRef.580476** nonnull %engine, %LLVMModuleRef.580453* %.10, i8** nonnull %.15)
  br i1 %.16, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %string.580129*
  %.20.repack = bitcast i8* %.19 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.20.repack, align 8
  %.20.repack4 = getelementptr inbounds i8, i8* %.19, i64 8
  %0 = bitcast i8* %.20.repack4 to i8**
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.347, i64 0, i64 0), i8** %0, align 8
  %.20.repack5 = getelementptr inbounds i8, i8* %.19, i64 16
  %1 = bitcast i8* %.20.repack5 to i64*
  store i64 33, i64* %1, align 8
  %.20.repack6 = getelementptr inbounds i8, i8* %.19, i64 24
  %2 = bitcast i8* %.20.repack6 to i64*
  store i64 33, i64* %2, align 8
  %.25 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.26 = call i8* %.25(%string.580129* %.20)
  %.27 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  ret void

.3.endif:                                         ; preds = %.3
  %.29 = load %LLVMExecutionEngineRef.580476*, %LLVMExecutionEngineRef.580476** %engine, align 8
  %.30 = call i8* @LLVMGetFunctionAddress(%LLVMExecutionEngineRef.580476* %.29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.348, i64 0, i64 0))
  %main_fnc = alloca i64 ()*, align 8
  %3 = bitcast i64 ()** %main_fnc to i8**
  store i8* %.30, i8** %3, align 8
  %4 = ptrtoint i8* %.30 to i64
  %.34 = trunc i64 %4 to i32
  %.36 = icmp eq i32 %.34, 0
  br i1 %.36, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.39.repack = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.39.repack, align 8
  %.39.repack1 = getelementptr inbounds i8, i8* %.38, i64 8
  %5 = bitcast i8* %.39.repack1 to i8**
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.349, i64 0, i64 0), i8** %5, align 8
  %.39.repack2 = getelementptr inbounds i8, i8* %.38, i64 16
  %6 = bitcast i8* %.39.repack2 to i64*
  store i64 48, i64* %6, align 8
  %.39.repack3 = getelementptr inbounds i8, i8* %.38, i64 24
  %7 = bitcast i8* %.39.repack3 to i64*
  store i64 48, i64* %7, align 8
  %.44 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.45 = call i8* %.44(%string.580129* %.39)
  %.46 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.47 = load %LLVMExecutionEngineRef.580476*, %LLVMExecutionEngineRef.580476** %engine, align 8
  call void @LLVMDisposeExecutionEngine(%LLVMExecutionEngineRef.580476* %.47)
  ret void

.3.endif.endif:                                   ; preds = %.3.endif
  %.50 = load i64 ()*, i64 ()** %main_fnc, align 8
  %.51 = call i64 %.50()
  %.53 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.350, i64 0, i64 0), i64 %.51)
  %.55 = call i8* @malloc(i64 %.53)
  %.56 = call i64 (i8*, i8*, ...) @sprintf(i8* %.55, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.350, i64 0, i64 0), i64 %.51)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.580129*
  %.59 = bitcast i8* %.57 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %8 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %8, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %9 = bitcast i8* %.63 to i64*
  store i64 %.53, i64* %9, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %10 = bitcast i8* %.65 to i64*
  store i64 %.53, i64* %10, align 8
  %.70 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.71 = call i8* %.70(%string.580129* %.58)
  %.72 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.73 = load %LLVMExecutionEngineRef.580476*, %LLVMExecutionEngineRef.580476** %engine, align 8
  call void @LLVMDisposeExecutionEngine(%LLVMExecutionEngineRef.580476* %.73)
  ret void
}

define %LLVMTargetMachineRef.580473* @GeneratedModule_create_target_machine(%GeneratedModule.580483* %.1, %string.580129* %.2) {
.4:
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.580129*
  %.10 = bitcast i8* %.8 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %.18 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.14, i8 0, i64 16, i1 false)
  %.19 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.18, align 8
  %.20 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.19, i64 0, i32 3
  %.21 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.20, align 8
  %.22 = call i1 %.21(%string.580129* %.2, %string.580129* %.9)
  br i1 %.22, label %true_block, label %false_block

true_block:                                       ; preds = %.4
  %.24 = call i8* @LLVMGetDefaultTargetTriple()
  br label %end

false_block:                                      ; preds = %.4
  %.28 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.18, align 8
  %.29 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.28, i64 0, i32 10
  %.30 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.29, align 8
  %.31 = call i8* %.30(%string.580129* %.2)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.33 = phi i8* [ %.24, %true_block ], [ %.31, %false_block ]
  %.35 = call %LLVMTargetRef.580472* @LLVMGetFirstTarget()
  %target = alloca %LLVMTargetRef.580472*, align 8
  store %LLVMTargetRef.580472* %.35, %LLVMTargetRef.580472** %target, align 8
  %.39 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 2
  %.40 = call i1 @LLVMGetTargetFromTriple(i8* %.33, %LLVMTargetRef.580472** nonnull %target, i8** nonnull %.39)
  br i1 %.40, label %end.if, label %end.endif

end.if:                                           ; preds = %end
  %.45 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.18, align 8
  %.46 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.45, i64 0, i32 10
  %.47 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.46, align 8
  %.48 = call i8* %.47(%string.580129* %.2)
  %.50 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.351, i64 0, i64 0), i8* %.48)
  %.52 = call i8* @malloc(i64 %.50)
  %.53 = call i64 (i8*, i8*, ...) @sprintf(i8* %.52, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.351, i64 0, i64 0), i8* %.48)
  %.54 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.55 = bitcast i8* %.54 to %string.580129*
  %.56 = bitcast i8* %.54 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.56, align 8
  %.58 = getelementptr inbounds i8, i8* %.54, i64 8
  %1 = bitcast i8* %.58 to i8**
  store i8* %.52, i8** %1, align 8
  %.60 = getelementptr inbounds i8, i8* %.54, i64 16
  %2 = bitcast i8* %.60 to i64*
  store i64 %.50, i64* %2, align 8
  %.62 = getelementptr inbounds i8, i8* %.54, i64 24
  %3 = bitcast i8* %.62 to i64*
  store i64 %.50, i64* %3, align 8
  %.67 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.68 = call i8* %.67(%string.580129* %.55)
  %.69 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.68, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %end.endif

end.endif:                                        ; preds = %end.if, %end
  %.72 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 0
  %.73 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.72, align 8
  %.74 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.73, i64 0, i32 0
  %.75 = load void (%GeneratedModule.580483*)*, void (%GeneratedModule.580483*)** %.74, align 8
  call void %.75(%GeneratedModule.580483* %.1)
  %.78 = load %LLVMTargetRef.580472*, %LLVMTargetRef.580472** %target, align 8
  %.81 = call i8* @LLVMGetHostCPUFeatures()
  %.82 = call %LLVMTargetMachineRef.580473* @LLVMCreateTargetMachine(%LLVMTargetRef.580472* %.78, i8* %.33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.352, i64 0, i64 0), i8* %.81, i64 3, i64 0, i64 0)
  ret %LLVMTargetMachineRef.580473* %.82
}

define void @GeneratedModule_write_object(%GeneratedModule.580483* %.1, %string.580129* %.2, %string.580129* %.3) {
.5:
  %.10 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 0
  %.11 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.10, align 8
  %.12 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.11, i64 0, i32 3
  %.13 = load %LLVMTargetMachineRef.580473* (%GeneratedModule.580483*, %string.580129*)*, %LLVMTargetMachineRef.580473* (%GeneratedModule.580483*, %string.580129*)** %.12, align 8
  %.15 = call %LLVMTargetMachineRef.580473* %.13(%GeneratedModule.580483* %.1, %string.580129* %.3)
  %.19 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.10, align 8
  %.20 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.19, i64 0, i32 6
  %.21 = load %LLVMModuleRef.580453* (%GeneratedModule.580483*)*, %LLVMModuleRef.580453* (%GeneratedModule.580483*)** %.20, align 8
  %.22 = call %LLVMModuleRef.580453* %.21(%GeneratedModule.580483* %.1)
  %.26 = call i8* @LLVMCreateTargetDataLayout(%LLVMTargetMachineRef.580473* %.15)
  call void @LLVMSetDataLayout(%LLVMModuleRef.580453* %.22, i8* %.26)
  %.30 = call i8* @LLVMGetTargetMachineTriple(%LLVMTargetMachineRef.580473* %.15)
  call void @LLVMSetTarget(%LLVMModuleRef.580453* %.22, i8* %.30)
  %.35 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  %.36 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.35, align 8
  %.37 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.36, i64 0, i32 10
  %.38 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.37, align 8
  %.39 = call i8* %.38(%string.580129* %.2)
  %.41 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 2
  %.42 = call i1 @LLVMTargetMachineEmitToFile(%LLVMTargetMachineRef.580473* %.15, %LLVMModuleRef.580453* %.22, i8* %.39, i64 1, i8** nonnull %.41)
  br i1 %.42, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.45 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.46 = bitcast i8* %.45 to %string.580129*
  %.46.repack = bitcast i8* %.45 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.46.repack, align 8
  %.46.repack1 = getelementptr inbounds i8, i8* %.45, i64 8
  %0 = bitcast i8* %.46.repack1 to i8**
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.353, i64 0, i64 0), i8** %0, align 8
  %.46.repack2 = getelementptr inbounds i8, i8* %.45, i64 16
  %1 = bitcast i8* %.46.repack2 to i64*
  store i64 41, i64* %1, align 8
  %.46.repack3 = getelementptr inbounds i8, i8* %.45, i64 24
  %2 = bitcast i8* %.46.repack3 to i64*
  store i64 41, i64* %2, align 8
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.52 = call i8* %.51(%string.580129* %.46)
  %.53 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.57 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.10, align 8
  %.58 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.57, i64 0, i32 0
  %.59 = load void (%GeneratedModule.580483*)*, void (%GeneratedModule.580483*)** %.58, align 8
  call void %.59(%GeneratedModule.580483* %.1)
  call void @LLVMDisposeTargetMachine(%LLVMTargetMachineRef.580473* %.15)
  ret void
}

define void @GeneratedModule_print(%GeneratedModule.580483* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 1
  %.7 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.6, align 8
  call void @LLVMDumpModule(%LLVMModuleRef.580453* %.7)
  ret void
}

define %LLVMModuleRef.580453* @GeneratedModule_copy_llvm_module(%GeneratedModule.580483* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 1
  %.7 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.6, align 8
  %.8 = call %LLVMModuleRef.580453* @LLVMCloneModule(%LLVMModuleRef.580453* %.7)
  ret %LLVMModuleRef.580453* %.8
}

define void @GeneratedModule_destroy(%GeneratedModule.580483* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.1, i64 0, i32 1
  %.7 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.6, align 8
  %.8 = call %LLVMContextRef.580452* @LLVMGetModuleContext(%LLVMModuleRef.580453* %.7)
  %.12 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.6, align 8
  call void @LLVMDisposeModule(%LLVMModuleRef.580453* %.12)
  call void @LLVMContextDispose(%LLVMContextRef.580452* %.8)
  call void @LLVMShutdown()
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.580492"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, int>_set"(%"Bucket<string, int>.580492"* nocapture %.1, %string.580129* %.2, i64 %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.1, i64 0, i32 2
  store i64 %.3, i64* %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, int>_constructor"(%"Map<string, int>.580489"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.580492"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, int>.580492"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, int>_vtable_ty.580493"**
  store %"Bucket<string, int>_vtable_ty.580493"* @"Bucket<string, int>_vtable_data", %"Bucket<string, int>_vtable_ty.580493"** %.26, align 8
  call void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.580492"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, int>.580492"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, int>_hash_fnc"(%"Map<string, int>.580489"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, int>_resize"(%"Map<string, int>.580489"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.580492"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, int>.580492"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, int>_vtable_ty.580493"**
  store %"Bucket<string, int>_vtable_ty.580493"* @"Bucket<string, int>_vtable_data", %"Bucket<string, int>_vtable_ty.580493"** %.45, align 8
  call void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.580492"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, int>.580492"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, int>_set"(%"Map<string, int>.580489"* %.1, %string.580129* %.2, i64 %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, int>_vtable_ty.580491"*, %"Map<string, int>_vtable_ty.580491"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, int>_vtable_ty.580491", %"Map<string, int>_vtable_ty.580491"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, int>.580489"*, %string.580129*)*, i64 (%"Map<string, int>.580489"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, int>.580489"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, int>_vtable_ty.580491"*, %"Map<string, int>_vtable_ty.580491"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, int>_vtable_ty.580491", %"Map<string, int>_vtable_ty.580491"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, int>.580489"*)*, void (%"Map<string, int>.580489"*)** %.32, align 8
  call void %.33(%"Map<string, int>.580489"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.39, i64 %.19
  %.41 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, int>_vtable_ty.580493"*, %"Bucket<string, int>_vtable_ty.580493"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, int>_vtable_ty.580493", %"Bucket<string, int>_vtable_ty.580493"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, int>.580492"*, %string.580129*, i64)*, void (%"Bucket<string, int>.580492"*, %string.580129*, i64)** %.92, align 8
  call void %.93(%"Bucket<string, int>.580492"* %.89, %string.580129* %.2, i64 %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.70, i64 %.65
  %.72 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define i64 @"Map<string, int>_get"(%"Map<string, int>.580489"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, int>_vtable_ty.580491"*, %"Map<string, int>_vtable_ty.580491"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, int>_vtable_ty.580491", %"Map<string, int>_vtable_ty.580491"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, int>.580489"*, %string.580129*)*, i64 (%"Map<string, int>.580489"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, int>.580489"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.22, i64 %.17
  %.24 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.54, i64 %.48
  %.56 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret i64 0

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.91, i64 0, i32 2
  %.93 = load i64, i64* %.92, align 8
  ret i64 %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, int>>_constructor"(%"Array<Bucket<string, int>>.580494"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.580492"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, int>>_resize"(%"Array<Bucket<string, int>>.580494"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.580492"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, int>>_swap"(%"Array<Bucket<string, int>>.580494"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, int>.580492"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, int>.580492"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, int>.580492"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, int>>___sl__"(%"Array<Bucket<string, int>>.580494"* %.1, %"Bucket<string, int>.580492"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, int>>_vtable_ty.580495"*, %"Array<Bucket<string, int>>_vtable_ty.580495"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.580495", %"Array<Bucket<string, int>>_vtable_ty.580495"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, int>>.580494"*)*, void (%"Array<Bucket<string, int>>.580494"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, int>>.580494"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.31, i64 %.24
  store %"Bucket<string, int>.580492"* %.2, %"Bucket<string, int>.580492"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, int>>___setitem__"(%"Array<Bucket<string, int>>.580494"* nocapture readonly %.1, i64 %.2, %"Bucket<string, int>.580492"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.30, i64 %.2
  store %"Bucket<string, int>.580492"* %.3, %"Bucket<string, int>.580492"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, int>>_append"(%"Array<Bucket<string, int>>.580494"* %.1, %"Bucket<string, int>.580492"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, int>>_vtable_ty.580495"*, %"Array<Bucket<string, int>>_vtable_ty.580495"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.580495", %"Array<Bucket<string, int>>_vtable_ty.580495"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)*, void (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, int>>.580494"* %.1, %"Bucket<string, int>.580492"* %.2)
  ret void
}

define %"Bucket<string, int>.580492"* @"Array<Bucket<string, int>>___getitem__"(%"Array<Bucket<string, int>>.580494"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.28, i64 %.2
  %.30 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.29, align 8
  ret %"Bucket<string, int>.580492"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, int>.580492"* null
}

define i1 @"Array<Bucket<string, int>>___eq__"(%"Array<Bucket<string, int>>.580494"* %.1, %"Array<Bucket<string, int>>.580494"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, int>>_vtable_ty.580495"*, %"Array<Bucket<string, int>>_vtable_ty.580495"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.580495", %"Array<Bucket<string, int>>_vtable_ty.580495"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, int>.580492"* (%"Array<Bucket<string, int>>.580494"*, i64)*, %"Bucket<string, int>.580492"* (%"Array<Bucket<string, int>>.580494"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, int>.580492"* %.30(%"Array<Bucket<string, int>>.580494"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, int>>_vtable_ty.580495"*, %"Array<Bucket<string, int>>_vtable_ty.580495"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.580495", %"Array<Bucket<string, int>>_vtable_ty.580495"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, int>.580492"* (%"Array<Bucket<string, int>>.580494"*, i64)*, %"Bucket<string, int>.580492"* (%"Array<Bucket<string, int>>.580494"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, int>.580492"* %.37(%"Array<Bucket<string, int>>.580494"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, int>.580492"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, int>.580492"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, int>>___in__"(%"Array<Bucket<string, int>>.580494"* %.1, %"Bucket<string, int>.580492"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, int>.580492"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, int>>_vtable_ty.580495"*, %"Array<Bucket<string, int>>_vtable_ty.580495"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.580495", %"Array<Bucket<string, int>>_vtable_ty.580495"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, int>.580492"* (%"Array<Bucket<string, int>>.580494"*, i64)*, %"Bucket<string, int>.580492"* (%"Array<Bucket<string, int>>.580494"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, int>.580492"* %.21(%"Array<Bucket<string, int>>.580494"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, int>.580492"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, int>>_find"(%"Array<Bucket<string, int>>.580494"* nocapture readonly %.1, %"Bucket<string, int>.580492"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, int>.580492"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, int>.580492"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, int>>_join"(%"Array<Bucket<string, int>>.580494"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.354, i64 0, i64 0), i64 20)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.354, i64 0, i64 0), i64 20)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, int>>___as_string__"(%"Array<Bucket<string, int>>.580494"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, int>>.580494", %"Array<Bucket<string, int>>.580494"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, int>>_vtable_ty.580495"*, %"Array<Bucket<string, int>>_vtable_ty.580495"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.580495", %"Array<Bucket<string, int>>_vtable_ty.580495"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, int>>.580494"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, int>>.580494"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, int>>.580494"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, int>>.580494"* @"Map<string, int>_get_buckets"(%"Map<string, int>.580489"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, int>>.580494"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, int>>_vtable_ty.580495"**
  store %"Array<Bucket<string, int>>_vtable_ty.580495"* @"Array<Bucket<string, int>>_vtable_data", %"Array<Bucket<string, int>>_vtable_ty.580495"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, int>.580492"**, %"Bucket<string, int>.580492"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, int>.580492"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, int>.580492"*, align 8
  %4 = bitcast %"Bucket<string, int>.580492"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, int>.580492"*
  %.36 = getelementptr inbounds %"Bucket<string, int>.580492", %"Bucket<string, int>.580492"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, int>>.580494"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, int>.580492"*, %"Bucket<string, int>.580492"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, int>>_vtable_ty.580495"*, %"Array<Bucket<string, int>>_vtable_ty.580495"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.580495", %"Array<Bucket<string, int>>_vtable_ty.580495"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)*, void (%"Array<Bucket<string, int>>.580494"*, %"Bucket<string, int>.580492"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, int>>.580494"* %.9, %"Bucket<string, int>.580492"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.580497"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, LLVMValueRef>_set"(%"Bucket<string, LLVMValueRef>.580497"* nocapture %.1, %string.580129* %.2, %LLVMValueRef.580455* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.1, i64 0, i32 2
  store %LLVMValueRef.580455* %.3, %LLVMValueRef.580455** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.580490"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.580497"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, LLVMValueRef>.580497"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, LLVMValueRef>_vtable_ty.580498"**
  store %"Bucket<string, LLVMValueRef>_vtable_ty.580498"* @"Bucket<string, LLVMValueRef>_vtable_data", %"Bucket<string, LLVMValueRef>_vtable_ty.580498"** %.26, align 8
  call void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.580497"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, LLVMValueRef>.580497"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, LLVMValueRef>_hash_fnc"(%"Map<string, LLVMValueRef>.580490"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, LLVMValueRef>_resize"(%"Map<string, LLVMValueRef>.580490"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.580497"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, LLVMValueRef>.580497"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, LLVMValueRef>_vtable_ty.580498"**
  store %"Bucket<string, LLVMValueRef>_vtable_ty.580498"* @"Bucket<string, LLVMValueRef>_vtable_data", %"Bucket<string, LLVMValueRef>_vtable_ty.580498"** %.45, align 8
  call void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.580497"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, LLVMValueRef>.580497"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, LLVMValueRef>_set"(%"Map<string, LLVMValueRef>.580490"* %.1, %string.580129* %.2, %LLVMValueRef.580455* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, i64 (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, LLVMValueRef>.580490"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, LLVMValueRef>.580490"*)*, void (%"Map<string, LLVMValueRef>.580490"*)** %.32, align 8
  call void %.33(%"Map<string, LLVMValueRef>.580490"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.39, i64 %.19
  %.41 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, LLVMValueRef>_vtable_ty.580498"*, %"Bucket<string, LLVMValueRef>_vtable_ty.580498"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, LLVMValueRef>_vtable_ty.580498", %"Bucket<string, LLVMValueRef>_vtable_ty.580498"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, LLVMValueRef>.580497"*, %string.580129*, %LLVMValueRef.580455*)*, void (%"Bucket<string, LLVMValueRef>.580497"*, %string.580129*, %LLVMValueRef.580455*)** %.92, align 8
  call void %.93(%"Bucket<string, LLVMValueRef>.580497"* %.89, %string.580129* %.2, %LLVMValueRef.580455* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.70, i64 %.65
  %.72 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %LLVMValueRef.580455* @"Map<string, LLVMValueRef>_get"(%"Map<string, LLVMValueRef>.580490"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, i64 (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, LLVMValueRef>.580490"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.22, i64 %.17
  %.24 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.54, i64 %.48
  %.56 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %LLVMValueRef.580455* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.91, i64 0, i32 2
  %.93 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.92, align 8
  ret %LLVMValueRef.580455* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, LLVMValueRef>>_constructor"(%"Array<Bucket<string, LLVMValueRef>>.580499"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.580497"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, LLVMValueRef>>_resize"(%"Array<Bucket<string, LLVMValueRef>>.580499"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.580497"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, LLVMValueRef>>_swap"(%"Array<Bucket<string, LLVMValueRef>>.580499"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, LLVMValueRef>.580497"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, LLVMValueRef>.580497"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, LLVMValueRef>.580497"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>___sl__"(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, %"Bucket<string, LLVMValueRef>.580497"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, LLVMValueRef>>.580499"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.580499"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.31, i64 %.24
  store %"Bucket<string, LLVMValueRef>.580497"* %.2, %"Bucket<string, LLVMValueRef>.580497"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>___setitem__"(%"Array<Bucket<string, LLVMValueRef>>.580499"* nocapture readonly %.1, i64 %.2, %"Bucket<string, LLVMValueRef>.580497"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.30, i64 %.2
  store %"Bucket<string, LLVMValueRef>.580497"* %.3, %"Bucket<string, LLVMValueRef>.580497"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>_append"(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, %"Bucket<string, LLVMValueRef>.580497"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, %"Bucket<string, LLVMValueRef>.580497"* %.2)
  ret void
}

define %"Bucket<string, LLVMValueRef>.580497"* @"Array<Bucket<string, LLVMValueRef>>___getitem__"(%"Array<Bucket<string, LLVMValueRef>>.580499"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.28, i64 %.2
  %.30 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.29, align 8
  ret %"Bucket<string, LLVMValueRef>.580497"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, LLVMValueRef>.580497"* null
}

define i1 @"Array<Bucket<string, LLVMValueRef>>___eq__"(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, %"Array<Bucket<string, LLVMValueRef>>.580499"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, LLVMValueRef>.580497"* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64)*, %"Bucket<string, LLVMValueRef>.580497"* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, LLVMValueRef>.580497"* %.30(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, LLVMValueRef>.580497"* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64)*, %"Bucket<string, LLVMValueRef>.580497"* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, LLVMValueRef>.580497"* %.37(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, LLVMValueRef>.580497"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, LLVMValueRef>.580497"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, LLVMValueRef>>___in__"(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, %"Bucket<string, LLVMValueRef>.580497"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, LLVMValueRef>.580497"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, LLVMValueRef>.580497"* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64)*, %"Bucket<string, LLVMValueRef>.580497"* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, LLVMValueRef>.580497"* %.21(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, LLVMValueRef>.580497"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, LLVMValueRef>>_find"(%"Array<Bucket<string, LLVMValueRef>>.580499"* nocapture readonly %.1, %"Bucket<string, LLVMValueRef>.580497"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, LLVMValueRef>.580497"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, LLVMValueRef>.580497"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, LLVMValueRef>>_join"(%"Array<Bucket<string, LLVMValueRef>>.580499"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.355, i64 0, i64 0), i64 29)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.355, i64 0, i64 0), i64 29)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, LLVMValueRef>>___as_string__"(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.580499", %"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, LLVMValueRef>>.580499"* @"Map<string, LLVMValueRef>_get_buckets"(%"Map<string, LLVMValueRef>.580490"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, LLVMValueRef>>.580499"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"**
  store %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"* @"Array<Bucket<string, LLVMValueRef>>_vtable_data", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, LLVMValueRef>.580497"**, %"Bucket<string, LLVMValueRef>.580497"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, LLVMValueRef>.580497"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, LLVMValueRef>.580497"*, align 8
  %4 = bitcast %"Bucket<string, LLVMValueRef>.580497"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, LLVMValueRef>.580497"*
  %.36 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.580497", %"Bucket<string, LLVMValueRef>.580497"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, LLVMValueRef>>.580499"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, LLVMValueRef>.580497"*, %"Bucket<string, LLVMValueRef>.580497"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.580500"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.580499"*, %"Bucket<string, LLVMValueRef>.580497"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, LLVMValueRef>>.580499"* %.9, %"Bucket<string, LLVMValueRef>.580497"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<LLVMTypeRef>_constructor"(%"Array<LLVMTypeRef>.580503"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMTypeRef.580454*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<LLVMTypeRef>_resize"(%"Array<LLVMTypeRef>.580503"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMTypeRef.580454*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<LLVMTypeRef>_swap"(%"Array<LLVMTypeRef>.580503"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 1
  %.12 = load %LLVMTypeRef.580454**, %LLVMTypeRef.580454*** %.11, align 8
  %.13 = getelementptr inbounds %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.12, i64 %.2
  %0 = bitcast %LLVMTypeRef.580454** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.12, i64 %.3
  %1 = bitcast %LLVMTypeRef.580454** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %LLVMTypeRef.580454**, %LLVMTypeRef.580454*** %.11, align 8
  %.33 = getelementptr inbounds %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.31, i64 %.3
  %2 = bitcast %LLVMTypeRef.580454** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<LLVMTypeRef>___sl__"(%"Array<LLVMTypeRef>.580503"* %.1, %LLVMTypeRef.580454* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 0
  %.17 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<LLVMTypeRef>.580503"*)*, void (%"Array<LLVMTypeRef>.580503"*)** %.18, align 8
  call void %.19(%"Array<LLVMTypeRef>.580503"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 1
  %.31 = load %LLVMTypeRef.580454**, %LLVMTypeRef.580454*** %.30, align 8
  %.33 = getelementptr inbounds %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.31, i64 %.24
  store %LLVMTypeRef.580454* %.2, %LLVMTypeRef.580454** %.33, align 8
  ret void
}

define void @"Array<LLVMTypeRef>___setitem__"(%"Array<LLVMTypeRef>.580503"* nocapture readonly %.1, i64 %.2, %LLVMTypeRef.580454* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 1
  %.30 = load %LLVMTypeRef.580454**, %LLVMTypeRef.580454*** %.29, align 8
  %.32 = getelementptr inbounds %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.30, i64 %.2
  store %LLVMTypeRef.580454* %.3, %LLVMTypeRef.580454** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMTypeRef>_append"(%"Array<LLVMTypeRef>.580503"* %.1, %LLVMTypeRef.580454* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 0
  %.9 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)*, void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)** %.10, align 8
  call void %.11(%"Array<LLVMTypeRef>.580503"* %.1, %LLVMTypeRef.580454* %.2)
  ret void
}

define %LLVMTypeRef.580454* @"Array<LLVMTypeRef>___getitem__"(%"Array<LLVMTypeRef>.580503"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 1
  %.28 = load %LLVMTypeRef.580454**, %LLVMTypeRef.580454*** %.27, align 8
  %.29 = getelementptr inbounds %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.28, i64 %.2
  %.30 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.29, align 8
  ret %LLVMTypeRef.580454* %.30

.4.endif:                                         ; preds = %.4
  ret %LLVMTypeRef.580454* null
}

define i1 @"Array<LLVMTypeRef>___eq__"(%"Array<LLVMTypeRef>.580503"* %.1, %"Array<LLVMTypeRef>.580503"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.28, i64 0, i32 5
  %.30 = load %LLVMTypeRef.580454* (%"Array<LLVMTypeRef>.580503"*, i64)*, %LLVMTypeRef.580454* (%"Array<LLVMTypeRef>.580503"*, i64)** %.29, align 8
  %.31 = call %LLVMTypeRef.580454* %.30(%"Array<LLVMTypeRef>.580503"* %.1, i64 %storemerge3)
  %.35 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.35, i64 0, i32 5
  %.37 = load %LLVMTypeRef.580454* (%"Array<LLVMTypeRef>.580503"*, i64)*, %LLVMTypeRef.580454* (%"Array<LLVMTypeRef>.580503"*, i64)** %.36, align 8
  %.38 = call %LLVMTypeRef.580454* %.37(%"Array<LLVMTypeRef>.580503"* %.2, i64 %storemerge3)
  %0 = ptrtoint %LLVMTypeRef.580454* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %LLVMTypeRef.580454* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<LLVMTypeRef>___in__"(%"Array<LLVMTypeRef>.580503"* %.1, %LLVMTypeRef.580454* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %LLVMTypeRef.580454* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.19, i64 0, i32 5
  %.21 = load %LLVMTypeRef.580454* (%"Array<LLVMTypeRef>.580503"*, i64)*, %LLVMTypeRef.580454* (%"Array<LLVMTypeRef>.580503"*, i64)** %.20, align 8
  %.22 = call %LLVMTypeRef.580454* %.21(%"Array<LLVMTypeRef>.580503"* %.1, i64 %storemerge4)
  %1 = ptrtoint %LLVMTypeRef.580454* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<LLVMTypeRef>_find"(%"Array<LLVMTypeRef>.580503"* nocapture readonly %.1, %LLVMTypeRef.580454* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 1
  %.19 = load %LLVMTypeRef.580454**, %LLVMTypeRef.580454*** %.18, align 8
  %0 = ptrtoint %LLVMTypeRef.580454* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.19, i64 %storemerge5
  %1 = bitcast %LLVMTypeRef.580454** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<LLVMTypeRef>_join"(%"Array<LLVMTypeRef>.580503"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.356, i64 0, i64 0), i64 12)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.356, i64 0, i64 0), i64 12)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<LLVMTypeRef>___as_string__"(%"Array<LLVMTypeRef>.580503"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 0
  %.7 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<LLVMTypeRef>.580503"*, %string.580129*)*, %string.580129* (%"Array<LLVMTypeRef>.580503"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<LLVMTypeRef>.580503"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define noalias %IntrinsicResult.580485* @get_intrinsic(%LLVMModuleRef.580453* %.1, %string.580129* %.2, %"Array<LLVMTypeRef>.580503"* nocapture readonly %.3, %LLVMTypeRef.580454* %.4, i1 %.5) local_unnamed_addr {
.7:
  %.14 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.16 = bitcast i8* %.14 to %IntrinsicResult_vtable_ty.580486**
  store %IntrinsicResult_vtable_ty.580486* @IntrinsicResult_vtable_data, %IntrinsicResult_vtable_ty.580486** %.16, align 8
  %.22 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.3, i64 0, i32 1
  %.23 = load %LLVMTypeRef.580454**, %LLVMTypeRef.580454*** %.22, align 8
  %.25 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.3, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.28 = call %LLVMTypeRef.580454* @LLVMFunctionType(%LLVMTypeRef.580454* %.4, %LLVMTypeRef.580454** %.23, i64 %.26, i1 %.5)
  %.29 = getelementptr inbounds i8, i8* %.14, i64 16
  %0 = bitcast i8* %.29 to %LLVMTypeRef.580454**
  store %LLVMTypeRef.580454* %.28, %LLVMTypeRef.580454** %0, align 8
  %.32 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  %.33 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.32, align 8
  %.34 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.33, i64 0, i32 10
  %.35 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.34, align 8
  %.36 = call i8* %.35(%string.580129* %.2)
  %.40 = call %LLVMValueRef.580455* @LLVMGetNamedFunction(%LLVMModuleRef.580453* %.1, i8* %.36)
  %1 = ptrtoint %LLVMValueRef.580455* %.40 to i64
  %.43 = trunc i64 %1 to i32
  %.45.not = icmp eq i32 %.43, 0
  br i1 %.45.not, label %.7.else, label %.7.endif

.7.else:                                          ; preds = %.7
  %.58 = call %LLVMValueRef.580455* @LLVMAddFunction(%LLVMModuleRef.580453* %.1, i8* %.36, %LLVMTypeRef.580454* %.28)
  br label %.7.endif

.7.endif:                                         ; preds = %.7, %.7.else
  %.58.sink = phi %LLVMValueRef.580455* [ %.58, %.7.else ], [ %.40, %.7 ]
  %.59 = getelementptr inbounds i8, i8* %.14, i64 8
  %2 = bitcast i8* %.59 to %LLVMValueRef.580455**
  store %LLVMValueRef.580455* %.58.sink, %LLVMValueRef.580455** %2, align 8
  %.15 = bitcast i8* %.14 to %IntrinsicResult.580485*
  ret %IntrinsicResult.580485* %.15
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_terminated(%Block.580345* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Block.580345, %Block.580345* %.1, i64 0, i32 2
  %.7 = load i1, i1* %.6, align 1
  %.9 = getelementptr inbounds %Block.580345, %Block.580345* %.1, i64 0, i32 3
  %.10 = load i1, i1* %.9, align 1
  %.11 = or i1 %.7, %.10
  %.13 = getelementptr inbounds %Block.580345, %Block.580345* %.1, i64 0, i32 4
  %.14 = load i1, i1* %.13, align 1
  %.15 = or i1 %.11, %.14
  ret i1 %.15
}

define noalias %string.580129* @create_var_key(%VarId.580331* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %VarId.580331, %VarId.580331* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %VarId.580331, %VarId.580331* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  %.12 = getelementptr inbounds %VarId.580331, %VarId.580331* %.1, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.15 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.357, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.17 = call i8* @malloc(i64 %.15)
  %.18 = call i64 (i8*, i8*, ...) @sprintf(i8* %.17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.357, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %string.580129*
  %.21 = bitcast i8* %.19 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.21, align 8
  %.23 = getelementptr inbounds i8, i8* %.19, i64 8
  %0 = bitcast i8* %.23 to i8**
  store i8* %.17, i8** %0, align 8
  %.25 = getelementptr inbounds i8, i8* %.19, i64 16
  %1 = bitcast i8* %.25 to i64*
  store i64 %.15, i64* %1, align 8
  %.27 = getelementptr inbounds i8, i8* %.19, i64 24
  %2 = bitcast i8* %.27 to i64*
  store i64 %.15, i64* %2, align 8
  ret %string.580129* %.20
}

define noalias %string.580129* @create_type_id_key(%TypeId.580287* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.12 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.1, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.15 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.357, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.17 = call i8* @malloc(i64 %.15)
  %.18 = call i64 (i8*, i8*, ...) @sprintf(i8* %.17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.357, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %string.580129*
  %.21 = bitcast i8* %.19 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.21, align 8
  %.23 = getelementptr inbounds i8, i8* %.19, i64 8
  %0 = bitcast i8* %.23 to i8**
  store i8* %.17, i8** %0, align 8
  %.25 = getelementptr inbounds i8, i8* %.19, i64 16
  %1 = bitcast i8* %.25 to i64*
  store i64 %.15, i64* %1, align 8
  %.27 = getelementptr inbounds i8, i8* %.19, i64 24
  %2 = bitcast i8* %.27 to i64*
  store i64 %.15, i64* %2, align 8
  ret %string.580129* %.20
}

define noalias %string.580129* @create_type_key_from_var(%VarId.580331* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %VarId.580331, %VarId.580331* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %VarId.580331, %VarId.580331* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  %.11 = add i64 %.10, -3
  %.13 = getelementptr inbounds %VarId.580331, %VarId.580331* %.1, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  %.16 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.357, i64 0, i64 0), i64 %.7, i64 %.11, i64 %.14)
  %.18 = call i8* @malloc(i64 %.16)
  %.19 = call i64 (i8*, i8*, ...) @sprintf(i8* %.18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.357, i64 0, i64 0), i64 %.7, i64 %.11, i64 %.14)
  %.20 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.21 = bitcast i8* %.20 to %string.580129*
  %.22 = bitcast i8* %.20 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.22, align 8
  %.24 = getelementptr inbounds i8, i8* %.20, i64 8
  %0 = bitcast i8* %.24 to i8**
  store i8* %.18, i8** %0, align 8
  %.26 = getelementptr inbounds i8, i8* %.20, i64 16
  %1 = bitcast i8* %.26 to i64*
  store i64 %.16, i64* %1, align 8
  %.28 = getelementptr inbounds i8, i8* %.20, i64 24
  %2 = bitcast i8* %.28 to i64*
  store i64 %.16, i64* %2, align 8
  ret %string.580129* %.21
}

define noalias %string.580129* @create_prop_key(%PropId.580339* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %PropId.580339, %PropId.580339* %.1, i64 0, i32 2
  %.7 = load %TypeId.580287*, %TypeId.580287** %.6, align 8
  %.8 = call %string.580129* @create_type_id_key(%TypeId.580287* %.7)
  %.10 = getelementptr inbounds %PropId.580339, %PropId.580339* %.1, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %PropId.580339, %PropId.580339* %.1, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  %.15 = getelementptr inbounds %string.580129, %string.580129* %.8, i64 0, i32 0
  %.16 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.15, align 8
  %.17 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.16, i64 0, i32 10
  %.18 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.17, align 8
  %.19 = call i8* %.18(%string.580129* %.8)
  %.21 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.358, i64 0, i64 0), i8* %.19, i64 %.11, i64 %.14)
  %.23 = call i8* @malloc(i64 %.21)
  %.24 = call i64 (i8*, i8*, ...) @sprintf(i8* %.23, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.358, i64 0, i64 0), i8* %.19, i64 %.11, i64 %.14)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.26 = bitcast i8* %.25 to %string.580129*
  %.27 = bitcast i8* %.25 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %0 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %0, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %1 = bitcast i8* %.31 to i64*
  store i64 %.21, i64* %1, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %2 = bitcast i8* %.33 to i64*
  store i64 %.21, i64* %2, align 8
  ret %string.580129* %.26
}

define void @resize_type_array(%"Array<LLVMTypeRef>.580503"* %.1, i64 %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.15.not1 = icmp sgt i64 %.10, %.2
  br i1 %.15.not1, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge2 = phi i64 [ %.10, %for.body.lr.ph ], [ %.27, %for.body ]
  %.19 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.19, i64 0, i32 2
  %.21 = load void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)*, void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)** %.20, align 8
  call void %.21(%"Array<LLVMTypeRef>.580503"* %.1, %LLVMTypeRef.580454* null)
  %.27 = add i64 %storemerge2, 1
  %.15.not = icmp sgt i64 %.27, %.2
  br i1 %.15.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<LLVMValueRef>_constructor"(%"Array<LLVMValueRef>.580505"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMValueRef.580455*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<LLVMValueRef>_resize"(%"Array<LLVMValueRef>.580505"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMValueRef.580455*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<LLVMValueRef>_swap"(%"Array<LLVMValueRef>.580505"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 1
  %.12 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %.11, align 8
  %.13 = getelementptr inbounds %LLVMValueRef.580455*, %LLVMValueRef.580455** %.12, i64 %.2
  %0 = bitcast %LLVMValueRef.580455** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %LLVMValueRef.580455*, %LLVMValueRef.580455** %.12, i64 %.3
  %1 = bitcast %LLVMValueRef.580455** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %.11, align 8
  %.33 = getelementptr inbounds %LLVMValueRef.580455*, %LLVMValueRef.580455** %.31, i64 %.3
  %2 = bitcast %LLVMValueRef.580455** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<LLVMValueRef>___sl__"(%"Array<LLVMValueRef>.580505"* %.1, %LLVMValueRef.580455* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 0
  %.17 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<LLVMValueRef>.580505"*)*, void (%"Array<LLVMValueRef>.580505"*)** %.18, align 8
  call void %.19(%"Array<LLVMValueRef>.580505"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 1
  %.31 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %.30, align 8
  %.33 = getelementptr inbounds %LLVMValueRef.580455*, %LLVMValueRef.580455** %.31, i64 %.24
  store %LLVMValueRef.580455* %.2, %LLVMValueRef.580455** %.33, align 8
  ret void
}

define void @"Array<LLVMValueRef>___setitem__"(%"Array<LLVMValueRef>.580505"* nocapture readonly %.1, i64 %.2, %LLVMValueRef.580455* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 1
  %.30 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %.29, align 8
  %.32 = getelementptr inbounds %LLVMValueRef.580455*, %LLVMValueRef.580455** %.30, i64 %.2
  store %LLVMValueRef.580455* %.3, %LLVMValueRef.580455** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMValueRef>_append"(%"Array<LLVMValueRef>.580505"* %.1, %LLVMValueRef.580455* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 0
  %.9 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.10, align 8
  call void %.11(%"Array<LLVMValueRef>.580505"* %.1, %LLVMValueRef.580455* %.2)
  ret void
}

define %LLVMValueRef.580455* @"Array<LLVMValueRef>___getitem__"(%"Array<LLVMValueRef>.580505"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 1
  %.28 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %.27, align 8
  %.29 = getelementptr inbounds %LLVMValueRef.580455*, %LLVMValueRef.580455** %.28, i64 %.2
  %.30 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.29, align 8
  ret %LLVMValueRef.580455* %.30

.4.endif:                                         ; preds = %.4
  ret %LLVMValueRef.580455* null
}

define i1 @"Array<LLVMValueRef>___eq__"(%"Array<LLVMValueRef>.580505"* %.1, %"Array<LLVMValueRef>.580505"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.28, i64 0, i32 5
  %.30 = load %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)*, %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)** %.29, align 8
  %.31 = call %LLVMValueRef.580455* %.30(%"Array<LLVMValueRef>.580505"* %.1, i64 %storemerge3)
  %.35 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.35, i64 0, i32 5
  %.37 = load %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)*, %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)** %.36, align 8
  %.38 = call %LLVMValueRef.580455* %.37(%"Array<LLVMValueRef>.580505"* %.2, i64 %storemerge3)
  %0 = ptrtoint %LLVMValueRef.580455* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %LLVMValueRef.580455* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<LLVMValueRef>___in__"(%"Array<LLVMValueRef>.580505"* %.1, %LLVMValueRef.580455* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %LLVMValueRef.580455* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.19, i64 0, i32 5
  %.21 = load %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)*, %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)** %.20, align 8
  %.22 = call %LLVMValueRef.580455* %.21(%"Array<LLVMValueRef>.580505"* %.1, i64 %storemerge4)
  %1 = ptrtoint %LLVMValueRef.580455* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<LLVMValueRef>_find"(%"Array<LLVMValueRef>.580505"* nocapture readonly %.1, %LLVMValueRef.580455* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 1
  %.19 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %.18, align 8
  %0 = ptrtoint %LLVMValueRef.580455* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %LLVMValueRef.580455*, %LLVMValueRef.580455** %.19, i64 %storemerge5
  %1 = bitcast %LLVMValueRef.580455** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<LLVMValueRef>_join"(%"Array<LLVMValueRef>.580505"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.359, i64 0, i64 0), i64 13)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.359, i64 0, i64 0), i64 13)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<LLVMValueRef>___as_string__"(%"Array<LLVMValueRef>.580505"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 0
  %.7 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<LLVMValueRef>.580505"*, %string.580129*)*, %string.580129* (%"Array<LLVMValueRef>.580505"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<LLVMValueRef>.580505"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define void @resize_value_array(%"Array<LLVMValueRef>.580505"* %.1, i64 %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.15.not1 = icmp sgt i64 %.10, %.2
  br i1 %.15.not1, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge2 = phi i64 [ %.10, %for.body.lr.ph ], [ %.27, %for.body ]
  %.19 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.19, i64 0, i32 2
  %.21 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.20, align 8
  call void %.21(%"Array<LLVMValueRef>.580505"* %.1, %LLVMValueRef.580455* null)
  %.27 = add i64 %storemerge2, 1
  %.15.not = icmp sgt i64 %.27, %.2
  br i1 %.15.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  ret void
}

; Function Attrs: nofree nounwind
define noalias %string.580129* @get_format_from_type(%Type.580273* nocapture readonly %.1) local_unnamed_addr #3 {
.3:
  %.6 = call i1 @is_int(%Type.580273* %.1)
  %.9 = getelementptr inbounds %Type.580273, %Type.580273* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  br i1 %.6, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.11 = icmp eq i64 %.10, 6
  br i1 %.11, label %.3.if.if, label %.3.if.endif

.3.endif:                                         ; preds = %.3
  %0 = and i64 %.10, -2
  switch i64 %0, label %.3.endif.endif.endif [
    i64 8, label %.3.endif.if
    i64 10, label %.3.endif.endif.if
  ]

.3.if.if:                                         ; preds = %.3.if
  %.13 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %string.580129*
  %.14.repack = bitcast i8* %.13 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.14.repack, align 8
  %.14.repack19 = getelementptr inbounds i8, i8* %.13, i64 8
  %1 = bitcast i8* %.14.repack19 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.360, i64 0, i64 0), i8** %1, align 8
  %.14.repack20 = getelementptr inbounds i8, i8* %.13, i64 16
  %2 = bitcast i8* %.14.repack20 to i64*
  store i64 3, i64* %2, align 8
  %.14.repack21 = getelementptr inbounds i8, i8* %.13, i64 24
  %3 = bitcast i8* %.14.repack21 to i64*
  store i64 3, i64* %3, align 8
  ret %string.580129* %.14

.3.if.endif:                                      ; preds = %.3.if
  %.20 = icmp eq i64 %.10, 5
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.580129*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.23.repack, align 8
  %.23.repack16 = getelementptr inbounds i8, i8* %.22, i64 8
  %4 = bitcast i8* %.23.repack16 to i8**
  br i1 %.20, label %.3.if.endif.if, label %.3.if.endif.endif

.3.if.endif.if:                                   ; preds = %.3.if.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.361, i64 0, i64 0), i8** %4, align 8
  %.23.repack17 = getelementptr inbounds i8, i8* %.22, i64 16
  %5 = bitcast i8* %.23.repack17 to i64*
  store i64 2, i64* %5, align 8
  %.23.repack18 = getelementptr inbounds i8, i8* %.22, i64 24
  %6 = bitcast i8* %.23.repack18 to i64*
  store i64 2, i64* %6, align 8
  ret %string.580129* %.23

.3.if.endif.endif:                                ; preds = %.3.if.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.362, i64 0, i64 0), i8** %4, align 8
  %.27.repack14 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.27.repack14 to i64*
  store i64 2, i64* %7, align 8
  %.27.repack15 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.27.repack15 to i64*
  store i64 2, i64* %8, align 8
  ret %string.580129* %.23

.3.endif.if:                                      ; preds = %.3.endif
  %.40 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.41 = bitcast i8* %.40 to %string.580129*
  %.41.repack = bitcast i8* %.40 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.41.repack, align 8
  %.41.repack10 = getelementptr inbounds i8, i8* %.40, i64 8
  %9 = bitcast i8* %.41.repack10 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.363, i64 0, i64 0), i8** %9, align 8
  %.41.repack11 = getelementptr inbounds i8, i8* %.40, i64 16
  %10 = bitcast i8* %.41.repack11 to i64*
  store i64 2, i64* %10, align 8
  %.41.repack12 = getelementptr inbounds i8, i8* %.40, i64 24
  %11 = bitcast i8* %.41.repack12 to i64*
  store i64 2, i64* %11, align 8
  ret %string.580129* %.41

.3.endif.endif.if:                                ; preds = %.3.endif
  %.54 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.55 = bitcast i8* %.54 to %string.580129*
  %.55.repack = bitcast i8* %.54 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.55.repack, align 8
  %.55.repack7 = getelementptr inbounds i8, i8* %.54, i64 8
  %12 = bitcast i8* %.55.repack7 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.364, i64 0, i64 0), i8** %12, align 8
  %.55.repack8 = getelementptr inbounds i8, i8* %.54, i64 16
  %13 = bitcast i8* %.55.repack8 to i64*
  store i64 3, i64* %13, align 8
  %.55.repack9 = getelementptr inbounds i8, i8* %.54, i64 24
  %14 = bitcast i8* %.55.repack9 to i64*
  store i64 3, i64* %14, align 8
  ret %string.580129* %.55

.3.endif.endif.endif:                             ; preds = %.3.endif
  %.59 = call i1 @is_pointer(%Type.580273* %.1)
  %.61 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.580129*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.62.repack, align 8
  %.62.repack4 = getelementptr inbounds i8, i8* %.61, i64 8
  %15 = bitcast i8* %.62.repack4 to i8**
  br i1 %.59, label %.3.endif.endif.endif.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.365, i64 0, i64 0), i8** %15, align 8
  %.62.repack5 = getelementptr inbounds i8, i8* %.61, i64 16
  %16 = bitcast i8* %.62.repack5 to i64*
  store i64 2, i64* %16, align 8
  %.62.repack6 = getelementptr inbounds i8, i8* %.61, i64 24
  %17 = bitcast i8* %.62.repack6 to i64*
  store i64 2, i64* %17, align 8
  ret %string.580129* %.62

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.4, i64 0, i64 0), i8** %15, align 8
  %.66.repack2 = getelementptr inbounds i8, i8* %.61, i64 16
  %18 = bitcast i8* %.66.repack2 to i64*
  store i64 2, i64* %18, align 8
  %.66.repack3 = getelementptr inbounds i8, i8* %.61, i64 24
  %19 = bitcast i8* %.66.repack3 to i64*
  store i64 2, i64* %19, align 8
  ret %string.580129* %.62
}

; Function Attrs: nofree nounwind
define void @"Array<LLVMModuleRef>_constructor"(%"Array<LLVMModuleRef>.580509"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMModuleRef.580453*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<LLVMModuleRef>_resize"(%"Array<LLVMModuleRef>.580509"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMModuleRef.580453*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<LLVMModuleRef>_swap"(%"Array<LLVMModuleRef>.580509"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 1
  %.12 = load %LLVMModuleRef.580453**, %LLVMModuleRef.580453*** %.11, align 8
  %.13 = getelementptr inbounds %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.12, i64 %.2
  %0 = bitcast %LLVMModuleRef.580453** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.12, i64 %.3
  %1 = bitcast %LLVMModuleRef.580453** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %LLVMModuleRef.580453**, %LLVMModuleRef.580453*** %.11, align 8
  %.33 = getelementptr inbounds %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.31, i64 %.3
  %2 = bitcast %LLVMModuleRef.580453** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<LLVMModuleRef>___sl__"(%"Array<LLVMModuleRef>.580509"* %.1, %LLVMModuleRef.580453* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 0
  %.17 = load %"Array<LLVMModuleRef>_vtable_ty.580513"*, %"Array<LLVMModuleRef>_vtable_ty.580513"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.580513", %"Array<LLVMModuleRef>_vtable_ty.580513"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<LLVMModuleRef>.580509"*)*, void (%"Array<LLVMModuleRef>.580509"*)** %.18, align 8
  call void %.19(%"Array<LLVMModuleRef>.580509"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 1
  %.31 = load %LLVMModuleRef.580453**, %LLVMModuleRef.580453*** %.30, align 8
  %.33 = getelementptr inbounds %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.31, i64 %.24
  store %LLVMModuleRef.580453* %.2, %LLVMModuleRef.580453** %.33, align 8
  ret void
}

define void @"Array<LLVMModuleRef>___setitem__"(%"Array<LLVMModuleRef>.580509"* nocapture readonly %.1, i64 %.2, %LLVMModuleRef.580453* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 1
  %.30 = load %LLVMModuleRef.580453**, %LLVMModuleRef.580453*** %.29, align 8
  %.32 = getelementptr inbounds %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.30, i64 %.2
  store %LLVMModuleRef.580453* %.3, %LLVMModuleRef.580453** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMModuleRef>_append"(%"Array<LLVMModuleRef>.580509"* %.1, %LLVMModuleRef.580453* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 0
  %.9 = load %"Array<LLVMModuleRef>_vtable_ty.580513"*, %"Array<LLVMModuleRef>_vtable_ty.580513"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.580513", %"Array<LLVMModuleRef>_vtable_ty.580513"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)*, void (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)** %.10, align 8
  call void %.11(%"Array<LLVMModuleRef>.580509"* %.1, %LLVMModuleRef.580453* %.2)
  ret void
}

define %LLVMModuleRef.580453* @"Array<LLVMModuleRef>___getitem__"(%"Array<LLVMModuleRef>.580509"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 1
  %.28 = load %LLVMModuleRef.580453**, %LLVMModuleRef.580453*** %.27, align 8
  %.29 = getelementptr inbounds %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.28, i64 %.2
  %.30 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.29, align 8
  ret %LLVMModuleRef.580453* %.30

.4.endif:                                         ; preds = %.4
  ret %LLVMModuleRef.580453* null
}

define i1 @"Array<LLVMModuleRef>___eq__"(%"Array<LLVMModuleRef>.580509"* %.1, %"Array<LLVMModuleRef>.580509"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<LLVMModuleRef>_vtable_ty.580513"*, %"Array<LLVMModuleRef>_vtable_ty.580513"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.580513", %"Array<LLVMModuleRef>_vtable_ty.580513"* %.28, i64 0, i32 5
  %.30 = load %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)*, %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)** %.29, align 8
  %.31 = call %LLVMModuleRef.580453* %.30(%"Array<LLVMModuleRef>.580509"* %.1, i64 %storemerge3)
  %.35 = load %"Array<LLVMModuleRef>_vtable_ty.580513"*, %"Array<LLVMModuleRef>_vtable_ty.580513"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.580513", %"Array<LLVMModuleRef>_vtable_ty.580513"* %.35, i64 0, i32 5
  %.37 = load %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)*, %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)** %.36, align 8
  %.38 = call %LLVMModuleRef.580453* %.37(%"Array<LLVMModuleRef>.580509"* %.2, i64 %storemerge3)
  %0 = ptrtoint %LLVMModuleRef.580453* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %LLVMModuleRef.580453* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<LLVMModuleRef>___in__"(%"Array<LLVMModuleRef>.580509"* %.1, %LLVMModuleRef.580453* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %LLVMModuleRef.580453* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<LLVMModuleRef>_vtable_ty.580513"*, %"Array<LLVMModuleRef>_vtable_ty.580513"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.580513", %"Array<LLVMModuleRef>_vtable_ty.580513"* %.19, i64 0, i32 5
  %.21 = load %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)*, %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)** %.20, align 8
  %.22 = call %LLVMModuleRef.580453* %.21(%"Array<LLVMModuleRef>.580509"* %.1, i64 %storemerge4)
  %1 = ptrtoint %LLVMModuleRef.580453* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<LLVMModuleRef>_find"(%"Array<LLVMModuleRef>.580509"* nocapture readonly %.1, %LLVMModuleRef.580453* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 1
  %.19 = load %LLVMModuleRef.580453**, %LLVMModuleRef.580453*** %.18, align 8
  %0 = ptrtoint %LLVMModuleRef.580453* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.19, i64 %storemerge5
  %1 = bitcast %LLVMModuleRef.580453** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<LLVMModuleRef>_join"(%"Array<LLVMModuleRef>.580509"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.366, i64 0, i64 0), i64 14)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.366, i64 0, i64 0), i64 14)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<LLVMModuleRef>___as_string__"(%"Array<LLVMModuleRef>.580509"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.1, i64 0, i32 0
  %.7 = load %"Array<LLVMModuleRef>_vtable_ty.580513"*, %"Array<LLVMModuleRef>_vtable_ty.580513"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.580513", %"Array<LLVMModuleRef>_vtable_ty.580513"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<LLVMModuleRef>.580509"*, %string.580129*)*, %string.580129* (%"Array<LLVMModuleRef>.580509"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<LLVMModuleRef>.580509"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, IntrinsicResult>_constructor"(%"Bucket<string, IntrinsicResult>.580515"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, IntrinsicResult>_set"(%"Bucket<string, IntrinsicResult>.580515"* nocapture %.1, %string.580129* %.2, %IntrinsicResult.580485* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.1, i64 0, i32 2
  store %IntrinsicResult.580485* %.3, %IntrinsicResult.580485** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, IntrinsicResult>_constructor"(%"Map<string, IntrinsicResult>.580510"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, IntrinsicResult>.580515"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, IntrinsicResult>.580515"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, IntrinsicResult>_vtable_ty.580516"**
  store %"Bucket<string, IntrinsicResult>_vtable_ty.580516"* @"Bucket<string, IntrinsicResult>_vtable_data", %"Bucket<string, IntrinsicResult>_vtable_ty.580516"** %.26, align 8
  call void @"Bucket<string, IntrinsicResult>_constructor"(%"Bucket<string, IntrinsicResult>.580515"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, IntrinsicResult>.580515"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, IntrinsicResult>_hash_fnc"(%"Map<string, IntrinsicResult>.580510"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, IntrinsicResult>_resize"(%"Map<string, IntrinsicResult>.580510"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, IntrinsicResult>.580515"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, IntrinsicResult>.580515"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, IntrinsicResult>_vtable_ty.580516"**
  store %"Bucket<string, IntrinsicResult>_vtable_ty.580516"* @"Bucket<string, IntrinsicResult>_vtable_data", %"Bucket<string, IntrinsicResult>_vtable_ty.580516"** %.45, align 8
  call void @"Bucket<string, IntrinsicResult>_constructor"(%"Bucket<string, IntrinsicResult>.580515"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, IntrinsicResult>.580515"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, IntrinsicResult>_set"(%"Map<string, IntrinsicResult>.580510"* %.1, %string.580129* %.2, %IntrinsicResult.580485* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, IntrinsicResult>_vtable_ty.580514"*, %"Map<string, IntrinsicResult>_vtable_ty.580514"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, IntrinsicResult>_vtable_ty.580514", %"Map<string, IntrinsicResult>_vtable_ty.580514"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, IntrinsicResult>.580510"*, %string.580129*)*, i64 (%"Map<string, IntrinsicResult>.580510"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, IntrinsicResult>.580510"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, IntrinsicResult>_vtable_ty.580514"*, %"Map<string, IntrinsicResult>_vtable_ty.580514"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, IntrinsicResult>_vtable_ty.580514", %"Map<string, IntrinsicResult>_vtable_ty.580514"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, IntrinsicResult>.580510"*)*, void (%"Map<string, IntrinsicResult>.580510"*)** %.32, align 8
  call void %.33(%"Map<string, IntrinsicResult>.580510"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.39, i64 %.19
  %.41 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, IntrinsicResult>_vtable_ty.580516"*, %"Bucket<string, IntrinsicResult>_vtable_ty.580516"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, IntrinsicResult>_vtable_ty.580516", %"Bucket<string, IntrinsicResult>_vtable_ty.580516"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, IntrinsicResult>.580515"*, %string.580129*, %IntrinsicResult.580485*)*, void (%"Bucket<string, IntrinsicResult>.580515"*, %string.580129*, %IntrinsicResult.580485*)** %.92, align 8
  call void %.93(%"Bucket<string, IntrinsicResult>.580515"* %.89, %string.580129* %.2, %IntrinsicResult.580485* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.70, i64 %.65
  %.72 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %IntrinsicResult.580485* @"Map<string, IntrinsicResult>_get"(%"Map<string, IntrinsicResult>.580510"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, IntrinsicResult>_vtable_ty.580514"*, %"Map<string, IntrinsicResult>_vtable_ty.580514"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, IntrinsicResult>_vtable_ty.580514", %"Map<string, IntrinsicResult>_vtable_ty.580514"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, IntrinsicResult>.580510"*, %string.580129*)*, i64 (%"Map<string, IntrinsicResult>.580510"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, IntrinsicResult>.580510"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.22, i64 %.17
  %.24 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.54, i64 %.48
  %.56 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %IntrinsicResult.580485* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.91, i64 0, i32 2
  %.93 = load %IntrinsicResult.580485*, %IntrinsicResult.580485** %.92, align 8
  ret %IntrinsicResult.580485* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, IntrinsicResult>>_constructor"(%"Array<Bucket<string, IntrinsicResult>>.580517"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, IntrinsicResult>.580515"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, IntrinsicResult>>_resize"(%"Array<Bucket<string, IntrinsicResult>>.580517"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, IntrinsicResult>.580515"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, IntrinsicResult>>_swap"(%"Array<Bucket<string, IntrinsicResult>>.580517"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, IntrinsicResult>.580515"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, IntrinsicResult>.580515"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, IntrinsicResult>.580515"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, IntrinsicResult>>___sl__"(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, %"Bucket<string, IntrinsicResult>.580515"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, IntrinsicResult>>.580517"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.580517"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.31, i64 %.24
  store %"Bucket<string, IntrinsicResult>.580515"* %.2, %"Bucket<string, IntrinsicResult>.580515"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, IntrinsicResult>>___setitem__"(%"Array<Bucket<string, IntrinsicResult>>.580517"* nocapture readonly %.1, i64 %.2, %"Bucket<string, IntrinsicResult>.580515"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.30, i64 %.2
  store %"Bucket<string, IntrinsicResult>.580515"* %.3, %"Bucket<string, IntrinsicResult>.580515"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, IntrinsicResult>>_append"(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, %"Bucket<string, IntrinsicResult>.580515"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, %"Bucket<string, IntrinsicResult>.580515"* %.2)
  ret void
}

define %"Bucket<string, IntrinsicResult>.580515"* @"Array<Bucket<string, IntrinsicResult>>___getitem__"(%"Array<Bucket<string, IntrinsicResult>>.580517"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.28, i64 %.2
  %.30 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.29, align 8
  ret %"Bucket<string, IntrinsicResult>.580515"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, IntrinsicResult>.580515"* null
}

define i1 @"Array<Bucket<string, IntrinsicResult>>___eq__"(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, %"Array<Bucket<string, IntrinsicResult>>.580517"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, IntrinsicResult>.580515"* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64)*, %"Bucket<string, IntrinsicResult>.580515"* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, IntrinsicResult>.580515"* %.30(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, IntrinsicResult>.580515"* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64)*, %"Bucket<string, IntrinsicResult>.580515"* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, IntrinsicResult>.580515"* %.37(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, IntrinsicResult>.580515"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, IntrinsicResult>.580515"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, IntrinsicResult>>___in__"(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, %"Bucket<string, IntrinsicResult>.580515"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, IntrinsicResult>.580515"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, IntrinsicResult>.580515"* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64)*, %"Bucket<string, IntrinsicResult>.580515"* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, IntrinsicResult>.580515"* %.21(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, IntrinsicResult>.580515"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, IntrinsicResult>>_find"(%"Array<Bucket<string, IntrinsicResult>>.580517"* nocapture readonly %.1, %"Bucket<string, IntrinsicResult>.580515"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, IntrinsicResult>.580515"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, IntrinsicResult>.580515"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, IntrinsicResult>>_join"(%"Array<Bucket<string, IntrinsicResult>>.580517"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.367, i64 0, i64 0), i64 32)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.367, i64 0, i64 0), i64 32)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, IntrinsicResult>>___as_string__"(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.580517", %"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, IntrinsicResult>>.580517"* @"Map<string, IntrinsicResult>_get_buckets"(%"Map<string, IntrinsicResult>.580510"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, IntrinsicResult>>.580517"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"**
  store %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"* @"Array<Bucket<string, IntrinsicResult>>_vtable_data", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, IntrinsicResult>.580515"**, %"Bucket<string, IntrinsicResult>.580515"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, IntrinsicResult>.580515"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, IntrinsicResult>.580515"*, align 8
  %4 = bitcast %"Bucket<string, IntrinsicResult>.580515"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, IntrinsicResult>.580515"*
  %.36 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.580515", %"Bucket<string, IntrinsicResult>.580515"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, IntrinsicResult>>.580517"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, IntrinsicResult>.580515"*, %"Bucket<string, IntrinsicResult>.580515"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.580518"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.580517"*, %"Bucket<string, IntrinsicResult>.580515"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, IntrinsicResult>>.580517"* %.9, %"Bucket<string, IntrinsicResult>.580515"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.580520"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGClassType>_set"(%"Bucket<string, CGClassType>.580520"* nocapture %.1, %string.580129* %.2, %CGClassType.580487* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.1, i64 0, i32 2
  store %CGClassType.580487* %.3, %CGClassType.580487** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, CGClassType>_constructor"(%"Map<string, CGClassType>.580511"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.580520"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, CGClassType>.580520"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, CGClassType>_vtable_ty.580521"**
  store %"Bucket<string, CGClassType>_vtable_ty.580521"* @"Bucket<string, CGClassType>_vtable_data", %"Bucket<string, CGClassType>_vtable_ty.580521"** %.26, align 8
  call void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.580520"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, CGClassType>.580520"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, CGClassType>_hash_fnc"(%"Map<string, CGClassType>.580511"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, CGClassType>_resize"(%"Map<string, CGClassType>.580511"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.580520"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, CGClassType>.580520"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, CGClassType>_vtable_ty.580521"**
  store %"Bucket<string, CGClassType>_vtable_ty.580521"* @"Bucket<string, CGClassType>_vtable_data", %"Bucket<string, CGClassType>_vtable_ty.580521"** %.45, align 8
  call void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.580520"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, CGClassType>.580520"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, CGClassType>_set"(%"Map<string, CGClassType>.580511"* %.1, %string.580129* %.2, %CGClassType.580487* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, CGClassType>_vtable_ty.580519"*, %"Map<string, CGClassType>_vtable_ty.580519"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.580519", %"Map<string, CGClassType>_vtable_ty.580519"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, CGClassType>.580511"*, %string.580129*)*, i64 (%"Map<string, CGClassType>.580511"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, CGClassType>.580511"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, CGClassType>_vtable_ty.580519"*, %"Map<string, CGClassType>_vtable_ty.580519"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.580519", %"Map<string, CGClassType>_vtable_ty.580519"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, CGClassType>.580511"*)*, void (%"Map<string, CGClassType>.580511"*)** %.32, align 8
  call void %.33(%"Map<string, CGClassType>.580511"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.39, i64 %.19
  %.41 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, CGClassType>_vtable_ty.580521"*, %"Bucket<string, CGClassType>_vtable_ty.580521"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, CGClassType>_vtable_ty.580521", %"Bucket<string, CGClassType>_vtable_ty.580521"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, CGClassType>.580520"*, %string.580129*, %CGClassType.580487*)*, void (%"Bucket<string, CGClassType>.580520"*, %string.580129*, %CGClassType.580487*)** %.92, align 8
  call void %.93(%"Bucket<string, CGClassType>.580520"* %.89, %string.580129* %.2, %CGClassType.580487* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.70, i64 %.65
  %.72 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %CGClassType.580487* @"Map<string, CGClassType>_get"(%"Map<string, CGClassType>.580511"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, CGClassType>_vtable_ty.580519"*, %"Map<string, CGClassType>_vtable_ty.580519"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.580519", %"Map<string, CGClassType>_vtable_ty.580519"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, CGClassType>.580511"*, %string.580129*)*, i64 (%"Map<string, CGClassType>.580511"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, CGClassType>.580511"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.22, i64 %.17
  %.24 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.54, i64 %.48
  %.56 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %CGClassType.580487* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.91, i64 0, i32 2
  %.93 = load %CGClassType.580487*, %CGClassType.580487** %.92, align 8
  ret %CGClassType.580487* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, CGClassType>>_constructor"(%"Array<Bucket<string, CGClassType>>.580522"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.580520"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, CGClassType>>_resize"(%"Array<Bucket<string, CGClassType>>.580522"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.580520"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, CGClassType>>_swap"(%"Array<Bucket<string, CGClassType>>.580522"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, CGClassType>.580520"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, CGClassType>.580520"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, CGClassType>.580520"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, CGClassType>>___sl__"(%"Array<Bucket<string, CGClassType>>.580522"* %.1, %"Bucket<string, CGClassType>.580520"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.580523", %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, CGClassType>>.580522"*)*, void (%"Array<Bucket<string, CGClassType>>.580522"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, CGClassType>>.580522"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.31, i64 %.24
  store %"Bucket<string, CGClassType>.580520"* %.2, %"Bucket<string, CGClassType>.580520"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, CGClassType>>___setitem__"(%"Array<Bucket<string, CGClassType>>.580522"* nocapture readonly %.1, i64 %.2, %"Bucket<string, CGClassType>.580520"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.30, i64 %.2
  store %"Bucket<string, CGClassType>.580520"* %.3, %"Bucket<string, CGClassType>.580520"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, CGClassType>>_append"(%"Array<Bucket<string, CGClassType>>.580522"* %.1, %"Bucket<string, CGClassType>.580520"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.580523", %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)*, void (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, CGClassType>>.580522"* %.1, %"Bucket<string, CGClassType>.580520"* %.2)
  ret void
}

define %"Bucket<string, CGClassType>.580520"* @"Array<Bucket<string, CGClassType>>___getitem__"(%"Array<Bucket<string, CGClassType>>.580522"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.28, i64 %.2
  %.30 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.29, align 8
  ret %"Bucket<string, CGClassType>.580520"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, CGClassType>.580520"* null
}

define i1 @"Array<Bucket<string, CGClassType>>___eq__"(%"Array<Bucket<string, CGClassType>>.580522"* %.1, %"Array<Bucket<string, CGClassType>>.580522"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.580523", %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, CGClassType>.580520"* (%"Array<Bucket<string, CGClassType>>.580522"*, i64)*, %"Bucket<string, CGClassType>.580520"* (%"Array<Bucket<string, CGClassType>>.580522"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, CGClassType>.580520"* %.30(%"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.580523", %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, CGClassType>.580520"* (%"Array<Bucket<string, CGClassType>>.580522"*, i64)*, %"Bucket<string, CGClassType>.580520"* (%"Array<Bucket<string, CGClassType>>.580522"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, CGClassType>.580520"* %.37(%"Array<Bucket<string, CGClassType>>.580522"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, CGClassType>.580520"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, CGClassType>.580520"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, CGClassType>>___in__"(%"Array<Bucket<string, CGClassType>>.580522"* %.1, %"Bucket<string, CGClassType>.580520"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, CGClassType>.580520"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.580523", %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, CGClassType>.580520"* (%"Array<Bucket<string, CGClassType>>.580522"*, i64)*, %"Bucket<string, CGClassType>.580520"* (%"Array<Bucket<string, CGClassType>>.580522"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, CGClassType>.580520"* %.21(%"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, CGClassType>.580520"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, CGClassType>>_find"(%"Array<Bucket<string, CGClassType>>.580522"* nocapture readonly %.1, %"Bucket<string, CGClassType>.580520"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, CGClassType>.580520"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, CGClassType>.580520"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, CGClassType>>_join"(%"Array<Bucket<string, CGClassType>>.580522"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.368, i64 0, i64 0), i64 28)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.368, i64 0, i64 0), i64 28)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, CGClassType>>___as_string__"(%"Array<Bucket<string, CGClassType>>.580522"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.580522", %"Array<Bucket<string, CGClassType>>.580522"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.580523", %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, CGClassType>>.580522"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, CGClassType>>.580522"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, CGClassType>>.580522"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, CGClassType>>.580522"* @"Map<string, CGClassType>_get_buckets"(%"Map<string, CGClassType>.580511"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, CGClassType>>.580522"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"**
  store %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"* @"Array<Bucket<string, CGClassType>>_vtable_data", %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, CGClassType>.580520"**, %"Bucket<string, CGClassType>.580520"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, CGClassType>.580520"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, CGClassType>.580520"*, align 8
  %4 = bitcast %"Bucket<string, CGClassType>.580520"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, CGClassType>.580520"*
  %.36 = getelementptr inbounds %"Bucket<string, CGClassType>.580520", %"Bucket<string, CGClassType>.580520"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, CGClassType>>.580522"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, CGClassType>.580520"*, %"Bucket<string, CGClassType>.580520"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.580523", %"Array<Bucket<string, CGClassType>>_vtable_ty.580523"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)*, void (%"Array<Bucket<string, CGClassType>>.580522"*, %"Bucket<string, CGClassType>.580520"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, CGClassType>>.580522"* %.9, %"Bucket<string, CGClassType>.580520"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.580525"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGEnumType>_set"(%"Bucket<string, CGEnumType>.580525"* nocapture %.1, %string.580129* %.2, %CGEnumType.580501* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.1, i64 0, i32 1
  store %string.580129* %.2, %string.580129** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.1, i64 0, i32 2
  store %CGEnumType.580501* %.3, %CGEnumType.580501** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, CGEnumType>_constructor"(%"Map<string, CGEnumType>.580512"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.580525"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, CGEnumType>.580525"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, CGEnumType>_vtable_ty.580526"**
  store %"Bucket<string, CGEnumType>_vtable_ty.580526"* @"Bucket<string, CGEnumType>_vtable_data", %"Bucket<string, CGEnumType>_vtable_ty.580526"** %.26, align 8
  call void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.580525"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, CGEnumType>.580525"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, CGEnumType>_hash_fnc"(%"Map<string, CGEnumType>.580512"* nocapture readnone %.1, %string.580129* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, CGEnumType>_resize"(%"Map<string, CGEnumType>.580512"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.580525"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, CGEnumType>.580525"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, CGEnumType>_vtable_ty.580526"**
  store %"Bucket<string, CGEnumType>_vtable_ty.580526"* @"Bucket<string, CGEnumType>_vtable_data", %"Bucket<string, CGEnumType>_vtable_ty.580526"** %.45, align 8
  call void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.580525"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, CGEnumType>.580525"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, CGEnumType>_set"(%"Map<string, CGEnumType>.580512"* %.1, %string.580129* %.2, %CGEnumType.580501* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, CGEnumType>_vtable_ty.580524"*, %"Map<string, CGEnumType>_vtable_ty.580524"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.580524", %"Map<string, CGEnumType>_vtable_ty.580524"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, CGEnumType>.580512"*, %string.580129*)*, i64 (%"Map<string, CGEnumType>.580512"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, CGEnumType>.580512"* %.1, %string.580129* %.2)
  %.17 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, CGEnumType>_vtable_ty.580524"*, %"Map<string, CGEnumType>_vtable_ty.580524"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.580524", %"Map<string, CGEnumType>_vtable_ty.580524"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, CGEnumType>.580512"*)*, void (%"Map<string, CGEnumType>.580512"*)** %.32, align 8
  call void %.33(%"Map<string, CGEnumType>.580512"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.39, i64 %.19
  %.41 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.51, i64 0, i32 1
  %.53 = load %string.580129*, %string.580129** %.52, align 8
  %.55 = getelementptr inbounds %string.580129, %string.580129* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.56, i64 0, i32 3
  %.58 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.57, align 8
  %.59 = call i1 %.58(%string.580129* %.53, %string.580129* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, CGEnumType>_vtable_ty.580526"*, %"Bucket<string, CGEnumType>_vtable_ty.580526"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, CGEnumType>_vtable_ty.580526", %"Bucket<string, CGEnumType>_vtable_ty.580526"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, CGEnumType>.580525"*, %string.580129*, %CGEnumType.580501*)*, void (%"Bucket<string, CGEnumType>.580525"*, %string.580129*, %CGEnumType.580501*)** %.92, align 8
  call void %.93(%"Bucket<string, CGEnumType>.580525"* %.89, %string.580129* %.2, %CGEnumType.580501* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.70, i64 %.65
  %.72 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %CGEnumType.580501* @"Map<string, CGEnumType>_get"(%"Map<string, CGEnumType>.580512"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, CGEnumType>_vtable_ty.580524"*, %"Map<string, CGEnumType>_vtable_ty.580524"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.580524", %"Map<string, CGEnumType>_vtable_ty.580524"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, CGEnumType>.580512"*, %string.580129*)*, i64 (%"Map<string, CGEnumType>.580512"*, %string.580129*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, CGEnumType>.580512"* %.1, %string.580129* %.2)
  %.15 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.22, i64 %.17
  %.24 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.34, i64 0, i32 1
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 3
  %.41 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.40, align 8
  %.42 = call i1 %.41(%string.580129* %.36, %string.580129* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.54, i64 %.48
  %.56 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.66, i64 0, i32 1
  %.78 = load %string.580129*, %string.580129** %.77, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 3
  %.83 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.82, align 8
  %.84 = call i1 %.83(%string.580129* %.78, %string.580129* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %CGEnumType.580501* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.91, i64 0, i32 2
  %.93 = load %CGEnumType.580501*, %CGEnumType.580501** %.92, align 8
  ret %CGEnumType.580501* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, CGEnumType>>_constructor"(%"Array<Bucket<string, CGEnumType>>.580527"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.580525"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, CGEnumType>>_resize"(%"Array<Bucket<string, CGEnumType>>.580527"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.580525"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Array<Bucket<string, CGEnumType>>_swap"(%"Array<Bucket<string, CGEnumType>>.580527"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 1
  %.12 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.11, align 8
  %.13 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.12, i64 %.2
  %0 = bitcast %"Bucket<string, CGEnumType>.580525"** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.12, i64 %.3
  %1 = bitcast %"Bucket<string, CGEnumType>.580525"** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.11, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.31, i64 %.3
  %2 = bitcast %"Bucket<string, CGEnumType>.580525"** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>___sl__"(%"Array<Bucket<string, CGEnumType>>.580527"* %.1, %"Bucket<string, CGEnumType>.580525"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528", %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, CGEnumType>>.580527"*)*, void (%"Array<Bucket<string, CGEnumType>>.580527"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, CGEnumType>>.580527"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.31, i64 %.24
  store %"Bucket<string, CGEnumType>.580525"* %.2, %"Bucket<string, CGEnumType>.580525"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>___setitem__"(%"Array<Bucket<string, CGEnumType>>.580527"* nocapture readonly %.1, i64 %.2, %"Bucket<string, CGEnumType>.580525"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.30, i64 %.2
  store %"Bucket<string, CGEnumType>.580525"* %.3, %"Bucket<string, CGEnumType>.580525"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>_append"(%"Array<Bucket<string, CGEnumType>>.580527"* %.1, %"Bucket<string, CGEnumType>.580525"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528", %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)*, void (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, CGEnumType>>.580527"* %.1, %"Bucket<string, CGEnumType>.580525"* %.2)
  ret void
}

define %"Bucket<string, CGEnumType>.580525"* @"Array<Bucket<string, CGEnumType>>___getitem__"(%"Array<Bucket<string, CGEnumType>>.580527"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.28, i64 %.2
  %.30 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.29, align 8
  ret %"Bucket<string, CGEnumType>.580525"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, CGEnumType>.580525"* null
}

define i1 @"Array<Bucket<string, CGEnumType>>___eq__"(%"Array<Bucket<string, CGEnumType>>.580527"* %.1, %"Array<Bucket<string, CGEnumType>>.580527"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528", %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, CGEnumType>.580525"* (%"Array<Bucket<string, CGEnumType>>.580527"*, i64)*, %"Bucket<string, CGEnumType>.580525"* (%"Array<Bucket<string, CGEnumType>>.580527"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, CGEnumType>.580525"* %.30(%"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528", %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, CGEnumType>.580525"* (%"Array<Bucket<string, CGEnumType>>.580527"*, i64)*, %"Bucket<string, CGEnumType>.580525"* (%"Array<Bucket<string, CGEnumType>>.580527"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, CGEnumType>.580525"* %.37(%"Array<Bucket<string, CGEnumType>>.580527"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, CGEnumType>.580525"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, CGEnumType>.580525"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, CGEnumType>>___in__"(%"Array<Bucket<string, CGEnumType>>.580527"* %.1, %"Bucket<string, CGEnumType>.580525"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, CGEnumType>.580525"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528", %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, CGEnumType>.580525"* (%"Array<Bucket<string, CGEnumType>>.580527"*, i64)*, %"Bucket<string, CGEnumType>.580525"* (%"Array<Bucket<string, CGEnumType>>.580527"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, CGEnumType>.580525"* %.21(%"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, CGEnumType>.580525"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, CGEnumType>>_find"(%"Array<Bucket<string, CGEnumType>>.580527"* nocapture readonly %.1, %"Bucket<string, CGEnumType>.580525"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, CGEnumType>.580525"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, CGEnumType>.580525"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Array<Bucket<string, CGEnumType>>_join"(%"Array<Bucket<string, CGEnumType>>.580527"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.281 = icmp sgt i64 %.21, 0
  %.382 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.393 = bitcast i8* %.382 to %string.580129*
  %.404 = bitcast i8* %.382 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.404, align 8
  call void @string_constructor(%string.580129* %.393, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.369, i64 0, i64 0), i64 27)
  br i1 %.281, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.48 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.408 = phi %string_vtable_ty.580130** [ %.404, %for.body.lr.ph ], [ %.40, %for.body ]
  %.397 = phi %string.580129* [ %.393, %for.body.lr.ph ], [ %.39, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.72, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.78, %for.body ]
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.408, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.397)
  %.49 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.49, i64 0, i32 10
  %.51 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.50, align 8
  %.52 = call i8* %.51(%string.580129* %.2)
  %.54 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.56 = call i8* @malloc(i64 %.54)
  %.57 = call i64 (i8*, i8*, ...) @sprintf(i8* %.56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.47, i8* %.52)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.60 = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %1 = bitcast i8* %.62 to i8**
  store i8* %.56, i8** %1, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %2 = bitcast i8* %.64 to i64*
  store i64 %.54, i64* %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.58, i64 24
  %3 = bitcast i8* %.66 to i64*
  store i64 %.54, i64* %3, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 0
  %.71 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.70, align 8
  %.72 = call %string.580129* %.71(%string.580129* %res.06, %string.580129* %.59)
  %.78 = add nuw nsw i64 %storemerge5, 1
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %string.580129*
  %.40 = bitcast i8* %.38 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.40, align 8
  call void @string_constructor(%string.580129* %.39, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.369, i64 0, i64 0), i64 27)
  %exitcond.not = icmp eq i64 %.78, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.39.le = bitcast i8* %.38 to %string.580129*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.580129* [ %.72, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.39.lcssa = phi %string.580129* [ %.39.le, %for.cond.for.end_crit_edge ], [ %.393, %.4 ]
  %.93 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.94 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.93, align 8
  %.95 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.94, i64 0, i32 0
  %.96 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.95, align 8
  %.97 = call %string.580129* %.96(%string.580129* %res.0.lcssa, %string.580129* %.39.lcssa)
  ret %string.580129* %.97
}

define noalias %string.580129* @"Array<Bucket<string, CGEnumType>>___as_string__"(%"Array<Bucket<string, CGEnumType>>.580527"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.580527", %"Array<Bucket<string, CGEnumType>>.580527"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528", %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Array<Bucket<string, CGEnumType>>.580527"*, %string.580129*)*, %string.580129* (%"Array<Bucket<string, CGEnumType>>.580527"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Array<Bucket<string, CGEnumType>>.580527"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Array<Bucket<string, CGEnumType>>.580527"* @"Map<string, CGEnumType>_get_buckets"(%"Map<string, CGEnumType>.580512"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, CGEnumType>>.580527"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"**
  store %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"* @"Array<Bucket<string, CGEnumType>>_vtable_data", %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, CGEnumType>.580525"**, %"Bucket<string, CGEnumType>.580525"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, CGEnumType>.580525"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, CGEnumType>.580525"*, align 8
  %4 = bitcast %"Bucket<string, CGEnumType>.580525"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, CGEnumType>.580525"*
  %.36 = getelementptr inbounds %"Bucket<string, CGEnumType>.580525", %"Bucket<string, CGEnumType>.580525"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, CGEnumType>>.580527"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, CGEnumType>.580525"*, %"Bucket<string, CGEnumType>.580525"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528", %"Array<Bucket<string, CGEnumType>>_vtable_ty.580528"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)*, void (%"Array<Bucket<string, CGEnumType>>.580527"*, %"Bucket<string, CGEnumType>.580525"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, CGEnumType>>.580527"* %.9, %"Bucket<string, CGEnumType>.580525"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

define %GeneratedModule.580483* @CodeGen_codegenProgram(%CodeGen.580507* %.1, %Program.580445* %.2) {
.4:
  %.9 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 11
  store %Program.580445* %.2, %Program.580445** %.9, align 8
  %.13 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<LLVMModuleRef>_vtable_ty.580513"**
  store %"Array<LLVMModuleRef>_vtable_ty.580513"* @"Array<LLVMModuleRef>_vtable_data", %"Array<LLVMModuleRef>_vtable_ty.580513"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 1
  %3 = bitcast %"Array<LLVMModuleRef>.580509"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  %.31 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 9
  %4 = bitcast %LLVMBasicBlockRef.580456** %.31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %4, i8 0, i64 16, i1 false)
  %.34 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.35 = bitcast i8* %.34 to %"Map<string, LLVMValueRef>.580490"*
  %.36 = bitcast i8* %.34 to %"Map<string, LLVMValueRef>_vtable_ty.580496"**
  store %"Map<string, LLVMValueRef>_vtable_ty.580496"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.36, align 8
  call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.580490"* %.35)
  %.42 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 3
  %5 = bitcast %"Map<string, LLVMValueRef>.580490"** %.42 to i8**
  store i8* %.34, i8** %5, align 8
  %.49 = getelementptr inbounds %Program.580445, %Program.580445* %.2, i64 0, i32 1
  %.502 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.49, align 8
  %.513 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.502, i64 0, i32 2
  %.524 = load i64, i64* %.513, align 8
  %.535 = icmp sgt i64 %.524, 0
  br i1 %.535, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.59 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.507 = phi %"Array<Module>.580447"* [ %.502, %for.body.lr.ph ], [ %.50, %for.body ]
  %storemerge6 = phi i64 [ 0, %for.body.lr.ph ], [ %.82, %for.body ]
  %.57 = load %"Array<LLVMModuleRef>.580509"*, %"Array<LLVMModuleRef>.580509"** %.25, align 8
  %.60 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.59, align 8
  %.61 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.60, i64 0, i32 12
  %.62 = load %LLVMModuleRef.580453* (%CodeGen.580507*, %Module.580421*)*, %LLVMModuleRef.580453* (%CodeGen.580507*, %Module.580421*)** %.61, align 8
  %.67 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.507, i64 0, i32 0
  %.68 = load %"Array<Module>_vtable_ty.580448"*, %"Array<Module>_vtable_ty.580448"** %.67, align 8
  %.69 = getelementptr inbounds %"Array<Module>_vtable_ty.580448", %"Array<Module>_vtable_ty.580448"* %.68, i64 0, i32 5
  %.70 = load %Module.580421* (%"Array<Module>.580447"*, i64)*, %Module.580421* (%"Array<Module>.580447"*, i64)** %.69, align 8
  %.71 = call %Module.580421* %.70(%"Array<Module>.580447"* %.507, i64 %storemerge6)
  %.72 = call %LLVMModuleRef.580453* %.62(%CodeGen.580507* %.1, %Module.580421* %.71)
  %.73 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.57, i64 0, i32 0
  %.74 = load %"Array<LLVMModuleRef>_vtable_ty.580513"*, %"Array<LLVMModuleRef>_vtable_ty.580513"** %.73, align 8
  %.75 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.580513", %"Array<LLVMModuleRef>_vtable_ty.580513"* %.74, i64 0, i32 2
  %.76 = load void (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)*, void (%"Array<LLVMModuleRef>.580509"*, %LLVMModuleRef.580453*)** %.75, align 8
  call void %.76(%"Array<LLVMModuleRef>.580509"* %.57, %LLVMModuleRef.580453* %.72)
  %.82 = add nuw nsw i64 %storemerge6, 1
  %.50 = load %"Array<Module>.580447"*, %"Array<Module>.580447"** %.49, align 8
  %.51 = getelementptr inbounds %"Array<Module>.580447", %"Array<Module>.580447"* %.50, i64 0, i32 2
  %.52 = load i64, i64* %.51, align 8
  %.53 = icmp slt i64 %.82, %.52
  br i1 %.53, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.4
  %.86 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.87 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.86, align 8
  %.88 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.87, i64 0, i32 1
  %.89 = load void (%CodeGen.580507*)*, void (%CodeGen.580507*)** %.88, align 8
  call void %.89(%CodeGen.580507* %.1)
  %.93 = load %"Array<LLVMModuleRef>.580509"*, %"Array<LLVMModuleRef>.580509"** %.25, align 8
  %.94 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.93, i64 0, i32 0
  %.95 = load %"Array<LLVMModuleRef>_vtable_ty.580513"*, %"Array<LLVMModuleRef>_vtable_ty.580513"** %.94, align 8
  %.96 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.580513", %"Array<LLVMModuleRef>_vtable_ty.580513"* %.95, i64 0, i32 5
  %.97 = load %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)*, %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)** %.96, align 8
  %.98 = call %LLVMModuleRef.580453* %.97(%"Array<LLVMModuleRef>.580509"* %.93, i64 0)
  %.99 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.100 = bitcast i8* %.99 to %GeneratedModule.580483*
  %.101 = bitcast i8* %.99 to %GeneratedModule_vtable_ty.580484**
  store %GeneratedModule_vtable_ty.580484* @GeneratedModule_vtable_data, %GeneratedModule_vtable_ty.580484** %.101, align 8
  call void @GeneratedModule_constructor(%GeneratedModule.580483* %.100, %LLVMModuleRef.580453* %.98)
  ret %GeneratedModule.580483* %.100
}

define void @CodeGen_link_modules(%CodeGen.580507* nocapture readonly %.1) {
.3:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 1
  %.112 = load %"Array<LLVMModuleRef>.580509"*, %"Array<LLVMModuleRef>.580509"** %.10, align 8
  %.123 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.112, i64 0, i32 2
  %.134 = load i64, i64* %.123, align 8
  %.145 = icmp sgt i64 %.134, 1
  br i1 %.145, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %.117 = phi %"Array<LLVMModuleRef>.580509"* [ %.11, %for.body ], [ %.112, %.3 ]
  %storemerge6 = phi i64 [ %.38, %for.body ], [ 1, %.3 ]
  %.19 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.117, i64 0, i32 0
  %.20 = load %"Array<LLVMModuleRef>_vtable_ty.580513"*, %"Array<LLVMModuleRef>_vtable_ty.580513"** %.19, align 8
  %.21 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.580513", %"Array<LLVMModuleRef>_vtable_ty.580513"* %.20, i64 0, i32 5
  %.22 = load %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)*, %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)** %.21, align 8
  %.23 = call %LLVMModuleRef.580453* %.22(%"Array<LLVMModuleRef>.580509"* %.117, i64 0)
  %.27 = load %"Array<LLVMModuleRef>.580509"*, %"Array<LLVMModuleRef>.580509"** %.10, align 8
  %.28 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.27, i64 0, i32 0
  %.29 = load %"Array<LLVMModuleRef>_vtable_ty.580513"*, %"Array<LLVMModuleRef>_vtable_ty.580513"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.580513", %"Array<LLVMModuleRef>_vtable_ty.580513"* %.29, i64 0, i32 5
  %.31 = load %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)*, %LLVMModuleRef.580453* (%"Array<LLVMModuleRef>.580509"*, i64)** %.30, align 8
  %.32 = call %LLVMModuleRef.580453* %.31(%"Array<LLVMModuleRef>.580509"* %.27, i64 %storemerge6)
  %.33 = call i1 @LLVMLinkModules2(%LLVMModuleRef.580453* %.23, %LLVMModuleRef.580453* %.32)
  %.38 = add nuw nsw i64 %storemerge6, 1
  %.11 = load %"Array<LLVMModuleRef>.580509"*, %"Array<LLVMModuleRef>.580509"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<LLVMModuleRef>.580509", %"Array<LLVMModuleRef>.580509"* %.11, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.38, %.13
  br i1 %.14, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define %LLVMValueRef.580455* @CodeGen_get_var_from_varid(%CodeGen.580507* nocapture readonly %.1, %VarId.580331* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 3
  %.9 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.11, i64 0, i32 3
  %.13 = load %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)** %.12, align 8
  %.15 = call %string.580129* @create_var_key(%VarId.580331* %.2)
  %.16 = call %LLVMValueRef.580455* %.13(%"Map<string, LLVMValueRef>.580490"* %.9, %string.580129* %.15)
  ret %LLVMValueRef.580455* %.16
}

define %CGClassType.580487* @CodeGen_get_class_from_typeid(%CodeGen.580507* nocapture readonly %.1, %TypeId.580287* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 6
  %.9 = load %"Map<string, CGClassType>.580511"*, %"Map<string, CGClassType>.580511"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, CGClassType>_vtable_ty.580519"*, %"Map<string, CGClassType>_vtable_ty.580519"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.580519", %"Map<string, CGClassType>_vtable_ty.580519"* %.11, i64 0, i32 3
  %.13 = load %CGClassType.580487* (%"Map<string, CGClassType>.580511"*, %string.580129*)*, %CGClassType.580487* (%"Map<string, CGClassType>.580511"*, %string.580129*)** %.12, align 8
  %.15 = call %string.580129* @create_type_id_key(%TypeId.580287* %.2)
  %.16 = call %CGClassType.580487* %.13(%"Map<string, CGClassType>.580511"* %.9, %string.580129* %.15)
  ret %CGClassType.580487* %.16
}

define %CGEnumType.580501* @CodeGen_get_enum_from_typeid(%CodeGen.580507* nocapture readonly %.1, %TypeId.580287* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 7
  %.9 = load %"Map<string, CGEnumType>.580512"*, %"Map<string, CGEnumType>.580512"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, CGEnumType>_vtable_ty.580524"*, %"Map<string, CGEnumType>_vtable_ty.580524"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.580524", %"Map<string, CGEnumType>_vtable_ty.580524"* %.11, i64 0, i32 3
  %.13 = load %CGEnumType.580501* (%"Map<string, CGEnumType>.580512"*, %string.580129*)*, %CGEnumType.580501* (%"Map<string, CGEnumType>.580512"*, %string.580129*)** %.12, align 8
  %.15 = call %string.580129* @create_type_id_key(%TypeId.580287* %.2)
  %.16 = call %CGEnumType.580501* %.13(%"Map<string, CGEnumType>.580512"* %.9, %string.580129* %.15)
  ret %CGEnumType.580501* %.16
}

define %CGClassType.580487* @CodeGen_get_class_from_varid(%CodeGen.580507* nocapture readonly %.1, %VarId.580331* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 6
  %.9 = load %"Map<string, CGClassType>.580511"*, %"Map<string, CGClassType>.580511"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, CGClassType>_vtable_ty.580519"*, %"Map<string, CGClassType>_vtable_ty.580519"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.580519", %"Map<string, CGClassType>_vtable_ty.580519"* %.11, i64 0, i32 3
  %.13 = load %CGClassType.580487* (%"Map<string, CGClassType>.580511"*, %string.580129*)*, %CGClassType.580487* (%"Map<string, CGClassType>.580511"*, %string.580129*)** %.12, align 8
  %.15 = call %string.580129* @create_type_key_from_var(%VarId.580331* %.2)
  %.16 = call %CGClassType.580487* %.13(%"Map<string, CGClassType>.580511"* %.9, %string.580129* %.15)
  ret %CGClassType.580487* %.16
}

define %CGEnumType.580501* @CodeGen_get_enum_from_varid(%CodeGen.580507* nocapture readonly %.1, %VarId.580331* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 7
  %.9 = load %"Map<string, CGEnumType>.580512"*, %"Map<string, CGEnumType>.580512"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, CGEnumType>_vtable_ty.580524"*, %"Map<string, CGEnumType>_vtable_ty.580524"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.580524", %"Map<string, CGEnumType>_vtable_ty.580524"* %.11, i64 0, i32 3
  %.13 = load %CGEnumType.580501* (%"Map<string, CGEnumType>.580512"*, %string.580129*)*, %CGEnumType.580501* (%"Map<string, CGEnumType>.580512"*, %string.580129*)** %.12, align 8
  %.15 = call %string.580129* @create_type_key_from_var(%VarId.580331* %.2)
  %.16 = call %CGEnumType.580501* %.13(%"Map<string, CGEnumType>.580512"* %.9, %string.580129* %.15)
  ret %CGEnumType.580501* %.16
}

define void @CodeGen_add_class(%CodeGen.580507* nocapture readonly %.1, %TypeId.580287* nocapture readonly %.2, %CGClassType.580487* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 6
  %.11 = load %"Map<string, CGClassType>.580511"*, %"Map<string, CGClassType>.580511"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGClassType>.580511", %"Map<string, CGClassType>.580511"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, CGClassType>_vtable_ty.580519"*, %"Map<string, CGClassType>_vtable_ty.580519"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.580519", %"Map<string, CGClassType>_vtable_ty.580519"* %.13, i64 0, i32 2
  %.15 = load void (%"Map<string, CGClassType>.580511"*, %string.580129*, %CGClassType.580487*)*, void (%"Map<string, CGClassType>.580511"*, %string.580129*, %CGClassType.580487*)** %.14, align 8
  %.17 = call %string.580129* @create_type_id_key(%TypeId.580287* %.2)
  call void %.15(%"Map<string, CGClassType>.580511"* %.11, %string.580129* %.17, %CGClassType.580487* %.3)
  ret void
}

define void @CodeGen_add_enum(%CodeGen.580507* nocapture readonly %.1, %TypeId.580287* nocapture readonly %.2, %CGEnumType.580501* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 7
  %.11 = load %"Map<string, CGEnumType>.580512"*, %"Map<string, CGEnumType>.580512"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGEnumType>.580512", %"Map<string, CGEnumType>.580512"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, CGEnumType>_vtable_ty.580524"*, %"Map<string, CGEnumType>_vtable_ty.580524"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.580524", %"Map<string, CGEnumType>_vtable_ty.580524"* %.13, i64 0, i32 2
  %.15 = load void (%"Map<string, CGEnumType>.580512"*, %string.580129*, %CGEnumType.580501*)*, void (%"Map<string, CGEnumType>.580512"*, %string.580129*, %CGEnumType.580501*)** %.14, align 8
  %.17 = call %string.580129* @create_type_id_key(%TypeId.580287* %.2)
  call void %.15(%"Map<string, CGEnumType>.580512"* %.11, %string.580129* %.17, %CGEnumType.580501* %.3)
  ret void
}

define void @CodeGen_add_var(%CodeGen.580507* nocapture readonly %.1, %VarId.580331* nocapture readonly %.2, %LLVMValueRef.580455* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 3
  %.11 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.13, i64 0, i32 2
  %.15 = load void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)*, void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)** %.14, align 8
  %.17 = call %string.580129* @create_var_key(%VarId.580331* %.2)
  call void %.15(%"Map<string, LLVMValueRef>.580490"* %.11, %string.580129* %.17, %LLVMValueRef.580455* %.3)
  ret void
}

define %LLVMValueRef.580455* @CodeGen_neg_int(%LLVMBuilderRef.580460* %.1, %LLVMValueRef.580455* %.2) local_unnamed_addr {
.4:
  %.8 = call i1 @LLVMIsConstant(%LLVMValueRef.580455* %.2)
  br i1 %.8, label %true_block, label %false_block

true_block:                                       ; preds = %.4
  %.11 = call %LLVMValueRef.580455* @LLVMConstNeg(%LLVMValueRef.580455* %.2)
  br label %end

false_block:                                      ; preds = %.4
  %.15 = call %LLVMValueRef.580455* @LLVMBuildNeg(%LLVMBuilderRef.580460* %.1, %LLVMValueRef.580455* %.2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.17 = phi %LLVMValueRef.580455* [ %.11, %true_block ], [ %.15, %false_block ]
  ret %LLVMValueRef.580455* %.17
}

define %LLVMValueRef.580455* @CodeGen_createLLVMBool(%CodeGen.580507* nocapture readonly %.1, i1 %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.9 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.8, align 8
  %.10 = call %LLVMTypeRef.580454* @LLVMInt1TypeInContext(%LLVMContextRef.580452* %.9)
  %.12 = zext i1 %.2 to i64
  %.13 = call %LLVMValueRef.580455* @LLVMConstInt(%LLVMTypeRef.580454* %.10, i64 %.12, i1 false)
  ret %LLVMValueRef.580455* %.13
}

define %LLVMValueRef.580455* @CodeGen_creatLLVMInt(%CodeGen.580507* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.9 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.8, align 8
  %.10 = call %LLVMTypeRef.580454* @LLVMIntTypeInContext(%LLVMContextRef.580452* %.9, i64 64)
  %.12 = call %LLVMValueRef.580455* @LLVMConstInt(%LLVMTypeRef.580454* %.10, i64 %.2, i1 false)
  ret %LLVMValueRef.580455* %.12
}

define %LLVMModuleRef.580453* @CodeGen_codegen_module(%CodeGen.580507* %.1, %Module.580421* nocapture readonly %.2) {
.4:
  %.8 = call %LLVMContextRef.580452* @LLVMContextCreate()
  %.9 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  store %LLVMContextRef.580452* %.8, %LLVMContextRef.580452** %.9, align 8
  %.12 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %"Map<string, LLVMValueRef>.580490"*
  %.14 = bitcast i8* %.12 to %"Map<string, LLVMValueRef>_vtable_ty.580496"**
  store %"Map<string, LLVMValueRef>_vtable_ty.580496"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.14, align 8
  call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.580490"* %.13)
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %"Map<string, IntrinsicResult>.580510"*
  %.21 = bitcast i8* %.19 to %"Map<string, IntrinsicResult>_vtable_ty.580514"**
  store %"Map<string, IntrinsicResult>_vtable_ty.580514"* @"Map<string, IntrinsicResult>_vtable_data", %"Map<string, IntrinsicResult>_vtable_ty.580514"** %.21, align 8
  call void @"Map<string, IntrinsicResult>_constructor"(%"Map<string, IntrinsicResult>.580510"* %.20)
  %.26 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %"Map<string, CGClassType>.580511"*
  %.28 = bitcast i8* %.26 to %"Map<string, CGClassType>_vtable_ty.580519"**
  store %"Map<string, CGClassType>_vtable_ty.580519"* @"Map<string, CGClassType>_vtable_data", %"Map<string, CGClassType>_vtable_ty.580519"** %.28, align 8
  call void @"Map<string, CGClassType>_constructor"(%"Map<string, CGClassType>.580511"* %.27)
  %.33 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %"Map<string, CGEnumType>.580512"*
  %.35 = bitcast i8* %.33 to %"Map<string, CGEnumType>_vtable_ty.580524"**
  store %"Map<string, CGEnumType>_vtable_ty.580524"* @"Map<string, CGEnumType>_vtable_data", %"Map<string, CGEnumType>_vtable_ty.580524"** %.35, align 8
  call void @"Map<string, CGEnumType>_constructor"(%"Map<string, CGEnumType>.580512"* %.34)
  %.41 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 5
  %0 = bitcast %"Map<string, LLVMValueRef>.580490"** %.41 to i8**
  store i8* %.12, i8** %0, align 8
  %.45 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 4
  %1 = bitcast %"Map<string, IntrinsicResult>.580510"** %.45 to i8**
  store i8* %.19, i8** %1, align 8
  %.49 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 6
  %2 = bitcast %"Map<string, CGClassType>.580511"** %.49 to i8**
  store i8* %.26, i8** %2, align 8
  %.53 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 7
  %3 = bitcast %"Map<string, CGEnumType>.580512"** %.53 to i8**
  store i8* %.33, i8** %3, align 8
  %.57 = getelementptr inbounds %Module.580421, %Module.580421* %.2, i64 0, i32 2
  %.58 = load %string.580129*, %string.580129** %.57, align 8
  %.59 = getelementptr inbounds %string.580129, %string.580129* %.58, i64 0, i32 0
  %.60 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.59, align 8
  %.61 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.60, i64 0, i32 10
  %.62 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.61, align 8
  %.63 = call i8* %.62(%string.580129* %.58)
  %.66 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.9, align 8
  %.67 = call %LLVMModuleRef.580453* @LLVMModuleCreateWithNameInContext(i8* %.63, %LLVMContextRef.580452* %.66)
  %.68 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  store %LLVMModuleRef.580453* %.67, %LLVMModuleRef.580453** %.68, align 8
  %.76 = load %string.580129*, %string.580129** %.57, align 8
  %.77 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.78 = bitcast i8* %.77 to %DebugInfo.580479*
  %.79 = bitcast i8* %.77 to %DebugInfo_vtable_ty.580480**
  store %DebugInfo_vtable_ty.580480* @DebugInfo_vtable_data, %DebugInfo_vtable_ty.580480** %.79, align 8
  call void @DebugInfo_constructor(%DebugInfo.580479* %.78, %LLVMModuleRef.580453* %.67, %string.580129* %.76)
  %.82 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 14
  %4 = bitcast %DebugInfo.580479** %.82 to i8**
  store i8* %.77, i8** %4, align 8
  %.85 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 12
  store i1 true, i1* %.85, align 1
  %.92 = getelementptr inbounds %Module.580421, %Module.580421* %.2, i64 0, i32 9
  %.9366 = load %"Array<ConstDeclaration>.580429"*, %"Array<ConstDeclaration>.580429"** %.92, align 8
  %.9467 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.9366, i64 0, i32 2
  %.9568 = load i64, i64* %.9467, align 8
  %.9669 = icmp sgt i64 %.9568, 0
  br i1 %.9669, label %for.body.lr.ph, label %for.cond.1.preheader

for.body.lr.ph:                                   ; preds = %.4
  %.99 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body

for.cond.1.preheader:                             ; preds = %for.body, %.4
  %.125 = getelementptr inbounds %Module.580421, %Module.580421* %.2, i64 0, i32 10
  %.12660 = load %"Array<VarDeclaration>.580430"*, %"Array<VarDeclaration>.580430"** %.125, align 8
  %.12761 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.12660, i64 0, i32 2
  %.12862 = load i64, i64* %.12761, align 8
  %.12963 = icmp sgt i64 %.12862, 0
  br i1 %.12963, label %for.body.1.lr.ph, label %for.cond.2.preheader

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.132 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body.1

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.9371 = phi %"Array<ConstDeclaration>.580429"* [ %.9366, %for.body.lr.ph ], [ %.93, %for.body ]
  %storemerge70 = phi i64 [ 0, %for.body.lr.ph ], [ %.117, %for.body ]
  %.100 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.99, align 8
  %.101 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.100, i64 0, i32 45
  %.102 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ConstDeclaration.580353*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ConstDeclaration.580353*)** %.101, align 8
  %.107 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.9371, i64 0, i32 0
  %.108 = load %"Array<ConstDeclaration>_vtable_ty.580438"*, %"Array<ConstDeclaration>_vtable_ty.580438"** %.107, align 8
  %.109 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.580438", %"Array<ConstDeclaration>_vtable_ty.580438"* %.108, i64 0, i32 5
  %.110 = load %ConstDeclaration.580353* (%"Array<ConstDeclaration>.580429"*, i64)*, %ConstDeclaration.580353* (%"Array<ConstDeclaration>.580429"*, i64)** %.109, align 8
  %.111 = call %ConstDeclaration.580353* %.110(%"Array<ConstDeclaration>.580429"* %.9371, i64 %storemerge70)
  call void %.102(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* null, %ConstDeclaration.580353* %.111)
  %.117 = add nuw nsw i64 %storemerge70, 1
  %.93 = load %"Array<ConstDeclaration>.580429"*, %"Array<ConstDeclaration>.580429"** %.92, align 8
  %.94 = getelementptr inbounds %"Array<ConstDeclaration>.580429", %"Array<ConstDeclaration>.580429"* %.93, i64 0, i32 2
  %.95 = load i64, i64* %.94, align 8
  %.96 = icmp slt i64 %.117, %.95
  br i1 %.96, label %for.body, label %for.cond.1.preheader

for.cond.2.preheader:                             ; preds = %for.body.1, %for.cond.1.preheader
  %.158 = getelementptr inbounds %Module.580421, %Module.580421* %.2, i64 0, i32 5
  %.15953 = load %"Array<Class>.580425"*, %"Array<Class>.580425"** %.158, align 8
  %.16054 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.15953, i64 0, i32 2
  %.16155 = load i64, i64* %.16054, align 8
  %.16256 = icmp sgt i64 %.16155, 0
  br i1 %.16256, label %for.body.2.lr.ph, label %for.cond.3.preheader

for.body.2.lr.ph:                                 ; preds = %for.cond.2.preheader
  %.165 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body.2

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.12665 = phi %"Array<VarDeclaration>.580430"* [ %.12660, %for.body.1.lr.ph ], [ %.126, %for.body.1 ]
  %storemerge164 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.150, %for.body.1 ]
  %.133 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.132, align 8
  %.134 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.133, i64 0, i32 44
  %.135 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarDeclaration.580351*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarDeclaration.580351*)** %.134, align 8
  %.140 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.12665, i64 0, i32 0
  %.141 = load %"Array<VarDeclaration>_vtable_ty.580439"*, %"Array<VarDeclaration>_vtable_ty.580439"** %.140, align 8
  %.142 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.580439", %"Array<VarDeclaration>_vtable_ty.580439"* %.141, i64 0, i32 5
  %.143 = load %VarDeclaration.580351* (%"Array<VarDeclaration>.580430"*, i64)*, %VarDeclaration.580351* (%"Array<VarDeclaration>.580430"*, i64)** %.142, align 8
  %.144 = call %VarDeclaration.580351* %.143(%"Array<VarDeclaration>.580430"* %.12665, i64 %storemerge164)
  call void %.135(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* null, %VarDeclaration.580351* %.144)
  %.150 = add nuw nsw i64 %storemerge164, 1
  %.126 = load %"Array<VarDeclaration>.580430"*, %"Array<VarDeclaration>.580430"** %.125, align 8
  %.127 = getelementptr inbounds %"Array<VarDeclaration>.580430", %"Array<VarDeclaration>.580430"* %.126, i64 0, i32 2
  %.128 = load i64, i64* %.127, align 8
  %.129 = icmp slt i64 %.150, %.128
  br i1 %.129, label %for.body.1, label %for.cond.2.preheader

for.cond.3.preheader:                             ; preds = %for.body.2, %for.cond.2.preheader
  %.19247 = load %"Array<Class>.580425"*, %"Array<Class>.580425"** %.158, align 8
  %.19348 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.19247, i64 0, i32 2
  %.19449 = load i64, i64* %.19348, align 8
  %.19550 = icmp sgt i64 %.19449, 0
  br i1 %.19550, label %for.body.3.lr.ph, label %for.cond.4.preheader

for.body.3.lr.ph:                                 ; preds = %for.cond.3.preheader
  %.198 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body.3

for.body.2:                                       ; preds = %for.body.2.lr.ph, %for.body.2
  %.15958 = phi %"Array<Class>.580425"* [ %.15953, %for.body.2.lr.ph ], [ %.159, %for.body.2 ]
  %storemerge257 = phi i64 [ 0, %for.body.2.lr.ph ], [ %.183, %for.body.2 ]
  %.166 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.165, align 8
  %.167 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.166, i64 0, i32 54
  %.168 = load void (%CodeGen.580507*, %Class.580403*)*, void (%CodeGen.580507*, %Class.580403*)** %.167, align 8
  %.173 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.15958, i64 0, i32 0
  %.174 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.173, align 8
  %.175 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.174, i64 0, i32 5
  %.176 = load %Class.580403* (%"Array<Class>.580425"*, i64)*, %Class.580403* (%"Array<Class>.580425"*, i64)** %.175, align 8
  %.177 = call %Class.580403* %.176(%"Array<Class>.580425"* %.15958, i64 %storemerge257)
  call void %.168(%CodeGen.580507* %.1, %Class.580403* %.177)
  %.183 = add nuw nsw i64 %storemerge257, 1
  %.159 = load %"Array<Class>.580425"*, %"Array<Class>.580425"** %.158, align 8
  %.160 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.159, i64 0, i32 2
  %.161 = load i64, i64* %.160, align 8
  %.162 = icmp slt i64 %.183, %.161
  br i1 %.162, label %for.body.2, label %for.cond.3.preheader

for.cond.4.preheader:                             ; preds = %for.body.3, %for.cond.3.preheader
  %.224 = getelementptr inbounds %Module.580421, %Module.580421* %.2, i64 0, i32 7
  %.22541 = load %"Array<Enum>.580427"*, %"Array<Enum>.580427"** %.224, align 8
  %.22642 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.22541, i64 0, i32 2
  %.22743 = load i64, i64* %.22642, align 8
  %.22844 = icmp sgt i64 %.22743, 0
  br i1 %.22844, label %for.body.4.lr.ph, label %for.cond.5.preheader

for.body.4.lr.ph:                                 ; preds = %for.cond.4.preheader
  %.231 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body.4

for.body.3:                                       ; preds = %for.body.3.lr.ph, %for.body.3
  %.19252 = phi %"Array<Class>.580425"* [ %.19247, %for.body.3.lr.ph ], [ %.192, %for.body.3 ]
  %storemerge351 = phi i64 [ 0, %for.body.3.lr.ph ], [ %.216, %for.body.3 ]
  %.199 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.198, align 8
  %.200 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.199, i64 0, i32 55
  %.201 = load void (%CodeGen.580507*, %Class.580403*)*, void (%CodeGen.580507*, %Class.580403*)** %.200, align 8
  %.206 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.19252, i64 0, i32 0
  %.207 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.206, align 8
  %.208 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.207, i64 0, i32 5
  %.209 = load %Class.580403* (%"Array<Class>.580425"*, i64)*, %Class.580403* (%"Array<Class>.580425"*, i64)** %.208, align 8
  %.210 = call %Class.580403* %.209(%"Array<Class>.580425"* %.19252, i64 %storemerge351)
  call void %.201(%CodeGen.580507* %.1, %Class.580403* %.210)
  %.216 = add nuw nsw i64 %storemerge351, 1
  %.192 = load %"Array<Class>.580425"*, %"Array<Class>.580425"** %.158, align 8
  %.193 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.192, i64 0, i32 2
  %.194 = load i64, i64* %.193, align 8
  %.195 = icmp slt i64 %.216, %.194
  br i1 %.195, label %for.body.3, label %for.cond.4.preheader

for.cond.5.preheader:                             ; preds = %for.body.4, %for.cond.4.preheader
  %.257 = getelementptr inbounds %Module.580421, %Module.580421* %.2, i64 0, i32 6
  %.25835 = load %"Array<Function>.580426"*, %"Array<Function>.580426"** %.257, align 8
  %.25936 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.25835, i64 0, i32 2
  %.26037 = load i64, i64* %.25936, align 8
  %.26138 = icmp sgt i64 %.26037, 0
  br i1 %.26138, label %for.body.5.lr.ph, label %for.end.5

for.body.5.lr.ph:                                 ; preds = %for.cond.5.preheader
  %.264 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body.5

for.body.4:                                       ; preds = %for.body.4.lr.ph, %for.body.4
  %.22546 = phi %"Array<Enum>.580427"* [ %.22541, %for.body.4.lr.ph ], [ %.225, %for.body.4 ]
  %storemerge445 = phi i64 [ 0, %for.body.4.lr.ph ], [ %.249, %for.body.4 ]
  %.232 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.231, align 8
  %.233 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.232, i64 0, i32 56
  %.234 = load void (%CodeGen.580507*, %Enum.580417*)*, void (%CodeGen.580507*, %Enum.580417*)** %.233, align 8
  %.239 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.22546, i64 0, i32 0
  %.240 = load %"Array<Enum>_vtable_ty.580436"*, %"Array<Enum>_vtable_ty.580436"** %.239, align 8
  %.241 = getelementptr inbounds %"Array<Enum>_vtable_ty.580436", %"Array<Enum>_vtable_ty.580436"* %.240, i64 0, i32 5
  %.242 = load %Enum.580417* (%"Array<Enum>.580427"*, i64)*, %Enum.580417* (%"Array<Enum>.580427"*, i64)** %.241, align 8
  %.243 = call %Enum.580417* %.242(%"Array<Enum>.580427"* %.22546, i64 %storemerge445)
  call void %.234(%CodeGen.580507* %.1, %Enum.580417* %.243)
  %.249 = add nuw nsw i64 %storemerge445, 1
  %.225 = load %"Array<Enum>.580427"*, %"Array<Enum>.580427"** %.224, align 8
  %.226 = getelementptr inbounds %"Array<Enum>.580427", %"Array<Enum>.580427"* %.225, i64 0, i32 2
  %.227 = load i64, i64* %.226, align 8
  %.228 = icmp slt i64 %.249, %.227
  br i1 %.228, label %for.body.4, label %for.cond.5.preheader

for.body.5:                                       ; preds = %for.body.5.lr.ph, %for.body.5
  %.25840 = phi %"Array<Function>.580426"* [ %.25835, %for.body.5.lr.ph ], [ %.258, %for.body.5 ]
  %storemerge539 = phi i64 [ 0, %for.body.5.lr.ph ], [ %.282, %for.body.5 ]
  %.265 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.264, align 8
  %.266 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.265, i64 0, i32 50
  %.267 = load void (%CodeGen.580507*, %Function.580391*)*, void (%CodeGen.580507*, %Function.580391*)** %.266, align 8
  %.272 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.25840, i64 0, i32 0
  %.273 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.272, align 8
  %.274 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.273, i64 0, i32 5
  %.275 = load %Function.580391* (%"Array<Function>.580426"*, i64)*, %Function.580391* (%"Array<Function>.580426"*, i64)** %.274, align 8
  %.276 = call %Function.580391* %.275(%"Array<Function>.580426"* %.25840, i64 %storemerge539)
  call void %.267(%CodeGen.580507* %.1, %Function.580391* %.276)
  %.282 = add nuw nsw i64 %storemerge539, 1
  %.258 = load %"Array<Function>.580426"*, %"Array<Function>.580426"** %.257, align 8
  %.259 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.258, i64 0, i32 2
  %.260 = load i64, i64* %.259, align 8
  %.261 = icmp slt i64 %.282, %.260
  br i1 %.261, label %for.body.5, label %for.end.5

for.end.5:                                        ; preds = %for.body.5, %for.cond.5.preheader
  store i1 false, i1* %.85, align 1
  %.29429 = load %"Array<Class>.580425"*, %"Array<Class>.580425"** %.158, align 8
  %.29530 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.29429, i64 0, i32 2
  %.29631 = load i64, i64* %.29530, align 8
  %.29732 = icmp sgt i64 %.29631, 0
  br i1 %.29732, label %for.body.6.lr.ph, label %for.cond.7.preheader

for.body.6.lr.ph:                                 ; preds = %for.end.5
  %.300 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body.6

for.cond.7.preheader:                             ; preds = %for.body.6, %for.end.5
  %.32723 = load %"Array<Function>.580426"*, %"Array<Function>.580426"** %.257, align 8
  %.32824 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.32723, i64 0, i32 2
  %.32925 = load i64, i64* %.32824, align 8
  %.33026 = icmp sgt i64 %.32925, 0
  br i1 %.33026, label %for.body.7.lr.ph, label %for.end.7

for.body.7.lr.ph:                                 ; preds = %for.cond.7.preheader
  %.333 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body.7

for.body.6:                                       ; preds = %for.body.6.lr.ph, %for.body.6
  %.29434 = phi %"Array<Class>.580425"* [ %.29429, %for.body.6.lr.ph ], [ %.294, %for.body.6 ]
  %storemerge633 = phi i64 [ 0, %for.body.6.lr.ph ], [ %.318, %for.body.6 ]
  %.301 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.300, align 8
  %.302 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.301, i64 0, i32 49
  %.303 = load void (%CodeGen.580507*, %Class.580403*)*, void (%CodeGen.580507*, %Class.580403*)** %.302, align 8
  %.308 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.29434, i64 0, i32 0
  %.309 = load %"Array<Class>_vtable_ty.580434"*, %"Array<Class>_vtable_ty.580434"** %.308, align 8
  %.310 = getelementptr inbounds %"Array<Class>_vtable_ty.580434", %"Array<Class>_vtable_ty.580434"* %.309, i64 0, i32 5
  %.311 = load %Class.580403* (%"Array<Class>.580425"*, i64)*, %Class.580403* (%"Array<Class>.580425"*, i64)** %.310, align 8
  %.312 = call %Class.580403* %.311(%"Array<Class>.580425"* %.29434, i64 %storemerge633)
  call void %.303(%CodeGen.580507* %.1, %Class.580403* %.312)
  %.318 = add nuw nsw i64 %storemerge633, 1
  %.294 = load %"Array<Class>.580425"*, %"Array<Class>.580425"** %.158, align 8
  %.295 = getelementptr inbounds %"Array<Class>.580425", %"Array<Class>.580425"* %.294, i64 0, i32 2
  %.296 = load i64, i64* %.295, align 8
  %.297 = icmp slt i64 %.318, %.296
  br i1 %.297, label %for.body.6, label %for.cond.7.preheader

for.body.7:                                       ; preds = %for.body.7.lr.ph, %for.body.7
  %.32728 = phi %"Array<Function>.580426"* [ %.32723, %for.body.7.lr.ph ], [ %.327, %for.body.7 ]
  %storemerge727 = phi i64 [ 0, %for.body.7.lr.ph ], [ %.351, %for.body.7 ]
  %.334 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.333, align 8
  %.335 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.334, i64 0, i32 48
  %.336 = load void (%CodeGen.580507*, %Function.580391*)*, void (%CodeGen.580507*, %Function.580391*)** %.335, align 8
  %.341 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.32728, i64 0, i32 0
  %.342 = load %"Array<Function>_vtable_ty.580435"*, %"Array<Function>_vtable_ty.580435"** %.341, align 8
  %.343 = getelementptr inbounds %"Array<Function>_vtable_ty.580435", %"Array<Function>_vtable_ty.580435"* %.342, i64 0, i32 5
  %.344 = load %Function.580391* (%"Array<Function>.580426"*, i64)*, %Function.580391* (%"Array<Function>.580426"*, i64)** %.343, align 8
  %.345 = call %Function.580391* %.344(%"Array<Function>.580426"* %.32728, i64 %storemerge727)
  call void %.336(%CodeGen.580507* %.1, %Function.580391* %.345)
  %.351 = add nuw nsw i64 %storemerge727, 1
  %.327 = load %"Array<Function>.580426"*, %"Array<Function>.580426"** %.257, align 8
  %.328 = getelementptr inbounds %"Array<Function>.580426", %"Array<Function>.580426"* %.327, i64 0, i32 2
  %.329 = load i64, i64* %.328, align 8
  %.330 = icmp slt i64 %.351, %.329
  br i1 %.330, label %for.body.7, label %for.end.7

for.end.7:                                        ; preds = %for.body.7, %for.cond.7.preheader
  %.356 = load %DebugInfo.580479*, %DebugInfo.580479** %.82, align 8
  %.357 = getelementptr inbounds %DebugInfo.580479, %DebugInfo.580479* %.356, i64 0, i32 0
  %.358 = load %DebugInfo_vtable_ty.580480*, %DebugInfo_vtable_ty.580480** %.357, align 8
  %.359 = getelementptr inbounds %DebugInfo_vtable_ty.580480, %DebugInfo_vtable_ty.580480* %.358, i64 0, i32 0
  %.360 = load void (%DebugInfo.580479*)*, void (%DebugInfo.580479*)** %.359, align 8
  call void %.360(%DebugInfo.580479* %.356)
  %.364 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.68, align 8
  ret %LLVMModuleRef.580453* %.364
}

define %LLVMTypeRef.580454* @CodeGen_codegen_type(%CodeGen.580507* %.1, %Type.580273* %.2, i1 %.3) {
.5:
  %.10 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.endif [
    i64 12, label %.5.if
    i64 0, label %.5.endif.if
    i64 1, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.endif.if
    i64 3, label %.5.endif.endif.endif.endif.if
    i64 4, label %.5.endif.endif.endif.endif.endif.if
    i64 7, label %.5.endif.endif.endif.endif.endif.endif.if
    i64 5, label %.5.endif.endif.endif.endif.endif.endif.endif.if
    i64 6, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.5.endif.endif.endif.endi...if
    i64 9, label %.5.endif.endif.endif.endi...endif.if
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.16 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.15, align 8
  %.17 = call %LLVMTypeRef.580454* @LLVMVoidTypeInContext(%LLVMContextRef.580452* %.16)
  ret %LLVMTypeRef.580454* %.17

.5.endif.if:                                      ; preds = %.5
  %.25 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.26 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.25, align 8
  %.27 = call %LLVMTypeRef.580454* @LLVMInt1TypeInContext(%LLVMContextRef.580452* %.26)
  ret %LLVMTypeRef.580454* %.27

.5.endif.endif.if:                                ; preds = %.5
  %.35 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.36 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.35, align 8
  %.37 = call %LLVMTypeRef.580454* @LLVMIntTypeInContext(%LLVMContextRef.580452* %.36, i64 4)
  ret %LLVMTypeRef.580454* %.37

.5.endif.endif.endif.if:                          ; preds = %.5
  %.45 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.46 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.45, align 8
  %.47 = call %LLVMTypeRef.580454* @LLVMInt8TypeInContext(%LLVMContextRef.580452* %.46)
  ret %LLVMTypeRef.580454* %.47

.5.endif.endif.endif.endif.if:                    ; preds = %.5
  %.55 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.56 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.55, align 8
  %.57 = call %LLVMTypeRef.580454* @LLVMInt16TypeInContext(%LLVMContextRef.580452* %.56)
  ret %LLVMTypeRef.580454* %.57

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5
  %.65 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.66 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.65, align 8
  %.67 = call %LLVMTypeRef.580454* @LLVMInt32TypeInContext(%LLVMContextRef.580452* %.66)
  ret %LLVMTypeRef.580454* %.67

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5
  %.75 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.76 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.75, align 8
  %.77 = call %LLVMTypeRef.580454* @LLVMIntTypeInContext(%LLVMContextRef.580452* %.76, i64 64)
  ret %LLVMTypeRef.580454* %.77

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5
  %.85 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.86 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.85, align 8
  %.87 = call %LLVMTypeRef.580454* @LLVMInt64TypeInContext(%LLVMContextRef.580452* %.86)
  ret %LLVMTypeRef.580454* %.87

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5
  %.95 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.96 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.95, align 8
  %.97 = call %LLVMTypeRef.580454* @LLVMInt128TypeInContext(%LLVMContextRef.580452* %.96)
  ret %LLVMTypeRef.580454* %.97

.5.endif.endif.endif.endi...if:                   ; preds = %.5
  %.105 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.106 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.105, align 8
  %.107 = call %LLVMTypeRef.580454* @LLVMHalfTypeInContext(%LLVMContextRef.580452* %.106)
  ret %LLVMTypeRef.580454* %.107

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5
  %.115 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.116 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.115, align 8
  %.117 = call %LLVMTypeRef.580454* @LLVMFloatTypeInContext(%LLVMContextRef.580452* %.116)
  ret %LLVMTypeRef.580454* %.117

.5.endif.endif.endif.endi...endif.endif:          ; preds = %.5
  %0 = and i64 %.11, -2
  %1 = icmp eq i64 %0, 10
  br i1 %1, label %.5.endif.endif.endif.endi...endif.endif.if, label %.5.endif.endif.endif.endi...endif.endif.endif

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5.endif.endif.endif.endi...endif.endif
  %.130 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.131 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.130, align 8
  %.132 = call %LLVMTypeRef.580454* @LLVMDoubleTypeInContext(%LLVMContextRef.580452* %.131)
  ret %LLVMTypeRef.580454* %.132

.5.endif.endif.endif.endi...endif.endif.endif:    ; preds = %.5.endif.endif.endif.endi...endif.endif
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.1.endif.endif [
    i64 15, label %.5.endif.endif.endif.endi...endif.endif.endif.if
    i64 16, label %.5.endif.endif.endif.endi...if.1
    i64 17, label %.5.endif.endif.endif.endi...endif.1.if
    i64 13, label %.5.endif.endif.endif.endi...endif.1.endif.if
  ]

.5.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %.140 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.141 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.140, align 8
  %.142 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.141, i64 0, i32 13
  %.143 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.142, align 8
  %.146 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %2 = bitcast %Type.580273* %.146 to %Type.580273**
  %.147 = load %Type.580273*, %Type.580273** %2, align 8
  %.148 = call %LLVMTypeRef.580454* %.143(%CodeGen.580507* %.1, %Type.580273* %.147, i1 true)
  %.149 = call %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454* %.148, i64 0)
  ret %LLVMTypeRef.580454* %.149

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %arr_ty = alloca %ArrayType.580295*, align 8
  %3 = bitcast %ArrayType.580295** %arr_ty to %Type.580273**
  store %Type.580273* %.2, %Type.580273** %3, align 8
  %.160 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.161 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.160, align 8
  %.162 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.161, i64 0, i32 13
  %.163 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.162, align 8
  %.165 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %4 = bitcast %Type.580273* %.165 to %Type.580273**
  %.166 = load %Type.580273*, %Type.580273** %4, align 8
  %.167 = call %LLVMTypeRef.580454* %.163(%CodeGen.580507* %.1, %Type.580273* %.166, i1 true)
  %.170 = load %ArrayType.580295*, %ArrayType.580295** %arr_ty, align 8
  %.171 = getelementptr inbounds %ArrayType.580295, %ArrayType.580295* %.170, i64 0, i32 3
  %.172 = load i64, i64* %.171, align 8
  %.173 = call %LLVMTypeRef.580454* @LLVMArrayType(%LLVMTypeRef.580454* %.167, i64 %.172)
  ret %LLVMTypeRef.580454* %.173

.5.endif.endif.endif.endi...endif.1.if:           ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %.181 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.183 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.185 = bitcast i8* %.183 to %"Array<LLVMTypeRef>_vtable_ty.580504"**
  store %"Array<LLVMTypeRef>_vtable_ty.580504"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.580504"** %.185, align 8
  %.187 = getelementptr inbounds i8, i8* %.183, i64 8
  %5 = bitcast i8* %.187 to i8**
  store i8* %.181, i8** %5, align 8
  %.189 = getelementptr inbounds i8, i8* %.183, i64 16
  %6 = bitcast i8* %.189 to i64*
  store i64 0, i64* %6, align 8
  %.191 = getelementptr inbounds i8, i8* %.183, i64 24
  %7 = bitcast i8* %.191 to i64*
  store i64 8, i64* %7, align 8
  %param_types = alloca %"Array<LLVMTypeRef>.580503"*, align 8
  %8 = bitcast %"Array<LLVMTypeRef>.580503"** %param_types to i8**
  store i8* %.183, i8** %8, align 8
  %func_ty = alloca %FunctionType.580279*, align 8
  %9 = bitcast %FunctionType.580279** %func_ty to %Type.580273**
  store %Type.580273* %.2, %Type.580273** %9, align 8
  %.2013.cast = bitcast %Type.580273* %.2 to %FunctionType.580279*
  %.2024 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %10 = bitcast %Type.580273* %.2024 to %"Array<Type>.580281"**
  %.2035 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %10, align 8
  %.2046 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.2035, i64 0, i32 2
  %.2057 = load i64, i64* %.2046, align 8
  %.2068 = icmp sgt i64 %.2057, 0
  br i1 %.2068, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif.endif.endif.endi...endif.1.if
  %.208 = load %"Array<LLVMTypeRef>.580503"*, %"Array<LLVMTypeRef>.580503"** %param_types, align 8
  %.210 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.224 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.208, i64 0, i32 0
  %.201 = load %FunctionType.580279*, %FunctionType.580279** %func_ty, align 8
  %.202 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.201, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.20310 = phi %"Array<Type>.580281"* [ %.2035, %for.body.lr.ph ], [ %.203, %for.body ]
  %storemerge9 = phi i64 [ 0, %for.body.lr.ph ], [ %.233, %for.body ]
  %.211 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.210, align 8
  %.212 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.211, i64 0, i32 13
  %.213 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.212, align 8
  %.218 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.20310, i64 0, i32 0
  %.219 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.218, align 8
  %.220 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.219, i64 0, i32 5
  %.221 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.220, align 8
  %.222 = call %Type.580273* %.221(%"Array<Type>.580281"* %.20310, i64 %storemerge9)
  %.223 = call %LLVMTypeRef.580454* %.213(%CodeGen.580507* %.1, %Type.580273* %.222, i1 true)
  %.225 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.224, align 8
  %.226 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.225, i64 0, i32 2
  %.227 = load void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)*, void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)** %.226, align 8
  call void %.227(%"Array<LLVMTypeRef>.580503"* %.208, %LLVMTypeRef.580454* %.223)
  %.233 = add nuw nsw i64 %storemerge9, 1
  %.203 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.202, align 8
  %.204 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.203, i64 0, i32 2
  %.205 = load i64, i64* %.204, align 8
  %.206 = icmp slt i64 %.233, %.205
  br i1 %.206, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5.endif.endif.endif.endi...endif.1.if
  %.201.lcssa = phi %FunctionType.580279* [ %.2013.cast, %.5.endif.endif.endif.endi...endif.1.if ], [ %.201, %for.body ]
  %.237 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.238 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.237, align 8
  %.239 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.238, i64 0, i32 13
  %.240 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.239, align 8
  %.242 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.201.lcssa, i64 0, i32 3
  %.243 = load %Type.580273*, %Type.580273** %.242, align 8
  %.244 = call %LLVMTypeRef.580454* %.240(%CodeGen.580507* %.1, %Type.580273* %.243, i1 true)
  %.247 = load %"Array<LLVMTypeRef>.580503"*, %"Array<LLVMTypeRef>.580503"** %param_types, align 8
  %.248 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.247, i64 0, i32 1
  %.249 = load %LLVMTypeRef.580454**, %LLVMTypeRef.580454*** %.248, align 8
  %.251 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.247, i64 0, i32 2
  %.252 = load i64, i64* %.251, align 8
  %.253 = call %LLVMTypeRef.580454* @LLVMFunctionType(%LLVMTypeRef.580454* %.244, %LLVMTypeRef.580454** %.249, i64 %.252, i1 false)
  br i1 %.3, label %true_block, label %end

true_block:                                       ; preds = %for.end
  %.258 = call %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454* %.253, i64 0)
  br label %end

end:                                              ; preds = %.5.endif.endif.endif.endi...endif.1.endif.endif.if, %.5.endif.endif.endif.endi...endif.1.endif.endif, %true_block.1, %.5.endif.endif.endif.endi...endif.1.endif.if.if, %for.end, %true_block
  %.262 = phi %LLVMTypeRef.580454* [ %.258, %true_block ], [ %.253, %for.end ], [ %.291, %true_block.1 ], [ %.290, %.5.endif.endif.endif.endi...endif.1.endif.if.if ], [ null, %.5.endif.endif.endif.endi...endif.1.endif.endif ], [ null, %.5.endif.endif.endif.endi...endif.1.endif.endif.if ]
  ret %LLVMTypeRef.580454* %.262

.5.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %.270 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.271 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.270, align 8
  %.272 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.271, i64 0, i32 3
  %.273 = load %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)*, %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)** %.272, align 8
  %.276 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %11 = bitcast %Type.580273* %.276 to %TypeId.580287**
  %.2772 = load %TypeId.580287*, %TypeId.580287** %11, align 8
  %.279 = call %CGClassType.580487* %.273(%CodeGen.580507* %.1, %TypeId.580287* %.2772)
  %12 = ptrtoint %CGClassType.580487* %.279 to i64
  %.282 = trunc i64 %12 to i32
  %.284.not = icmp eq i32 %.282, 0
  br i1 %.284.not, label %.5.endif.endif.endif.endi...endif.1.endif.endif, label %.5.endif.endif.endif.endi...endif.1.endif.if.if

.5.endif.endif.endif.endi...endif.1.endif.endif:  ; preds = %.5.endif.endif.endif.endi...endif.endif.endif, %.5.endif.endif.endif.endi...endif.1.endif.if
  %.302 = load i64, i64* %.10, align 8
  %.303 = icmp eq i64 %.302, 14
  br i1 %.303, label %.5.endif.endif.endif.endi...endif.1.endif.endif.if, label %end

.5.endif.endif.endif.endi...endif.1.endif.if.if:  ; preds = %.5.endif.endif.endif.endi...endif.1.endif.if
  %.289 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.279, i64 0, i32 1
  %.290 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.289, align 8
  br i1 %.3, label %true_block.1, label %end

true_block.1:                                     ; preds = %.5.endif.endif.endif.endi...endif.1.endif.if.if
  %.291 = call %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454* %.290, i64 0)
  br label %end

.5.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.5.endif.endif.endif.endi...endif.1.endif.endif
  %.306 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.307 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.306, align 8
  %.308 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.307, i64 0, i32 4
  %.309 = load %CGEnumType.580501* (%CodeGen.580507*, %TypeId.580287*)*, %CGEnumType.580501* (%CodeGen.580507*, %TypeId.580287*)** %.308, align 8
  %.312 = getelementptr inbounds %Type.580273, %Type.580273* %.2, i64 1
  %13 = bitcast %Type.580273* %.312 to %TypeId.580287**
  %.3131 = load %TypeId.580287*, %TypeId.580287** %13, align 8
  %.315 = call %CGEnumType.580501* %.309(%CodeGen.580507* %.1, %TypeId.580287* %.3131)
  %14 = ptrtoint %CGEnumType.580501* %.315 to i64
  %.318 = trunc i64 %14 to i32
  %.320.not = icmp eq i32 %.318, 0
  br i1 %.320.not, label %end, label %.5.endif.endif.endif.endi...endif.1.endif.endif.if.if

.5.endif.endif.endif.endi...endif.1.endif.endif.if.if: ; preds = %.5.endif.endif.endif.endi...endif.1.endif.endif.if
  %.323 = getelementptr inbounds %CGEnumType.580501, %CGEnumType.580501* %.315, i64 0, i32 1
  %.324 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.323, align 8
  ret %LLVMTypeRef.580454* %.324
}

define void @CodeGen_codegen_return_stmt(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %ReturnStatement.580359* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %ReturnStatement.580359, %ReturnStatement.580359* %.3, i64 0, i32 2
  %0 = bitcast %Expression.580293** %.10 to i64*
  %.111 = load i64, i64* %0, align 8
  %.12 = trunc i64 %.111 to i32
  %.14.not = icmp eq i32 %.12, 0
  br i1 %.14.not, label %.5.else, label %.5.if

.5.if:                                            ; preds = %.5
  %.18 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.19 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.18, align 8
  %.20 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.19, i64 0, i32 39
  %.21 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.20, align 8
  %.25 = load %Expression.580293*, %Expression.580293** %.10, align 8
  %.26 = call %LLVMValueRef.580455* %.21(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.25)
  %.27 = call %LLVMValueRef.580455* @LLVMBuildRet(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.26)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.30 = call %LLVMValueRef.580455* @LLVMBuildRetVoid(%LLVMBuilderRef.580460* %.2)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.else, %.5.if
  ret void
}

define %LLVMValueRef.580455* @CodeGen_codegen_int(%CodeGen.580507* %.1, %IntExpression.580303* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.9, i64 0, i32 13
  %.11 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.10, align 8
  %.13 = getelementptr inbounds %IntExpression.580303, %IntExpression.580303* %.2, i64 0, i32 4
  %.14 = load %Type.580273*, %Type.580273** %.13, align 8
  %.15 = call %LLVMTypeRef.580454* %.11(%CodeGen.580507* %.1, %Type.580273* %.14, i1 true)
  %.17 = getelementptr inbounds %IntExpression.580303, %IntExpression.580303* %.2, i64 0, i32 5
  %.18 = load i64, i64* %.17, align 8
  %.19 = call %LLVMValueRef.580455* @LLVMConstInt(%LLVMTypeRef.580454* %.15, i64 %.18, i1 true)
  ret %LLVMValueRef.580455* %.19
}

define %LLVMValueRef.580455* @CodeGen_codegen_float(%CodeGen.580507* %.1, %FloatExpression.580307* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.9, i64 0, i32 13
  %.11 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.10, align 8
  %.13 = getelementptr inbounds %FloatExpression.580307, %FloatExpression.580307* %.2, i64 0, i32 4
  %.14 = load %Type.580273*, %Type.580273** %.13, align 8
  %.15 = call %LLVMTypeRef.580454* %.11(%CodeGen.580507* %.1, %Type.580273* %.14, i1 true)
  %.17 = getelementptr inbounds %FloatExpression.580307, %FloatExpression.580307* %.2, i64 0, i32 5
  %.18 = load double, double* %.17, align 8
  %.19 = call %LLVMValueRef.580455* @LLVMConstReal(%LLVMTypeRef.580454* %.15, double %.18)
  ret %LLVMValueRef.580455* %.19
}

define %LLVMValueRef.580455* @CodeGen_codegen_bool(%CodeGen.580507* nocapture readonly %.1, %BooleanExpression.580305* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %BooleanExpression.580305, %BooleanExpression.580305* %.2, i64 0, i32 5
  %.9 = load i64, i64* %.8, align 8
  %.12 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.13 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.12, align 8
  %.14 = call %LLVMTypeRef.580454* @LLVMInt1TypeInContext(%LLVMContextRef.580452* %.13)
  %.16 = call %LLVMValueRef.580455* @LLVMConstInt(%LLVMTypeRef.580454* %.14, i64 %.9, i1 false)
  ret %LLVMValueRef.580455* %.16
}

define %LLVMValueRef.580455* @CodeGen_codegen_call_sprintf(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %"Array<LLVMValueRef>.580505"* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.11 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.12 = call %LLVMTypeRef.580454* @LLVMInt8TypeInContext(%LLVMContextRef.580452* %.11)
  %.15 = call %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454* %.12, i64 0)
  %.19 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.20 = call %LLVMTypeRef.580454* @LLVMIntTypeInContext(%LLVMContextRef.580452* %.19, i64 64)
  %.23 = call %LLVMValueRef.580455* @LLVMConstNull(%LLVMTypeRef.580454* %.15)
  %.25 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.26 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.25, align 8
  %.27 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.26, i64 0, i32 11
  %.28 = load %LLVMValueRef.580455* (%CodeGen.580507*, i64)*, %LLVMValueRef.580455* (%CodeGen.580507*, i64)** %.27, align 8
  %.29 = call %LLVMValueRef.580455* %.28(%CodeGen.580507* %.1, i64 0)
  %.31 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.32 = bitcast i8* %.31 to %LLVMValueRef.580455**
  store %LLVMValueRef.580455* %.23, %LLVMValueRef.580455** %.32, align 8
  %.35 = getelementptr inbounds i8, i8* %.31, i64 8
  %0 = bitcast i8* %.35 to %LLVMValueRef.580455**
  store %LLVMValueRef.580455* %.29, %LLVMValueRef.580455** %0, align 8
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %"Array<LLVMValueRef>.580505"*
  %.39 = bitcast i8* %.37 to %"Array<LLVMValueRef>_vtable_ty.580506"**
  store %"Array<LLVMValueRef>_vtable_ty.580506"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.580506"** %.39, align 8
  %.41 = getelementptr inbounds i8, i8* %.37, i64 8
  %1 = bitcast i8* %.41 to i8**
  store i8* %.31, i8** %1, align 8
  %.43 = getelementptr inbounds i8, i8* %.37, i64 16
  %2 = bitcast i8* %.43 to i64*
  store i64 2, i64* %2, align 8
  %.45 = getelementptr inbounds i8, i8* %.37, i64 24
  %3 = bitcast i8* %.45 to i64*
  store i64 16, i64* %3, align 8
  %.49 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  %.50 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.49, align 8
  %.51 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.52 = bitcast i8* %.51 to %string.580129*
  %.52.repack = bitcast i8* %.51 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.52.repack, align 8
  %.52.repack1 = getelementptr inbounds i8, i8* %.51, i64 8
  %4 = bitcast i8* %.52.repack1 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.370, i64 0, i64 0), i8** %4, align 8
  %.52.repack2 = getelementptr inbounds i8, i8* %.51, i64 16
  %5 = bitcast i8* %.52.repack2 to i64*
  store i64 8, i64* %5, align 8
  %.52.repack3 = getelementptr inbounds i8, i8* %.51, i64 24
  %6 = bitcast i8* %.52.repack3 to i64*
  store i64 8, i64* %6, align 8
  %.58 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.59 = bitcast i8* %.58 to %LLVMTypeRef.580454**
  store %LLVMTypeRef.580454* %.15, %LLVMTypeRef.580454** %.59, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %7 = bitcast i8* %.62 to %LLVMTypeRef.580454**
  store %LLVMTypeRef.580454* %.20, %LLVMTypeRef.580454** %7, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %8 = bitcast i8* %.64 to %LLVMTypeRef.580454**
  store %LLVMTypeRef.580454* %.15, %LLVMTypeRef.580454** %8, align 8
  %.66 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.67 = bitcast i8* %.66 to %"Array<LLVMTypeRef>.580503"*
  %.68 = bitcast i8* %.66 to %"Array<LLVMTypeRef>_vtable_ty.580504"**
  store %"Array<LLVMTypeRef>_vtable_ty.580504"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.580504"** %.68, align 8
  %.70 = getelementptr inbounds i8, i8* %.66, i64 8
  %9 = bitcast i8* %.70 to i8**
  store i8* %.58, i8** %9, align 8
  %.72 = getelementptr inbounds i8, i8* %.66, i64 16
  %10 = bitcast i8* %.72 to i64*
  store i64 3, i64* %10, align 8
  %.74 = getelementptr inbounds i8, i8* %.66, i64 24
  %11 = bitcast i8* %.74 to i64*
  store i64 24, i64* %11, align 8
  %.77 = call %IntrinsicResult.580485* @get_intrinsic(%LLVMModuleRef.580453* %.50, %string.580129* %.52, %"Array<LLVMTypeRef>.580503"* %.67, %LLVMTypeRef.580454* %.20, i1 true)
  %.84 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.3, i64 0, i32 2
  %.8515 = load i64, i64* %.84, align 8
  %.8616 = icmp sgt i64 %.8515, 0
  br i1 %.8616, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.91 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.3, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge17 = phi i64 [ 0, %for.body.lr.ph ], [ %.105, %for.body ]
  %.92 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.91, align 8
  %.93 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.92, i64 0, i32 5
  %.94 = load %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)*, %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)** %.93, align 8
  %.95 = call %LLVMValueRef.580455* %.94(%"Array<LLVMValueRef>.580505"* %.3, i64 %storemerge17)
  %.97 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.39, align 8
  %.98 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.97, i64 0, i32 2
  %.99 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.98, align 8
  call void %.99(%"Array<LLVMValueRef>.580505"* %.38, %LLVMValueRef.580455* %.95)
  %.105 = add nuw nsw i64 %storemerge17, 1
  %.85 = load i64, i64* %.84, align 8
  %.86 = icmp slt i64 %.105, %.85
  br i1 %.86, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %.110 = getelementptr inbounds %IntrinsicResult.580485, %IntrinsicResult.580485* %.77, i64 0, i32 2
  %.111 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.110, align 8
  %.113 = getelementptr inbounds %IntrinsicResult.580485, %IntrinsicResult.580485* %.77, i64 0, i32 1
  %.114 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.113, align 8
  %12 = bitcast i8* %.41 to %LLVMValueRef.580455***
  %.117 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %12, align 8
  %.120 = load i64, i64* %2, align 8
  %.121 = call %LLVMValueRef.580455* @LLVMBuildCall2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.111, %LLVMValueRef.580455* %.114, %LLVMValueRef.580455** %.117, i64 %.120, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  %.126 = call %LLVMValueRef.580455* @LLVMBuildArrayAlloca(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.12, %LLVMValueRef.580455* %.121, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  %.1284.cast = ptrtoint %LLVMValueRef.580455* %.126 to i64
  %.130 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %13 = bitcast i8* %.130 to i64*
  store i64 %.1284.cast, i64* %13, align 8
  %.134 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %"Array<LLVMValueRef>.580505"*
  %.136 = bitcast i8* %.134 to %"Array<LLVMValueRef>_vtable_ty.580506"**
  store %"Array<LLVMValueRef>_vtable_ty.580506"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.580506"** %.136, align 8
  %.138 = getelementptr inbounds i8, i8* %.134, i64 8
  %14 = bitcast i8* %.138 to i8**
  store i8* %.130, i8** %14, align 8
  %.140 = getelementptr inbounds i8, i8* %.134, i64 16
  %15 = bitcast i8* %.140 to i64*
  store i64 1, i64* %15, align 8
  %.142 = getelementptr inbounds i8, i8* %.134, i64 24
  %16 = bitcast i8* %.142 to i64*
  store i64 8, i64* %16, align 8
  %.15112 = load i64, i64* %.84, align 8
  %.15213 = icmp sgt i64 %.15112, 0
  br i1 %.15213, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.end
  %.157 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.3, i64 0, i32 0
  br label %for.body.1

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %storemerge514 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.171, %for.body.1 ]
  %.158 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.157, align 8
  %.159 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.158, i64 0, i32 5
  %.160 = load %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)*, %LLVMValueRef.580455* (%"Array<LLVMValueRef>.580505"*, i64)** %.159, align 8
  %.161 = call %LLVMValueRef.580455* %.160(%"Array<LLVMValueRef>.580505"* %.3, i64 %storemerge514)
  %.163 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.136, align 8
  %.164 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.163, i64 0, i32 2
  %.165 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.164, align 8
  call void %.165(%"Array<LLVMValueRef>.580505"* %.135, %LLVMValueRef.580455* %.161)
  %.171 = add nuw nsw i64 %storemerge514, 1
  %.151 = load i64, i64* %.84, align 8
  %.152 = icmp slt i64 %.171, %.151
  br i1 %.152, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.end
  %.176 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.49, align 8
  %.177 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.178 = bitcast i8* %.177 to %string.580129*
  %.178.repack = bitcast i8* %.177 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.178.repack, align 8
  %.178.repack6 = getelementptr inbounds i8, i8* %.177, i64 8
  %17 = bitcast i8* %.178.repack6 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.371, i64 0, i64 0), i8** %17, align 8
  %.178.repack7 = getelementptr inbounds i8, i8* %.177, i64 16
  %18 = bitcast i8* %.178.repack7 to i64*
  store i64 7, i64* %18, align 8
  %.178.repack8 = getelementptr inbounds i8, i8* %.177, i64 24
  %19 = bitcast i8* %.178.repack8 to i64*
  store i64 7, i64* %19, align 8
  %.183 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.184 = bitcast i8* %.183 to %LLVMTypeRef.580454**
  store %LLVMTypeRef.580454* %.15, %LLVMTypeRef.580454** %.184, align 8
  %.187 = getelementptr inbounds i8, i8* %.183, i64 8
  %20 = bitcast i8* %.187 to %LLVMTypeRef.580454**
  store %LLVMTypeRef.580454* %.15, %LLVMTypeRef.580454** %20, align 8
  %.189 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.190 = bitcast i8* %.189 to %"Array<LLVMTypeRef>.580503"*
  %.191 = bitcast i8* %.189 to %"Array<LLVMTypeRef>_vtable_ty.580504"**
  store %"Array<LLVMTypeRef>_vtable_ty.580504"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.580504"** %.191, align 8
  %.193 = getelementptr inbounds i8, i8* %.189, i64 8
  %21 = bitcast i8* %.193 to i8**
  store i8* %.183, i8** %21, align 8
  %.195 = getelementptr inbounds i8, i8* %.189, i64 16
  %22 = bitcast i8* %.195 to i64*
  store i64 2, i64* %22, align 8
  %.197 = getelementptr inbounds i8, i8* %.189, i64 24
  %23 = bitcast i8* %.197 to i64*
  store i64 16, i64* %23, align 8
  %.200 = call %IntrinsicResult.580485* @get_intrinsic(%LLVMModuleRef.580453* %.176, %string.580129* %.178, %"Array<LLVMTypeRef>.580503"* %.190, %LLVMTypeRef.580454* %.20, i1 true)
  %.204 = getelementptr inbounds %IntrinsicResult.580485, %IntrinsicResult.580485* %.200, i64 0, i32 2
  %.205 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.204, align 8
  %.207 = getelementptr inbounds %IntrinsicResult.580485, %IntrinsicResult.580485* %.200, i64 0, i32 1
  %.208 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.207, align 8
  %24 = bitcast i8* %.138 to %LLVMValueRef.580455***
  %.211 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %24, align 8
  %.214 = load i64, i64* %15, align 8
  %.215 = call %LLVMValueRef.580455* @LLVMBuildCall2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.205, %LLVMValueRef.580455* %.208, %LLVMValueRef.580455** %.211, i64 %.214, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.126
}

define %LLVMValueRef.580455* @CodeGen_codegen_string(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %StringExpression.580309* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %StringExpression.580309, %StringExpression.580309* %.3, i64 0, i32 5
  %.11 = load %string.580129*, %string.580129** %.10, align 8
  %.14 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %"Array<LLVMValueRef>.580505"*
  %.18 = bitcast i8* %.16 to %"Array<LLVMValueRef>_vtable_ty.580506"**
  store %"Array<LLVMValueRef>_vtable_ty.580506"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.580506"** %.18, align 8
  %.20 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.20 to i8**
  store i8* %.14, i8** %0, align 8
  %.22 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.22 to i64*
  store i64 0, i64* %1, align 8
  %.24 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.24 to i64*
  store i64 8, i64* %2, align 8
  %.31 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** getelementptr inbounds (%"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* @"Array<LLVMValueRef>_vtable_data", i64 0, i32 2), align 16
  call void %.31(%"Array<LLVMValueRef>.580505"* %.17, %LLVMValueRef.580455* null)
  %.38 = getelementptr inbounds %StringExpression.580309, %StringExpression.580309* %.3, i64 0, i32 6
  %.396 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %.38, align 8
  %.407 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.396, i64 0, i32 2
  %.418 = load i64, i64* %.407, align 8
  %.429 = icmp sgt i64 %.418, 0
  br i1 %.429, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.59 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.3912 = phi %"Array<Expression>.580311"* [ %.396, %for.body.lr.ph ], [ %.39, %for.body ]
  %str_value.011 = phi %string.580129* [ %.11, %for.body.lr.ph ], [ %.88, %for.body ]
  %storemerge10 = phi i64 [ 0, %for.body.lr.ph ], [ %.94, %for.body ]
  %.48 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.3912, i64 0, i32 0
  %.49 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.48, align 8
  %.50 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.49, i64 0, i32 5
  %.51 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.50, align 8
  %.52 = call %Expression.580293* %.51(%"Array<Expression>.580311"* %.3912, i64 %storemerge10)
  %.53 = getelementptr inbounds %Expression.580293, %Expression.580293* %.52, i64 0, i32 4
  %.54 = load %Type.580273*, %Type.580273** %.53, align 8
  %.55 = call %string.580129* @get_format_from_type(%Type.580273* %.54)
  %.60 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.59, align 8
  %.61 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.60, i64 0, i32 39
  %.62 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.61, align 8
  %.67 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %.38, align 8
  %.68 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.67, i64 0, i32 0
  %.69 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.68, align 8
  %.70 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.69, i64 0, i32 5
  %.71 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.70, align 8
  %.72 = call %Expression.580293* %.71(%"Array<Expression>.580311"* %.67, i64 %storemerge10)
  %.73 = call %LLVMValueRef.580455* %.62(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.72)
  %.75 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.18, align 8
  %.76 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.75, i64 0, i32 2
  %.77 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.76, align 8
  call void %.77(%"Array<LLVMValueRef>.580505"* %.17, %LLVMValueRef.580455* %.73)
  %.80 = getelementptr inbounds %string.580129, %string.580129* %str_value.011, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 9
  %.83 = load %string.580129* (%string.580129*, %string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*, %string.580129*)** %.82, align 8
  %.84 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.85 = bitcast i8* %.84 to %string.580129*
  %.85.repack = bitcast i8* %.84 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.85.repack, align 8
  %.85.repack1 = getelementptr inbounds i8, i8* %.84, i64 8
  %3 = bitcast i8* %.85.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.372, i64 0, i64 0), i8** %3, align 8
  %.85.repack2 = getelementptr inbounds i8, i8* %.84, i64 16
  %4 = bitcast i8* %.85.repack2 to i64*
  store i64 1, i64* %4, align 8
  %.85.repack3 = getelementptr inbounds i8, i8* %.84, i64 24
  %5 = bitcast i8* %.85.repack3 to i64*
  store i64 1, i64* %5, align 8
  %.88 = call %string.580129* %.83(%string.580129* %str_value.011, %string.580129* %.85, %string.580129* %.55)
  %.94 = add nuw nsw i64 %storemerge10, 1
  %.39 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %.38, align 8
  %.40 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.39, i64 0, i32 2
  %.41 = load i64, i64* %.40, align 8
  %.42 = icmp slt i64 %.94, %.41
  br i1 %.42, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %str_value.0.lcssa = phi %string.580129* [ %.11, %.5 ], [ %.88, %for.body ]
  %.98 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 5
  %.99 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.98, align 8
  %.100 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.99, i64 0, i32 0
  %.101 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.100, align 8
  %.102 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.101, i64 0, i32 3
  %.103 = load %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)** %.102, align 8
  %.105 = call %LLVMValueRef.580455* %.103(%"Map<string, LLVMValueRef>.580490"* %.99, %string.580129* %str_value.0.lcssa)
  %str = alloca %LLVMValueRef.580455*, align 8
  store %LLVMValueRef.580455* %.105, %LLVMValueRef.580455** %str, align 8
  %6 = ptrtoint %LLVMValueRef.580455* %.105 to i64
  %.108 = trunc i64 %6 to i32
  %.110 = icmp eq i32 %.108, 0
  br i1 %.110, label %for.end.if, label %for.end.endif

for.end.if:                                       ; preds = %for.end
  %.114 = getelementptr inbounds %string.580129, %string.580129* %str_value.0.lcssa, i64 0, i32 0
  %.115 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.114, align 8
  %.116 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.115, i64 0, i32 10
  %.117 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.116, align 8
  %.118 = call i8* %.117(%string.580129* %str_value.0.lcssa)
  %.119 = call %LLVMValueRef.580455* @LLVMBuildGlobalString(%LLVMBuilderRef.580460* %.2, i8* %.118, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  store %LLVMValueRef.580455* %.119, %LLVMValueRef.580455** %str, align 8
  br label %for.end.endif

for.end.endif:                                    ; preds = %for.end.if, %for.end
  %.124 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.98, align 8
  %.125 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.124, i64 0, i32 0
  %.126 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.125, align 8
  %.127 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.126, i64 0, i32 3
  %.128 = load %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)** %.127, align 8
  %.130 = call %LLVMValueRef.580455* %.128(%"Map<string, LLVMValueRef>.580490"* %.124, %string.580129* %str_value.0.lcssa)
  %7 = ptrtoint %LLVMValueRef.580455* %.130 to i64
  %.133 = trunc i64 %7 to i32
  %.135.not = icmp eq i32 %.133, 0
  br i1 %.135.not, label %for.end.endif.endif, label %for.end.endif.if

for.end.endif.if:                                 ; preds = %for.end.endif.endif, %for.end.endif
  %merge = phi %LLVMValueRef.580455* [ %.130, %for.end.endif ], [ %.147, %for.end.endif.endif ]
  ret %LLVMValueRef.580455* %merge

for.end.endif.endif:                              ; preds = %for.end.endif
  %.141 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.98, align 8
  %.142 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.141, i64 0, i32 0
  %.143 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.142, align 8
  %.144 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.143, i64 0, i32 2
  %.145 = load void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)*, void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)** %.144, align 8
  %.147 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %str, align 8
  call void %.145(%"Map<string, LLVMValueRef>.580490"* %.141, %string.580129* %str_value.0.lcssa, %LLVMValueRef.580455* %.147)
  %.151 = load i64, i64* %1, align 8
  %.152 = icmp sgt i64 %.151, 1
  br i1 %.152, label %for.end.endif.endif.if, label %for.end.endif.if

for.end.endif.endif.if:                           ; preds = %for.end.endif.endif
  %.157 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.18, align 8
  %.158 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.157, i64 0, i32 3
  %.159 = load void (%"Array<LLVMValueRef>.580505"*, i64, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, i64, %LLVMValueRef.580455*)** %.158, align 8
  call void %.159(%"Array<LLVMValueRef>.580505"* %.17, i64 0, %LLVMValueRef.580455* %.147)
  %.162 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.163 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.162, align 8
  %.164 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.163, i64 0, i32 18
  %.165 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %"Array<LLVMValueRef>.580505"*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %"Array<LLVMValueRef>.580505"*)** %.164, align 8
  %.168 = call %LLVMValueRef.580455* %.165(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %"Array<LLVMValueRef>.580505"* %.17)
  ret %LLVMValueRef.580455* %.168
}

define %LLVMValueRef.580455* @CodeGen_store_array_elements(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.3, %ArrayExpression.580315* nocapture readonly %.4) {
.6:
  %.12 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.13 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.12, align 8
  %.14 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.13, i64 0, i32 11
  %.15 = load %LLVMValueRef.580455* (%CodeGen.580507*, i64)*, %LLVMValueRef.580455* (%CodeGen.580507*, i64)** %.14, align 8
  %.16 = call %LLVMValueRef.580455* %.15(%CodeGen.580507* %.1, i64 0)
  %args = alloca [2 x %LLVMValueRef.580455*], align 8
  %.20 = getelementptr inbounds [2 x %LLVMValueRef.580455*], [2 x %LLVMValueRef.580455*]* %args, i64 0, i64 0
  store %LLVMValueRef.580455* %.16, %LLVMValueRef.580455** %.20, align 8
  %.22 = getelementptr inbounds [2 x %LLVMValueRef.580455*], [2 x %LLVMValueRef.580455*]* %args, i64 0, i64 1
  store %LLVMValueRef.580455* %.16, %LLVMValueRef.580455** %.22, align 8
  %.26 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.12, align 8
  %.27 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.26, i64 0, i32 11
  %.28 = load %LLVMValueRef.580455* (%CodeGen.580507*, i64)*, %LLVMValueRef.580455* (%CodeGen.580507*, i64)** %.27, align 8
  %.29 = call %LLVMValueRef.580455* %.28(%CodeGen.580507* %.1, i64 1)
  %next_args = alloca [1 x %LLVMValueRef.580455*], align 8
  %.30 = getelementptr inbounds [1 x %LLVMValueRef.580455*], [1 x %LLVMValueRef.580455*]* %next_args, i64 0, i64 0
  store %LLVMValueRef.580455* %.29, %LLVMValueRef.580455** %.30, align 8
  %.34 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.12, align 8
  %.35 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.34, i64 0, i32 13
  %.36 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.35, align 8
  %.38 = getelementptr inbounds %ArrayExpression.580315, %ArrayExpression.580315* %.4, i64 0, i32 4
  %.39 = load %Type.580273*, %Type.580273** %.38, align 8
  %.40 = call %LLVMTypeRef.580454* %.36(%CodeGen.580507* %.1, %Type.580273* %.39, i1 true)
  %.44 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.12, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.44, i64 0, i32 13
  %.46 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.45, align 8
  %0 = bitcast %Type.580273** %.38 to %ArrayType.580295**
  %.491 = load %ArrayType.580295*, %ArrayType.580295** %0, align 8
  %.51 = getelementptr inbounds %ArrayType.580295, %ArrayType.580295* %.491, i64 0, i32 2
  %.52 = load %Type.580273*, %Type.580273** %.51, align 8
  %.53 = call %LLVMTypeRef.580454* %.46(%CodeGen.580507* %.1, %Type.580273* %.52, i1 true)
  %.54 = call %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454* %.53, i64 0)
  %.61 = call %LLVMValueRef.580455* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.40, %LLVMValueRef.580455* %.3, %LLVMValueRef.580455** nonnull %.20, i64 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  %.68 = getelementptr inbounds %ArrayExpression.580315, %ArrayExpression.580315* %.4, i64 0, i32 5
  %.693 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %.68, align 8
  %.704 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.693, i64 0, i32 2
  %.715 = load i64, i64* %.704, align 8
  %.726 = icmp sgt i64 %.715, 0
  br i1 %.726, label %for.body, label %for.end

for.body:                                         ; preds = %.6, %for.body
  %.699 = phi %"Array<Expression>.580311"* [ %.69, %for.body ], [ %.693, %.6 ]
  %addr.08 = phi %LLVMValueRef.580455* [ %.98, %for.body ], [ %.61, %.6 ]
  %storemerge7 = phi i64 [ %.104, %for.body ], [ 0, %.6 ]
  %.77 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.12, align 8
  %.78 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.77, i64 0, i32 39
  %.79 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.78, align 8
  %.85 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.699, i64 0, i32 0
  %.86 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.85, align 8
  %.87 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.86, i64 0, i32 5
  %.88 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.87, align 8
  %.89 = call %Expression.580293* %.88(%"Array<Expression>.580311"* %.699, i64 %storemerge7)
  %.90 = call %LLVMValueRef.580455* %.79(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.89)
  %.92 = call %LLVMValueRef.580455* @LLVMBuildStore(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.90, %LLVMValueRef.580455* %addr.08)
  %.98 = call %LLVMValueRef.580455* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.54, %LLVMValueRef.580455* %addr.08, %LLVMValueRef.580455** nonnull %.30, i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  %.104 = add nuw nsw i64 %storemerge7, 1
  %.69 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %.68, align 8
  %.70 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.69, i64 0, i32 2
  %.71 = load i64, i64* %.70, align 8
  %.72 = icmp slt i64 %.104, %.71
  br i1 %.72, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.6
  %addr.0.lcssa = phi %LLVMValueRef.580455* [ %.61, %.6 ], [ %.98, %for.body ]
  ret %LLVMValueRef.580455* %addr.0.lcssa
}

define %LLVMValueRef.580455* @CodeGen_codegen_array_exp(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %ArrayExpression.580315* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.11, i64 0, i32 13
  %.13 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.12, align 8
  %.15 = getelementptr inbounds %ArrayExpression.580315, %ArrayExpression.580315* %.3, i64 0, i32 4
  %0 = bitcast %Type.580273** %.15 to %ArrayType.580295**
  %.161 = load %ArrayType.580295*, %ArrayType.580295** %0, align 8
  %.18 = getelementptr inbounds %ArrayType.580295, %ArrayType.580295* %.161, i64 0, i32 2
  %.19 = load %Type.580273*, %Type.580273** %.18, align 8
  %.20 = call %LLVMTypeRef.580454* %.13(%CodeGen.580507* %.1, %Type.580273* %.19, i1 true)
  %.23 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.26 = bitcast i8* %.25 to %"Array<LLVMValueRef>.580505"*
  %.27 = bitcast i8* %.25 to %"Array<LLVMValueRef>_vtable_ty.580506"**
  store %"Array<LLVMValueRef>_vtable_ty.580506"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.580506"** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %1 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %1, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %2 = bitcast i8* %.31 to i64*
  store i64 0, i64* %2, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %3 = bitcast i8* %.33 to i64*
  store i64 8, i64* %3, align 8
  %.41 = getelementptr inbounds %ArrayExpression.580315, %ArrayExpression.580315* %.3, i64 0, i32 5
  %.423 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %.41, align 8
  %.434 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.423, i64 0, i32 2
  %.445 = load i64, i64* %.434, align 8
  %.456 = icmp sgt i64 %.445, 0
  br i1 %.456, label %for.body, label %for.end

for.body:                                         ; preds = %.5, %for.body
  %.428 = phi %"Array<Expression>.580311"* [ %.42, %for.body ], [ %.423, %.5 ]
  %storemerge7 = phi i64 [ %.73, %for.body ], [ 0, %.5 ]
  %.50 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.51 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.50, i64 0, i32 39
  %.52 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.51, align 8
  %.58 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.428, i64 0, i32 0
  %.59 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.58, align 8
  %.60 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.59, i64 0, i32 5
  %.61 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.60, align 8
  %.62 = call %Expression.580293* %.61(%"Array<Expression>.580311"* %.428, i64 %storemerge7)
  %.63 = call %LLVMValueRef.580455* %.52(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.62)
  %.65 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.27, align 8
  %.66 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.66, align 8
  call void %.67(%"Array<LLVMValueRef>.580505"* %.26, %LLVMValueRef.580455* %.63)
  %.73 = add nuw nsw i64 %storemerge7, 1
  %.42 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %.41, align 8
  %.43 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.42, i64 0, i32 2
  %.44 = load i64, i64* %.43, align 8
  %.45 = icmp slt i64 %.73, %.44
  br i1 %.45, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %4 = bitcast i8* %.29 to %LLVMValueRef.580455***
  %.79 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %4, align 8
  %.82 = load i64, i64* %2, align 8
  %.83 = call %LLVMValueRef.580455* @LLVMConstArray(%LLVMTypeRef.580454* %.20, %LLVMValueRef.580455** %.79, i64 %.82)
  ret %LLVMValueRef.580455* %.83
}

define %LLVMValueRef.580455* @CodeGen_get_var_expr_mem(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* nocapture readnone %.2, %VarAccessExpression.580343* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.11, i64 0, i32 2
  %.13 = load %LLVMValueRef.580455* (%CodeGen.580507*, %VarId.580331*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %VarId.580331*)** %.12, align 8
  %.15 = getelementptr inbounds %VarAccessExpression.580343, %VarAccessExpression.580343* %.3, i64 0, i32 5
  %.16 = load %VarId.580331*, %VarId.580331** %.15, align 8
  %.17 = call %LLVMValueRef.580455* %.13(%CodeGen.580507* %.1, %VarId.580331* %.16)
  %0 = ptrtoint %LLVMValueRef.580455* %.17 to i64
  %.20 = trunc i64 %0 to i32
  %.22 = icmp eq i32 %.20, 0
  br i1 %.22, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.25.repack = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.25.repack, align 8
  %.25.repack1 = getelementptr inbounds i8, i8* %.24, i64 8
  %1 = bitcast i8* %.25.repack1 to i8**
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.373, i64 0, i64 0), i8** %1, align 8
  %.25.repack2 = getelementptr inbounds i8, i8* %.24, i64 16
  %2 = bitcast i8* %.25.repack2 to i64*
  store i64 45, i64* %2, align 8
  %.25.repack3 = getelementptr inbounds i8, i8* %.24, i64 24
  %3 = bitcast i8* %.25.repack3 to i64*
  store i64 45, i64* %3, align 8
  %.30 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.31 = call i8* %.30(%string.580129* %.25)
  %.32 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret %LLVMValueRef.580455* %.17
}

define %LLVMValueRef.580455* @CodeGen_get_index_expr_mem(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %IndexExpression.580327* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.11, i64 0, i32 39
  %.13 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.12, align 8
  %.16 = getelementptr inbounds %IndexExpression.580327, %IndexExpression.580327* %.3, i64 0, i32 6
  %.17 = load %Expression.580293*, %Expression.580293** %.16, align 8
  %.18 = call %LLVMValueRef.580455* %.13(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.17)
  %.22 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.22, i64 0, i32 13
  %.24 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.23, align 8
  %.26 = getelementptr inbounds %IndexExpression.580327, %IndexExpression.580327* %.3, i64 0, i32 5
  %.27 = load %Expression.580293*, %Expression.580293** %.26, align 8
  %.28 = getelementptr inbounds %Expression.580293, %Expression.580293* %.27, i64 0, i32 4
  %.29 = load %Type.580273*, %Type.580273** %.28, align 8
  %.30 = call %LLVMTypeRef.580454* %.24(%CodeGen.580507* %.1, %Type.580273* %.29, i1 true)
  %.35 = load %Expression.580293*, %Expression.580293** %.26, align 8
  %.36 = getelementptr inbounds %Expression.580293, %Expression.580293* %.35, i64 0, i32 4
  %.37 = load %Type.580273*, %Type.580273** %.36, align 8
  %.38 = getelementptr inbounds %Type.580273, %Type.580273* %.37, i64 0, i32 1
  %.39 = load i64, i64* %.38, align 8
  %.40 = icmp eq i64 %.39, 16
  br i1 %.40, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.44 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.44, i64 0, i32 11
  %.46 = load %LLVMValueRef.580455* (%CodeGen.580507*, i64)*, %LLVMValueRef.580455* (%CodeGen.580507*, i64)** %.45, align 8
  %.47 = call %LLVMValueRef.580455* %.46(%CodeGen.580507* %.1, i64 0)
  %indices = alloca [2 x %LLVMValueRef.580455*], align 8
  %.49 = getelementptr inbounds [2 x %LLVMValueRef.580455*], [2 x %LLVMValueRef.580455*]* %indices, i64 0, i64 0
  store %LLVMValueRef.580455* %.47, %LLVMValueRef.580455** %.49, align 8
  %.51 = getelementptr inbounds [2 x %LLVMValueRef.580455*], [2 x %LLVMValueRef.580455*]* %indices, i64 0, i64 1
  store %LLVMValueRef.580455* %.18, %LLVMValueRef.580455** %.51, align 8
  %.55 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.56 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.55, i64 0, i32 25
  %.57 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.56, align 8
  %.61 = load %Expression.580293*, %Expression.580293** %.26, align 8
  %.62 = call %LLVMValueRef.580455* %.57(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.61)
  %.69 = call %LLVMValueRef.580455* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.30, %LLVMValueRef.580455* %.62, %LLVMValueRef.580455** nonnull %.49, i64 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.374, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.69

.5.endif:                                         ; preds = %.5
  %indices_1 = alloca [1 x %LLVMValueRef.580455*], align 8
  %.72 = getelementptr inbounds [1 x %LLVMValueRef.580455*], [1 x %LLVMValueRef.580455*]* %indices_1, i64 0, i64 0
  store %LLVMValueRef.580455* %.18, %LLVMValueRef.580455** %.72, align 8
  %.76 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.77 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.76, i64 0, i32 39
  %.78 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.77, align 8
  %.83 = call %LLVMValueRef.580455* %.78(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.35)
  %.90 = call %LLVMValueRef.580455* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.30, %LLVMValueRef.580455* %.83, %LLVMValueRef.580455** nonnull %.72, i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.375, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.90
}

define %LLVMValueRef.580455* @CodeGen_get_member_expr_mem(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %MemberExpression.580341* nocapture readonly %.3, %LLVMValueRef.580455* %.4) {
.6:
  %.12 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.13 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.12, align 8
  %.14 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.13, i64 0, i32 3
  %.15 = load %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)*, %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)** %.14, align 8
  %.17 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.3, i64 0, i32 6
  %.18 = load %PropId.580339*, %PropId.580339** %.17, align 8
  %.19 = getelementptr inbounds %PropId.580339, %PropId.580339* %.18, i64 0, i32 2
  %.20 = load %TypeId.580287*, %TypeId.580287** %.19, align 8
  %.21 = call %CGClassType.580487* %.15(%CodeGen.580507* %.1, %TypeId.580287* %.20)
  %.24 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.3, i64 0, i32 4
  %.25 = load %Type.580273*, %Type.580273** %.24, align 8
  %.26 = getelementptr inbounds %Type.580273, %Type.580273* %.25, i64 0, i32 1
  %.27 = load i64, i64* %.26, align 8
  %.28.not = icmp eq i64 %.27, 17
  %.32 = load %PropId.580339*, %PropId.580339** %.17, align 8
  %.33 = call %string.580129* @create_prop_key(%PropId.580339* %.32)
  %.36 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.21, i64 0, i32 1
  %.37 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.36, align 8
  %.38 = call %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454* %.37, i64 0)
  %.41 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.21, i64 0, i32 4
  %.42 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.41, align 8
  %.43 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.42, i64 0, i32 0
  %.44 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.43, align 8
  %.45 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.44, i64 0, i32 3
  %.46 = load %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)** %.45, align 8
  %.48 = call %LLVMValueRef.580455* %.46(%"Map<string, LLVMValueRef>.580490"* %.42, %string.580129* %.33)
  %0 = ptrtoint %LLVMValueRef.580455* %.48 to i64
  %.51 = trunc i64 %0 to i32
  %.53.not = icmp eq i32 %.51, 0
  br i1 %.53.not, label %.6.endif, label %.6.if

.6.if:                                            ; preds = %.6
  ret %LLVMValueRef.580455* %.48

.6.endif:                                         ; preds = %.6
  %1 = ptrtoint %LLVMValueRef.580455* %.4 to i64
  %.58 = trunc i64 %1 to i32
  %.60 = icmp eq i32 %.58, 0
  br i1 %.60, label %.6.endif.if, label %.6.endif.endif

.6.endif.if:                                      ; preds = %.6.endif
  %.64 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.12, align 8
  %.65 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.64, i64 0, i32 39
  %.66 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.65, align 8
  %.69 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.3, i64 0, i32 5
  %.70 = load %Expression.580293*, %Expression.580293** %.69, align 8
  %.71 = call %LLVMValueRef.580455* %.66(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.70)
  br label %.6.endif.endif

.6.endif.endif:                                   ; preds = %.6.endif.if, %.6.endif
  %ptr.0 = phi %LLVMValueRef.580455* [ %.71, %.6.endif.if ], [ %.4, %.6.endif ]
  %.75 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.77 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.77 to %"Array<LLVMValueRef>_vtable_ty.580506"**
  store %"Array<LLVMValueRef>_vtable_ty.580506"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.580506"** %.79, align 8
  %.81 = getelementptr inbounds i8, i8* %.77, i64 8
  %2 = bitcast i8* %.81 to i8**
  store i8* %.75, i8** %2, align 8
  %.83 = getelementptr inbounds i8, i8* %.77, i64 16
  %3 = bitcast i8* %.83 to i64*
  store i64 0, i64* %3, align 8
  %.85 = getelementptr inbounds i8, i8* %.77, i64 24
  %4 = bitcast i8* %.85 to i64*
  store i64 8, i64* %4, align 8
  %indices = alloca %"Array<LLVMValueRef>.580505"*, align 8
  %5 = bitcast %"Array<LLVMValueRef>.580505"** %indices to i8**
  store i8* %.77, i8** %5, align 8
  br i1 %.28.not, label %.6.endif.endif.else, label %.6.endif.endif.if

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.92 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.21, i64 0, i32 6
  %6 = bitcast %LLVMTypeRef.580454** %.92 to i64*
  %.931 = load i64, i64* %6, align 8
  %.94 = trunc i64 %.931 to i32
  %.96 = icmp ne i32 %.94, 0
  %. = zext i1 %.96 to i64
  %.102 = load %"Array<LLVMValueRef>.580505"*, %"Array<LLVMValueRef>.580505"** %indices, align 8
  %.105 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.12, align 8
  %.106 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.105, i64 0, i32 11
  %.107 = load %LLVMValueRef.580455* (%CodeGen.580507*, i64)*, %LLVMValueRef.580455* (%CodeGen.580507*, i64)** %.106, align 8
  %.109 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.21, i64 0, i32 3
  %.110 = load %"Map<string, int>.580489"*, %"Map<string, int>.580489"** %.109, align 8
  %.111 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.110, i64 0, i32 0
  %.112 = load %"Map<string, int>_vtable_ty.580491"*, %"Map<string, int>_vtable_ty.580491"** %.111, align 8
  %.113 = getelementptr inbounds %"Map<string, int>_vtable_ty.580491", %"Map<string, int>_vtable_ty.580491"* %.112, i64 0, i32 3
  %.114 = load i64 (%"Map<string, int>.580489"*, %string.580129*)*, i64 (%"Map<string, int>.580489"*, %string.580129*)** %.113, align 8
  %.116 = call i64 %.114(%"Map<string, int>.580489"* %.110, %string.580129* %.33)
  %.118 = add i64 %.116, %.
  %.119 = call %LLVMValueRef.580455* %.107(%CodeGen.580507* %.1, i64 %.118)
  %.120 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.102, i64 0, i32 0
  %.121 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.120, align 8
  %.122 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.121, i64 0, i32 2
  %.123 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.122, align 8
  call void %.123(%"Array<LLVMValueRef>.580505"* %.102, %LLVMValueRef.580455* %.119)
  br label %.6.endif.endif.endif

.6.endif.endif.else:                              ; preds = %.6.endif.endif
  %.126 = load %"Array<LLVMValueRef>.580505"*, %"Array<LLVMValueRef>.580505"** %indices, align 8
  %.129 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.12, align 8
  %.130 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.129, i64 0, i32 11
  %.131 = load %LLVMValueRef.580455* (%CodeGen.580507*, i64)*, %LLVMValueRef.580455* (%CodeGen.580507*, i64)** %.130, align 8
  %.132 = call %LLVMValueRef.580455* %.131(%CodeGen.580507* %.1, i64 0)
  %.133 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.126, i64 0, i32 0
  %.134 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.133, align 8
  %.135 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.134, i64 0, i32 2
  %.136 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.135, align 8
  call void %.136(%"Array<LLVMValueRef>.580505"* %.126, %LLVMValueRef.580455* %.132)
  %.142 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.126, i64 0, i32 1
  %.143 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %.142, align 8
  %.145 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.126, i64 0, i32 2
  %.146 = load i64, i64* %.145, align 8
  %.147 = call %LLVMValueRef.580455* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.38, %LLVMValueRef.580455* %ptr.0, %LLVMValueRef.580455** %.143, i64 %.146, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  %.151 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.21, i64 0, i32 6
  %.152 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.151, align 8
  %.153 = call %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454* %.152, i64 0)
  %.155 = call %LLVMValueRef.580455* @LLVMBuildLoad2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.153, %LLVMValueRef.580455* %.147, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  %.160 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.12, align 8
  %.161 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.160, i64 0, i32 11
  %.162 = load %LLVMValueRef.580455* (%CodeGen.580507*, i64)*, %LLVMValueRef.580455* (%CodeGen.580507*, i64)** %.161, align 8
  %.164 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.21, i64 0, i32 2
  %.165 = load %"Map<string, int>.580489"*, %"Map<string, int>.580489"** %.164, align 8
  %.166 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.165, i64 0, i32 0
  %.167 = load %"Map<string, int>_vtable_ty.580491"*, %"Map<string, int>_vtable_ty.580491"** %.166, align 8
  %.168 = getelementptr inbounds %"Map<string, int>_vtable_ty.580491", %"Map<string, int>_vtable_ty.580491"* %.167, i64 0, i32 3
  %.169 = load i64 (%"Map<string, int>.580489"*, %string.580129*)*, i64 (%"Map<string, int>.580489"*, %string.580129*)** %.168, align 8
  %.171 = call i64 %.169(%"Map<string, int>.580489"* %.165, %string.580129* %.33)
  %.172 = call %LLVMValueRef.580455* %.162(%CodeGen.580507* %.1, i64 %.171)
  %.174 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.133, align 8
  %.175 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.174, i64 0, i32 3
  %.176 = load void (%"Array<LLVMValueRef>.580505"*, i64, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, i64, %LLVMValueRef.580455*)** %.175, align 8
  call void %.176(%"Array<LLVMValueRef>.580505"* %.126, i64 0, %LLVMValueRef.580455* %.172)
  br label %.6.endif.endif.endif

.6.endif.endif.endif:                             ; preds = %.6.endif.endif.if, %.6.endif.endif.else
  %ptr.1 = phi %LLVMValueRef.580455* [ %ptr.0, %.6.endif.endif.if ], [ %.155, %.6.endif.endif.else ]
  %.182 = load %"Array<LLVMValueRef>.580505"*, %"Array<LLVMValueRef>.580505"** %indices, align 8
  %.183 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.182, i64 0, i32 1
  %.184 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %.183, align 8
  %.186 = getelementptr inbounds %"Array<LLVMValueRef>.580505", %"Array<LLVMValueRef>.580505"* %.182, i64 0, i32 2
  %.187 = load i64, i64* %.186, align 8
  %.188 = call %LLVMValueRef.580455* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.38, %LLVMValueRef.580455* %ptr.1, %LLVMValueRef.580455** %.184, i64 %.187, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.376, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.188
}

define %LLVMValueRef.580455* @CodeGen_get_expr_mem(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.580293, %Expression.580293* %.3, i64 0, i32 3
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif [
    i64 7, label %.5.if
    i64 13, label %.5.endif.if
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.16 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.15, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.16, i64 0, i32 22
  %.18 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarAccessExpression.580343*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarAccessExpression.580343*)** %.17, align 8
  %.21 = bitcast %Expression.580293* %.3 to %VarAccessExpression.580343*
  %.22 = call %LLVMValueRef.580455* %.18(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %VarAccessExpression.580343* %.21)
  ret %LLVMValueRef.580455* %.22

.5.endif.if:                                      ; preds = %.5
  %.30 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.31 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.30, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.31, i64 0, i32 23
  %.33 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IndexExpression.580327*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IndexExpression.580327*)** %.32, align 8
  %.36 = bitcast %Expression.580293* %.3 to %IndexExpression.580327*
  %.37 = call %LLVMValueRef.580455* %.33(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %IndexExpression.580327* %.36)
  ret %LLVMValueRef.580455* %.37

.5.endif.endif:                                   ; preds = %.5
  %.42 = icmp eq i64 %.11, 12
  %.45 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.46 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.45, align 8
  br i1 %.42, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.47 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.46, i64 0, i32 24
  %.48 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)** %.47, align 8
  %.51 = bitcast %Expression.580293* %.3 to %MemberExpression.580341*
  %.52 = call %LLVMValueRef.580455* %.48(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %MemberExpression.580341* %.51, %LLVMValueRef.580455* null)
  ret %LLVMValueRef.580455* %.52

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.57 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.46, i64 0, i32 39
  %.58 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.57, align 8
  %.61 = call %LLVMValueRef.580455* %.58(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.3)
  ret %LLVMValueRef.580455* %.61
}

define %LLVMValueRef.580455* @CodeGen_store_expr_to_mem(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.3, %Expression.580293* %.4) {
.6:
  %.12 = getelementptr inbounds %Expression.580293, %Expression.580293* %.4, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp eq i64 %.13, 6
  %.16 = getelementptr inbounds %Expression.580293, %Expression.580293* %.4, i64 0, i32 2
  %.17 = load i1, i1* %.16, align 1
  %.18 = xor i1 %.17, true
  %.19 = and i1 %.14, %.18
  %.22 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.23 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  br i1 %.19, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.23, i64 0, i32 20
  %.25 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %ArrayExpression.580315*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %ArrayExpression.580315*)** %.24, align 8
  %.29 = bitcast %Expression.580293* %.4 to %ArrayExpression.580315*
  %.30 = call %LLVMValueRef.580455* %.25(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.3, %ArrayExpression.580315* %.29)
  ret %LLVMValueRef.580455* %.30

.6.endif:                                         ; preds = %.6
  %.35 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.23, i64 0, i32 39
  %.36 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.35, align 8
  %.39 = call %LLVMValueRef.580455* %.36(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.4)
  %.44 = call %LLVMValueRef.580455* @LLVMBuildStore(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.39, %LLVMValueRef.580455* %.3)
  ret %LLVMValueRef.580455* %.39
}

define %LLVMValueRef.580455* @CodeGen_codegen_assignment(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %BinaryExpression.580317* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.11, i64 0, i32 25
  %.13 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.12, align 8
  %.16 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.3, i64 0, i32 5
  %.17 = load %Expression.580293*, %Expression.580293** %.16, align 8
  %.18 = call %LLVMValueRef.580455* %.13(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.17)
  %.22 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.22, i64 0, i32 26
  %.24 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %Expression.580293*)** %.23, align 8
  %.28 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.3, i64 0, i32 7
  %.29 = load %Expression.580293*, %Expression.580293** %.28, align 8
  %.30 = call %LLVMValueRef.580455* %.24(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.18, %Expression.580293* %.29)
  ret %LLVMValueRef.580455* %.30
}

define %LLVMValueRef.580455* @CodeGen_codegen_pow_expr(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Type.580273* %.3, %LLVMValueRef.580455* %.4, %LLVMValueRef.580455* %.5) {
.7:
  %args = alloca [2 x %LLVMValueRef.580455*], align 8
  %.15 = getelementptr inbounds [2 x %LLVMValueRef.580455*], [2 x %LLVMValueRef.580455*]* %args, i64 0, i64 0
  store %LLVMValueRef.580455* %.4, %LLVMValueRef.580455** %.15, align 8
  %.17 = getelementptr inbounds [2 x %LLVMValueRef.580455*], [2 x %LLVMValueRef.580455*]* %args, i64 0, i64 1
  store %LLVMValueRef.580455* %.5, %LLVMValueRef.580455** %.17, align 8
  %.20 = call %string.580129* @dump_type(%Type.580273* %.3, i1 true)
  %.21 = getelementptr inbounds %string.580129, %string.580129* %.20, i64 0, i32 0
  %.22 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.21, align 8
  %.23 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.22, i64 0, i32 10
  %.24 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.23, align 8
  %.25 = call i8* %.24(%string.580129* %.20)
  %.27 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.377, i64 0, i64 0), i8* %.25)
  %.29 = call i8* @malloc(i64 %.27)
  %.30 = call i64 (i8*, i8*, ...) @sprintf(i8* %.29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.377, i64 0, i64 0), i8* %.25)
  %.31 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.32 = bitcast i8* %.31 to %string.580129*
  %.33 = bitcast i8* %.31 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.33, align 8
  %.35 = getelementptr inbounds i8, i8* %.31, i64 8
  %0 = bitcast i8* %.35 to i8**
  store i8* %.29, i8** %0, align 8
  %.37 = getelementptr inbounds i8, i8* %.31, i64 16
  %1 = bitcast i8* %.37 to i64*
  store i64 %.27, i64* %1, align 8
  %.39 = getelementptr inbounds i8, i8* %.31, i64 24
  %2 = bitcast i8* %.39 to i64*
  store i64 %.27, i64* %2, align 8
  %.43 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.44 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.43, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.44, i64 0, i32 13
  %.46 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.45, align 8
  %.48 = call %LLVMTypeRef.580454* %.46(%CodeGen.580507* %.1, %Type.580273* %.3, i1 true)
  %.51 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 4
  %.52 = load %"Map<string, IntrinsicResult>.580510"*, %"Map<string, IntrinsicResult>.580510"** %.51, align 8
  %.53 = getelementptr inbounds %"Map<string, IntrinsicResult>.580510", %"Map<string, IntrinsicResult>.580510"* %.52, i64 0, i32 0
  %.54 = load %"Map<string, IntrinsicResult>_vtable_ty.580514"*, %"Map<string, IntrinsicResult>_vtable_ty.580514"** %.53, align 8
  %.55 = getelementptr inbounds %"Map<string, IntrinsicResult>_vtable_ty.580514", %"Map<string, IntrinsicResult>_vtable_ty.580514"* %.54, i64 0, i32 3
  %.56 = load %IntrinsicResult.580485* (%"Map<string, IntrinsicResult>.580510"*, %string.580129*)*, %IntrinsicResult.580485* (%"Map<string, IntrinsicResult>.580510"*, %string.580129*)** %.55, align 8
  %.58 = call %IntrinsicResult.580485* %.56(%"Map<string, IntrinsicResult>.580510"* %.52, %string.580129* %.32)
  %.61 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  %.62 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.61, align 8
  %.67 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.68 = bitcast i8* %.67 to %LLVMTypeRef.580454**
  store %LLVMTypeRef.580454* %.48, %LLVMTypeRef.580454** %.68, align 8
  %.71 = getelementptr inbounds i8, i8* %.67, i64 8
  %3 = bitcast i8* %.71 to %LLVMTypeRef.580454**
  store %LLVMTypeRef.580454* %.48, %LLVMTypeRef.580454** %3, align 8
  %.73 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.74 = bitcast i8* %.73 to %"Array<LLVMTypeRef>.580503"*
  %.75 = bitcast i8* %.73 to %"Array<LLVMTypeRef>_vtable_ty.580504"**
  store %"Array<LLVMTypeRef>_vtable_ty.580504"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.580504"** %.75, align 8
  %.77 = getelementptr inbounds i8, i8* %.73, i64 8
  %4 = bitcast i8* %.77 to i8**
  store i8* %.67, i8** %4, align 8
  %.79 = getelementptr inbounds i8, i8* %.73, i64 16
  %5 = bitcast i8* %.79 to i64*
  store i64 2, i64* %5, align 8
  %.81 = getelementptr inbounds i8, i8* %.73, i64 24
  %6 = bitcast i8* %.81 to i64*
  store i64 16, i64* %6, align 8
  %.84 = call %IntrinsicResult.580485* @get_intrinsic(%LLVMModuleRef.580453* %.62, %string.580129* %.32, %"Array<LLVMTypeRef>.580503"* %.74, %LLVMTypeRef.580454* %.48, i1 false)
  %.88 = getelementptr inbounds %IntrinsicResult.580485, %IntrinsicResult.580485* %.84, i64 0, i32 2
  %.89 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.88, align 8
  %.91 = getelementptr inbounds %IntrinsicResult.580485, %IntrinsicResult.580485* %.84, i64 0, i32 1
  %.92 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.91, align 8
  %.95 = call %LLVMValueRef.580455* @LLVMBuildCall2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.89, %LLVMValueRef.580455* %.92, %LLVMValueRef.580455** nonnull %.15, i64 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.95
}

define %LLVMValueRef.580455* @CodeGen_codegen_bin_exp(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %BinaryExpression.580317* %.3) {
.5:
  %.10 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.3, i64 0, i32 6
  %.11 = load i64, i64* %.10, align 8
  %.14 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.3, i64 0, i32 5
  %.15 = load %Expression.580293*, %Expression.580293** %.14, align 8
  %.16 = getelementptr inbounds %Expression.580293, %Expression.580293* %.15, i64 0, i32 4
  %0 = bitcast %Type.580273** %.16 to i64*
  %.171 = load i64, i64* %0, align 8
  %.19 = getelementptr inbounds %BinaryExpression.580317, %BinaryExpression.580317* %.3, i64 0, i32 7
  %.20 = load %Expression.580293*, %Expression.580293** %.19, align 8
  %.21 = getelementptr inbounds %Expression.580293, %Expression.580293* %.20, i64 0, i32 4
  %1 = bitcast %Type.580273** %.21 to i64*
  %.225 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.171 to i32
  %.24 = trunc i64 %.225 to i32
  %.25.not = icmp eq i32 %.23, %.24
  br i1 %.25.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  switch i64 %.11, label %.5.endif [
    i64 10, label %.5.if.if
    i64 11, label %.5.if.else.if
  ]

.5.endif:                                         ; preds = %.5.if, %.5
  %.50 = icmp eq i64 %.11, 18
  %.53 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.54 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.53, align 8
  br i1 %.50, label %.5.endif.if, label %.5.endif.endif

.5.if.if:                                         ; preds = %.5.if
  %.31 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.32 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.31, align 8
  %.33 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.32, i64 0, i32 10
  %.34 = load %LLVMValueRef.580455* (%CodeGen.580507*, i1)*, %LLVMValueRef.580455* (%CodeGen.580507*, i1)** %.33, align 8
  %.35 = call %LLVMValueRef.580455* %.34(%CodeGen.580507* %.1, i1 false)
  ret %LLVMValueRef.580455* %.35

.5.if.else.if:                                    ; preds = %.5.if
  %.41 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.42 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.41, align 8
  %.43 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.42, i64 0, i32 10
  %.44 = load %LLVMValueRef.580455* (%CodeGen.580507*, i1)*, %LLVMValueRef.580455* (%CodeGen.580507*, i1)** %.43, align 8
  %.45 = call %LLVMValueRef.580455* %.44(%CodeGen.580507* %.1, i1 true)
  ret %LLVMValueRef.580455* %.45

.5.endif.if:                                      ; preds = %.5.endif
  %.55 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.54, i64 0, i32 27
  %.56 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %BinaryExpression.580317*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %BinaryExpression.580317*)** %.55, align 8
  %.59 = call %LLVMValueRef.580455* %.56(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %BinaryExpression.580317* %.3)
  ret %LLVMValueRef.580455* %.59

.5.endif.endif:                                   ; preds = %.5.endif
  %.64 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.54, i64 0, i32 39
  %.65 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.64, align 8
  %.70 = call %LLVMValueRef.580455* %.65(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.15)
  %lhs = alloca %LLVMValueRef.580455*, align 8
  store %LLVMValueRef.580455* %.70, %LLVMValueRef.580455** %lhs, align 8
  %.74 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.53, align 8
  %.75 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.74, i64 0, i32 39
  %.76 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.75, align 8
  %.80 = load %Expression.580293*, %Expression.580293** %.19, align 8
  %.81 = call %LLVMValueRef.580455* %.76(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.80)
  %rhs = alloca %LLVMValueRef.580455*, align 8
  store %LLVMValueRef.580455* %.81, %LLVMValueRef.580455** %rhs, align 8
  %.85 = load %Expression.580293*, %Expression.580293** %.19, align 8
  %.86 = call i1 @is_null(%Expression.580293* %.85)
  %.88 = icmp eq i64 %.11, 10
  %.89 = and i1 %.88, %.86
  %.91 = icmp eq i64 %.11, 11
  %.92 = or i1 %.91, %.89
  br i1 %.92, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.94 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.95 = call i1 @LLVMIsConstant(%LLVMValueRef.580455* %.94)
  br i1 %.95, label %.5.endif.endif.if.if, label %.5.endif.endif.if.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.129 = load %Expression.580293*, %Expression.580293** %.14, align 8
  %.130 = getelementptr inbounds %Expression.580293, %Expression.580293* %.129, i64 0, i32 4
  %2 = bitcast %Type.580273** %.130 to i64*
  %.1316 = load i64, i64* %2, align 8
  %lty = alloca %Type.580273*, align 8
  %3 = bitcast %Type.580273** %lty to i64*
  store i64 %.1316, i64* %3, align 8
  %.136 = getelementptr inbounds %Expression.580293, %Expression.580293* %.85, i64 0, i32 4
  %4 = bitcast %Type.580273** %.136 to i64*
  %.1377 = load i64, i64* %4, align 8
  %rty = alloca %Type.580273*, align 8
  %5 = bitcast %Type.580273** %rty to i64*
  store i64 %.1377, i64* %5, align 8
  %.139.cast = inttoptr i64 %.1377 to %Type.580273*
  %.140 = call i1 @is_numeric(%Type.580273* %.139.cast)
  %.142 = icmp eq i64 %.11, 5
  %.143 = and i1 %.142, %.140
  br i1 %.143, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.if.if:                             ; preds = %.5.endif.endif.if
  %.99 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.53, align 8
  %.100 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.99, i64 0, i32 10
  %.101 = load %LLVMValueRef.580455* (%CodeGen.580507*, i1)*, %LLVMValueRef.580455* (%CodeGen.580507*, i1)** %.100, align 8
  %.105 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.106 = call i1 @LLVMIsNull(%LLVMValueRef.580455* %.105)
  %.112 = call %LLVMValueRef.580455* %.101(%CodeGen.580507* %.1, i1 %.106)
  ret %LLVMValueRef.580455* %.112

.5.endif.endif.if.endif:                          ; preds = %.5.endif.endif.if
  %.118 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  br i1 %.88, label %true_block.1, label %false_block.1

true_block.1:                                     ; preds = %.5.endif.endif.if.endif
  %.119 = call %LLVMValueRef.580455* @LLVMBuildIsNull(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.118, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

false_block.1:                                    ; preds = %.5.endif.endif.if.endif
  %.123 = call %LLVMValueRef.580455* @LLVMBuildIsNotNull(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.118, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

end.1:                                            ; preds = %true_block.17, %false_block.17, %true_block.16, %false_block.16, %true_block.15, %false_block.15, %true_block.13, %false_block.13, %true_block.12, %false_block.12, %true_block.11, %false_block.11, %true_block.10, %false_block.10, %true_block.9, %false_block.9, %true_block.8, %false_block.8, %true_block.7, %false_block.7, %true_block.6, %false_block.6, %true_block.5, %false_block.5, %true_block.4, %false_block.4, %true_block.3, %false_block.3, %false_block.1, %true_block.1
  %.125 = phi %LLVMValueRef.580455* [ %.119, %true_block.1 ], [ %.123, %false_block.1 ], [ %.203, %true_block.3 ], [ %.208, %false_block.3 ], [ %.219, %true_block.4 ], [ %.224, %false_block.4 ], [ %.235, %true_block.5 ], [ %.240, %false_block.5 ], [ %.275, %true_block.6 ], [ %.281, %false_block.6 ], [ %.300, %true_block.7 ], [ %.306, %false_block.7 ], [ %.317, %true_block.8 ], [ %.322, %false_block.8 ], [ %.333, %true_block.9 ], [ %.338, %false_block.9 ], [ %.349, %true_block.10 ], [ %.354, %false_block.10 ], [ %.365, %true_block.11 ], [ %.370, %false_block.11 ], [ %.381, %true_block.12 ], [ %.386, %false_block.12 ], [ %.460, %true_block.13 ], [ %.466, %false_block.13 ], [ %.488, %true_block.15 ], [ %.494, %false_block.15 ], [ %.515, %true_block.16 ], [ %.520, %false_block.16 ], [ %.531, %true_block.17 ], [ %.536, %false_block.17 ]
  ret %LLVMValueRef.580455* %.125

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.147 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.53, align 8
  %.148 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.147, i64 0, i32 28
  %.149 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Type.580273*, %LLVMValueRef.580455*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Type.580273*, %LLVMValueRef.580455*, %LLVMValueRef.580455*)** %.148, align 8
  %.151 = load %Type.580273*, %Type.580273** %rty, align 8
  %.152 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.154 = call %LLVMValueRef.580455* %.149(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Type.580273* %.151, %LLVMValueRef.580455* %.152, %LLVMValueRef.580455* %.81)
  ret %LLVMValueRef.580455* %.154

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.156 = load %Type.580273*, %Type.580273** %lty, align 8
  %.157 = call i1 @is_pointer(%Type.580273* %.156)
  br i1 %.157, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.160 = icmp eq i64 %.11, 0
  br i1 %.160, label %end.2, label %false_block.2

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.187 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.188 = call i1 @LLVMIsConstant(%LLVMValueRef.580455* %.187)
  %.189 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  %.190 = call i1 @LLVMIsConstant(%LLVMValueRef.580455* %.189)
  %.191 = and i1 %.188, %.190
  %.193 = load %Type.580273*, %Type.580273** %rty, align 8
  %.194 = call i1 @is_int(%Type.580273* %.193)
  br i1 %.194, label %.5.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.else

false_block.2:                                    ; preds = %.5.endif.endif.endif.endif.if
  %.166 = call %LLVMValueRef.580455* @CodeGen_neg_int(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.81)
  br label %end.2

end.2:                                            ; preds = %.5.endif.endif.endif.endif.if, %false_block.2
  %.168 = phi %LLVMValueRef.580455* [ %.166, %false_block.2 ], [ %.81, %.5.endif.endif.endif.endif.if ]
  %indices = alloca [1 x %LLVMValueRef.580455*], align 8
  %.169 = getelementptr inbounds [1 x %LLVMValueRef.580455*], [1 x %LLVMValueRef.580455*]* %indices, i64 0, i64 0
  store %LLVMValueRef.580455* %.168, %LLVMValueRef.580455** %.169, align 8
  %.173 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.53, align 8
  %.174 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.173, i64 0, i32 13
  %.175 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.174, align 8
  %.177 = call %LLVMTypeRef.580454* %.175(%CodeGen.580507* %.1, %Type.580273* %.156, i1 true)
  %.181 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.184 = call %LLVMValueRef.580455* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.177, %LLVMValueRef.580455* %.181, %LLVMValueRef.580455** nonnull %.169, i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.184

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif.endif.endif.endif
  switch i64 %.11, label %.5.endif.endif.endif.endi...else [
    i64 0, label %.5.endif.endif.endif.endif.endif.if.if
    i64 1, label %.5.endif.endif.endif.endif.endif.if.else.if
    i64 2, label %.5.endif.endif.endif.endif.endif.if.else.else.if
    i64 3, label %.5.endif.endif.endif.endif.endif.if.else.else.else.if
    i64 4, label %.5.endif.endif.endif.endi...if
  ]

.5.endif.endif.endif.endif.endif.else:            ; preds = %.5.endif.endif.endif.endif.endif
  %.403 = call i1 @is_float(%Type.580273* %.193)
  br i1 %.403, label %.5.endif.endif.endif.endif.endif.else.if, label %.5.endif.endif.endif.endif.endif.else.else

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif.else.else.if, %.5.endif.endif.endif.endif.endif.else.else, %.5.endif.endif.endif.endi...else.2.else.else, %.5.endif.endif.endif.endi...else.else.else
  %.544 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  ret %LLVMValueRef.580455* %.544

.5.endif.endif.endif.endif.endif.if.if:           ; preds = %.5.endif.endif.endif.endif.endif.if
  %.201 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.202 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.3, label %false_block.3

true_block.3:                                     ; preds = %.5.endif.endif.endif.endif.endif.if.if
  %.203 = call %LLVMValueRef.580455* @LLVMConstAdd(%LLVMValueRef.580455* %.201, %LLVMValueRef.580455* %.202)
  br label %end.1

false_block.3:                                    ; preds = %.5.endif.endif.endif.endif.endif.if.if
  %.208 = call %LLVMValueRef.580455* @LLVMBuildAdd(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.201, %LLVMValueRef.580455* %.202, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.if.else.if:      ; preds = %.5.endif.endif.endif.endif.endif.if
  %.217 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.218 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.4, label %false_block.4

true_block.4:                                     ; preds = %.5.endif.endif.endif.endif.endif.if.else.if
  %.219 = call %LLVMValueRef.580455* @LLVMConstSub(%LLVMValueRef.580455* %.217, %LLVMValueRef.580455* %.218)
  br label %end.1

false_block.4:                                    ; preds = %.5.endif.endif.endif.endif.endif.if.else.if
  %.224 = call %LLVMValueRef.580455* @LLVMBuildSub(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.217, %LLVMValueRef.580455* %.218, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.if.else.else.if: ; preds = %.5.endif.endif.endif.endif.endif.if
  %.233 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.234 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.5, label %false_block.5

true_block.5:                                     ; preds = %.5.endif.endif.endif.endif.endif.if.else.else.if
  %.235 = call %LLVMValueRef.580455* @LLVMConstMul(%LLVMValueRef.580455* %.233, %LLVMValueRef.580455* %.234)
  br label %end.1

false_block.5:                                    ; preds = %.5.endif.endif.endif.endif.endif.if.else.else.if
  %.240 = call %LLVMValueRef.580455* @LLVMBuildMul(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.233, %LLVMValueRef.580455* %.234, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.if.else.else.else.if: ; preds = %.5.endif.endif.endif.endif.endif.if
  %.248 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.249 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  %.250 = call %LLVMValueRef.580455* @LLVMBuildSDiv(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.248, %LLVMValueRef.580455* %.249, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.250

.5.endif.endif.endif.endi...if:                   ; preds = %.5.endif.endif.endif.endif.endif.if
  %.256 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.257 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  %.258 = call %LLVMValueRef.580455* @LLVMBuildSRem(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.256, %LLVMValueRef.580455* %.257, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.258

.5.endif.endif.endif.endi...else:                 ; preds = %.5.endif.endif.endif.endif.endif.if
  %.11.off9 = add i64 %.11, -6
  %6 = icmp ult i64 %.11.off9, 4
  br i1 %6, label %.5.endif.endif.endif.endi...else.if, label %.5.endif.endif.endif.endi...else.else

.5.endif.endif.endif.endi...else.if:              ; preds = %.5.endif.endif.endif.endi...else
  %.268 = add i64 %.11, 32
  %.273 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.274 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.6, label %false_block.6

.5.endif.endif.endif.endi...else.else:            ; preds = %.5.endif.endif.endif.endi...else
  %7 = and i64 %.11, -2
  %8 = icmp eq i64 %7, 10
  br i1 %8, label %.5.endif.endif.endif.endi...else.else.if, label %.5.endif.endif.endif.endi...else.else.else

true_block.6:                                     ; preds = %.5.endif.endif.endif.endi...else.if
  %.275 = call %LLVMValueRef.580455* @LLVMConstICmp(i64 %.268, %LLVMValueRef.580455* %.273, %LLVMValueRef.580455* %.274)
  br label %end.1

false_block.6:                                    ; preds = %.5.endif.endif.endif.endi...else.if
  %.281 = call %LLVMValueRef.580455* @LLVMBuildICmp(%LLVMBuilderRef.580460* %.2, i64 %.268, %LLVMValueRef.580455* %.273, %LLVMValueRef.580455* %.274, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.else.if:         ; preds = %.5.endif.endif.endif.endi...else.else
  %.293 = add i64 %.11, 22
  %.298 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.299 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.7, label %false_block.7

.5.endif.endif.endif.endi...else.else.else:       ; preds = %.5.endif.endif.endif.endi...else.else
  switch i64 %.11, label %.5.endif.endif.endif.endif.endif.endif [
    i64 12, label %.5.endif.endif.endif.endi...else.else.else.if
    i64 13, label %.5.endif.endif.endif.endi...else.else.else.else.if
    i64 14, label %.5.endif.endif.endif.endi...if.1
    i64 15, label %.5.endif.endif.endif.endi...else.1.if
    i64 16, label %.5.endif.endif.endif.endi...else.1.else.if
  ]

true_block.7:                                     ; preds = %.5.endif.endif.endif.endi...else.else.if
  %.300 = call %LLVMValueRef.580455* @LLVMConstICmp(i64 %.293, %LLVMValueRef.580455* %.298, %LLVMValueRef.580455* %.299)
  br label %end.1

false_block.7:                                    ; preds = %.5.endif.endif.endif.endi...else.else.if
  %.306 = call %LLVMValueRef.580455* @LLVMBuildICmp(%LLVMBuilderRef.580460* %.2, i64 %.293, %LLVMValueRef.580455* %.298, %LLVMValueRef.580455* %.299, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.else.else.if:    ; preds = %.5.endif.endif.endif.endi...else.else.else
  %.315 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.316 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.8, label %false_block.8

true_block.8:                                     ; preds = %.5.endif.endif.endif.endi...else.else.else.if
  %.317 = call %LLVMValueRef.580455* @LLVMConstShl(%LLVMValueRef.580455* %.315, %LLVMValueRef.580455* %.316)
  br label %end.1

false_block.8:                                    ; preds = %.5.endif.endif.endif.endi...else.else.else.if
  %.322 = call %LLVMValueRef.580455* @LLVMBuildShl(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.315, %LLVMValueRef.580455* %.316, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.else.else.else.if: ; preds = %.5.endif.endif.endif.endi...else.else.else
  %.331 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.332 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.9, label %false_block.9

true_block.9:                                     ; preds = %.5.endif.endif.endif.endi...else.else.else.else.if
  %.333 = call %LLVMValueRef.580455* @LLVMConstAShr(%LLVMValueRef.580455* %.331, %LLVMValueRef.580455* %.332)
  br label %end.1

false_block.9:                                    ; preds = %.5.endif.endif.endif.endi...else.else.else.else.if
  %.338 = call %LLVMValueRef.580455* @LLVMBuildAShr(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.331, %LLVMValueRef.580455* %.332, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5.endif.endif.endif.endi...else.else.else
  %.347 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.348 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.10, label %false_block.10

true_block.10:                                    ; preds = %.5.endif.endif.endif.endi...if.1
  %.349 = call %LLVMValueRef.580455* @LLVMConstOr(%LLVMValueRef.580455* %.347, %LLVMValueRef.580455* %.348)
  br label %end.1

false_block.10:                                   ; preds = %.5.endif.endif.endif.endi...if.1
  %.354 = call %LLVMValueRef.580455* @LLVMBuildOr(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.347, %LLVMValueRef.580455* %.348, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.1.if:            ; preds = %.5.endif.endif.endif.endi...else.else.else
  %.363 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.364 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.11, label %false_block.11

true_block.11:                                    ; preds = %.5.endif.endif.endif.endi...else.1.if
  %.365 = call %LLVMValueRef.580455* @LLVMConstAnd(%LLVMValueRef.580455* %.363, %LLVMValueRef.580455* %.364)
  br label %end.1

false_block.11:                                   ; preds = %.5.endif.endif.endif.endi...else.1.if
  %.370 = call %LLVMValueRef.580455* @LLVMBuildAnd(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.363, %LLVMValueRef.580455* %.364, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.1.else.if:       ; preds = %.5.endif.endif.endif.endi...else.else.else
  %.379 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.380 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.12, label %false_block.12

true_block.12:                                    ; preds = %.5.endif.endif.endif.endi...else.1.else.if
  %.381 = call %LLVMValueRef.580455* @LLVMConstXor(%LLVMValueRef.580455* %.379, %LLVMValueRef.580455* %.380)
  br label %end.1

false_block.12:                                   ; preds = %.5.endif.endif.endif.endi...else.1.else.if
  %.386 = call %LLVMValueRef.580455* @LLVMBuildXor(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.379, %LLVMValueRef.580455* %.380, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.else.if:         ; preds = %.5.endif.endif.endif.endif.endif.else
  switch i64 %.11, label %.5.endif.endif.endif.endi...else.2.else [
    i64 0, label %.5.endif.endif.endif.endif.endif.else.if.if
    i64 1, label %.5.endif.endif.endif.endif.endif.else.if.else.if
    i64 2, label %.5.endif.endif.endif.endif.endif.else.if.else.else.if
    i64 3, label %.5.endif.endif.endif.endi...if.2
    i64 4, label %.5.endif.endif.endif.endi...else.2.if
  ]

.5.endif.endif.endif.endif.endif.else.else:       ; preds = %.5.endif.endif.endif.endif.endif.else
  %.506 = call i1 @is_bool(%Type.580273* %.193)
  br i1 %.506, label %.5.endif.endif.endif.endif.endif.else.else.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.else.if.if:      ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.409 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.410 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  %.411 = call %LLVMValueRef.580455* @LLVMBuildFAdd(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.409, %LLVMValueRef.580455* %.410, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.411

.5.endif.endif.endif.endif.endif.else.if.else.if: ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.417 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.418 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  %.419 = call %LLVMValueRef.580455* @LLVMBuildFSub(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.417, %LLVMValueRef.580455* %.418, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.419

.5.endif.endif.endif.endif.endif.else.if.else.else.if: ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.425 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.426 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  %.427 = call %LLVMValueRef.580455* @LLVMBuildFMul(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.425, %LLVMValueRef.580455* %.426, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.427

.5.endif.endif.endif.endi...if.2:                 ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.433 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.434 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  %.435 = call %LLVMValueRef.580455* @LLVMBuildFDiv(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.433, %LLVMValueRef.580455* %.434, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.435

.5.endif.endif.endif.endi...else.2.if:            ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.441 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.442 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  %.443 = call %LLVMValueRef.580455* @LLVMBuildFRem(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.441, %LLVMValueRef.580455* %.442, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.443

.5.endif.endif.endif.endi...else.2.else:          ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.11.off = add i64 %.11, -6
  %9 = icmp ult i64 %.11.off, 4
  br i1 %9, label %.5.endif.endif.endif.endi...else.2.else.if, label %.5.endif.endif.endif.endi...else.2.else.else

.5.endif.endif.endif.endi...else.2.else.if:       ; preds = %.5.endif.endif.endif.endi...else.2.else
  %.453 = add i64 %.11, -4
  %.458 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.459 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.13, label %false_block.13

.5.endif.endif.endif.endi...else.2.else.else:     ; preds = %.5.endif.endif.endif.endi...else.2.else
  %10 = and i64 %.11, -2
  %11 = icmp eq i64 %10, 10
  br i1 %11, label %.5.endif.endif.endif.endi...else.2.else.else.if, label %.5.endif.endif.endif.endif.endif.endif

true_block.13:                                    ; preds = %.5.endif.endif.endif.endi...else.2.else.if
  %.460 = call %LLVMValueRef.580455* @LLVMConstFCmp(i64 %.453, %LLVMValueRef.580455* %.458, %LLVMValueRef.580455* %.459)
  br label %end.1

false_block.13:                                   ; preds = %.5.endif.endif.endif.endi...else.2.else.if
  %.466 = call %LLVMValueRef.580455* @LLVMBuildFCmp(%LLVMBuilderRef.580460* %.2, i64 %.453, %LLVMValueRef.580455* %.458, %LLVMValueRef.580455* %.459, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.2.else.else.if:  ; preds = %.5.endif.endif.endif.endi...else.2.else.else
  %.486 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.487 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.15, label %false_block.15

true_block.15:                                    ; preds = %.5.endif.endif.endif.endi...else.2.else.else.if
  %.488 = call %LLVMValueRef.580455* @LLVMConstFCmp(i64 1, %LLVMValueRef.580455* %.486, %LLVMValueRef.580455* %.487)
  br label %end.1

false_block.15:                                   ; preds = %.5.endif.endif.endif.endi...else.2.else.else.if
  %.494 = call %LLVMValueRef.580455* @LLVMBuildFCmp(%LLVMBuilderRef.580460* %.2, i64 1, %LLVMValueRef.580455* %.486, %LLVMValueRef.580455* %.487, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.else.else.if:    ; preds = %.5.endif.endif.endif.endif.endif.else.else
  switch i64 %.11, label %.5.endif.endif.endif.endif.endif.endif [
    i64 15, label %.5.endif.endif.endif.endif.endif.else.else.if.if
    i64 14, label %.5.endif.endif.endif.endif.endif.else.else.if.else.if
  ]

.5.endif.endif.endif.endif.endif.else.else.if.if: ; preds = %.5.endif.endif.endif.endif.endif.else.else.if
  %.513 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.514 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.16, label %false_block.16

true_block.16:                                    ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.if
  %.515 = call %LLVMValueRef.580455* @LLVMConstAnd(%LLVMValueRef.580455* %.513, %LLVMValueRef.580455* %.514)
  br label %end.1

false_block.16:                                   ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.if
  %.520 = call %LLVMValueRef.580455* @LLVMBuildAnd(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.513, %LLVMValueRef.580455* %.514, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.else.else.if.else.if: ; preds = %.5.endif.endif.endif.endif.endif.else.else.if
  %.529 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %lhs, align 8
  %.530 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %rhs, align 8
  br i1 %.191, label %true_block.17, label %false_block.17

true_block.17:                                    ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.else.if
  %.531 = call %LLVMValueRef.580455* @LLVMConstOr(%LLVMValueRef.580455* %.529, %LLVMValueRef.580455* %.530)
  br label %end.1

false_block.17:                                   ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.else.if
  %.536 = call %LLVMValueRef.580455* @LLVMBuildOr(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.529, %LLVMValueRef.580455* %.530, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end.1
}

define %LLVMValueRef.580455* @CodeGen_codegen_typecast_exp(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %TypeCastExpression.580323* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeCastExpression.580323, %TypeCastExpression.580323* %.3, i64 0, i32 5
  %.11 = load %Expression.580293*, %Expression.580293** %.10, align 8
  %.14 = getelementptr inbounds %TypeCastExpression.580323, %TypeCastExpression.580323* %.3, i64 0, i32 4
  %.15 = load %Type.580273*, %Type.580273** %.14, align 8
  %.18 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.19 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.18, align 8
  %.20 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.19, i64 0, i32 39
  %.21 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.20, align 8
  %.24 = call %LLVMValueRef.580455* %.21(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.11)
  %.28 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.18, align 8
  %.29 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.28, i64 0, i32 13
  %.30 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.29, align 8
  %.32 = call %LLVMTypeRef.580454* %.30(%CodeGen.580507* %.1, %Type.580273* %.15, i1 true)
  %.35 = call i1 @LLVMIsConstant(%LLVMValueRef.580455* %.24)
  %.38 = call i1 @is_bool(%Type.580273* %.15)
  br i1 %.38, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  br i1 %.35, label %true_block, label %false_block

.5.endif:                                         ; preds = %.5
  %.59 = getelementptr inbounds %Expression.580293, %Expression.580293* %.11, i64 0, i32 4
  %.60 = load %Type.580273*, %Type.580273** %.59, align 8
  %.61 = call i1 @is_int(%Type.580273* %.60)
  %.63 = call i1 @is_float(%Type.580273* %.15)
  %.64 = and i1 %.61, %.63
  br i1 %.64, label %.5.endif.if, label %.5.endif.else

true_block:                                       ; preds = %.5.if
  %.44 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.18, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.44, i64 0, i32 10
  %.46 = load %LLVMValueRef.580455* (%CodeGen.580507*, i1)*, %LLVMValueRef.580455* (%CodeGen.580507*, i1)** %.45, align 8
  %.48 = call i1 @LLVMIsNull(%LLVMValueRef.580455* %.24)
  %.49 = xor i1 %.48, true
  %.50 = call %LLVMValueRef.580455* %.46(%CodeGen.580507* %.1, i1 %.49)
  br label %end

false_block:                                      ; preds = %.5.if
  %.54 = call %LLVMValueRef.580455* @LLVMBuildIsNotNull(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end

end:                                              ; preds = %true_block.5, %false_block.5, %true_block.4, %false_block.4, %true_block.3, %false_block.3, %true_block.2, %false_block.2, %true_block.1, %false_block.1, %false_block, %true_block
  %.56 = phi %LLVMValueRef.580455* [ %.50, %true_block ], [ %.54, %false_block ], [ %.70, %true_block.1 ], [ %.75, %false_block.1 ], [ %.91, %true_block.2 ], [ %.96, %false_block.2 ], [ %.112, %true_block.3 ], [ %.117, %false_block.3 ], [ %.133, %true_block.4 ], [ %.138, %false_block.4 ], [ %.149, %true_block.5 ], [ %.154, %false_block.5 ]
  ret %LLVMValueRef.580455* %.56

.5.endif.if:                                      ; preds = %.5.endif
  br i1 %.35, label %true_block.1, label %false_block.1

.5.endif.else:                                    ; preds = %.5.endif
  %.82 = call i1 @is_float(%Type.580273* %.60)
  %.84 = call i1 @is_int(%Type.580273* %.15)
  %.85 = and i1 %.82, %.84
  br i1 %.85, label %.5.endif.else.if, label %.5.endif.else.else

true_block.1:                                     ; preds = %.5.endif.if
  %.70 = call %LLVMValueRef.580455* @LLVMConstSIToFP(%LLVMValueRef.580455* %.24, %LLVMTypeRef.580454* %.32)
  br label %end

false_block.1:                                    ; preds = %.5.endif.if
  %.75 = call %LLVMValueRef.580455* @LLVMBuildSIToFP(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.24, %LLVMTypeRef.580454* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end

.5.endif.else.if:                                 ; preds = %.5.endif.else
  br i1 %.35, label %true_block.2, label %false_block.2

.5.endif.else.else:                               ; preds = %.5.endif.else
  %.106 = and i1 %.61, %.84
  br i1 %.106, label %.5.endif.else.else.if, label %.5.endif.else.else.else

true_block.2:                                     ; preds = %.5.endif.else.if
  %.91 = call %LLVMValueRef.580455* @LLVMConstFPToSI(%LLVMValueRef.580455* %.24, %LLVMTypeRef.580454* %.32)
  br label %end

false_block.2:                                    ; preds = %.5.endif.else.if
  %.96 = call %LLVMValueRef.580455* @LLVMBuildFPToSI(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.24, %LLVMTypeRef.580454* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end

.5.endif.else.else.if:                            ; preds = %.5.endif.else.else
  br i1 %.35, label %true_block.3, label %false_block.3

.5.endif.else.else.else:                          ; preds = %.5.endif.else.else
  %.127 = and i1 %.63, %.82
  br i1 %.127, label %.5.endif.else.else.else.if, label %.5.endif.else.else.else.endif

true_block.3:                                     ; preds = %.5.endif.else.else.if
  %.112 = call %LLVMValueRef.580455* @LLVMConstIntCast(%LLVMValueRef.580455* %.24, %LLVMTypeRef.580454* %.32, i1 true)
  br label %end

false_block.3:                                    ; preds = %.5.endif.else.else.if
  %.117 = call %LLVMValueRef.580455* @LLVMBuildIntCast2(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.24, %LLVMTypeRef.580454* %.32, i1 true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end

.5.endif.else.else.else.if:                       ; preds = %.5.endif.else.else.else
  br i1 %.35, label %true_block.4, label %false_block.4

.5.endif.else.else.else.endif:                    ; preds = %.5.endif.else.else.else
  br i1 %.35, label %true_block.5, label %false_block.5

true_block.4:                                     ; preds = %.5.endif.else.else.else.if
  %.133 = call %LLVMValueRef.580455* @LLVMConstFPCast(%LLVMValueRef.580455* %.24, %LLVMTypeRef.580454* %.32)
  br label %end

false_block.4:                                    ; preds = %.5.endif.else.else.else.if
  %.138 = call %LLVMValueRef.580455* @LLVMBuildFPCast(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.24, %LLVMTypeRef.580454* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end

true_block.5:                                     ; preds = %.5.endif.else.else.else.endif
  %.149 = call %LLVMValueRef.580455* @LLVMConstBitCast(%LLVMValueRef.580455* %.24, %LLVMTypeRef.580454* %.32)
  br label %end

false_block.5:                                    ; preds = %.5.endif.else.else.else.endif
  %.154 = call %LLVMValueRef.580455* @LLVMBuildBitCast(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.24, %LLVMTypeRef.580454* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end
}

define %LLVMValueRef.580455* @CodeGen_codegen_unary_exp(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %UnaryExpression.580319* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %UnaryExpression.580319, %UnaryExpression.580319* %.3, i64 0, i32 5
  %.11 = load i64, i64* %.10, align 8
  %.14 = getelementptr inbounds %UnaryExpression.580319, %UnaryExpression.580319* %.3, i64 0, i32 6
  %.15 = load %Expression.580293*, %Expression.580293** %.14, align 8
  %.18 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.19 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.18, align 8
  %.20 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.19, i64 0, i32 39
  %.21 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.20, align 8
  %.24 = call %LLVMValueRef.580455* %.21(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.15)
  switch i64 %.11, label %end [
    i64 4, label %.5.if
    i64 5, label %.5.endif.if
    i64 6, label %.5.endif.endif.if
    i64 3, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.if
    i64 1, label %.5.endif.endif.if
    i64 0, label %.5.endif.endif.if
  ]

.5.if:                                            ; preds = %.5
  %.30 = getelementptr inbounds %Expression.580293, %Expression.580293* %.15, i64 0, i32 4
  %.31 = load %Type.580273*, %Type.580273** %.30, align 8
  %.32 = call i1 @is_int(%Type.580273* %.31)
  br i1 %.32, label %.5.if.if, label %.5.if.else

.5.if.if:                                         ; preds = %.5.if
  %.36 = call %LLVMValueRef.580455* @CodeGen_neg_int(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.24)
  ret %LLVMValueRef.580455* %.36

.5.if.else:                                       ; preds = %.5.if
  %.41 = call i1 @is_float(%Type.580273* %.31)
  br i1 %.41, label %.5.if.else.if, label %.5.if.else.endif

.5.if.else.if:                                    ; preds = %.5.if.else
  %.45 = call %LLVMValueRef.580455* @LLVMBuildFNeg(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.45

.5.if.else.endif:                                 ; preds = %.5.if.else
  switch i64 %.11, label %end [
    i64 5, label %.5.endif.if
    i64 6, label %.5.endif.endif.if
    i64 3, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.if
    i64 1, label %.5.endif.endif.if
    i64 0, label %.5.endif.endif.if
  ]

.5.endif.if:                                      ; preds = %.5, %.5.if.else.endif
  %.53 = call i1 @LLVMIsConstant(%LLVMValueRef.580455* %.24)
  br i1 %.53, label %true_block, label %false_block

true_block:                                       ; preds = %.5.endif.if
  %.56 = call %LLVMValueRef.580455* @LLVMConstNot(%LLVMValueRef.580455* %.24)
  br label %end

false_block:                                      ; preds = %.5.endif.if
  %.60 = call %LLVMValueRef.580455* @LLVMBuildNot(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %end

end:                                              ; preds = %.5.endif.endif.if, %.5, %.5.if.else.endif, %end.1.endif, %false_block, %true_block
  %.62 = phi %LLVMValueRef.580455* [ %.56, %true_block ], [ %.60, %false_block ], [ %.171, %end.1.endif ], [ %.24, %.5.if.else.endif ], [ %.24, %.5 ], [ %.80, %.5.endif.endif.if ]
  ret %LLVMValueRef.580455* %.62

.5.endif.endif.if:                                ; preds = %.5, %.5, %.5, %.5, %.5, %.5.if.else.endif, %.5.if.else.endif, %.5.if.else.endif, %.5.if.else.endif, %.5.if.else.endif
  %.75 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.18, align 8
  %.76 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.75, i64 0, i32 25
  %.77 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.76, align 8
  %.80 = call %LLVMValueRef.580455* %.77(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.15)
  %.83 = icmp eq i64 %.11, 6
  br i1 %.83, label %end, label %.5.endif.endif.if.endif

.5.endif.endif.if.endif:                          ; preds = %.5.endif.endif.if
  %.89 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.18, align 8
  %.90 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.89, i64 0, i32 13
  %.91 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.90, align 8
  %.93 = getelementptr inbounds %Expression.580293, %Expression.580293* %.15, i64 0, i32 4
  %.94 = load %Type.580273*, %Type.580273** %.93, align 8
  %.95 = call %LLVMTypeRef.580454* %.91(%CodeGen.580507* %.1, %Type.580273* %.94, i1 true)
  %0 = and i64 %.11, -3
  %1 = icmp eq i64 %0, 0
  %. = select i1 %1, i64 1, i64 -1
  %new_value = alloca %LLVMValueRef.580455*, align 8
  store %LLVMValueRef.580455* null, %LLVMValueRef.580455** %new_value, align 8
  %.111 = load %Type.580273*, %Type.580273** %.93, align 8
  %.112 = call i1 @is_pointer(%Type.580273* %.111)
  br i1 %.112, label %end.1.if, label %end.1.else

end.1.if:                                         ; preds = %.5.endif.endif.if.endif
  %.116 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.18, align 8
  %.117 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.116, i64 0, i32 11
  %.118 = load %LLVMValueRef.580455* (%CodeGen.580507*, i64)*, %LLVMValueRef.580455* (%CodeGen.580507*, i64)** %.117, align 8
  %.120 = call %LLVMValueRef.580455* %.118(%CodeGen.580507* %.1, i64 %.)
  %indices = alloca [1 x %LLVMValueRef.580455*], align 8
  %.121 = getelementptr inbounds [1 x %LLVMValueRef.580455*], [1 x %LLVMValueRef.580455*]* %indices, i64 0, i64 0
  store %LLVMValueRef.580455* %.120, %LLVMValueRef.580455** %.121, align 8
  %.128 = call %LLVMValueRef.580455* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.95, %LLVMValueRef.580455* %.24, %LLVMValueRef.580455** nonnull %.121, i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.378, i64 0, i64 0))
  store %LLVMValueRef.580455* %.128, %LLVMValueRef.580455** %new_value, align 8
  br label %end.1.endif

end.1.else:                                       ; preds = %.5.endif.endif.if.endif
  %.134 = call i1 @is_numeric(%Type.580273* %.111)
  br i1 %.134, label %end.1.else.if, label %end.1.endif

end.1.endif:                                      ; preds = %end.1.else, %end.2, %end.1.if
  %.161 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %new_value, align 8
  %.163 = call %LLVMValueRef.580455* @LLVMBuildStore(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.161, %LLVMValueRef.580455* %.80)
  %.165 = icmp sgt i64 %.11, 0
  %.171 = select i1 %.165, %LLVMValueRef.580455* %.24, %LLVMValueRef.580455* %.161
  br label %end

end.1.else.if:                                    ; preds = %end.1.else
  %.139 = call i1 @is_int(%Type.580273* %.111)
  br i1 %.139, label %true_block.2, label %false_block.2

true_block.2:                                     ; preds = %end.1.else.if
  %.143 = call %LLVMValueRef.580455* @LLVMConstInt(%LLVMTypeRef.580454* %.95, i64 %., i1 false)
  br label %end.2

false_block.2:                                    ; preds = %end.1.else.if
  %.147 = sitofp i64 %. to double
  %.149 = call %LLVMValueRef.580455* @LLVMConstReal(%LLVMTypeRef.580454* %.95, double %.147)
  br label %end.2

end.2:                                            ; preds = %false_block.2, %true_block.2
  %.151 = phi %LLVMValueRef.580455* [ %.143, %true_block.2 ], [ %.149, %false_block.2 ]
  %.156 = call %LLVMValueRef.580455* @LLVMBuildAdd(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.24, %LLVMValueRef.580455* %.151, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  store %LLVMValueRef.580455* %.156, %LLVMValueRef.580455** %new_value, align 8
  br label %end.1.endif
}

define %LLVMValueRef.580455* @CodeGen_codegen_var_access_exp(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %VarAccessExpression.580343* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.11, i64 0, i32 2
  %.13 = load %LLVMValueRef.580455* (%CodeGen.580507*, %VarId.580331*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %VarId.580331*)** %.12, align 8
  %.15 = getelementptr inbounds %VarAccessExpression.580343, %VarAccessExpression.580343* %.3, i64 0, i32 5
  %.16 = load %VarId.580331*, %VarId.580331** %.15, align 8
  %.17 = call %LLVMValueRef.580455* %.13(%CodeGen.580507* %.1, %VarId.580331* %.16)
  %.21 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.22 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.21, i64 0, i32 13
  %.23 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.22, align 8
  %.25 = getelementptr inbounds %VarAccessExpression.580343, %VarAccessExpression.580343* %.3, i64 0, i32 4
  %.26 = load %Type.580273*, %Type.580273** %.25, align 8
  %.27 = call %LLVMTypeRef.580454* %.23(%CodeGen.580507* %.1, %Type.580273* %.26, i1 true)
  %0 = ptrtoint %LLVMValueRef.580455* %.17 to i64
  %.30 = trunc i64 %0 to i32
  %.32 = icmp eq i32 %.30, 0
  br i1 %.32, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.34 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.35 = bitcast i8* %.34 to %string.580129*
  %.35.repack = bitcast i8* %.34 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.35.repack, align 8
  %.35.repack1 = getelementptr inbounds i8, i8* %.34, i64 8
  %1 = bitcast i8* %.35.repack1 to i8**
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @str.379, i64 0, i64 0), i8** %1, align 8
  %.35.repack2 = getelementptr inbounds i8, i8* %.34, i64 16
  %2 = bitcast i8* %.35.repack2 to i64*
  store i64 50, i64* %2, align 8
  %.35.repack3 = getelementptr inbounds i8, i8* %.34, i64 24
  %3 = bitcast i8* %.35.repack3 to i64*
  store i64 50, i64* %3, align 8
  %.40 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.41 = call i8* %.40(%string.580129* %.35)
  %.42 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.46 = load %VarId.580331*, %VarId.580331** %.15, align 8
  %.47 = getelementptr inbounds %VarId.580331, %VarId.580331* %.46, i64 0, i32 1
  %.48 = load i64, i64* %.47, align 8
  %.49 = icmp eq i64 %.48, 0
  br i1 %.49, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  ret %LLVMValueRef.580455* %.17

.5.endif.endif:                                   ; preds = %.5.endif
  %.54 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 12
  %.55 = load i1, i1* %.54, align 1
  br i1 %.55, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.58 = call %LLVMValueRef.580455* @LLVMGetInitializer(%LLVMValueRef.580455* %.17)
  ret %LLVMValueRef.580455* %.58

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.63 = call %LLVMValueRef.580455* @LLVMBuildLoad2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.27, %LLVMValueRef.580455* %.17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.63
}

define %LLVMValueRef.580455* @CodeGen_codegen_null(%CodeGen.580507* %.1, %NullExpression.580313* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.9, i64 0, i32 13
  %.11 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.10, align 8
  %.13 = getelementptr inbounds %NullExpression.580313, %NullExpression.580313* %.2, i64 0, i32 4
  %.14 = load %Type.580273*, %Type.580273** %.13, align 8
  %.15 = call %LLVMTypeRef.580454* %.11(%CodeGen.580507* %.1, %Type.580273* %.14, i1 true)
  %.16 = call %LLVMValueRef.580455* @LLVMConstNull(%LLVMTypeRef.580454* %.15)
  ret %LLVMValueRef.580455* %.16
}

define %LLVMValueRef.580455* @CodeGen_codegen_ternary_exp(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %TernaryExpression.580321* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.11 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.13 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 8
  %.14 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.13, align 8
  %.15 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.11, %LLVMValueRef.580455* %.14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.380, i64 0, i64 0))
  %.19 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.22 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.13, align 8
  %.23 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.19, %LLVMValueRef.580455* %.22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.381, i64 0, i64 0))
  %.27 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.30 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.13, align 8
  %.31 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.27, %LLVMValueRef.580455* %.30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.382, i64 0, i64 0))
  %.34 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.35 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.34, align 8
  %.36 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.35, i64 0, i32 39
  %.37 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.36, align 8
  %.40 = getelementptr inbounds %TernaryExpression.580321, %TernaryExpression.580321* %.3, i64 0, i32 5
  %.41 = load %Expression.580293*, %Expression.580293** %.40, align 8
  %.42 = call %LLVMValueRef.580455* %.37(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.41)
  %.48 = call %LLVMValueRef.580455* @LLVMBuildCondBr(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.42, %LLVMBasicBlockRef.580456* %.15, %LLVMBasicBlockRef.580456* %.23)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.15)
  %.54 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.34, align 8
  %.55 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.54, i64 0, i32 39
  %.56 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.55, align 8
  %.59 = getelementptr inbounds %TernaryExpression.580321, %TernaryExpression.580321* %.3, i64 0, i32 6
  %.60 = load %Expression.580293*, %Expression.580293** %.59, align 8
  %.61 = call %LLVMValueRef.580455* %.56(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.60)
  %.65 = call %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.31)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.23)
  %.71 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.34, align 8
  %.72 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.71, i64 0, i32 39
  %.73 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.72, align 8
  %.76 = getelementptr inbounds %TernaryExpression.580321, %TernaryExpression.580321* %.3, i64 0, i32 7
  %.77 = load %Expression.580293*, %Expression.580293** %.76, align 8
  %.78 = call %LLVMValueRef.580455* %.73(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.77)
  %.82 = call %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.31)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.31)
  %.89 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.34, align 8
  %.90 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.89, i64 0, i32 13
  %.91 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.90, align 8
  %.94 = load %Expression.580293*, %Expression.580293** %.59, align 8
  %.95 = getelementptr inbounds %Expression.580293, %Expression.580293* %.94, i64 0, i32 4
  %.96 = load %Type.580273*, %Type.580273** %.95, align 8
  %.97 = call %LLVMTypeRef.580454* %.91(%CodeGen.580507* %.1, %Type.580273* %.96, i1 true)
  %.98 = call %LLVMValueRef.580455* @LLVMBuildPhi(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.97, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.383, i64 0, i64 0))
  %incomming_vals = alloca [2 x %LLVMValueRef.580455*], align 8
  %.102 = getelementptr inbounds [2 x %LLVMValueRef.580455*], [2 x %LLVMValueRef.580455*]* %incomming_vals, i64 0, i64 0
  store %LLVMValueRef.580455* %.61, %LLVMValueRef.580455** %.102, align 8
  %.104 = getelementptr inbounds [2 x %LLVMValueRef.580455*], [2 x %LLVMValueRef.580455*]* %incomming_vals, i64 0, i64 1
  store %LLVMValueRef.580455* %.78, %LLVMValueRef.580455** %.104, align 8
  %blocks = alloca [2 x %LLVMBasicBlockRef.580456*], align 8
  %.108 = getelementptr inbounds [2 x %LLVMBasicBlockRef.580456*], [2 x %LLVMBasicBlockRef.580456*]* %blocks, i64 0, i64 0
  store %LLVMBasicBlockRef.580456* %.15, %LLVMBasicBlockRef.580456** %.108, align 8
  %.110 = getelementptr inbounds [2 x %LLVMBasicBlockRef.580456*], [2 x %LLVMBasicBlockRef.580456*]* %blocks, i64 0, i64 1
  store %LLVMBasicBlockRef.580456* %.23, %LLVMBasicBlockRef.580456** %.110, align 8
  call void @LLVMAddIncoming(%LLVMValueRef.580455* %.98, %LLVMValueRef.580455** nonnull %.102, %LLVMBasicBlockRef.580456** nonnull %.108, i64 2)
  ret %LLVMValueRef.580455* %.98
}

define %LLVMValueRef.580455* @CodeGen_codegen_call_exp(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %CallExpression.580329* nocapture readonly %.3) {
.5:
  %.10 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.12 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %"Array<LLVMValueRef>.580505"*
  %.14 = bitcast i8* %.12 to %"Array<LLVMValueRef>_vtable_ty.580506"**
  store %"Array<LLVMValueRef>_vtable_ty.580506"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.580506"** %.14, align 8
  %.16 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.16 to i8**
  store i8* %.10, i8** %0, align 8
  %.18 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.18 to i64*
  store i64 0, i64* %1, align 8
  %.20 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.20 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.26 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.25, align 8
  %.27 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.26, i64 0, i32 13
  %.28 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.27, align 8
  %.30 = getelementptr inbounds %CallExpression.580329, %CallExpression.580329* %.3, i64 0, i32 5
  %.31 = load %Expression.580293*, %Expression.580293** %.30, align 8
  %.32 = getelementptr inbounds %Expression.580293, %Expression.580293* %.31, i64 0, i32 4
  %.33 = load %Type.580273*, %Type.580273** %.32, align 8
  %.34 = call %LLVMTypeRef.580454* %.28(%CodeGen.580507* %.1, %Type.580273* %.33, i1 false)
  %.38 = load %Expression.580293*, %Expression.580293** %.30, align 8
  %.39 = getelementptr inbounds %Expression.580293, %Expression.580293* %.38, i64 0, i32 3
  %.40 = load i64, i64* %.39, align 8
  %.41 = icmp eq i64 %.40, 12
  br i1 %.41, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %3 = bitcast %Expression.580293** %.30 to i64*
  %.4512 = load i64, i64* %3, align 8
  %member_exp = alloca %MemberExpression.580341*, align 8
  %4 = bitcast %MemberExpression.580341** %member_exp to i64*
  store i64 %.4512, i64* %4, align 8
  %.48.cast = inttoptr i64 %.4512 to %MemberExpression.580341*
  %.49 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.48.cast, i64 0, i32 5
  %.50 = load %Expression.580293*, %Expression.580293** %.49, align 8
  %.51 = getelementptr inbounds %Expression.580293, %Expression.580293* %.50, i64 0, i32 4
  %.52 = load %Type.580273*, %Type.580273** %.51, align 8
  %.53 = getelementptr inbounds %Type.580273, %Type.580273* %.52, i64 0, i32 1
  %.54 = load i64, i64* %.53, align 8
  %.55 = icmp eq i64 %.54, 13
  br i1 %.55, label %.5.if.if, label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5.if.if, %.5
  %func.0 = phi %LLVMValueRef.580455* [ null, %.5 ], [ %.88, %.5.if.if ], [ null, %.5.if ]
  %.101 = load i64, i64* %1, align 8
  %.102 = icmp eq i64 %.101, 0
  br i1 %.102, label %.5.endif.if, label %for.entry

.5.if.if:                                         ; preds = %.5.if
  %.59 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.25, align 8
  %.60 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.59, i64 0, i32 3
  %.61 = load %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)*, %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)** %.60, align 8
  %.62 = load %MemberExpression.580341*, %MemberExpression.580341** %member_exp, align 8
  %.63 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.62, i64 0, i32 6
  %.64 = load %PropId.580339*, %PropId.580339** %.63, align 8
  %.65 = getelementptr inbounds %PropId.580339, %PropId.580339* %.64, i64 0, i32 2
  %.66 = load %TypeId.580287*, %TypeId.580287** %.65, align 8
  %.67 = call %CGClassType.580487* %.61(%CodeGen.580507* %.1, %TypeId.580287* %.66)
  %.71 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.25, align 8
  %.72 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.71, i64 0, i32 39
  %.73 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.72, align 8
  %.76 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.62, i64 0, i32 5
  %.77 = load %Expression.580293*, %Expression.580293** %.76, align 8
  %.78 = call %LLVMValueRef.580455* %.73(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.77)
  %.82 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.25, align 8
  %.83 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.82, i64 0, i32 38
  %.84 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)** %.83, align 8
  %.88 = call %LLVMValueRef.580455* %.84(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %MemberExpression.580341* %.62, %LLVMValueRef.580455* %.78)
  %.93 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.14, align 8
  %.94 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.93, i64 0, i32 2
  %.95 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.94, align 8
  call void %.95(%"Array<LLVMValueRef>.580505"* %.13, %LLVMValueRef.580455* %.78)
  br label %.5.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.106 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.25, align 8
  %.107 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.106, i64 0, i32 39
  %.108 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.107, align 8
  %.112 = load %Expression.580293*, %Expression.580293** %.30, align 8
  %.113 = call %LLVMValueRef.580455* %.108(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.112)
  br label %for.entry

for.entry:                                        ; preds = %.5.endif, %.5.endif.if
  %func.2 = phi %LLVMValueRef.580455* [ %.113, %.5.endif.if ], [ %func.0, %.5.endif ]
  %.121 = getelementptr inbounds %CallExpression.580329, %CallExpression.580329* %.3, i64 0, i32 6
  %.1223 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %.121, align 8
  %.1234 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1223, i64 0, i32 2
  %.1245 = load i64, i64* %.1234, align 8
  %.1256 = icmp sgt i64 %.1245, 0
  br i1 %.1256, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %.1228 = phi %"Array<Expression>.580311"* [ %.122, %for.body ], [ %.1223, %for.entry ]
  %storemerge7 = phi i64 [ %.153, %for.body ], [ 0, %for.entry ]
  %.130 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.25, align 8
  %.131 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.130, i64 0, i32 39
  %.132 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.131, align 8
  %.138 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.1228, i64 0, i32 0
  %.139 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.138, align 8
  %.140 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.139, i64 0, i32 5
  %.141 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.140, align 8
  %.142 = call %Expression.580293* %.141(%"Array<Expression>.580311"* %.1228, i64 %storemerge7)
  %.143 = call %LLVMValueRef.580455* %.132(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.142)
  %.145 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.14, align 8
  %.146 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.145, i64 0, i32 2
  %.147 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.146, align 8
  call void %.147(%"Array<LLVMValueRef>.580505"* %.13, %LLVMValueRef.580455* %.143)
  %.153 = add nuw nsw i64 %storemerge7, 1
  %.122 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %.121, align 8
  %.123 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.122, i64 0, i32 2
  %.124 = load i64, i64* %.123, align 8
  %.125 = icmp slt i64 %.153, %.124
  br i1 %.125, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %5 = bitcast i8* %.16 to %LLVMValueRef.580455***
  %.161 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %5, align 8
  %.164 = load i64, i64* %1, align 8
  %.165 = call %LLVMValueRef.580455* @LLVMBuildCall2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.34, %LLVMValueRef.580455* %func.2, %LLVMValueRef.580455** %.161, i64 %.164, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.165
}

define %LLVMValueRef.580455* @CodeGen_codegen_index_exp(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %IndexExpression.580327* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.11, i64 0, i32 25
  %.13 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.12, align 8
  %.16 = bitcast %IndexExpression.580327* %.3 to %Expression.580293*
  %.17 = call %LLVMValueRef.580455* %.13(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.16)
  %.22 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.22, i64 0, i32 13
  %.24 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.23, align 8
  %.26 = getelementptr inbounds %IndexExpression.580327, %IndexExpression.580327* %.3, i64 0, i32 4
  %.27 = load %Type.580273*, %Type.580273** %.26, align 8
  %.28 = call %LLVMTypeRef.580454* %.24(%CodeGen.580507* %.1, %Type.580273* %.27, i1 true)
  %.30 = call %LLVMValueRef.580455* @LLVMBuildLoad2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.28, %LLVMValueRef.580455* %.17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.30
}

define %LLVMValueRef.580455* @CodeGen_codegen_new_exp(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %NewExpression.580325* nocapture readonly %.3) {
.5:
  %.11 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.12 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.11, align 8
  %.13 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.12, i64 0, i32 13
  %.14 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.13, align 8
  %.16 = getelementptr inbounds %NewExpression.580325, %NewExpression.580325* %.3, i64 0, i32 7
  %.17 = load %Type.580273*, %Type.580273** %.16, align 8
  %.18 = call %LLVMTypeRef.580454* %.14(%CodeGen.580507* %.1, %Type.580273* %.17, i1 false)
  %.21 = getelementptr inbounds %NewExpression.580325, %NewExpression.580325* %.3, i64 0, i32 6
  %.22 = load i1, i1* %.21, align 1
  br i1 %.22, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.26 = call %LLVMValueRef.580455* @LLVMBuildMalloc(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.31 = call %LLVMValueRef.580455* @LLVMBuildAlloca(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %.5.endif

.5.endif:                                         ; preds = %.5.else, %.5.if
  %ptr.0 = phi %LLVMValueRef.580455* [ %.26, %.5.if ], [ %.31, %.5.else ]
  %.36 = load %Type.580273*, %Type.580273** %.16, align 8
  %.37 = call i1 @is_object(%Type.580273* %.36)
  br i1 %.37, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.41 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.11, align 8
  %.42 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.41, i64 0, i32 43
  %.43 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ObjectType.580297*, %LLVMValueRef.580455*, %"Array<Expression>.580311"*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ObjectType.580297*, %LLVMValueRef.580455*, %"Array<Expression>.580311"*)** %.42, align 8
  %0 = bitcast %Type.580273** %.16 to %ObjectType.580297**
  %.471 = load %ObjectType.580297*, %ObjectType.580297** %0, align 8
  %.51 = getelementptr inbounds %NewExpression.580325, %NewExpression.580325* %.3, i64 0, i32 5
  %.52 = load %"Array<Expression>.580311"*, %"Array<Expression>.580311"** %.51, align 8
  call void %.43(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %ObjectType.580297* %.471, %LLVMValueRef.580455* %ptr.0, %"Array<Expression>.580311"* %.52)
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif.if, %.5.endif
  ret %LLVMValueRef.580455* %ptr.0
}

define %LLVMValueRef.580455* @CodeGen_codegen_member_exp(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %MemberExpression.580341* %.3, %LLVMValueRef.580455* %.4) {
.6:
  %.12 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.3, i64 0, i32 5
  %.13 = load %Expression.580293*, %Expression.580293** %.12, align 8
  %.14 = getelementptr inbounds %Expression.580293, %Expression.580293* %.13, i64 0, i32 4
  %.15 = load %Type.580273*, %Type.580273** %.14, align 8
  %.16 = getelementptr inbounds %Type.580273, %Type.580273* %.15, i64 0, i32 1
  %.17 = load i64, i64* %.16, align 8
  %.23 = getelementptr inbounds %Expression.580293, %Expression.580293* %.13, i64 1
  %0 = bitcast %Expression.580293* %.23 to %VarId.580331**
  %.24 = load %VarId.580331*, %VarId.580331** %0, align 8
  %.27 = icmp eq i64 %.17, 13
  br i1 %.27, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.30 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.31 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.30, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.31, i64 0, i32 24
  %.33 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)** %.32, align 8
  %.37 = call %LLVMValueRef.580455* %.33(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %MemberExpression.580341* %.3, %LLVMValueRef.580455* %.4)
  %.40 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 11
  %.41 = load %Program.580445*, %Program.580445** %.40, align 8
  %.43 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.3, i64 0, i32 6
  %.44 = load %PropId.580339*, %PropId.580339** %.43, align 8
  %.45 = call i64 @get_class_prop_visibility(%Program.580445* %.41, %PropId.580339* %.44)
  %.46 = icmp eq i64 %.45, 0
  %.48 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.3, i64 0, i32 4
  %.49 = load %Type.580273*, %Type.580273** %.48, align 8
  %.50 = getelementptr inbounds %Type.580273, %Type.580273* %.49, i64 0, i32 1
  %.51 = load i64, i64* %.50, align 8
  %.52 = icmp eq i64 %.51, 17
  %.53 = and i1 %.46, %.52
  br i1 %.53, label %.6.if.if, label %.6.if.endif

.6.endif:                                         ; preds = %.6
  %.71 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.3, i64 0, i32 6
  %.72 = load %PropId.580339*, %PropId.580339** %.71, align 8
  %.73 = call %string.580129* @create_prop_key(%PropId.580339* %.72)
  %.76 = getelementptr inbounds %VarId.580331, %VarId.580331* %.24, i64 0, i32 1
  %.77 = load i64, i64* %.76, align 8
  switch i64 %.77, label %.6.if.if [
    i64 3, label %.6.endif.if
    i64 4, label %.6.endif.endif.if
  ]

.6.if.if:                                         ; preds = %.6.endif, %.6.endif.if.endif.endif, %.6.if
  %merge = phi %LLVMValueRef.580455* [ %.37, %.6.if ], [ %.111, %.6.endif.if.endif.endif ], [ null, %.6.endif ]
  ret %LLVMValueRef.580455* %merge

.6.if.endif:                                      ; preds = %.6.if
  %.60 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.30, align 8
  %.61 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.60, i64 0, i32 13
  %.62 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.61, align 8
  %.66 = call %LLVMTypeRef.580454* %.62(%CodeGen.580507* %.1, %Type.580273* %.49, i1 true)
  %.68 = call %LLVMValueRef.580455* @LLVMBuildLoad2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.66, %LLVMValueRef.580455* %.37, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.68

.6.endif.if:                                      ; preds = %.6.endif
  %.81 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.82 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.81, align 8
  %.83 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.82, i64 0, i32 5
  %.84 = load %CGClassType.580487* (%CodeGen.580507*, %VarId.580331*)*, %CGClassType.580487* (%CodeGen.580507*, %VarId.580331*)** %.83, align 8
  %.86 = call %CGClassType.580487* %.84(%CodeGen.580507* %.1, %VarId.580331* %.24)
  %1 = ptrtoint %CGClassType.580487* %.86 to i64
  %.89 = trunc i64 %1 to i32
  %.91 = icmp eq i32 %.89, 0
  br i1 %.91, label %.6.endif.if.if, label %.6.endif.if.endif

.6.endif.if.if:                                   ; preds = %.6.endif.if
  %.93 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.94 = bitcast i8* %.93 to %string.580129*
  %.94.repack = bitcast i8* %.93 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.94.repack, align 8
  %.94.repack8 = getelementptr inbounds i8, i8* %.93, i64 8
  %2 = bitcast i8* %.94.repack8 to i8**
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.384, i64 0, i64 0), i8** %2, align 8
  %.94.repack9 = getelementptr inbounds i8, i8* %.93, i64 16
  %3 = bitcast i8* %.94.repack9 to i64*
  store i64 51, i64* %3, align 8
  %.94.repack10 = getelementptr inbounds i8, i8* %.93, i64 24
  %4 = bitcast i8* %.94.repack10 to i64*
  store i64 51, i64* %4, align 8
  %.99 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.100 = call i8* %.99(%string.580129* %.94)
  %.101 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.6.endif.if.endif

.6.endif.if.endif:                                ; preds = %.6.endif.if.if, %.6.endif.if
  %.104 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.86, i64 0, i32 4
  %.105 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.104, align 8
  %.106 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.105, i64 0, i32 0
  %.107 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.106, align 8
  %.108 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.107, i64 0, i32 3
  %.109 = load %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)** %.108, align 8
  %.111 = call %LLVMValueRef.580455* %.109(%"Map<string, LLVMValueRef>.580490"* %.105, %string.580129* %.73)
  %5 = ptrtoint %LLVMValueRef.580455* %.111 to i64
  %.114 = trunc i64 %5 to i32
  %.116 = icmp eq i32 %.114, 0
  br i1 %.116, label %.6.endif.if.endif.if, label %.6.endif.if.endif.endif

.6.endif.if.endif.if:                             ; preds = %.6.endif.if.endif
  %.118 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.119 = bitcast i8* %.118 to %string.580129*
  %.119.repack = bitcast i8* %.118 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.119.repack, align 8
  %.119.repack5 = getelementptr inbounds i8, i8* %.118, i64 8
  %6 = bitcast i8* %.119.repack5 to i8**
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @str.385, i64 0, i64 0), i8** %6, align 8
  %.119.repack6 = getelementptr inbounds i8, i8* %.118, i64 16
  %7 = bitcast i8* %.119.repack6 to i64*
  store i64 59, i64* %7, align 8
  %.119.repack7 = getelementptr inbounds i8, i8* %.118, i64 24
  %8 = bitcast i8* %.119.repack7 to i64*
  store i64 59, i64* %8, align 8
  %.124 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.125 = call i8* %.124(%string.580129* %.119)
  %.126 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.6.endif.if.endif.endif

.6.endif.if.endif.endif:                          ; preds = %.6.endif.if.endif.if, %.6.endif.if.endif
  %.129 = getelementptr inbounds %MemberExpression.580341, %MemberExpression.580341* %.3, i64 0, i32 4
  %.130 = load %Type.580273*, %Type.580273** %.129, align 8
  %.131 = getelementptr inbounds %Type.580273, %Type.580273* %.130, i64 0, i32 1
  %.132 = load i64, i64* %.131, align 8
  %.133 = icmp eq i64 %.132, 17
  br i1 %.133, label %.6.if.if, label %.6.endif.if.endif.endif.endif

.6.endif.if.endif.endif.endif:                    ; preds = %.6.endif.if.endif.endif
  %.140 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.81, align 8
  %.141 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.140, i64 0, i32 13
  %.142 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.141, align 8
  %.146 = call %LLVMTypeRef.580454* %.142(%CodeGen.580507* %.1, %Type.580273* %.130, i1 true)
  %.148 = call %LLVMValueRef.580455* @LLVMBuildLoad2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.146, %LLVMValueRef.580455* %.111, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  ret %LLVMValueRef.580455* %.148

.6.endif.endif.if:                                ; preds = %.6.endif
  %.156 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.157 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.156, align 8
  %.158 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.157, i64 0, i32 6
  %.159 = load %CGEnumType.580501* (%CodeGen.580507*, %VarId.580331*)*, %CGEnumType.580501* (%CodeGen.580507*, %VarId.580331*)** %.158, align 8
  %.161 = call %CGEnumType.580501* %.159(%CodeGen.580507* %.1, %VarId.580331* %.24)
  %9 = ptrtoint %CGEnumType.580501* %.161 to i64
  %.164 = trunc i64 %9 to i32
  %.166 = icmp eq i32 %.164, 0
  br i1 %.166, label %.6.endif.endif.if.if, label %.6.endif.endif.if.endif

.6.endif.endif.if.if:                             ; preds = %.6.endif.endif.if
  %.168 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.169 = bitcast i8* %.168 to %string.580129*
  %.169.repack = bitcast i8* %.168 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.169.repack, align 8
  %.169.repack2 = getelementptr inbounds i8, i8* %.168, i64 8
  %10 = bitcast i8* %.169.repack2 to i8**
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @str.386, i64 0, i64 0), i8** %10, align 8
  %.169.repack3 = getelementptr inbounds i8, i8* %.168, i64 16
  %11 = bitcast i8* %.169.repack3 to i64*
  store i64 50, i64* %11, align 8
  %.169.repack4 = getelementptr inbounds i8, i8* %.168, i64 24
  %12 = bitcast i8* %.169.repack4 to i64*
  store i64 50, i64* %12, align 8
  %.174 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.175 = call i8* %.174(%string.580129* %.169)
  %.176 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.175, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.6.endif.endif.if.endif

.6.endif.endif.if.endif:                          ; preds = %.6.endif.endif.if.if, %.6.endif.endif.if
  %.179 = getelementptr inbounds %CGEnumType.580501, %CGEnumType.580501* %.161, i64 0, i32 2
  %.180 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.179, align 8
  %.181 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.180, i64 0, i32 0
  %.182 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.181, align 8
  %.183 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.182, i64 0, i32 3
  %.184 = load %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)** %.183, align 8
  %.186 = call %LLVMValueRef.580455* %.184(%"Map<string, LLVMValueRef>.580490"* %.180, %string.580129* %.73)
  ret %LLVMValueRef.580455* %.186
}

define %LLVMValueRef.580455* @CodeGen_codegen_expression(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.580293, %Expression.580293* %.3, i64 0, i32 3
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.1.endif [
    i64 4, label %.5.if
    i64 0, label %.5.endif.if
    i64 1, label %.5.endif.endif.if
    i64 5, label %.5.endif.endif.endif.if
    i64 2, label %.5.endif.endif.endif.endif.if
    i64 7, label %.5.endif.endif.endif.endif.endif.if
    i64 8, label %.5.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.5.endif.endif.endif.endif.endif.endif.endif.if
    i64 14, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 13, label %.5.endif.endif.endif.endi...if
    i64 12, label %.5.endif.endif.endif.endi...endif.if
    i64 11, label %.5.endif.endif.endif.endi...endif.endif.if
    i64 15, label %.5.endif.endif.endif.endi...endif.endif.endif.if
    i64 10, label %.5.endif.endif.endif.endi...if.1
    i64 6, label %.5.endif.endif.endif.endi...endif.1.if
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.16 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.15, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.16, i64 0, i32 17
  %.18 = load %LLVMValueRef.580455* (%CodeGen.580507*, %BooleanExpression.580305*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %BooleanExpression.580305*)** %.17, align 8
  %.20 = bitcast %Expression.580293* %.3 to %BooleanExpression.580305*
  %.21 = call %LLVMValueRef.580455* %.18(%CodeGen.580507* %.1, %BooleanExpression.580305* %.20)
  ret %LLVMValueRef.580455* %.21

.5.endif.if:                                      ; preds = %.5
  %.29 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.30 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.29, align 8
  %.31 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.30, i64 0, i32 15
  %.32 = load %LLVMValueRef.580455* (%CodeGen.580507*, %IntExpression.580303*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %IntExpression.580303*)** %.31, align 8
  %.34 = bitcast %Expression.580293* %.3 to %IntExpression.580303*
  %.35 = call %LLVMValueRef.580455* %.32(%CodeGen.580507* %.1, %IntExpression.580303* %.34)
  ret %LLVMValueRef.580455* %.35

.5.endif.endif.if:                                ; preds = %.5
  %.43 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.44 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.43, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.44, i64 0, i32 16
  %.46 = load %LLVMValueRef.580455* (%CodeGen.580507*, %FloatExpression.580307*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %FloatExpression.580307*)** %.45, align 8
  %.48 = bitcast %Expression.580293* %.3 to %FloatExpression.580307*
  %.49 = call %LLVMValueRef.580455* %.46(%CodeGen.580507* %.1, %FloatExpression.580307* %.48)
  ret %LLVMValueRef.580455* %.49

.5.endif.endif.endif.if:                          ; preds = %.5
  %.57 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.58 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.57, align 8
  %.59 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.58, i64 0, i32 33
  %.60 = load %LLVMValueRef.580455* (%CodeGen.580507*, %NullExpression.580313*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %NullExpression.580313*)** %.59, align 8
  %.62 = bitcast %Expression.580293* %.3 to %NullExpression.580313*
  %.63 = call %LLVMValueRef.580455* %.60(%CodeGen.580507* %.1, %NullExpression.580313* %.62)
  ret %LLVMValueRef.580455* %.63

.5.endif.endif.endif.endif.if:                    ; preds = %.5
  %.71 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.72 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.71, align 8
  %.73 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.72, i64 0, i32 19
  %.74 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %StringExpression.580309*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %StringExpression.580309*)** %.73, align 8
  %.77 = bitcast %Expression.580293* %.3 to %StringExpression.580309*
  %.78 = call %LLVMValueRef.580455* %.74(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %StringExpression.580309* %.77)
  ret %LLVMValueRef.580455* %.78

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5
  %.86 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.87 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.86, align 8
  %.88 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.87, i64 0, i32 32
  %.89 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarAccessExpression.580343*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarAccessExpression.580343*)** %.88, align 8
  %.92 = bitcast %Expression.580293* %.3 to %VarAccessExpression.580343*
  %.93 = call %LLVMValueRef.580455* %.89(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %VarAccessExpression.580343* %.92)
  ret %LLVMValueRef.580455* %.93

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5
  %.101 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.102 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.101, align 8
  %.103 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.102, i64 0, i32 29
  %.104 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %BinaryExpression.580317*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %BinaryExpression.580317*)** %.103, align 8
  %.107 = bitcast %Expression.580293* %.3 to %BinaryExpression.580317*
  %.108 = call %LLVMValueRef.580455* %.104(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %BinaryExpression.580317* %.107)
  ret %LLVMValueRef.580455* %.108

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5
  %.116 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.117 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.116, align 8
  %.118 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.117, i64 0, i32 31
  %.119 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %UnaryExpression.580319*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %UnaryExpression.580319*)** %.118, align 8
  %.122 = bitcast %Expression.580293* %.3 to %UnaryExpression.580319*
  %.123 = call %LLVMValueRef.580455* %.119(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %UnaryExpression.580319* %.122)
  ret %LLVMValueRef.580455* %.123

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5
  %.131 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.132 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.131, align 8
  %.133 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.132, i64 0, i32 35
  %.134 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %CallExpression.580329*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %CallExpression.580329*)** %.133, align 8
  %.137 = bitcast %Expression.580293* %.3 to %CallExpression.580329*
  %.138 = call %LLVMValueRef.580455* %.134(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %CallExpression.580329* %.137)
  ret %LLVMValueRef.580455* %.138

.5.endif.endif.endif.endi...if:                   ; preds = %.5
  %.146 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.147 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.146, align 8
  %.148 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.147, i64 0, i32 36
  %.149 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IndexExpression.580327*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IndexExpression.580327*)** %.148, align 8
  %.152 = bitcast %Expression.580293* %.3 to %IndexExpression.580327*
  %.153 = call %LLVMValueRef.580455* %.149(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %IndexExpression.580327* %.152)
  ret %LLVMValueRef.580455* %.153

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5
  %.161 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.162 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.161, align 8
  %.163 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.162, i64 0, i32 38
  %.164 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %MemberExpression.580341*, %LLVMValueRef.580455*)** %.163, align 8
  %.167 = bitcast %Expression.580293* %.3 to %MemberExpression.580341*
  %.168 = call %LLVMValueRef.580455* %.164(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %MemberExpression.580341* %.167, %LLVMValueRef.580455* null)
  ret %LLVMValueRef.580455* %.168

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5
  %.176 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.177 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.176, align 8
  %.178 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.177, i64 0, i32 37
  %.179 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %NewExpression.580325*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %NewExpression.580325*)** %.178, align 8
  %.182 = bitcast %Expression.580293* %.3 to %NewExpression.580325*
  %.183 = call %LLVMValueRef.580455* %.179(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %NewExpression.580325* %.182)
  ret %LLVMValueRef.580455* %.183

.5.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.5
  %.191 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.192 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.191, align 8
  %.193 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.192, i64 0, i32 34
  %.194 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %TernaryExpression.580321*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %TernaryExpression.580321*)** %.193, align 8
  %.197 = bitcast %Expression.580293* %.3 to %TernaryExpression.580321*
  %.198 = call %LLVMValueRef.580455* %.194(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %TernaryExpression.580321* %.197)
  ret %LLVMValueRef.580455* %.198

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5
  %.206 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.207 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.206, align 8
  %.208 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.207, i64 0, i32 30
  %.209 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %TypeCastExpression.580323*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %TypeCastExpression.580323*)** %.208, align 8
  %.212 = bitcast %Expression.580293* %.3 to %TypeCastExpression.580323*
  %.213 = call %LLVMValueRef.580455* %.209(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %TypeCastExpression.580323* %.212)
  ret %LLVMValueRef.580455* %.213

.5.endif.endif.endif.endi...endif.1.if:           ; preds = %.5
  %.221 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.222 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.221, align 8
  %.223 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.222, i64 0, i32 21
  %.224 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ArrayExpression.580315*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ArrayExpression.580315*)** %.223, align 8
  %.227 = bitcast %Expression.580293* %.3 to %ArrayExpression.580315*
  %.228 = call %LLVMValueRef.580455* %.224(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %ArrayExpression.580315* %.227)
  ret %LLVMValueRef.580455* %.228

.5.endif.endif.endif.endi...endif.1.endif:        ; preds = %.5
  %.230 = call %LLVMTypeRef.580454* @LLVMInt32Type()
  %.231 = call %LLVMValueRef.580455* @LLVMConstInt(%LLVMTypeRef.580454* %.230, i64 0, i1 false)
  ret %LLVMValueRef.580455* %.231
}

define void @CodeGen_codegen_if_stmt(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %IfStatement.580349* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.11, i64 0, i32 39
  %.13 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.12, align 8
  %.16 = getelementptr inbounds %IfStatement.580349, %IfStatement.580349* %.3, i64 0, i32 2
  %.17 = load %Expression.580293*, %Expression.580293** %.16, align 8
  %.18 = call %LLVMValueRef.580455* %.13(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.17)
  %.21 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.22 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.21, align 8
  %.24 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 8
  %.25 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.24, align 8
  %.26 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.22, %LLVMValueRef.580455* %.25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.387, i64 0, i64 0))
  %.30 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.21, align 8
  %.33 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.24, align 8
  %.34 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.30, %LLVMValueRef.580455* %.33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.28, i64 0, i64 0))
  %.38 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.21, align 8
  %.41 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.24, align 8
  %.42 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.38, %LLVMValueRef.580455* %.41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.388, i64 0, i64 0))
  %.48 = call %LLVMValueRef.580455* @LLVMBuildCondBr(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.18, %LLVMBasicBlockRef.580456* %.26, %LLVMBasicBlockRef.580456* %.34)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.26)
  %.54 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.55 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.54, i64 0, i32 47
  %.56 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)** %.55, align 8
  %.59 = getelementptr inbounds %IfStatement.580349, %IfStatement.580349* %.3, i64 0, i32 3
  %.60 = load %Block.580345*, %Block.580345** %.59, align 8
  call void %.56(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Block.580345* %.60)
  %.64 = load %Block.580345*, %Block.580345** %.59, align 8
  %.65 = call i1 @is_terminated(%Block.580345* %.64)
  br i1 %.65, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.72 = call %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.42)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.34)
  %else_terminated = alloca i1, align 1
  store i1 false, i1* %else_terminated, align 1
  %.79 = getelementptr inbounds %IfStatement.580349, %IfStatement.580349* %.3, i64 0, i32 4
  %0 = bitcast %Block.580345** %.79 to i64*
  %.801 = load i64, i64* %0, align 8
  %.81 = trunc i64 %.801 to i32
  %.83.not = icmp eq i32 %.81, 0
  br i1 %.83.not, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.87 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.10, align 8
  %.88 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.87, i64 0, i32 47
  %.89 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)** %.88, align 8
  %.93 = load %Block.580345*, %Block.580345** %.79, align 8
  call void %.89(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Block.580345* %.93)
  %.97 = load %Block.580345*, %Block.580345** %.79, align 8
  %.98 = call i1 @is_terminated(%Block.580345* %.97)
  store i1 %.98, i1* %else_terminated, align 1
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif, %.5.endif.if
  %.101 = load i1, i1* %else_terminated, align 1
  br i1 %.101, label %.5.endif.endif.else, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.106 = call %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.42)
  br label %.5.endif.endif.endif

.5.endif.endif.else:                              ; preds = %.5.endif.endif
  br i1 %.65, label %.5.endif.endif.else.if, label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif.else, %.5.endif.endif.else.if, %.5.endif.endif.if
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.42)
  ret void

.5.endif.endif.else.if:                           ; preds = %.5.endif.endif.else
  call void @LLVMDeleteBasicBlock(%LLVMBasicBlockRef.580456* %.42)
  br label %.5.endif.endif.endif
}

define void @CodeGen_codegen_for_stmt(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %ForStatement.580355* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.11 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.13 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 8
  %.14 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.13, align 8
  %.15 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.11, %LLVMValueRef.580455* %.14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.389, i64 0, i64 0))
  %.19 = call %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.15)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.15)
  %.24 = getelementptr inbounds %ForStatement.580355, %ForStatement.580355* %.3, i64 0, i32 2
  %0 = bitcast %Statement.580285** %.24 to i64*
  %.251 = load i64, i64* %0, align 8
  %.26 = trunc i64 %.251 to i32
  %.28.not = icmp eq i32 %.26, 0
  br i1 %.28.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.32 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.31, align 8
  %.33 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.32, i64 0, i32 46
  %.34 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Statement.580285*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Statement.580285*)** %.33, align 8
  %.38 = load %Statement.580285*, %Statement.580285** %.24, align 8
  call void %.34(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Statement.580285* %.38)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.43 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.46 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.13, align 8
  %.47 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.43, %LLVMValueRef.580455* %.46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.390, i64 0, i64 0))
  %.51 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.54 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.13, align 8
  %.55 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.51, %LLVMValueRef.580455* %.54, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.391, i64 0, i64 0))
  %.59 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.62 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.13, align 8
  %.63 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.59, %LLVMValueRef.580455* %.62, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.392, i64 0, i64 0))
  %for_incr_block = alloca %LLVMBasicBlockRef.580456*, align 8
  store %LLVMBasicBlockRef.580456* %.63, %LLVMBasicBlockRef.580456** %for_incr_block, align 8
  %.67 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.70 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.13, align 8
  %.71 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.67, %LLVMValueRef.580455* %.70, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.393, i64 0, i64 0))
  %for_end_block = alloca %LLVMBasicBlockRef.580456*, align 8
  store %LLVMBasicBlockRef.580456* %.71, %LLVMBasicBlockRef.580456** %for_end_block, align 8
  %.74 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 9
  %1 = bitcast %LLVMBasicBlockRef.580456** %.74 to i64*
  %.752 = load i64, i64* %1, align 8
  %.78 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 10
  %2 = bitcast %LLVMBasicBlockRef.580456** %.78 to i64*
  %.793 = load i64, i64* %2, align 8
  %3 = bitcast %LLVMBasicBlockRef.580456** %for_end_block to i64*
  %.824 = load i64, i64* %3, align 8
  store i64 %.824, i64* %1, align 8
  %4 = bitcast %LLVMBasicBlockRef.580456** %for_incr_block to i64*
  %.865 = load i64, i64* %4, align 8
  store i64 %.865, i64* %2, align 8
  %.91 = call %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.47)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.47)
  %.96 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.97 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.96, align 8
  %.98 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.97, i64 0, i32 10
  %.99 = load %LLVMValueRef.580455* (%CodeGen.580507*, i1)*, %LLVMValueRef.580455* (%CodeGen.580507*, i1)** %.98, align 8
  %.100 = call %LLVMValueRef.580455* %.99(%CodeGen.580507* %.1, i1 true)
  %condition = alloca %LLVMValueRef.580455*, align 8
  store %LLVMValueRef.580455* %.100, %LLVMValueRef.580455** %condition, align 8
  %.103 = getelementptr inbounds %ForStatement.580355, %ForStatement.580355* %.3, i64 0, i32 3
  %5 = bitcast %Expression.580293** %.103 to i64*
  %.1046 = load i64, i64* %5, align 8
  %.105 = trunc i64 %.1046 to i32
  %.107.not = icmp eq i32 %.105, 0
  br i1 %.107.not, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.111 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.96, align 8
  %.112 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.111, i64 0, i32 39
  %.113 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.112, align 8
  %.117 = load %Expression.580293*, %Expression.580293** %.103, align 8
  %.118 = call %LLVMValueRef.580455* %.113(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.117)
  store %LLVMValueRef.580455* %.118, %LLVMValueRef.580455** %condition, align 8
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif, %.5.endif.if
  %.122 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %condition, align 8
  %.125 = call %LLVMValueRef.580455* @LLVMBuildCondBr(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.122, %LLVMBasicBlockRef.580456* %.55, %LLVMBasicBlockRef.580456* %.71)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.55)
  %.131 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.96, align 8
  %.132 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.131, i64 0, i32 47
  %.133 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)** %.132, align 8
  %.136 = getelementptr inbounds %ForStatement.580355, %ForStatement.580355* %.3, i64 0, i32 5
  %.137 = load %Block.580345*, %Block.580345** %.136, align 8
  call void %.133(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Block.580345* %.137)
  %.141 = load %Block.580345*, %Block.580345** %.136, align 8
  %.142 = call i1 @is_terminated(%Block.580345* %.141)
  br i1 %.142, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.147 = call %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.63)
  br label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif, %.5.endif.endif.if
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.63)
  %.153 = getelementptr inbounds %ForStatement.580355, %ForStatement.580355* %.3, i64 0, i32 4
  %6 = bitcast %Expression.580293** %.153 to i64*
  %.1547 = load i64, i64* %6, align 8
  %.155 = trunc i64 %.1547 to i32
  %.157.not = icmp eq i32 %.155, 0
  br i1 %.157.not, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.161 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.96, align 8
  %.162 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.161, i64 0, i32 39
  %.163 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.162, align 8
  %.167 = load %Expression.580293*, %Expression.580293** %.153, align 8
  %.168 = call %LLVMValueRef.580455* %.163(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.167)
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif, %.5.endif.endif.endif.if
  %.172 = call %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.47)
  store i64 %.752, i64* %1, align 8
  store i64 %.793, i64* %2, align 8
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.71)
  ret void
}

define void @CodeGen_codegen_while_stmt(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %WhileStatement.580357* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.11 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.13 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 8
  %.14 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.13, align 8
  %.15 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.11, %LLVMValueRef.580455* %.14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.394, i64 0, i64 0))
  %.19 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.10, align 8
  %.22 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.13, align 8
  %.23 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.19, %LLVMValueRef.580455* %.22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.395, i64 0, i64 0))
  %.26 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 9
  %0 = bitcast %LLVMBasicBlockRef.580456** %.26 to i64*
  %.271 = load i64, i64* %0, align 8
  %.30 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 10
  %1 = bitcast %LLVMBasicBlockRef.580456** %.30 to i64*
  %.312 = load i64, i64* %1, align 8
  store %LLVMBasicBlockRef.580456* %.23, %LLVMBasicBlockRef.580456** %.26, align 8
  store %LLVMBasicBlockRef.580456* %.15, %LLVMBasicBlockRef.580456** %.30, align 8
  %.42 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.43 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.42, align 8
  %.44 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.43, i64 0, i32 39
  %.45 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.44, align 8
  %.48 = getelementptr inbounds %WhileStatement.580357, %WhileStatement.580357* %.3, i64 0, i32 2
  %.49 = load %Expression.580293*, %Expression.580293** %.48, align 8
  %.50 = call %LLVMValueRef.580455* %.45(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.49)
  %.56 = call %LLVMValueRef.580455* @LLVMBuildCondBr(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.50, %LLVMBasicBlockRef.580456* %.15, %LLVMBasicBlockRef.580456* %.23)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.15)
  %.62 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.42, align 8
  %.63 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.62, i64 0, i32 47
  %.64 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)** %.63, align 8
  %.67 = getelementptr inbounds %WhileStatement.580357, %WhileStatement.580357* %.3, i64 0, i32 3
  %.68 = load %Block.580345*, %Block.580345** %.67, align 8
  call void %.64(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Block.580345* %.68)
  %.72 = load %Block.580345*, %Block.580345** %.67, align 8
  %.73 = call i1 @is_terminated(%Block.580345* %.72)
  br i1 %.73, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.78 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.42, align 8
  %.79 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.78, i64 0, i32 39
  %.80 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.79, align 8
  %.84 = load %Expression.580293*, %Expression.580293** %.48, align 8
  %.85 = call %LLVMValueRef.580455* %.80(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.84)
  %.91 = call %LLVMValueRef.580455* @LLVMBuildCondBr(%LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.85, %LLVMBasicBlockRef.580456* %.15, %LLVMBasicBlockRef.580456* %.23)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.23)
  store i64 %.271, i64* %0, align 8
  store i64 %.312, i64* %1, align 8
  ret void
}

define void @CodeGen_build_constructor_call(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %ObjectType.580297* nocapture readonly %.3, %LLVMValueRef.580455* %.4, %"Array<Expression>.580311"* %.5) {
.7:
  %.14 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 11
  %.15 = load %Program.580445*, %Program.580445** %.14, align 8
  %.17 = getelementptr inbounds %ObjectType.580297, %ObjectType.580297* %.3, i64 0, i32 2
  %.18 = load %ClassId.580289*, %ClassId.580289** %.17, align 8
  %.19 = call %Class.580403* @get_class(%Program.580445* %.15, %ClassId.580289* %.18)
  %.22 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.23 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.23, i64 0, i32 3
  %.25 = load %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)*, %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)** %.24, align 8
  %0 = bitcast %ClassId.580289** %.17 to %TypeId.580287**
  %.281 = load %TypeId.580287*, %TypeId.580287** %0, align 8
  %.30 = call %CGClassType.580487* %.25(%CodeGen.580507* %.1, %TypeId.580287* %.281)
  %.31 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.30, i64 0, i32 7
  %.32 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.31, align 8
  %.35 = getelementptr inbounds %Class.580403, %Class.580403* %.19, i64 0, i32 4
  %.36 = load %PropId.580339*, %PropId.580339** %.35, align 8
  %.37 = getelementptr inbounds %PropId.580339, %PropId.580339* %.36, i64 0, i32 3
  %.38 = load i64, i64* %.37, align 8
  %.42 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %.43 = bitcast i8* %.42 to %LLVMValueRef.580455**
  store %LLVMValueRef.580455* %.4, %LLVMValueRef.580455** %.43, align 8
  %.46 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.47 = bitcast i8* %.46 to %"Array<LLVMValueRef>.580505"*
  %.48 = bitcast i8* %.46 to %"Array<LLVMValueRef>_vtable_ty.580506"**
  store %"Array<LLVMValueRef>_vtable_ty.580506"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.580506"** %.48, align 8
  %.50 = getelementptr inbounds i8, i8* %.46, i64 8
  %1 = bitcast i8* %.50 to i8**
  store i8* %.42, i8** %1, align 8
  %.52 = getelementptr inbounds i8, i8* %.46, i64 16
  %2 = bitcast i8* %.52 to i64*
  store i64 1, i64* %2, align 8
  %.54 = getelementptr inbounds i8, i8* %.46, i64 24
  %3 = bitcast i8* %.54 to i64*
  store i64 8, i64* %3, align 8
  %.62 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.5, i64 0, i32 2
  %.634 = load i64, i64* %.62, align 8
  %.645 = icmp sgt i64 %.634, 0
  br i1 %.645, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.7
  %.75 = getelementptr inbounds %"Array<Expression>.580311", %"Array<Expression>.580311"* %.5, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge6 = phi i64 [ 0, %for.body.lr.ph ], [ %.90, %for.body ]
  %.69 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.70 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.69, i64 0, i32 39
  %.71 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.70, align 8
  %.76 = load %"Array<Expression>_vtable_ty.580312"*, %"Array<Expression>_vtable_ty.580312"** %.75, align 8
  %.77 = getelementptr inbounds %"Array<Expression>_vtable_ty.580312", %"Array<Expression>_vtable_ty.580312"* %.76, i64 0, i32 5
  %.78 = load %Expression.580293* (%"Array<Expression>.580311"*, i64)*, %Expression.580293* (%"Array<Expression>.580311"*, i64)** %.77, align 8
  %.79 = call %Expression.580293* %.78(%"Array<Expression>.580311"* %.5, i64 %storemerge6)
  %.80 = call %LLVMValueRef.580455* %.71(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.79)
  %.82 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.48, align 8
  %.83 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.82, i64 0, i32 2
  %.84 = load void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, %LLVMValueRef.580455*)** %.83, align 8
  call void %.84(%"Array<LLVMValueRef>.580505"* %.47, %LLVMValueRef.580455* %.80)
  %.90 = add nuw nsw i64 %storemerge6, 1
  %.63 = load i64, i64* %.62, align 8
  %.64 = icmp slt i64 %.90, %.63
  br i1 %.64, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.7
  %4 = ptrtoint %LLVMValueRef.580455* %.32 to i64
  %.94 = trunc i64 %4 to i32
  %.96.not = icmp eq i32 %.94, 0
  br i1 %.96.not, label %for.end.endif, label %for.end.if

for.end.if:                                       ; preds = %for.end
  %.100 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.101 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.100, i64 0, i32 13
  %.102 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.101, align 8
  %.105 = getelementptr inbounds %Class.580403, %Class.580403* %.19, i64 0, i32 6
  %.106 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.105, align 8
  %.107 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.106, i64 0, i32 0
  %.108 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.107, align 8
  %.109 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.108, i64 0, i32 5
  %.110 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.109, align 8
  %.111 = call %ClassMethod.580401* %.110(%"Array<ClassMethod>.580406"* %.106, i64 %.38)
  %.112 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.111, i64 0, i32 5
  %5 = bitcast %FunctionType.580279** %.112 to %Type.580273**
  %.1132 = load %Type.580273*, %Type.580273** %5, align 8
  %.115 = call %LLVMTypeRef.580454* %.102(%CodeGen.580507* %.1, %Type.580273* %.1132, i1 false)
  %6 = bitcast i8* %.50 to %LLVMValueRef.580455***
  %.122 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %6, align 8
  %.125 = load i64, i64* %2, align 8
  %.126 = call %LLVMValueRef.580455* @LLVMBuildCall2(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.115, %LLVMValueRef.580455* %.32, %LLVMValueRef.580455** %.122, i64 %.125, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  br label %for.end.endif

for.end.endif:                                    ; preds = %for.end, %for.end.if
  ret void
}

define void @CodeGen_codegen_var_declaration(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %VarDeclaration.580351* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %VarDeclaration.580351, %VarDeclaration.580351* %.3, i64 0, i32 3
  %.11 = load %VarId.580331*, %VarId.580331** %.10, align 8
  %.14 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 11
  %.15 = load %Program.580445*, %Program.580445** %.14, align 8
  %.17 = call %Var.580395* @get_var(%Program.580445* %.15, %VarId.580331* %.11)
  %.20 = getelementptr inbounds %Var.580395, %Var.580395* %.17, i64 0, i32 3
  %.21 = load %Expression.580293*, %Expression.580293** %.20, align 8
  %.24 = getelementptr inbounds %Var.580395, %Var.580395* %.17, i64 0, i32 1
  %.25 = load %Type.580273*, %Type.580273** %.24, align 8
  %.28 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.29 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.28, align 8
  %.30 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.29, i64 0, i32 13
  %.31 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.30, align 8
  %.33 = call %LLVMTypeRef.580454* %.31(%CodeGen.580507* %.1, %Type.580273* %.25, i1 true)
  %.36 = getelementptr inbounds %VarDeclaration.580351, %VarDeclaration.580351* %.3, i64 0, i32 2
  %.37 = load %string.580129*, %string.580129** %.36, align 8
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.37, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 10
  %.41 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.40, align 8
  %.42 = call i8* %.41(%string.580129* %.37)
  %.46 = getelementptr inbounds %VarDeclaration.580351, %VarDeclaration.580351* %.3, i64 0, i32 4
  %.47 = load i1, i1* %.46, align 1
  br i1 %.47, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.51 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.28, align 8
  %.52 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.51, i64 0, i32 39
  %.53 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.52, align 8
  %.56 = call %LLVMValueRef.580455* %.53(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.21)
  %.59 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  %.60 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.59, align 8
  %.63 = call %LLVMValueRef.580455* @LLVMAddGlobal(%LLVMModuleRef.580453* %.60, %LLVMTypeRef.580454* %.33, i8* %.42)
  call void @LLVMSetInitializer(%LLVMValueRef.580455* %.63, %LLVMValueRef.580455* %.56)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.72 = call %LLVMValueRef.580455* @LLVMBuildAlloca(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.33, i8* %.42)
  %0 = ptrtoint %Expression.580293* %.21 to i64
  %.75 = trunc i64 %0 to i32
  %.77.not = icmp eq i32 %.75, 0
  br i1 %.77.not, label %.5.endif, label %.5.else.if

.5.endif:                                         ; preds = %.5.else.if, %.5.else, %.5.if
  %ptr.0 = phi %LLVMValueRef.580455* [ %.63, %.5.if ], [ %.72, %.5.else ], [ %.72, %.5.else.if ]
  %.92 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.28, align 8
  %.93 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.92, i64 0, i32 9
  %.94 = load void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)*, void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)** %.93, align 8
  call void %.94(%CodeGen.580507* %.1, %VarId.580331* %.11, %LLVMValueRef.580455* %ptr.0)
  ret void

.5.else.if:                                       ; preds = %.5.else
  %.81 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.28, align 8
  %.82 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.81, i64 0, i32 26
  %.83 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %Expression.580293*)** %.82, align 8
  %.87 = call %LLVMValueRef.580455* %.83(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.72, %Expression.580293* %.21)
  br label %.5.endif
}

define void @CodeGen_codegen_const_declaration(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %ConstDeclaration.580353* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %ConstDeclaration.580353, %ConstDeclaration.580353* %.3, i64 0, i32 3
  %.11 = load %ConstId.580337*, %ConstId.580337** %.10, align 8
  %.14 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 11
  %.15 = load %Program.580445*, %Program.580445** %.14, align 8
  %.17 = call %Const.580397* @get_const(%Program.580445* %.15, %ConstId.580337* %.11)
  %.18 = getelementptr inbounds %Const.580397, %Const.580397* %.17, i64 0, i32 3
  %.19 = load %Expression.580293*, %Expression.580293** %.18, align 8
  %.22 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.23 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.23, i64 0, i32 13
  %.25 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.24, align 8
  %.27 = getelementptr inbounds %Expression.580293, %Expression.580293* %.19, i64 0, i32 4
  %.28 = load %Type.580273*, %Type.580273** %.27, align 8
  %.29 = call %LLVMTypeRef.580454* %.25(%CodeGen.580507* %.1, %Type.580273* %.28, i1 true)
  %.32 = getelementptr inbounds %ConstDeclaration.580353, %ConstDeclaration.580353* %.3, i64 0, i32 2
  %.33 = load %string.580129*, %string.580129** %.32, align 8
  %.34 = getelementptr inbounds %string.580129, %string.580129* %.33, i64 0, i32 0
  %.35 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.34, align 8
  %.36 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.35, i64 0, i32 10
  %.37 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.36, align 8
  %.38 = call i8* %.37(%string.580129* %.33)
  %.42 = getelementptr inbounds %ConstDeclaration.580353, %ConstDeclaration.580353* %.3, i64 0, i32 4
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.47 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.48 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.47, i64 0, i32 39
  %.49 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.48, align 8
  %.52 = call %LLVMValueRef.580455* %.49(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.19)
  %.55 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  %.56 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.55, align 8
  %.59 = call %LLVMValueRef.580455* @LLVMAddGlobal(%LLVMModuleRef.580453* %.56, %LLVMTypeRef.580454* %.29, i8* %.38)
  call void @LLVMSetInitializer(%LLVMValueRef.580455* %.59, %LLVMValueRef.580455* %.52)
  call void @LLVMSetGlobalConstant(%LLVMValueRef.580455* %.59, i1 true)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.70 = call %LLVMValueRef.580455* @LLVMBuildAlloca(%LLVMBuilderRef.580460* %.2, %LLVMTypeRef.580454* %.29, i8* %.38)
  %.74 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.75 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.74, i64 0, i32 26
  %.76 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %LLVMValueRef.580455*, %Expression.580293*)** %.75, align 8
  %.80 = call %LLVMValueRef.580455* %.76(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %LLVMValueRef.580455* %.70, %Expression.580293* %.19)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.else, %.5.if
  %ptr.0 = phi %LLVMValueRef.580455* [ %.59, %.5.if ], [ %.70, %.5.else ]
  %.84 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.85 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.84, i64 0, i32 9
  %.86 = load void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)*, void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)** %.85, align 8
  %.88 = bitcast %ConstId.580337* %.11 to %VarId.580331*
  call void %.86(%CodeGen.580507* %.1, %VarId.580331* %.88, %LLVMValueRef.580455* %ptr.0)
  ret void
}

define void @CodeGen_codegen_statement(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Statement.580285* %.3) {
.5:
  %.10 = getelementptr inbounds %Statement.580285, %Statement.580285* %.3, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.12 = icmp eq i64 %.11, 0
  br i1 %.12, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.16 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.15, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.16, i64 0, i32 40
  %.18 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IfStatement.580349*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %IfStatement.580349*)** %.17, align 8
  %.21 = bitcast %Statement.580285* %.3 to %IfStatement.580349*
  call void %.18(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %IfStatement.580349* %.21)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.26 = load i64, i64* %.10, align 8
  %.27 = icmp eq i64 %.26, 3
  br i1 %.27, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.30 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.31 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.30, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.31, i64 0, i32 41
  %.33 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ForStatement.580355*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ForStatement.580355*)** %.32, align 8
  %.36 = bitcast %Statement.580285* %.3 to %ForStatement.580355*
  call void %.33(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %ForStatement.580355* %.36)
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif.if, %.5.endif
  %.41 = load i64, i64* %.10, align 8
  %.42 = icmp eq i64 %.41, 4
  br i1 %.42, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.45 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.46 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.45, align 8
  %.47 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.46, i64 0, i32 42
  %.48 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %WhileStatement.580357*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %WhileStatement.580357*)** %.47, align 8
  %.51 = bitcast %Statement.580285* %.3 to %WhileStatement.580357*
  call void %.48(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %WhileStatement.580357* %.51)
  br label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif.if, %.5.endif.endif
  %.56 = load i64, i64* %.10, align 8
  %.57 = icmp eq i64 %.56, 5
  br i1 %.57, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.61 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 10
  %.62 = load %LLVMBasicBlockRef.580456*, %LLVMBasicBlockRef.580456** %.61, align 8
  %.63 = call %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.62)
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif.if, %.5.endif.endif.endif
  %.67 = load i64, i64* %.10, align 8
  %.68 = icmp eq i64 %.67, 6
  br i1 %.68, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.72 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 9
  %.73 = load %LLVMBasicBlockRef.580456*, %LLVMBasicBlockRef.580456** %.72, align 8
  %.74 = call %LLVMValueRef.580455* @LLVMBuildBr(%LLVMBuilderRef.580460* %.2, %LLVMBasicBlockRef.580456* %.73)
  br label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif
  %.78 = load i64, i64* %.10, align 8
  %.79 = icmp eq i64 %.78, 1
  br i1 %.79, label %.5.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif.endif.endif.endif
  %.82 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.83 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.82, align 8
  %.84 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.83, i64 0, i32 44
  %.85 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarDeclaration.580351*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %VarDeclaration.580351*)** %.84, align 8
  %.88 = bitcast %Statement.580285* %.3 to %VarDeclaration.580351*
  call void %.85(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %VarDeclaration.580351* %.88)
  br label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif
  %.93 = load i64, i64* %.10, align 8
  %.94 = icmp eq i64 %.93, 2
  br i1 %.94, label %.5.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5.endif.endif.endif.endif.endif.endif
  %.97 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.98 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.97, align 8
  %.99 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.98, i64 0, i32 45
  %.100 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ConstDeclaration.580353*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ConstDeclaration.580353*)** %.99, align 8
  %.103 = bitcast %Statement.580285* %.3 to %ConstDeclaration.580353*
  call void %.100(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %ConstDeclaration.580353* %.103)
  br label %.5.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.5.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif
  %.108 = load i64, i64* %.10, align 8
  %.109 = icmp eq i64 %.108, 7
  br i1 %.109, label %.5.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5.endif.endif.endif.endif.endif.endif.endif
  %.112 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.113 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.112, align 8
  %.114 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.113, i64 0, i32 14
  %.115 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ReturnStatement.580359*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %ReturnStatement.580359*)** %.114, align 8
  %.118 = bitcast %Statement.580285* %.3 to %ReturnStatement.580359*
  call void %.115(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %ReturnStatement.580359* %.118)
  br label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif.endif
  %.123 = load i64, i64* %.10, align 8
  %.124 = icmp eq i64 %.123, 8
  br i1 %.124, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif
  %.127 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.128 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.127, align 8
  %.129 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.128, i64 0, i32 39
  %.130 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.129, align 8
  %.133 = bitcast %Statement.580285* %.3 to %Expression.580293*
  %.134 = call %LLVMValueRef.580455* %.130(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Expression.580293* %.133)
  br label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif.endif.endif
  ret void
}

define void @CodeGen_codegen_block(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Block.580345* nocapture readonly %.3) {
.5:
  %.14 = getelementptr inbounds %Block.580345, %Block.580345* %.3, i64 0, i32 1
  %.152 = load %"Array<Statement>.580347"*, %"Array<Statement>.580347"** %.14, align 8
  %.163 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.152, i64 0, i32 2
  %.174 = load i64, i64* %.163, align 8
  %.185 = icmp sgt i64 %.174, 0
  br i1 %.185, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.21 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.157 = phi %"Array<Statement>.580347"* [ %.152, %for.body.lr.ph ], [ %.15, %for.body ]
  %storemerge6 = phi i64 [ 0, %for.body.lr.ph ], [ %.40, %for.body ]
  %.22 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.21, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.22, i64 0, i32 46
  %.24 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Statement.580285*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Statement.580285*)** %.23, align 8
  %.30 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.157, i64 0, i32 0
  %.31 = load %"Array<Statement>_vtable_ty.580348"*, %"Array<Statement>_vtable_ty.580348"** %.30, align 8
  %.32 = getelementptr inbounds %"Array<Statement>_vtable_ty.580348", %"Array<Statement>_vtable_ty.580348"* %.31, i64 0, i32 5
  %.33 = load %Statement.580285* (%"Array<Statement>.580347"*, i64)*, %Statement.580285* (%"Array<Statement>.580347"*, i64)** %.32, align 8
  %.34 = call %Statement.580285* %.33(%"Array<Statement>.580347"* %.157, i64 %storemerge6)
  call void %.24(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.2, %Statement.580285* %.34)
  %.40 = add nuw nsw i64 %storemerge6, 1
  %.15 = load %"Array<Statement>.580347"*, %"Array<Statement>.580347"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Statement>.580347", %"Array<Statement>.580347"* %.15, i64 0, i32 2
  %.17 = load i64, i64* %.16, align 8
  %.18 = icmp slt i64 %.40, %.17
  br i1 %.18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  ret void
}

define void @CodeGen_codegen_function(%CodeGen.580507* %.1, %Function.580391* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.9, i64 0, i32 2
  %.11 = load %LLVMValueRef.580455* (%CodeGen.580507*, %VarId.580331*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %VarId.580331*)** %.10, align 8
  %.13 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 1
  %.14 = load %VarId.580331*, %VarId.580331** %.13, align 8
  %.15 = call %LLVMValueRef.580455* %.11(%CodeGen.580507* %.1, %VarId.580331* %.14)
  %.18 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 7
  %.19 = load i1, i1* %.18, align 1
  br i1 %.19, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  call void @LLVMSetLinkage(%LLVMValueRef.580455* %.15, i64 0)
  ret void

.4.endif:                                         ; preds = %.4
  %0 = ptrtoint %LLVMValueRef.580455* %.15 to i64
  %.25 = trunc i64 %0 to i32
  %.27 = icmp eq i32 %.25, 0
  br i1 %.27, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %.4.endif
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.580129*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.30.repack, align 8
  %.30.repack1 = getelementptr inbounds i8, i8* %.29, i64 8
  %1 = bitcast i8* %.30.repack1 to i8**
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.396, i64 0, i64 0), i8** %1, align 8
  %.30.repack2 = getelementptr inbounds i8, i8* %.29, i64 16
  %2 = bitcast i8* %.30.repack2 to i64*
  store i64 44, i64* %2, align 8
  %.30.repack3 = getelementptr inbounds i8, i8* %.29, i64 24
  %3 = bitcast i8* %.30.repack3 to i64*
  store i64 44, i64* %3, align 8
  %.35 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.36 = call i8* %.35(%string.580129* %.30)
  %.37 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  br label %.4.endif.endif

.4.endif.endif:                                   ; preds = %.4.endif.if, %.4.endif
  %.40 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.41 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.40, align 8
  %.43 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.41, %LLVMValueRef.580455* %.15, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  %.47 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.40, align 8
  %.48 = call %LLVMBuilderRef.580460* @LLVMCreateBuilderInContext(%LLVMContextRef.580452* %.47)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.48, %LLVMBasicBlockRef.580456* %.43)
  %.58 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 3
  %.594 = load %"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"** %.58, align 8
  %.605 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.594, i64 0, i32 2
  %.616 = load i64, i64* %.605, align 8
  %.627 = icmp sgt i64 %.616, 0
  br i1 %.627, label %for.body, label %for.end

for.body:                                         ; preds = %.4.endif.endif, %for.body
  %.599 = phi %"Array<FunctionArg>.580393"* [ %.59, %for.body ], [ %.594, %.4.endif.endif ]
  %storemerge8 = phi i64 [ %.116, %for.body ], [ 0, %.4.endif.endif ]
  %.68 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.599, i64 0, i32 0
  %.69 = load %"Array<FunctionArg>_vtable_ty.580394"*, %"Array<FunctionArg>_vtable_ty.580394"** %.68, align 8
  %.70 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.580394", %"Array<FunctionArg>_vtable_ty.580394"* %.69, i64 0, i32 5
  %.71 = load %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)*, %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)** %.70, align 8
  %.72 = call %FunctionArg.580389* %.71(%"Array<FunctionArg>.580393"* %.599, i64 %storemerge8)
  %.76 = call %LLVMValueRef.580455* @LLVMGetParam(%LLVMValueRef.580455* %.15, i64 %storemerge8)
  %.81 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.8, align 8
  %.82 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.81, i64 0, i32 13
  %.83 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.82, align 8
  %.85 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.72, i64 0, i32 4
  %.86 = load %Type.580273*, %Type.580273** %.85, align 8
  %.87 = call %LLVMTypeRef.580454* %.83(%CodeGen.580507* %.1, %Type.580273* %.86, i1 true)
  %.89 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.72, i64 0, i32 6
  %.90 = load %string.580129*, %string.580129** %.89, align 8
  %.91 = getelementptr inbounds %string.580129, %string.580129* %.90, i64 0, i32 0
  %.92 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.91, align 8
  %.93 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.92, i64 0, i32 10
  %.94 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.93, align 8
  %.95 = call i8* %.94(%string.580129* %.90)
  %.96 = call %LLVMValueRef.580455* @LLVMBuildAlloca(%LLVMBuilderRef.580460* %.48, %LLVMTypeRef.580454* %.87, i8* %.95)
  %.101 = call %LLVMValueRef.580455* @LLVMBuildStore(%LLVMBuilderRef.580460* %.48, %LLVMValueRef.580455* %.76, %LLVMValueRef.580455* %.96)
  %.104 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.8, align 8
  %.105 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.104, i64 0, i32 9
  %.106 = load void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)*, void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)** %.105, align 8
  %.108 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.72, i64 0, i32 5
  %.109 = load %VarId.580331*, %VarId.580331** %.108, align 8
  call void %.106(%CodeGen.580507* %.1, %VarId.580331* %.109, %LLVMValueRef.580455* %.96)
  %.116 = add nuw nsw i64 %storemerge8, 1
  %.59 = load %"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"** %.58, align 8
  %.60 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.59, i64 0, i32 2
  %.61 = load i64, i64* %.60, align 8
  %.62 = icmp slt i64 %.116, %.61
  br i1 %.62, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.4.endif.endif
  %.121 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 8
  store %LLVMValueRef.580455* %.15, %LLVMValueRef.580455** %.121, align 8
  %.125 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.8, align 8
  %.126 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.125, i64 0, i32 47
  %.127 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)** %.126, align 8
  %.130 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 4
  %.131 = load %Block.580345*, %Block.580345** %.130, align 8
  call void %.127(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.48, %Block.580345* %.131)
  call void @LLVMDisposeBuilder(%LLVMBuilderRef.580460* %.48)
  ret void
}

define void @CodeGen_codegen_class(%CodeGen.580507* %.1, %Class.580403* nocapture readonly %.2) {
.4:
  %.12 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 6
  %.1322 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.12, align 8
  %.1423 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.1322, i64 0, i32 2
  %.1524 = load i64, i64* %.1423, align 8
  %.1625 = icmp sgt i64 %.1524, 0
  br i1 %.1625, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.19 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.24 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 1
  %0 = bitcast %ClassId.580289** %.24 to %TypeId.580287**
  %.72 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  %.75 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 2
  %.113 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.145 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 11
  %.277 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 8
  %1 = bitcast %LLVMValueRef.580455** %.277 to i64*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge26 = phi i64 [ 0, %for.body.lr.ph ], [ %.295, %for.incr ]
  %.20 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.19, align 8
  %.21 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.20, i64 0, i32 3
  %.22 = load %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)*, %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)** %.21, align 8
  %.253 = load %TypeId.580287*, %TypeId.580287** %0, align 8
  %.27 = call %CGClassType.580487* %.22(%CodeGen.580507* %.1, %TypeId.580287* %.253)
  %.32 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.12, align 8
  %.33 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.32, i64 0, i32 0
  %.34 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.33, align 8
  %.35 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.34, i64 0, i32 5
  %.36 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.35, align 8
  %.37 = call %ClassMethod.580401* %.36(%"Array<ClassMethod>.580406"* %.32, i64 %storemerge26)
  %method = alloca %ClassMethod.580401*, align 8
  store %ClassMethod.580401* %.37, %ClassMethod.580401** %method, align 8
  %.40 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.37, i64 0, i32 8
  %.41 = load i1, i1* %.40, align 1
  br i1 %.41, label %for.incr, label %for.body.endif

for.incr:                                         ; preds = %for.body, %for.end.1
  %.295 = add nuw nsw i64 %storemerge26, 1
  %.13 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.12, align 8
  %.14 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.13, i64 0, i32 2
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp slt i64 %.295, %.15
  br i1 %.16, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.4
  ret void

for.body.endif:                                   ; preds = %for.body
  %.45 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.37, i64 0, i32 1
  %.46 = load %PropId.580339*, %PropId.580339** %.45, align 8
  %.47 = call %string.580129* @create_prop_key(%PropId.580339* %.46)
  %.50 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.27, i64 0, i32 4
  %.51 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.50, align 8
  %.52 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.51, i64 0, i32 0
  %.53 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.52, align 8
  %.54 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.53, i64 0, i32 3
  %.55 = load %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)*, %LLVMValueRef.580455* (%"Map<string, LLVMValueRef>.580490"*, %string.580129*)** %.54, align 8
  %.57 = call %LLVMValueRef.580455* %.55(%"Map<string, LLVMValueRef>.580490"* %.51, %string.580129* %.47)
  %llvm_fnc = alloca %LLVMValueRef.580455*, align 8
  store %LLVMValueRef.580455* %.57, %LLVMValueRef.580455** %llvm_fnc, align 8
  %.60 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.37, i64 0, i32 4
  %.61 = load %string.580129*, %string.580129** %.60, align 8
  %.62 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.63 = bitcast i8* %.62 to %string.580129*
  %.63.repack = bitcast i8* %.62 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.63.repack, align 8
  %.63.repack4 = getelementptr inbounds i8, i8* %.62, i64 8
  %2 = bitcast i8* %.63.repack4 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.292, i64 0, i64 0), i8** %2, align 8
  %.63.repack5 = getelementptr inbounds i8, i8* %.62, i64 16
  %3 = bitcast i8* %.63.repack5 to i64*
  store i64 11, i64* %3, align 8
  %.63.repack6 = getelementptr inbounds i8, i8* %.62, i64 24
  %4 = bitcast i8* %.63.repack6 to i64*
  store i64 11, i64* %4, align 8
  %.65 = getelementptr inbounds %string.580129, %string.580129* %.61, i64 0, i32 0
  %.66 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.65, align 8
  %.67 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.66, i64 0, i32 3
  %.68 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.67, align 8
  %.69 = call i1 %.68(%string.580129* %.61, %string.580129* %.63)
  %.73 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.72, align 8
  %.76 = load %string.580129*, %string.580129** %.75, align 8
  %.79 = load %string.580129*, %string.580129** %.60, align 8
  %.80 = getelementptr inbounds %string.580129, %string.580129* %.76, i64 0, i32 0
  %.81 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.81, i64 0, i32 10
  %.83 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.82, align 8
  %.84 = call i8* %.83(%string.580129* %.76)
  %.85 = getelementptr inbounds %string.580129, %string.580129* %.79, i64 0, i32 0
  %.86 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.85, align 8
  %.87 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.86, i64 0, i32 10
  %.88 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.87, align 8
  %.89 = call i8* %.88(%string.580129* %.79)
  %.91 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.397, i64 0, i64 0), i8* %.84, i8* %.89)
  %.93 = call i8* @malloc(i64 %.91)
  %.94 = call i64 (i8*, i8*, ...) @sprintf(i8* %.93, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.397, i64 0, i64 0), i8* %.84, i8* %.89)
  %.95 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.96 = bitcast i8* %.95 to %string.580129*
  %.97 = bitcast i8* %.95 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.97, align 8
  %.99 = getelementptr inbounds i8, i8* %.95, i64 8
  %5 = bitcast i8* %.99 to i8**
  store i8* %.93, i8** %5, align 8
  %.101 = getelementptr inbounds i8, i8* %.95, i64 16
  %6 = bitcast i8* %.101 to i64*
  store i64 %.91, i64* %6, align 8
  %.103 = getelementptr inbounds i8, i8* %.95, i64 24
  %7 = bitcast i8* %.103 to i64*
  store i64 %.91, i64* %7, align 8
  %.108 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.109 = call i8* %.108(%string.580129* %.96)
  %.110 = call %LLVMValueRef.580455* @LLVMGetNamedFunction(%LLVMModuleRef.580453* %.73, i8* %.109)
  store %LLVMValueRef.580455* %.110, %LLVMValueRef.580455** %llvm_fnc, align 8
  %.114 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.113, align 8
  %.116 = call %LLVMBasicBlockRef.580456* @LLVMAppendBasicBlockInContext(%LLVMContextRef.580452* %.114, %LLVMValueRef.580455* %.110, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  %.120 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.113, align 8
  %.121 = call %LLVMBuilderRef.580460* @LLVMCreateBuilderInContext(%LLVMContextRef.580452* %.120)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.580460* %.121, %LLVMBasicBlockRef.580456* %.116)
  %offset = alloca i64, align 8
  store i64 0, i64* %offset, align 8
  %.128 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.37, i64 0, i32 2
  %.129 = load i1, i1* %.128, align 1
  br i1 %.129, label %for.entry.1, label %for.body.endif.if

for.body.endif.if:                                ; preds = %for.body.endif
  %.133 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.27, i64 0, i32 1
  %.134 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.133, align 8
  %.135 = call %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454* %.134, i64 0)
  %.138 = call %LLVMValueRef.580455* @LLVMGetParam(%LLVMValueRef.580455* %.110, i64 0)
  %.142 = call %LLVMValueRef.580455* @LLVMBuildAlloca(%LLVMBuilderRef.580460* %.121, %LLVMTypeRef.580454* %.135, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.180, i64 0, i64 0))
  %.146 = load %Program.580445*, %Program.580445** %.145, align 8
  %.148 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.37, i64 0, i32 9
  %.149 = load %ScopeId.580361*, %ScopeId.580361** %.148, align 8
  %.150 = call %Scope.580363* @get_scope(%Program.580445* %.146, %ScopeId.580361* %.149)
  %.151 = getelementptr inbounds %Scope.580363, %Scope.580363* %.150, i64 0, i32 2
  %.152 = load %"Map<string, VarId>.580365"*, %"Map<string, VarId>.580365"** %.151, align 8
  %.153 = getelementptr inbounds %"Map<string, VarId>.580365", %"Map<string, VarId>.580365"* %.152, i64 0, i32 0
  %.154 = load %"Map<string, VarId>_vtable_ty.580369"*, %"Map<string, VarId>_vtable_ty.580369"** %.153, align 8
  %.155 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.580369", %"Map<string, VarId>_vtable_ty.580369"* %.154, i64 0, i32 3
  %.156 = load %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)*, %VarId.580331* (%"Map<string, VarId>.580365"*, %string.580129*)** %.155, align 8
  %.157 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.158 = bitcast i8* %.157 to %string.580129*
  %.158.repack = bitcast i8* %.157 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.158.repack, align 8
  %.158.repack9 = getelementptr inbounds i8, i8* %.157, i64 8
  %8 = bitcast i8* %.158.repack9 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.180, i64 0, i64 0), i8** %8, align 8
  %.158.repack10 = getelementptr inbounds i8, i8* %.157, i64 16
  %9 = bitcast i8* %.158.repack10 to i64*
  store i64 4, i64* %9, align 8
  %.158.repack11 = getelementptr inbounds i8, i8* %.157, i64 24
  %10 = bitcast i8* %.158.repack11 to i64*
  store i64 4, i64* %10, align 8
  %.160 = call %VarId.580331* %.156(%"Map<string, VarId>.580365"* %.152, %string.580129* %.158)
  %.165 = call %LLVMValueRef.580455* @LLVMBuildStore(%LLVMBuilderRef.580460* %.121, %LLVMValueRef.580455* %.138, %LLVMValueRef.580455* %.142)
  %.168 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.27, i64 0, i32 5
  %11 = bitcast %LLVMValueRef.580455** %.168 to i64*
  %.16912 = load i64, i64* %11, align 8
  %.170 = trunc i64 %.16912 to i32
  %.172 = icmp ne i32 %.170, 0
  %.173 = and i1 %.69, %.172
  br i1 %.173, label %for.body.endif.if.if, label %for.body.endif.if.endif

for.body.endif.if.if:                             ; preds = %for.body.endif.if
  %.177 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.19, align 8
  %.178 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.177, i64 0, i32 11
  %.179 = load %LLVMValueRef.580455* (%CodeGen.580507*, i64)*, %LLVMValueRef.580455* (%CodeGen.580507*, i64)** %.178, align 8
  %.180 = call %LLVMValueRef.580455* %.179(%CodeGen.580507* %.1, i64 0)
  %index = alloca [1 x %LLVMValueRef.580455*], align 8
  %.181 = getelementptr inbounds [1 x %LLVMValueRef.580455*], [1 x %LLVMValueRef.580455*]* %index, i64 0, i64 0
  store %LLVMValueRef.580455* %.180, %LLVMValueRef.580455** %.181, align 8
  %.188 = call %LLVMValueRef.580455* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.580460* %.121, %LLVMTypeRef.580454* %.135, %LLVMValueRef.580455* %.138, %LLVMValueRef.580455** nonnull %.181, i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0))
  %.193 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.168, align 8
  %.195 = call %LLVMValueRef.580455* @LLVMBuildStore(%LLVMBuilderRef.580460* %.121, %LLVMValueRef.580455* %.193, %LLVMValueRef.580455* %.188)
  br label %for.body.endif.if.endif

for.body.endif.if.endif:                          ; preds = %for.body.endif.if.if, %for.body.endif.if
  %.199 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.19, align 8
  %.200 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.199, i64 0, i32 9
  %.201 = load void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)*, void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)** %.200, align 8
  call void %.201(%CodeGen.580507* %.1, %VarId.580331* %.160, %LLVMValueRef.580455* %.142)
  store i64 1, i64* %offset, align 8
  br label %for.entry.1

for.entry.1:                                      ; preds = %for.body.endif.if.endif, %for.body.endif
  %.21114 = load %ClassMethod.580401*, %ClassMethod.580401** %method, align 8
  %.21215 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.21114, i64 0, i32 7
  %.21316 = load %"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"** %.21215, align 8
  %.21417 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.21316, i64 0, i32 2
  %.21518 = load i64, i64* %.21417, align 8
  %.21619 = icmp sgt i64 %.21518, 0
  br i1 %.21619, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.entry.1
  %.230 = load i64, i64* %offset, align 8
  %.211 = load %ClassMethod.580401*, %ClassMethod.580401** %method, align 8
  %.212 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.211, i64 0, i32 7
  br label %for.body.1

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.21321 = phi %"Array<FunctionArg>.580393"* [ %.21316, %for.body.1.lr.ph ], [ %.213, %for.body.1 ]
  %storemerge720 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.272, %for.body.1 ]
  %.222 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.21321, i64 0, i32 0
  %.223 = load %"Array<FunctionArg>_vtable_ty.580394"*, %"Array<FunctionArg>_vtable_ty.580394"** %.222, align 8
  %.224 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.580394", %"Array<FunctionArg>_vtable_ty.580394"* %.223, i64 0, i32 5
  %.225 = load %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)*, %FunctionArg.580389* (%"Array<FunctionArg>.580393"*, i64)** %.224, align 8
  %.226 = call %FunctionArg.580389* %.225(%"Array<FunctionArg>.580393"* %.21321, i64 %storemerge720)
  %.231 = add i64 %.230, %storemerge720
  %.232 = call %LLVMValueRef.580455* @LLVMGetParam(%LLVMValueRef.580455* %.110, i64 %.231)
  %.237 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.19, align 8
  %.238 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.237, i64 0, i32 13
  %.239 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.238, align 8
  %.241 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.226, i64 0, i32 4
  %.242 = load %Type.580273*, %Type.580273** %.241, align 8
  %.243 = call %LLVMTypeRef.580454* %.239(%CodeGen.580507* %.1, %Type.580273* %.242, i1 true)
  %.245 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.226, i64 0, i32 6
  %.246 = load %string.580129*, %string.580129** %.245, align 8
  %.247 = getelementptr inbounds %string.580129, %string.580129* %.246, i64 0, i32 0
  %.248 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.247, align 8
  %.249 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.248, i64 0, i32 10
  %.250 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.249, align 8
  %.251 = call i8* %.250(%string.580129* %.246)
  %.252 = call %LLVMValueRef.580455* @LLVMBuildAlloca(%LLVMBuilderRef.580460* %.121, %LLVMTypeRef.580454* %.243, i8* %.251)
  %.257 = call %LLVMValueRef.580455* @LLVMBuildStore(%LLVMBuilderRef.580460* %.121, %LLVMValueRef.580455* %.232, %LLVMValueRef.580455* %.252)
  %.260 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.19, align 8
  %.261 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.260, i64 0, i32 9
  %.262 = load void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)*, void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)** %.261, align 8
  %.264 = getelementptr inbounds %FunctionArg.580389, %FunctionArg.580389* %.226, i64 0, i32 5
  %.265 = load %VarId.580331*, %VarId.580331** %.264, align 8
  call void %.262(%CodeGen.580507* %.1, %VarId.580331* %.265, %LLVMValueRef.580455* %.252)
  %.272 = add nuw nsw i64 %storemerge720, 1
  %.213 = load %"Array<FunctionArg>.580393"*, %"Array<FunctionArg>.580393"** %.212, align 8
  %.214 = getelementptr inbounds %"Array<FunctionArg>.580393", %"Array<FunctionArg>.580393"* %.213, i64 0, i32 2
  %.215 = load i64, i64* %.214, align 8
  %.216 = icmp slt i64 %.272, %.215
  br i1 %.216, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.entry.1
  %.211.lcssa = phi %ClassMethod.580401* [ %.21114, %for.entry.1 ], [ %.211, %for.body.1 ]
  %12 = bitcast %LLVMValueRef.580455** %llvm_fnc to i64*
  %.2768 = load i64, i64* %12, align 8
  store i64 %.2768, i64* %1, align 8
  %.281 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.19, align 8
  %.282 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.281, i64 0, i32 47
  %.283 = load void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)*, void (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Block.580345*)** %.282, align 8
  %.286 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.211.lcssa, i64 0, i32 6
  %.287 = load %Block.580345*, %Block.580345** %.286, align 8
  call void %.283(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* %.121, %Block.580345* %.287)
  call void @LLVMDisposeBuilder(%LLVMBuilderRef.580460* %.121)
  br label %for.incr
}

define void @CodeGen_declare_function(%CodeGen.580507* %.1, %Function.580391* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  %.9 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.8, align 8
  %.11 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 2
  %.12 = load %string.580129*, %string.580129** %.11, align 8
  %.13 = getelementptr inbounds %string.580129, %string.580129* %.12, i64 0, i32 0
  %.14 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.13, align 8
  %.15 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.14, i64 0, i32 10
  %.16 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.15, align 8
  %.17 = call i8* %.16(%string.580129* %.12)
  %.19 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.20 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.19, align 8
  %.21 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.20, i64 0, i32 13
  %.22 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.21, align 8
  %.24 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 5
  %0 = bitcast %FunctionType.580279** %.24 to %Type.580273**
  %.251 = load %Type.580273*, %Type.580273** %0, align 8
  %.27 = call %LLVMTypeRef.580454* %.22(%CodeGen.580507* %.1, %Type.580273* %.251, i1 false)
  %.28 = call %LLVMValueRef.580455* @LLVMAddFunction(%LLVMModuleRef.580453* %.9, i8* %.17, %LLVMTypeRef.580454* %.27)
  %.32 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.19, align 8
  %.33 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.32, i64 0, i32 9
  %.34 = load void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)*, void (%CodeGen.580507*, %VarId.580331*, %LLVMValueRef.580455*)** %.33, align 8
  %.36 = getelementptr inbounds %Function.580391, %Function.580391* %.2, i64 0, i32 1
  %.37 = load %VarId.580331*, %VarId.580331** %.36, align 8
  call void %.34(%CodeGen.580507* %.1, %VarId.580331* %.37, %LLVMValueRef.580455* %.28)
  ret void
}

define %LLVMValueRef.580455* @CodeGen_declare_method(%CodeGen.580507* nocapture readonly %.1, %string.580129* %.2, %LLVMTypeRef.580454* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  %.11 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.10, align 8
  %.13 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  %.14 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.13, align 8
  %.15 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.14, i64 0, i32 10
  %.16 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.15, align 8
  %.17 = call i8* %.16(%string.580129* %.2)
  %.19 = call %LLVMValueRef.580455* @LLVMAddFunction(%LLVMModuleRef.580453* %.11, i8* %.17, %LLVMTypeRef.580454* %.3)
  ret %LLVMValueRef.580455* %.19
}

define void @CodeGen_declare_static_props(%CodeGen.580507* %.1, %CGClassType.580487* nocapture readonly %.2, %Class.580403* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Class.580403, %Class.580403* %.3, i64 0, i32 8
  %.11 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.13, i64 0, i32 4
  %.15 = load %"Array<Bucket<string, PropId>>.580413"* (%"Map<string, PropId>.580407"*)*, %"Array<Bucket<string, PropId>>.580413"* (%"Map<string, PropId>.580407"*)** %.14, align 8
  %.16 = call %"Array<Bucket<string, PropId>>.580413"* %.15(%"Map<string, PropId>.580407"* %.11)
  %.23 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.16, i64 0, i32 2
  %.245 = load i64, i64* %.23, align 8
  %.256 = icmp sgt i64 %.245, 0
  br i1 %.256, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.16, i64 0, i32 0
  %.41 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 11
  %.57 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.65 = getelementptr inbounds %Class.580403, %Class.580403* %.3, i64 0, i32 2
  %.111 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  %.131 = getelementptr inbounds %Class.580403, %Class.580403* %.3, i64 0, i32 5
  %.147 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.2, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge7 = phi i64 [ 0, %for.body.lr.ph ], [ %.160, %for.body.endif ]
  %.30 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.29, align 8
  %.31 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.30, i64 0, i32 5
  %.32 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.31, align 8
  %.33 = call %"Bucket<string, PropId>.580411"* %.32(%"Array<Bucket<string, PropId>>.580413"* %.16, i64 %storemerge7)
  %.34 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.33, i64 0, i32 2
  %0 = bitcast %PropId.580339** %.34 to i64*
  %.351 = load i64, i64* %0, align 8
  %.37.cast = inttoptr i64 %.351 to %PropId.580339*
  %.38 = call %string.580129* @create_prop_key(%PropId.580339* %.37.cast)
  %.42 = load %Program.580445*, %Program.580445** %.41, align 8
  %.43.cast = inttoptr i64 %.351 to %PropId.580339*
  %.44 = call %Type.580273* @get_class_prop_type(%Program.580445* %.42, %PropId.580339* %.43.cast)
  %.49 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.29, align 8
  %.50 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.49, i64 0, i32 5
  %.51 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.50, align 8
  %.52 = call %"Bucket<string, PropId>.580411"* %.51(%"Array<Bucket<string, PropId>>.580413"* %.16, i64 %storemerge7)
  %.53 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.52, i64 0, i32 1
  %.5428 = load %string.580129*, %string.580129** %.53, align 8
  %.58 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.57, align 8
  %.59 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.58, i64 0, i32 13
  %.60 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.59, align 8
  %.62 = call %LLVMTypeRef.580454* %.60(%CodeGen.580507* %.1, %Type.580273* %.44, i1 false)
  %.66 = load %string.580129*, %string.580129** %.65, align 8
  %.68 = getelementptr inbounds %string.580129, %string.580129* %.66, i64 0, i32 0
  %.69 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.68, align 8
  %.70 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.69, i64 0, i32 10
  %.71 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.70, align 8
  %.72 = call i8* %.71(%string.580129* %.66)
  %.73 = getelementptr inbounds %string.580129, %string.580129* %.5428, i64 0, i32 0
  %.74 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.74, i64 0, i32 10
  %.76 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.75, align 8
  %.77 = call i8* %.76(%string.580129* %.5428)
  %.79 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.397, i64 0, i64 0), i8* %.72, i8* %.77)
  %.81 = call i8* @malloc(i64 %.79)
  %.82 = call i64 (i8*, i8*, ...) @sprintf(i8* %.81, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.397, i64 0, i64 0), i8* %.72, i8* %.77)
  %.83 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.85 = bitcast i8* %.83 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.85, align 8
  %.87 = getelementptr inbounds i8, i8* %.83, i64 8
  %1 = bitcast i8* %.87 to i8**
  store i8* %.81, i8** %1, align 8
  %.89 = getelementptr inbounds i8, i8* %.83, i64 16
  %2 = bitcast i8* %.89 to i64*
  store i64 %.79, i64* %2, align 8
  %.91 = getelementptr inbounds i8, i8* %.83, i64 24
  %3 = bitcast i8* %.91 to i64*
  store i64 %.79, i64* %3, align 8
  %static_prop_name_concat = alloca %string.580129*, align 8
  %4 = bitcast %string.580129** %static_prop_name_concat to i8**
  store i8* %.83, i8** %4, align 8
  %static_prop_value = alloca %LLVMValueRef.580455*, align 8
  store %LLVMValueRef.580455* null, %LLVMValueRef.580455** %static_prop_value, align 8
  %.96 = getelementptr inbounds %PropId.580339, %PropId.580339* %.43.cast, i64 0, i32 1
  %.97 = load i64, i64* %.96, align 8
  %.98 = icmp eq i64 %.97, 0
  br i1 %.98, label %for.body.if, label %for.body.else

for.end:                                          ; preds = %for.body.endif, %.5
  ret void

for.body.if:                                      ; preds = %for.body
  %.102 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.57, align 8
  %.103 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.102, i64 0, i32 51
  %.104 = load %LLVMValueRef.580455* (%CodeGen.580507*, %string.580129*, %LLVMTypeRef.580454*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %string.580129*, %LLVMTypeRef.580454*)** %.103, align 8
  %.105 = load %string.580129*, %string.580129** %static_prop_name_concat, align 8
  %.107 = call %LLVMValueRef.580455* %.104(%CodeGen.580507* %.1, %string.580129* %.105, %LLVMTypeRef.580454* %.62)
  store %LLVMValueRef.580455* %.107, %LLVMValueRef.580455** %static_prop_value, align 8
  br label %for.body.endif

for.body.else:                                    ; preds = %for.body
  %.112 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.111, align 8
  %.114 = load %string.580129*, %string.580129** %static_prop_name_concat, align 8
  %.115 = getelementptr inbounds %string.580129, %string.580129* %.114, i64 0, i32 0
  %.116 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.115, align 8
  %.117 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.116, i64 0, i32 10
  %.118 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.117, align 8
  %.119 = call i8* %.118(%string.580129* %.114)
  %.120 = call %LLVMValueRef.580455* @LLVMAddGlobal(%LLVMModuleRef.580453* %.112, %LLVMTypeRef.580454* %.62, i8* %.119)
  store %LLVMValueRef.580455* %.120, %LLVMValueRef.580455** %static_prop_value, align 8
  %.124 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.57, align 8
  %.125 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.124, i64 0, i32 39
  %.126 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.125, align 8
  %.128 = getelementptr inbounds %PropId.580339, %PropId.580339* %.43.cast, i64 0, i32 3
  %.129 = load i64, i64* %.128, align 8
  %.132 = load %"Array<ClassField>.580405"*, %"Array<ClassField>.580405"** %.131, align 8
  %.133 = getelementptr inbounds %"Array<ClassField>.580405", %"Array<ClassField>.580405"* %.132, i64 0, i32 0
  %.134 = load %"Array<ClassField>_vtable_ty.580408"*, %"Array<ClassField>_vtable_ty.580408"** %.133, align 8
  %.135 = getelementptr inbounds %"Array<ClassField>_vtable_ty.580408", %"Array<ClassField>_vtable_ty.580408"* %.134, i64 0, i32 5
  %.136 = load %ClassField.580399* (%"Array<ClassField>.580405"*, i64)*, %ClassField.580399* (%"Array<ClassField>.580405"*, i64)** %.135, align 8
  %.137 = call %ClassField.580399* %.136(%"Array<ClassField>.580405"* %.132, i64 %.129)
  %.138 = getelementptr inbounds %ClassField.580399, %ClassField.580399* %.137, i64 0, i32 6
  %.139 = load %Expression.580293*, %Expression.580293** %.138, align 8
  %.140 = call %LLVMValueRef.580455* %.126(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* null, %Expression.580293* %.139)
  call void @LLVMSetInitializer(%LLVMValueRef.580455* %.120, %LLVMValueRef.580455* %.140)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.else, %for.body.if
  %.148 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.147, align 8
  %.149 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.148, i64 0, i32 0
  %.150 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.149, align 8
  %.151 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.150, i64 0, i32 2
  %.152 = load void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)*, void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)** %.151, align 8
  %.154 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %static_prop_value, align 8
  call void %.152(%"Map<string, LLVMValueRef>.580490"* %.148, %string.580129* %.38, %LLVMValueRef.580455* %.154)
  %.160 = add nuw nsw i64 %storemerge7, 1
  %.24 = load i64, i64* %.23, align 8
  %.25 = icmp slt i64 %.160, %.24
  br i1 %.25, label %for.body, label %for.end
}

define void @CodeGen_declare_class_props(%CodeGen.580507* %.1, %CGClassType.580487* nocapture %.2, %Class.580403* nocapture readonly %.3, %"Array<LLVMTypeRef>.580503"* %.4) {
.6:
  %.12 = getelementptr inbounds %Class.580403, %Class.580403* %.3, i64 0, i32 7
  %.13 = load %"Map<string, PropId>.580407"*, %"Map<string, PropId>.580407"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, PropId>.580407", %"Map<string, PropId>.580407"* %.13, i64 0, i32 0
  %.15 = load %"Map<string, PropId>_vtable_ty.580410"*, %"Map<string, PropId>_vtable_ty.580410"** %.14, align 8
  %.16 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.580410", %"Map<string, PropId>_vtable_ty.580410"* %.15, i64 0, i32 4
  %.17 = load %"Array<Bucket<string, PropId>>.580413"* (%"Map<string, PropId>.580407"*)*, %"Array<Bucket<string, PropId>>.580413"* (%"Map<string, PropId>.580407"*)** %.16, align 8
  %.18 = call %"Array<Bucket<string, PropId>>.580413"* %.17(%"Map<string, PropId>.580407"* %.13)
  %.21 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.23 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %"Array<LLVMValueRef>.580505"*
  %.25 = bitcast i8* %.23 to %"Array<LLVMValueRef>_vtable_ty.580506"**
  store %"Array<LLVMValueRef>_vtable_ty.580506"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.580506"** %.25, align 8
  %.27 = getelementptr inbounds i8, i8* %.23, i64 8
  %0 = bitcast i8* %.27 to i8**
  store i8* %.21, i8** %0, align 8
  %.29 = getelementptr inbounds i8, i8* %.23, i64 16
  %1 = bitcast i8* %.29 to i64*
  store i64 0, i64* %1, align 8
  %.31 = getelementptr inbounds i8, i8* %.23, i64 24
  %2 = bitcast i8* %.31 to i64*
  store i64 8, i64* %2, align 8
  %.35 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %"Array<LLVMTypeRef>.580503"*
  %.39 = bitcast i8* %.37 to %"Array<LLVMTypeRef>_vtable_ty.580504"**
  store %"Array<LLVMTypeRef>_vtable_ty.580504"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.580504"** %.39, align 8
  %.41 = getelementptr inbounds i8, i8* %.37, i64 8
  %3 = bitcast i8* %.41 to i8**
  store i8* %.35, i8** %3, align 8
  %.43 = getelementptr inbounds i8, i8* %.37, i64 16
  %4 = bitcast i8* %.43 to i64*
  store i64 0, i64* %4, align 8
  %.45 = getelementptr inbounds i8, i8* %.37, i64 24
  %5 = bitcast i8* %.45 to i64*
  store i64 8, i64* %5, align 8
  %.49 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.51 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.52 = bitcast i8* %.51 to %"Array<LLVMTypeRef>.580503"*
  %.53 = bitcast i8* %.51 to %"Array<LLVMTypeRef>_vtable_ty.580504"**
  store %"Array<LLVMTypeRef>_vtable_ty.580504"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.580504"** %.53, align 8
  %.55 = getelementptr inbounds i8, i8* %.51, i64 8
  %6 = bitcast i8* %.55 to i8**
  store i8* %.49, i8** %6, align 8
  %.57 = getelementptr inbounds i8, i8* %.51, i64 16
  %7 = bitcast i8* %.57 to i64*
  store i64 0, i64* %7, align 8
  %.59 = getelementptr inbounds i8, i8* %.51, i64 24
  %8 = bitcast i8* %.59 to i64*
  store i64 8, i64* %8, align 8
  %.67 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.18, i64 0, i32 2
  %.6830 = load i64, i64* %.67, align 8
  %.6931 = icmp sgt i64 %.6830, 0
  br i1 %.6931, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.6
  %.73 = getelementptr inbounds %"Array<Bucket<string, PropId>>.580413", %"Array<Bucket<string, PropId>>.580413"* %.18, i64 0, i32 0
  %.85 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 11
  %.150 = getelementptr inbounds %Class.580403, %Class.580403* %.3, i64 0, i32 1
  %9 = bitcast %ClassId.580289** %.150 to %TypeId.580287**
  %.303 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.323 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  %.222 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.234 = getelementptr inbounds %Class.580403, %Class.580403* %.3, i64 0, i32 6
  %.251 = getelementptr inbounds %Class.580403, %Class.580403* %.3, i64 0, i32 2
  %.361 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.2, i64 0, i32 2
  %.377 = getelementptr inbounds %Class.580403, %Class.580403* %.3, i64 0, i32 6
  %.291 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.2, i64 0, i32 4
  %.112 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.120 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.2, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge32 = phi i64 [ 0, %for.body.lr.ph ], [ %.414, %for.incr ]
  %.74 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.73, align 8
  %.75 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.74, i64 0, i32 5
  %.76 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.75, align 8
  %.77 = call %"Bucket<string, PropId>.580411"* %.76(%"Array<Bucket<string, PropId>>.580413"* %.18, i64 %storemerge32)
  %.78 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.77, i64 0, i32 2
  %10 = bitcast %PropId.580339** %.78 to i64*
  %.793 = load i64, i64* %10, align 8
  %.81.cast = inttoptr i64 %.793 to %PropId.580339*
  %.82 = call %string.580129* @create_prop_key(%PropId.580339* %.81.cast)
  %.86 = load %Program.580445*, %Program.580445** %.85, align 8
  %.87.cast = inttoptr i64 %.793 to %PropId.580339*
  %.88 = call %Type.580273* @get_class_prop_type(%Program.580445* %.86, %PropId.580339* %.87.cast)
  %prop_type = alloca %Type.580273*, align 8
  store %Type.580273* %.88, %Type.580273** %prop_type, align 8
  %.93 = load %"Array<Bucket<string, PropId>>_vtable_ty.580414"*, %"Array<Bucket<string, PropId>>_vtable_ty.580414"** %.73, align 8
  %.94 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.580414", %"Array<Bucket<string, PropId>>_vtable_ty.580414"* %.93, i64 0, i32 5
  %.95 = load %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)*, %"Bucket<string, PropId>.580411"* (%"Array<Bucket<string, PropId>>.580413"*, i64)** %.94, align 8
  %.96 = call %"Bucket<string, PropId>.580411"* %.95(%"Array<Bucket<string, PropId>>.580413"* %.18, i64 %storemerge32)
  %.97 = getelementptr inbounds %"Bucket<string, PropId>.580411", %"Bucket<string, PropId>.580411"* %.96, i64 0, i32 1
  %11 = bitcast %string.580129** %.97 to i64*
  %.984 = load i64, i64* %11, align 8
  %prop_name = alloca %string.580129*, align 8
  %12 = bitcast %string.580129** %prop_name to i64*
  store i64 %.984, i64* %12, align 8
  %.102 = load %Program.580445*, %Program.580445** %.85, align 8
  %.104 = call i64 @get_vtable_index(%Program.580445* %.102, %PropId.580339* %.87.cast)
  %.107 = getelementptr inbounds %PropId.580339, %PropId.580339* %.87.cast, i64 0, i32 1
  %.108 = load i64, i64* %.107, align 8
  %.109 = icmp eq i64 %.108, 1
  br i1 %.109, label %for.body.if, label %for.body.else

for.incr:                                         ; preds = %for.body.if, %for.body.else.endif.endif, %for.end.1.endif.if
  %.414 = add nuw nsw i64 %storemerge32, 1
  %.68 = load i64, i64* %.67, align 8
  %.69 = icmp slt i64 %.414, %.68
  br i1 %.69, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.6
  %.419 = load i64, i64* %4, align 8
  %.420 = icmp sgt i64 %.419, 0
  br i1 %.420, label %for.end.if, label %for.entry.2

for.body.if:                                      ; preds = %for.body
  %.113 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.112, align 8
  %.114 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.113, i64 0, i32 13
  %.115 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.114, align 8
  %.117 = call %LLVMTypeRef.580454* %.115(%CodeGen.580507* %.1, %Type.580273* %.88, i1 true)
  %.121 = load %"Map<string, int>.580489"*, %"Map<string, int>.580489"** %.120, align 8
  %.122 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.121, i64 0, i32 0
  %.123 = load %"Map<string, int>_vtable_ty.580491"*, %"Map<string, int>_vtable_ty.580491"** %.122, align 8
  %.124 = getelementptr inbounds %"Map<string, int>_vtable_ty.580491", %"Map<string, int>_vtable_ty.580491"* %.123, i64 0, i32 2
  %.125 = load void (%"Map<string, int>.580489"*, %string.580129*, i64)*, void (%"Map<string, int>.580489"*, %string.580129*, i64)** %.124, align 8
  call void %.125(%"Map<string, int>.580489"* %.121, %string.580129* %.82, i64 %.104)
  call void @resize_type_array(%"Array<LLVMTypeRef>.580503"* %.52, i64 %.104)
  %.136 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.53, align 8
  %.137 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.136, i64 0, i32 3
  %.138 = load void (%"Array<LLVMTypeRef>.580503"*, i64, %LLVMTypeRef.580454*)*, void (%"Array<LLVMTypeRef>.580503"*, i64, %LLVMTypeRef.580454*)** %.137, align 8
  call void %.138(%"Array<LLVMTypeRef>.580503"* %.52, i64 %.104, %LLVMTypeRef.580454* %.117)
  br label %for.incr

for.body.else:                                    ; preds = %for.body
  %13 = bitcast %Type.580273** %prop_type to i64*
  %.14156 = load i64, i64* %13, align 8
  %method_type = alloca %FunctionType.580279*, align 8
  %14 = bitcast %FunctionType.580279** %method_type to i64*
  store i64 %.14156, i64* %14, align 8
  %llvm_method_val = alloca %LLVMValueRef.580455*, align 8
  store %LLVMValueRef.580455* null, %LLVMValueRef.580455** %llvm_method_val, align 8
  %llvm_method_type = alloca %LLVMTypeRef.580454*, align 8
  store %LLVMTypeRef.580454* null, %LLVMTypeRef.580454** %llvm_method_type, align 8
  %.147 = getelementptr inbounds %PropId.580339, %PropId.580339* %.87.cast, i64 0, i32 2
  %.148 = load %TypeId.580287*, %TypeId.580287** %.147, align 8
  %.1517 = load %TypeId.580287*, %TypeId.580287** %9, align 8
  %.152 = getelementptr inbounds %TypeId.580287, %TypeId.580287* %.148, i64 0, i32 0
  %.153 = load %TypeId_vtable_ty.580288*, %TypeId_vtable_ty.580288** %.152, align 8
  %.154 = getelementptr inbounds %TypeId_vtable_ty.580288, %TypeId_vtable_ty.580288* %.153, i64 0, i32 0
  %.155 = load i1 (%TypeId.580287*, %TypeId.580287*)*, i1 (%TypeId.580287*, %TypeId.580287*)** %.154, align 8
  %.157 = call i1 %.155(%TypeId.580287* %.148, %TypeId.580287* %.1517)
  br i1 %.157, label %for.body.else.if, label %for.body.else.else

for.body.else.if:                                 ; preds = %for.body.else
  %.161 = load %ClassId.580289*, %ClassId.580289** %.150, align 8
  %.162 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.163 = bitcast i8* %.162 to %ObjectType.580297*
  %.164 = bitcast i8* %.162 to %ObjectType_vtable_ty.580298**
  store %ObjectType_vtable_ty.580298* @ObjectType_vtable_data, %ObjectType_vtable_ty.580298** %.164, align 8
  call void @ObjectType_constructor(%ObjectType.580297* %.163, %ClassId.580289* %.161)
  %.169 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %15 = bitcast i8* %.169 to i8**
  store i8* %.162, i8** %15, align 8
  %.173 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.175 = bitcast i8* %.173 to %"Array<Type>_vtable_ty.580282"**
  store %"Array<Type>_vtable_ty.580282"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.580282"** %.175, align 8
  %.177 = getelementptr inbounds i8, i8* %.173, i64 8
  %16 = bitcast i8* %.177 to i8**
  store i8* %.169, i8** %16, align 8
  %.179 = getelementptr inbounds i8, i8* %.173, i64 16
  %17 = bitcast i8* %.179 to i64*
  store i64 1, i64* %17, align 8
  %.181 = getelementptr inbounds i8, i8* %.173, i64 24
  %18 = bitcast i8* %.181 to i64*
  store i64 8, i64* %18, align 8
  %arg_types = alloca %"Array<Type>.580281"*, align 8
  %19 = bitcast %"Array<Type>.580281"** %arg_types to i8**
  store i8* %.173, i8** %19, align 8
  %.18822 = load %FunctionType.580279*, %FunctionType.580279** %method_type, align 8
  %.18923 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.18822, i64 0, i32 2
  %.19024 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.18923, align 8
  %.19125 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.19024, i64 0, i32 2
  %.19226 = load i64, i64* %.19125, align 8
  %.19327 = icmp sgt i64 %.19226, 0
  br i1 %.19327, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.body.else.if
  %.195 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %arg_types, align 8
  %.205 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.195, i64 0, i32 0
  %.188 = load %FunctionType.580279*, %FunctionType.580279** %method_type, align 8
  %.189 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.188, i64 0, i32 2
  br label %for.body.1

for.body.else.else:                               ; preds = %for.body.else
  %.304 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.303, align 8
  %.305 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.304, i64 0, i32 13
  %.306 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.305, align 8
  %20 = bitcast %FunctionType.580279** %method_type to %Type.580273**
  %.3078 = load %Type.580273*, %Type.580273** %20, align 8
  %.309 = call %LLVMTypeRef.580454* %.306(%CodeGen.580507* %.1, %Type.580273* %.3078, i1 false)
  store %LLVMTypeRef.580454* %.309, %LLVMTypeRef.580454** %llvm_method_type, align 8
  %.313 = load %Program.580445*, %Program.580445** %.85, align 8
  %21 = bitcast %TypeId.580287** %.147 to %ClassId.580289**
  %.3169 = load %ClassId.580289*, %ClassId.580289** %21, align 8
  %.318 = call %Class.580403* @get_class(%Program.580445* %.313, %ClassId.580289* %.3169)
  %.319 = getelementptr inbounds %Class.580403, %Class.580403* %.318, i64 0, i32 2
  %.3201011 = load %string.580129*, %string.580129** %.319, align 8
  %.324 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.323, align 8
  %.326 = load %string.580129*, %string.580129** %prop_name, align 8
  %.327 = getelementptr inbounds %string.580129, %string.580129* %.3201011, i64 0, i32 0
  %.328 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.327, align 8
  %.329 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.328, i64 0, i32 10
  %.330 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.329, align 8
  %.331 = call i8* %.330(%string.580129* %.3201011)
  %.332 = getelementptr inbounds %string.580129, %string.580129* %.326, i64 0, i32 0
  %.333 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.332, align 8
  %.334 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.333, i64 0, i32 10
  %.335 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.334, align 8
  %.336 = call i8* %.335(%string.580129* %.326)
  %.338 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.397, i64 0, i64 0), i8* %.331, i8* %.336)
  %.340 = call i8* @malloc(i64 %.338)
  %.341 = call i64 (i8*, i8*, ...) @sprintf(i8* %.340, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.397, i64 0, i64 0), i8* %.331, i8* %.336)
  %.342 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.343 = bitcast i8* %.342 to %string.580129*
  %.344 = bitcast i8* %.342 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.344, align 8
  %.346 = getelementptr inbounds i8, i8* %.342, i64 8
  %22 = bitcast i8* %.346 to i8**
  store i8* %.340, i8** %22, align 8
  %.348 = getelementptr inbounds i8, i8* %.342, i64 16
  %23 = bitcast i8* %.348 to i64*
  store i64 %.338, i64* %23, align 8
  %.350 = getelementptr inbounds i8, i8* %.342, i64 24
  %24 = bitcast i8* %.350 to i64*
  store i64 %.338, i64* %24, align 8
  %.355 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.356 = call i8* %.355(%string.580129* %.343)
  %.357 = call %LLVMValueRef.580455* @LLVMGetNamedFunction(%LLVMModuleRef.580453* %.324, i8* %.356)
  store %LLVMValueRef.580455* %.357, %LLVMValueRef.580455** %llvm_method_val, align 8
  br label %for.body.else.endif

for.body.else.endif:                              ; preds = %for.end.1.endif, %for.body.else.else
  %.362 = load %"Map<string, int>.580489"*, %"Map<string, int>.580489"** %.361, align 8
  %.363 = getelementptr inbounds %"Map<string, int>.580489", %"Map<string, int>.580489"* %.362, i64 0, i32 0
  %.364 = load %"Map<string, int>_vtable_ty.580491"*, %"Map<string, int>_vtable_ty.580491"** %.363, align 8
  %.365 = getelementptr inbounds %"Map<string, int>_vtable_ty.580491", %"Map<string, int>_vtable_ty.580491"* %.364, i64 0, i32 2
  %.366 = load void (%"Map<string, int>.580489"*, %string.580129*, i64)*, void (%"Map<string, int>.580489"*, %string.580129*, i64)** %.365, align 8
  call void %.366(%"Map<string, int>.580489"* %.362, %string.580129* %.82, i64 %.104)
  call void @resize_type_array(%"Array<LLVMTypeRef>.580503"* %.38, i64 %.104)
  %.374 = getelementptr inbounds %PropId.580339, %PropId.580339* %.87.cast, i64 0, i32 3
  %.375 = load i64, i64* %.374, align 8
  %.378 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.377, align 8
  %.379 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.378, i64 0, i32 0
  %.380 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.379, align 8
  %.381 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.380, i64 0, i32 5
  %.382 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.381, align 8
  %.383 = call %ClassMethod.580401* %.382(%"Array<ClassMethod>.580406"* %.378, i64 %.375)
  %.384 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.383, i64 0, i32 8
  %.385 = load i1, i1* %.384, align 1
  br i1 %.385, label %for.body.else.endif.endif, label %for.body.else.endif.if

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.19029 = phi %"Array<Type>.580281"* [ %.19024, %for.body.1.lr.ph ], [ %.190, %for.body.1 ]
  %storemerge1228 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.214, %for.body.1 ]
  %.200 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.19029, i64 0, i32 0
  %.201 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.200, align 8
  %.202 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.201, i64 0, i32 5
  %.203 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.202, align 8
  %.204 = call %Type.580273* %.203(%"Array<Type>.580281"* %.19029, i64 %storemerge1228)
  %.206 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.205, align 8
  %.207 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.206, i64 0, i32 2
  %.208 = load void (%"Array<Type>.580281"*, %Type.580273*)*, void (%"Array<Type>.580281"*, %Type.580273*)** %.207, align 8
  call void %.208(%"Array<Type>.580281"* %.195, %Type.580273* %.204)
  %.214 = add nuw nsw i64 %storemerge1228, 1
  %.190 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.189, align 8
  %.191 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.190, i64 0, i32 2
  %.192 = load i64, i64* %.191, align 8
  %.193 = icmp slt i64 %.214, %.192
  br i1 %.193, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.body.else.if
  %.189.lcssa = phi %"Array<Type>.580281"** [ %.18923, %for.body.else.if ], [ %.189, %for.body.1 ]
  %25 = bitcast %"Array<Type>.580281"** %arg_types to i64*
  %.21813 = load i64, i64* %25, align 8
  %26 = bitcast %"Array<Type>.580281"** %.189.lcssa to i64*
  store i64 %.21813, i64* %26, align 8
  %.223 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.222, align 8
  %.224 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.223, i64 0, i32 13
  %.225 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.224, align 8
  %27 = bitcast %FunctionType.580279** %method_type to %Type.580273**
  %.22614 = load %Type.580273*, %Type.580273** %27, align 8
  %.228 = call %LLVMTypeRef.580454* %.225(%CodeGen.580507* %.1, %Type.580273* %.22614, i1 false)
  store %LLVMTypeRef.580454* %.228, %LLVMTypeRef.580454** %llvm_method_type, align 8
  %.231 = getelementptr inbounds %PropId.580339, %PropId.580339* %.87.cast, i64 0, i32 3
  %.232 = load i64, i64* %.231, align 8
  %.235 = load %"Array<ClassMethod>.580406"*, %"Array<ClassMethod>.580406"** %.234, align 8
  %.236 = getelementptr inbounds %"Array<ClassMethod>.580406", %"Array<ClassMethod>.580406"* %.235, i64 0, i32 0
  %.237 = load %"Array<ClassMethod>_vtable_ty.580409"*, %"Array<ClassMethod>_vtable_ty.580409"** %.236, align 8
  %.238 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.580409", %"Array<ClassMethod>_vtable_ty.580409"* %.237, i64 0, i32 5
  %.239 = load %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)*, %ClassMethod.580401* (%"Array<ClassMethod>.580406"*, i64)** %.238, align 8
  %.240 = call %ClassMethod.580401* %.239(%"Array<ClassMethod>.580406"* %.235, i64 %.232)
  %.241 = getelementptr inbounds %ClassMethod.580401, %ClassMethod.580401* %.240, i64 0, i32 8
  %.242 = load i1, i1* %.241, align 1
  br i1 %.242, label %for.end.1.endif, label %for.end.1.if

for.end.1.if:                                     ; preds = %for.end.1
  %.247 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.222, align 8
  %.248 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.247, i64 0, i32 51
  %.249 = load %LLVMValueRef.580455* (%CodeGen.580507*, %string.580129*, %LLVMTypeRef.580454*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %string.580129*, %LLVMTypeRef.580454*)** %.248, align 8
  %.252 = load %string.580129*, %string.580129** %.251, align 8
  %.253 = load %string.580129*, %string.580129** %prop_name, align 8
  %.254 = getelementptr inbounds %string.580129, %string.580129* %.252, i64 0, i32 0
  %.255 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.254, align 8
  %.256 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.255, i64 0, i32 10
  %.257 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.256, align 8
  %.258 = call i8* %.257(%string.580129* %.252)
  %.259 = getelementptr inbounds %string.580129, %string.580129* %.253, i64 0, i32 0
  %.260 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.259, align 8
  %.261 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.260, i64 0, i32 10
  %.262 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.261, align 8
  %.263 = call i8* %.262(%string.580129* %.253)
  %.265 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.397, i64 0, i64 0), i8* %.258, i8* %.263)
  %.267 = call i8* @malloc(i64 %.265)
  %.268 = call i64 (i8*, i8*, ...) @sprintf(i8* %.267, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.397, i64 0, i64 0), i8* %.258, i8* %.263)
  %.269 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.270 = bitcast i8* %.269 to %string.580129*
  %.271 = bitcast i8* %.269 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.271, align 8
  %.273 = getelementptr inbounds i8, i8* %.269, i64 8
  %28 = bitcast i8* %.273 to i8**
  store i8* %.267, i8** %28, align 8
  %.275 = getelementptr inbounds i8, i8* %.269, i64 16
  %29 = bitcast i8* %.275 to i64*
  store i64 %.265, i64* %29, align 8
  %.277 = getelementptr inbounds i8, i8* %.269, i64 24
  %30 = bitcast i8* %.277 to i64*
  store i64 %.265, i64* %30, align 8
  %.280 = call %LLVMValueRef.580455* %.249(%CodeGen.580507* %.1, %string.580129* %.270, %LLVMTypeRef.580454* %.228)
  store %LLVMValueRef.580455* %.280, %LLVMValueRef.580455** %llvm_method_val, align 8
  br label %for.end.1.endif

for.end.1.endif:                                  ; preds = %for.end.1, %for.end.1.if
  %.285 = load %Program.580445*, %Program.580445** %.85, align 8
  %.287 = call i64 @get_class_prop_visibility(%Program.580445* %.285, %PropId.580339* %.87.cast)
  %.288 = icmp eq i64 %.287, 0
  br i1 %.288, label %for.end.1.endif.if, label %for.body.else.endif

for.end.1.endif.if:                               ; preds = %for.end.1.endif
  %.292 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %.291, align 8
  %.293 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.292, i64 0, i32 0
  %.294 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.293, align 8
  %.295 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.294, i64 0, i32 2
  %.296 = load void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)*, void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)** %.295, align 8
  %.298 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %llvm_method_val, align 8
  call void %.296(%"Map<string, LLVMValueRef>.580490"* %.292, %string.580129* %.82, %LLVMValueRef.580455* %.298)
  br label %for.incr

for.body.else.endif.if:                           ; preds = %for.body.else.endif
  call void @resize_value_array(%"Array<LLVMValueRef>.580505"* %.24, i64 %.104)
  %.393 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %llvm_method_val, align 8
  %.395 = load %"Array<LLVMValueRef>_vtable_ty.580506"*, %"Array<LLVMValueRef>_vtable_ty.580506"** %.25, align 8
  %.396 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.580506", %"Array<LLVMValueRef>_vtable_ty.580506"* %.395, i64 0, i32 3
  %.397 = load void (%"Array<LLVMValueRef>.580505"*, i64, %LLVMValueRef.580455*)*, void (%"Array<LLVMValueRef>.580505"*, i64, %LLVMValueRef.580455*)** %.396, align 8
  call void %.397(%"Array<LLVMValueRef>.580505"* %.24, i64 %.104, %LLVMValueRef.580455* %.393)
  br label %for.body.else.endif.endif

for.body.else.endif.endif:                        ; preds = %for.body.else.endif, %for.body.else.endif.if
  %.402 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %llvm_method_type, align 8
  %.403 = call %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454* %.402, i64 0)
  %.405 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.39, align 8
  %.406 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.405, i64 0, i32 3
  %.407 = load void (%"Array<LLVMTypeRef>.580503"*, i64, %LLVMTypeRef.580454*)*, void (%"Array<LLVMTypeRef>.580503"*, i64, %LLVMTypeRef.580454*)** %.406, align 8
  call void %.407(%"Array<LLVMTypeRef>.580503"* %.38, i64 %.104, %LLVMTypeRef.580454* %.403)
  br label %for.incr

for.end.if:                                       ; preds = %for.end
  %.423 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.424 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.423, align 8
  %31 = bitcast i8* %.41 to %LLVMTypeRef.580454***
  %.427 = load %LLVMTypeRef.580454**, %LLVMTypeRef.580454*** %31, align 8
  %.431 = call %LLVMTypeRef.580454* @LLVMStructTypeInContext(%LLVMContextRef.580452* %.424, %LLVMTypeRef.580454** %.427, i64 %.419, i1 true)
  %vtable_struct_ty = alloca %LLVMTypeRef.580454*, align 8
  store %LLVMTypeRef.580454* %.431, %LLVMTypeRef.580454** %vtable_struct_ty, align 8
  %.434 = getelementptr inbounds %Class.580403, %Class.580403* %.3, i64 0, i32 11
  %.435 = load i1, i1* %.434, align 1
  br i1 %.435, label %for.end.if.endif, label %for.end.if.if

for.end.if.if:                                    ; preds = %for.end.if
  %.440 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 2
  %.441 = load %LLVMModuleRef.580453*, %LLVMModuleRef.580453** %.440, align 8
  %.444 = getelementptr inbounds %Class.580403, %Class.580403* %.3, i64 0, i32 2
  %.445 = load %string.580129*, %string.580129** %.444, align 8
  %.446 = getelementptr inbounds %string.580129, %string.580129* %.445, i64 0, i32 0
  %.447 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.446, align 8
  %.448 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.447, i64 0, i32 10
  %.449 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.448, align 8
  %.450 = call i8* %.449(%string.580129* %.445)
  %.452 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.398, i64 0, i64 0), i8* %.450)
  %.454 = call i8* @malloc(i64 %.452)
  %.455 = call i64 (i8*, i8*, ...) @sprintf(i8* %.454, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.398, i64 0, i64 0), i8* %.450)
  %.456 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.457 = bitcast i8* %.456 to %string.580129*
  %.458 = bitcast i8* %.456 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.458, align 8
  %.460 = getelementptr inbounds i8, i8* %.456, i64 8
  %32 = bitcast i8* %.460 to i8**
  store i8* %.454, i8** %32, align 8
  %.462 = getelementptr inbounds i8, i8* %.456, i64 16
  %33 = bitcast i8* %.462 to i64*
  store i64 %.452, i64* %33, align 8
  %.464 = getelementptr inbounds i8, i8* %.456, i64 24
  %34 = bitcast i8* %.464 to i64*
  store i64 %.452, i64* %34, align 8
  %.469 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.470 = call i8* %.469(%string.580129* %.457)
  %.471 = call %LLVMValueRef.580455* @LLVMAddGlobal(%LLVMModuleRef.580453* %.441, %LLVMTypeRef.580454* %.431, i8* %.470)
  %.472 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.2, i64 0, i32 5
  store %LLVMValueRef.580455* %.471, %LLVMValueRef.580455** %.472, align 8
  %.476 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.423, align 8
  %35 = bitcast i8* %.27 to %LLVMValueRef.580455***
  %.479 = load %LLVMValueRef.580455**, %LLVMValueRef.580455*** %35, align 8
  %.482 = load i64, i64* %1, align 8
  %.483 = call %LLVMValueRef.580455* @LLVMConstStructInContext(%LLVMContextRef.580452* %.476, %LLVMValueRef.580455** %.479, i64 %.482, i1 true)
  %.487 = load %LLVMValueRef.580455*, %LLVMValueRef.580455** %.472, align 8
  call void @LLVMSetInitializer(%LLVMValueRef.580455* %.487, %LLVMValueRef.580455* %.483)
  br label %for.end.if.endif

for.end.if.endif:                                 ; preds = %for.end.if, %for.end.if.if
  %36 = bitcast %LLVMTypeRef.580454** %vtable_struct_ty to i64*
  %.4922 = load i64, i64* %36, align 8
  %.493 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.2, i64 0, i32 6
  %37 = bitcast %LLVMTypeRef.580454** %.493 to i64*
  store i64 %.4922, i64* %37, align 8
  %.496.cast = inttoptr i64 %.4922 to %LLVMTypeRef.580454*
  %.497 = call %LLVMTypeRef.580454* @LLVMPointerType(%LLVMTypeRef.580454* %.496.cast, i64 0)
  %.498 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.4, i64 0, i32 0
  %.499 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.498, align 8
  %.500 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.499, i64 0, i32 2
  %.501 = load void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)*, void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)** %.500, align 8
  call void %.501(%"Array<LLVMTypeRef>.580503"* %.4, %LLVMTypeRef.580454* %.497)
  br label %for.entry.2

for.entry.2:                                      ; preds = %for.end, %for.end.if.endif
  %.51019 = load i64, i64* %7, align 8
  %.51120 = icmp sgt i64 %.51019, 0
  br i1 %.51120, label %for.body.2.lr.ph, label %for.end.2

for.body.2.lr.ph:                                 ; preds = %for.entry.2
  %.521 = getelementptr inbounds %"Array<LLVMTypeRef>.580503", %"Array<LLVMTypeRef>.580503"* %.4, i64 0, i32 0
  br label %for.body.2

for.body.2:                                       ; preds = %for.body.2.lr.ph, %for.body.2
  %storemerge121 = phi i64 [ 0, %for.body.2.lr.ph ], [ %.530, %for.body.2 ]
  %.517 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.53, align 8
  %.518 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.517, i64 0, i32 5
  %.519 = load %LLVMTypeRef.580454* (%"Array<LLVMTypeRef>.580503"*, i64)*, %LLVMTypeRef.580454* (%"Array<LLVMTypeRef>.580503"*, i64)** %.518, align 8
  %.520 = call %LLVMTypeRef.580454* %.519(%"Array<LLVMTypeRef>.580503"* %.52, i64 %storemerge121)
  %.522 = load %"Array<LLVMTypeRef>_vtable_ty.580504"*, %"Array<LLVMTypeRef>_vtable_ty.580504"** %.521, align 8
  %.523 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.580504", %"Array<LLVMTypeRef>_vtable_ty.580504"* %.522, i64 0, i32 2
  %.524 = load void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)*, void (%"Array<LLVMTypeRef>.580503"*, %LLVMTypeRef.580454*)** %.523, align 8
  call void %.524(%"Array<LLVMTypeRef>.580503"* %.4, %LLVMTypeRef.580454* %.520)
  %.530 = add nuw nsw i64 %storemerge121, 1
  %.510 = load i64, i64* %7, align 8
  %.511 = icmp slt i64 %.530, %.510
  br i1 %.511, label %for.body.2, label %for.end.2

for.end.2:                                        ; preds = %for.body.2, %for.entry.2
  ret void
}

define void @CodeGen_declare_class(%CodeGen.580507* %.1, %Class.580403* nocapture readonly %.2) {
.4:
  %.8 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = bitcast i8* %.8 to %CGClassType.580487*
  %.10 = bitcast i8* %.8 to %CGClassType_vtable_ty.580488**
  store %CGClassType_vtable_ty.580488* @CGClassType_vtable_data, %CGClassType_vtable_ty.580488** %.10, align 8
  %.15 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.16 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.15, align 8
  %.18 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 2
  %.19 = load %string.580129*, %string.580129** %.18, align 8
  %.20 = getelementptr inbounds %string.580129, %string.580129* %.19, i64 0, i32 0
  %.21 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.20, align 8
  %.22 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.21, i64 0, i32 10
  %.23 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.22, align 8
  %.24 = call i8* %.23(%string.580129* %.19)
  %.25 = call %LLVMTypeRef.580454* @LLVMStructCreateNamed(%LLVMContextRef.580452* %.16, i8* %.24)
  %.26 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.26 to %LLVMTypeRef.580454**
  store %LLVMTypeRef.580454* %.25, %LLVMTypeRef.580454** %0, align 8
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %"Map<string, int>.580489"*
  %.31 = bitcast i8* %.29 to %"Map<string, int>_vtable_ty.580491"**
  store %"Map<string, int>_vtable_ty.580491"* @"Map<string, int>_vtable_data", %"Map<string, int>_vtable_ty.580491"** %.31, align 8
  call void @"Map<string, int>_constructor"(%"Map<string, int>.580489"* %.30)
  %.34 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.34 to i8**
  store i8* %.29, i8** %1, align 8
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %"Map<string, int>.580489"*
  %.39 = bitcast i8* %.37 to %"Map<string, int>_vtable_ty.580491"**
  store %"Map<string, int>_vtable_ty.580491"* @"Map<string, int>_vtable_data", %"Map<string, int>_vtable_ty.580491"** %.39, align 8
  call void @"Map<string, int>_constructor"(%"Map<string, int>.580489"* %.38)
  %.42 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.42 to i8**
  store i8* %.37, i8** %2, align 8
  %.45 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.46 = bitcast i8* %.45 to %"Map<string, LLVMValueRef>.580490"*
  %.47 = bitcast i8* %.45 to %"Map<string, LLVMValueRef>_vtable_ty.580496"**
  store %"Map<string, LLVMValueRef>_vtable_ty.580496"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.47, align 8
  call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.580490"* %.46)
  %.50 = getelementptr inbounds i8, i8* %.8, i64 32
  %3 = bitcast i8* %.50 to i8**
  store i8* %.45, i8** %3, align 8
  %.53 = getelementptr inbounds i8, i8* %.8, i64 40
  %.59 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.53, i8 0, i64 16, i1 false)
  %.60 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.59, align 8
  %.61 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.60, i64 0, i32 7
  %.62 = load void (%CodeGen.580507*, %TypeId.580287*, %CGClassType.580487*)*, void (%CodeGen.580507*, %TypeId.580287*, %CGClassType.580487*)** %.61, align 8
  %.64 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 1
  %4 = bitcast %ClassId.580289** %.64 to %TypeId.580287**
  %.651 = load %TypeId.580287*, %TypeId.580287** %4, align 8
  call void %.62(%CodeGen.580507* %.1, %TypeId.580287* %.651, %CGClassType.580487* %.9)
  ret void
}

define void @CodeGen_declare_class_struct(%CodeGen.580507* %.1, %Class.580403* %.2) {
.4:
  %.8 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %"Array<LLVMTypeRef>.580503"*
  %.12 = bitcast i8* %.10 to %"Array<LLVMTypeRef>_vtable_ty.580504"**
  store %"Array<LLVMTypeRef>_vtable_ty.580504"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.580504"** %.12, align 8
  %.14 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.14 to i8**
  store i8* %.8, i8** %0, align 8
  %.16 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.16 to i64*
  store i64 0, i64* %1, align 8
  %.18 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.18 to i64*
  store i64 8, i64* %2, align 8
  %.22 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.23 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.23, i64 0, i32 3
  %.25 = load %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)*, %CGClassType.580487* (%CodeGen.580507*, %TypeId.580287*)** %.24, align 8
  %.27 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 1
  %3 = bitcast %ClassId.580289** %.27 to %TypeId.580287**
  %.281 = load %TypeId.580287*, %TypeId.580287** %3, align 8
  %.30 = call %CGClassType.580487* %.25(%CodeGen.580507* %.1, %TypeId.580287* %.281)
  %.34 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.35 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.34, i64 0, i32 52
  %.36 = load void (%CodeGen.580507*, %CGClassType.580487*, %Class.580403*)*, void (%CodeGen.580507*, %CGClassType.580487*, %Class.580403*)** %.35, align 8
  call void %.36(%CodeGen.580507* %.1, %CGClassType.580487* %.30, %Class.580403* %.2)
  %.42 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.43 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.42, i64 0, i32 53
  %.44 = load void (%CodeGen.580507*, %CGClassType.580487*, %Class.580403*, %"Array<LLVMTypeRef>.580503"*)*, void (%CodeGen.580507*, %CGClassType.580487*, %Class.580403*, %"Array<LLVMTypeRef>.580503"*)** %.43, align 8
  call void %.44(%CodeGen.580507* %.1, %CGClassType.580487* %.30, %Class.580403* %.2, %"Array<LLVMTypeRef>.580503"* %.11)
  %.50 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.30, i64 0, i32 1
  %.51 = load %LLVMTypeRef.580454*, %LLVMTypeRef.580454** %.50, align 8
  %4 = bitcast i8* %.14 to %LLVMTypeRef.580454***
  %.54 = load %LLVMTypeRef.580454**, %LLVMTypeRef.580454*** %4, align 8
  %.57 = load i64, i64* %1, align 8
  call void @LLVMStructSetBody(%LLVMTypeRef.580454* %.51, %LLVMTypeRef.580454** %.54, i64 %.57, i1 true)
  %.60 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 4
  %5 = bitcast %PropId.580339** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  %.62 = trunc i64 %.612 to i32
  %.64.not = icmp eq i32 %.62, 0
  br i1 %.64.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.67 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 11
  %.68 = load %Program.580445*, %Program.580445** %.67, align 8
  %.71 = load %PropId.580339*, %PropId.580339** %.60, align 8
  %.72 = call %Type.580273* @get_class_prop_type(%Program.580445* %.68, %PropId.580339* %.71)
  %constructor_type = alloca %FunctionType.580279*, align 8
  %6 = bitcast %FunctionType.580279** %constructor_type to %Type.580273**
  store %Type.580273* %.72, %Type.580273** %6, align 8
  %.77 = load %ClassId.580289*, %ClassId.580289** %.27, align 8
  %.78 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.79 = bitcast i8* %.78 to %ObjectType.580297*
  %.80 = bitcast i8* %.78 to %ObjectType_vtable_ty.580298**
  store %ObjectType_vtable_ty.580298* @ObjectType_vtable_data, %ObjectType_vtable_ty.580298** %.80, align 8
  call void @ObjectType_constructor(%ObjectType.580297* %.79, %ClassId.580289* %.77)
  %.85 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %7 = bitcast i8* %.85 to i8**
  store i8* %.78, i8** %7, align 8
  %.89 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.91 = bitcast i8* %.89 to %"Array<Type>_vtable_ty.580282"**
  store %"Array<Type>_vtable_ty.580282"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.580282"** %.91, align 8
  %.93 = getelementptr inbounds i8, i8* %.89, i64 8
  %8 = bitcast i8* %.93 to i8**
  store i8* %.85, i8** %8, align 8
  %.95 = getelementptr inbounds i8, i8* %.89, i64 16
  %9 = bitcast i8* %.95 to i64*
  store i64 1, i64* %9, align 8
  %.97 = getelementptr inbounds i8, i8* %.89, i64 24
  %10 = bitcast i8* %.97 to i64*
  store i64 8, i64* %10, align 8
  %arg_types = alloca %"Array<Type>.580281"*, align 8
  %11 = bitcast %"Array<Type>.580281"** %arg_types to i8**
  store i8* %.89, i8** %11, align 8
  %.1045 = load %FunctionType.580279*, %FunctionType.580279** %constructor_type, align 8
  %.1056 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.1045, i64 0, i32 2
  %.1067 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.1056, align 8
  %.1078 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.1067, i64 0, i32 2
  %.1089 = load i64, i64* %.1078, align 8
  %.10910 = icmp sgt i64 %.1089, 0
  br i1 %.10910, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4.if
  %.111 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %arg_types, align 8
  %.121 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.111, i64 0, i32 0
  %.104 = load %FunctionType.580279*, %FunctionType.580279** %constructor_type, align 8
  %.105 = getelementptr inbounds %FunctionType.580279, %FunctionType.580279* %.104, i64 0, i32 2
  br label %for.body

.4.endif:                                         ; preds = %.4, %for.end
  %.176.sink = phi %LLVMValueRef.580455* [ %.176, %for.end ], [ null, %.4 ]
  %.177 = getelementptr inbounds %CGClassType.580487, %CGClassType.580487* %.30, i64 0, i32 7
  store %LLVMValueRef.580455* %.176.sink, %LLVMValueRef.580455** %.177, align 8
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.10612 = phi %"Array<Type>.580281"* [ %.1067, %for.body.lr.ph ], [ %.106, %for.body ]
  %storemerge11 = phi i64 [ 0, %for.body.lr.ph ], [ %.130, %for.body ]
  %.116 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.10612, i64 0, i32 0
  %.117 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.116, align 8
  %.118 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.117, i64 0, i32 5
  %.119 = load %Type.580273* (%"Array<Type>.580281"*, i64)*, %Type.580273* (%"Array<Type>.580281"*, i64)** %.118, align 8
  %.120 = call %Type.580273* %.119(%"Array<Type>.580281"* %.10612, i64 %storemerge11)
  %.122 = load %"Array<Type>_vtable_ty.580282"*, %"Array<Type>_vtable_ty.580282"** %.121, align 8
  %.123 = getelementptr inbounds %"Array<Type>_vtable_ty.580282", %"Array<Type>_vtable_ty.580282"* %.122, i64 0, i32 2
  %.124 = load void (%"Array<Type>.580281"*, %Type.580273*)*, void (%"Array<Type>.580281"*, %Type.580273*)** %.123, align 8
  call void %.124(%"Array<Type>.580281"* %.111, %Type.580273* %.120)
  %.130 = add nuw nsw i64 %storemerge11, 1
  %.106 = load %"Array<Type>.580281"*, %"Array<Type>.580281"** %.105, align 8
  %.107 = getelementptr inbounds %"Array<Type>.580281", %"Array<Type>.580281"* %.106, i64 0, i32 2
  %.108 = load i64, i64* %.107, align 8
  %.109 = icmp slt i64 %.130, %.108
  br i1 %.109, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.4.if
  %.105.lcssa = phi %"Array<Type>.580281"** [ %.1056, %.4.if ], [ %.105, %for.body ]
  %12 = bitcast %"Array<Type>.580281"** %arg_types to i64*
  %.1343 = load i64, i64* %12, align 8
  %13 = bitcast %"Array<Type>.580281"** %.105.lcssa to i64*
  store i64 %.1343, i64* %13, align 8
  %.139 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.140 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.139, i64 0, i32 13
  %.141 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.140, align 8
  %.144 = call %LLVMTypeRef.580454* %.141(%CodeGen.580507* %.1, %Type.580273* %.72, i1 false)
  %.149 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.22, align 8
  %.150 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.149, i64 0, i32 51
  %.151 = load %LLVMValueRef.580455* (%CodeGen.580507*, %string.580129*, %LLVMTypeRef.580454*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %string.580129*, %LLVMTypeRef.580454*)** %.150, align 8
  %.153 = getelementptr inbounds %Class.580403, %Class.580403* %.2, i64 0, i32 2
  %.154 = load %string.580129*, %string.580129** %.153, align 8
  %.155 = getelementptr inbounds %string.580129, %string.580129* %.154, i64 0, i32 0
  %.156 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.155, align 8
  %.157 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.156, i64 0, i32 10
  %.158 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.157, align 8
  %.159 = call i8* %.158(%string.580129* %.154)
  %.161 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.399, i64 0, i64 0), i8* %.159)
  %.163 = call i8* @malloc(i64 %.161)
  %.164 = call i64 (i8*, i8*, ...) @sprintf(i8* %.163, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.399, i64 0, i64 0), i8* %.159)
  %.165 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.166 = bitcast i8* %.165 to %string.580129*
  %.167 = bitcast i8* %.165 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.167, align 8
  %.169 = getelementptr inbounds i8, i8* %.165, i64 8
  %14 = bitcast i8* %.169 to i8**
  store i8* %.163, i8** %14, align 8
  %.171 = getelementptr inbounds i8, i8* %.165, i64 16
  %15 = bitcast i8* %.171 to i64*
  store i64 %.161, i64* %15, align 8
  %.173 = getelementptr inbounds i8, i8* %.165, i64 24
  %16 = bitcast i8* %.173 to i64*
  store i64 %.161, i64* %16, align 8
  %.176 = call %LLVMValueRef.580455* %.151(%CodeGen.580507* %.1, %string.580129* %.166, %LLVMTypeRef.580454* %.144)
  br label %.4.endif
}

define void @CodeGen_declare_enum(%CodeGen.580507* %.1, %Enum.580417* nocapture readonly %.2) {
.4:
  %.8 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.10 = bitcast i8* %.8 to %CGEnumType_vtable_ty.580502**
  store %CGEnumType_vtable_ty.580502* @CGEnumType_vtable_data, %CGEnumType_vtable_ty.580502** %.10, align 8
  %.14 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.15 = bitcast i8* %.14 to %"Map<string, LLVMValueRef>.580490"*
  %.16 = bitcast i8* %.14 to %"Map<string, LLVMValueRef>_vtable_ty.580496"**
  store %"Map<string, LLVMValueRef>_vtable_ty.580496"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.16, align 8
  call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.580490"* %.15)
  %.19 = getelementptr inbounds i8, i8* %.8, i64 16
  %0 = bitcast i8* %.19 to i8**
  store i8* %.14, i8** %0, align 8
  %.22 = getelementptr inbounds %Enum.580417, %Enum.580417* %.2, i64 0, i32 3
  %.23 = load %"Array<EnumField>.580419"*, %"Array<EnumField>.580419"** %.22, align 8
  %.24 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.23, i64 0, i32 2
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp sgt i64 %.25, 0
  br i1 %.26, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.30 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.31 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.30, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.31, i64 0, i32 13
  %.33 = load %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)*, %LLVMTypeRef.580454* (%CodeGen.580507*, %Type.580273*, i1)** %.32, align 8
  %.37 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.23, i64 0, i32 0
  %.38 = load %"Array<EnumField>_vtable_ty.580420"*, %"Array<EnumField>_vtable_ty.580420"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<EnumField>_vtable_ty.580420", %"Array<EnumField>_vtable_ty.580420"* %.38, i64 0, i32 5
  %.40 = load %EnumField.580415* (%"Array<EnumField>.580419"*, i64)*, %EnumField.580415* (%"Array<EnumField>.580419"*, i64)** %.39, align 8
  %.41 = call %EnumField.580415* %.40(%"Array<EnumField>.580419"* %.23, i64 0)
  %.42 = getelementptr inbounds %EnumField.580415, %EnumField.580415* %.41, i64 0, i32 3
  %.43 = load %Expression.580293*, %Expression.580293** %.42, align 8
  %.44 = getelementptr inbounds %Expression.580293, %Expression.580293* %.43, i64 0, i32 4
  %.45 = load %Type.580273*, %Type.580273** %.44, align 8
  %.46 = call %LLVMTypeRef.580454* %.33(%CodeGen.580507* %.1, %Type.580273* %.45, i1 true)
  br label %for.entry

.4.else:                                          ; preds = %.4
  %.52 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 13
  %.53 = load %LLVMContextRef.580452*, %LLVMContextRef.580452** %.52, align 8
  %.54 = call %LLVMTypeRef.580454* @LLVMIntTypeInContext(%LLVMContextRef.580452* %.53, i64 64)
  br label %for.entry

for.entry:                                        ; preds = %.4.if, %.4.else
  %.46.sink = phi %LLVMTypeRef.580454* [ %.46, %.4.if ], [ %.54, %.4.else ]
  %.47 = getelementptr inbounds i8, i8* %.8, i64 8
  %1 = bitcast i8* %.47 to %LLVMTypeRef.580454**
  store %LLVMTypeRef.580454* %.46.sink, %LLVMTypeRef.580454** %1, align 8
  %.643 = load %"Array<EnumField>.580419"*, %"Array<EnumField>.580419"** %.22, align 8
  %.654 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.643, i64 0, i32 2
  %.665 = load i64, i64* %.654, align 8
  %.676 = icmp sgt i64 %.665, 0
  br i1 %.676, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %2 = bitcast i8* %.19 to %"Map<string, LLVMValueRef>.580490"**
  %.93 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.648 = phi %"Array<EnumField>.580419"* [ %.643, %for.body.lr.ph ], [ %.64, %for.body ]
  %storemerge7 = phi i64 [ 0, %for.body.lr.ph ], [ %.106, %for.body ]
  %.73 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.648, i64 0, i32 0
  %.74 = load %"Array<EnumField>_vtable_ty.580420"*, %"Array<EnumField>_vtable_ty.580420"** %.73, align 8
  %.75 = getelementptr inbounds %"Array<EnumField>_vtable_ty.580420", %"Array<EnumField>_vtable_ty.580420"* %.74, i64 0, i32 5
  %.76 = load %EnumField.580415* (%"Array<EnumField>.580419"*, i64)*, %EnumField.580415* (%"Array<EnumField>.580419"*, i64)** %.75, align 8
  %.77 = call %EnumField.580415* %.76(%"Array<EnumField>.580419"* %.648, i64 %storemerge7)
  %.80 = getelementptr inbounds %EnumField.580415, %EnumField.580415* %.77, i64 0, i32 1
  %.8129 = load %PropId.580339*, %PropId.580339** %.80, align 8
  %.85 = load %"Map<string, LLVMValueRef>.580490"*, %"Map<string, LLVMValueRef>.580490"** %2, align 8
  %.86 = getelementptr inbounds %"Map<string, LLVMValueRef>.580490", %"Map<string, LLVMValueRef>.580490"* %.85, i64 0, i32 0
  %.87 = load %"Map<string, LLVMValueRef>_vtable_ty.580496"*, %"Map<string, LLVMValueRef>_vtable_ty.580496"** %.86, align 8
  %.88 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.580496", %"Map<string, LLVMValueRef>_vtable_ty.580496"* %.87, i64 0, i32 2
  %.89 = load void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)*, void (%"Map<string, LLVMValueRef>.580490"*, %string.580129*, %LLVMValueRef.580455*)** %.88, align 8
  %.91 = call %string.580129* @create_prop_key(%PropId.580339* %.8129)
  %.94 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.93, align 8
  %.95 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.94, i64 0, i32 39
  %.96 = load %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)*, %LLVMValueRef.580455* (%CodeGen.580507*, %LLVMBuilderRef.580460*, %Expression.580293*)** %.95, align 8
  %.98 = getelementptr inbounds %EnumField.580415, %EnumField.580415* %.77, i64 0, i32 3
  %.99 = load %Expression.580293*, %Expression.580293** %.98, align 8
  %.100 = call %LLVMValueRef.580455* %.96(%CodeGen.580507* %.1, %LLVMBuilderRef.580460* null, %Expression.580293* %.99)
  call void %.89(%"Map<string, LLVMValueRef>.580490"* %.85, %string.580129* %.91, %LLVMValueRef.580455* %.100)
  %.106 = add nuw nsw i64 %storemerge7, 1
  %.64 = load %"Array<EnumField>.580419"*, %"Array<EnumField>.580419"** %.22, align 8
  %.65 = getelementptr inbounds %"Array<EnumField>.580419", %"Array<EnumField>.580419"* %.64, i64 0, i32 2
  %.66 = load i64, i64* %.65, align 8
  %.67 = icmp slt i64 %.106, %.66
  br i1 %.67, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %.9 = bitcast i8* %.8 to %CGEnumType.580501*
  %.110 = getelementptr inbounds %CodeGen.580507, %CodeGen.580507* %.1, i64 0, i32 0
  %.111 = load %CodeGen_vtable_ty.580508*, %CodeGen_vtable_ty.580508** %.110, align 8
  %.112 = getelementptr inbounds %CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* %.111, i64 0, i32 8
  %.113 = load void (%CodeGen.580507*, %TypeId.580287*, %CGEnumType.580501*)*, void (%CodeGen.580507*, %TypeId.580287*, %CGEnumType.580501*)** %.112, align 8
  %.115 = getelementptr inbounds %Enum.580417, %Enum.580417* %.2, i64 0, i32 1
  %3 = bitcast %EnumId.580291** %.115 to %TypeId.580287**
  %.1161 = load %TypeId.580287*, %TypeId.580287** %3, align 8
  call void %.113(%CodeGen.580507* %.1, %TypeId.580287* %.1161, %CGEnumType.580501* %.9)
  ret void
}

; Function Attrs: nofree nounwind
define void @"Arraymain.flo_constructor"(%"Arraymain.flo.580529"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 1
  %0 = bitcast %string.580129*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Arraymain.flo_resize"(%"Arraymain.flo.580529"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 1
  %0 = bitcast %string.580129*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @"Arraymain.flo_swap"(%"Arraymain.flo.580529"* nocapture readonly %.1, i64 %.2, i64 %.3) #5 {
.5:
  %.11 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 1
  %.12 = load %string.580129**, %string.580129*** %.11, align 8
  %.13 = getelementptr inbounds %string.580129*, %string.580129** %.12, i64 %.2
  %0 = bitcast %string.580129** %.13 to i64*
  %.141 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds %string.580129*, %string.580129** %.12, i64 %.3
  %1 = bitcast %string.580129** %.24 to i64*
  %.252 = load i64, i64* %1, align 8
  store i64 %.252, i64* %0, align 8
  %.31 = load %string.580129**, %string.580129*** %.11, align 8
  %.33 = getelementptr inbounds %string.580129*, %string.580129** %.31, i64 %.3
  %2 = bitcast %string.580129** %.33 to i64*
  store i64 %.141, i64* %2, align 8
  ret void
}

define void @"Arraymain.flo___sl__"(%"Arraymain.flo.580529"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 0
  %.17 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.16, align 8
  %.18 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.17, i64 0, i32 0
  %.19 = load void (%"Arraymain.flo.580529"*)*, void (%"Arraymain.flo.580529"*)** %.18, align 8
  call void %.19(%"Arraymain.flo.580529"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 1
  %.31 = load %string.580129**, %string.580129*** %.30, align 8
  %.33 = getelementptr inbounds %string.580129*, %string.580129** %.31, i64 %.24
  store %string.580129* %.2, %string.580129** %.33, align 8
  ret void
}

define void @"Arraymain.flo___setitem__"(%"Arraymain.flo.580529"* nocapture readonly %.1, i64 %.2, %string.580129* %.3) {
.5:
  %.11 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.580131*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.580131* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 1
  %.30 = load %string.580129**, %string.580129*** %.29, align 8
  %.32 = getelementptr inbounds %string.580129*, %string.580129** %.30, i64 %.2
  store %string.580129* %.3, %string.580129** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Arraymain.flo_append"(%"Arraymain.flo.580529"* %.1, %string.580129* %.2) {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 0
  %.9 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.8, align 8
  %.10 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.9, i64 0, i32 2
  %.11 = load void (%"Arraymain.flo.580529"*, %string.580129*)*, void (%"Arraymain.flo.580529"*, %string.580129*)** %.10, align 8
  call void %.11(%"Arraymain.flo.580529"* %.1, %string.580129* %.2)
  ret void
}

define %string.580129* @"Arraymain.flo___getitem__"(%"Arraymain.flo.580529"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.580131*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.580132**
  store %Range_vtable_ty.580132* @Range_vtable_data, %Range_vtable_ty.580132** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.580131*, i64)*, i1 (%Range.580131*, i64)** getelementptr inbounds (%Range_vtable_ty.580132, %Range_vtable_ty.580132* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.580131* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 1
  %.28 = load %string.580129**, %string.580129*** %.27, align 8
  %.29 = getelementptr inbounds %string.580129*, %string.580129** %.28, i64 %.2
  %.30 = load %string.580129*, %string.580129** %.29, align 8
  ret %string.580129* %.30

.4.endif:                                         ; preds = %.4
  ret %string.580129* null
}

define i1 @"Arraymain.flo___eq__"(%"Arraymain.flo.580529"* %.1, %"Arraymain.flo.580529"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.27 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 0
  %.34 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.51, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.51, %for.cond ]
  %.28 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.27, align 8
  %.29 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.28, i64 0, i32 5
  %.30 = load %string.580129* (%"Arraymain.flo.580529"*, i64)*, %string.580129* (%"Arraymain.flo.580529"*, i64)** %.29, align 8
  %.31 = call %string.580129* %.30(%"Arraymain.flo.580529"* %.1, i64 %storemerge3)
  %.35 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.34, align 8
  %.36 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.35, i64 0, i32 5
  %.37 = load %string.580129* (%"Arraymain.flo.580529"*, i64)*, %string.580129* (%"Arraymain.flo.580529"*, i64)** %.36, align 8
  %.38 = call %string.580129* %.37(%"Arraymain.flo.580529"* %.2, i64 %storemerge3)
  %.39 = getelementptr inbounds %string.580129, %string.580129* %.31, i64 0, i32 0
  %.40 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.39, align 8
  %.41 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.40, i64 0, i32 3
  %.42 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.41, align 8
  %.43 = call i1 %.42(%string.580129* %.31, %string.580129* %.38)
  %.51 = add nuw nsw i64 %storemerge3, 1
  br i1 %.43, label %for.cond, label %.4.if
}

define i1 @"Arraymain.flo___in__"(%"Arraymain.flo.580529"* %.1, %string.580129* %.2) {
.4:
  %.12 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 0
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.cond ]
  %.19 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.18, align 8
  %.20 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.19, i64 0, i32 5
  %.21 = load %string.580129* (%"Arraymain.flo.580529"*, i64)*, %string.580129* (%"Arraymain.flo.580529"*, i64)** %.20, align 8
  %.22 = call %string.580129* %.21(%"Arraymain.flo.580529"* %.1, i64 %storemerge4)
  %.24 = getelementptr inbounds %string.580129, %string.580129* %.22, i64 0, i32 0
  %.25 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.24, align 8
  %.26 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.25, i64 0, i32 3
  %.27 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.26, align 8
  %.28 = call i1 %.27(%string.580129* %.22, %string.580129* %.2)
  %.35 = add nuw nsw i64 %storemerge4, 1
  br i1 %.28, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

define i64 @"Arraymain.flo_find"(%"Arraymain.flo.580529"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.12 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body.endif ]
  %.19 = load %string.580129**, %string.580129*** %.18, align 8
  %.20 = getelementptr inbounds %string.580129*, %string.580129** %.19, i64 %storemerge4
  %.21 = load %string.580129*, %string.580129** %.20, align 8
  %.23 = getelementptr inbounds %string.580129, %string.580129* %.21, i64 0, i32 0
  %.24 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.23, align 8
  %.25 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.24, i64 0, i32 3
  %.26 = load i1 (%string.580129*, %string.580129*)*, i1 (%string.580129*, %string.580129*)** %.25, align 8
  %.27 = call i1 %.26(%string.580129* %.21, %string.580129* %.2)
  br i1 %.27, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge4, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.580129* @"Arraymain.flo_join"(%"Arraymain.flo.580529"* nocapture readonly %.1, %string.580129* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.580129*
  %.282 = icmp sgt i64 %.21, 0
  %.33 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 1
  %.343 = load %string.580129**, %string.580129*** %.33, align 8
  %.364 = load %string.580129*, %string.580129** %.343, align 8
  br i1 %.282, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.43 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %.367 = phi %string.580129* [ %.364, %for.body.lr.ph ], [ %.36, %for.body ]
  %res.06 = phi %string.580129* [ %.8, %for.body.lr.ph ], [ %.67, %for.body ]
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.73, %for.body ]
  %.38 = getelementptr inbounds %string.580129, %string.580129* %.367, i64 0, i32 0
  %.39 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.39, i64 0, i32 10
  %.41 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.40, align 8
  %.42 = call i8* %.41(%string.580129* %.367)
  %.44 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.43, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.44, i64 0, i32 10
  %.46 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.45, align 8
  %.47 = call i8* %.46(%string.580129* %.2)
  %.49 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.42, i8* %.47)
  %.51 = call i8* @malloc(i64 %.49)
  %.52 = call i64 (i8*, i8*, ...) @sprintf(i8* %.51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.42, i8* %.47)
  %.53 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.54 = bitcast i8* %.53 to %string.580129*
  %.55 = bitcast i8* %.53 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.55, align 8
  %.57 = getelementptr inbounds i8, i8* %.53, i64 8
  %1 = bitcast i8* %.57 to i8**
  store i8* %.51, i8** %1, align 8
  %.59 = getelementptr inbounds i8, i8* %.53, i64 16
  %2 = bitcast i8* %.59 to i64*
  store i64 %.49, i64* %2, align 8
  %.61 = getelementptr inbounds i8, i8* %.53, i64 24
  %3 = bitcast i8* %.61 to i64*
  store i64 %.49, i64* %3, align 8
  %.63 = getelementptr inbounds %string.580129, %string.580129* %res.06, i64 0, i32 0
  %.64 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.63, align 8
  %.65 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.64, i64 0, i32 0
  %.66 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.65, align 8
  %.67 = call %string.580129* %.66(%string.580129* %res.06, %string.580129* %.54)
  %.73 = add nuw nsw i64 %storemerge5, 1
  %.34 = load %string.580129**, %string.580129*** %.33, align 8
  %.35 = getelementptr inbounds %string.580129*, %string.580129** %.34, i64 %.73
  %.36 = load %string.580129*, %string.580129** %.35, align 8
  %exitcond.not = icmp eq i64 %.73, %.21
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  %res.0.lcssa = phi %string.580129* [ %.8, %.4 ], [ %.67, %for.body ]
  %.36.lcssa = phi %string.580129* [ %.364, %.4 ], [ %.36, %for.body ]
  %.83 = getelementptr inbounds %string.580129, %string.580129* %res.0.lcssa, i64 0, i32 0
  %.84 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.83, align 8
  %.85 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.84, i64 0, i32 0
  %.86 = load %string.580129* (%string.580129*, %string.580129*)*, %string.580129* (%string.580129*, %string.580129*)** %.85, align 8
  %.87 = call %string.580129* %.86(%string.580129* %res.0.lcssa, %string.580129* %.36.lcssa)
  ret %string.580129* %.87
}

define noalias %string.580129* @"Arraymain.flo___as_string__"(%"Arraymain.flo.580529"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 0
  %.7 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.6, align 8
  %.8 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.7, i64 0, i32 9
  %.9 = load %string.580129* (%"Arraymain.flo.580529"*, %string.580129*)*, %string.580129* (%"Arraymain.flo.580529"*, %string.580129*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.580129*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.580129* %.9(%"Arraymain.flo.580529"* %.1, %string.580129* %.11)
  %.14 = getelementptr inbounds %string.580129, %string.580129* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.15, i64 0, i32 10
  %.17 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.16, align 8
  %.18 = call i8* %.17(%string.580129* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.21, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.580129*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.580129* %.25
}

define %"Arraymain.flo.580529"* @parse_args(i64 %.1, i8** nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %"Arraymain.flo.580529"*
  %.12 = bitcast i8* %.10 to %"Arraymain.flo_vtable_ty.580530"**
  store %"Arraymain.flo_vtable_ty.580530"* @"Arraymain.flo_vtable_data", %"Arraymain.flo_vtable_ty.580530"** %.12, align 8
  %.14 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.14 to i8**
  store i8* %.8, i8** %0, align 8
  %.16 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.16 to i64*
  store i64 0, i64* %1, align 8
  %.18 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.18 to i64*
  store i64 8, i64* %2, align 8
  %.262 = icmp sgt i64 %.1, 0
  br i1 %.262, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %storemerge3 = phi i64 [ %.43, %for.body ], [ 0, %.4 ]
  %.31 = getelementptr inbounds i8*, i8** %.2, i64 %storemerge3
  %.32 = load i8*, i8** %.31, align 8
  %.33 = call %string.580129* @string_from_cstring(i8* %.32)
  %.35 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.12, align 8
  %.36 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.35, i64 0, i32 2
  %.37 = load void (%"Arraymain.flo.580529"*, %string.580129*)*, void (%"Arraymain.flo.580529"*, %string.580129*)** %.36, align 8
  call void %.37(%"Arraymain.flo.580529"* %.11, %string.580129* %.33)
  %.43 = add nuw nsw i64 %storemerge3, 1
  %exitcond.not = icmp eq i64 %.43, %.1
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  ret %"Arraymain.flo.580529"* %.11
}

define void @help(%string.580129* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.580129, %string.580129* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.7, i64 0, i32 10
  %.9 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.8, align 8
  %.10 = call i8* %.9(%string.580129* %.1)
  %.12 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.400, i64 0, i64 0), i8* %.10)
  %.14 = call i8* @malloc(i64 %.12)
  %.15 = call i64 (i8*, i8*, ...) @sprintf(i8* %.14, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.400, i64 0, i64 0), i8* %.10)
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %string.580129*
  %.18 = bitcast i8* %.16 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.18, align 8
  %.20 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.20 to i8**
  store i8* %.14, i8** %0, align 8
  %.22 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.22 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.24 to i64*
  store i64 %.12, i64* %2, align 8
  %.29 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.30 = call i8* %.29(%string.580129* %.17)
  %.31 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.32 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.32 to %string.580129*
  %.33.repack = bitcast i8* %.32 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.33.repack, align 8
  %.33.repack1 = getelementptr inbounds i8, i8* %.32, i64 8
  %3 = bitcast i8* %.33.repack1 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.401, i64 0, i64 0), i8** %3, align 8
  %.33.repack2 = getelementptr inbounds i8, i8* %.32, i64 16
  %4 = bitcast i8* %.33.repack2 to i64*
  store i64 8, i64* %4, align 8
  %.33.repack3 = getelementptr inbounds i8, i8* %.32, i64 24
  %5 = bitcast i8* %.33.repack3 to i64*
  store i64 8, i64* %5, align 8
  %.38 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.39 = call i8* %.38(%string.580129* %.33)
  %.40 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %string.580129*
  %.42.repack = bitcast i8* %.41 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.42.repack, align 8
  %.42.repack4 = getelementptr inbounds i8, i8* %.41, i64 8
  %6 = bitcast i8* %.42.repack4 to i8**
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.402, i64 0, i64 0), i8** %6, align 8
  %.42.repack5 = getelementptr inbounds i8, i8* %.41, i64 16
  %7 = bitcast i8* %.42.repack5 to i64*
  store i64 37, i64* %7, align 8
  %.42.repack6 = getelementptr inbounds i8, i8* %.41, i64 24
  %8 = bitcast i8* %.42.repack6 to i64*
  store i64 37, i64* %8, align 8
  %.47 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.48 = call i8* %.47(%string.580129* %.42)
  %.49 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.580129*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.51.repack, align 8
  %.51.repack7 = getelementptr inbounds i8, i8* %.50, i64 8
  %9 = bitcast i8* %.51.repack7 to i8**
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.403, i64 0, i64 0), i8** %9, align 8
  %.51.repack8 = getelementptr inbounds i8, i8* %.50, i64 16
  %10 = bitcast i8* %.51.repack8 to i64*
  store i64 40, i64* %10, align 8
  %.51.repack9 = getelementptr inbounds i8, i8* %.50, i64 24
  %11 = bitcast i8* %.51.repack9 to i64*
  store i64 40, i64* %11, align 8
  %.56 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.57 = call i8* %.56(%string.580129* %.51)
  %.58 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.59 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.60 = bitcast i8* %.59 to %string.580129*
  %.60.repack = bitcast i8* %.59 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.60.repack, align 8
  %.60.repack10 = getelementptr inbounds i8, i8* %.59, i64 8
  %12 = bitcast i8* %.60.repack10 to i8**
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.404, i64 0, i64 0), i8** %12, align 8
  %.60.repack11 = getelementptr inbounds i8, i8* %.59, i64 16
  %13 = bitcast i8* %.60.repack11 to i64*
  store i64 35, i64* %13, align 8
  %.60.repack12 = getelementptr inbounds i8, i8* %.59, i64 24
  %14 = bitcast i8* %.60.repack12 to i64*
  store i64 35, i64* %14, align 8
  %.65 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.66 = call i8* %.65(%string.580129* %.60)
  %.67 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.68 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.69 = bitcast i8* %.68 to %string.580129*
  %.69.repack = bitcast i8* %.68 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.69.repack, align 8
  %.69.repack13 = getelementptr inbounds i8, i8* %.68, i64 8
  %15 = bitcast i8* %.69.repack13 to i8**
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.405, i64 0, i64 0), i8** %15, align 8
  %.69.repack14 = getelementptr inbounds i8, i8* %.68, i64 16
  %16 = bitcast i8* %.69.repack14 to i64*
  store i64 40, i64* %16, align 8
  %.69.repack15 = getelementptr inbounds i8, i8* %.68, i64 24
  %17 = bitcast i8* %.69.repack15 to i64*
  store i64 40, i64* %17, align 8
  %.74 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.75 = call i8* %.74(%string.580129* %.69)
  %.76 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.75, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.77 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.78 = bitcast i8* %.77 to %string.580129*
  %.78.repack = bitcast i8* %.77 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.78.repack, align 8
  %.78.repack16 = getelementptr inbounds i8, i8* %.77, i64 8
  %18 = bitcast i8* %.78.repack16 to i8**
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @str.406, i64 0, i64 0), i8** %18, align 8
  %.78.repack17 = getelementptr inbounds i8, i8* %.77, i64 16
  %19 = bitcast i8* %.78.repack17 to i64*
  store i64 42, i64* %19, align 8
  %.78.repack18 = getelementptr inbounds i8, i8* %.77, i64 24
  %20 = bitcast i8* %.78.repack18 to i64*
  store i64 42, i64* %20, align 8
  %.83 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.84 = call i8* %.83(%string.580129* %.78)
  %.85 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.84, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.86 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.87 = bitcast i8* %.86 to %string.580129*
  %.87.repack = bitcast i8* %.86 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.87.repack, align 8
  %.87.repack19 = getelementptr inbounds i8, i8* %.86, i64 8
  %21 = bitcast i8* %.87.repack19 to i8**
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.407, i64 0, i64 0), i8** %21, align 8
  %.87.repack20 = getelementptr inbounds i8, i8* %.86, i64 16
  %22 = bitcast i8* %.87.repack20 to i64*
  store i64 38, i64* %22, align 8
  %.87.repack21 = getelementptr inbounds i8, i8* %.86, i64 24
  %23 = bitcast i8* %.87.repack21 to i64*
  store i64 38, i64* %23, align 8
  %.92 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.93 = call i8* %.92(%string.580129* %.87)
  %.94 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.95 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.96 = bitcast i8* %.95 to %string.580129*
  %.96.repack = bitcast i8* %.95 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.96.repack, align 8
  %.96.repack22 = getelementptr inbounds i8, i8* %.95, i64 8
  %24 = bitcast i8* %.96.repack22 to i8**
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.408, i64 0, i64 0), i8** %24, align 8
  %.96.repack23 = getelementptr inbounds i8, i8* %.95, i64 16
  %25 = bitcast i8* %.96.repack23 to i64*
  store i64 46, i64* %25, align 8
  %.96.repack24 = getelementptr inbounds i8, i8* %.95, i64 24
  %26 = bitcast i8* %.96.repack24 to i64*
  store i64 46, i64* %26, align 8
  %.101 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.102 = call i8* %.101(%string.580129* %.96)
  %.103 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.102, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.104 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.105 = bitcast i8* %.104 to %string.580129*
  %.105.repack = bitcast i8* %.104 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.105.repack, align 8
  %.105.repack25 = getelementptr inbounds i8, i8* %.104, i64 8
  %27 = bitcast i8* %.105.repack25 to i8**
  store i8* getelementptr inbounds ([93 x i8], [93 x i8]* @str.409, i64 0, i64 0), i8** %27, align 8
  %.105.repack26 = getelementptr inbounds i8, i8* %.104, i64 16
  %28 = bitcast i8* %.105.repack26 to i64*
  store i64 92, i64* %28, align 8
  %.105.repack27 = getelementptr inbounds i8, i8* %.104, i64 24
  %29 = bitcast i8* %.105.repack27 to i64*
  store i64 92, i64* %29, align 8
  %.110 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.111 = call i8* %.110(%string.580129* %.105)
  %.112 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.111, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.580129*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.114.repack, align 8
  %.114.repack28 = getelementptr inbounds i8, i8* %.113, i64 8
  %30 = bitcast i8* %.114.repack28 to i8**
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.410, i64 0, i64 0), i8** %30, align 8
  %.114.repack29 = getelementptr inbounds i8, i8* %.113, i64 16
  %31 = bitcast i8* %.114.repack29 to i64*
  store i64 46, i64* %31, align 8
  %.114.repack30 = getelementptr inbounds i8, i8* %.113, i64 24
  %32 = bitcast i8* %.114.repack30 to i64*
  store i64 46, i64* %32, align 8
  %.119 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.120 = call i8* %.119(%string.580129* %.114)
  %.121 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  %.122 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.123 = bitcast i8* %.122 to %string.580129*
  %.123.repack = bitcast i8* %.122 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.123.repack, align 8
  %.123.repack31 = getelementptr inbounds i8, i8* %.122, i64 8
  %33 = bitcast i8* %.123.repack31 to i8**
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @str.411, i64 0, i64 0), i8** %33, align 8
  %.123.repack32 = getelementptr inbounds i8, i8* %.122, i64 16
  %34 = bitcast i8* %.123.repack32 to i64*
  store i64 30, i64* %34, align 8
  %.123.repack33 = getelementptr inbounds i8, i8* %.122, i64 24
  %35 = bitcast i8* %.123.repack33 to i64*
  store i64 30, i64* %35, align 8
  %.128 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.129 = call i8* %.128(%string.580129* %.123)
  %.130 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  ret void
}

define i1 @flag(%"Arraymain.flo.580529"* %.1, %string.580129* %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 0
  %.10 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.9, align 8
  %.11 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.10, i64 0, i32 7
  %.12 = load i1 (%"Arraymain.flo.580529"*, %string.580129*)*, i1 (%"Arraymain.flo.580529"*, %string.580129*)** %.11, align 8
  %.13 = call i1 %.12(%"Arraymain.flo.580529"* %.1, %string.580129* %.2)
  ret i1 %.13
}

define %string.580129* @flag_value_or(%"Arraymain.flo.580529"* %.1, %string.580129* %.2, %string.580129* readnone %.3) local_unnamed_addr {
.5:
  %.10 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 0
  %.11 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.10, align 8
  %.12 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.11, i64 0, i32 8
  %.13 = load i64 (%"Arraymain.flo.580529"*, %string.580129*)*, i64 (%"Arraymain.flo.580529"*, %string.580129*)** %.12, align 8
  %.15 = call i64 %.13(%"Arraymain.flo.580529"* %.1, %string.580129* %.2)
  %.19.not = icmp eq i64 %.15, -1
  br i1 %.19.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.22 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.1, i64 0, i32 2
  %.23 = load i64, i64* %.22, align 8
  %.25 = add i64 %.15, 1
  %.29 = icmp sgt i64 %.23, %.25
  br i1 %.29, label %.5.if.if, label %.5.if.else

.5.endif:                                         ; preds = %.5, %.5.if.else
  ret %string.580129* %.3

.5.if.if:                                         ; preds = %.5.if
  %.34 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.10, align 8
  %.35 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.34, i64 0, i32 5
  %.36 = load %string.580129* (%"Arraymain.flo.580529"*, i64)*, %string.580129* (%"Arraymain.flo.580529"*, i64)** %.35, align 8
  %.37 = call %string.580129* %.36(%"Arraymain.flo.580529"* %.1, i64 %.25)
  ret %string.580129* %.37

.5.if.else:                                       ; preds = %.5.if
  %.40 = getelementptr inbounds %string.580129, %string.580129* %.2, i64 0, i32 0
  %.41 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.40, align 8
  %.42 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.41, i64 0, i32 10
  %.43 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.42, align 8
  %.44 = call i8* %.43(%string.580129* %.2)
  %.46 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.412, i64 0, i64 0), i8* %.44)
  %.48 = call i8* @malloc(i64 %.46)
  %.49 = call i64 (i8*, i8*, ...) @sprintf(i8* %.48, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.412, i64 0, i64 0), i8* %.44)
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.580129*
  %.52 = bitcast i8* %.50 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.52, align 8
  %.54 = getelementptr inbounds i8, i8* %.50, i64 8
  %0 = bitcast i8* %.54 to i8**
  store i8* %.48, i8** %0, align 8
  %.56 = getelementptr inbounds i8, i8* %.50, i64 16
  %1 = bitcast i8* %.56 to i64*
  store i64 %.46, i64* %1, align 8
  %.58 = getelementptr inbounds i8, i8* %.50, i64 24
  %2 = bitcast i8* %.58 to i64*
  store i64 %.46, i64* %2, align 8
  call void @print_message_error(i64 4, %string.580129* %.51)
  br label %.5.endif
}

define i64 @main(i64 %.1, i8** nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = call %"Arraymain.flo.580529"* @parse_args(i64 %.1, i8** %.2)
  %.12 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.9, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp sgt i64 %.13, 1
  br i1 %.14, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.17 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.21 = bitcast i8* %.19 to %"Array<FloError>_vtable_ty.580140"**
  store %"Array<FloError>_vtable_ty.580140"* @"Array<FloError>_vtable_data", %"Array<FloError>_vtable_ty.580140"** %.21, align 8
  %.23 = getelementptr inbounds i8, i8* %.19, i64 8
  %0 = bitcast i8* %.23 to i8**
  store i8* %.17, i8** %0, align 8
  %.25 = getelementptr inbounds i8, i8* %.19, i64 16
  %1 = bitcast i8* %.25 to i64*
  store i64 0, i64* %1, align 8
  %.27 = getelementptr inbounds i8, i8* %.19, i64 24
  %2 = bitcast i8* %.27 to i64*
  store i64 8, i64* %2, align 8
  %errors = alloca %"Array<FloError>.580139"*, align 8
  %3 = bitcast %"Array<FloError>.580139"** %errors to i8**
  store i8* %.19, i8** %3, align 8
  %.31 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.32 = bitcast i8* %.31 to %string.580129*
  %.32.repack = bitcast i8* %.31 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.32.repack, align 8
  %.32.repack4 = getelementptr inbounds i8, i8* %.31, i64 8
  %4 = bitcast i8* %.32.repack4 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.413, i64 0, i64 0), i8** %4, align 8
  %.32.repack5 = getelementptr inbounds i8, i8* %.31, i64 16
  %5 = bitcast i8* %.32.repack5 to i64*
  store i64 2, i64* %5, align 8
  %.32.repack6 = getelementptr inbounds i8, i8* %.31, i64 24
  %6 = bitcast i8* %.32.repack6 to i64*
  store i64 2, i64* %6, align 8
  %.34 = call i1 @flag(%"Arraymain.flo.580529"* %.9, %string.580129* %.32)
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.580129*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.37.repack, align 8
  %.37.repack7 = getelementptr inbounds i8, i8* %.36, i64 8
  %7 = bitcast i8* %.37.repack7 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.414, i64 0, i64 0), i8** %7, align 8
  %.37.repack8 = getelementptr inbounds i8, i8* %.36, i64 16
  %8 = bitcast i8* %.37.repack8 to i64*
  store i64 9, i64* %8, align 8
  %.37.repack9 = getelementptr inbounds i8, i8* %.36, i64 24
  %9 = bitcast i8* %.37.repack9 to i64*
  store i64 9, i64* %9, align 8
  %.39 = call i1 @flag(%"Arraymain.flo.580529"* %.9, %string.580129* %.37)
  %.40 = or i1 %.34, %.39
  %.42 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.42 to %string.580129*
  %.43.repack = bitcast i8* %.42 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.43.repack, align 8
  %.43.repack46 = getelementptr inbounds i8, i8* %.42, i64 8
  %10 = bitcast i8* %.43.repack46 to i8**
  br i1 %.40, label %.4.if.if, label %.4.if.endif

.4.else:                                          ; preds = %.4
  %.355 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.356 = bitcast i8* %.355 to %string.580129*
  %.356.repack = bitcast i8* %.355 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.356.repack, align 8
  %.356.repack1 = getelementptr inbounds i8, i8* %.355, i64 8
  %11 = bitcast i8* %.356.repack1 to i8**
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.429, i64 0, i64 0), i8** %11, align 8
  %.356.repack2 = getelementptr inbounds i8, i8* %.355, i64 16
  %12 = bitcast i8* %.356.repack2 to i64*
  store i64 24, i64* %12, align 8
  %.356.repack3 = getelementptr inbounds i8, i8* %.355, i64 24
  %13 = bitcast i8* %.356.repack3 to i64*
  store i64 24, i64* %13, align 8
  call void @print_message_error(i64 4, %string.580129* %.356)
  ret i64 1

.4.if.if:                                         ; preds = %.4.if
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.415, i64 0, i64 0), i8** %10, align 8
  %.43.repack47 = getelementptr inbounds i8, i8* %.42, i64 16
  %14 = bitcast i8* %.43.repack47 to i64*
  store i64 19, i64* %14, align 8
  %.43.repack48 = getelementptr inbounds i8, i8* %.42, i64 24
  %15 = bitcast i8* %.43.repack48 to i64*
  store i64 19, i64* %15, align 8
  %.48 = load i8* (%string.580129*)*, i8* (%string.580129*)** getelementptr inbounds (%string_vtable_ty.580130, %string_vtable_ty.580130* @string_vtable_data, i64 0, i32 10), align 16
  %.49 = call i8* %.48(%string.580129* %.43)
  %.50 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str.9, i64 0, i64 0), i8* %.49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0))
  ret i64 0

.4.if.endif:                                      ; preds = %.4.if
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.416, i64 0, i64 0), i8** %10, align 8
  %.54.repack11 = getelementptr inbounds i8, i8* %.42, i64 16
  %16 = bitcast i8* %.54.repack11 to i64*
  store i64 2, i64* %16, align 8
  %.54.repack12 = getelementptr inbounds i8, i8* %.42, i64 24
  %17 = bitcast i8* %.54.repack12 to i64*
  store i64 2, i64* %17, align 8
  %.56 = call i1 @flag(%"Arraymain.flo.580529"* %.9, %string.580129* %.43)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.580129*
  %.59.repack = bitcast i8* %.58 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.59.repack, align 8
  %.59.repack13 = getelementptr inbounds i8, i8* %.58, i64 8
  %18 = bitcast i8* %.59.repack13 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.417, i64 0, i64 0), i8** %18, align 8
  %.59.repack14 = getelementptr inbounds i8, i8* %.58, i64 16
  %19 = bitcast i8* %.59.repack14 to i64*
  store i64 6, i64* %19, align 8
  %.59.repack15 = getelementptr inbounds i8, i8* %.58, i64 24
  %20 = bitcast i8* %.59.repack15 to i64*
  store i64 6, i64* %20, align 8
  %.61 = call i1 @flag(%"Arraymain.flo.580529"* %.9, %string.580129* %.59)
  %.62 = or i1 %.56, %.61
  %.65 = getelementptr inbounds %"Arraymain.flo.580529", %"Arraymain.flo.580529"* %.9, i64 0, i32 0
  %.66 = load %"Arraymain.flo_vtable_ty.580530"*, %"Arraymain.flo_vtable_ty.580530"** %.65, align 8
  %.67 = getelementptr inbounds %"Arraymain.flo_vtable_ty.580530", %"Arraymain.flo_vtable_ty.580530"* %.66, i64 0, i32 5
  %.68 = load %string.580129* (%"Arraymain.flo.580529"*, i64)*, %string.580129* (%"Arraymain.flo.580529"*, i64)** %.67, align 8
  br i1 %.62, label %.4.if.endif.if, label %.4.if.endif.endif

.4.if.endif.if:                                   ; preds = %.4.if.endif
  %.69 = call %string.580129* %.68(%"Arraymain.flo.580529"* %.9, i64 0)
  call void @help(%string.580129* %.69)
  ret i64 0

.4.if.endif.endif:                                ; preds = %.4.if.endif
  %.77 = call %string.580129* %.68(%"Arraymain.flo.580529"* %.9, i64 1)
  %.80 = call i1 @File_exists(%string.580129* %.77)
  br i1 %.80, label %.4.if.endif.endif.endif, label %.4.if.endif.endif.if

.4.if.endif.endif.if:                             ; preds = %.4.if.endif.endif
  %.84 = getelementptr inbounds %string.580129, %string.580129* %.77, i64 0, i32 0
  %.85 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.84, align 8
  %.86 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.85, i64 0, i32 10
  %.87 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.86, align 8
  %.88 = call i8* %.87(%string.580129* %.77)
  %.90 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.418, i64 0, i64 0), i8* %.88)
  %.92 = call i8* @malloc(i64 %.90)
  %.93 = call i64 (i8*, i8*, ...) @sprintf(i8* %.92, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.418, i64 0, i64 0), i8* %.88)
  %.94 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.95 = bitcast i8* %.94 to %string.580129*
  %.96 = bitcast i8* %.94 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.96, align 8
  %.98 = getelementptr inbounds i8, i8* %.94, i64 8
  %21 = bitcast i8* %.98 to i8**
  store i8* %.92, i8** %21, align 8
  %.100 = getelementptr inbounds i8, i8* %.94, i64 16
  %22 = bitcast i8* %.100 to i64*
  store i64 %.90, i64* %22, align 8
  %.102 = getelementptr inbounds i8, i8* %.94, i64 24
  %23 = bitcast i8* %.102 to i64*
  store i64 %.90, i64* %23, align 8
  call void @print_message_error(i64 3, %string.580129* %.95)
  ret i64 1

.4.if.endif.endif.endif:                          ; preds = %.4.if.endif.endif
  %.107 = call %File.580133* @File_open_for_reading(%string.580129* %.77)
  %file = alloca %File.580133*, align 8
  store %File.580133* %.107, %File.580133** %file, align 8
  %.110 = getelementptr inbounds %File.580133, %File.580133* %.107, i64 0, i32 0
  %.111 = load %File_vtable_ty.580134*, %File_vtable_ty.580134** %.110, align 8
  %.112 = getelementptr inbounds %File_vtable_ty.580134, %File_vtable_ty.580134* %.111, i64 0, i32 0
  %.113 = load %string.580129* (%File.580133*)*, %string.580129* (%File.580133*)** %.112, align 8
  %.114 = call %string.580129* %.113(%File.580133* %.107)
  %.117 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.118 = bitcast i8* %.117 to %Lexer.580157*
  %.119 = bitcast i8* %.117 to %Lexer_vtable_ty.580158**
  store %Lexer_vtable_ty.580158* @Lexer_vtable_data, %Lexer_vtable_ty.580158** %.119, align 8
  call void @Lexer_constructor(%Lexer.580157* %.118)
  %.125 = load %Lexer_vtable_ty.580158*, %Lexer_vtable_ty.580158** %.119, align 8
  %.126 = getelementptr inbounds %Lexer_vtable_ty.580158, %Lexer_vtable_ty.580158* %.125, i64 0, i32 22
  %.127 = load %"Array<Token>.580152"* (%Lexer.580157*, %string.580129*, %"Array<FloError>.580139"*)*, %"Array<Token>.580152"* (%Lexer.580157*, %string.580129*, %"Array<FloError>.580139"*)** %.126, align 8
  %.129 = load %"Array<FloError>.580139"*, %"Array<FloError>.580139"** %errors, align 8
  %.130 = call %"Array<Token>.580152"* %.127(%Lexer.580157* %.118, %string.580129* %.114, %"Array<FloError>.580139"* %.129)
  %.133 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.129, i64 0, i32 2
  %.134 = load i64, i64* %.133, align 8
  %.135 = icmp sgt i64 %.134, 0
  br i1 %.135, label %.4.if.endif.endif.endif.if, label %.4.if.endif.endif.endif.endif

.4.if.endif.endif.endif.if:                       ; preds = %.4.if.endif.endif.endif
  %.138 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.129, i64 0, i32 0
  %.139 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.138, align 8
  %.140 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.139, i64 0, i32 5
  %.141 = load %FloError.580137* (%"Array<FloError>.580139"*, i64)*, %FloError.580137* (%"Array<FloError>.580139"*, i64)** %.140, align 8
  %.142 = call %FloError.580137* %.141(%"Array<FloError>.580139"* %.129, i64 0)
  call void @print_error(%FloError.580137* %.142, %string.580129* %.77, %string.580129* %.114)
  %.148 = load %File_vtable_ty.580134*, %File_vtable_ty.580134** %.110, align 8
  %.149 = getelementptr inbounds %File_vtable_ty.580134, %File_vtable_ty.580134* %.148, i64 0, i32 1
  %.150 = load void (%File.580133*)*, void (%File.580133*)** %.149, align 8
  call void %.150(%File.580133* %.107)
  ret i64 1

.4.if.endif.endif.endif.endif:                    ; preds = %.4.if.endif.endif.endif
  %.154 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.155 = bitcast i8* %.154 to %string.580129*
  %.155.repack = bitcast i8* %.154 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.155.repack, align 8
  %.155.repack16 = getelementptr inbounds i8, i8* %.154, i64 8
  %24 = bitcast i8* %.155.repack16 to i8**
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.419, i64 0, i64 0), i8** %24, align 8
  %.155.repack17 = getelementptr inbounds i8, i8* %.154, i64 16
  %25 = bitcast i8* %.155.repack17 to i64*
  store i64 14, i64* %25, align 8
  %.155.repack18 = getelementptr inbounds i8, i8* %.154, i64 24
  %26 = bitcast i8* %.155.repack18 to i64*
  store i64 14, i64* %26, align 8
  %.157 = call i1 @flag(%"Arraymain.flo.580529"* %.9, %string.580129* %.155)
  br i1 %.157, label %.4.if.endif.endif.endif.endif.if, label %.4.if.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.if:                 ; preds = %.4.if.endif.endif.endif.endif
  call void @print_tokens(%"Array<Token>.580152"* %.130, %string.580129* %.114)
  br label %.4.if.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif:              ; preds = %.4.if.endif.endif.endif.endif.if, %.4.if.endif.endif.endif.endif
  %.164 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.165 = bitcast i8* %.164 to %Parser.580271*
  %.166 = bitcast i8* %.164 to %Parser_vtable_ty.580272**
  store %Parser_vtable_ty.580272* @Parser_vtable_data, %Parser_vtable_ty.580272** %.166, align 8
  call void @Parser_constructor(%Parser.580271* %.165)
  %.172 = load %Parser_vtable_ty.580272*, %Parser_vtable_ty.580272** %.166, align 8
  %.173 = getelementptr inbounds %Parser_vtable_ty.580272, %Parser_vtable_ty.580272* %.172, i64 0, i32 56
  %.174 = load %ModuleAST.580255* (%Parser.580271*, %"Array<Token>.580152"*, %"Array<FloError>.580139"*)*, %ModuleAST.580255* (%Parser.580271*, %"Array<Token>.580152"*, %"Array<FloError>.580139"*)** %.173, align 8
  %.177 = call %ModuleAST.580255* %.174(%Parser.580271* %.165, %"Array<Token>.580152"* %.130, %"Array<FloError>.580139"* %.129)
  %.181 = load i64, i64* %.133, align 8
  %.182 = icmp sgt i64 %.181, 0
  br i1 %.182, label %.4.if.endif.endif.endif.endif.endif.if, label %.4.if.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.if:           ; preds = %.4.if.endif.endif.endif.endif.endif
  %.185 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.129, i64 0, i32 0
  %.186 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.185, align 8
  %.187 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.186, i64 0, i32 5
  %.188 = load %FloError.580137* (%"Array<FloError>.580139"*, i64)*, %FloError.580137* (%"Array<FloError>.580139"*, i64)** %.187, align 8
  %.189 = call %FloError.580137* %.188(%"Array<FloError>.580139"* %.129, i64 0)
  call void @print_error(%FloError.580137* %.189, %string.580129* %.77, %string.580129* %.114)
  %.195 = load %File_vtable_ty.580134*, %File_vtable_ty.580134** %.110, align 8
  %.196 = getelementptr inbounds %File_vtable_ty.580134, %File_vtable_ty.580134* %.195, i64 0, i32 1
  %.197 = load void (%File.580133*)*, void (%File.580133*)** %.196, align 8
  call void %.197(%File.580133* %.107)
  ret i64 1

.4.if.endif.endif.endif.endif.endif.endif:        ; preds = %.4.if.endif.endif.endif.endif.endif
  %.201 = call dereferenceable_or_null(80) i8* @malloc(i64 80)
  %.202 = bitcast i8* %.201 to %TypeChecker.580449*
  %.203 = bitcast i8* %.201 to %TypeChecker_vtable_ty.580450**
  store %TypeChecker_vtable_ty.580450* @TypeChecker_vtable_data, %TypeChecker_vtable_ty.580450** %.203, align 8
  call void @TypeChecker_constructor(%TypeChecker.580449* %.202)
  %.209 = load %TypeChecker_vtable_ty.580450*, %TypeChecker_vtable_ty.580450** %.203, align 8
  %.210 = getelementptr inbounds %TypeChecker_vtable_ty.580450, %TypeChecker_vtable_ty.580450* %.209, i64 0, i32 18
  %.211 = load %Program.580445* (%TypeChecker.580449*, %ModuleAST.580255*, %string.580129*, %"Array<FloError>.580139"*)*, %Program.580445* (%TypeChecker.580449*, %ModuleAST.580255*, %string.580129*, %"Array<FloError>.580139"*)** %.210, align 8
  %.215 = call %Program.580445* %.211(%TypeChecker.580449* %.202, %ModuleAST.580255* %.177, %string.580129* %.77, %"Array<FloError>.580139"* %.129)
  %.219 = load i64, i64* %.133, align 8
  %.220 = icmp sgt i64 %.219, 0
  br i1 %.220, label %.4.if.endif.endif.endif.endif.endif.endif.if, label %.4.if.endif.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.endif.if:     ; preds = %.4.if.endif.endif.endif.endif.endif.endif
  %.223 = getelementptr inbounds %"Array<FloError>.580139", %"Array<FloError>.580139"* %.129, i64 0, i32 0
  %.224 = load %"Array<FloError>_vtable_ty.580140"*, %"Array<FloError>_vtable_ty.580140"** %.223, align 8
  %.225 = getelementptr inbounds %"Array<FloError>_vtable_ty.580140", %"Array<FloError>_vtable_ty.580140"* %.224, i64 0, i32 5
  %.226 = load %FloError.580137* (%"Array<FloError>.580139"*, i64)*, %FloError.580137* (%"Array<FloError>.580139"*, i64)** %.225, align 8
  %.227 = call %FloError.580137* %.226(%"Array<FloError>.580139"* %.129, i64 0)
  call void @print_error(%FloError.580137* %.227, %string.580129* %.77, %string.580129* %.114)
  %.233 = load %File_vtable_ty.580134*, %File_vtable_ty.580134** %.110, align 8
  %.234 = getelementptr inbounds %File_vtable_ty.580134, %File_vtable_ty.580134* %.233, i64 0, i32 1
  %.235 = load void (%File.580133*)*, void (%File.580133*)** %.234, align 8
  call void %.235(%File.580133* %.107)
  ret i64 1

.4.if.endif.endif.endif.endif.endif.endif.endif:  ; preds = %.4.if.endif.endif.endif.endif.endif.endif
  %.239 = call dereferenceable_or_null(120) i8* @malloc(i64 120)
  %.241 = bitcast i8* %.239 to %CodeGen_vtable_ty.580508**
  store %CodeGen_vtable_ty.580508* @CodeGen_vtable_data, %CodeGen_vtable_ty.580508** %.241, align 8
  %.244.cast = bitcast i8* %.239 to %CodeGen.580507*
  %.248 = load %GeneratedModule.580483* (%CodeGen.580507*, %Program.580445*)*, %GeneratedModule.580483* (%CodeGen.580507*, %Program.580445*)** getelementptr inbounds (%CodeGen_vtable_ty.580508, %CodeGen_vtable_ty.580508* @CodeGen_vtable_data, i64 0, i32 0), align 16
  %.250 = call %GeneratedModule.580483* %.248(%CodeGen.580507* %.244.cast, %Program.580445* %.215)
  %flo_module = alloca %GeneratedModule.580483*, align 8
  store %GeneratedModule.580483* %.250, %GeneratedModule.580483** %flo_module, align 8
  %.253 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.250, i64 0, i32 0
  %.254 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.253, align 8
  %.255 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.254, i64 0, i32 1
  %.256 = load void (%GeneratedModule.580483*, i64)*, void (%GeneratedModule.580483*, i64)** %.255, align 8
  %.258 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.259 = bitcast i8* %.258 to %string.580129*
  %.259.repack = bitcast i8* %.258 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.259.repack, align 8
  %.259.repack19 = getelementptr inbounds i8, i8* %.258, i64 8
  %27 = bitcast i8* %.259.repack19 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.420, i64 0, i64 0), i8** %27, align 8
  %.259.repack20 = getelementptr inbounds i8, i8* %.258, i64 16
  %28 = bitcast i8* %.259.repack20 to i64*
  store i64 2, i64* %28, align 8
  %.259.repack21 = getelementptr inbounds i8, i8* %.258, i64 24
  %29 = bitcast i8* %.259.repack21 to i64*
  store i64 2, i64* %29, align 8
  %.261 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.262 = bitcast i8* %.261 to %string.580129*
  %.262.repack = bitcast i8* %.261 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.262.repack, align 8
  %.262.repack22 = getelementptr inbounds i8, i8* %.261, i64 8
  %30 = bitcast i8* %.262.repack22 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.421, i64 0, i64 0), i8** %30, align 8
  %.262.repack23 = getelementptr inbounds i8, i8* %.261, i64 16
  %31 = bitcast i8* %.262.repack23 to i64*
  store i64 1, i64* %31, align 8
  %.262.repack24 = getelementptr inbounds i8, i8* %.261, i64 24
  %32 = bitcast i8* %.262.repack24 to i64*
  store i64 1, i64* %32, align 8
  %.264 = call %string.580129* @flag_value_or(%"Arraymain.flo.580529"* %.9, %string.580129* %.259, %string.580129* %.262)
  %.265 = getelementptr inbounds %string.580129, %string.580129* %.264, i64 0, i32 0
  %.266 = load %string_vtable_ty.580130*, %string_vtable_ty.580130** %.265, align 8
  %.267 = getelementptr inbounds %string_vtable_ty.580130, %string_vtable_ty.580130* %.266, i64 0, i32 10
  %.268 = load i8* (%string.580129*)*, i8* (%string.580129*)** %.267, align 8
  %.269 = call i8* %.268(%string.580129* %.264)
  %.270 = call i32 @atoi(i8* %.269)
  %.271 = zext i32 %.270 to i64
  call void %.256(%GeneratedModule.580483* %.250, i64 %.271)
  %.274 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.275 = bitcast i8* %.274 to %string.580129*
  %.275.repack = bitcast i8* %.274 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.275.repack, align 8
  %.275.repack25 = getelementptr inbounds i8, i8* %.274, i64 8
  %33 = bitcast i8* %.275.repack25 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.422, i64 0, i64 0), i8** %33, align 8
  %.275.repack26 = getelementptr inbounds i8, i8* %.274, i64 16
  %34 = bitcast i8* %.275.repack26 to i64*
  store i64 12, i64* %34, align 8
  %.275.repack27 = getelementptr inbounds i8, i8* %.274, i64 24
  %35 = bitcast i8* %.275.repack27 to i64*
  store i64 12, i64* %35, align 8
  %.277 = call i1 @flag(%"Arraymain.flo.580529"* %.9, %string.580129* %.275)
  br i1 %.277, label %.4.if.endif.endif.endif.endif.endif.endif.endif.if, label %.4.if.endif.endif.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif
  %.281 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.253, align 8
  %.282 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.281, i64 0, i32 5
  %.283 = load void (%GeneratedModule.580483*)*, void (%GeneratedModule.580483*)** %.282, align 8
  call void %.283(%GeneratedModule.580483* %.250)
  br label %.4.if.endif.endif.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif.if, %.4.if.endif.endif.endif.endif.endif.endif.endif
  %.287 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.288 = bitcast i8* %.287 to %string.580129*
  %.288.repack = bitcast i8* %.287 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.288.repack, align 8
  %.288.repack28 = getelementptr inbounds i8, i8* %.287, i64 8
  %36 = bitcast i8* %.288.repack28 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.423, i64 0, i64 0), i8** %36, align 8
  %.288.repack29 = getelementptr inbounds i8, i8* %.287, i64 16
  %37 = bitcast i8* %.288.repack29 to i64*
  store i64 11, i64* %37, align 8
  %.288.repack30 = getelementptr inbounds i8, i8* %.287, i64 24
  %38 = bitcast i8* %.288.repack30 to i64*
  store i64 11, i64* %38, align 8
  %.290 = call i1 @flag(%"Arraymain.flo.580529"* %.9, %string.580129* %.288)
  br i1 %.290, label %.4.if.endif.endif.endif.e...endif, label %.4.if.endif.endif.endif.e...if

.4.if.endif.endif.endif.e...if:                   ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif.endif
  %.295 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.253, align 8
  %.296 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.295, i64 0, i32 4
  %.297 = load void (%GeneratedModule.580483*, %string.580129*, %string.580129*)*, void (%GeneratedModule.580483*, %string.580129*, %string.580129*)** %.296, align 8
  %.299 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.300 = bitcast i8* %.299 to %string.580129*
  %.300.repack = bitcast i8* %.299 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.300.repack, align 8
  %.300.repack37 = getelementptr inbounds i8, i8* %.299, i64 8
  %39 = bitcast i8* %.300.repack37 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.424, i64 0, i64 0), i8** %39, align 8
  %.300.repack38 = getelementptr inbounds i8, i8* %.299, i64 16
  %40 = bitcast i8* %.300.repack38 to i64*
  store i64 2, i64* %40, align 8
  %.300.repack39 = getelementptr inbounds i8, i8* %.299, i64 24
  %41 = bitcast i8* %.300.repack39 to i64*
  store i64 2, i64* %41, align 8
  %.302 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.303 = bitcast i8* %.302 to %string.580129*
  %.303.repack = bitcast i8* %.302 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.303.repack, align 8
  %.303.repack40 = getelementptr inbounds i8, i8* %.302, i64 8
  %42 = bitcast i8* %.303.repack40 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.425, i64 0, i64 0), i8** %42, align 8
  %.303.repack41 = getelementptr inbounds i8, i8* %.302, i64 16
  %43 = bitcast i8* %.303.repack41 to i64*
  store i64 3, i64* %43, align 8
  %.303.repack42 = getelementptr inbounds i8, i8* %.302, i64 24
  %44 = bitcast i8* %.303.repack42 to i64*
  store i64 3, i64* %44, align 8
  %.305 = call %string.580129* @flag_value_or(%"Arraymain.flo.580529"* %.9, %string.580129* %.300, %string.580129* %.303)
  %.307 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.308 = bitcast i8* %.307 to %string.580129*
  %.308.repack = bitcast i8* %.307 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.308.repack, align 8
  %.308.repack43 = getelementptr inbounds i8, i8* %.307, i64 8
  %45 = bitcast i8* %.308.repack43 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.426, i64 0, i64 0), i8** %45, align 8
  %.308.repack44 = getelementptr inbounds i8, i8* %.307, i64 16
  %46 = bitcast i8* %.308.repack44 to i64*
  store i64 8, i64* %46, align 8
  %.308.repack45 = getelementptr inbounds i8, i8* %.307, i64 24
  %47 = bitcast i8* %.308.repack45 to i64*
  store i64 8, i64* %47, align 8
  %.310 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.311 = bitcast i8* %.310 to %string.580129*
  %.312 = bitcast i8* %.310 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.312, align 8
  %.314 = getelementptr inbounds i8, i8* %.310, i64 8
  %48 = bitcast i8* %.314 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8, i64 0, i64 0), i8** %48, align 8
  %.316 = getelementptr inbounds i8, i8* %.310, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.316, i8 0, i64 16, i1 false)
  %.320 = call %string.580129* @flag_value_or(%"Arraymain.flo.580529"* %.9, %string.580129* %.308, %string.580129* %.311)
  call void %.297(%GeneratedModule.580483* %.250, %string.580129* %.305, %string.580129* %.320)
  br label %.4.if.endif.endif.endif.e...endif

.4.if.endif.endif.endif.e...endif:                ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif.endif, %.4.if.endif.endif.endif.e...if
  %.324 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.325 = bitcast i8* %.324 to %string.580129*
  %.325.repack = bitcast i8* %.324 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.325.repack, align 8
  %.325.repack31 = getelementptr inbounds i8, i8* %.324, i64 8
  %49 = bitcast i8* %.325.repack31 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.427, i64 0, i64 0), i8** %49, align 8
  %.325.repack32 = getelementptr inbounds i8, i8* %.324, i64 16
  %50 = bitcast i8* %.325.repack32 to i64*
  store i64 2, i64* %50, align 8
  %.325.repack33 = getelementptr inbounds i8, i8* %.324, i64 24
  %51 = bitcast i8* %.325.repack33 to i64*
  store i64 2, i64* %51, align 8
  %.327 = call i1 @flag(%"Arraymain.flo.580529"* %.9, %string.580129* %.325)
  %.329 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.330 = bitcast i8* %.329 to %string.580129*
  %.330.repack = bitcast i8* %.329 to %string_vtable_ty.580130**
  store %string_vtable_ty.580130* @string_vtable_data, %string_vtable_ty.580130** %.330.repack, align 8
  %.330.repack34 = getelementptr inbounds i8, i8* %.329, i64 8
  %52 = bitcast i8* %.330.repack34 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.428, i64 0, i64 0), i8** %52, align 8
  %.330.repack35 = getelementptr inbounds i8, i8* %.329, i64 16
  %53 = bitcast i8* %.330.repack35 to i64*
  store i64 9, i64* %53, align 8
  %.330.repack36 = getelementptr inbounds i8, i8* %.329, i64 24
  %54 = bitcast i8* %.330.repack36 to i64*
  store i64 9, i64* %54, align 8
  %.332 = call i1 @flag(%"Arraymain.flo.580529"* %.9, %string.580129* %.330)
  %.333 = or i1 %.327, %.332
  br i1 %.333, label %.4.if.endif.endif.endif.e...endif.if, label %.4.if.endif.endif.endif.e...endif.endif

.4.if.endif.endif.endif.e...endif.if:             ; preds = %.4.if.endif.endif.endif.e...endif
  %.337 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.253, align 8
  %.338 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.337, i64 0, i32 2
  %.339 = load void (%GeneratedModule.580483*)*, void (%GeneratedModule.580483*)** %.338, align 8
  call void %.339(%GeneratedModule.580483* %.250)
  br label %.4.if.endif.endif.endif.e...endif.endif

.4.if.endif.endif.endif.e...endif.endif:          ; preds = %.4.if.endif.endif.endif.e...endif.if, %.4.if.endif.endif.endif.e...endif
  %.342 = load %GeneratedModule.580483*, %GeneratedModule.580483** %flo_module, align 8
  %.343 = getelementptr inbounds %GeneratedModule.580483, %GeneratedModule.580483* %.342, i64 0, i32 0
  %.344 = load %GeneratedModule_vtable_ty.580484*, %GeneratedModule_vtable_ty.580484** %.343, align 8
  %.345 = getelementptr inbounds %GeneratedModule_vtable_ty.580484, %GeneratedModule_vtable_ty.580484* %.344, i64 0, i32 7
  %.346 = load void (%GeneratedModule.580483*)*, void (%GeneratedModule.580483*)** %.345, align 8
  call void %.346(%GeneratedModule.580483* %.342)
  %.348 = load %File.580133*, %File.580133** %file, align 8
  %.349 = getelementptr inbounds %File.580133, %File.580133* %.348, i64 0, i32 0
  %.350 = load %File_vtable_ty.580134*, %File_vtable_ty.580134** %.349, align 8
  %.351 = getelementptr inbounds %File_vtable_ty.580134, %File_vtable_ty.580134* %.350, i64 0, i32 1
  %.352 = load void (%File.580133*)*, void (%File.580133*)** %.351, align 8
  call void %.352(%File.580133* %.348)
  ret i64 0
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { argmemonly nofree nounwind readonly }
attributes #1 = { nofree norecurse nounwind writeonly }
attributes #2 = { nounwind }
attributes #3 = { nofree nounwind }
attributes #4 = { norecurse nounwind readonly }
attributes #5 = { nofree norecurse nounwind }
attributes #6 = { norecurse nounwind readnone }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { argmemonly nounwind willreturn writeonly }

!0 = distinct !{!0, !1}
!1 = !{!"llvm.loop.peeled.count", i32 1}
