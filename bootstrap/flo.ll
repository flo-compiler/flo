; ModuleID = './src/main.flo'
source_filename = "./src/main.flo"
target triple = "x86_64-pc-linux-gnu"

%CodeGen = type <{ ptr, ptr, ptr, ptr, ptr, i1, ptr, ptr, ptr, ptr, ptr }>
%TypeChecker = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1, i1, ptr }>
%String = type <{ ptr, i64, i64 }>
%FlagBool = type <{ i64, ptr, ptr, i1 }>
%Flag = type <{ i64, ptr, ptr }>
%FlagString = type <{ i64, ptr, ptr, ptr }>
%FlagInt = type <{ i64, ptr, ptr, i64 }>
%Compiler = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_FloFile_ = type <{ ptr, i64, i64 }>
%Array_FloError_ = type <{ ptr, i64, i64 }>
%Range = type <{ i64, i64 }>
%RangeIterator = type <{ i1, i64, i64 }>
%Map_String_FileId_ = type <{ ptr, i64, i64 }>
%Array_Module_ = type <{ ptr, i64, i64 }>
%Map_String_Generic_ = type <{ ptr, i64, i64 }>
%Module = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Map_String_LLVMValueRef_ = type <{ ptr, i64, i64 }>
%Map_String_CGClassType_ = type <{ ptr, i64, i64 }>
%Map_String_CGEnumType_ = type <{ ptr, i64, i64 }>
%Array_Enum_ = type <{ ptr, i64, i64 }>
%ArrayIterator_Enum_ = type <{ i1, i64, i64, ptr }>
%Array_Class_ = type <{ ptr, i64, i64 }>
%ArrayIterator_Class_ = type <{ i1, i64, i64, ptr }>
%Array_ConstDeclaration_ = type <{ ptr, i64, i64 }>
%ArrayIterator_ConstDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_VarDeclaration_ = type <{ ptr, i64, i64 }>
%ArrayIterator_VarDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_Function_ = type <{ ptr, i64, i64 }>
%ArrayIterator_Function_ = type <{ i1, i64, i64, ptr }>
%MapIterator_String_LLVMValueRef_ = type <{ i1, ptr, i64, i64 }>
%MapIterator_String_CGClassType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_String_CGClassType_ = type <{ ptr, ptr }>
%MapIterator_String_CGEnumType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_String_CGEnumType_ = type <{ ptr, ptr }>
%ArrayIterator_Module_ = type <{ i1, i64, i64, ptr }>
%Array_Var_ = type <{ ptr, i64, i64 }>
%Class = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i1 }>
%Array_ClassField_ = type <{ ptr, i64, i64 }>
%Array_ClassMethod_ = type <{ ptr, i64, i64 }>
%Enum = type <{ ptr, ptr, ptr, ptr }>
%Array_EnumField_ = type <{ ptr, i64, i64 }>
%EnumField = type <{ ptr, ptr, ptr }>
%ScopeId = type <{ i64, i64 }>
%GeneratedModule = type <{ ptr, ptr, ptr }>
%FloFile = type <{ ptr, ptr }>
%FloError = type <{ i64, ptr, ptr }>
%FloRange = type <{ i64, i64, i64, i64 }>
%MapEntry_String_FileId_ = type <{ ptr, ptr }>
%Map_String_VarId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_VarId_ = type <{ ptr, ptr }>
%Scope = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Map_String_EnumId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_EnumId_ = type <{ ptr, ptr }>
%Map_String_Type_ = type <{ ptr, i64, i64 }>
%MapEntry_String_Type_ = type <{ ptr, ptr }>
%Map_String_ClassId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_ClassId_ = type <{ ptr, ptr }>
%Map_String_PropId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_PropId_ = type <{ ptr, ptr }>
%Array_FunctionDeclarationNode_ = type <{ ptr, i64, i64 }>
%ModuleAST = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_ClassDeclarationNode_ = type <{ ptr, i64, i64 }>
%Array_ImportNode_ = type <{ ptr, i64, i64 }>
%Array_ConstDeclarationStatement_ = type <{ ptr, i64, i64 }>
%Array_VarDeclarationStatement_ = type <{ ptr, i64, i64 }>
%Array_EnumNode_ = type <{ ptr, i64, i64 }>
%Array_TypeAliasNode_ = type <{ ptr, i64, i64 }>
%Lexer = type <{ i8, ptr, ptr, i64, i64, i64 }>
%Array_Token_ = type <{ ptr, i64, i64 }>
%Token = type <{ i64, ptr }>
%IntToken = type <{ i64, ptr, i64 }>
%IdentifierToken = type <{ i64, ptr, ptr }>
%Array_Array_Token__ = type <{ ptr, i64, i64 }>
%Array_uint_ = type <{ ptr, i64, i64 }>
%StrToken = type <{ i64, ptr, ptr, ptr, ptr }>
%FloatToken = type <{ i64, ptr, double }>
%CharToken = type <{ i64, ptr, i8 }>
%Parser = type <{ ptr, ptr, ptr, i64 }>
%FunctionDeclarationNode = type <{ ptr, ptr, ptr, ptr, i1 }>
%Array_ArgNode_ = type <{ ptr, i64, i64 }>
%TypeNode = type <{ ptr, i64 }>
%RecordTypeNode = type <{ ptr, i64, ptr, ptr }>
%Array_TypeNode_ = type <{ ptr, i64, i64 }>
%ClassDeclarationNode = type <{ ptr, ptr, ptr, ptr, ptr }>
%Array_FieldNode_ = type <{ ptr, i64, i64 }>
%Array_MethodNode_ = type <{ ptr, i64, i64 }>
%Array_GenericParameterNode_ = type <{ ptr, i64, i64 }>
%FieldNode = type <{ ptr, i64, ptr, ptr }>
%MethodNode = type <{ ptr, ptr, ptr, i64, ptr, i1, i1 }>
%EnumNode = type <{ ptr, ptr, ptr }>
%Array_EnumNodeField_ = type <{ ptr, i64, i64 }>
%EnumNodeField = type <{ ptr, ptr }>
%Array_ImportClause_ = type <{ ptr, i64, i64 }>
%ImportNode = type <{ ptr, ptr, ptr }>
%ImportClause = type <{ ptr, ptr }>
%TypeAliasNode = type <{ ptr, ptr }>
%BlockNode = type <{ ptr, ptr }>
%Array_StatementNode_ = type <{ ptr, i64, i64 }>
%TupleTypeNode = type <{ ptr, i64, ptr }>
%FunctionTypeNode = type <{ ptr, i64, ptr, ptr }>
%PointerTypeNode = type <{ ptr, i64, ptr }>
%ArrayTypeNode = type <{ ptr, i64, ptr, ptr }>
%Array_ExpressionNode_ = type <{ ptr, i64, i64 }>
%ArrayIterator_Array_Token__ = type <{ i1, i64, i64, ptr }>
%StatementNode = type <{ ptr, i64 }>
%ExpressionNode = type <{ ptr, i64, i64 }>
%StringExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%VarDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%NewExpressionNode = type <{ ptr, i64, i64, ptr, i1, ptr }>
%IfStatementNode = type <{ ptr, i64, ptr, ptr, ptr }>
%WhileStatementNode = type <{ ptr, i64, ptr, ptr }>
%ForStatementNode = type <{ ptr, i64, ptr, ptr, ptr }>
%ReturnStatementNode = type <{ ptr, i64, ptr }>
%ConstDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%TupleExpressionNode = type <{ ptr, i64, i64, ptr }>
%ArgNode = type <{ ptr, ptr, ptr }>
%IntExpressionNode = type <{ ptr, i64, i64, ptr }>
%FloatExpressionNode = type <{ ptr, i64, i64, ptr }>
%CharExpressionNode = type <{ ptr, i64, i64, ptr }>
%VarAccessExpressionNode = type <{ ptr, i64, i64, ptr }>
%CallExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%ExpressionIndexNode = type <{ ptr, i64, i64, ptr, ptr }>
%MemberExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%UnaryExpressionNode = type <{ ptr, i64, i64, i64, ptr }>
%ArrayExpressionNode = type <{ ptr, i64, i64, ptr }>
%BinaryExpressionNode = type <{ ptr, i64, i64, ptr, i64, ptr }>
%MatchExpressionNode = type <{ ptr, i64, i64, ptr, ptr, ptr }>
%Array_MatchExpressionCaseNode_ = type <{ ptr, i64, i64 }>
%MatchExpressionCaseNode = type <{ ptr, ptr }>
%RangeExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%TypeCastExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%TernaryExpressionNode = type <{ ptr, i64, i64, ptr, ptr, ptr }>
%Array_Scope_ = type <{ ptr, i64, i64 }>
%Array_Const_ = type <{ ptr, i64, i64 }>
%ArrayIterator_ImportNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_EnumNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ClassDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_TypeAliasNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ConstDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%ConstDeclaration = type <{ i64, ptr, ptr, i1 }>
%ArrayIterator_VarDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%VarDeclaration = type <{ i64, ptr, ptr, i1 }>
%VarId = type <{ i64, i64, i64 }>
%Var = type <{ ptr, ptr, ptr }>
%Expression = type <{ i64, i1, i64, ptr }>
%ArrayIterator_FunctionDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%Function = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1 }>
%Block = type <{ ptr, i1, i1, i1, ptr }>
%FunctionType = type <{ i64, ptr, ptr, i1 }>
%ReturnStatement = type <{ i64, ptr }>
%Array_Statement_ = type <{ ptr, i64, i64 }>
%TypeId = type <{ i64, i64, i64 }>
%MapIterator_String_Type_ = type <{ i1, ptr, i64, i64 }>
%GenericType = type <{ i64, ptr, ptr, ptr }>
%ObjectType = type <{ i64, ptr }>
%Array_Expression_ = type <{ ptr, i64, i64 }>
%StringExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%IntrinsicCall = type <{ i64, i1, i64, ptr, i64, ptr }>
%TypeCastExpression = type <{ i64, i1, i64, ptr, ptr }>
%Array_Type_ = type <{ ptr, i64, i64 }>
%Array_FunctionArg_ = type <{ ptr, i64, i64 }>
%ArrayIterator_FunctionArg_ = type <{ i1, i64, i64, ptr }>
%FunctionArg = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapIterator_String_PropId_ = type <{ i1, ptr, i64, i64 }>
%PropId = type <{ i64, ptr, i64 }>
%ClassMethod = type <{ ptr, i1, i64, ptr, ptr, ptr, ptr, i1, ptr }>
%ClassField = type <{ ptr, i1, i64, ptr, ptr, i64, ptr }>
%Type = type <{ i64 }>
%MatchExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr, i1 }>
%Array_MatchExpressionCase_ = type <{ ptr, i64, i64 }>
%ArrayIterator_MatchExpressionCaseNode_ = type <{ i1, i64, i64, ptr }>
%MatchExpressionCase = type <{ i64, ptr, ptr }>
%Const = type <{ ptr, ptr, ptr }>
%EnumType = type <{ i64, ptr }>
%MemberExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%CallExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%BinaryExpression = type <{ i64, i1, i64, ptr, ptr, i64, ptr }>
%IntType = type <{ i64, i1 }>
%VarAccessExpression = type <{ i64, i1, i64, ptr, ptr }>
%PointerType = type <{ i64, ptr }>
%ArrayType = type <{ i64, ptr, i64 }>
%ArrayIterator_TypeNode_ = type <{ i1, i64, i64, ptr }>
%TupleType = type <{ i64, ptr }>
%Array_ScopeId_ = type <{ ptr, i64, i64 }>
%UnaryExpression = type <{ i64, i1, i64, ptr, i64, ptr }>
%IndexExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%NewExpression = type <{ i64, i1, i64, ptr, ptr, i1, ptr }>
%TernaryExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%ArrayIterator_Type_ = type <{ i1, i64, i64, ptr }>
%MapEntry_String_Generic_ = type <{ ptr, ptr }>
%Generic = type <{ i64, ptr }>
%IntExpression = type <{ i64, i1, i64, ptr, i64 }>
%ArrayIterator_StatementNode_ = type <{ i1, i64, i64, ptr }>
%IfStatement = type <{ i64, ptr, ptr, ptr }>
%ForStatement = type <{ i64, ptr, ptr, ptr }>
%WhileStatement = type <{ i64, ptr, ptr }>
%RangeExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%ArrayIterator_ImportClause_ = type <{ i1, i64, i64, ptr }>
%ModuleVarId = type <{ i64, i64, i64, ptr }>
%ArrayIterator_ArgNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ExpressionNode_ = type <{ i1, i64, i64, ptr }>
%ArrayExpression = type <{ i64, i1, i64, ptr, ptr }>
%FloatExpression = type <{ i64, i1, i64, ptr, double }>
%TupleExpression = type <{ i64, i1, i64, ptr, ptr }>
%BooleanExpression = type <{ i64, i1, i64, ptr, i1 }>
%MapEntry_String_LLVMValueRef_ = type <{ ptr, ptr }>
%ArrayIterator_Expression_ = type <{ i1, i64, i64, ptr }>
%MapIterator_String_VarId_ = type <{ i1, ptr, i64, i64 }>
%ArrayIterator_ScopeId_ = type <{ i1, i64, i64, ptr }>
%Map_String_uint_ = type <{ ptr, i64, i64 }>
%MapEntry_String_uint_ = type <{ ptr, i64 }>
%ArrayIterator_MatchExpressionCase_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_Statement_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ClassMethod_ = type <{ i1, i64, i64, ptr }>
%CGClassType = type <{ ptr, ptr, ptr, ptr, ptr }>
%Array_LLVMValueRef_ = type <{ ptr, i64, i64 }>
%CGEnumType = type <{ ptr, ptr, ptr }>
%Array_LLVMTypeRef_ = type <{ ptr, i64, i64 }>
%ArrayIterator_EnumField_ = type <{ i1, i64, i64, ptr }>
%IntrinsicResult = type <{ ptr, ptr }>
%ArrayIterator_LLVMValueRef_ = type <{ i1, i64, i64, ptr }>

@0 = private unnamed_addr constant [8 x i8] c"Panic: \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [10 x i8] c"error: %s\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@4 = private unnamed_addr constant [49 x i8] c"Main function not found in module; can't execute\00", align 1
@5 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@6 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@7 = private unnamed_addr constant [22 x i8] c"builtins/builtins.flo\00", align 1
@8 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@9 = private unnamed_addr constant [8 x i8] c"\1B[1;31m\00", align 1
@10 = private unnamed_addr constant [22 x i8] c"[Illegal Character]: \00", align 1
@11 = private unnamed_addr constant [17 x i8] c"[Syntax Error]: \00", align 1
@12 = private unnamed_addr constant [13 x i8] c"[IO Error]: \00", align 1
@13 = private unnamed_addr constant [15 x i8] c"[Type Error]: \00", align 1
@14 = private unnamed_addr constant [15 x i8] c"[Name Error]: \00", align 1
@15 = private unnamed_addr constant [10 x i8] c"[Error]: \00", align 1
@16 = private unnamed_addr constant [17 x i8] c"File %s, line %u\00", align 1
@17 = internal global [13 x i8] c"FlagType.INT\00"
@18 = internal global [14 x i8] c"FlagType.BOOL\00"
@19 = internal global [13 x i8] c"FlagType.STR\00"
@FlagType_names = internal unnamed_addr constant [3 x ptr] [ptr @17, ptr @18, ptr @19]
@flags_length = internal unnamed_addr global i64 0
@flags_buffer = internal unnamed_addr global [250 x ptr] zeroinitializer
@20 = private unnamed_addr constant [6 x i8] c"0.0.1\00", align 1
@21 = private unnamed_addr constant [23 x i8] c"Show this help message\00", align 1
@22 = private unnamed_addr constant [6 x i8] c"-emit\00", align 1
@23 = private unnamed_addr constant [276 x i8] c"Emit output in a particular format. Options are:\0A\09\09 \E2\80\A2 exe - Generates an executable.\0A\09\09 \E2\80\A2 llvm-ir - Generates a file containing LLVM IR.\0A\09\09 \E2\80\A2 llvm-bc - Generates a file containing LLVM bitcode.\0A\09\09 \E2\80\A2 obj - Generates an object file\0A\09\09 \E2\80\A2 asm - Generates Assembly code.\00", align 1
@24 = private unnamed_addr constant [36 x i8] c"Specify file to put the output into\00", align 1
@25 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@26 = private unnamed_addr constant [26 x i8] c"Specify runtime directory\00", align 1
@27 = private unnamed_addr constant [8 x i8] c"-target\00", align 1
@28 = private unnamed_addr constant [34 x i8] c"Compile to specific target triple\00", align 1
@29 = private unnamed_addr constant [69 x i8] c"Specify a library to link against (should be a comma seperated list)\00", align 1
@30 = private unnamed_addr constant [42 x i8] c"Specify the compiler's optimization level\00", align 1
@31 = private unnamed_addr constant [13 x i8] c"Show version\00", align 1
@32 = private unnamed_addr constant [34 x i8] c"Missing value after -%s argument.\00", align 1
@33 = private unnamed_addr constant [8 x i8] c"Usage: \00", align 1
@34 = private unnamed_addr constant [30 x i8] c" [OPTIONS]? <file>\0A\0AOPTIONS:\0A\00", align 1
@35 = private unnamed_addr constant [4 x i8] c"-%s\00", align 1
@36 = private unnamed_addr constant [7 x i8] c" <val>\00", align 1
@37 = private unnamed_addr constant [25 x i8] c"No input file specified.\00", align 1
@38 = private unnamed_addr constant [33 x i8] c"Runtime directory not found '%s'\00", align 1
@39 = private unnamed_addr constant [32 x i8] c"No such file or directory: '%s'\00", align 1
@40 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@41 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@42 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@43 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@44 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@45 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@46 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@47 = private unnamed_addr constant [4 x i8] c"fnc\00", align 1
@48 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@49 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@50 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@51 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@52 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@53 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@54 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@55 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@56 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@57 = private unnamed_addr constant [4 x i8] c"033\00", align 1
@58 = private unnamed_addr constant [4 x i8] c"x1b\00", align 1
@59 = private unnamed_addr constant [6 x i8] c"u001b\00", align 1
@60 = private unnamed_addr constant [24 x i8] c"Illegal character: '%s'\00", align 1
@61 = private unnamed_addr constant [23 x i8] c"Expected an Identifier\00", align 1
@62 = private unnamed_addr constant [13 x i8] c"Expected '='\00", align 1
@63 = private unnamed_addr constant [13 x i8] c"Expected ':'\00", align 1
@64 = private unnamed_addr constant [13 x i8] c"Expected '('\00", align 1
@65 = private unnamed_addr constant [13 x i8] c"Expected ')'\00", align 1
@66 = private unnamed_addr constant [13 x i8] c"Expected '{'\00", align 1
@67 = private unnamed_addr constant [13 x i8] c"Expected '}'\00", align 1
@68 = private unnamed_addr constant [13 x i8] c"Expected ','\00", align 1
@69 = private unnamed_addr constant [13 x i8] c"Expected '<'\00", align 1
@70 = private unnamed_addr constant [13 x i8] c"Expected '>'\00", align 1
@71 = private unnamed_addr constant [14 x i8] c"Expected '->'\00", align 1
@72 = private unnamed_addr constant [4 x i8] c"Map\00", align 1
@73 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@74 = private unnamed_addr constant [29 x i8] c"Expected an Expression value\00", align 1
@75 = private unnamed_addr constant [29 x i8] c"'%s' has no type information\00", align 1
@76 = private unnamed_addr constant [20 x i8] c"Expected ':' or '('\00", align 1
@77 = private unnamed_addr constant [88 x i8] c"Illegal expression expected: 'fnc', 'class', 'type', 'enum', 'import', 'const' or 'let'\00", align 1
@BUILTIN_MODULE_ID = internal unnamed_addr global i64 0
@78 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@79 = private unnamed_addr constant [5 x i8] c"%s, \00", align 1
@80 = private unnamed_addr constant [11 x i8] c"(%s) => %s\00", align 1
@81 = private unnamed_addr constant [4 x i8] c"%s*\00", align 1
@82 = private unnamed_addr constant [7 x i8] c"%s[%u]\00", align 1
@83 = private unnamed_addr constant [26 x i8] c"this.dump_type(elem_ty), \00", align 1
@84 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@85 = private unnamed_addr constant [10 x i8] c"Namespace\00", align 1
@86 = private unnamed_addr constant [7 x i8] c"Record\00", align 1
@87 = private unnamed_addr constant [4 x i8] c"i%u\00", align 1
@88 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@89 = private unnamed_addr constant [4 x i8] c"%s4\00", align 1
@90 = private unnamed_addr constant [4 x i8] c"%s8\00", align 1
@91 = private unnamed_addr constant [5 x i8] c"%s16\00", align 1
@92 = private unnamed_addr constant [5 x i8] c"%s32\00", align 1
@93 = private unnamed_addr constant [5 x i8] c"%s64\00", align 1
@94 = private unnamed_addr constant [6 x i8] c"%s128\00", align 1
@95 = private unnamed_addr constant [4 x i8] c"f32\00", align 1
@96 = private unnamed_addr constant [4 x i8] c"f64\00", align 1
@97 = private unnamed_addr constant [7 x i8] c"record\00", align 1
@98 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@99 = private unnamed_addr constant [13 x i8] c"__generics__\00", align 1
@GENERIC_MODULE_ID = internal unnamed_addr global i64 0
@100 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@101 = private unnamed_addr constant [68 x i8] c"Name '%s' has already been used for another type. consider renaming\00", align 1
@102 = private unnamed_addr constant [41 x i8] c"Generic expects %u parameters but got %u\00", align 1
@103 = private unnamed_addr constant [4 x i8] c"%s_\00", align 1
@104 = private unnamed_addr constant [6 x i8] c"%s_%s\00", align 1
@105 = private unnamed_addr constant [55 x i8] c"Initilializer for global variable has to be a constant\00", align 1
@106 = private unnamed_addr constant [56 x i8] c"Expected type of '%s' but got type of '%s' on signature\00", align 1
@107 = private unnamed_addr constant [50 x i8] c"Import statement path can't be a formatted string\00", align 1
@108 = private unnamed_addr constant [30 x i8] c"'%s' not found in module '%s'\00", align 1
@109 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s'\00", align 1
@110 = private unnamed_addr constant [48 x i8] c"Illegal re-declaration of type '%s' as function\00", align 1
@111 = private unnamed_addr constant [53 x i8] c"Expected an int type for enum type but got type '%s'\00", align 1
@112 = private unnamed_addr constant [38 x i8] c"Enum initializer has to be a constant\00", align 1
@113 = private unnamed_addr constant [36 x i8] c"Expected type '%s' but got type '%s\00", align 1
@114 = private unnamed_addr constant [7 x i8] c"__eq__\00", align 1
@115 = private unnamed_addr constant [8 x i8] c"__add__\00", align 1
@116 = private unnamed_addr constant [8 x i8] c"__sub__\00", align 1
@117 = private unnamed_addr constant [8 x i8] c"__mul__\00", align 1
@118 = private unnamed_addr constant [8 x i8] c"__div__\00", align 1
@119 = private unnamed_addr constant [7 x i8] c"__or__\00", align 1
@120 = private unnamed_addr constant [8 x i8] c"__ora__\00", align 1
@121 = private unnamed_addr constant [12 x i8] c"__getitem__\00", align 1
@122 = private unnamed_addr constant [12 x i8] c"__setitem__\00", align 1
@123 = private unnamed_addr constant [7 x i8] c"__sl__\00", align 1
@124 = private unnamed_addr constant [7 x i8] c"__sr__\00", align 1
@125 = private unnamed_addr constant [8 x i8] c"__sla__\00", align 1
@126 = private unnamed_addr constant [8 x i8] c"__sra__\00", align 1
@127 = private unnamed_addr constant [7 x i8] c"__in__\00", align 1
@128 = private unnamed_addr constant [7 x i8] c"__lt__\00", align 1
@129 = private unnamed_addr constant [7 x i8] c"__lg__\00", align 1
@130 = private unnamed_addr constant [7 x i8] c"__ne__\00", align 1
@131 = private unnamed_addr constant [7 x i8] c"__le__\00", align 1
@132 = private unnamed_addr constant [7 x i8] c"__ge__\00", align 1
@133 = private unnamed_addr constant [8 x i8] c"__pow__\00", align 1
@134 = private unnamed_addr constant [8 x i8] c"__mod__\00", align 1
@135 = private unnamed_addr constant [8 x i8] c"__del__\00", align 1
@136 = private unnamed_addr constant [76 x i8] c" is reserved only for operator overloads and cannot be used as a field name\00", align 1
@137 = private unnamed_addr constant [36 x i8] c"Field %s in class %s already exists\00", align 1
@138 = private unnamed_addr constant [89 x i8] c"Signature of inherited field %s in class %s does not match expected parent signature '%s\00", align 1
@139 = private unnamed_addr constant [49 x i8] c"Expected inherited field %s in class %s to be %s\00", align 1
@140 = private unnamed_addr constant [68 x i8] c"Expected type '%s' but got type '%s' on static field initialization\00", align 1
@141 = private unnamed_addr constant [46 x i8] c"Static field initializer has to be a constant\00", align 1
@142 = private unnamed_addr constant [65 x i8] c"Expected %u arguments for binary operator overload %s but got %u\00", align 1
@143 = private unnamed_addr constant [45 x i8] c"Binary operator overload %s cannot be static\00", align 1
@144 = private unnamed_addr constant [75 x i8] c"__iter__ method must return an iteratable object {done: bool, next(): any}\00", align 1
@145 = private unnamed_addr constant [37 x i8] c"Method %s in class %s already exists\00", align 1
@146 = private unnamed_addr constant [91 x i8] c"Signature of inherited method %s in class %s does not match expected parent signature '%s'\00", align 1
@147 = private unnamed_addr constant [50 x i8] c"Expected inherited method %s in class %s to be %s\00", align 1
@148 = private unnamed_addr constant [32 x i8] c"Static method can't be abstract\00", align 1
@149 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@150 = private unnamed_addr constant [34 x i8] c"Class constructor can't be static\00", align 1
@151 = private unnamed_addr constant [36 x i8] c"Class constructor can't be abstract\00", align 1
@152 = private unnamed_addr constant [59 x i8] c"Can't have a abstract private method use protected instead\00", align 1
@153 = private unnamed_addr constant [6 x i8] c"super\00", align 1
@154 = private unnamed_addr constant [42 x i8] c"Can only inherit from class not type '%s'\00", align 1
@155 = private unnamed_addr constant [81 x i8] c"Class with constructor must implement all it's methods missing %s implementation\00", align 1
@156 = private unnamed_addr constant [39 x i8] c"Method missing ending return statement\00", align 1
@157 = private unnamed_addr constant [41 x i8] c"Function missing ending return statement\00", align 1
@158 = private unnamed_addr constant [24 x i8] c"length has to be an int\00", align 1
@159 = private unnamed_addr constant [24 x i8] c"length has to be a uint\00", align 1
@160 = private unnamed_addr constant [31 x i8] c"length is a non-constant value\00", align 1
@161 = private unnamed_addr constant [29 x i8] c"length should be an unsigned\00", align 1
@162 = private unnamed_addr constant [4 x i8] c"u16\00", align 1
@163 = private unnamed_addr constant [4 x i8] c"u32\00", align 1
@164 = private unnamed_addr constant [4 x i8] c"u64\00", align 1
@165 = private unnamed_addr constant [4 x i8] c"i16\00", align 1
@166 = private unnamed_addr constant [4 x i8] c"i32\00", align 1
@167 = private unnamed_addr constant [4 x i8] c"i64\00", align 1
@168 = private unnamed_addr constant [20 x i8] c"Undefined type '%s'\00", align 1
@169 = private unnamed_addr constant [48 x i8] c"Expected element type of '%s' but got type '%s'\00", align 1
@170 = private unnamed_addr constant [38 x i8] c"Const 'null' cannot be of type 'void'\00", align 1
@171 = private unnamed_addr constant [24 x i8] c"Undefined variable '%s'\00", align 1
@172 = private unnamed_addr constant [34 x i8] c"Assigment target is not a mutable\00", align 1
@173 = private unnamed_addr constant [52 x i8] c"Illegal assignment of variable of type '%s' to '%s'\00", align 1
@174 = private unnamed_addr constant [7 x i8] c"__gt__\00", align 1
@175 = private unnamed_addr constant [8 x i8] c"__and__\00", align 1
@176 = private unnamed_addr constant [8 x i8] c"__xor__\00", align 1
@177 = private unnamed_addr constant [37 x i8] c"Expected type '%s' but got type '%s'\00", align 1
@178 = private unnamed_addr constant [55 x i8] c"Unsupported binary operator overload for operator '%s'\00", align 1
@179 = private unnamed_addr constant [108 x i8] c"No binary operator overload for '%s' in object of class '%s' please implement the method %s to support this\00", align 1
@180 = private unnamed_addr constant [114 x i8] c"No operator overload for index set operator on %s object please implement method __setitem__ to use in this class\00", align 1
@181 = private unnamed_addr constant [58 x i8] c"Illegal binary operation '%s' between types '%s' and '%s'\00", align 1
@182 = private unnamed_addr constant [8 x i8] c"++(pre)\00", align 1
@183 = private unnamed_addr constant [8 x i8] c"--(pre)\00", align 1
@184 = private unnamed_addr constant [39 x i8] c"Illegal unary operation %s on constant\00", align 1
@185 = private unnamed_addr constant [40 x i8] c"Illegal unary operation %s on type '%s'\00", align 1
@186 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@187 = private unnamed_addr constant [30 x i8] c"Cannot cast type '%s' to '%s'\00", align 1
@188 = private unnamed_addr constant [45 x i8] c"Cannot construct an object of abstract class\00", align 1
@189 = private unnamed_addr constant [55 x i8] c"Expected %u argument(s) on constructor call but got %u\00", align 1
@190 = private unnamed_addr constant [71 x i8] c"Expected type '%s' but got type '%s' as constructor call argument (%d)\00", align 1
@191 = private unnamed_addr constant [68 x i8] c"New operator expects 1 argument for pointers but got %u argument(s)\00", align 1
@192 = private unnamed_addr constant [74 x i8] c"New operator for pointers expects argument of type '%s' but got type '%s'\00", align 1
@193 = private unnamed_addr constant [68 x i8] c"New operator expects either an a pointer or an object not a(n) '%s'\00", align 1
@194 = private unnamed_addr constant [76 x i8] c"Property '%s' is defined as private and only accessible within the class %s\00", align 1
@195 = private unnamed_addr constant [71 x i8] c"Property '%s' is defined as %s and only accessible within the class %s\00", align 1
@196 = private unnamed_addr constant [52 x i8] c"Property '%s' doesn't exist in object of class '%s'\00", align 1
@197 = private unnamed_addr constant [51 x i8] c"Property '%s' is not a static member in class '%s'\00", align 1
@198 = private unnamed_addr constant [40 x i8] c"'%s' is not an element of enum the '%s'\00", align 1
@199 = private unnamed_addr constant [10 x i8] c"copy_from\00", align 1
@200 = private unnamed_addr constant [10 x i8] c"move_from\00", align 1
@201 = private unnamed_addr constant [10 x i8] c"fill_with\00", align 1
@202 = private unnamed_addr constant [7 x i8] c"resize\00", align 1
@203 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@204 = private unnamed_addr constant [28 x i8] c"intrinsic %s is not defined\00", align 1
@205 = private unnamed_addr constant [38 x i8] c"Cannot get property '%s' of type '%s'\00", align 1
@206 = private unnamed_addr constant [53 x i8] c"Expected type '%s' from first case but got type '%s'\00", align 1
@207 = private unnamed_addr constant [122 x i8] c"No operator overload for indexing operator on %s object please implement method __getitem__ to use indexing in this class\00", align 1
@208 = private unnamed_addr constant [35 x i8] c"Expected an integer type for index\00", align 1
@209 = private unnamed_addr constant [87 x i8] c"Expected an unsigned integer for tuple index but index value is '%s' (which is signed)\00", align 1
@210 = private unnamed_addr constant [41 x i8] c"Expected an constant int for tuple index\00", align 1
@211 = private unnamed_addr constant [37 x i8] c"Index out of range for tuple type %s\00", align 1
@212 = private unnamed_addr constant [39 x i8] c"Cannot index into a value of type '%s'\00", align 1
@213 = private unnamed_addr constant [47 x i8] c"Expected a function type for call but got '%s'\00", align 1
@214 = private unnamed_addr constant [52 x i8] c"Expected %u argument(s) on function call but got %u\00", align 1
@215 = private unnamed_addr constant [63 x i8] c"Expected type '%s' but got type '%s' as function call argument\00", align 1
@216 = private unnamed_addr constant [58 x i8] c"Expected argument %u to be of type '%s' but got type '%s'\00", align 1
@217 = private unnamed_addr constant [66 x i8] c"Expected argument 1 to be of type to be of a pointer but got '%s'\00", align 1
@218 = private unnamed_addr constant [49 x i8] c"Expected 2 arguments on function call but got %u\00", align 1
@219 = private unnamed_addr constant [49 x i8] c"Expected 3 arguments on function call but got %u\00", align 1
@220 = private unnamed_addr constant [7 x i8] c"3.4E38\00", align 1
@221 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@222 = private unnamed_addr constant [50 x i8] c"Cannot create a range between types '%s' and '%s'\00", align 1
@223 = private unnamed_addr constant [32 x i8] c"Cannot match on constant 'null'\00", align 1
@224 = private unnamed_addr constant [85 x i8] c"Operator overload == for '%s' should return a boolean to be used in match expression\00", align 1
@225 = private unnamed_addr constant [67 x i8] c"Expected type '%s' from match expression subject but got type '%s'\00", align 1
@226 = private unnamed_addr constant [57 x i8] c"Expected match case block to yield '%s' but yielded '%s'\00", align 1
@227 = private unnamed_addr constant [56 x i8] c"Non-exhaustable match expression, expected an else-case\00", align 1
@228 = private unnamed_addr constant [62 x i8] c"Expected match else-case block to yield '%s' but yielded '%s'\00", align 1
@229 = private unnamed_addr constant [26 x i8] c"Variable '%s' has no type\00", align 1
@230 = private unnamed_addr constant [70 x i8] c"Cannot declare a value as null without any type hint for future usage\00", align 1
@231 = private unnamed_addr constant [61 x i8] c"Expected type '%s' but got type '%s' on variable declaration\00", align 1
@232 = private unnamed_addr constant [39 x i8] c"Cannot declare a variable of type void\00", align 1
@233 = private unnamed_addr constant [57 x i8] c"Illegal re-declaration of already declared variable '%s'\00", align 1
@234 = private unnamed_addr constant [49 x i8] c"Cannot assign a non-constant value to a constant\00", align 1
@235 = private unnamed_addr constant [58 x i8] c"Expected type '%s' but got type '%s' on const declaration\00", align 1
@236 = private unnamed_addr constant [36 x i8] c"Cannot declare a const of type void\00", align 1
@237 = private unnamed_addr constant [29 x i8] c"Iterator has to be an object\00", align 1
@238 = private unnamed_addr constant [47 x i8] c"Iterator type has to have __iter__ as property\00", align 1
@239 = private unnamed_addr constant [30 x i8] c"Illegal break outside of loop\00", align 1
@240 = private unnamed_addr constant [33 x i8] c"Illegal continue outside of loop\00", align 1
@241 = private unnamed_addr constant [57 x i8] c"Expected return type of '%s' but got return type of '%s'\00", align 1
@242 = private unnamed_addr constant [33 x i8] c"Function return type is not void\00", align 1
@243 = private unnamed_addr constant [9 x i8] c"%u;%d;%u\00", align 1
@244 = private unnamed_addr constant [33 x i8] c"Type could not be code generated\00", align 1
@245 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1
@246 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@247 = private unnamed_addr constant [6 x i8] c"%s {\0A\00", align 1
@248 = private unnamed_addr constant [7 x i8] c" ... }\00", align 1
@249 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@250 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@251 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@252 = private unnamed_addr constant [13 x i8] c" '%s': %s, \0A\00", align 1
@253 = private unnamed_addr constant [11 x i8] c"<function>\00", align 1
@254 = private unnamed_addr constant [18 x i8] c"String_from_bytes\00", align 1
@255 = private unnamed_addr constant [55 x i8] c"Could not find function 'String.from_bytes' in program\00", align 1
@256 = private unnamed_addr constant [55 x i8] c"Array expression is not a constant (codegen_array_exp)\00", align 1
@257 = private unnamed_addr constant [55 x i8] c"Array expression is not a constant (codegen_tuple_exp)\00", align 1
@258 = private unnamed_addr constant [46 x i8] c"This should never happen! (get_expr_mem: var)\00", align 1
@259 = private unnamed_addr constant [9 x i8] c"%s;%d;%u\00", align 1
@260 = private unnamed_addr constant [10 x i8] c"memberidx\00", align 1
@261 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@262 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@263 = private unnamed_addr constant [12 x i8] c"llvm.pow.%s\00", align 1
@264 = private unnamed_addr constant [34 x i8] c"Unknown bin expression case case!\00", align 1
@265 = private unnamed_addr constant [11 x i8] c"incdec.ptr\00", align 1
@266 = private unnamed_addr constant [51 x i8] c"This should never happen; (codegen_var_access_exp)\00", align 1
@267 = private unnamed_addr constant [11 x i8] c"true_block\00", align 1
@268 = private unnamed_addr constant [12 x i8] c"false_block\00", align 1
@269 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@270 = private unnamed_addr constant [8 x i8] c"ternary\00", align 1
@271 = private unnamed_addr constant [11 x i8] c"match.else\00", align 1
@272 = private unnamed_addr constant [10 x i8] c"match.end\00", align 1
@273 = private unnamed_addr constant [11 x i8] c"match.case\00", align 1
@274 = private unnamed_addr constant [16 x i8] c"match.case.else\00", align 1
@275 = private unnamed_addr constant [15 x i8] c"match.phi.node\00", align 1
@276 = private unnamed_addr constant [52 x i8] c"this should not happen; (codegen_member_exp); class\00", align 1
@277 = private unnamed_addr constant [60 x i8] c"This should never happen; (codegen_member_expr; class prop)\00", align 1
@278 = private unnamed_addr constant [51 x i8] c"this should not happen; (codegen_member_exp); enum\00", align 1
@279 = private unnamed_addr constant [11 x i8] c"to_cstring\00", align 1
@280 = private unnamed_addr constant [22 x i8] c"instrinsic not found!\00", align 1
@281 = private unnamed_addr constant [9 x i8] c"if.entry\00", align 1
@282 = private unnamed_addr constant [6 x i8] c"ifend\00", align 1
@283 = private unnamed_addr constant [10 x i8] c"for.entry\00", align 1
@284 = private unnamed_addr constant [9 x i8] c"for.next\00", align 1
@285 = private unnamed_addr constant [9 x i8] c"for.body\00", align 1
@286 = private unnamed_addr constant [8 x i8] c"for.end\00", align 1
@287 = private unnamed_addr constant [12 x i8] c"while.entry\00", align 1
@288 = private unnamed_addr constant [10 x i8] c"while.end\00", align 1
@289 = private unnamed_addr constant [11 x i8] c"while.body\00", align 1
@290 = private unnamed_addr constant [48 x i8] c"Could not find constructor for constructor call\00", align 1
@291 = private unnamed_addr constant [15 x i8] c"%s_constructor\00", align 1
@292 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@293 = private unnamed_addr constant [9 x i8] c"%s_names\00", align 1
@294 = private unnamed_addr constant [4 x i8] c"exe\00", align 1
@295 = private unnamed_addr constant [14 x i8] c"/tmp/output.o\00", align 1
@296 = private unnamed_addr constant [5 x i8] c"-l%s\00", align 1
@297 = private unnamed_addr constant [11 x i8] c"-target %s\00", align 1
@298 = private unnamed_addr constant [79 x i8] c"FlagString {\0A 'name': %s, \0A 'value': %s, \0A 'description': %s, \0A 'type': %s, \0A}\00", align 1
@299 = private unnamed_addr constant [37 x i8] c"%s -no-pie %s /tmp/output.o %s -o %s\00", align 1
@300 = private unnamed_addr constant [8 x i8] c"llvm-ir\00", align 1
@301 = private unnamed_addr constant [8 x i8] c"llvm-bc\00", align 1
@302 = private unnamed_addr constant [4 x i8] c"obj\00", align 1
@303 = private unnamed_addr constant [4 x i8] c"asm\00", align 1

; Function Attrs: nofree
declare void @system(ptr nocapture noundef readonly) local_unnamed_addr #0

declare i64 @get_self_path(ptr, i64) local_unnamed_addr

define i64 @main(i64 %0, ptr nocapture readonly %1) local_unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %engine.i = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca %CodeGen, align 8
  %10 = alloca %TypeChecker, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %self_path = alloca [1024 x i8], align 1
  %13 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %13, ptr noundef nonnull align 8 dereferenceable(5) @20, i64 5, i1 false)
  %14 = tail call ptr @malloc(i32 24)
  store ptr %13, ptr %14, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %14, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i, align 4
  %15 = call i64 @get_self_path(ptr nonnull %self_path, i64 1024)
  %16 = alloca %FlagBool, align 8
  %17 = call ptr @malloc(i32 1)
  store i8 104, ptr %17, align 8
  %18 = call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  %memberidx1.i.i96 = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i96, align 4
  %memberidx2.i.i97 = getelementptr inbounds %String, ptr %18, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i97, align 4
  %19 = call ptr @malloc(i32 22)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %19, ptr noundef nonnull align 8 dereferenceable(22) @21, i64 22, i1 false)
  %20 = call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i.i98 = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 22, ptr %memberidx1.i.i98, align 4
  %memberidx2.i.i99 = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 22, ptr %memberidx2.i.i99, align 4
  store i64 1, ptr %16, align 8
  %memberidx1.i.i100 = getelementptr inbounds %Flag, ptr %16, i64 0, i32 1
  store ptr %18, ptr %memberidx1.i.i100, align 8
  %memberidx2.i.i101 = getelementptr inbounds %Flag, ptr %16, i64 0, i32 2
  store ptr %20, ptr %memberidx2.i.i101, align 8
  %21 = load i64, ptr @flags_length, align 8
  %22 = icmp slt i64 %21, 250
  br i1 %22, label %if.entry.i.i.i, label %FlagBool_constructor.exit

if.entry.i.i.i:                                   ; preds = %2
  %23 = add nsw i64 %21, 1
  store i64 %23, ptr @flags_length, align 8
  %24 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %21
  store ptr %16, ptr %24, align 8
  br label %FlagBool_constructor.exit

FlagBool_constructor.exit:                        ; preds = %2, %if.entry.i.i.i
  %memberidx.i = getelementptr inbounds %FlagBool, ptr %16, i64 0, i32 3
  store i1 false, ptr %memberidx.i, align 8
  %25 = alloca %FlagString, align 8
  %26 = call ptr @malloc(i32 5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %26, ptr noundef nonnull align 8 dereferenceable(5) @22, i64 5, i1 false)
  %27 = call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i102 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i102, align 4
  %memberidx2.i.i103 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i103, align 4
  %28 = call ptr @malloc(i32 275)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(275) %28, ptr noundef nonnull align 8 dereferenceable(275) @23, i64 275, i1 false)
  %29 = call ptr @malloc(i32 24)
  store ptr %28, ptr %29, align 8
  %memberidx1.i.i104 = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  store i64 275, ptr %memberidx1.i.i104, align 4
  %memberidx2.i.i105 = getelementptr inbounds %String, ptr %29, i64 0, i32 2
  store i64 275, ptr %memberidx2.i.i105, align 4
  %30 = call ptr @malloc(i32 4)
  store i32 1667594341, ptr %30, align 8
  %31 = call ptr @malloc(i32 24)
  store ptr %30, ptr %31, align 8
  %memberidx1.i.i106 = getelementptr inbounds %String, ptr %31, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i106, align 4
  %memberidx2.i.i107 = getelementptr inbounds %String, ptr %31, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i107, align 4
  store i64 2, ptr %25, align 8
  %memberidx1.i.i108 = getelementptr inbounds %Flag, ptr %25, i64 0, i32 1
  store ptr %27, ptr %memberidx1.i.i108, align 8
  %memberidx2.i.i109 = getelementptr inbounds %Flag, ptr %25, i64 0, i32 2
  store ptr %29, ptr %memberidx2.i.i109, align 8
  %32 = load i64, ptr @flags_length, align 8
  %33 = icmp slt i64 %32, 250
  br i1 %33, label %if.entry.i.i.i110, label %FlagString_constructor.exit

if.entry.i.i.i110:                                ; preds = %FlagBool_constructor.exit
  %34 = add nsw i64 %32, 1
  store i64 %34, ptr @flags_length, align 8
  %35 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %32
  store ptr %25, ptr %35, align 8
  br label %FlagString_constructor.exit

FlagString_constructor.exit:                      ; preds = %FlagBool_constructor.exit, %if.entry.i.i.i110
  %memberidx.i111 = getelementptr inbounds %FlagString, ptr %25, i64 0, i32 3
  store ptr %31, ptr %memberidx.i111, align 8
  %36 = alloca %FlagString, align 8
  %37 = call ptr @malloc(i32 1)
  store i8 111, ptr %37, align 8
  %38 = call ptr @malloc(i32 24)
  store ptr %37, ptr %38, align 8
  %memberidx1.i.i112 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i112, align 4
  %memberidx2.i.i113 = getelementptr inbounds %String, ptr %38, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i113, align 4
  %39 = call ptr @malloc(i32 35)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %39, ptr noundef nonnull align 8 dereferenceable(35) @24, i64 35, i1 false)
  %40 = call ptr @malloc(i32 24)
  store ptr %39, ptr %40, align 8
  %memberidx1.i.i114 = getelementptr inbounds %String, ptr %40, i64 0, i32 1
  store i64 35, ptr %memberidx1.i.i114, align 4
  %memberidx2.i.i115 = getelementptr inbounds %String, ptr %40, i64 0, i32 2
  store i64 35, ptr %memberidx2.i.i115, align 4
  %41 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %41, ptr noundef nonnull align 8 dereferenceable(6) @25, i64 6, i1 false)
  %42 = call ptr @malloc(i32 24)
  store ptr %41, ptr %42, align 8
  %memberidx1.i.i116 = getelementptr inbounds %String, ptr %42, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i116, align 4
  %memberidx2.i.i117 = getelementptr inbounds %String, ptr %42, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i117, align 4
  store i64 2, ptr %36, align 8
  %memberidx1.i.i118 = getelementptr inbounds %Flag, ptr %36, i64 0, i32 1
  store ptr %38, ptr %memberidx1.i.i118, align 8
  %memberidx2.i.i119 = getelementptr inbounds %Flag, ptr %36, i64 0, i32 2
  store ptr %40, ptr %memberidx2.i.i119, align 8
  %43 = load i64, ptr @flags_length, align 8
  %44 = icmp slt i64 %43, 250
  br i1 %44, label %if.entry.i.i.i120, label %FlagString_constructor.exit122

if.entry.i.i.i120:                                ; preds = %FlagString_constructor.exit
  %45 = add nsw i64 %43, 1
  store i64 %45, ptr @flags_length, align 8
  %46 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %43
  store ptr %36, ptr %46, align 8
  br label %FlagString_constructor.exit122

FlagString_constructor.exit122:                   ; preds = %FlagString_constructor.exit, %if.entry.i.i.i120
  %memberidx.i121 = getelementptr inbounds %FlagString, ptr %36, i64 0, i32 3
  store ptr %42, ptr %memberidx.i121, align 8
  %47 = alloca %FlagString, align 8
  %48 = call ptr @malloc(i32 1)
  store i8 73, ptr %48, align 8
  %49 = call ptr @malloc(i32 24)
  store ptr %48, ptr %49, align 8
  %memberidx1.i.i123 = getelementptr inbounds %String, ptr %49, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i123, align 4
  %memberidx2.i.i124 = getelementptr inbounds %String, ptr %49, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i124, align 4
  %50 = call ptr @malloc(i32 25)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(25) %50, ptr noundef nonnull align 8 dereferenceable(25) @26, i64 25, i1 false)
  %51 = call ptr @malloc(i32 24)
  store ptr %50, ptr %51, align 8
  %memberidx1.i.i125 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  store i64 25, ptr %memberidx1.i.i125, align 4
  %memberidx2.i.i126 = getelementptr inbounds %String, ptr %51, i64 0, i32 2
  store i64 25, ptr %memberidx2.i.i126, align 4
  %52 = trunc i64 %15 to i32
  %53 = call ptr @malloc(i32 %52)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %53, ptr nonnull align 8 %self_path, i64 %15, i1 false)
  %54 = call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i.i127 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %15, ptr %memberidx1.i.i127, align 4
  %memberidx2.i.i128 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %15, ptr %memberidx2.i.i128, align 4
  %55 = add i32 %52, 1
  %56 = call ptr @malloc(i32 %55)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %56, ptr align 8 %53, i64 %15, i1 false)
  %57 = getelementptr inbounds i8, ptr %56, i64 %15
  store i8 0, ptr %57, align 1
  %58 = call ptr @dirname(ptr %56)
  %59 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %58)
  %60 = trunc i64 %59 to i32
  %61 = call ptr @malloc(i32 %60)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %58, i64 %59, i1 false)
  %62 = call ptr @malloc(i32 24)
  store ptr %61, ptr %62, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  store i64 %59, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %62, i64 0, i32 2
  store i64 %59, ptr %memberidx2.i.i.i, align 4
  %63 = call ptr @malloc(i32 4)
  store i32 794978668, ptr %63, align 8
  %64 = call ptr @malloc(i32 24)
  store ptr %63, ptr %64, align 8
  %memberidx1.i.i129 = getelementptr inbounds %String, ptr %64, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i129, align 4
  %memberidx2.i.i130 = getelementptr inbounds %String, ptr %64, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i130, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12)
  %65 = add i32 %60, 1
  %66 = call ptr @malloc(i32 %65)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %66, ptr align 8 %61, i64 %59, i1 false)
  %67 = getelementptr inbounds i8, ptr %66, i64 %59
  store i8 0, ptr %67, align 1
  %68 = call ptr @malloc(i32 5)
  %69 = load i32, ptr %63, align 8
  store i32 %69, ptr %68, align 8
  %70 = getelementptr inbounds i8, ptr %68, i64 4
  store i8 0, ptr %70, align 1
  %71 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %12, ptr nonnull @8, ptr %66, ptr nonnull %68)
  %72 = load ptr, ptr %12, align 8
  %73 = call ptr @malloc(i32 24)
  store ptr %72, ptr %73, align 8
  %memberidx1.i.i132 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  store i64 %71, ptr %memberidx1.i.i132, align 4
  %memberidx2.i.i133 = getelementptr inbounds %String, ptr %73, i64 0, i32 2
  store i64 %71, ptr %memberidx2.i.i133, align 4
  call void @free(ptr %66)
  call void @free(ptr %68)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12)
  store i64 2, ptr %47, align 8
  %memberidx1.i.i134 = getelementptr inbounds %Flag, ptr %47, i64 0, i32 1
  store ptr %49, ptr %memberidx1.i.i134, align 8
  %memberidx2.i.i135 = getelementptr inbounds %Flag, ptr %47, i64 0, i32 2
  store ptr %51, ptr %memberidx2.i.i135, align 8
  %74 = load i64, ptr @flags_length, align 8
  %75 = icmp slt i64 %74, 250
  br i1 %75, label %if.entry.i.i.i136, label %FlagString_constructor.exit138

if.entry.i.i.i136:                                ; preds = %FlagString_constructor.exit122
  %76 = add nsw i64 %74, 1
  store i64 %76, ptr @flags_length, align 8
  %77 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %74
  store ptr %47, ptr %77, align 8
  br label %FlagString_constructor.exit138

FlagString_constructor.exit138:                   ; preds = %FlagString_constructor.exit122, %if.entry.i.i.i136
  %memberidx.i137 = getelementptr inbounds %FlagString, ptr %47, i64 0, i32 3
  store ptr %73, ptr %memberidx.i137, align 8
  %78 = alloca %FlagString, align 8
  %79 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %79, ptr noundef nonnull align 8 dereferenceable(7) @27, i64 7, i1 false)
  %80 = call ptr @malloc(i32 24)
  store ptr %79, ptr %80, align 8
  %memberidx1.i.i139 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i139, align 4
  %memberidx2.i.i140 = getelementptr inbounds %String, ptr %80, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i140, align 4
  %81 = call ptr @malloc(i32 33)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %81, ptr noundef nonnull align 8 dereferenceable(33) @28, i64 33, i1 false)
  %82 = call ptr @malloc(i32 24)
  store ptr %81, ptr %82, align 8
  %memberidx1.i.i141 = getelementptr inbounds %String, ptr %82, i64 0, i32 1
  store i64 33, ptr %memberidx1.i.i141, align 4
  %memberidx2.i.i142 = getelementptr inbounds %String, ptr %82, i64 0, i32 2
  store i64 33, ptr %memberidx2.i.i142, align 4
  %83 = call ptr @LLVMGetDefaultTargetTriple()
  %84 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %83)
  %85 = trunc i64 %84 to i32
  %86 = call ptr @malloc(i32 %85)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %86, ptr align 8 %83, i64 %84, i1 false)
  %87 = call ptr @malloc(i32 24)
  store ptr %86, ptr %87, align 8
  %memberidx1.i.i143 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  store i64 %84, ptr %memberidx1.i.i143, align 4
  %memberidx2.i.i144 = getelementptr inbounds %String, ptr %87, i64 0, i32 2
  store i64 %84, ptr %memberidx2.i.i144, align 4
  store i64 2, ptr %78, align 8
  %memberidx1.i.i145 = getelementptr inbounds %Flag, ptr %78, i64 0, i32 1
  store ptr %80, ptr %memberidx1.i.i145, align 8
  %memberidx2.i.i146 = getelementptr inbounds %Flag, ptr %78, i64 0, i32 2
  store ptr %82, ptr %memberidx2.i.i146, align 8
  %88 = load i64, ptr @flags_length, align 8
  %89 = icmp slt i64 %88, 250
  br i1 %89, label %if.entry.i.i.i147, label %FlagString_constructor.exit149

if.entry.i.i.i147:                                ; preds = %FlagString_constructor.exit138
  %90 = add nsw i64 %88, 1
  store i64 %90, ptr @flags_length, align 8
  %91 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %88
  store ptr %78, ptr %91, align 8
  br label %FlagString_constructor.exit149

FlagString_constructor.exit149:                   ; preds = %FlagString_constructor.exit138, %if.entry.i.i.i147
  %memberidx.i148 = getelementptr inbounds %FlagString, ptr %78, i64 0, i32 3
  store ptr %87, ptr %memberidx.i148, align 8
  %92 = alloca %FlagString, align 8
  %93 = call ptr @malloc(i32 1)
  store i8 108, ptr %93, align 8
  %94 = call ptr @malloc(i32 24)
  store ptr %93, ptr %94, align 8
  %memberidx1.i.i150 = getelementptr inbounds %String, ptr %94, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i150, align 4
  %memberidx2.i.i151 = getelementptr inbounds %String, ptr %94, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i151, align 4
  %95 = call ptr @malloc(i32 68)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %95, ptr noundef nonnull align 8 dereferenceable(68) @29, i64 68, i1 false)
  %96 = call ptr @malloc(i32 24)
  store ptr %95, ptr %96, align 8
  %memberidx1.i.i152 = getelementptr inbounds %String, ptr %96, i64 0, i32 1
  store i64 68, ptr %memberidx1.i.i152, align 4
  %memberidx2.i.i153 = getelementptr inbounds %String, ptr %96, i64 0, i32 2
  store i64 68, ptr %memberidx2.i.i153, align 4
  store i64 2, ptr %92, align 8
  %memberidx1.i.i154 = getelementptr inbounds %Flag, ptr %92, i64 0, i32 1
  store ptr %94, ptr %memberidx1.i.i154, align 8
  %memberidx2.i.i155 = getelementptr inbounds %Flag, ptr %92, i64 0, i32 2
  store ptr %96, ptr %memberidx2.i.i155, align 8
  %97 = load i64, ptr @flags_length, align 8
  %98 = icmp slt i64 %97, 250
  br i1 %98, label %if.entry.i.i.i156, label %FlagString_constructor.exit158

if.entry.i.i.i156:                                ; preds = %FlagString_constructor.exit149
  %99 = add nsw i64 %97, 1
  store i64 %99, ptr @flags_length, align 8
  %100 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %97
  store ptr %92, ptr %100, align 8
  br label %FlagString_constructor.exit158

FlagString_constructor.exit158:                   ; preds = %FlagString_constructor.exit149, %if.entry.i.i.i156
  %memberidx.i157 = getelementptr inbounds %FlagString, ptr %92, i64 0, i32 3
  store ptr null, ptr %memberidx.i157, align 8
  %101 = alloca %FlagInt, align 8
  %102 = call ptr @malloc(i32 1)
  store i8 79, ptr %102, align 8
  %103 = call ptr @malloc(i32 24)
  store ptr %102, ptr %103, align 8
  %memberidx1.i.i159 = getelementptr inbounds %String, ptr %103, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i159, align 4
  %memberidx2.i.i160 = getelementptr inbounds %String, ptr %103, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i160, align 4
  %104 = call ptr @malloc(i32 41)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(41) %104, ptr noundef nonnull align 8 dereferenceable(41) @30, i64 41, i1 false)
  %105 = call ptr @malloc(i32 24)
  store ptr %104, ptr %105, align 8
  %memberidx1.i.i161 = getelementptr inbounds %String, ptr %105, i64 0, i32 1
  store i64 41, ptr %memberidx1.i.i161, align 4
  %memberidx2.i.i162 = getelementptr inbounds %String, ptr %105, i64 0, i32 2
  store i64 41, ptr %memberidx2.i.i162, align 4
  store i64 0, ptr %101, align 8
  %memberidx1.i.i163 = getelementptr inbounds %Flag, ptr %101, i64 0, i32 1
  store ptr %103, ptr %memberidx1.i.i163, align 8
  %memberidx2.i.i164 = getelementptr inbounds %Flag, ptr %101, i64 0, i32 2
  store ptr %105, ptr %memberidx2.i.i164, align 8
  %106 = load i64, ptr @flags_length, align 8
  %107 = icmp slt i64 %106, 250
  br i1 %107, label %if.entry.i.i.i165, label %FlagInt_constructor.exit

if.entry.i.i.i165:                                ; preds = %FlagString_constructor.exit158
  %108 = add nsw i64 %106, 1
  store i64 %108, ptr @flags_length, align 8
  %109 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %106
  store ptr %101, ptr %109, align 8
  br label %FlagInt_constructor.exit

FlagInt_constructor.exit:                         ; preds = %FlagString_constructor.exit158, %if.entry.i.i.i165
  %memberidx.i166 = getelementptr inbounds %FlagInt, ptr %101, i64 0, i32 3
  store i64 1, ptr %memberidx.i166, align 8
  %110 = alloca %FlagBool, align 8
  %111 = call ptr @malloc(i32 1)
  store i8 118, ptr %111, align 8
  %112 = call ptr @malloc(i32 24)
  store ptr %111, ptr %112, align 8
  %memberidx1.i.i167 = getelementptr inbounds %String, ptr %112, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i167, align 4
  %memberidx2.i.i168 = getelementptr inbounds %String, ptr %112, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i168, align 4
  %113 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %113, ptr noundef nonnull align 8 dereferenceable(12) @31, i64 12, i1 false)
  %114 = call ptr @malloc(i32 24)
  store ptr %113, ptr %114, align 8
  %memberidx1.i.i169 = getelementptr inbounds %String, ptr %114, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i169, align 4
  %memberidx2.i.i170 = getelementptr inbounds %String, ptr %114, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i170, align 4
  store i64 1, ptr %110, align 8
  %memberidx1.i.i171 = getelementptr inbounds %Flag, ptr %110, i64 0, i32 1
  store ptr %112, ptr %memberidx1.i.i171, align 8
  %memberidx2.i.i172 = getelementptr inbounds %Flag, ptr %110, i64 0, i32 2
  store ptr %114, ptr %memberidx2.i.i172, align 8
  %115 = load i64, ptr @flags_length, align 8
  %116 = icmp slt i64 %115, 250
  br i1 %116, label %if.entry.i.i.i173, label %FlagBool_constructor.exit175

if.entry.i.i.i173:                                ; preds = %FlagInt_constructor.exit
  %117 = add nsw i64 %115, 1
  store i64 %117, ptr @flags_length, align 8
  %118 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %115
  store ptr %110, ptr %118, align 8
  br label %FlagBool_constructor.exit175

FlagBool_constructor.exit175:                     ; preds = %FlagInt_constructor.exit, %if.entry.i.i.i173
  %memberidx.i174 = getelementptr inbounds %FlagBool, ptr %110, i64 0, i32 3
  store i1 false, ptr %memberidx.i174, align 8
  %119 = call fastcc ptr @parse_flags(i64 %0, ptr %1)
  %120 = load i1, ptr %memberidx.i174, align 8
  br i1 %120, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_check.exit, %ifend20, %ifend15, %ifend33, %if.entry13, %if.entry9, %if.entry5, %if.entry2, %if.entry
  %common.ret.op = phi i64 [ 0, %if.entry ], [ 0, %if.entry2 ], [ 1, %if.entry5 ], [ 1, %if.entry9 ], [ 1, %if.entry13 ], [ %code.0, %ifend33 ], [ 1, %ifend15 ], [ 1, %ifend20 ], [ 1, %TypeChecker_check.exit ]
  ret i64 %common.ret.op

if.entry:                                         ; preds = %FlagBool_constructor.exit175
  %121 = call i64 @write(i64 1, ptr nonnull %13, i64 5)
  %122 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr nonnull %13)
  call void @free(ptr nonnull %14)
  br label %common.ret

ifend:                                            ; preds = %FlagBool_constructor.exit175
  %123 = load i1, ptr %memberidx.i, align 8
  br i1 %123, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %124 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %124, ptr noundef nonnull align 8 dereferenceable(7) @33, i64 7, i1 false)
  %125 = call ptr @malloc(i32 24)
  %126 = call i64 @write(i64 1, ptr %124, i64 7)
  call void @free(ptr %124)
  call void @free(ptr %125)
  %127 = load ptr, ptr %1, align 8
  %128 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %127)
  %129 = trunc i64 %128 to i32
  %130 = call ptr @malloc(i32 %129)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %130, ptr align 8 %127, i64 %128, i1 false)
  %131 = call ptr @malloc(i32 24)
  %132 = call i64 @write(i64 1, ptr %130, i64 %128)
  call void @free(ptr %130)
  call void @free(ptr %131)
  %133 = call ptr @malloc(i32 29)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %133, ptr noundef nonnull align 8 dereferenceable(29) @34, i64 29, i1 false)
  %134 = call ptr @malloc(i32 24)
  %135 = call i64 @write(i64 1, ptr %133, i64 29)
  %136 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %133)
  call void @free(ptr %134)
  call fastcc void @print_flags()
  br label %common.ret

ifend4:                                           ; preds = %ifend
  %137 = icmp eq ptr %119, null
  br i1 %137, label %if.entry5, label %for.body.i.i.lr.ph

if.entry5:                                        ; preds = %ifend4
  %138 = call ptr @malloc(i32 24)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %138, ptr noundef nonnull align 8 dereferenceable(24) @37, i64 24, i1 false)
  %139 = call ptr @malloc(i32 24)
  store ptr %138, ptr %139, align 8
  %memberidx1.i.i185 = getelementptr inbounds %String, ptr %139, i64 0, i32 1
  store i64 24, ptr %memberidx1.i.i185, align 4
  %memberidx2.i.i186 = getelementptr inbounds %String, ptr %139, i64 0, i32 2
  store i64 24, ptr %memberidx2.i.i186, align 4
  call fastcc void @print_message_error(i64 4, ptr nonnull %139)
  br label %common.ret

for.body.i.i.lr.ph:                               ; preds = %ifend4
  %140 = tail call ptr @malloc(i32 56)
  %memberidx.i187 = getelementptr inbounds %Compiler, ptr %140, i64 0, i32 4
  %141 = call ptr @malloc(i32 24)
  %memberidx.i.i188 = getelementptr inbounds %Array_FloFile_, ptr %141, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i188, align 4
  %memberidx1.i.i189 = getelementptr inbounds %Array_FloFile_, ptr %141, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i189, align 4
  %142 = call ptr @malloc(i32 64)
  store ptr %142, ptr %141, align 8
  store i64 0, ptr %memberidx.i.i188, align 4
  store ptr %141, ptr %memberidx.i187, align 8
  store ptr null, ptr %140, align 8
  %memberidx4.i = getelementptr inbounds %Compiler, ptr %140, i64 0, i32 2
  store ptr null, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Compiler, ptr %140, i64 0, i32 5
  %143 = call ptr @malloc(i32 24)
  %memberidx.i13.i = getelementptr inbounds %Array_FloError_, ptr %143, i64 0, i32 1
  store i64 0, ptr %memberidx.i13.i, align 4
  %memberidx1.i14.i = getelementptr inbounds %Array_FloError_, ptr %143, i64 0, i32 2
  store i64 8, ptr %memberidx1.i14.i, align 4
  %144 = call ptr @malloc(i32 64)
  store ptr %144, ptr %143, align 8
  store i64 0, ptr %memberidx.i13.i, align 4
  store ptr %143, ptr %memberidx5.i, align 8
  %memberidx8.i = getelementptr inbounds %Compiler, ptr %140, i64 0, i32 6
  %145 = call ptr @malloc(i32 24)
  %146 = call ptr @malloc(i32 2048)
  store ptr %146, ptr %145, align 8
  %147 = call ptr @malloc(i32 16)
  store i64 0, ptr %147, align 4
  %memberidx1.i.i.i190 = getelementptr inbounds %Range, ptr %147, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i.i190, align 4
  %148 = call ptr @malloc(i32 17)
  %memberidx.i.i.i.i = getelementptr inbounds %RangeIterator, ptr %148, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %RangeIterator, ptr %148, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i.i, align 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.lr.ph, %for.body.i.i
  %149 = phi i64 [ 1, %for.body.i.i.lr.ph ], [ %154, %for.body.i.i ]
  %150 = phi i64 [ 0, %for.body.i.i.lr.ph ], [ %149, %for.body.i.i ]
  %151 = load ptr, ptr %145, align 8
  %152 = getelementptr inbounds ptr, ptr %151, i64 %150
  store ptr null, ptr %152, align 8
  %153 = icmp ugt i64 %149, 255
  %154 = add nuw nsw i64 %149, 1
  br i1 %153, label %Compiler_constructor.exit, label %for.body.i.i

Compiler_constructor.exit:                        ; preds = %for.body.i.i
  call void @free(ptr nonnull %148)
  %memberidx3.i.i = getelementptr inbounds %Map_String_FileId_, ptr %145, i64 0, i32 1
  store i64 256, ptr %memberidx3.i.i, align 4
  %memberidx4.i.i = getelementptr inbounds %Map_String_FileId_, ptr %145, i64 0, i32 2
  store i64 0, ptr %memberidx4.i.i, align 4
  store ptr %145, ptr %memberidx8.i, align 8
  %155 = load ptr, ptr %memberidx.i137, align 8
  %memberidx.i.i.i192 = getelementptr inbounds %String, ptr %155, i64 0, i32 1
  %156 = load i64, ptr %memberidx.i.i.i192, align 4
  %157 = trunc i64 %156 to i32
  %158 = add i32 %157, 1
  %159 = call ptr @malloc(i32 %158)
  %160 = load ptr, ptr %155, align 8
  %161 = load i64, ptr %memberidx.i.i.i192, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %159, ptr align 8 %160, i64 %161, i1 false)
  %162 = getelementptr inbounds i8, ptr %159, i64 %161
  store i8 0, ptr %162, align 1
  %163 = call i64 @access(ptr %159, i64 0)
  %164 = icmp eq i64 %163, 0
  call void @free(ptr %159)
  br i1 %164, label %ifend.i, label %if.entry9

ifend.i:                                          ; preds = %Compiler_constructor.exit
  %memberidx.i193 = getelementptr inbounds %Compiler, ptr %140, i64 0, i32 1
  store ptr %155, ptr %memberidx.i193, align 8
  %165 = call ptr @malloc(i32 21)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %165, ptr noundef nonnull align 8 dereferenceable(21) @7, i64 21, i1 false)
  %166 = call ptr @malloc(i32 24)
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %140, i64 0, i32 3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  %167 = load i64, ptr %memberidx.i.i.i192, align 4
  %168 = trunc i64 %167 to i32
  %169 = add i32 %168, 1
  %170 = call ptr @malloc(i32 %169)
  %171 = load ptr, ptr %155, align 8
  %172 = load i64, ptr %memberidx.i.i.i192, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %170, ptr align 8 %171, i64 %172, i1 false)
  %173 = getelementptr inbounds i8, ptr %170, i64 %172
  store i8 0, ptr %173, align 1
  %174 = call ptr @malloc(i32 22)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %174, ptr noundef nonnull align 8 dereferenceable(21) %165, i64 21, i1 false)
  %175 = getelementptr inbounds i8, ptr %174, i64 21
  store i8 0, ptr %175, align 1
  %176 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %11, ptr nonnull @8, ptr %170, ptr %174)
  %177 = load ptr, ptr %11, align 8
  %178 = call ptr @malloc(i32 24)
  store ptr %177, ptr %178, align 8
  %memberidx1.i.i7.i = getelementptr inbounds %String, ptr %178, i64 0, i32 1
  store i64 %176, ptr %memberidx1.i.i7.i, align 4
  %memberidx2.i.i8.i = getelementptr inbounds %String, ptr %178, i64 0, i32 2
  store i64 %176, ptr %memberidx2.i.i8.i, align 4
  call void @free(ptr %170)
  call void @free(ptr %174)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  store ptr %178, ptr %memberidx1.i, align 8
  call void @free(ptr %165)
  call void @free(ptr %166)
  %179 = call fastcc ptr @Compiler_register_file(ptr nonnull %140, ptr nonnull %119)
  %180 = call fastcc i1 @Compiler_set_current_file(ptr nonnull %140, ptr %179)
  br i1 %180, label %ifend15, label %if.entry13

if.entry9:                                        ; preds = %Compiler_constructor.exit
  %181 = load ptr, ptr %memberidx.i137, align 8
  %memberidx.i196 = getelementptr inbounds %String, ptr %181, i64 0, i32 1
  %182 = load i64, ptr %memberidx.i196, align 4
  %183 = trunc i64 %182 to i32
  %184 = add i32 %183, 1
  %185 = call ptr @malloc(i32 %184)
  %186 = load ptr, ptr %181, align 8
  %187 = load i64, ptr %memberidx.i196, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %185, ptr align 8 %186, i64 %187, i1 false)
  %188 = getelementptr inbounds i8, ptr %185, i64 %187
  store i8 0, ptr %188, align 1
  %189 = alloca ptr, align 8
  %190 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %189, ptr nonnull @38, ptr %185)
  %191 = load ptr, ptr %189, align 8
  %192 = tail call ptr @malloc(i32 24)
  store ptr %191, ptr %192, align 8
  %memberidx1.i197 = getelementptr inbounds %String, ptr %192, i64 0, i32 1
  store i64 %190, ptr %memberidx1.i197, align 4
  %memberidx2.i198 = getelementptr inbounds %String, ptr %192, i64 0, i32 2
  store i64 %190, ptr %memberidx2.i198, align 4
  tail call void @free(ptr %185)
  call fastcc void @print_message_error(i64 3, ptr nonnull %192)
  br label %common.ret

if.entry13:                                       ; preds = %ifend.i
  %memberidx.i199 = getelementptr inbounds %String, ptr %119, i64 0, i32 1
  %193 = load i64, ptr %memberidx.i199, align 4
  %194 = trunc i64 %193 to i32
  %195 = add i32 %194, 1
  %196 = call ptr @malloc(i32 %195)
  %197 = load ptr, ptr %119, align 8
  %198 = load i64, ptr %memberidx.i199, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %196, ptr align 8 %197, i64 %198, i1 false)
  %199 = getelementptr inbounds i8, ptr %196, i64 %198
  store i8 0, ptr %199, align 1
  %200 = alloca ptr, align 8
  %201 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %200, ptr nonnull @39, ptr %196)
  %202 = load ptr, ptr %200, align 8
  %203 = tail call ptr @malloc(i32 24)
  store ptr %202, ptr %203, align 8
  %memberidx1.i200 = getelementptr inbounds %String, ptr %203, i64 0, i32 1
  store i64 %201, ptr %memberidx1.i200, align 4
  %memberidx2.i201 = getelementptr inbounds %String, ptr %203, i64 0, i32 2
  store i64 %201, ptr %memberidx2.i201, align 4
  tail call void @free(ptr %196)
  call fastcc void @print_message_error(i64 3, ptr nonnull %203)
  br label %common.ret

ifend15:                                          ; preds = %ifend.i
  %204 = load ptr, ptr %memberidx4.i, align 8
  %205 = load ptr, ptr %memberidx5.i, align 8
  %206 = call fastcc ptr @Lexer_tokenize(ptr %204, ptr %205)
  %207 = call fastcc i1 @Compiler_print_errors(ptr nonnull %140)
  br i1 %207, label %common.ret, label %ifend20

ifend20:                                          ; preds = %ifend15
  %208 = load ptr, ptr %memberidx5.i, align 8
  %209 = call fastcc ptr @Parser_parse(ptr %206, ptr %208)
  %210 = call fastcc i1 @Compiler_print_errors(ptr nonnull %140)
  br i1 %210, label %common.ret, label %for.body.i.i.i.lr.ph

for.body.i.i.i.lr.ph:                             ; preds = %ifend20
  call void @llvm.lifetime.start.p0(i64 58, ptr nonnull %10)
  %memberidx.i.i202 = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 5
  store ptr %140, ptr %memberidx.i.i202, align 8
  %memberidx1.i.i203 = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 6
  store i1 false, ptr %memberidx1.i.i203, align 8
  %211 = call ptr @malloc(i32 8)
  %212 = call ptr @malloc(i32 24)
  %memberidx.i.i.i.i204 = getelementptr inbounds %Array_Module_, ptr %212, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i.i204, align 4
  %memberidx1.i.i.i.i205 = getelementptr inbounds %Array_Module_, ptr %212, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i.i205, align 4
  %213 = call ptr @malloc(i32 64)
  store ptr %213, ptr %212, align 8
  store i64 0, ptr %memberidx.i.i.i.i204, align 4
  store ptr %212, ptr %211, align 8
  store ptr %211, ptr %10, align 8
  %memberidx3.i.i207 = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 8
  %214 = call ptr @malloc(i32 24)
  %215 = call ptr @malloc(i32 2048)
  store ptr %215, ptr %214, align 8
  %216 = call ptr @malloc(i32 16)
  store i64 0, ptr %216, align 4
  %memberidx1.i.i7.i.i = getelementptr inbounds %Range, ptr %216, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i7.i.i, align 4
  %217 = call ptr @malloc(i32 17)
  %memberidx.i.i.i.i.i = getelementptr inbounds %RangeIterator, ptr %217, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i.i.i, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %RangeIterator, ptr %217, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i.i.i, align 4
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.lr.ph, %for.body.i.i.i
  %218 = phi i64 [ 1, %for.body.i.i.i.lr.ph ], [ %223, %for.body.i.i.i ]
  %219 = phi i64 [ 0, %for.body.i.i.i.lr.ph ], [ %218, %for.body.i.i.i ]
  %220 = load ptr, ptr %214, align 8
  %221 = getelementptr inbounds ptr, ptr %220, i64 %219
  store ptr null, ptr %221, align 8
  %222 = icmp ugt i64 %218, 255
  %223 = add nuw nsw i64 %218, 1
  br i1 %222, label %TypeChecker_constructor.exit.i, label %for.body.i.i.i

TypeChecker_constructor.exit.i:                   ; preds = %for.body.i.i.i
  call void @free(ptr nonnull %217)
  %memberidx3.i.i.i = getelementptr inbounds %Map_String_Generic_, ptr %214, i64 0, i32 1
  store i64 256, ptr %memberidx3.i.i.i, align 4
  %memberidx4.i.i.i = getelementptr inbounds %Map_String_Generic_, ptr %214, i64 0, i32 2
  store i64 0, ptr %memberidx4.i.i.i, align 4
  store ptr %214, ptr %memberidx3.i.i207, align 8
  %224 = load ptr, ptr %memberidx.i.i202, align 8
  %225 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %225, ptr noundef nonnull align 8 dereferenceable(12) @99, i64 12, i1 false)
  %226 = call ptr @malloc(i32 24)
  store ptr %225, ptr %226, align 8
  %memberidx1.i.i.i17.i = getelementptr inbounds %String, ptr %226, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i.i17.i, align 4
  %memberidx2.i.i.i18.i = getelementptr inbounds %String, ptr %226, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i.i18.i, align 4
  %227 = call fastcc ptr @Compiler_register_file(ptr %224, ptr nonnull %226)
  %228 = call ptr @malloc(i32 56)
  call fastcc void @ModuleAST_constructor(ptr %228)
  %229 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %229, ptr noundef nonnull align 8 dereferenceable(12) @99, i64 12, i1 false)
  %230 = call ptr @malloc(i32 24)
  store ptr %229, ptr %230, align 8
  %memberidx1.i.i4.i.i = getelementptr inbounds %String, ptr %230, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i4.i.i, align 4
  %memberidx2.i.i5.i.i = getelementptr inbounds %String, ptr %230, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i5.i.i, align 4
  %231 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %10, ptr %228, ptr nonnull %230)
  %memberidx1.i19.i = getelementptr inbounds %Module, ptr %231, i64 0, i32 5
  %232 = load ptr, ptr %memberidx1.i19.i, align 8
  %233 = load i64, ptr %232, align 4
  store i64 %233, ptr @GENERIC_MODULE_ID, align 8
  %234 = load ptr, ptr %memberidx.i.i202, align 8
  %memberidx1.i21.i = getelementptr inbounds %Compiler, ptr %234, i64 0, i32 3
  %235 = load ptr, ptr %memberidx1.i21.i, align 8
  %236 = call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr nonnull %10, ptr %235, ptr null)
  %.not.i.i = icmp eq ptr %236, null
  br i1 %.not.i.i, label %TypeChecker_load_builtins_module.exit.i, label %if.entry.i.i

if.entry.i.i:                                     ; preds = %TypeChecker_constructor.exit.i
  %memberidx2.i.i208 = getelementptr inbounds %Module, ptr %236, i64 0, i32 5
  %237 = load ptr, ptr %memberidx2.i.i208, align 8
  %238 = load i64, ptr %237, align 4
  store i64 %238, ptr @BUILTIN_MODULE_ID, align 8
  br label %TypeChecker_load_builtins_module.exit.i

TypeChecker_load_builtins_module.exit.i:          ; preds = %if.entry.i.i, %TypeChecker_constructor.exit.i
  %239 = load ptr, ptr %memberidx.i.i202, align 8
  %memberidx1.i23.i = getelementptr inbounds %Compiler, ptr %239, i64 0, i32 5
  %240 = load ptr, ptr %memberidx1.i23.i, align 8
  %memberidx2.i24.i = getelementptr inbounds %Array_FloError_, ptr %240, i64 0, i32 1
  %241 = load i64, ptr %memberidx2.i24.i, align 4
  %242 = icmp sgt i64 %241, 0
  br i1 %242, label %TypeChecker_check.exit, label %ifend.i209

ifend.i209:                                       ; preds = %TypeChecker_load_builtins_module.exit.i
  %memberidx.i25.i = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 4
  %243 = load i64, ptr @GENERIC_MODULE_ID, align 8
  %244 = load ptr, ptr %10, align 8
  %245 = load ptr, ptr %244, align 8
  %246 = load ptr, ptr %245, align 8
  %247 = getelementptr inbounds ptr, ptr %246, i64 %243
  %248 = load ptr, ptr %247, align 8
  %memberidx1.i26.i = getelementptr inbounds %Module, ptr %248, i64 0, i32 5
  %249 = load ptr, ptr %memberidx1.i26.i, align 8
  store ptr %249, ptr %memberidx.i25.i, align 8
  %250 = load i64, ptr @BUILTIN_MODULE_ID, align 8
  %251 = load ptr, ptr %244, align 8
  %252 = load ptr, ptr %251, align 8
  %253 = getelementptr inbounds ptr, ptr %252, i64 %250
  %254 = load ptr, ptr %253, align 8
  call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %10, ptr %254)
  %255 = load ptr, ptr %memberidx.i.i202, align 8
  %memberidx1.i28.i = getelementptr inbounds %Compiler, ptr %255, i64 0, i32 5
  %256 = load ptr, ptr %memberidx1.i28.i, align 8
  %memberidx2.i29.i = getelementptr inbounds %Array_FloError_, ptr %256, i64 0, i32 1
  %257 = load i64, ptr %memberidx2.i29.i, align 4
  %258 = icmp sgt i64 %257, 0
  br i1 %258, label %TypeChecker_check.exit, label %ifend3.i

ifend3.i:                                         ; preds = %ifend.i209
  %259 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %10, ptr %209, ptr nonnull %119)
  br label %TypeChecker_check.exit

TypeChecker_check.exit:                           ; preds = %ifend.i209, %TypeChecker_load_builtins_module.exit.i, %ifend3.i
  %common.ret.op.i = load ptr, ptr %10, align 8
  call void @llvm.lifetime.end.p0(i64 58, ptr nonnull %10)
  %260 = call fastcc i1 @Compiler_print_errors(ptr nonnull %140)
  br i1 %260, label %common.ret, label %for.body.i.i.i214.lr.ph

for.body.i.i.i214.lr.ph:                          ; preds = %TypeChecker_check.exit
  call void @llvm.lifetime.start.p0(i64 81, ptr nonnull %9)
  %261 = load ptr, ptr %common.ret.op.i, align 8
  %262 = load ptr, ptr %261, align 8
  %263 = getelementptr inbounds ptr, ptr %262, i64 2
  %264 = load ptr, ptr %263, align 8
  %265 = load ptr, ptr %264, align 8
  %memberidx.i.i210 = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 4
  store ptr %common.ret.op.i, ptr %memberidx.i.i210, align 8
  %memberidx1.i51.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 6
  %266 = call ptr @malloc(i32 24)
  %267 = call ptr @malloc(i32 2048)
  store ptr %267, ptr %266, align 8
  %268 = call ptr @malloc(i32 16)
  store i64 0, ptr %268, align 4
  %memberidx1.i.i.i52.i = getelementptr inbounds %Range, ptr %268, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i.i52.i, align 4
  %269 = call ptr @malloc(i32 17)
  %memberidx.i.i.i.i53.i = getelementptr inbounds %RangeIterator, ptr %269, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i.i53.i, align 4
  %memberidx1.i.i.i.i54.i = getelementptr inbounds %RangeIterator, ptr %269, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i.i54.i, align 4
  br label %for.body.i.i.i214

for.body.i.i.i214:                                ; preds = %for.body.i.i.i214.lr.ph, %for.body.i.i.i214
  %270 = phi i64 [ 1, %for.body.i.i.i214.lr.ph ], [ %275, %for.body.i.i.i214 ]
  %271 = phi i64 [ 0, %for.body.i.i.i214.lr.ph ], [ %270, %for.body.i.i.i214 ]
  %272 = load ptr, ptr %266, align 8
  %273 = getelementptr inbounds ptr, ptr %272, i64 %271
  store ptr null, ptr %273, align 8
  %274 = icmp ugt i64 %270, 255
  %275 = add nuw nsw i64 %270, 1
  br i1 %274, label %for.body.i26.i.i.lr.ph, label %for.body.i.i.i214

for.body.i26.i.i.lr.ph:                           ; preds = %for.body.i.i.i214
  call void @free(ptr nonnull %269)
  %memberidx3.i.i.i215 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %266, i64 0, i32 1
  store i64 256, ptr %memberidx3.i.i.i215, align 4
  %memberidx4.i.i.i216 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %266, i64 0, i32 2
  store i64 0, ptr %memberidx4.i.i.i216, align 4
  store ptr %266, ptr %memberidx1.i51.i, align 8
  %memberidx2.i.i217 = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 7
  %276 = call ptr @malloc(i32 24)
  %277 = call ptr @malloc(i32 2048)
  store ptr %277, ptr %276, align 8
  %278 = call ptr @malloc(i32 16)
  store i64 0, ptr %278, align 4
  %memberidx1.i.i19.i.i = getelementptr inbounds %Range, ptr %278, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i19.i.i, align 4
  %279 = call ptr @malloc(i32 17)
  %memberidx.i.i.i21.i.i = getelementptr inbounds %RangeIterator, ptr %279, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i21.i.i, align 4
  %memberidx1.i.i.i22.i.i = getelementptr inbounds %RangeIterator, ptr %279, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i22.i.i, align 4
  br label %for.body.i26.i.i

for.body.i26.i.i:                                 ; preds = %for.body.i26.i.i.lr.ph, %for.body.i26.i.i
  %280 = phi i64 [ 1, %for.body.i26.i.i.lr.ph ], [ %285, %for.body.i26.i.i ]
  %281 = phi i64 [ 0, %for.body.i26.i.i.lr.ph ], [ %280, %for.body.i26.i.i ]
  %282 = load ptr, ptr %276, align 8
  %283 = getelementptr inbounds ptr, ptr %282, i64 %281
  store ptr null, ptr %283, align 8
  %284 = icmp ugt i64 %280, 255
  %285 = add nuw nsw i64 %280, 1
  br i1 %284, label %for.body.i37.i.i.lr.ph, label %for.body.i26.i.i

for.body.i37.i.i.lr.ph:                           ; preds = %for.body.i26.i.i
  call void @free(ptr nonnull %279)
  %memberidx3.i27.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %276, i64 0, i32 1
  store i64 256, ptr %memberidx3.i27.i.i, align 4
  %memberidx4.i28.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %276, i64 0, i32 2
  store i64 0, ptr %memberidx4.i28.i.i, align 4
  store ptr %276, ptr %memberidx2.i.i217, align 8
  %memberidx3.i.i218 = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 8
  %286 = call ptr @malloc(i32 24)
  %287 = call ptr @malloc(i32 2048)
  store ptr %287, ptr %286, align 8
  %288 = call ptr @malloc(i32 16)
  store i64 0, ptr %288, align 4
  %memberidx1.i.i30.i.i = getelementptr inbounds %Range, ptr %288, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i30.i.i, align 4
  %289 = call ptr @malloc(i32 17)
  %memberidx.i.i.i32.i.i = getelementptr inbounds %RangeIterator, ptr %289, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i32.i.i, align 4
  %memberidx1.i.i.i33.i.i = getelementptr inbounds %RangeIterator, ptr %289, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i33.i.i, align 4
  br label %for.body.i37.i.i

for.body.i37.i.i:                                 ; preds = %for.body.i37.i.i.lr.ph, %for.body.i37.i.i
  %290 = phi i64 [ 1, %for.body.i37.i.i.lr.ph ], [ %295, %for.body.i37.i.i ]
  %291 = phi i64 [ 0, %for.body.i37.i.i.lr.ph ], [ %290, %for.body.i37.i.i ]
  %292 = load ptr, ptr %286, align 8
  %293 = getelementptr inbounds ptr, ptr %292, i64 %291
  store ptr null, ptr %293, align 8
  %294 = icmp ugt i64 %290, 255
  %295 = add nuw nsw i64 %290, 1
  br i1 %294, label %for.body.i47.i.i.lr.ph, label %for.body.i37.i.i

for.body.i47.i.i.lr.ph:                           ; preds = %for.body.i37.i.i
  call void @free(ptr nonnull %289)
  %memberidx3.i38.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %286, i64 0, i32 1
  store i64 256, ptr %memberidx3.i38.i.i, align 4
  %memberidx4.i39.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %286, i64 0, i32 2
  store i64 0, ptr %memberidx4.i39.i.i, align 4
  store ptr %286, ptr %memberidx3.i.i218, align 8
  %memberidx4.i.i219 = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 9
  %296 = call ptr @malloc(i32 24)
  %297 = call ptr @malloc(i32 2048)
  store ptr %297, ptr %296, align 8
  %298 = call ptr @malloc(i32 16)
  store i64 0, ptr %298, align 4
  %memberidx1.i.i40.i.i = getelementptr inbounds %Range, ptr %298, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i40.i.i, align 4
  %299 = call ptr @malloc(i32 17)
  %memberidx.i.i.i42.i.i = getelementptr inbounds %RangeIterator, ptr %299, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i42.i.i, align 4
  %memberidx1.i.i.i43.i.i = getelementptr inbounds %RangeIterator, ptr %299, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i43.i.i, align 4
  br label %for.body.i47.i.i

for.body.i47.i.i:                                 ; preds = %for.body.i47.i.i.lr.ph, %for.body.i47.i.i
  %300 = phi i64 [ 1, %for.body.i47.i.i.lr.ph ], [ %305, %for.body.i47.i.i ]
  %301 = phi i64 [ 0, %for.body.i47.i.i.lr.ph ], [ %300, %for.body.i47.i.i ]
  %302 = load ptr, ptr %296, align 8
  %303 = getelementptr inbounds ptr, ptr %302, i64 %301
  store ptr null, ptr %303, align 8
  %304 = icmp ugt i64 %300, 255
  %305 = add nuw nsw i64 %300, 1
  br i1 %304, label %for.body.i57.i.i.lr.ph, label %for.body.i47.i.i

for.body.i57.i.i.lr.ph:                           ; preds = %for.body.i47.i.i
  call void @free(ptr nonnull %299)
  %memberidx3.i48.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %296, i64 0, i32 1
  store i64 256, ptr %memberidx3.i48.i.i, align 4
  %memberidx4.i49.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %296, i64 0, i32 2
  store i64 0, ptr %memberidx4.i49.i.i, align 4
  store ptr %296, ptr %memberidx4.i.i219, align 8
  %memberidx5.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 10
  %306 = call ptr @malloc(i32 24)
  %307 = call ptr @malloc(i32 2048)
  store ptr %307, ptr %306, align 8
  %308 = call ptr @malloc(i32 16)
  store i64 0, ptr %308, align 4
  %memberidx1.i.i50.i.i = getelementptr inbounds %Range, ptr %308, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i50.i.i, align 4
  %309 = call ptr @malloc(i32 17)
  %memberidx.i.i.i52.i.i = getelementptr inbounds %RangeIterator, ptr %309, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i52.i.i, align 4
  %memberidx1.i.i.i53.i.i = getelementptr inbounds %RangeIterator, ptr %309, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i53.i.i, align 4
  br label %for.body.i57.i.i

for.body.i57.i.i:                                 ; preds = %for.body.i57.i.i.lr.ph, %for.body.i57.i.i
  %310 = phi i64 [ 1, %for.body.i57.i.i.lr.ph ], [ %315, %for.body.i57.i.i ]
  %311 = phi i64 [ 0, %for.body.i57.i.i.lr.ph ], [ %310, %for.body.i57.i.i ]
  %312 = load ptr, ptr %306, align 8
  %313 = getelementptr inbounds ptr, ptr %312, i64 %311
  store ptr null, ptr %313, align 8
  %314 = icmp ugt i64 %310, 255
  %315 = add nuw nsw i64 %310, 1
  br i1 %314, label %CodeGen_constructor.exit.i, label %for.body.i57.i.i

CodeGen_constructor.exit.i:                       ; preds = %for.body.i57.i.i
  call void @free(ptr nonnull %309)
  %memberidx3.i58.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %306, i64 0, i32 1
  store i64 256, ptr %memberidx3.i58.i.i, align 4
  %memberidx4.i59.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %306, i64 0, i32 2
  store i64 0, ptr %memberidx4.i59.i.i, align 4
  store ptr %306, ptr %memberidx5.i.i, align 8
  %memberidx6.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 5
  store i1 true, ptr %memberidx6.i.i, align 8
  %memberidx8.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 2
  %memberidx.i.i56.i = getelementptr inbounds %String, ptr %265, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx8.i.i, i8 0, i64 16, i1 false)
  %316 = load i64, ptr %memberidx.i.i56.i, align 4
  %317 = trunc i64 %316 to i32
  %318 = add i32 %317, 1
  %319 = call ptr @malloc(i32 %318)
  %320 = load ptr, ptr %265, align 8
  %321 = load i64, ptr %memberidx.i.i56.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %319, ptr align 8 %320, i64 %321, i1 false)
  %322 = getelementptr inbounds i8, ptr %319, i64 %321
  store i8 0, ptr %322, align 1
  %323 = call ptr @LLVMModuleCreateWithName(ptr %319)
  store ptr %323, ptr %9, align 8
  %memberidx3.i = getelementptr inbounds %Module, ptr %264, i64 0, i32 6
  %324 = load ptr, ptr %memberidx3.i, align 8
  %325 = call ptr @malloc(i32 25)
  %326 = load ptr, ptr %324, align 8
  %memberidx1.i57.i = getelementptr inbounds %Array_Enum_, ptr %324, i64 0, i32 1
  %327 = load i64, ptr %memberidx1.i57.i, align 4
  store i1 false, ptr %325, align 1
  %memberidx1.i.i.i220 = getelementptr inbounds %ArrayIterator_Enum_, ptr %325, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i220, align 4
  %memberidx2.i.i.i221 = getelementptr inbounds %ArrayIterator_Enum_, ptr %325, i64 0, i32 3
  store ptr %326, ptr %memberidx2.i.i.i221, align 8
  %memberidx3.i.i58.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %325, i64 0, i32 2
  store i64 %327, ptr %memberidx3.i.i58.i, align 4
  %328 = icmp slt i64 %327, 1
  br i1 %328, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %CodeGen_constructor.exit.i, %for.body.i
  %.in = phi ptr [ %332, %for.body.i ], [ %326, %CodeGen_constructor.exit.i ]
  %329 = phi i64 [ %331, %for.body.i ], [ 1, %CodeGen_constructor.exit.i ]
  %330 = load ptr, ptr %.in, align 8
  call fastcc void @CodeGen_declare_enum(ptr nonnull %9, ptr %330)
  %331 = add nuw nsw i64 %329, 1
  %332 = getelementptr inbounds ptr, ptr %326, i64 %329
  %.not569 = icmp slt i64 %329, %327
  br i1 %.not569, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %CodeGen_constructor.exit.i
  call void @free(ptr nonnull %325)
  %memberidx9.i = getelementptr inbounds %Module, ptr %264, i64 0, i32 3
  %333 = load ptr, ptr %memberidx9.i, align 8
  %334 = call ptr @malloc(i32 25)
  %335 = load ptr, ptr %333, align 8
  %memberidx1.i62.i = getelementptr inbounds %Array_Class_, ptr %333, i64 0, i32 1
  %336 = load i64, ptr %memberidx1.i62.i, align 4
  store i1 false, ptr %334, align 1
  %memberidx1.i.i63.i = getelementptr inbounds %ArrayIterator_Class_, ptr %334, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i63.i, align 4
  %memberidx2.i.i64.i = getelementptr inbounds %ArrayIterator_Class_, ptr %334, i64 0, i32 3
  store ptr %335, ptr %memberidx2.i.i64.i, align 8
  %memberidx3.i.i65.i = getelementptr inbounds %ArrayIterator_Class_, ptr %334, i64 0, i32 2
  store i64 %336, ptr %memberidx3.i.i65.i, align 4
  %337 = icmp slt i64 %336, 1
  br i1 %337, label %for.end8.i, label %for.body7.i

for.body7.i:                                      ; preds = %for.end.i, %for.body7.i
  %.in487 = phi ptr [ %341, %for.body7.i ], [ %335, %for.end.i ]
  %338 = phi i64 [ %340, %for.body7.i ], [ 1, %for.end.i ]
  %339 = load ptr, ptr %.in487, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %9, ptr %339)
  %340 = add nuw nsw i64 %338, 1
  %341 = getelementptr inbounds ptr, ptr %335, i64 %338
  %.not570 = icmp slt i64 %338, %336
  br i1 %.not570, label %for.body7.i, label %for.end8.i

for.end8.i:                                       ; preds = %for.body7.i, %for.end.i
  call void @free(ptr nonnull %334)
  %memberidx15.i = getelementptr inbounds %Module, ptr %264, i64 0, i32 8
  %342 = load ptr, ptr %memberidx15.i, align 8
  %343 = call ptr @malloc(i32 25)
  %344 = load ptr, ptr %342, align 8
  %memberidx1.i69.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %342, i64 0, i32 1
  %345 = load i64, ptr %memberidx1.i69.i, align 4
  store i1 false, ptr %343, align 1
  %memberidx1.i.i70.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %343, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i70.i, align 4
  %memberidx2.i.i71.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %343, i64 0, i32 3
  store ptr %344, ptr %memberidx2.i.i71.i, align 8
  %memberidx3.i.i72.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %343, i64 0, i32 2
  store i64 %345, ptr %memberidx3.i.i72.i, align 4
  %346 = icmp slt i64 %345, 1
  br i1 %346, label %for.end14.i, label %for.body13.i

for.body13.i:                                     ; preds = %for.end8.i, %for.body13.i
  %.in488 = phi ptr [ %350, %for.body13.i ], [ %344, %for.end8.i ]
  %347 = phi i64 [ %349, %for.body13.i ], [ 1, %for.end8.i ]
  %348 = load ptr, ptr %.in488, align 8
  call fastcc void @CodeGen_codegen_const_declaration(ptr nonnull %9, ptr null, ptr %348)
  %349 = add nuw nsw i64 %347, 1
  %350 = getelementptr inbounds ptr, ptr %344, i64 %347
  %.not571 = icmp slt i64 %347, %345
  br i1 %.not571, label %for.body13.i, label %for.end14.i

for.end14.i:                                      ; preds = %for.body13.i, %for.end8.i
  call void @free(ptr nonnull %343)
  %memberidx21.i = getelementptr inbounds %Module, ptr %264, i64 0, i32 9
  %351 = load ptr, ptr %memberidx21.i, align 8
  %352 = call ptr @malloc(i32 25)
  %353 = load ptr, ptr %351, align 8
  %memberidx1.i76.i = getelementptr inbounds %Array_VarDeclaration_, ptr %351, i64 0, i32 1
  %354 = load i64, ptr %memberidx1.i76.i, align 4
  store i1 false, ptr %352, align 1
  %memberidx1.i.i77.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %352, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i77.i, align 4
  %memberidx2.i.i78.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %352, i64 0, i32 3
  store ptr %353, ptr %memberidx2.i.i78.i, align 8
  %memberidx3.i.i79.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %352, i64 0, i32 2
  store i64 %354, ptr %memberidx3.i.i79.i, align 4
  %355 = icmp slt i64 %354, 1
  br i1 %355, label %for.end20.i, label %for.body19.i

for.body19.i:                                     ; preds = %for.end14.i, %for.body19.i
  %.in489 = phi ptr [ %359, %for.body19.i ], [ %353, %for.end14.i ]
  %356 = phi i64 [ %358, %for.body19.i ], [ 1, %for.end14.i ]
  %357 = load ptr, ptr %.in489, align 8
  call fastcc void @CodeGen_codegen_var_declaration(ptr nonnull %9, ptr null, ptr %357)
  %358 = add nuw nsw i64 %356, 1
  %359 = getelementptr inbounds ptr, ptr %353, i64 %356
  %.not572 = icmp slt i64 %356, %354
  br i1 %.not572, label %for.body19.i, label %for.end20.i

for.end20.i:                                      ; preds = %for.body19.i, %for.end14.i
  call void @free(ptr nonnull %352)
  %360 = load ptr, ptr %memberidx9.i, align 8
  %361 = call ptr @malloc(i32 25)
  %362 = load ptr, ptr %360, align 8
  %memberidx1.i83.i = getelementptr inbounds %Array_Class_, ptr %360, i64 0, i32 1
  %363 = load i64, ptr %memberidx1.i83.i, align 4
  store i1 false, ptr %361, align 1
  %memberidx1.i.i84.i = getelementptr inbounds %ArrayIterator_Class_, ptr %361, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i84.i, align 4
  %memberidx2.i.i85.i = getelementptr inbounds %ArrayIterator_Class_, ptr %361, i64 0, i32 3
  store ptr %362, ptr %memberidx2.i.i85.i, align 8
  %memberidx3.i.i86.i = getelementptr inbounds %ArrayIterator_Class_, ptr %361, i64 0, i32 2
  store i64 %363, ptr %memberidx3.i.i86.i, align 4
  %364 = icmp slt i64 %363, 1
  br i1 %364, label %for.end26.i, label %for.body25.i

for.body25.i:                                     ; preds = %for.end20.i, %for.body25.i
  %.in490 = phi ptr [ %368, %for.body25.i ], [ %362, %for.end20.i ]
  %365 = phi i64 [ %367, %for.body25.i ], [ 1, %for.end20.i ]
  %366 = load ptr, ptr %.in490, align 8
  call fastcc void @CodeGen_codegen_class(ptr nonnull %9, ptr %366)
  %367 = add nuw nsw i64 %365, 1
  %368 = getelementptr inbounds ptr, ptr %362, i64 %365
  %.not573 = icmp slt i64 %365, %363
  br i1 %.not573, label %for.body25.i, label %for.end26.i

for.end26.i:                                      ; preds = %for.body25.i, %for.end20.i
  call void @free(ptr nonnull %361)
  %memberidx33.i = getelementptr inbounds %Module, ptr %264, i64 0, i32 4
  %369 = load ptr, ptr %memberidx33.i, align 8
  %370 = call ptr @malloc(i32 25)
  %371 = load ptr, ptr %369, align 8
  %memberidx1.i90.i = getelementptr inbounds %Array_Function_, ptr %369, i64 0, i32 1
  %372 = load i64, ptr %memberidx1.i90.i, align 4
  store i1 false, ptr %370, align 1
  %memberidx1.i.i91.i = getelementptr inbounds %ArrayIterator_Function_, ptr %370, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i91.i, align 4
  %memberidx2.i.i92.i = getelementptr inbounds %ArrayIterator_Function_, ptr %370, i64 0, i32 3
  store ptr %371, ptr %memberidx2.i.i92.i, align 8
  %memberidx3.i.i93.i = getelementptr inbounds %ArrayIterator_Function_, ptr %370, i64 0, i32 2
  store i64 %372, ptr %memberidx3.i.i93.i, align 4
  %373 = icmp slt i64 %372, 1
  br i1 %373, label %for.end32.i, label %for.body31.i

for.body31.i:                                     ; preds = %for.end26.i, %for.body31.i
  %.in491 = phi ptr [ %377, %for.body31.i ], [ %371, %for.end26.i ]
  %374 = phi i64 [ %376, %for.body31.i ], [ 1, %for.end26.i ]
  %375 = load ptr, ptr %.in491, align 8
  call fastcc void @CodeGen_codegen_function(ptr nonnull %9, ptr %375)
  %376 = add nuw nsw i64 %374, 1
  %377 = getelementptr inbounds ptr, ptr %371, i64 %374
  %.not574 = icmp slt i64 %374, %372
  br i1 %.not574, label %for.body31.i, label %for.end32.i

for.end32.i:                                      ; preds = %for.body31.i, %for.end26.i
  call void @free(ptr nonnull %370)
  %378 = load ptr, ptr %memberidx1.i51.i, align 8
  %379 = call ptr @malloc(i32 25)
  %380 = load ptr, ptr %378, align 8
  %memberidx1.i.i98.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %378, i64 0, i32 1
  %381 = load i64, ptr %memberidx1.i.i98.i, align 4
  %memberidx2.i.i99.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %378, i64 0, i32 2
  %382 = load i64, ptr %memberidx2.i.i99.i, align 4
  store i1 false, ptr %379, align 1
  %memberidx1.i.i.i100.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %379, i64 0, i32 1
  store ptr %380, ptr %memberidx1.i.i.i100.i, align 8
  %memberidx2.i.i.i101.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %379, i64 0, i32 2
  store i64 %381, ptr %memberidx2.i.i.i101.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %379, i64 0, i32 3
  store i64 %382, ptr %memberidx3.i.i.i.i, align 4
  br label %for.next.i.i222

for.next.i.i222:                                  ; preds = %for.body.i.i223, %for.end32.i
  %383 = phi ptr [ %391, %for.body.i.i223 ], [ %380, %for.end32.i ]
  %384 = phi i64 [ %393, %for.body.i.i223 ], [ %382, %for.end32.i ]
  %.lcssa430432 = phi i64 [ %.lcssa531, %for.body.i.i223 ], [ %381, %for.end32.i ]
  %smin567 = call i64 @llvm.smin.i64(i64 %.lcssa430432, i64 0)
  %385 = add i64 %smin567, -1
  br label %while.entry.i.i.i

while.entry.i.i.i:                                ; preds = %while.body.i.i.i, %for.next.i.i222
  %386 = phi ptr [ %incdec.ptr.i.i.i, %while.body.i.i.i ], [ %383, %for.next.i.i222 ]
  %387 = phi i64 [ %389, %while.body.i.i.i ], [ %.lcssa430432, %for.next.i.i222 ]
  %388 = icmp sgt i64 %387, 0
  br i1 %388, label %while.body.i.i.i, label %MapIterator_String_LLVMValueRef__next.exit.i.i

while.body.i.i.i:                                 ; preds = %while.entry.i.i.i
  %389 = add nsw i64 %387, -1
  %incdec.ptr.i.i.i = getelementptr inbounds ptr, ptr %386, i64 1
  store ptr %incdec.ptr.i.i.i, ptr %memberidx1.i.i.i100.i, align 8
  %390 = load ptr, ptr %386, align 8
  %.not.i.i.i = icmp eq ptr %390, null
  br i1 %.not.i.i.i, label %while.entry.i.i.i, label %MapIterator_String_LLVMValueRef__next.exit.i.i

MapIterator_String_LLVMValueRef__next.exit.i.i:   ; preds = %while.body.i.i.i, %while.entry.i.i.i
  %391 = phi ptr [ %incdec.ptr.i.i.i, %while.body.i.i.i ], [ %386, %while.entry.i.i.i ]
  %.lcssa531 = phi i64 [ %389, %while.body.i.i.i ], [ %385, %while.entry.i.i.i ]
  %392 = icmp slt i64 %384, 1
  br i1 %392, label %for.end.i.i, label %for.body.i.i223

for.body.i.i223:                                  ; preds = %MapIterator_String_LLVMValueRef__next.exit.i.i
  %393 = add nsw i64 %384, -1
  %394 = getelementptr inbounds ptr, ptr %391, i64 -1
  %395 = load ptr, ptr %394, align 8
  %396 = load ptr, ptr %395, align 8
  %397 = load ptr, ptr %396, align 8
  call void @free(ptr %397)
  call void @free(ptr %396)
  br label %for.next.i.i222

for.end.i.i:                                      ; preds = %MapIterator_String_LLVMValueRef__next.exit.i.i
  call void @free(ptr nonnull %379)
  %398 = load ptr, ptr %378, align 8
  call void @free(ptr %398)
  call void @free(ptr %378)
  %399 = load ptr, ptr %memberidx2.i.i217, align 8
  %400 = call ptr @malloc(i32 25)
  %401 = load ptr, ptr %399, align 8
  %memberidx1.i50.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %399, i64 0, i32 1
  %402 = load i64, ptr %memberidx1.i50.i.i, align 4
  %memberidx2.i51.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %399, i64 0, i32 2
  %403 = load i64, ptr %memberidx2.i51.i.i, align 4
  store i1 false, ptr %400, align 1
  %memberidx1.i.i52.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %400, i64 0, i32 1
  store ptr %401, ptr %memberidx1.i.i52.i.i, align 8
  %memberidx2.i.i53.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %400, i64 0, i32 2
  store i64 %402, ptr %memberidx2.i.i53.i.i, align 4
  %memberidx3.i.i54.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %400, i64 0, i32 3
  store i64 %403, ptr %memberidx3.i.i54.i.i, align 4
  br label %for.next5.i.i

for.next5.i.i:                                    ; preds = %for.body6.i.i, %for.end.i.i
  %404 = phi ptr [ %412, %for.body6.i.i ], [ %401, %for.end.i.i ]
  %405 = phi i64 [ %414, %for.body6.i.i ], [ %403, %for.end.i.i ]
  %.lcssa425427 = phi i64 [ %.lcssa528, %for.body6.i.i ], [ %402, %for.end.i.i ]
  %smin565 = call i64 @llvm.smin.i64(i64 %.lcssa425427, i64 0)
  %406 = add i64 %smin565, -1
  br label %while.entry.i56.i.i

while.entry.i56.i.i:                              ; preds = %while.body.i62.i.i, %for.next5.i.i
  %407 = phi ptr [ %incdec.ptr.i60.i.i, %while.body.i62.i.i ], [ %404, %for.next5.i.i ]
  %408 = phi i64 [ %410, %while.body.i62.i.i ], [ %.lcssa425427, %for.next5.i.i ]
  %409 = icmp sgt i64 %408, 0
  br i1 %409, label %while.body.i62.i.i, label %MapIterator_String_LLVMValueRef__next.exit63.i.i

while.body.i62.i.i:                               ; preds = %while.entry.i56.i.i
  %410 = add nsw i64 %408, -1
  %incdec.ptr.i60.i.i = getelementptr inbounds ptr, ptr %407, i64 1
  store ptr %incdec.ptr.i60.i.i, ptr %memberidx1.i.i52.i.i, align 8
  %411 = load ptr, ptr %407, align 8
  %.not.i61.i.i = icmp eq ptr %411, null
  br i1 %.not.i61.i.i, label %while.entry.i56.i.i, label %MapIterator_String_LLVMValueRef__next.exit63.i.i

MapIterator_String_LLVMValueRef__next.exit63.i.i: ; preds = %while.body.i62.i.i, %while.entry.i56.i.i
  %412 = phi ptr [ %incdec.ptr.i60.i.i, %while.body.i62.i.i ], [ %407, %while.entry.i56.i.i ]
  %.lcssa528 = phi i64 [ %410, %while.body.i62.i.i ], [ %406, %while.entry.i56.i.i ]
  %413 = icmp slt i64 %405, 1
  br i1 %413, label %for.end7.i.i, label %for.body6.i.i

for.body6.i.i:                                    ; preds = %MapIterator_String_LLVMValueRef__next.exit63.i.i
  %414 = add nsw i64 %405, -1
  %415 = getelementptr inbounds ptr, ptr %412, i64 -1
  %416 = load ptr, ptr %415, align 8
  %417 = load ptr, ptr %416, align 8
  %418 = load ptr, ptr %417, align 8
  call void @free(ptr %418)
  call void @free(ptr %417)
  br label %for.next5.i.i

for.end7.i.i:                                     ; preds = %MapIterator_String_LLVMValueRef__next.exit63.i.i
  call void @free(ptr nonnull %400)
  %419 = load ptr, ptr %399, align 8
  call void @free(ptr %419)
  call void @free(ptr %399)
  %420 = load ptr, ptr %memberidx5.i.i, align 8
  %421 = call ptr @malloc(i32 25)
  %422 = load ptr, ptr %420, align 8
  %memberidx1.i64.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %420, i64 0, i32 1
  %423 = load i64, ptr %memberidx1.i64.i.i, align 4
  %memberidx2.i65.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %420, i64 0, i32 2
  %424 = load i64, ptr %memberidx2.i65.i.i, align 4
  store i1 false, ptr %421, align 1
  %memberidx1.i.i66.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %421, i64 0, i32 1
  store ptr %422, ptr %memberidx1.i.i66.i.i, align 8
  %memberidx2.i.i67.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %421, i64 0, i32 2
  store i64 %423, ptr %memberidx2.i.i67.i.i, align 4
  %memberidx3.i.i68.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %421, i64 0, i32 3
  store i64 %424, ptr %memberidx3.i.i68.i.i, align 4
  br label %for.next13.i.i

for.next13.i.i:                                   ; preds = %for.body14.i.i, %for.end7.i.i
  %425 = phi ptr [ %433, %for.body14.i.i ], [ %422, %for.end7.i.i ]
  %426 = phi i64 [ %435, %for.body14.i.i ], [ %424, %for.end7.i.i ]
  %.lcssa420422 = phi i64 [ %.lcssa525, %for.body14.i.i ], [ %423, %for.end7.i.i ]
  %smin563 = call i64 @llvm.smin.i64(i64 %.lcssa420422, i64 0)
  %427 = add i64 %smin563, -1
  br label %while.entry.i70.i.i

while.entry.i70.i.i:                              ; preds = %while.body.i76.i.i, %for.next13.i.i
  %428 = phi ptr [ %incdec.ptr.i74.i.i, %while.body.i76.i.i ], [ %425, %for.next13.i.i ]
  %429 = phi i64 [ %431, %while.body.i76.i.i ], [ %.lcssa420422, %for.next13.i.i ]
  %430 = icmp sgt i64 %429, 0
  br i1 %430, label %while.body.i76.i.i, label %MapIterator_String_LLVMValueRef__next.exit77.i.i

while.body.i76.i.i:                               ; preds = %while.entry.i70.i.i
  %431 = add nsw i64 %429, -1
  %incdec.ptr.i74.i.i = getelementptr inbounds ptr, ptr %428, i64 1
  store ptr %incdec.ptr.i74.i.i, ptr %memberidx1.i.i66.i.i, align 8
  %432 = load ptr, ptr %428, align 8
  %.not.i75.i.i = icmp eq ptr %432, null
  br i1 %.not.i75.i.i, label %while.entry.i70.i.i, label %MapIterator_String_LLVMValueRef__next.exit77.i.i

MapIterator_String_LLVMValueRef__next.exit77.i.i: ; preds = %while.body.i76.i.i, %while.entry.i70.i.i
  %433 = phi ptr [ %incdec.ptr.i74.i.i, %while.body.i76.i.i ], [ %428, %while.entry.i70.i.i ]
  %.lcssa525 = phi i64 [ %431, %while.body.i76.i.i ], [ %427, %while.entry.i70.i.i ]
  %434 = icmp slt i64 %426, 1
  br i1 %434, label %for.end15.i.i, label %for.body14.i.i

for.body14.i.i:                                   ; preds = %MapIterator_String_LLVMValueRef__next.exit77.i.i
  %435 = add nsw i64 %426, -1
  %436 = getelementptr inbounds ptr, ptr %433, i64 -1
  %437 = load ptr, ptr %436, align 8
  %438 = load ptr, ptr %437, align 8
  %439 = load ptr, ptr %438, align 8
  call void @free(ptr %439)
  call void @free(ptr %438)
  br label %for.next13.i.i

for.end15.i.i:                                    ; preds = %MapIterator_String_LLVMValueRef__next.exit77.i.i
  call void @free(ptr nonnull %421)
  %440 = load ptr, ptr %420, align 8
  call void @free(ptr %440)
  call void @free(ptr %420)
  %441 = load ptr, ptr %memberidx3.i.i218, align 8
  %442 = call ptr @malloc(i32 25)
  %443 = load ptr, ptr %441, align 8
  %memberidx1.i91.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %441, i64 0, i32 1
  %444 = load i64, ptr %memberidx1.i91.i.i, align 4
  %memberidx2.i92.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %441, i64 0, i32 2
  %445 = load i64, ptr %memberidx2.i92.i.i, align 4
  store i1 false, ptr %442, align 1
  %memberidx1.i.i93.i.i = getelementptr inbounds %MapIterator_String_CGClassType_, ptr %442, i64 0, i32 1
  store ptr %443, ptr %memberidx1.i.i93.i.i, align 8
  %memberidx2.i.i94.i.i = getelementptr inbounds %MapIterator_String_CGClassType_, ptr %442, i64 0, i32 2
  store i64 %444, ptr %memberidx2.i.i94.i.i, align 4
  %memberidx3.i.i95.i.i = getelementptr inbounds %MapIterator_String_CGClassType_, ptr %442, i64 0, i32 3
  store i64 %445, ptr %memberidx3.i.i95.i.i, align 4
  br label %for.next21.i.i

for.next21.i.i:                                   ; preds = %for.body22.i.i, %for.end15.i.i
  %446 = phi ptr [ %454, %for.body22.i.i ], [ %443, %for.end15.i.i ]
  %447 = phi i64 [ %456, %for.body22.i.i ], [ %445, %for.end15.i.i ]
  %.lcssa415417 = phi i64 [ %.lcssa522, %for.body22.i.i ], [ %444, %for.end15.i.i ]
  %smin561 = call i64 @llvm.smin.i64(i64 %.lcssa415417, i64 0)
  %448 = add i64 %smin561, -1
  br label %while.entry.i97.i.i

while.entry.i97.i.i:                              ; preds = %while.body.i103.i.i, %for.next21.i.i
  %449 = phi ptr [ %incdec.ptr.i101.i.i, %while.body.i103.i.i ], [ %446, %for.next21.i.i ]
  %450 = phi i64 [ %452, %while.body.i103.i.i ], [ %.lcssa415417, %for.next21.i.i ]
  %451 = icmp sgt i64 %450, 0
  br i1 %451, label %while.body.i103.i.i, label %MapIterator_String_CGClassType__next.exit.i.i

while.body.i103.i.i:                              ; preds = %while.entry.i97.i.i
  %452 = add nsw i64 %450, -1
  %incdec.ptr.i101.i.i = getelementptr inbounds ptr, ptr %449, i64 1
  store ptr %incdec.ptr.i101.i.i, ptr %memberidx1.i.i93.i.i, align 8
  %453 = load ptr, ptr %449, align 8
  %.not.i102.i.i = icmp eq ptr %453, null
  br i1 %.not.i102.i.i, label %while.entry.i97.i.i, label %MapIterator_String_CGClassType__next.exit.i.i

MapIterator_String_CGClassType__next.exit.i.i:    ; preds = %while.body.i103.i.i, %while.entry.i97.i.i
  %454 = phi ptr [ %incdec.ptr.i101.i.i, %while.body.i103.i.i ], [ %449, %while.entry.i97.i.i ]
  %.lcssa522 = phi i64 [ %452, %while.body.i103.i.i ], [ %448, %while.entry.i97.i.i ]
  %455 = icmp slt i64 %447, 1
  br i1 %455, label %for.end23.i.i, label %for.body22.i.i

for.body22.i.i:                                   ; preds = %MapIterator_String_CGClassType__next.exit.i.i
  %456 = add nsw i64 %447, -1
  %457 = getelementptr inbounds ptr, ptr %454, i64 -1
  %458 = load ptr, ptr %457, align 8
  %459 = load ptr, ptr %458, align 8
  %460 = load ptr, ptr %459, align 8
  call void @free(ptr %460)
  call void @free(ptr %459)
  %memberidx27.i.i = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %458, i64 0, i32 1
  %461 = load ptr, ptr %memberidx27.i.i, align 8
  call void @free(ptr %461)
  br label %for.next21.i.i

for.end23.i.i:                                    ; preds = %MapIterator_String_CGClassType__next.exit.i.i
  call void @free(ptr nonnull %442)
  %462 = load ptr, ptr %441, align 8
  call void @free(ptr %462)
  call void @free(ptr %441)
  %463 = load ptr, ptr %memberidx4.i.i219, align 8
  %464 = call ptr @malloc(i32 25)
  %465 = load ptr, ptr %463, align 8
  %memberidx1.i86.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %463, i64 0, i32 1
  %466 = load i64, ptr %memberidx1.i86.i.i, align 4
  %memberidx2.i87.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %463, i64 0, i32 2
  %467 = load i64, ptr %memberidx2.i87.i.i, align 4
  store i1 false, ptr %464, align 1
  %memberidx1.i.i88.i.i = getelementptr inbounds %MapIterator_String_CGEnumType_, ptr %464, i64 0, i32 1
  store ptr %465, ptr %memberidx1.i.i88.i.i, align 8
  %memberidx2.i.i89.i.i = getelementptr inbounds %MapIterator_String_CGEnumType_, ptr %464, i64 0, i32 2
  store i64 %466, ptr %memberidx2.i.i89.i.i, align 4
  %memberidx3.i.i90.i.i = getelementptr inbounds %MapIterator_String_CGEnumType_, ptr %464, i64 0, i32 3
  store i64 %467, ptr %memberidx3.i.i90.i.i, align 4
  br label %for.next30.i.i

for.next30.i.i:                                   ; preds = %for.body31.i.i, %for.end23.i.i
  %468 = phi ptr [ %476, %for.body31.i.i ], [ %465, %for.end23.i.i ]
  %469 = phi i64 [ %478, %for.body31.i.i ], [ %467, %for.end23.i.i ]
  %.lcssa410412 = phi i64 [ %.lcssa519, %for.body31.i.i ], [ %466, %for.end23.i.i ]
  %smin = call i64 @llvm.smin.i64(i64 %.lcssa410412, i64 0)
  %470 = add i64 %smin, -1
  br label %while.entry.i79.i.i

while.entry.i79.i.i:                              ; preds = %while.body.i85.i.i, %for.next30.i.i
  %471 = phi ptr [ %incdec.ptr.i83.i.i, %while.body.i85.i.i ], [ %468, %for.next30.i.i ]
  %472 = phi i64 [ %474, %while.body.i85.i.i ], [ %.lcssa410412, %for.next30.i.i ]
  %473 = icmp sgt i64 %472, 0
  br i1 %473, label %while.body.i85.i.i, label %MapIterator_String_CGEnumType__next.exit.i.i

while.body.i85.i.i:                               ; preds = %while.entry.i79.i.i
  %474 = add nsw i64 %472, -1
  %incdec.ptr.i83.i.i = getelementptr inbounds ptr, ptr %471, i64 1
  store ptr %incdec.ptr.i83.i.i, ptr %memberidx1.i.i88.i.i, align 8
  %475 = load ptr, ptr %471, align 8
  %.not.i84.i.i = icmp eq ptr %475, null
  br i1 %.not.i84.i.i, label %while.entry.i79.i.i, label %MapIterator_String_CGEnumType__next.exit.i.i

MapIterator_String_CGEnumType__next.exit.i.i:     ; preds = %while.body.i85.i.i, %while.entry.i79.i.i
  %476 = phi ptr [ %incdec.ptr.i83.i.i, %while.body.i85.i.i ], [ %471, %while.entry.i79.i.i ]
  %.lcssa519 = phi i64 [ %474, %while.body.i85.i.i ], [ %470, %while.entry.i79.i.i ]
  %477 = icmp slt i64 %469, 1
  br i1 %477, label %CodeGen_destroy.exit.i, label %for.body31.i.i

for.body31.i.i:                                   ; preds = %MapIterator_String_CGEnumType__next.exit.i.i
  %478 = add nsw i64 %469, -1
  %479 = getelementptr inbounds ptr, ptr %476, i64 -1
  %480 = load ptr, ptr %479, align 8
  %481 = load ptr, ptr %480, align 8
  %482 = load ptr, ptr %481, align 8
  call void @free(ptr %482)
  call void @free(ptr %481)
  %memberidx36.i.i = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %480, i64 0, i32 1
  %483 = load ptr, ptr %memberidx36.i.i, align 8
  call void @free(ptr %483)
  br label %for.next30.i.i

CodeGen_destroy.exit.i:                           ; preds = %MapIterator_String_CGEnumType__next.exit.i.i
  call void @free(ptr nonnull %464)
  %484 = load ptr, ptr %463, align 8
  call void @free(ptr %484)
  call void @free(ptr %463)
  %485 = load ptr, ptr %common.ret.op.i, align 8
  %486 = call ptr @malloc(i32 25)
  %487 = load ptr, ptr %485, align 8
  %memberidx1.i.i104.i = getelementptr inbounds %Array_Module_, ptr %485, i64 0, i32 1
  %488 = load i64, ptr %memberidx1.i.i104.i, align 4
  %memberidx1.i.i.i105.i = getelementptr inbounds %ArrayIterator_Module_, ptr %486, i64 0, i32 1
  %memberidx2.i.i.i106.i = getelementptr inbounds %ArrayIterator_Module_, ptr %486, i64 0, i32 3
  store ptr %487, ptr %memberidx2.i.i.i106.i, align 8
  %memberidx3.i.i.i107.i = getelementptr inbounds %ArrayIterator_Module_, ptr %486, i64 0, i32 2
  store i64 %488, ptr %memberidx3.i.i.i107.i, align 4
  store i64 1, ptr %memberidx1.i.i.i105.i, align 4
  %489 = load ptr, ptr %487, align 8
  %490 = icmp slt i64 %488, 1
  store i1 %490, ptr %486, align 1
  br i1 %490, label %Program___del__.exit.i, label %for.body.i113.i

for.body.i113.i:                                  ; preds = %CodeGen_destroy.exit.i, %Module___del__.exit.i.i
  %491 = phi i64 [ %617, %Module___del__.exit.i.i ], [ 1, %CodeGen_destroy.exit.i ]
  %492 = phi ptr [ %619, %Module___del__.exit.i.i ], [ %489, %CodeGen_destroy.exit.i ]
  %memberidx.i4.i.i = getelementptr inbounds %Module, ptr %492, i64 0, i32 4
  %493 = load ptr, ptr %memberidx.i4.i.i, align 8
  %494 = call ptr @malloc(i32 25)
  %495 = load ptr, ptr %493, align 8
  %memberidx1.i.i5.i.i = getelementptr inbounds %Array_Function_, ptr %493, i64 0, i32 1
  %496 = load i64, ptr %memberidx1.i.i5.i.i, align 4
  %497 = icmp slt i64 %496, 1
  br i1 %497, label %for.end.i.i.i, label %for.body.i.i116.i

for.body.i.i116.i:                                ; preds = %for.body.i113.i, %for.body.i.i116.i
  %.in492 = phi ptr [ %501, %for.body.i.i116.i ], [ %495, %for.body.i113.i ]
  %498 = phi i64 [ %500, %for.body.i.i116.i ], [ 1, %for.body.i113.i ]
  %499 = load ptr, ptr %.in492, align 8
  call void @free(ptr %499)
  %500 = add nuw nsw i64 %498, 1
  %501 = getelementptr inbounds ptr, ptr %495, i64 %498
  %.not575 = icmp slt i64 %498, %496
  br i1 %.not575, label %for.body.i.i116.i, label %for.end.i.i.i

for.end.i.i.i:                                    ; preds = %for.body.i.i116.i, %for.body.i113.i
  call void @free(ptr nonnull %494)
  %memberidx6.i.i117.i = getelementptr inbounds %Module, ptr %492, i64 0, i32 1
  %502 = load ptr, ptr %memberidx6.i.i117.i, align 8
  %503 = call ptr @malloc(i32 25)
  %504 = load ptr, ptr %502, align 8
  %memberidx1.i60.i.i.i = getelementptr inbounds %Array_Var_, ptr %502, i64 0, i32 1
  %505 = load i64, ptr %memberidx1.i60.i.i.i, align 4
  %506 = icmp slt i64 %505, 1
  br i1 %506, label %for.end5.i.i.i, label %for.body4.i.i.i

for.body4.i.i.i:                                  ; preds = %for.end.i.i.i, %for.body4.i.i.i
  %.in493 = phi ptr [ %510, %for.body4.i.i.i ], [ %504, %for.end.i.i.i ]
  %507 = phi i64 [ %509, %for.body4.i.i.i ], [ 1, %for.end.i.i.i ]
  %508 = load ptr, ptr %.in493, align 8
  call void @free(ptr %508)
  %509 = add nuw nsw i64 %507, 1
  %510 = getelementptr inbounds ptr, ptr %504, i64 %507
  %.not576 = icmp slt i64 %507, %505
  br i1 %.not576, label %for.body4.i.i.i, label %for.end5.i.i.i

for.end5.i.i.i:                                   ; preds = %for.body4.i.i.i, %for.end.i.i.i
  call void @free(ptr nonnull %503)
  %memberidx12.i.i.i = getelementptr inbounds %Module, ptr %492, i64 0, i32 3
  %511 = load ptr, ptr %memberidx12.i.i.i, align 8
  %512 = call ptr @malloc(i32 25)
  %513 = load ptr, ptr %511, align 8
  %memberidx1.i67.i.i.i = getelementptr inbounds %Array_Class_, ptr %511, i64 0, i32 1
  %514 = load i64, ptr %memberidx1.i67.i.i.i, align 4
  %515 = icmp slt i64 %514, 1
  br i1 %515, label %for.end11.i.i.i, label %for.body10.i.i.i

for.body10.i.i.i:                                 ; preds = %for.end5.i.i.i, %Class___del__.exit.i.i.i
  %.in494 = phi ptr [ %545, %Class___del__.exit.i.i.i ], [ %513, %for.end5.i.i.i ]
  %516 = phi i64 [ %544, %Class___del__.exit.i.i.i ], [ 1, %for.end5.i.i.i ]
  %517 = load ptr, ptr %.in494, align 8
  %518 = load ptr, ptr %517, align 8
  call void @free(ptr %518)
  %memberidx1.i74.i.i.i = getelementptr inbounds %Class, ptr %517, i64 0, i32 1
  %519 = load ptr, ptr %memberidx1.i74.i.i.i, align 8
  %520 = load ptr, ptr %519, align 8
  call void @free(ptr %520)
  call void @free(ptr %519)
  %memberidx2.i75.i.i.i = getelementptr inbounds %Class, ptr %517, i64 0, i32 2
  %521 = load ptr, ptr %memberidx2.i75.i.i.i, align 8
  %.not.i.i.i.i = icmp eq ptr %521, null
  br i1 %.not.i.i.i.i, label %for.entry.i.i.i.i, label %if.entry.i.i.i.i

if.entry.i.i.i.i:                                 ; preds = %for.body10.i.i.i
  call void @free(ptr nonnull %521)
  br label %for.entry.i.i.i.i

for.entry.i.i.i.i:                                ; preds = %if.entry.i.i.i.i, %for.body10.i.i.i
  %memberidx4.i.i.i.i = getelementptr inbounds %Class, ptr %517, i64 0, i32 4
  %522 = load ptr, ptr %memberidx4.i.i.i.i, align 8
  %523 = call ptr @malloc(i32 25)
  %524 = load ptr, ptr %522, align 8
  %memberidx1.i.i76.i.i.i = getelementptr inbounds %Array_ClassField_, ptr %522, i64 0, i32 1
  %525 = load i64, ptr %memberidx1.i.i76.i.i.i, align 4
  %526 = icmp slt i64 %525, 1
  br i1 %526, label %for.end.i.i.i.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.entry.i.i.i.i, %for.body.i.i.i.i
  %.in495 = phi ptr [ %530, %for.body.i.i.i.i ], [ %524, %for.entry.i.i.i.i ]
  %527 = phi i64 [ %529, %for.body.i.i.i.i ], [ 1, %for.entry.i.i.i.i ]
  %528 = load ptr, ptr %.in495, align 8
  call void @free(ptr %528)
  %529 = add nuw nsw i64 %527, 1
  %530 = getelementptr inbounds ptr, ptr %524, i64 %527
  %.not577 = icmp slt i64 %527, %525
  br i1 %.not577, label %for.body.i.i.i.i, label %for.end.i.i.i.i

for.end.i.i.i.i:                                  ; preds = %for.body.i.i.i.i, %for.entry.i.i.i.i
  call void @free(ptr nonnull %523)
  %memberidx10.i.i.i.i = getelementptr inbounds %Class, ptr %517, i64 0, i32 5
  %531 = load ptr, ptr %memberidx10.i.i.i.i, align 8
  %532 = call ptr @malloc(i32 25)
  %533 = load ptr, ptr %531, align 8
  %memberidx1.i21.i.i.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %531, i64 0, i32 1
  %534 = load i64, ptr %memberidx1.i21.i.i.i.i, align 4
  %535 = icmp slt i64 %534, 1
  br i1 %535, label %Class___del__.exit.i.i.i, label %for.body8.i.i.i.i

for.body8.i.i.i.i:                                ; preds = %for.end.i.i.i.i, %for.body8.i.i.i.i
  %.in496 = phi ptr [ %539, %for.body8.i.i.i.i ], [ %533, %for.end.i.i.i.i ]
  %536 = phi i64 [ %538, %for.body8.i.i.i.i ], [ 1, %for.end.i.i.i.i ]
  %537 = load ptr, ptr %.in496, align 8
  call void @free(ptr %537)
  %538 = add nuw nsw i64 %536, 1
  %539 = getelementptr inbounds ptr, ptr %533, i64 %536
  %.not578 = icmp slt i64 %536, %534
  br i1 %.not578, label %for.body8.i.i.i.i, label %Class___del__.exit.i.i.i

Class___del__.exit.i.i.i:                         ; preds = %for.body8.i.i.i.i, %for.end.i.i.i.i
  call void @free(ptr nonnull %532)
  %memberidx12.i.i.i.i = getelementptr inbounds %Class, ptr %517, i64 0, i32 6
  %540 = load ptr, ptr %memberidx12.i.i.i.i, align 8
  %541 = load ptr, ptr %540, align 8
  call void @free(ptr %541)
  call void @free(ptr %540)
  %memberidx13.i.i.i.i = getelementptr inbounds %Class, ptr %517, i64 0, i32 7
  %542 = load ptr, ptr %memberidx13.i.i.i.i, align 8
  %543 = load ptr, ptr %542, align 8
  call void @free(ptr %543)
  call void @free(ptr %542)
  call void @free(ptr %517)
  %544 = add nuw nsw i64 %516, 1
  %545 = getelementptr inbounds ptr, ptr %513, i64 %516
  %.not579 = icmp slt i64 %516, %514
  br i1 %.not579, label %for.body10.i.i.i, label %for.end11.i.i.i

for.end11.i.i.i:                                  ; preds = %Class___del__.exit.i.i.i, %for.end5.i.i.i
  call void @free(ptr nonnull %512)
  %memberidx18.i.i.i = getelementptr inbounds %Module, ptr %492, i64 0, i32 6
  %546 = load ptr, ptr %memberidx18.i.i.i, align 8
  %547 = call ptr @malloc(i32 25)
  %548 = load ptr, ptr %546, align 8
  %memberidx1.i78.i.i.i = getelementptr inbounds %Array_Enum_, ptr %546, i64 0, i32 1
  %549 = load i64, ptr %memberidx1.i78.i.i.i, align 4
  %550 = icmp slt i64 %549, 1
  br i1 %550, label %for.end17.i.i.i, label %for.body16.i.i.i

for.body16.i.i.i:                                 ; preds = %for.end11.i.i.i, %Enum___del__.exit.i.i.i
  %.in497 = phi ptr [ %574, %Enum___del__.exit.i.i.i ], [ %548, %for.end11.i.i.i ]
  %551 = phi i64 [ %573, %Enum___del__.exit.i.i.i ], [ 1, %for.end11.i.i.i ]
  %552 = load ptr, ptr %.in497, align 8
  %553 = load ptr, ptr %552, align 8
  call void @free(ptr %553)
  %memberidx1.i85.i.i.i = getelementptr inbounds %Enum, ptr %552, i64 0, i32 1
  %554 = load ptr, ptr %memberidx1.i85.i.i.i, align 8
  %555 = load ptr, ptr %554, align 8
  call void @free(ptr %555)
  call void @free(ptr %554)
  %memberidx2.i86.i.i.i = getelementptr inbounds %Enum, ptr %552, i64 0, i32 2
  %556 = load ptr, ptr %memberidx2.i86.i.i.i, align 8
  %557 = call ptr @malloc(i32 25)
  %558 = load ptr, ptr %556, align 8
  %memberidx1.i.i87.i.i.i = getelementptr inbounds %Array_EnumField_, ptr %556, i64 0, i32 1
  %559 = load i64, ptr %memberidx1.i.i87.i.i.i, align 4
  %560 = icmp slt i64 %559, 1
  br i1 %560, label %Enum___del__.exit.i.i.i, label %for.body.i96.i.i.i

for.body.i96.i.i.i:                               ; preds = %for.body16.i.i.i, %for.body.i96.i.i.i
  %.in498 = phi ptr [ %568, %for.body.i96.i.i.i ], [ %558, %for.body16.i.i.i ]
  %561 = phi i64 [ %567, %for.body.i96.i.i.i ], [ 1, %for.body16.i.i.i ]
  %562 = load ptr, ptr %.in498, align 8
  %563 = load ptr, ptr %562, align 8
  call void @free(ptr %563)
  %memberidx1.i10.i.i.i.i = getelementptr inbounds %EnumField, ptr %562, i64 0, i32 1
  %564 = load ptr, ptr %memberidx1.i10.i.i.i.i, align 8
  %565 = load ptr, ptr %564, align 8
  call void @free(ptr %565)
  call void @free(ptr %564)
  %memberidx2.i11.i.i.i.i = getelementptr inbounds %EnumField, ptr %562, i64 0, i32 2
  %566 = load ptr, ptr %memberidx2.i11.i.i.i.i, align 8
  call void @free(ptr %566)
  call void @free(ptr %562)
  %567 = add nuw nsw i64 %561, 1
  %568 = getelementptr inbounds ptr, ptr %558, i64 %561
  %.not580 = icmp slt i64 %561, %559
  br i1 %.not580, label %for.body.i96.i.i.i, label %Enum___del__.exit.i.i.i

Enum___del__.exit.i.i.i:                          ; preds = %for.body.i96.i.i.i, %for.body16.i.i.i
  call void @free(ptr nonnull %557)
  %569 = load ptr, ptr %memberidx2.i86.i.i.i, align 8
  %570 = load ptr, ptr %569, align 8
  call void @free(ptr %570)
  call void @free(ptr %569)
  %memberidx5.i97.i.i.i = getelementptr inbounds %Enum, ptr %552, i64 0, i32 3
  %571 = load ptr, ptr %memberidx5.i97.i.i.i, align 8
  %572 = load ptr, ptr %571, align 8
  call void @free(ptr %572)
  call void @free(ptr %571)
  call void @free(ptr %552)
  %573 = add nuw nsw i64 %551, 1
  %574 = getelementptr inbounds ptr, ptr %548, i64 %551
  %.not581 = icmp slt i64 %551, %549
  br i1 %.not581, label %for.body16.i.i.i, label %for.end17.i.i.i

for.end17.i.i.i:                                  ; preds = %Enum___del__.exit.i.i.i, %for.end11.i.i.i
  call void @free(ptr nonnull %547)
  %memberidx24.i.i.i = getelementptr inbounds %Module, ptr %492, i64 0, i32 8
  %575 = load ptr, ptr %memberidx24.i.i.i, align 8
  %576 = call ptr @malloc(i32 25)
  %577 = load ptr, ptr %575, align 8
  %memberidx1.i99.i.i.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %575, i64 0, i32 1
  %578 = load i64, ptr %memberidx1.i99.i.i.i, align 4
  %579 = icmp slt i64 %578, 1
  br i1 %579, label %for.end23.i.i.i, label %for.body22.i.i.i

for.body22.i.i.i:                                 ; preds = %for.end17.i.i.i, %for.body22.i.i.i
  %.in499 = phi ptr [ %583, %for.body22.i.i.i ], [ %577, %for.end17.i.i.i ]
  %580 = phi i64 [ %582, %for.body22.i.i.i ], [ 1, %for.end17.i.i.i ]
  %581 = load ptr, ptr %.in499, align 8
  call void @free(ptr %581)
  %582 = add nuw nsw i64 %580, 1
  %583 = getelementptr inbounds ptr, ptr %577, i64 %580
  %.not582 = icmp slt i64 %580, %578
  br i1 %.not582, label %for.body22.i.i.i, label %for.end23.i.i.i

for.end23.i.i.i:                                  ; preds = %for.body22.i.i.i, %for.end17.i.i.i
  call void @free(ptr nonnull %576)
  %memberidx30.i.i.i = getelementptr inbounds %Module, ptr %492, i64 0, i32 9
  %584 = load ptr, ptr %memberidx30.i.i.i, align 8
  %585 = call ptr @malloc(i32 25)
  %586 = load ptr, ptr %584, align 8
  %memberidx1.i106.i.i.i = getelementptr inbounds %Array_VarDeclaration_, ptr %584, i64 0, i32 1
  %587 = load i64, ptr %memberidx1.i106.i.i.i, align 4
  %588 = icmp slt i64 %587, 1
  br i1 %588, label %Module___del__.exit.i.i, label %for.body28.i.i.i

for.body28.i.i.i:                                 ; preds = %for.end23.i.i.i, %for.body28.i.i.i
  %.in500 = phi ptr [ %592, %for.body28.i.i.i ], [ %586, %for.end23.i.i.i ]
  %589 = phi i64 [ %591, %for.body28.i.i.i ], [ 1, %for.end23.i.i.i ]
  %590 = load ptr, ptr %.in500, align 8
  call void @free(ptr %590)
  %591 = add nuw nsw i64 %589, 1
  %592 = getelementptr inbounds ptr, ptr %586, i64 %589
  %.not583 = icmp slt i64 %589, %587
  br i1 %.not583, label %for.body28.i.i.i, label %Module___del__.exit.i.i

Module___del__.exit.i.i:                          ; preds = %for.body28.i.i.i, %for.end23.i.i.i
  call void @free(ptr nonnull %585)
  %memberidx32.i.i.i = getelementptr inbounds %Module, ptr %492, i64 0, i32 7
  %593 = load ptr, ptr %memberidx32.i.i.i, align 8
  %memberidx33.i.i.i = getelementptr inbounds %Module, ptr %492, i64 0, i32 5
  %594 = load ptr, ptr %memberidx33.i.i.i, align 8
  %memberidx34.i.i.i = getelementptr inbounds %ScopeId, ptr %594, i64 0, i32 1
  %595 = load i64, ptr %memberidx34.i.i.i, align 4
  %596 = load ptr, ptr %593, align 8
  %597 = getelementptr inbounds ptr, ptr %596, i64 %595
  %598 = load ptr, ptr %597, align 8
  call fastcc void @Scope___del__(ptr %598)
  call void @free(ptr %598)
  %599 = load ptr, ptr %492, align 8
  %600 = load ptr, ptr %599, align 8
  call void @free(ptr %600)
  call void @free(ptr %599)
  %601 = load ptr, ptr %memberidx.i4.i.i, align 8
  %602 = load ptr, ptr %601, align 8
  call void @free(ptr %602)
  call void @free(ptr %601)
  %603 = load ptr, ptr %memberidx6.i.i117.i, align 8
  %604 = load ptr, ptr %603, align 8
  call void @free(ptr %604)
  call void @free(ptr %603)
  %605 = load ptr, ptr %memberidx12.i.i.i, align 8
  %606 = load ptr, ptr %605, align 8
  call void @free(ptr %606)
  call void @free(ptr %605)
  %607 = load ptr, ptr %memberidx18.i.i.i, align 8
  %608 = load ptr, ptr %607, align 8
  call void @free(ptr %608)
  call void @free(ptr %607)
  %609 = load ptr, ptr %memberidx32.i.i.i, align 8
  %610 = load ptr, ptr %609, align 8
  call void @free(ptr %610)
  call void @free(ptr %609)
  %611 = load ptr, ptr %memberidx24.i.i.i, align 8
  %612 = load ptr, ptr %611, align 8
  call void @free(ptr %612)
  call void @free(ptr %611)
  %613 = load ptr, ptr %memberidx30.i.i.i, align 8
  %614 = load ptr, ptr %613, align 8
  call void @free(ptr %614)
  call void @free(ptr %613)
  %memberidx43.i.i.i = getelementptr inbounds %Module, ptr %492, i64 0, i32 2
  %615 = load ptr, ptr %memberidx43.i.i.i, align 8
  %616 = load ptr, ptr %615, align 8
  call void @free(ptr %616)
  call void @free(ptr %615)
  call void @free(ptr %492)
  %617 = add nuw nsw i64 %491, 1
  store i64 %617, ptr %memberidx1.i.i.i105.i, align 4
  %618 = getelementptr inbounds ptr, ptr %487, i64 %491
  %619 = load ptr, ptr %618, align 8
  %620 = icmp sge i64 %491, %488
  store i1 %620, ptr %486, align 1
  br i1 %620, label %Program___del__.exit.i, label %for.body.i113.i

Program___del__.exit.i:                           ; preds = %Module___del__.exit.i.i, %CodeGen_destroy.exit.i
  call void @free(ptr nonnull %486)
  %621 = load ptr, ptr %common.ret.op.i, align 8
  %622 = load ptr, ptr %621, align 8
  call void @free(ptr %622)
  call void @free(ptr %621)
  call void @free(ptr nonnull %common.ret.op.i)
  %623 = call ptr @malloc(i32 24)
  %624 = load ptr, ptr %9, align 8
  store ptr %624, ptr %623, align 8
  %memberidx1.i.i224 = getelementptr inbounds %GeneratedModule, ptr %623, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i224, align 8
  %625 = call i1 @LLVMVerifyModule(ptr %624, i64 1, ptr nonnull %memberidx1.i.i224)
  br i1 %625, label %if.entry.i.i231, label %CodeGen_codegen.exit

if.entry.i.i231:                                  ; preds = %Program___del__.exit.i
  %626 = call ptr @malloc(i32 8)
  store i64 7812670522611888741, ptr %626, align 8
  %627 = call ptr @malloc(i32 24)
  store ptr %626, ptr %627, align 8
  %memberidx1.i.i.i.i225 = getelementptr inbounds %String, ptr %627, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i.i.i225, align 4
  %memberidx2.i.i.i.i226 = getelementptr inbounds %String, ptr %627, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i.i.i226, align 4
  call fastcc void @GeneratedModule_write_ir(ptr nonnull %623, ptr nonnull %627)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  %628 = load ptr, ptr %memberidx1.i.i224, align 8
  %629 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %628)
  %630 = trunc i64 %629 to i32
  %631 = call ptr @malloc(i32 %630)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %631, ptr align 8 %628, i64 %629, i1 false)
  %632 = call ptr @malloc(i32 24)
  store ptr %631, ptr %632, align 8
  %memberidx1.i.i13.i.i = getelementptr inbounds %String, ptr %632, i64 0, i32 1
  store i64 %629, ptr %memberidx1.i.i13.i.i, align 4
  %memberidx2.i.i14.i.i = getelementptr inbounds %String, ptr %632, i64 0, i32 2
  store i64 %629, ptr %memberidx2.i.i14.i.i, align 4
  %633 = load ptr, ptr %memberidx1.i.i224, align 8
  call void @LLVMDisposeMessage(ptr %633)
  %634 = add i32 %630, 1
  %635 = call ptr @malloc(i32 %634)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %635, ptr align 8 %631, i64 %629, i1 false)
  %636 = getelementptr inbounds i8, ptr %635, i64 %629
  store i8 0, ptr %636, align 1
  %637 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @2, ptr %635)
  %638 = load ptr, ptr %8, align 8
  %639 = call ptr @malloc(i32 24)
  call void @free(ptr %635)
  %640 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %640, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %641 = call ptr @malloc(i32 24)
  %642 = call i64 @write(i64 1, ptr %640, i64 7)
  call void @free(ptr %640)
  call void @free(ptr %641)
  %643 = call i64 @write(i64 1, ptr %638, i64 %637)
  %644 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %638)
  call void @free(ptr %639)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  br label %CodeGen_codegen.exit

CodeGen_codegen.exit:                             ; preds = %Program___del__.exit.i, %if.entry.i.i231
  call void @LLVM_InitializeAllTargetInfos()
  call void @LLVM_InitializeAllTargets()
  call void @LLVM_InitializeAllTargetMCs()
  call void @LLVM_InitializeAllAsmParsers()
  call void @LLVM_InitializeAllAsmPrinters()
  call void @llvm.lifetime.end.p0(i64 81, ptr nonnull %9)
  %645 = load i64, ptr %memberidx.i166, align 8
  %646 = icmp eq i64 %645, 0
  br i1 %646, label %GeneratedModule_run_passes.exit, label %ifend.i232

ifend.i232:                                       ; preds = %CodeGen_codegen.exit
  %647 = call ptr @LLVMCreatePassManager()
  %648 = load ptr, ptr %623, align 8
  %649 = call ptr @LLVMCreateFunctionPassManagerForModule(ptr %648)
  %650 = call ptr @LLVMPassManagerBuilderCreate()
  call void @LLVMAddInternalizePass(ptr %647, i64 1)
  call void @LLVMAddGlobalDCEPass(ptr %647)
  call void @LLVMAddGlobalOptimizerPass(ptr %647)
  call void @LLVMAddInstructionCombiningPass(ptr %647)
  call void @LLVMAddScalarReplAggregatesPass(ptr %647)
  call void @LLVMAddFunctionInliningPass(ptr %647)
  call void @LLVMPassManagerBuilderSetOptLevel(ptr %650, i64 %645)
  call void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr %650, i64 255)
  call void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr %650, ptr %649)
  %651 = load ptr, ptr %623, align 8
  %652 = call ptr @LLVMGetFirstFunction(ptr %651)
  %.not.i374 = icmp eq ptr %652, null
  br i1 %.not.i374, label %while.end.i, label %while.body.i

while.end.i:                                      ; preds = %while.body.i, %ifend.i232
  call void @LLVMPassManagerBuilderPopulateModulePassManager(ptr %650, ptr %647)
  %653 = load ptr, ptr %623, align 8
  %654 = call i1 @LLVMRunPassManager(ptr %647, ptr %653)
  call void @LLVMDisposePassManager(ptr %649)
  call void @LLVMPassManagerBuilderDispose(ptr %650)
  call void @LLVMDisposePassManager(ptr %647)
  br label %GeneratedModule_run_passes.exit

while.body.i:                                     ; preds = %ifend.i232, %while.body.i
  %func.0.i375 = phi ptr [ %656, %while.body.i ], [ %652, %ifend.i232 ]
  %655 = call i1 @LLVMRunFunctionPassManager(ptr %649, ptr nonnull %func.0.i375)
  %656 = call ptr @LLVMGetNextFunction(ptr nonnull %func.0.i375)
  %.not.i = icmp eq ptr %656, null
  br i1 %.not.i, label %while.end.i, label %while.body.i

GeneratedModule_run_passes.exit:                  ; preds = %CodeGen_codegen.exit, %while.end.i
  %657 = load ptr, ptr %memberidx.i148, align 8
  call fastcc void @GeneratedModule_set_target_machine(ptr nonnull %623, ptr %657)
  %658 = load ptr, ptr %memberidx.i111, align 8
  %659 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %659, ptr noundef nonnull align 8 dereferenceable(3) @294, i64 3, i1 false)
  %660 = call ptr @malloc(i32 24)
  store ptr %659, ptr %660, align 8
  %memberidx1.i.i233 = getelementptr inbounds %String, ptr %660, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i233, align 4
  %memberidx2.i.i234 = getelementptr inbounds %String, ptr %660, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i234, align 4
  %memberidx.i235 = getelementptr inbounds %String, ptr %658, i64 0, i32 1
  %661 = load i64, ptr %memberidx.i235, align 4
  %.not.i237 = icmp eq i64 %661, 3
  br i1 %.not.i237, label %ifend.i239, label %else32

ifend.i239:                                       ; preds = %GeneratedModule_run_passes.exit
  %662 = load ptr, ptr %658, align 8
  %663 = call i64 @memcmp(ptr %662, ptr nonnull %659, i64 3)
  %664 = icmp eq i64 %663, 0
  br i1 %664, label %if.entry31, label %else32

if.entry31:                                       ; preds = %ifend.i239
  %665 = call ptr @malloc(i32 13)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %665, ptr noundef nonnull align 8 dereferenceable(13) @295, i64 13, i1 false)
  %666 = call ptr @malloc(i32 24)
  store ptr %665, ptr %666, align 8
  %memberidx1.i.i240 = getelementptr inbounds %String, ptr %666, i64 0, i32 1
  store i64 13, ptr %memberidx1.i.i240, align 4
  %memberidx2.i.i241 = getelementptr inbounds %String, ptr %666, i64 0, i32 2
  store i64 13, ptr %memberidx2.i.i241, align 4
  %667 = call ptr @malloc(i32 14)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %667, ptr noundef nonnull align 8 dereferenceable(13) %665, i64 13, i1 false)
  %668 = getelementptr inbounds i8, ptr %667, i64 13
  store i8 0, ptr %668, align 1
  %memberidx.i242 = getelementptr inbounds %GeneratedModule, ptr %623, i64 0, i32 2
  %669 = load ptr, ptr %memberidx.i242, align 8
  %670 = load ptr, ptr %623, align 8
  %671 = call i1 @LLVMTargetMachineEmitToFile(ptr %669, ptr %670, ptr %667, i64 1, ptr nonnull %memberidx1.i.i224)
  br i1 %671, label %if.entry.i244, label %GeneratedModule_write_obj.exit

if.entry.i244:                                    ; preds = %if.entry31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %672 = load ptr, ptr %memberidx1.i.i224, align 8
  %673 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %672)
  %674 = trunc i64 %673 to i32
  %675 = call ptr @malloc(i32 %674)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %675, ptr align 8 %672, i64 %673, i1 false)
  %676 = call ptr @malloc(i32 24)
  store ptr %675, ptr %676, align 8
  %memberidx1.i.i344 = getelementptr inbounds %String, ptr %676, i64 0, i32 1
  store i64 %673, ptr %memberidx1.i.i344, align 4
  %memberidx2.i.i345 = getelementptr inbounds %String, ptr %676, i64 0, i32 2
  store i64 %673, ptr %memberidx2.i.i345, align 4
  %677 = load ptr, ptr %memberidx1.i.i224, align 8
  call void @LLVMDisposeMessage(ptr %677)
  %678 = add i32 %674, 1
  %679 = call ptr @malloc(i32 %678)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %679, ptr align 8 %675, i64 %673, i1 false)
  %680 = getelementptr inbounds i8, ptr %679, i64 %673
  store i8 0, ptr %680, align 1
  %681 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @2, ptr %679)
  %682 = load ptr, ptr %4, align 8
  %683 = call ptr @malloc(i32 24)
  call void @free(ptr %679)
  %684 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %684, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %685 = call ptr @malloc(i32 24)
  %686 = call i64 @write(i64 1, ptr %684, i64 7)
  call void @free(ptr %684)
  call void @free(ptr %685)
  %687 = call i64 @write(i64 1, ptr %682, i64 %681)
  %688 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %682)
  call void @free(ptr %683)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %GeneratedModule_write_obj.exit

GeneratedModule_write_obj.exit:                   ; preds = %if.entry31, %if.entry.i244
  call void @free(ptr nonnull %667)
  call void @free(ptr nonnull %665)
  call void @free(ptr nonnull %666)
  %689 = load ptr, ptr %memberidx.i157, align 8
  %.not = icmp eq ptr %689, null
  br i1 %.not, label %false_block, label %true_block

else32:                                           ; preds = %GeneratedModule_run_passes.exit, %ifend.i239
  %690 = load ptr, ptr %memberidx.i111, align 8
  %691 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %691, ptr noundef nonnull align 8 dereferenceable(7) @300, i64 7, i1 false)
  %692 = call ptr @malloc(i32 24)
  store ptr %691, ptr %692, align 8
  %memberidx1.i.i246 = getelementptr inbounds %String, ptr %692, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i246, align 4
  %memberidx2.i.i247 = getelementptr inbounds %String, ptr %692, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i247, align 4
  %memberidx.i248 = getelementptr inbounds %String, ptr %690, i64 0, i32 1
  %693 = load i64, ptr %memberidx.i248, align 4
  %.not.i250 = icmp eq i64 %693, 7
  br i1 %.not.i250, label %ifend.i252, label %else43

ifend.i252:                                       ; preds = %else32
  %694 = load ptr, ptr %690, align 8
  %695 = call i64 @memcmp(ptr %694, ptr nonnull %691, i64 7)
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %if.entry42, label %else43

ifend33:                                          ; preds = %GeneratedModule_write_asm.exit, %GeneratedModule_exec.exit, %GeneratedModule_write_obj.exit300, %if.entry47, %if.entry42, %end
  %code.0 = phi i64 [ 0, %end ], [ 0, %if.entry42 ], [ 0, %if.entry47 ], [ 0, %GeneratedModule_write_obj.exit300 ], [ 0, %GeneratedModule_write_asm.exit ], [ %common.ret.op.i330, %GeneratedModule_exec.exit ]
  tail call void @free(ptr %209)
  br label %common.ret

true_block:                                       ; preds = %GeneratedModule_write_obj.exit
  %memberidx.i254 = getelementptr inbounds %String, ptr %689, i64 0, i32 1
  %697 = load i64, ptr %memberidx.i254, align 4
  %698 = trunc i64 %697 to i32
  %699 = add i32 %698, 1
  %700 = call ptr @malloc(i32 %699)
  %701 = load ptr, ptr %689, align 8
  %702 = load i64, ptr %memberidx.i254, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %700, ptr align 8 %701, i64 %702, i1 false)
  %703 = getelementptr inbounds i8, ptr %700, i64 %702
  store i8 0, ptr %703, align 1
  %704 = alloca ptr, align 8
  %705 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %704, ptr nonnull @296, ptr %700)
  %706 = load ptr, ptr %704, align 8
  %707 = tail call ptr @malloc(i32 24)
  store ptr %706, ptr %707, align 8
  %memberidx1.i255 = getelementptr inbounds %String, ptr %707, i64 0, i32 1
  store i64 %705, ptr %memberidx1.i255, align 4
  %memberidx2.i256 = getelementptr inbounds %String, ptr %707, i64 0, i32 2
  store i64 %705, ptr %memberidx2.i256, align 4
  tail call void @free(ptr %700)
  br label %end

false_block:                                      ; preds = %GeneratedModule_write_obj.exit
  %708 = call ptr @malloc(i32 0)
  %709 = call ptr @malloc(i32 24)
  store ptr %708, ptr %709, align 8
  %memberidx1.i.i257 = getelementptr inbounds %String, ptr %709, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i257, i8 0, i64 16, i1 false)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %707, %true_block ], [ %709, %false_block ]
  %710 = call ptr @malloc(i32 8)
  store i64 3832894680125762659, ptr %710, align 8
  %711 = call ptr @malloc(i32 24)
  store ptr %710, ptr %711, align 8
  %memberidx.i261 = getelementptr inbounds %String, ptr %ternary, i64 0, i32 1
  %712 = load i64, ptr %memberidx.i261, align 4
  %713 = trunc i64 %712 to i32
  %714 = add i32 %713, 1
  %715 = call ptr @malloc(i32 %714)
  %716 = load ptr, ptr %ternary, align 8
  %717 = load i64, ptr %memberidx.i261, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %715, ptr align 8 %716, i64 %717, i1 false)
  %718 = getelementptr inbounds i8, ptr %715, i64 %717
  store i8 0, ptr %718, align 1
  %719 = alloca ptr, align 8
  %720 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %719, ptr nonnull @297, ptr %715)
  %721 = load ptr, ptr %719, align 8
  %722 = tail call ptr @malloc(i32 24)
  store ptr %721, ptr %722, align 8
  tail call void @free(ptr %715)
  %723 = call ptr @malloc(i32 9)
  %724 = load i64, ptr %710, align 8
  store i64 %724, ptr %723, align 8
  %725 = getelementptr inbounds i8, ptr %723, i64 8
  store i8 0, ptr %725, align 1
  %726 = trunc i64 %720 to i32
  %727 = add i32 %726, 1
  %728 = call ptr @malloc(i32 %727)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %728, ptr align 8 %721, i64 %720, i1 false)
  %729 = getelementptr inbounds i8, ptr %728, i64 %720
  store i8 0, ptr %729, align 1
  %730 = load ptr, ptr %memberidx1.i.i154, align 8
  %memberidx.i266 = getelementptr inbounds %String, ptr %730, i64 0, i32 1
  %731 = load i64, ptr %memberidx.i266, align 4
  %732 = trunc i64 %731 to i32
  %733 = add i32 %732, 1
  %734 = call ptr @malloc(i32 %733)
  %735 = load ptr, ptr %730, align 8
  %736 = load i64, ptr %memberidx.i266, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %734, ptr align 8 %735, i64 %736, i1 false)
  %737 = getelementptr inbounds i8, ptr %734, i64 %736
  store i8 0, ptr %737, align 1
  %738 = load ptr, ptr %memberidx.i157, align 8
  %memberidx.i267 = getelementptr inbounds %String, ptr %738, i64 0, i32 1
  %739 = load i64, ptr %memberidx.i267, align 4
  %740 = trunc i64 %739 to i32
  %741 = add i32 %740, 1
  %742 = call ptr @malloc(i32 %741)
  %743 = load ptr, ptr %738, align 8
  %744 = load i64, ptr %memberidx.i267, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %742, ptr align 8 %743, i64 %744, i1 false)
  %745 = getelementptr inbounds i8, ptr %742, i64 %744
  store i8 0, ptr %745, align 1
  %746 = load ptr, ptr %memberidx2.i.i155, align 8
  %memberidx.i268 = getelementptr inbounds %String, ptr %746, i64 0, i32 1
  %747 = load i64, ptr %memberidx.i268, align 4
  %748 = trunc i64 %747 to i32
  %749 = add i32 %748, 1
  %750 = call ptr @malloc(i32 %749)
  %751 = load ptr, ptr %746, align 8
  %752 = load i64, ptr %memberidx.i268, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %750, ptr align 8 %751, i64 %752, i1 false)
  %753 = getelementptr inbounds i8, ptr %750, i64 %752
  store i8 0, ptr %753, align 1
  %754 = load i64, ptr %92, align 8
  %755 = getelementptr inbounds ptr, ptr @FlagType_names, i64 %754
  %756 = load ptr, ptr %755, align 8
  %757 = alloca ptr, align 8
  %758 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %757, ptr nonnull @298, ptr %734, ptr %742, ptr %750, ptr %756)
  %759 = load ptr, ptr %757, align 8
  %760 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i269 = getelementptr inbounds %String, ptr %760, i64 0, i32 1
  %761 = load i64, ptr %memberidx.i269, align 4
  %762 = trunc i64 %761 to i32
  %763 = add i32 %762, 1
  %764 = call ptr @malloc(i32 %763)
  %765 = load ptr, ptr %760, align 8
  %766 = load i64, ptr %memberidx.i269, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %764, ptr align 8 %765, i64 %766, i1 false)
  %767 = getelementptr inbounds i8, ptr %764, i64 %766
  store i8 0, ptr %767, align 1
  %768 = alloca ptr, align 8
  %769 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %768, ptr nonnull @299, ptr nonnull %723, ptr %728, ptr %759, ptr %764)
  %770 = load ptr, ptr %768, align 8
  tail call void @free(ptr %723)
  tail call void @free(ptr %728)
  tail call void @free(ptr %734)
  tail call void @free(ptr %742)
  tail call void @free(ptr %750)
  tail call void @free(ptr %756)
  tail call void @free(ptr %759)
  tail call void @free(ptr %764)
  call void @system(ptr %770)
  call void @free(ptr %721)
  tail call void @free(ptr %722)
  %771 = load ptr, ptr %ternary, align 8
  call void @free(ptr %771)
  tail call void @free(ptr nonnull %ternary)
  call void @free(ptr %710)
  tail call void @free(ptr %711)
  br label %ifend33

if.entry42:                                       ; preds = %ifend.i252
  %772 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i270 = getelementptr inbounds %String, ptr %772, i64 0, i32 1
  %773 = load i64, ptr %memberidx.i270, align 4
  %774 = trunc i64 %773 to i32
  %775 = add i32 %774, 1
  %776 = call ptr @malloc(i32 %775)
  %777 = load ptr, ptr %772, align 8
  %778 = load i64, ptr %memberidx.i270, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %776, ptr align 8 %777, i64 %778, i1 false)
  %779 = getelementptr inbounds i8, ptr %776, i64 %778
  store i8 0, ptr %779, align 1
  %780 = alloca ptr, align 8
  %781 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %780, ptr nonnull @6, ptr %776)
  %782 = load ptr, ptr %780, align 8
  %783 = tail call ptr @malloc(i32 24)
  store ptr %782, ptr %783, align 8
  %memberidx1.i271 = getelementptr inbounds %String, ptr %783, i64 0, i32 1
  store i64 %781, ptr %memberidx1.i271, align 4
  %memberidx2.i272 = getelementptr inbounds %String, ptr %783, i64 0, i32 2
  store i64 %781, ptr %memberidx2.i272, align 4
  tail call void @free(ptr %776)
  call fastcc void @GeneratedModule_write_ir(ptr nonnull %623, ptr nonnull %783)
  br label %ifend33

else43:                                           ; preds = %else32, %ifend.i252
  %784 = load ptr, ptr %memberidx.i111, align 8
  %785 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %785, ptr noundef nonnull align 8 dereferenceable(7) @301, i64 7, i1 false)
  %786 = call ptr @malloc(i32 24)
  store ptr %785, ptr %786, align 8
  %memberidx1.i.i273 = getelementptr inbounds %String, ptr %786, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i273, align 4
  %memberidx2.i.i274 = getelementptr inbounds %String, ptr %786, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i274, align 4
  %memberidx.i275 = getelementptr inbounds %String, ptr %784, i64 0, i32 1
  %787 = load i64, ptr %memberidx.i275, align 4
  %.not.i277 = icmp eq i64 %787, 7
  br i1 %.not.i277, label %ifend.i279, label %else48

ifend.i279:                                       ; preds = %else43
  %788 = load ptr, ptr %784, align 8
  %789 = call i64 @memcmp(ptr %788, ptr nonnull %785, i64 7)
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %if.entry47, label %else48

if.entry47:                                       ; preds = %ifend.i279
  %791 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i281 = getelementptr inbounds %String, ptr %791, i64 0, i32 1
  %792 = load i64, ptr %memberidx.i281, align 4
  %793 = trunc i64 %792 to i32
  %794 = add i32 %793, 1
  %795 = call ptr @malloc(i32 %794)
  %796 = load ptr, ptr %791, align 8
  %797 = load i64, ptr %memberidx.i281, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %795, ptr align 8 %796, i64 %797, i1 false)
  %798 = getelementptr inbounds i8, ptr %795, i64 %797
  store i8 0, ptr %798, align 1
  %799 = alloca ptr, align 8
  %800 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %799, ptr nonnull @6, ptr %795)
  %801 = load ptr, ptr %799, align 8
  %802 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %795)
  %803 = trunc i64 %800 to i32
  %804 = add i32 %803, 1
  %805 = call ptr @malloc(i32 %804)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %805, ptr align 8 %801, i64 %800, i1 false)
  %806 = getelementptr inbounds i8, ptr %805, i64 %800
  store i8 0, ptr %806, align 1
  %807 = load ptr, ptr %623, align 8
  %808 = call i64 @LLVMWriteBitcodeToFile(ptr %807, ptr %805)
  call void @free(ptr %805)
  call void @free(ptr %801)
  call void @free(ptr %802)
  br label %ifend33

else48:                                           ; preds = %else43, %ifend.i279
  %809 = load ptr, ptr %memberidx.i111, align 8
  %810 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %810, ptr noundef nonnull align 8 dereferenceable(3) @302, i64 3, i1 false)
  %811 = call ptr @malloc(i32 24)
  store ptr %810, ptr %811, align 8
  %memberidx1.i.i285 = getelementptr inbounds %String, ptr %811, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i285, align 4
  %memberidx2.i.i286 = getelementptr inbounds %String, ptr %811, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i286, align 4
  %memberidx.i287 = getelementptr inbounds %String, ptr %809, i64 0, i32 1
  %812 = load i64, ptr %memberidx.i287, align 4
  %.not.i289 = icmp eq i64 %812, 3
  br i1 %.not.i289, label %ifend.i291, label %else53

ifend.i291:                                       ; preds = %else48
  %813 = load ptr, ptr %809, align 8
  %814 = call i64 @memcmp(ptr %813, ptr nonnull %810, i64 3)
  %815 = icmp eq i64 %814, 0
  br i1 %815, label %if.entry52, label %else53

if.entry52:                                       ; preds = %ifend.i291
  %816 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i293 = getelementptr inbounds %String, ptr %816, i64 0, i32 1
  %817 = load i64, ptr %memberidx.i293, align 4
  %818 = trunc i64 %817 to i32
  %819 = add i32 %818, 1
  %820 = call ptr @malloc(i32 %819)
  %821 = load ptr, ptr %816, align 8
  %822 = load i64, ptr %memberidx.i293, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %820, ptr align 8 %821, i64 %822, i1 false)
  %823 = getelementptr inbounds i8, ptr %820, i64 %822
  store i8 0, ptr %823, align 1
  %824 = alloca ptr, align 8
  %825 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %824, ptr nonnull @6, ptr %820)
  %826 = load ptr, ptr %824, align 8
  %827 = tail call ptr @malloc(i32 24)
  store ptr %826, ptr %827, align 8
  %memberidx1.i294 = getelementptr inbounds %String, ptr %827, i64 0, i32 1
  store i64 %825, ptr %memberidx1.i294, align 4
  %memberidx2.i295 = getelementptr inbounds %String, ptr %827, i64 0, i32 2
  store i64 %825, ptr %memberidx2.i295, align 4
  tail call void @free(ptr %820)
  %828 = trunc i64 %825 to i32
  %829 = add i32 %828, 1
  %830 = call ptr @malloc(i32 %829)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %830, ptr align 8 %826, i64 %825, i1 false)
  %831 = getelementptr inbounds i8, ptr %830, i64 %825
  store i8 0, ptr %831, align 1
  %memberidx.i296 = getelementptr inbounds %GeneratedModule, ptr %623, i64 0, i32 2
  %832 = load ptr, ptr %memberidx.i296, align 8
  %833 = load ptr, ptr %623, align 8
  %834 = call i1 @LLVMTargetMachineEmitToFile(ptr %832, ptr %833, ptr %830, i64 1, ptr nonnull %memberidx1.i.i224)
  br i1 %834, label %if.entry.i298, label %GeneratedModule_write_obj.exit300

if.entry.i298:                                    ; preds = %if.entry52
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %835 = load ptr, ptr %memberidx1.i.i224, align 8
  %836 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %835)
  %837 = trunc i64 %836 to i32
  %838 = call ptr @malloc(i32 %837)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %838, ptr align 8 %835, i64 %836, i1 false)
  %839 = call ptr @malloc(i32 24)
  store ptr %838, ptr %839, align 8
  %memberidx1.i.i349 = getelementptr inbounds %String, ptr %839, i64 0, i32 1
  store i64 %836, ptr %memberidx1.i.i349, align 4
  %memberidx2.i.i350 = getelementptr inbounds %String, ptr %839, i64 0, i32 2
  store i64 %836, ptr %memberidx2.i.i350, align 4
  %840 = load ptr, ptr %memberidx1.i.i224, align 8
  call void @LLVMDisposeMessage(ptr %840)
  %841 = add i32 %837, 1
  %842 = call ptr @malloc(i32 %841)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %842, ptr align 8 %838, i64 %836, i1 false)
  %843 = getelementptr inbounds i8, ptr %842, i64 %836
  store i8 0, ptr %843, align 1
  %844 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %842)
  %845 = load ptr, ptr %3, align 8
  %846 = call ptr @malloc(i32 24)
  call void @free(ptr %842)
  %847 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %847, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %848 = call ptr @malloc(i32 24)
  %849 = call i64 @write(i64 1, ptr %847, i64 7)
  call void @free(ptr %847)
  call void @free(ptr %848)
  %850 = call i64 @write(i64 1, ptr %845, i64 %844)
  %851 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %845)
  call void @free(ptr %846)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %GeneratedModule_write_obj.exit300

GeneratedModule_write_obj.exit300:                ; preds = %if.entry52, %if.entry.i298
  call void @free(ptr nonnull %830)
  call void @free(ptr %826)
  call void @free(ptr nonnull %827)
  br label %ifend33

else53:                                           ; preds = %else48, %ifend.i291
  %852 = load ptr, ptr %memberidx.i111, align 8
  %853 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %853, ptr noundef nonnull align 8 dereferenceable(3) @303, i64 3, i1 false)
  %854 = call ptr @malloc(i32 24)
  store ptr %853, ptr %854, align 8
  %memberidx1.i.i301 = getelementptr inbounds %String, ptr %854, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i301, align 4
  %memberidx2.i.i302 = getelementptr inbounds %String, ptr %854, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i302, align 4
  %memberidx.i303 = getelementptr inbounds %String, ptr %852, i64 0, i32 1
  %855 = load i64, ptr %memberidx.i303, align 4
  %.not.i305 = icmp eq i64 %855, 3
  br i1 %.not.i305, label %ifend.i307, label %else58

ifend.i307:                                       ; preds = %else53
  %856 = load ptr, ptr %852, align 8
  %857 = call i64 @memcmp(ptr %856, ptr nonnull %853, i64 3)
  %858 = icmp eq i64 %857, 0
  br i1 %858, label %if.entry57, label %else58

if.entry57:                                       ; preds = %ifend.i307
  %859 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i309 = getelementptr inbounds %String, ptr %859, i64 0, i32 1
  %860 = load i64, ptr %memberidx.i309, align 4
  %861 = trunc i64 %860 to i32
  %862 = add i32 %861, 1
  %863 = call ptr @malloc(i32 %862)
  %864 = load ptr, ptr %859, align 8
  %865 = load i64, ptr %memberidx.i309, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %863, ptr align 8 %864, i64 %865, i1 false)
  %866 = getelementptr inbounds i8, ptr %863, i64 %865
  store i8 0, ptr %866, align 1
  %867 = alloca ptr, align 8
  %868 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %867, ptr nonnull @6, ptr %863)
  %869 = load ptr, ptr %867, align 8
  %870 = tail call ptr @malloc(i32 24)
  store ptr %869, ptr %870, align 8
  %memberidx1.i310 = getelementptr inbounds %String, ptr %870, i64 0, i32 1
  store i64 %868, ptr %memberidx1.i310, align 4
  %memberidx2.i311 = getelementptr inbounds %String, ptr %870, i64 0, i32 2
  store i64 %868, ptr %memberidx2.i311, align 4
  tail call void @free(ptr %863)
  %871 = trunc i64 %868 to i32
  %872 = add i32 %871, 1
  %873 = call ptr @malloc(i32 %872)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %873, ptr align 8 %869, i64 %868, i1 false)
  %874 = getelementptr inbounds i8, ptr %873, i64 %868
  store i8 0, ptr %874, align 1
  %memberidx.i313 = getelementptr inbounds %GeneratedModule, ptr %623, i64 0, i32 2
  %875 = load ptr, ptr %memberidx.i313, align 8
  %876 = load ptr, ptr %623, align 8
  %877 = call i1 @LLVMTargetMachineEmitToFile(ptr %875, ptr %876, ptr %873, i64 0, ptr nonnull %memberidx1.i.i224)
  br i1 %877, label %if.entry.i321, label %GeneratedModule_write_asm.exit

if.entry.i321:                                    ; preds = %if.entry57
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  %878 = load ptr, ptr %memberidx1.i.i224, align 8
  %879 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %878)
  %880 = trunc i64 %879 to i32
  %881 = call ptr @malloc(i32 %880)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %881, ptr align 8 %878, i64 %879, i1 false)
  %882 = call ptr @malloc(i32 24)
  store ptr %881, ptr %882, align 8
  %memberidx1.i.i11.i = getelementptr inbounds %String, ptr %882, i64 0, i32 1
  store i64 %879, ptr %memberidx1.i.i11.i, align 4
  %memberidx2.i.i12.i = getelementptr inbounds %String, ptr %882, i64 0, i32 2
  store i64 %879, ptr %memberidx2.i.i12.i, align 4
  %883 = load ptr, ptr %memberidx1.i.i224, align 8
  call void @LLVMDisposeMessage(ptr %883)
  %884 = add i32 %880, 1
  %885 = call ptr @malloc(i32 %884)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %885, ptr align 8 %881, i64 %879, i1 false)
  %886 = getelementptr inbounds i8, ptr %885, i64 %879
  store i8 0, ptr %886, align 1
  %887 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %7, ptr nonnull @2, ptr %885)
  %888 = load ptr, ptr %7, align 8
  %889 = call ptr @malloc(i32 24)
  call void @free(ptr %885)
  %890 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %890, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %891 = call ptr @malloc(i32 24)
  %892 = call i64 @write(i64 1, ptr %890, i64 7)
  call void @free(ptr %890)
  call void @free(ptr %891)
  %893 = call i64 @write(i64 1, ptr %888, i64 %887)
  %894 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %888)
  call void @free(ptr %889)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  br label %GeneratedModule_write_asm.exit

GeneratedModule_write_asm.exit:                   ; preds = %if.entry57, %if.entry.i321
  call void @free(ptr nonnull %873)
  call void @free(ptr %869)
  call void @free(ptr nonnull %870)
  br label %ifend33

else58:                                           ; preds = %else53, %ifend.i307
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %engine.i)
  call void @LLVMLinkInMCJIT()
  store ptr null, ptr %engine.i, align 8
  %895 = load ptr, ptr %623, align 8
  %896 = call i1 @LLVMCreateExecutionEngineForModule(ptr nonnull %engine.i, ptr %895, ptr nonnull %memberidx1.i.i224)
  br i1 %896, label %if.entry.i328, label %ifend.i329

if.entry.i328:                                    ; preds = %else58
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %897 = load ptr, ptr %memberidx1.i.i224, align 8
  %898 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %897)
  %899 = trunc i64 %898 to i32
  %900 = call ptr @malloc(i32 %899)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %900, ptr align 8 %897, i64 %898, i1 false)
  %901 = call ptr @malloc(i32 24)
  store ptr %900, ptr %901, align 8
  %memberidx1.i.i32.i = getelementptr inbounds %String, ptr %901, i64 0, i32 1
  store i64 %898, ptr %memberidx1.i.i32.i, align 4
  %memberidx2.i.i33.i = getelementptr inbounds %String, ptr %901, i64 0, i32 2
  store i64 %898, ptr %memberidx2.i.i33.i, align 4
  %902 = load ptr, ptr %memberidx1.i.i224, align 8
  call void @LLVMDisposeMessage(ptr %902)
  %903 = add i32 %899, 1
  %904 = call ptr @malloc(i32 %903)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %904, ptr align 8 %900, i64 %898, i1 false)
  %905 = getelementptr inbounds i8, ptr %904, i64 %898
  store i8 0, ptr %905, align 1
  %906 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @2, ptr %904)
  %907 = load ptr, ptr %6, align 8
  %908 = call ptr @malloc(i32 24)
  call void @free(ptr %904)
  %909 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %909, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %910 = call ptr @malloc(i32 24)
  %911 = call i64 @write(i64 1, ptr %909, i64 7)
  call void @free(ptr %909)
  call void @free(ptr %910)
  %912 = call i64 @write(i64 1, ptr %907, i64 %906)
  %913 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %907)
  call void @free(ptr %908)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  br label %ifend.i329

ifend.i329:                                       ; preds = %if.entry.i328, %else58
  %914 = load ptr, ptr %623, align 8
  %915 = call ptr @LLVMGetNamedFunction(ptr %914, ptr nonnull @3)
  %916 = icmp eq ptr %915, null
  br i1 %916, label %if.entry4.i, label %ifend6.i

if.entry4.i:                                      ; preds = %ifend.i329
  %917 = call ptr @malloc(i32 48)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %917, ptr noundef nonnull align 8 dereferenceable(48) @4, i64 48, i1 false)
  %918 = call ptr @malloc(i32 24)
  %919 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %919, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %920 = call ptr @malloc(i32 24)
  %921 = call i64 @write(i64 1, ptr %919, i64 7)
  call void @free(ptr %919)
  call void @free(ptr %920)
  %922 = call i64 @write(i64 1, ptr %917, i64 48)
  %923 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %917)
  call void @free(ptr %918)
  call void @exit(i64 -1)
  br label %GeneratedModule_exec.exit

ifend6.i:                                         ; preds = %ifend.i329
  %924 = load ptr, ptr %engine.i, align 8
  %925 = call i64 @LLVMRunFunctionAsMain(ptr %924, ptr nonnull %915, i64 0, ptr null, ptr null)
  %926 = load ptr, ptr %engine.i, align 8
  %927 = load ptr, ptr %623, align 8
  %928 = call i1 @LLVMRemoveModule(ptr %926, ptr %927, ptr nonnull %623, ptr nonnull %memberidx1.i.i224)
  br i1 %928, label %if.entry12.i, label %GeneratedModule_exec.exit

if.entry12.i:                                     ; preds = %ifend6.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %929 = load ptr, ptr %memberidx1.i.i224, align 8
  %930 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %929)
  %931 = trunc i64 %930 to i32
  %932 = call ptr @malloc(i32 %931)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %932, ptr align 8 %929, i64 %930, i1 false)
  %933 = call ptr @malloc(i32 24)
  store ptr %932, ptr %933, align 8
  %memberidx1.i.i38.i = getelementptr inbounds %String, ptr %933, i64 0, i32 1
  store i64 %930, ptr %memberidx1.i.i38.i, align 4
  %memberidx2.i.i39.i = getelementptr inbounds %String, ptr %933, i64 0, i32 2
  store i64 %930, ptr %memberidx2.i.i39.i, align 4
  %934 = load ptr, ptr %memberidx1.i.i224, align 8
  call void @LLVMDisposeMessage(ptr %934)
  %935 = add i32 %931, 1
  %936 = call ptr @malloc(i32 %935)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %936, ptr align 8 %932, i64 %930, i1 false)
  %937 = getelementptr inbounds i8, ptr %936, i64 %930
  store i8 0, ptr %937, align 1
  %938 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @2, ptr %936)
  %939 = load ptr, ptr %5, align 8
  %940 = call ptr @malloc(i32 24)
  call void @free(ptr %936)
  %941 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %941, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %942 = call ptr @malloc(i32 24)
  %943 = call i64 @write(i64 1, ptr %941, i64 7)
  call void @free(ptr %941)
  call void @free(ptr %942)
  %944 = call i64 @write(i64 1, ptr %939, i64 %938)
  %945 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %939)
  call void @free(ptr %940)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %GeneratedModule_exec.exit

GeneratedModule_exec.exit:                        ; preds = %ifend6.i, %if.entry12.i, %if.entry4.i
  %common.ret.op.i330 = phi i64 [ 1, %if.entry4.i ], [ %925, %if.entry12.i ], [ %925, %ifend6.i ]
  %.sink = load ptr, ptr %engine.i, align 8
  call void @LLVMDisposeExecutionEngine(ptr %.sink)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %engine.i)
  br label %ifend33
}

declare noalias ptr @malloc(i32) local_unnamed_addr

; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

declare i64 @memcmp(ptr, ptr, i64) local_unnamed_addr

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free")
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(ptr nocapture) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1)
declare noalias noundef ptr @realloc(ptr allocptr nocapture, i64 noundef) local_unnamed_addr #4

define internal fastcc void @GeneratedModule_set_target_machine(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %target = alloca ptr, align 8
  %memberidx = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %4 = load i64, ptr %memberidx, align 4
  %5 = add nuw i64 %4, 1
  %6 = alloca i8, i64 %5, align 1
  %7 = load ptr, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %6, ptr align 8 %7, i64 %4, i1 false)
  %8 = getelementptr inbounds i8, ptr %6, i64 %4
  store i8 0, ptr %8, align 1
  store ptr null, ptr %target, align 8
  %memberidx3 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %9 = call i1 @LLVMGetTargetFromTriple(ptr nonnull %6, ptr nonnull %target, ptr nonnull %memberidx3)
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10)
  %12 = trunc i64 %11 to i32
  %13 = call ptr @malloc(i32 %12)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %10, i64 %11, i1 false)
  %14 = call ptr @malloc(i32 24)
  store ptr %13, ptr %14, align 8
  %memberidx1.i.i23 = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  store i64 %11, ptr %memberidx1.i.i23, align 4
  %memberidx2.i.i24 = getelementptr inbounds %String, ptr %14, i64 0, i32 2
  store i64 %11, ptr %memberidx2.i.i24, align 4
  %15 = load ptr, ptr %memberidx3, align 8
  call void @LLVMDisposeMessage(ptr %15)
  %16 = add i32 %12, 1
  %17 = call ptr @malloc(i32 %16)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %13, i64 %11, i1 false)
  %18 = getelementptr inbounds i8, ptr %17, i64 %11
  store i8 0, ptr %18, align 1
  %19 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %17)
  %20 = load ptr, ptr %3, align 8
  %21 = call ptr @malloc(i32 24)
  call void @free(ptr %17)
  %22 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %22, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %23 = call ptr @malloc(i32 24)
  %24 = call i64 @write(i64 1, ptr %22, i64 7)
  call void @free(ptr %22)
  call void @free(ptr %23)
  %25 = call i64 @write(i64 1, ptr %20, i64 %19)
  %26 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %20)
  call void @free(ptr %21)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  %memberidx5 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %target, align 8
  %28 = call ptr @LLVMGetHostCPUFeatures()
  %29 = call ptr @LLVMCreateTargetMachine(ptr %27, ptr nonnull %6, ptr nonnull @5, ptr %28, i64 3, i64 0, i64 0)
  store ptr %29, ptr %memberidx5, align 8
  %30 = load ptr, ptr %0, align 8
  %31 = call ptr @LLVMCreateTargetDataLayout(ptr %29)
  call void @LLVMSetDataLayout(ptr %30, ptr %31)
  %32 = load ptr, ptr %0, align 8
  %33 = load ptr, ptr %memberidx5, align 8
  %34 = call ptr @LLVMGetTargetMachineTriple(ptr %33)
  call void @LLVMSetTarget(ptr %32, ptr %34)
  ret void
}

define internal fastcc void @GeneratedModule_write_ir(ptr %0, ptr nocapture %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = trunc i64 %4 to i32
  %6 = add i32 %5, 1
  %7 = tail call ptr @malloc(i32 %6)
  %8 = load ptr, ptr %1, align 8
  %9 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %8, i64 %9, i1 false)
  %10 = getelementptr inbounds i8, ptr %7, i64 %9
  store i8 0, ptr %10, align 1
  %11 = load ptr, ptr %0, align 8
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %12 = tail call i1 @LLVMPrintModuleToFile(ptr %11, ptr %7, ptr nonnull %memberidx1)
  br i1 %12, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %13 = load ptr, ptr %memberidx1, align 8
  %14 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %13)
  %15 = trunc i64 %14 to i32
  %16 = tail call ptr @malloc(i32 %15)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %13, i64 %14, i1 false)
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  %memberidx1.i.i9 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  store i64 %14, ptr %memberidx1.i.i9, align 4
  %memberidx2.i.i10 = getelementptr inbounds %String, ptr %17, i64 0, i32 2
  store i64 %14, ptr %memberidx2.i.i10, align 4
  %18 = load ptr, ptr %memberidx1, align 8
  tail call void @LLVMDisposeMessage(ptr %18)
  %19 = add i32 %15, 1
  %20 = tail call ptr @malloc(i32 %19)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %16, i64 %14, i1 false)
  %21 = getelementptr inbounds i8, ptr %20, i64 %14
  store i8 0, ptr %21, align 1
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %20)
  %23 = load ptr, ptr %3, align 8
  %24 = call ptr @malloc(i32 24)
  call void @free(ptr %20)
  %25 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %25, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %26 = call ptr @malloc(i32 24)
  %27 = call i64 @write(i64 1, ptr %25, i64 7)
  call void @free(ptr %25)
  call void @free(ptr %26)
  %28 = call i64 @write(i64 1, ptr %23, i64 %22)
  %29 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %23)
  call void @free(ptr %24)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  tail call void @free(ptr nonnull %7)
  %30 = load ptr, ptr %1, align 8
  call void @free(ptr %30)
  tail call void @free(ptr nonnull %1)
  ret void
}

declare i1 @LLVMVerifyModule(ptr, i64, ptr) local_unnamed_addr

declare void @LLVM_InitializeAllTargetInfos() local_unnamed_addr

declare void @LLVM_InitializeAllTargets() local_unnamed_addr

declare void @LLVM_InitializeAllTargetMCs() local_unnamed_addr

declare void @LLVM_InitializeAllAsmParsers() local_unnamed_addr

declare void @LLVM_InitializeAllAsmPrinters() local_unnamed_addr

declare void @LLVMDisposeMessage(ptr) local_unnamed_addr

; Function Attrs: nofree
declare noundef i64 @write(i64 noundef, ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #0

declare void @exit(i64) local_unnamed_addr

declare i64 @asprintf(ptr, ptr, ...) local_unnamed_addr

declare ptr @LLVMCreatePassManager() local_unnamed_addr

declare ptr @LLVMCreateFunctionPassManagerForModule(ptr) local_unnamed_addr

declare ptr @LLVMPassManagerBuilderCreate() local_unnamed_addr

declare void @LLVMAddInternalizePass(ptr, i64) local_unnamed_addr

declare void @LLVMAddGlobalDCEPass(ptr) local_unnamed_addr

declare void @LLVMAddGlobalOptimizerPass(ptr) local_unnamed_addr

declare void @LLVMAddInstructionCombiningPass(ptr) local_unnamed_addr

declare void @LLVMAddScalarReplAggregatesPass(ptr) local_unnamed_addr

declare void @LLVMAddFunctionInliningPass(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderSetOptLevel(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetFirstFunction(ptr) local_unnamed_addr

declare i1 @LLVMRunFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNextFunction(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateModulePassManager(ptr, ptr) local_unnamed_addr

declare i1 @LLVMRunPassManager(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposePassManager(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderDispose(ptr) local_unnamed_addr

declare void @LLVMLinkInMCJIT() local_unnamed_addr

declare i1 @LLVMCreateExecutionEngineForModule(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNamedFunction(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposeExecutionEngine(ptr) local_unnamed_addr

declare i64 @LLVMRunFunctionAsMain(ptr, ptr, i64, ptr, ptr) local_unnamed_addr

declare i1 @LLVMRemoveModule(ptr, ptr, ptr, ptr) local_unnamed_addr

declare i1 @LLVMGetTargetFromTriple(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetMachine(ptr, ptr, ptr, ptr, i64, i64, i64) local_unnamed_addr

declare ptr @LLVMGetHostCPUFeatures() local_unnamed_addr

declare void @LLVMSetDataLayout(ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetDataLayout(ptr) local_unnamed_addr

declare void @LLVMSetTarget(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetTargetMachineTriple(ptr) local_unnamed_addr

declare i1 @LLVMTargetMachineEmitToFile(ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare i1 @LLVMPrintModuleToFile(ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMWriteBitcodeToFile(ptr, ptr) local_unnamed_addr

define internal fastcc i1 @Compiler_print_errors(ptr nocapture readonly %0) unnamed_addr {
  %2 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_FloError_, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %if.entry, label %common.ret

common.ret:                                       ; preds = %1, %print_error.exit
  ret i1 %5

if.entry:                                         ; preds = %1
  %6 = load ptr, ptr %3, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = load ptr, ptr %0, align 8
  %10 = load i64, ptr %9, align 4
  %11 = load ptr, ptr %8, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx6 = getelementptr inbounds %FloFile, ptr %13, i64 0, i32 1
  %14 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %memberidx7, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %16 = load i64, ptr %7, align 4
  %memberidx1.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 1
  %17 = load ptr, ptr %memberidx1.i, align 8
  tail call fastcc void @print_message_error(i64 %16, ptr %17)
  %memberidx.i.i = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i.i, align 4
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, 1
  %21 = tail call ptr @malloc(i32 %20)
  %22 = load ptr, ptr %14, align 8
  %23 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, ptr %21, i64 %23
  store i8 0, ptr %24, align 1
  %memberidx2.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 2
  %25 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  %26 = load i64, ptr %memberidx3.i, align 4
  %27 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @16, ptr %21, i64 %26)
  %28 = load ptr, ptr %2, align 8
  %29 = call ptr @malloc(i32 24)
  call void @free(ptr %21)
  %30 = call i64 @write(i64 1, ptr %28, i64 %27)
  %31 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %28)
  call void @free(ptr %29)
  %32 = load ptr, ptr %memberidx2.i, align 8
  %memberidx.i8.i = getelementptr inbounds %FloRange, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i8.i, align 4
  %34 = load ptr, ptr %15, align 8
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i.i.i, align 4
  br label %while.entry.i.i.i

while.entry.i.i.i:                                ; preds = %while.entry.i.i.i, %if.entry
  %start.0.i.i.i = phi i64 [ %33, %if.entry ], [ %41, %while.entry.i.i.i ]
  %36 = getelementptr inbounds i8, ptr %34, i64 %start.0.i.i.i
  %37 = load i8, ptr %36, align 1
  %38 = icmp ne i8 %37, 10
  %39 = icmp slt i64 %start.0.i.i.i, %35
  %40 = and i1 %38, %39
  %41 = add nsw i64 %start.0.i.i.i, 1
  br i1 %40, label %while.entry.i.i.i, label %get_next_line_index.exit.i.i

get_next_line_index.exit.i.i:                     ; preds = %while.entry.i.i.i
  %42 = load i64, ptr %32, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %32, i64 0, i32 2
  %43 = load i64, ptr %memberidx3.i.i, align 4
  %44 = sub nsw i64 %42, %43
  %45 = sub nuw i64 %start.0.i.i.i, %44
  %46 = trunc i64 %45 to i32
  %47 = call ptr @malloc(i32 %46)
  %48 = load ptr, ptr %15, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %44
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 536870912 %49, i64 %45, i1 false)
  %50 = call ptr @malloc(i32 24)
  %51 = call i64 @write(i64 1, ptr %47, i64 %45)
  %52 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %47)
  call void @free(ptr %50)
  %53 = load i64, ptr %memberidx3.i.i, align 4
  %54 = load i64, ptr %memberidx.i8.i, align 4
  %55 = load i64, ptr %32, align 4
  %56 = sub nuw i64 %54, %55
  %57 = call ptr @malloc(i32 16)
  store i64 0, ptr %57, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Range, ptr %57, i64 0, i32 1
  store i64 %53, ptr %memberidx1.i.i.i, align 4
  %58 = call ptr @malloc(i32 17)
  %memberidx.i.i21.i.i = getelementptr inbounds %RangeIterator, ptr %58, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i21.i.i, align 4
  %memberidx1.i.i22.i.i = getelementptr inbounds %RangeIterator, ptr %58, i64 0, i32 2
  store i64 %53, ptr %memberidx1.i.i22.i.i, align 4
  %59 = icmp slt i64 %53, 1
  br i1 %59, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %get_next_line_index.exit.i.i, %for.body.i.i
  %60 = phi i64 [ %64, %for.body.i.i ], [ 1, %get_next_line_index.exit.i.i ]
  %61 = call ptr @malloc(i32 1)
  store i8 32, ptr %61, align 8
  %62 = call ptr @malloc(i32 24)
  %63 = call i64 @write(i64 1, ptr nonnull %61, i64 1)
  call void @free(ptr %61)
  call void @free(ptr %62)
  %.not = icmp slt i64 %60, %53
  %64 = add nuw nsw i64 %60, 1
  br i1 %.not, label %for.body.i.i, label %for.end.i.i

for.end.i.i:                                      ; preds = %for.body.i.i, %get_next_line_index.exit.i.i
  call void @free(ptr nonnull %58)
  %65 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %65, ptr noundef nonnull align 8 dereferenceable(7) @9, i64 7, i1 false)
  %66 = call ptr @malloc(i32 24)
  %67 = call i64 @write(i64 1, ptr %65, i64 7)
  call void @free(ptr %65)
  call void @free(ptr %66)
  %68 = call ptr @malloc(i32 16)
  store i64 0, ptr %68, align 4
  %memberidx1.i28.i.i = getelementptr inbounds %Range, ptr %68, i64 0, i32 1
  store i64 %56, ptr %memberidx1.i28.i.i, align 4
  %69 = call ptr @malloc(i32 17)
  %memberidx.i.i30.i.i = getelementptr inbounds %RangeIterator, ptr %69, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i30.i.i, align 4
  %memberidx1.i.i31.i.i = getelementptr inbounds %RangeIterator, ptr %69, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i.i31.i.i, align 4
  %70 = icmp slt i64 %56, 1
  br i1 %70, label %print_error.exit, label %for.body10.i.i

for.body10.i.i:                                   ; preds = %for.end.i.i, %for.body10.i.i
  %71 = phi i64 [ %75, %for.body10.i.i ], [ 1, %for.end.i.i ]
  %72 = call ptr @malloc(i32 1)
  store i8 94, ptr %72, align 8
  %73 = call ptr @malloc(i32 24)
  %74 = call i64 @write(i64 1, ptr nonnull %72, i64 1)
  call void @free(ptr %72)
  call void @free(ptr %73)
  %.not22 = icmp slt i64 %71, %56
  %75 = add nuw nsw i64 %71, 1
  br i1 %.not22, label %for.body10.i.i, label %print_error.exit

print_error.exit:                                 ; preds = %for.body10.i.i, %for.end.i.i
  call void @free(ptr nonnull %69)
  %76 = call ptr @malloc(i32 4)
  store i32 1831885595, ptr %76, align 8
  %77 = call ptr @malloc(i32 24)
  %78 = call i64 @write(i64 1, ptr nonnull %76, i64 4)
  call void @free(ptr %76)
  call void @free(ptr %77)
  %79 = call ptr @malloc(i32 1)
  store i8 10, ptr %79, align 8
  %80 = call ptr @malloc(i32 24)
  %81 = call i64 @write(i64 1, ptr nonnull %79, i64 1)
  call void @free(ptr %79)
  call void @free(ptr %80)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  br label %common.ret
}

define internal fastcc ptr @Compiler_register_file(ptr nocapture readonly %0, ptr %1) unnamed_addr {
  %buf.i.i = alloca [400 x i8], align 1
  %3 = tail call ptr @malloc(i32 1)
  store i8 64, ptr %3, align 8
  %4 = tail call ptr @malloc(i32 24)
  store ptr %3, ptr %4, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i.i, align 4
  %memberidx.i = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i.i.i, align 4
  %7 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %7, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Range, ptr %7, i64 0, i32 1
  store i64 %6, ptr %memberidx1.i.i.i.i, align 4
  %8 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i.i.i = getelementptr inbounds %RangeIterator, ptr %8, i64 0, i32 1
  %memberidx1.i.i.i.i.i = getelementptr inbounds %RangeIterator, ptr %8, i64 0, i32 2
  store i64 %6, ptr %memberidx1.i.i.i.i.i, align 4
  %9 = icmp slt i64 %6, 1
  br i1 %9, label %String_find.exit.i.i.thread, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %2, %ifend.i.i.i
  %10 = phi i64 [ %19, %ifend.i.i.i ], [ 1, %2 ]
  %11 = phi i64 [ %10, %ifend.i.i.i ], [ 0, %2 ]
  %12 = load i8, ptr %3, align 1
  %13 = load ptr, ptr %1, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 %11
  %15 = load i8, ptr %14, align 1
  %16 = icmp eq i8 %12, %15
  br i1 %16, label %if.entry.i.i.i, label %ifend.i.i.i

String_find.exit.i.i.thread:                      ; preds = %ifend.i.i.i, %2
  tail call void @free(ptr nonnull %8)
  br label %String_replace.exit.i

if.entry.i.i.i:                                   ; preds = %for.body.i.i.i
  %17 = tail call i64 @memcmp(ptr nonnull %3, ptr nonnull %14, i64 1)
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %if.entry.i.i, label %ifend.i.i.i

ifend.i.i.i:                                      ; preds = %if.entry.i.i.i, %for.body.i.i.i
  %.not61 = icmp slt i64 %10, %6
  %19 = add nuw nsw i64 %10, 1
  br i1 %.not61, label %for.body.i.i.i, label %String_find.exit.i.i.thread

if.entry.i.i:                                     ; preds = %if.entry.i.i.i
  store i64 %10, ptr %memberidx.i.i.i.i.i, align 4
  store i1 false, ptr %8, align 1
  %20 = load i64, ptr %memberidx.i.i.i, align 4
  %21 = add i64 %20, -1
  %memberidx2.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %22 = load i64, ptr %memberidx2.i.i, align 4
  %23 = add nuw i64 %21, %22
  %24 = trunc i64 %23 to i32
  %25 = tail call ptr @malloc(i32 %24)
  %26 = load ptr, ptr %1, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %26, i64 %11, i1 false)
  %27 = getelementptr inbounds i8, ptr %25, i64 %11
  %28 = load ptr, ptr %5, align 8
  %29 = load i64, ptr %memberidx2.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %27, ptr align 8 %28, i64 %29, i1 false)
  %30 = add nsw i64 %29, %11
  %31 = getelementptr inbounds i8, ptr %25, i64 %30
  %32 = add nuw nsw i64 %11, 1
  %33 = getelementptr inbounds i8, ptr %26, i64 %32
  %34 = load i64, ptr %memberidx.i.i.i, align 4
  %35 = sub nuw i64 %34, %32
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %31, ptr nonnull align 536870912 %33, i64 %35, i1 false)
  %36 = tail call ptr @malloc(i32 24)
  store ptr %25, ptr %36, align 8
  %memberidx1.i42.i.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %23, ptr %memberidx1.i42.i.i, align 4
  %memberidx2.i.i5.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %23, ptr %memberidx2.i.i5.i, align 4
  br label %String_replace.exit.i

String_replace.exit.i:                            ; preds = %String_find.exit.i.i.thread, %if.entry.i.i
  %common.ret.op.i.i = phi ptr [ %36, %if.entry.i.i ], [ %1, %String_find.exit.i.i.thread ]
  %37 = tail call ptr @malloc(i32 4)
  store i32 1869375022, ptr %37, align 8
  %38 = tail call ptr @malloc(i32 24)
  store ptr %37, ptr %38, align 8
  %memberidx1.i.i6.i = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i6.i, align 4
  %memberidx2.i.i7.i = getelementptr inbounds %String, ptr %38, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i7.i, align 4
  %memberidx.i8.i = getelementptr inbounds %String, ptr %common.ret.op.i.i, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i8.i, align 4
  %40 = icmp slt i64 %39, 4
  br i1 %40, label %if.entry.i, label %ifend.i11.i

ifend.i11.i:                                      ; preds = %String_replace.exit.i
  %41 = load ptr, ptr %common.ret.op.i.i, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %39
  %43 = getelementptr inbounds i8, ptr %42, i64 -4
  %44 = tail call i64 @memcmp(ptr nonnull %43, ptr nonnull %37, i64 4)
  %45 = icmp eq i64 %44, 0
  %.pre50 = load i64, ptr %memberidx.i8.i, align 4
  %extract.t70 = trunc i64 %.pre50 to i32
  br i1 %45, label %Compiler_find_module_path.exit, label %if.entry.i

if.entry.i:                                       ; preds = %ifend.i11.i, %String_replace.exit.i
  %46 = phi i64 [ %39, %String_replace.exit.i ], [ %.pre50, %ifend.i11.i ]
  %47 = add nuw i64 %46, 4
  %memberidx.i.i.i.i = getelementptr inbounds %String, ptr %common.ret.op.i.i, i64 0, i32 2
  %48 = load i64, ptr %memberidx.i.i.i.i, align 4
  %49 = icmp slt i64 %48, %47
  %50 = load ptr, ptr %common.ret.op.i.i, align 8
  br i1 %49, label %if.entry.i.i.i.i, label %String___adda__.exit.i

if.entry.i.i.i.i:                                 ; preds = %if.entry.i
  %51 = tail call ptr @realloc(ptr %50, i64 %47)
  store ptr %51, ptr %common.ret.op.i.i, align 8
  store i64 %47, ptr %memberidx.i.i.i.i, align 4
  %.pre49 = load i64, ptr %memberidx.i8.i, align 4
  br label %String___adda__.exit.i

String___adda__.exit.i:                           ; preds = %if.entry.i, %if.entry.i.i.i.i
  %52 = phi i64 [ %.pre49, %if.entry.i.i.i.i ], [ %46, %if.entry.i ]
  %53 = phi ptr [ %51, %if.entry.i.i.i.i ], [ %50, %if.entry.i ]
  %54 = getelementptr inbounds i8, ptr %53, i64 %52
  %55 = load i32, ptr %37, align 8
  store i32 %55, ptr %54, align 536870912
  %56 = load i64, ptr %memberidx.i8.i, align 4
  %57 = add nuw i64 %56, 4
  store i64 %57, ptr %memberidx.i8.i, align 4
  %extract.t69 = trunc i64 %57 to i32
  br label %Compiler_find_module_path.exit

Compiler_find_module_path.exit:                   ; preds = %ifend.i11.i, %String___adda__.exit.i
  %.pre50.sink.off0 = phi i32 [ %extract.t69, %String___adda__.exit.i ], [ %extract.t70, %ifend.i11.i ]
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %buf.i.i)
  %58 = add i32 %.pre50.sink.off0, 1
  %59 = tail call ptr @malloc(i32 %58)
  %60 = load ptr, ptr %common.ret.op.i.i, align 8
  %61 = load i64, ptr %memberidx.i8.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %59, ptr align 8 %60, i64 %61, i1 false)
  %62 = getelementptr inbounds i8, ptr %59, i64 %61
  store i8 0, ptr %62, align 1
  %63 = call ptr @realpath(ptr %59, ptr nonnull %buf.i.i)
  %64 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %buf.i.i)
  %65 = trunc i64 %64 to i32
  %66 = call ptr @malloc(i32 %65)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %66, ptr nonnull align 8 %buf.i.i, i64 %64, i1 false)
  %67 = call ptr @malloc(i32 24)
  store ptr %66, ptr %67, align 8
  %memberidx1.i.i.i15.i = getelementptr inbounds %String, ptr %67, i64 0, i32 1
  store i64 %64, ptr %memberidx1.i.i.i15.i, align 4
  %memberidx2.i.i.i16.i = getelementptr inbounds %String, ptr %67, i64 0, i32 2
  store i64 %64, ptr %memberidx2.i.i.i16.i, align 4
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %buf.i.i)
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 6
  %68 = load ptr, ptr %memberidx, align 8
  %69 = call fastcc i64 @Map_String_FileId__hash_fnc(ptr nonnull %67)
  %memberidx.i15 = getelementptr inbounds %Map_String_FileId_, ptr %68, i64 0, i32 1
  %70 = load i64, ptr %memberidx.i15, align 4
  %71 = urem i64 %69, %70
  %72 = load ptr, ptr %68, align 8
  %73 = getelementptr inbounds ptr, ptr %72, i64 %71
  %74 = load ptr, ptr %73, align 8
  %.not.i32 = icmp eq ptr %74, null
  br i1 %.not.i32, label %ifend, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i18
  %.pre53.pre = load ptr, ptr %68, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre53.pre, i64 %hash.0.i33
  %.pre54.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre54.pre, null
  br i1 %.not22.i, label %ifend, label %Map_String_FileId____getitem__.exit

while.body.i:                                     ; preds = %Compiler_find_module_path.exit, %else.i
  %75 = phi ptr [ %83, %else.i ], [ %72, %Compiler_find_module_path.exit ]
  %76 = phi i64 [ %84, %else.i ], [ %70, %Compiler_find_module_path.exit ]
  %77 = phi ptr [ %88, %else.i ], [ %74, %Compiler_find_module_path.exit ]
  %hash.0.i33 = phi i64 [ %86, %else.i ], [ %71, %Compiler_find_module_path.exit ]
  %78 = load ptr, ptr %77, align 8
  %memberidx.i.i16 = getelementptr inbounds %String, ptr %78, i64 0, i32 1
  %79 = load i64, ptr %memberidx.i.i16, align 4
  %.not.i.i = icmp eq i64 %79, %64
  br i1 %.not.i.i, label %ifend.i.i18, label %else.i

ifend.i.i18:                                      ; preds = %while.body.i
  %80 = load ptr, ptr %78, align 8
  %81 = call i64 @memcmp(ptr %80, ptr %66, i64 %64)
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %while.end.i, label %ifend.i.i18.else.i_crit_edge

ifend.i.i18.else.i_crit_edge:                     ; preds = %ifend.i.i18
  %.pre51 = load i64, ptr %memberidx.i15, align 4
  %.pre52 = load ptr, ptr %68, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i18.else.i_crit_edge, %while.body.i
  %83 = phi ptr [ %.pre52, %ifend.i.i18.else.i_crit_edge ], [ %75, %while.body.i ]
  %84 = phi i64 [ %.pre51, %ifend.i.i18.else.i_crit_edge ], [ %76, %while.body.i ]
  %85 = add nuw i64 %hash.0.i33, 1
  %86 = urem i64 %85, %84
  %87 = getelementptr inbounds ptr, ptr %83, i64 %86
  %88 = load ptr, ptr %87, align 8
  %.not.i = icmp eq ptr %88, null
  br i1 %.not.i, label %ifend, label %while.body.i

Map_String_FileId____getitem__.exit:              ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_FileId_, ptr %.pre54.pre, i64 0, i32 1
  %89 = load ptr, ptr %memberidx10.i, align 8
  %.not = icmp eq ptr %89, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_String_FileId____getitem__.exit, %Array_FloFile____sl__.exit
  %common.ret.op = phi ptr [ %90, %Array_FloFile____sl__.exit ], [ %89, %Map_String_FileId____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %Compiler_find_module_path.exit, %while.end.i, %Map_String_FileId____getitem__.exit
  %90 = tail call ptr @malloc(i32 8)
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %91 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FloFile_, ptr %91, i64 0, i32 1
  %92 = load i64, ptr %memberidx2, align 4
  store i64 %92, ptr %90, align 4
  %93 = load ptr, ptr %memberidx, align 8
  call fastcc void @Map_String_FileId____setitem__(ptr %93, ptr nonnull %67, ptr nonnull %90)
  %94 = load ptr, ptr %memberidx1, align 8
  %95 = tail call ptr @malloc(i32 16)
  store ptr %67, ptr %95, align 8
  %memberidx1.i = getelementptr inbounds %FloFile, ptr %95, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx.i20 = getelementptr inbounds %Array_FloFile_, ptr %94, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i20, align 4
  %97 = add i64 %96, 1
  %memberidx.i.i21 = getelementptr inbounds %Array_FloFile_, ptr %94, i64 0, i32 2
  %98 = load i64, ptr %memberidx.i.i21, align 4
  %99 = icmp slt i64 %98, %97
  %.pre55 = load ptr, ptr %94, align 8
  br i1 %99, label %while.body.i.i, label %Array_FloFile____sl__.exit

while.body.i.i:                                   ; preds = %ifend, %while.body.i.i
  %100 = phi ptr [ %104, %while.body.i.i ], [ %.pre55, %ifend ]
  %101 = phi i64 [ %105, %while.body.i.i ], [ %98, %ifend ]
  %102 = shl nuw i64 %101, 1
  store i64 %102, ptr %memberidx.i.i21, align 4
  %103 = shl i64 %101, 4
  %104 = call ptr @realloc(ptr %100, i64 %103)
  store ptr %104, ptr %94, align 8
  %105 = load i64, ptr %memberidx.i.i21, align 4
  %106 = icmp slt i64 %105, %97
  br i1 %106, label %while.body.i.i, label %Array_FloFile____sl__.exit.loopexit

Array_FloFile____sl__.exit.loopexit:              ; preds = %while.body.i.i
  %.pre56 = load i64, ptr %memberidx.i20, align 4
  %.pre60 = add nsw i64 %.pre56, 1
  br label %Array_FloFile____sl__.exit

Array_FloFile____sl__.exit:                       ; preds = %ifend, %Array_FloFile____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre60, %Array_FloFile____sl__.exit.loopexit ], [ %97, %ifend ]
  %107 = phi ptr [ %104, %Array_FloFile____sl__.exit.loopexit ], [ %.pre55, %ifend ]
  %108 = phi i64 [ %.pre56, %Array_FloFile____sl__.exit.loopexit ], [ %96, %ifend ]
  store i64 %.pre-phi, ptr %memberidx.i20, align 4
  %109 = getelementptr inbounds ptr, ptr %107, i64 %108
  store ptr %95, ptr %109, align 8
  br label %common.ret
}

define internal fastcc i1 @Compiler_set_current_file(ptr nocapture %0, ptr %1) unnamed_addr {
  %buffer.i = alloca [1024 x i8], align 1
  %3 = load i64, ptr %1, align 4
  %4 = icmp slt i64 %3, 0
  %memberidx2 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %5 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_FloFile_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx3, align 4
  %7 = icmp sgt i64 %3, %6
  %8 = or i1 %4, %7
  br i1 %8, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend9, %ifend, %2, %File_read_all.exit
  %common.ret.op = phi i1 [ true, %File_read_all.exit ], [ false, %2 ], [ false, %ifend ], [ false, %ifend9 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %2
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %3
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %11, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i.i, align 4
  %14 = trunc i64 %13 to i32
  %15 = add i32 %14, 1
  %16 = tail call ptr @malloc(i32 %15)
  %17 = load ptr, ptr %12, align 8
  %18 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %17, i64 %18, i1 false)
  %19 = getelementptr inbounds i8, ptr %16, i64 %18
  store i8 0, ptr %19, align 1
  %20 = tail call i64 @access(ptr %16, i64 0)
  %21 = icmp eq i64 %20, 0
  tail call void @free(ptr %16)
  br i1 %21, label %ifend9, label %common.ret

ifend9:                                           ; preds = %ifend
  %22 = load ptr, ptr %11, align 8
  %memberidx.i.i26 = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i.i26, align 4
  %24 = trunc i64 %23 to i32
  %25 = add i32 %24, 1
  %26 = tail call ptr @malloc(i32 %25)
  %27 = load ptr, ptr %22, align 8
  %28 = load i64, ptr %memberidx.i.i26, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %27, i64 %28, i1 false)
  %29 = getelementptr inbounds i8, ptr %26, i64 %28
  store i8 0, ptr %29, align 1
  %30 = tail call i64 @open(ptr %26, i64 4, i64 438)
  tail call void @free(ptr %26)
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend9
  %32 = tail call ptr @malloc(i32 8)
  store i64 %30, ptr %32, align 4
  %memberidx.i = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  %33 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %33, null
  br i1 %.not.i, label %Compiler_unlink_current_file_contents.exit, label %if.entry.i

if.entry.i:                                       ; preds = %ifend13
  %34 = load ptr, ptr %33, align 8
  tail call void @free(ptr %34)
  tail call void @free(ptr nonnull %33)
  br label %Compiler_unlink_current_file_contents.exit

Compiler_unlink_current_file_contents.exit:       ; preds = %ifend13, %if.entry.i
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %buffer.i)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1024) %buffer.i, i8 0, i64 1024, i1 false)
  %35 = tail call ptr @malloc(i32 1024)
  %36 = tail call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i, align 4
  %memberidx.i.i28 = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 1024, ptr %memberidx.i.i28, align 4
  %37 = load i64, ptr %32, align 4
  %38 = call i64 @read(i64 %37, ptr nonnull %buffer.i, i64 1024)
  %.not.i2935 = icmp eq i64 %38, 0
  br i1 %.not.i2935, label %File_read_all.exit, label %while.body.i

while.body.i:                                     ; preds = %Compiler_unlink_current_file_contents.exit, %String_append_bytes_length.exit.i
  %39 = phi i64 [ %50, %String_append_bytes_length.exit.i ], [ 0, %Compiler_unlink_current_file_contents.exit ]
  %40 = phi i64 [ %51, %String_append_bytes_length.exit.i ], [ %38, %Compiler_unlink_current_file_contents.exit ]
  %41 = add nuw i64 %39, %40
  %42 = load i64, ptr %memberidx.i.i28, align 4
  %43 = icmp slt i64 %42, %41
  %44 = load ptr, ptr %36, align 8
  br i1 %43, label %if.entry.i.i.i, label %String_append_bytes_length.exit.i

if.entry.i.i.i:                                   ; preds = %while.body.i
  %45 = tail call ptr @realloc(ptr %44, i64 %41)
  store ptr %45, ptr %36, align 8
  store i64 %41, ptr %memberidx.i.i28, align 4
  %.pre36 = load i64, ptr %memberidx1.i.i.i, align 4
  br label %String_append_bytes_length.exit.i

String_append_bytes_length.exit.i:                ; preds = %while.body.i, %if.entry.i.i.i
  %46 = phi i64 [ %.pre36, %if.entry.i.i.i ], [ %39, %while.body.i ]
  %47 = phi ptr [ %45, %if.entry.i.i.i ], [ %44, %while.body.i ]
  %48 = getelementptr inbounds i8, ptr %47, i64 %46
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %48, ptr nonnull align 8 %buffer.i, i64 %40, i1 false)
  %49 = load i64, ptr %memberidx1.i.i.i, align 4
  %50 = add nuw i64 %49, %40
  store i64 %50, ptr %memberidx1.i.i.i, align 4
  %51 = call i64 @read(i64 %37, ptr nonnull %buffer.i, i64 1024)
  %.not.i29 = icmp eq i64 %51, 0
  br i1 %.not.i29, label %File_read_all.exit, label %while.body.i

File_read_all.exit:                               ; preds = %String_append_bytes_length.exit.i, %Compiler_unlink_current_file_contents.exit
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %buffer.i)
  store ptr %36, ptr %memberidx.i, align 8
  store ptr %1, ptr %0, align 8
  %52 = tail call i64 @close(i64 %37)
  br label %common.ret
}

define internal fastcc void @Map_String_FileId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_FileId_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx21, align 8
  tail call fastcc void @Map_String_FileId____setitem__(ptr nonnull %0, ptr %24, ptr %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_FileId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_FileId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_FileId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_FileId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_FileId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

; Function Attrs: nofree
declare noundef i64 @open(ptr nocapture noundef readonly, i64 noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: nofree
declare noundef i64 @read(i64 noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare noundef i64 @access(ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #5

declare i64 @close(i64) local_unnamed_addr

; Function Attrs: nofree nounwind
declare noundef ptr @realpath(ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #5

declare ptr @dirname(ptr) local_unnamed_addr

define internal fastcc void @print_message_error(i64 %0, ptr nocapture %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @9, i64 7, i1 false)
  %4 = tail call ptr @malloc(i32 24)
  %5 = tail call i64 @write(i64 1, ptr %3, i64 7)
  tail call void @free(ptr %3)
  tail call void @free(ptr %4)
  switch i64 %0, label %else11 [
    i64 0, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 5, label %if.entry7
    i64 1, label %if.entry10
  ]

if.entry:                                         ; preds = %2
  %6 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %6, ptr noundef nonnull align 8 dereferenceable(21) @10, i64 21, i1 false)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call i64 @write(i64 1, ptr %6, i64 21)
  br label %ifend

ifend:                                            ; preds = %if.entry10, %else11, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink34 = phi ptr [ %26, %if.entry10 ], [ %29, %else11 ], [ %23, %if.entry7 ], [ %20, %if.entry4 ], [ %17, %if.entry1 ], [ %6, %if.entry ]
  %.sink = phi ptr [ %27, %if.entry10 ], [ %30, %else11 ], [ %24, %if.entry7 ], [ %21, %if.entry4 ], [ %18, %if.entry1 ], [ %7, %if.entry ]
  tail call void @free(ptr %.sink34)
  tail call void @free(ptr %.sink)
  %9 = tail call ptr @malloc(i32 4)
  store i32 1831885595, ptr %9, align 8
  %10 = tail call ptr @malloc(i32 24)
  %11 = tail call i64 @write(i64 1, ptr nonnull %9, i64 4)
  tail call void @free(ptr %9)
  tail call void @free(ptr %10)
  %12 = load ptr, ptr %1, align 8
  %memberidx.i.i.i18 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i.i.i18, align 4
  %14 = tail call i64 @write(i64 1, ptr %12, i64 %13)
  %15 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %16 = load ptr, ptr %1, align 8
  tail call void @free(ptr %16)
  tail call void @free(ptr %1)
  ret void

if.entry1:                                        ; preds = %2
  %17 = tail call ptr @malloc(i32 16)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) @11, i64 16, i1 false)
  %18 = tail call ptr @malloc(i32 24)
  %19 = tail call i64 @write(i64 1, ptr %17, i64 16)
  br label %ifend

if.entry4:                                        ; preds = %2
  %20 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %20, ptr noundef nonnull align 8 dereferenceable(12) @12, i64 12, i1 false)
  %21 = tail call ptr @malloc(i32 24)
  %22 = tail call i64 @write(i64 1, ptr %20, i64 12)
  br label %ifend

if.entry7:                                        ; preds = %2
  %23 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %23, ptr noundef nonnull align 8 dereferenceable(14) @13, i64 14, i1 false)
  %24 = tail call ptr @malloc(i32 24)
  %25 = tail call i64 @write(i64 1, ptr %23, i64 14)
  br label %ifend

if.entry10:                                       ; preds = %2
  %26 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %26, ptr noundef nonnull align 8 dereferenceable(14) @14, i64 14, i1 false)
  %27 = tail call ptr @malloc(i32 24)
  %28 = tail call i64 @write(i64 1, ptr %26, i64 14)
  br label %ifend

else11:                                           ; preds = %2
  %29 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %29, ptr noundef nonnull align 8 dereferenceable(9) @15, i64 9, i1 false)
  %30 = tail call ptr @malloc(i32 24)
  %31 = tail call i64 @write(i64 1, ptr %29, i64 9)
  br label %ifend
}

define internal fastcc void @Map_String_VarId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_VarId_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx21, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr nonnull %0, ptr %24, ptr %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_VarId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_VarId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_VarId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nounwind willreturn
define internal fastcc void @Scope___del__(ptr nocapture readonly %0) unnamed_addr #6 {
  %2 = load ptr, ptr %0, align 8
  tail call void @free(ptr %2)
  %memberidx1 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load ptr, ptr %3, align 8
  tail call void @free(ptr %4)
  tail call void @free(ptr %3)
  %memberidx2 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %memberidx2, align 8
  %6 = load ptr, ptr %5, align 8
  tail call void @free(ptr %6)
  tail call void @free(ptr %5)
  %memberidx3 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = load ptr, ptr %7, align 8
  tail call void @free(ptr %8)
  tail call void @free(ptr %7)
  %memberidx4 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 4
  %9 = load ptr, ptr %memberidx4, align 8
  %10 = load ptr, ptr %9, align 8
  tail call void @free(ptr %10)
  tail call void @free(ptr %9)
  %memberidx5 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 6
  %11 = load ptr, ptr %memberidx5, align 8
  %12 = load ptr, ptr %11, align 8
  tail call void @free(ptr %12)
  tail call void @free(ptr %11)
  ret void
}

define internal fastcc void @Map_String_EnumId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_EnumId_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx21, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr nonnull %0, ptr %24, ptr %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_EnumId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_EnumId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_EnumId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_EnumId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_EnumId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_String_Type__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_Type_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx21, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr nonnull %0, ptr %24, ptr %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_Type____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_Type__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_Type__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_Type_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_Type__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_String_ClassId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_ClassId_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx21, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr nonnull %0, ptr %24, ptr %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_ClassId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_ClassId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_ClassId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_ClassId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_String_PropId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_PropId_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx21, align 8
  tail call fastcc void @Map_String_PropId____setitem__(ptr nonnull %0, ptr %24, ptr %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_PropId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_PropId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_PropId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @ModuleAST_constructor(ptr nocapture writeonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 1
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %3 = tail call ptr @malloc(i32 64)
  store ptr %3, ptr %2, align 8
  store i64 0, ptr %memberidx.i, align 4
  store ptr %2, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 1
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i27 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 1
  store i64 0, ptr %memberidx.i27, align 4
  %memberidx1.i28 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i28, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i27, align 4
  store ptr %4, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 3
  %6 = tail call ptr @malloc(i32 24)
  %memberidx.i29 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx.i29, align 4
  %memberidx1.i30 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 2
  store i64 8, ptr %memberidx1.i30, align 4
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %6, align 8
  store i64 0, ptr %memberidx.i29, align 4
  store ptr %6, ptr %memberidx6, align 8
  %memberidx9 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 4
  %8 = tail call ptr @malloc(i32 24)
  %memberidx.i31 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 1
  store i64 0, ptr %memberidx.i31, align 4
  %memberidx1.i32 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 2
  store i64 8, ptr %memberidx1.i32, align 4
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %8, align 8
  store i64 0, ptr %memberidx.i31, align 4
  store ptr %8, ptr %memberidx9, align 8
  %memberidx12 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 5
  %10 = tail call ptr @malloc(i32 24)
  %memberidx.i33 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 1
  store i64 0, ptr %memberidx.i33, align 4
  %memberidx1.i34 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 2
  store i64 8, ptr %memberidx1.i34, align 4
  %11 = tail call ptr @malloc(i32 64)
  store ptr %11, ptr %10, align 8
  store i64 0, ptr %memberidx.i33, align 4
  store ptr %10, ptr %memberidx12, align 8
  %memberidx15 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 2
  %12 = tail call ptr @malloc(i32 24)
  %memberidx.i35 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 1
  store i64 0, ptr %memberidx.i35, align 4
  %memberidx1.i36 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 2
  store i64 8, ptr %memberidx1.i36, align 4
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %12, align 8
  store i64 0, ptr %memberidx.i35, align 4
  store ptr %12, ptr %memberidx15, align 8
  %memberidx18 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 6
  %14 = tail call ptr @malloc(i32 24)
  %memberidx.i37 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 1
  store i64 0, ptr %memberidx.i37, align 4
  %memberidx1.i38 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 2
  store i64 8, ptr %memberidx1.i38, align 4
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %14, align 8
  store i64 0, ptr %memberidx.i37, align 4
  store ptr %14, ptr %memberidx18, align 8
  ret void
}

declare ptr @LLVMGetDefaultTargetTriple() local_unnamed_addr

define internal fastcc ptr @parse_flags(i64 %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = icmp sgt i64 %0, 1
  br i1 %3, label %while.body.lr.ph, label %common.ret

while.body.lr.ph:                                 ; preds = %2, %ifend3
  %4 = phi i64 [ %23, %ifend3 ], [ 1, %2 ]
  %i.0.ph80 = phi i64 [ %5, %ifend3 ], [ 0, %2 ]
  %arg.0.ph79 = phi ptr [ %arg.1, %ifend3 ], [ null, %2 ]
  br label %while.body

common.ret:                                       ; preds = %ifend3, %for.end, %2, %if.entry13
  %arg.0.ph70 = phi ptr [ %arg.0.ph79, %if.entry13 ], [ null, %2 ], [ %arg.0.ph79, %for.end ], [ %arg.1, %ifend3 ]
  ret ptr %arg.0.ph70

while.body:                                       ; preds = %while.body.lr.ph, %for.end
  %5 = phi i64 [ %4, %while.body.lr.ph ], [ %34, %for.end ]
  %i.076 = phi i64 [ %i.0.ph80, %while.body.lr.ph ], [ %i.1, %for.end ]
  %6 = getelementptr inbounds ptr, ptr %1, i64 %5
  %7 = load ptr, ptr %6, align 8
  %8 = load i8, ptr %7, align 1
  %.not = icmp eq i8 %8, 45
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %while.body
  %9 = icmp eq ptr %arg.0.ph79, null
  br i1 %9, label %if.entry1, label %ifend3

ifend:                                            ; preds = %while.body
  %10 = getelementptr inbounds i8, ptr %7, i64 1
  %11 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10)
  %12 = trunc i64 %11 to i32
  %13 = tail call ptr @malloc(i32 %12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr nonnull align 8 %10, i64 %11, i1 false)
  %14 = tail call ptr @malloc(i32 24)
  store ptr %13, ptr %14, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  store i64 %11, ptr %memberidx1.i.i, align 4
  %15 = load i64, ptr @flags_length, align 8
  %16 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %16, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %16, i64 0, i32 1
  store i64 %15, ptr %memberidx1.i, align 4
  %17 = tail call ptr @malloc(i32 17)
  %memberidx.i.i = getelementptr inbounds %RangeIterator, ptr %17, i64 0, i32 1
  %memberidx1.i.i47 = getelementptr inbounds %RangeIterator, ptr %17, i64 0, i32 2
  store i64 %15, ptr %memberidx1.i.i47, align 4
  %18 = icmp slt i64 %15, 1
  br i1 %18, label %for.end, label %for.body

if.entry1:                                        ; preds = %if.entry
  %19 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %7)
  %20 = trunc i64 %19 to i32
  %21 = tail call ptr @malloc(i32 %20)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr nonnull align 8 %7, i64 %19, i1 false)
  %22 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  %memberidx1.i.i48 = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i.i48, align 4
  %memberidx2.i.i49 = getelementptr inbounds %String, ptr %22, i64 0, i32 2
  store i64 %19, ptr %memberidx2.i.i49, align 4
  br label %ifend3

ifend3:                                           ; preds = %if.entry, %if.entry1
  %arg.1 = phi ptr [ %22, %if.entry1 ], [ %arg.0.ph79, %if.entry ]
  %23 = add nsw i64 %5, 1
  %24 = icmp slt i64 %23, %0
  br i1 %24, label %while.body.lr.ph, label %common.ret

for.body:                                         ; preds = %ifend, %for.next.backedge
  %25 = phi i64 [ %38, %for.next.backedge ], [ 1, %ifend ]
  %26 = phi i64 [ %25, %for.next.backedge ], [ 0, %ifend ]
  %27 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %26
  %28 = load ptr, ptr %27, align 8
  %memberidx4 = getelementptr inbounds %Flag, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %30, %11
  br i1 %.not.i, label %ifend.i, label %for.next.backedge

ifend.i:                                          ; preds = %for.body
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i64 @memcmp(ptr %31, ptr %13, i64 %11)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %if.entry5, label %for.next.backedge

for.end:                                          ; preds = %for.next.backedge, %ifend, %if.entry22, %ifend19
  %i.1 = phi i64 [ %39, %if.entry22 ], [ %39, %ifend19 ], [ %5, %ifend ], [ %5, %for.next.backedge ]
  tail call void @free(ptr nonnull %17)
  tail call void @free(ptr %13)
  tail call void @free(ptr %14)
  %34 = add nsw i64 %i.1, 1
  %35 = icmp slt i64 %34, %0
  br i1 %35, label %while.body, label %common.ret

if.entry5:                                        ; preds = %ifend.i
  %36 = load i64, ptr %28, align 4
  %37 = icmp eq i64 %36, 1
  br i1 %37, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %if.entry5
  %memberidx12 = getelementptr inbounds %FlagBool, ptr %28, i64 0, i32 3
  store i1 true, ptr %memberidx12, align 1
  br label %for.next.backedge

for.next.backedge:                                ; preds = %if.entry9, %ifend.i, %for.body
  %.not100 = icmp slt i64 %25, %15
  %38 = add nuw nsw i64 %25, 1
  br i1 %.not100, label %for.body, label %for.end

ifend11:                                          ; preds = %if.entry5
  store i64 %25, ptr %memberidx.i.i, align 4
  %39 = add i64 %i.076, 2
  %.not45 = icmp slt i64 %39, %0
  br i1 %.not45, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend11
  %40 = add i32 %12, 1
  %41 = tail call ptr @malloc(i32 %40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %41, ptr align 8 %13, i64 %11, i1 false)
  %42 = getelementptr inbounds i8, ptr %41, i64 %11
  store i8 0, ptr %42, align 1
  %43 = alloca ptr, align 8
  %44 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %43, ptr nonnull @32, ptr %41)
  %45 = load ptr, ptr %43, align 8
  %46 = tail call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i53 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 %44, ptr %memberidx1.i53, align 4
  %memberidx2.i54 = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 %44, ptr %memberidx2.i54, align 4
  tail call void @free(ptr %41)
  %47 = call i64 @write(i64 1, ptr %45, i64 %44)
  %48 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  br label %common.ret

ifend15:                                          ; preds = %ifend11
  %49 = getelementptr inbounds ptr, ptr %1, i64 %39
  %50 = load ptr, ptr %49, align 8
  %51 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %50)
  %52 = trunc i64 %51 to i32
  %53 = tail call ptr @malloc(i32 %52)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %53, ptr align 8 %50, i64 %51, i1 false)
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i.i56 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %51, ptr %memberidx1.i.i56, align 4
  %memberidx2.i.i57 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %51, ptr %memberidx2.i.i57, align 4
  %55 = load i64, ptr %28, align 4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %if.entry17, label %ifend19

if.entry17:                                       ; preds = %ifend15
  %memberidx20 = getelementptr inbounds %FlagInt, ptr %28, i64 0, i32 3
  %57 = add i32 %52, 1
  %58 = tail call ptr @malloc(i32 %57)
  %59 = load ptr, ptr %54, align 8
  %60 = load i64, ptr %memberidx1.i.i56, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %58, ptr align 8 %59, i64 %60, i1 false)
  %61 = getelementptr inbounds i8, ptr %58, i64 %60
  store i8 0, ptr %61, align 1
  %62 = tail call i64 @atol(ptr nocapture %58)
  tail call void @free(ptr %58)
  store i64 %62, ptr %memberidx20, align 4
  %63 = load ptr, ptr %54, align 8
  tail call void @free(ptr %63)
  tail call void @free(ptr nonnull %54)
  %.pr = load i64, ptr %28, align 4
  br label %ifend19

ifend19:                                          ; preds = %ifend15, %if.entry17
  %64 = phi i64 [ %55, %ifend15 ], [ %.pr, %if.entry17 ]
  %65 = icmp eq i64 %64, 2
  br i1 %65, label %if.entry22, label %for.end

if.entry22:                                       ; preds = %ifend19
  %memberidx25 = getelementptr inbounds %FlagString, ptr %28, i64 0, i32 3
  store ptr %54, ptr %memberidx25, align 8
  br label %for.end
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare i64 @atol(ptr nocapture) local_unnamed_addr #7

define internal fastcc void @print_flags() unnamed_addr {
for.entry:
  %0 = load i64, ptr @flags_length, align 8
  %1 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %1, i64 0, i32 1
  store i64 %0, ptr %memberidx1.i, align 4
  %2 = tail call ptr @malloc(i32 17)
  %3 = icmp slt i64 %0, 1
  br i1 %3, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %ifend
  %4 = phi i64 [ %43, %ifend ], [ 1, %for.entry ]
  %5 = phi i64 [ %4, %ifend ], [ 0, %for.entry ]
  %6 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %5
  %7 = load ptr, ptr %6, align 8
  %memberidx1 = getelementptr inbounds %Flag, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx.i, align 4
  %10 = trunc i64 %9 to i32
  %11 = add i32 %10, 1
  %12 = call ptr @malloc(i32 %11)
  %13 = load ptr, ptr %8, align 8
  %14 = load i64, ptr %memberidx.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %13, i64 %14, i1 false)
  %15 = getelementptr inbounds i8, ptr %12, i64 %14
  store i8 0, ptr %15, align 1
  %16 = alloca ptr, align 8
  %17 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %16, ptr nonnull @35, ptr %12)
  %18 = load ptr, ptr %16, align 8
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i14 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 %17, ptr %memberidx1.i14, align 4
  %memberidx2.i15 = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 %17, ptr %memberidx2.i15, align 4
  tail call void @free(ptr %12)
  %20 = call i64 @write(i64 1, ptr %18, i64 %17)
  %21 = load i64, ptr %7, align 4
  switch i64 %21, label %else5 [
    i64 0, label %if.entry
    i64 2, label %if.entry4
  ]

for.end:                                          ; preds = %ifend, %for.entry
  tail call void @free(ptr nonnull %2)
  ret void

if.entry:                                         ; preds = %for.body
  %22 = call ptr @malloc(i32 4)
  store i32 1047411744, ptr %22, align 8
  %23 = call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  %memberidx1.i.i18 = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i18, align 4
  %memberidx2.i.i19 = getelementptr inbounds %String, ptr %23, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i19, align 4
  %24 = call i64 @write(i64 1, ptr nonnull %22, i64 4)
  br label %ifend

ifend:                                            ; preds = %if.entry4, %else5, %if.entry
  %25 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %26 = call ptr @malloc(i32 2)
  store i16 2313, ptr %26, align 8
  %27 = call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i21 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i21, align 4
  %memberidx2.i.i22 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i22, align 4
  %28 = call i64 @write(i64 1, ptr nonnull %26, i64 2)
  %memberidx7 = getelementptr inbounds %Flag, ptr %7, i64 0, i32 2
  %29 = load ptr, ptr %memberidx7, align 8
  %memberidx.i24 = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i24, align 4
  %31 = trunc i64 %30 to i32
  %32 = add i32 %31, 1
  %33 = call ptr @malloc(i32 %32)
  %34 = load ptr, ptr %29, align 8
  %35 = load i64, ptr %memberidx.i24, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %34, i64 %35, i1 false)
  %36 = getelementptr inbounds i8, ptr %33, i64 %35
  store i8 0, ptr %36, align 1
  %37 = alloca ptr, align 8
  %38 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %37, ptr nonnull @6, ptr %33)
  %39 = load ptr, ptr %37, align 8
  %40 = tail call ptr @malloc(i32 24)
  store ptr %39, ptr %40, align 8
  %memberidx1.i25 = getelementptr inbounds %String, ptr %40, i64 0, i32 1
  store i64 %38, ptr %memberidx1.i25, align 4
  %memberidx2.i26 = getelementptr inbounds %String, ptr %40, i64 0, i32 2
  store i64 %38, ptr %memberidx2.i26, align 4
  tail call void @free(ptr %33)
  %41 = call i64 @write(i64 1, ptr %39, i64 %38)
  %42 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %.not = icmp slt i64 %4, %0
  %43 = add nuw nsw i64 %4, 1
  br i1 %.not, label %for.body, label %for.end

if.entry4:                                        ; preds = %for.body
  %44 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %44, ptr noundef nonnull align 8 dereferenceable(6) @36, i64 6, i1 false)
  %45 = call ptr @malloc(i32 24)
  store ptr %44, ptr %45, align 8
  %memberidx1.i.i28 = getelementptr inbounds %String, ptr %45, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i28, align 4
  %memberidx2.i.i29 = getelementptr inbounds %String, ptr %45, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i29, align 4
  %46 = call i64 @write(i64 1, ptr %44, i64 6)
  br label %ifend

else5:                                            ; preds = %for.body
  %47 = call ptr @malloc(i32 1)
  store i8 32, ptr %47, align 8
  %48 = call ptr @malloc(i32 24)
  store ptr %47, ptr %48, align 8
  %memberidx1.i.i16 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i16, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %48, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i, align 4
  %49 = call i64 @write(i64 1, ptr nonnull %47, i64 1)
  br label %ifend
}

define internal fastcc noalias ptr @Lexer_tokenize(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Lexer, align 8
  %memberidx.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 1
  store ptr %0, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 2
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 5
  store i64 1, ptr %memberidx3.i, align 4
  %memberidx4.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 4
  store i64 0, ptr %memberidx4.i, align 4
  %memberidx2.i.i21 = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx2.i.i21, align 4
  %5 = icmp slt i64 %4, 0
  br i1 %5, label %end.i26.thread, label %end.i26

end.i26.thread:                                   ; preds = %2
  store i8 0, ptr %3, align 8
  br label %Lexer_advance.exit34

end.i26:                                          ; preds = %2
  store i64 0, ptr %memberidx2.i, align 4
  %6 = load ptr, ptr %0, align 8
  %7 = load i8, ptr %6, align 1
  store i8 %7, ptr %3, align 8
  switch i8 %7, label %if.entry9.i33 [
    i8 10, label %if.entry.i29
    i8 0, label %Lexer_advance.exit34
  ]

if.entry.i29:                                     ; preds = %end.i26
  store i64 2, ptr %memberidx3.i, align 4
  br label %Lexer_advance.exit34

if.entry9.i33:                                    ; preds = %end.i26
  store i64 1, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit34

Lexer_advance.exit34:                             ; preds = %end.i26.thread, %end.i26, %if.entry.i29, %if.entry9.i33
  %8 = phi i64 [ -1, %end.i26.thread ], [ 0, %end.i26 ], [ 0, %if.entry.i29 ], [ 0, %if.entry9.i33 ]
  %9 = tail call ptr @malloc(i32 24)
  %memberidx.i35 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 1
  %memberidx1.i36 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 2
  store i64 8, ptr %memberidx1.i36, align 4
  %10 = tail call ptr @malloc(i32 64)
  store ptr %10, ptr %9, align 8
  store i64 0, ptr %memberidx.i35, align 4
  %11 = load i64, ptr %memberidx2.i.i21, align 4
  %12 = icmp sge i64 %8, %11
  %memberidx359 = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 1
  %13 = load i64, ptr %memberidx359, align 4
  %14 = icmp ne i64 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %while.end, label %while.body

while.end:                                        ; preds = %Lexer_advance.exit, %Lexer_advance.exit34
  %.promoted = phi ptr [ %10, %Lexer_advance.exit34 ], [ %43, %Lexer_advance.exit ]
  %memberidx1.i36.promoted = phi i64 [ 8, %Lexer_advance.exit34 ], [ %.lcssa54, %Lexer_advance.exit ]
  %16 = tail call ptr @malloc(i32 16)
  %17 = tail call ptr @malloc(i32 32)
  %18 = load i64, ptr %memberidx4.i, align 4
  %19 = load i64, ptr %memberidx3.i, align 4
  %memberidx2.i46 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %17, i8 0, i64 16, i1 false)
  store i64 %18, ptr %memberidx2.i46, align 4
  %memberidx3.i47 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  store i64 %19, ptr %memberidx3.i47, align 4
  store i64 46, ptr %16, align 4
  %memberidx1.i48 = getelementptr inbounds %Token, ptr %16, i64 0, i32 1
  store ptr %17, ptr %memberidx1.i48, align 8
  %20 = load i64, ptr %memberidx.i35, align 4
  %21 = add i64 %20, 1
  %22 = icmp slt i64 %memberidx1.i36.promoted, %21
  br i1 %22, label %while.body.i.i43, label %Array_Token____sl__.exit44

while.body.i.i43:                                 ; preds = %while.end, %while.body.i.i43
  %23 = phi ptr [ %27, %while.body.i.i43 ], [ %.promoted, %while.end ]
  %24 = phi i64 [ %25, %while.body.i.i43 ], [ %memberidx1.i36.promoted, %while.end ]
  %25 = shl nuw i64 %24, 1
  %26 = shl i64 %24, 4
  %27 = call ptr @realloc(ptr %23, i64 %26)
  %28 = icmp slt i64 %25, %21
  br i1 %28, label %while.body.i.i43, label %while.entry.i.i42.Array_Token____sl__.exit44_crit_edge

while.entry.i.i42.Array_Token____sl__.exit44_crit_edge: ; preds = %while.body.i.i43
  store ptr %27, ptr %9, align 8
  %.pre68 = load i64, ptr %memberidx.i35, align 4
  %.pre69 = add nsw i64 %.pre68, 1
  br label %Array_Token____sl__.exit44

Array_Token____sl__.exit44:                       ; preds = %while.entry.i.i42.Array_Token____sl__.exit44_crit_edge, %while.end
  %.pre-phi = phi i64 [ %.pre69, %while.entry.i.i42.Array_Token____sl__.exit44_crit_edge ], [ %21, %while.end ]
  %29 = phi ptr [ %27, %while.entry.i.i42.Array_Token____sl__.exit44_crit_edge ], [ %.promoted, %while.end ]
  %30 = phi i64 [ %.pre68, %while.entry.i.i42.Array_Token____sl__.exit44_crit_edge ], [ %20, %while.end ]
  %.lcssa = phi i64 [ %25, %while.entry.i.i42.Array_Token____sl__.exit44_crit_edge ], [ %memberidx1.i36.promoted, %while.end ]
  store i64 %.lcssa, ptr %memberidx1.i36, align 4
  store i64 %.pre-phi, ptr %memberidx.i35, align 4
  %31 = getelementptr inbounds ptr, ptr %29, i64 %30
  store ptr %16, ptr %31, align 8
  ret ptr %9

while.body:                                       ; preds = %Lexer_advance.exit34, %Lexer_advance.exit
  %32 = phi ptr [ %43, %Lexer_advance.exit ], [ %10, %Lexer_advance.exit34 ]
  %memberidx1.i36.promoted53 = phi i64 [ %.lcssa54, %Lexer_advance.exit ], [ 8, %Lexer_advance.exit34 ]
  %33 = phi i64 [ %.pre-phi71, %Lexer_advance.exit ], [ 0, %Lexer_advance.exit34 ]
  %34 = call fastcc ptr @Lexer_lex_token(ptr nonnull %3)
  %35 = add i64 %33, 1
  %36 = icmp slt i64 %memberidx1.i36.promoted53, %35
  br i1 %36, label %while.body.i.i, label %Array_Token____sl__.exit

while.body.i.i:                                   ; preds = %while.body, %while.body.i.i
  %37 = phi ptr [ %41, %while.body.i.i ], [ %32, %while.body ]
  %38 = phi i64 [ %39, %while.body.i.i ], [ %memberidx1.i36.promoted53, %while.body ]
  %39 = shl nuw i64 %38, 1
  %40 = shl i64 %38, 4
  %41 = call ptr @realloc(ptr %37, i64 %40)
  %42 = icmp slt i64 %39, %35
  br i1 %42, label %while.body.i.i, label %while.entry.i.i.Array_Token____sl__.exit_crit_edge

while.entry.i.i.Array_Token____sl__.exit_crit_edge: ; preds = %while.body.i.i
  store ptr %41, ptr %9, align 8
  %.pre = load i64, ptr %memberidx.i35, align 4
  %.pre70 = add nsw i64 %.pre, 1
  br label %Array_Token____sl__.exit

Array_Token____sl__.exit:                         ; preds = %while.entry.i.i.Array_Token____sl__.exit_crit_edge, %while.body
  %.pre-phi71 = phi i64 [ %.pre70, %while.entry.i.i.Array_Token____sl__.exit_crit_edge ], [ %35, %while.body ]
  %43 = phi ptr [ %41, %while.entry.i.i.Array_Token____sl__.exit_crit_edge ], [ %32, %while.body ]
  %44 = phi i64 [ %.pre, %while.entry.i.i.Array_Token____sl__.exit_crit_edge ], [ %33, %while.body ]
  %.lcssa54 = phi i64 [ %39, %while.entry.i.i.Array_Token____sl__.exit_crit_edge ], [ %memberidx1.i36.promoted53, %while.body ]
  store i64 %.lcssa54, ptr %memberidx1.i36, align 4
  store i64 %.pre-phi71, ptr %memberidx.i35, align 4
  %45 = getelementptr inbounds ptr, ptr %43, i64 %44
  store ptr %34, ptr %45, align 8
  %46 = load i64, ptr %memberidx2.i, align 4
  %47 = load ptr, ptr %memberidx.i, align 8
  %memberidx2.i.i = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  %48 = load i64, ptr %memberidx2.i.i, align 4
  %.not = icmp slt i64 %46, %48
  br i1 %.not, label %end.i, label %end.i.thread

end.i.thread:                                     ; preds = %Array_Token____sl__.exit
  store i8 0, ptr %3, align 8
  br label %Lexer_advance.exit

end.i:                                            ; preds = %Array_Token____sl__.exit
  %49 = add nsw i64 %46, 1
  store i64 %49, ptr %memberidx2.i, align 4
  %50 = load ptr, ptr %47, align 8
  %51 = getelementptr inbounds i8, ptr %50, i64 %49
  %52 = load i8, ptr %51, align 1
  store i8 %52, ptr %3, align 8
  switch i8 %52, label %if.entry9.i [
    i8 10, label %if.entry.i
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i:                                       ; preds = %end.i
  store i64 0, ptr %memberidx4.i, align 4
  %53 = load i64, ptr %memberidx3.i, align 4
  %54 = add nsw i64 %53, 1
  store i64 %54, ptr %memberidx3.i, align 4
  br label %Lexer_advance.exit

if.entry9.i:                                      ; preds = %end.i
  %55 = load i64, ptr %memberidx4.i, align 4
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i, %if.entry9.i
  %57 = phi i64 [ %46, %end.i.thread ], [ %49, %end.i ], [ %49, %if.entry.i ], [ %49, %if.entry9.i ]
  %58 = load i64, ptr %memberidx2.i.i, align 4
  %59 = icmp sge i64 %57, %58
  %60 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3 = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 1
  %61 = load i64, ptr %memberidx3, align 4
  %62 = icmp ne i64 %61, 0
  %63 = or i1 %59, %62
  br i1 %63, label %while.end, label %while.body
}

define internal fastcc noalias ptr @Lexer_base_int_token(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx2.i.i, align 4
  %.not = icmp slt i64 %3, %5
  br i1 %.not, label %end.i, label %end.i.thread

end.i.thread:                                     ; preds = %2
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit

end.i:                                            ; preds = %2
  %6 = add nsw i64 %3, 1
  store i64 %6, ptr %memberidx.i.i, align 4
  %7 = load ptr, ptr %4, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 %6
  %9 = load i8, ptr %8, align 1
  store i8 %9, ptr %0, align 1
  switch i8 %9, label %if.entry9.i [
    i8 10, label %if.entry.i
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i:                                       ; preds = %end.i
  %memberidx5.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i, align 4
  %memberidx6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %10 = load i64, ptr %memberidx6.i, align 4
  %11 = add nsw i64 %10, 1
  store i64 %11, ptr %memberidx6.i, align 4
  br label %Lexer_advance.exit

if.entry9.i:                                      ; preds = %end.i
  %memberidx12.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %memberidx12.i, align 4
  %13 = add nsw i64 %12, 1
  store i64 %13, ptr %memberidx12.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i, %if.entry9.i
  %14 = phi i64 [ %3, %end.i.thread ], [ %6, %end.i ], [ %6, %if.entry.i ], [ %6, %if.entry9.i ]
  %15 = icmp slt i64 %1, 10
  %16 = add nsw i64 %1, 48
  %17 = add nuw nsw i64 %1, 65
  %memberidx5.i19 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i20 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br i1 %15, label %while.entry.us, label %while.entry

while.entry.us:                                   ; preds = %Lexer_advance.exit, %while.entry.us.backedge
  %18 = phi i64 [ %19, %while.entry.us.backedge ], [ %14, %Lexer_advance.exit ]
  %length.0.us = phi i64 [ %37, %while.entry.us.backedge ], [ 3, %Lexer_advance.exit ]
  %value.0.us = phi i64 [ %36, %while.entry.us.backedge ], [ 0, %Lexer_advance.exit ]
  %19 = add nsw i64 %18, 1
  %20 = load i64, ptr %memberidx2.i.i, align 4
  %21 = icmp slt i64 %19, %20
  br i1 %21, label %if.entry.i35.us, label %Lexer_peek.exit.us

if.entry.i35.us:                                  ; preds = %while.entry.us
  %22 = load ptr, ptr %4, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 %19
  %24 = load i8, ptr %23, align 1
  br label %Lexer_peek.exit.us

Lexer_peek.exit.us:                               ; preds = %if.entry.i35.us, %while.entry.us
  %common.ret.op.i.us = phi i8 [ %24, %if.entry.i35.us ], [ 0, %while.entry.us ]
  %25 = add i8 %common.ret.op.i.us, -97
  %26 = icmp ult i8 %25, 26
  %27 = add i8 %common.ret.op.i.us, -32
  %common.ret.op.i41.us = select i1 %26, i8 %27, i8 %common.ret.op.i.us
  %28 = icmp sgt i8 %common.ret.op.i41.us, 47
  %29 = sext i8 %common.ret.op.i41.us to i64
  %30 = icmp sge i64 %16, %29
  %31 = and i1 %28, %30
  %.not43.us = icmp slt i64 %18, %20
  %32 = and i1 %.not43.us, %31
  br i1 %32, label %end.i18.us, label %while.end

end.i18.us:                                       ; preds = %Lexer_peek.exit.us
  %33 = mul nuw i64 %value.0.us, %1
  %34 = icmp ugt i8 %common.ret.op.i41.us, 64
  %spec.select.v.us = select i1 %34, i8 -55, i8 -48
  %spec.select.us = add nsw i8 %spec.select.v.us, %common.ret.op.i41.us
  %35 = zext i8 %spec.select.us to i64
  %36 = add nuw i64 %33, %35
  %37 = add nuw nsw i64 %length.0.us, 1
  store i64 %19, ptr %memberidx.i.i, align 4
  %38 = load ptr, ptr %4, align 8
  %39 = getelementptr inbounds i8, ptr %38, i64 %19
  %40 = load i8, ptr %39, align 1
  store i8 %40, ptr %0, align 1
  switch i8 %40, label %Lexer_advance.exit26.us.sink.split [
    i8 10, label %if.entry.i21.us
    i8 0, label %while.entry.us.backedge
  ]

if.entry.i21.us:                                  ; preds = %end.i18.us
  store i64 0, ptr %memberidx5.i19, align 4
  br label %Lexer_advance.exit26.us.sink.split

Lexer_advance.exit26.us.sink.split:               ; preds = %end.i18.us, %if.entry.i21.us
  %memberidx5.i19.sink50 = phi ptr [ %memberidx6.i20, %if.entry.i21.us ], [ %memberidx5.i19, %end.i18.us ]
  %41 = load i64, ptr %memberidx5.i19.sink50, align 4
  %42 = add nsw i64 %41, 1
  store i64 %42, ptr %memberidx5.i19.sink50, align 4
  br label %while.entry.us.backedge

while.entry.us.backedge:                          ; preds = %Lexer_advance.exit26.us.sink.split, %end.i18.us
  br label %while.entry.us

while.entry:                                      ; preds = %Lexer_advance.exit, %while.entry.backedge
  %43 = phi i64 [ %44, %while.entry.backedge ], [ %14, %Lexer_advance.exit ]
  %length.0 = phi i64 [ %74, %while.entry.backedge ], [ 3, %Lexer_advance.exit ]
  %value.0 = phi i64 [ %73, %while.entry.backedge ], [ 0, %Lexer_advance.exit ]
  %44 = add nsw i64 %43, 1
  %45 = load i64, ptr %memberidx2.i.i, align 4
  %46 = icmp slt i64 %44, %45
  br i1 %46, label %if.entry.i35, label %Lexer_peek.exit

if.entry.i35:                                     ; preds = %while.entry
  %47 = load ptr, ptr %4, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 %44
  %49 = load i8, ptr %48, align 1
  br label %Lexer_peek.exit

Lexer_peek.exit:                                  ; preds = %while.entry, %if.entry.i35
  %common.ret.op.i = phi i8 [ %49, %if.entry.i35 ], [ 0, %while.entry ]
  %50 = add i8 %common.ret.op.i, -97
  %51 = icmp ult i8 %50, 26
  %52 = add i8 %common.ret.op.i, -32
  %common.ret.op.i41 = select i1 %51, i8 %52, i8 %common.ret.op.i
  %53 = icmp sgt i8 %common.ret.op.i41, 47
  %54 = sext i8 %common.ret.op.i41 to i64
  %55 = icmp sge i64 %16, %54
  %56 = and i1 %53, %55
  %57 = icmp sgt i8 %common.ret.op.i41, 64
  %58 = icmp sge i64 %17, %54
  %59 = and i1 %57, %58
  %60 = or i1 %56, %59
  %.not43 = icmp slt i64 %43, %45
  %61 = and i1 %.not43, %60
  br i1 %61, label %end.i18, label %while.end

while.end:                                        ; preds = %Lexer_peek.exit, %Lexer_peek.exit.us
  %.us-phi = phi i64 [ %length.0.us, %Lexer_peek.exit.us ], [ %length.0, %Lexer_peek.exit ]
  %.us-phi46 = phi i64 [ %value.0.us, %Lexer_peek.exit.us ], [ %value.0, %Lexer_peek.exit ]
  %62 = tail call ptr @malloc(i32 24)
  %63 = tail call ptr @malloc(i32 32)
  %64 = load i64, ptr %memberidx.i.i, align 4
  %65 = sub nsw i64 1, %.us-phi
  %66 = add i64 %65, %64
  %67 = add nsw i64 %64, 1
  %68 = load i64, ptr %memberidx5.i19, align 4
  %69 = sub nuw i64 %68, %.us-phi
  %70 = load i64, ptr %memberidx6.i20, align 4
  store i64 %66, ptr %63, align 4
  %memberidx1.i.i30 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 1
  store i64 %67, ptr %memberidx1.i.i30, align 4
  %memberidx2.i.i31 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 2
  store i64 %69, ptr %memberidx2.i.i31, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 3
  store i64 %70, ptr %memberidx3.i.i, align 4
  store i64 31, ptr %62, align 4
  %memberidx1.i.i27 = getelementptr inbounds %Token, ptr %62, i64 0, i32 1
  store ptr %63, ptr %memberidx1.i.i27, align 8
  %memberidx.i = getelementptr inbounds %IntToken, ptr %62, i64 0, i32 2
  store i64 %.us-phi46, ptr %memberidx.i, align 4
  ret ptr %62

end.i18:                                          ; preds = %Lexer_peek.exit
  %71 = mul nuw i64 %value.0, %1
  %spec.select.v = select i1 %57, i8 -55, i8 -48
  %spec.select = add nsw i8 %spec.select.v, %common.ret.op.i41
  %72 = zext i8 %spec.select to i64
  %73 = add nuw i64 %71, %72
  %74 = add nuw nsw i64 %length.0, 1
  store i64 %44, ptr %memberidx.i.i, align 4
  %75 = load ptr, ptr %4, align 8
  %76 = getelementptr inbounds i8, ptr %75, i64 %44
  %77 = load i8, ptr %76, align 1
  store i8 %77, ptr %0, align 1
  switch i8 %77, label %Lexer_advance.exit26.sink.split [
    i8 10, label %if.entry.i21
    i8 0, label %while.entry.backedge
  ]

if.entry.i21:                                     ; preds = %end.i18
  store i64 0, ptr %memberidx5.i19, align 4
  br label %Lexer_advance.exit26.sink.split

Lexer_advance.exit26.sink.split:                  ; preds = %end.i18, %if.entry.i21
  %memberidx6.i20.sink52 = phi ptr [ %memberidx6.i20, %if.entry.i21 ], [ %memberidx5.i19, %end.i18 ]
  %78 = load i64, ptr %memberidx6.i20.sink52, align 4
  %79 = add nsw i64 %78, 1
  store i64 %79, ptr %memberidx6.i20.sink52, align 4
  br label %while.entry.backedge

while.entry.backedge:                             ; preds = %Lexer_advance.exit26.sink.split, %end.i18
  br label %while.entry
}

define internal fastcc noalias ptr @Lexer_lex_token(ptr %0) unnamed_addr {
  %2 = load i8, ptr %0, align 1
  switch i8 %2, label %ifend [
    i8 32, label %if.entry
    i8 9, label %if.entry
  ]

common.ret:                                       ; preds = %ifend6.i936, %Lexer_advance.exit53.i928, %ifend3.i904, %Lexer_advance.exit.i866, %ifend6.i835, %Lexer_advance.exit53.i827, %ifend3.i803, %Lexer_advance.exit.i765, %ifend.i734, %Lexer_advance.exit.i726, %ifend.i695, %Lexer_advance.exit.i687, %ifend.i552, %Lexer_advance.exit.i544, %ifend.i453, %Lexer_advance.exit.i445, %ifend.i414, %Lexer_advance.exit.i409, %ifend6.i390, %Lexer_advance.exit53.i382, %ifend3.i358, %Lexer_advance.exit.i331, %ifend6.i, %Lexer_advance.exit53.i, %Lexer_advance.exit88.i, %Lexer_advance.exit.i285, %ifend3.i, %Lexer_advance.exit47.i, %Lexer_advance.exit.i255, %end.i215, %if.entry6.i, %if.entry2.i188, %if.entry.i186, %ifend4.i, %ifend.i, %Array_FloError____sl__.exit, %if.entry87, %Lexer_dot_token.exit, %if.entry69, %if.entry66, %Lexer_char_token.exit, %if.entry60, %if.entry57, %if.entry54, %if.entry51, %if.entry48, %if.entry45, %if.entry42, %Lexer_advance.exit511, %if.entry18, %if.entry15, %if.entry12, %Lexer_string_token.exit, %Lexer_advance.exit
  %common.ret.op = phi ptr [ %14, %Lexer_advance.exit ], [ %438, %Lexer_string_token.exit ], [ %505, %if.entry12 ], [ %512, %if.entry15 ], [ %519, %if.entry18 ], [ %823, %Lexer_advance.exit511 ], [ %846, %if.entry42 ], [ %853, %if.entry45 ], [ %860, %if.entry48 ], [ %867, %if.entry51 ], [ %874, %if.entry54 ], [ %881, %if.entry57 ], [ %888, %if.entry60 ], [ %926, %Lexer_char_token.exit ], [ %935, %if.entry66 ], [ %942, %if.entry69 ], [ %1138, %Lexer_dot_token.exit ], [ %1147, %if.entry87 ], [ null, %Array_FloError____sl__.exit ], [ %158, %ifend.i ], [ %159, %ifend4.i ], [ %451, %if.entry.i186 ], [ %453, %if.entry2.i188 ], [ %455, %if.entry6.i ], [ %483, %end.i215 ], [ %539, %Lexer_advance.exit.i255 ], [ %560, %ifend3.i ], [ %552, %Lexer_advance.exit47.i ], [ %580, %Lexer_advance.exit.i285 ], [ %616, %ifend6.i ], [ %593, %Lexer_advance.exit88.i ], [ %608, %Lexer_advance.exit53.i ], [ %637, %Lexer_advance.exit.i331 ], [ %656, %ifend3.i358 ], [ %668, %Lexer_advance.exit53.i382 ], [ %676, %ifend6.i390 ], [ %697, %Lexer_advance.exit.i409 ], [ %705, %ifend.i414 ], [ %725, %Lexer_advance.exit.i445 ], [ %733, %ifend.i453 ], [ %831, %Lexer_advance.exit.i544 ], [ %839, %ifend.i552 ], [ %962, %Lexer_advance.exit.i687 ], [ %970, %ifend.i695 ], [ %990, %Lexer_advance.exit.i726 ], [ %998, %ifend.i734 ], [ %1018, %Lexer_advance.exit.i765 ], [ %1037, %ifend3.i803 ], [ %1049, %Lexer_advance.exit53.i827 ], [ %1057, %ifend6.i835 ], [ %1078, %Lexer_advance.exit.i866 ], [ %1097, %ifend3.i904 ], [ %1109, %Lexer_advance.exit53.i928 ], [ %1117, %ifend6.i936 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1, %1
  %memberidx.i.i164 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i164, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx2.i.i, align 4
  %.not1154 = icmp slt i64 %3, %5
  br i1 %.not1154, label %end.i, label %end.i.thread

end.i.thread:                                     ; preds = %if.entry
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit

end.i:                                            ; preds = %if.entry
  %6 = add nsw i64 %3, 1
  store i64 %6, ptr %memberidx.i.i164, align 4
  %7 = load ptr, ptr %4, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 %6
  %9 = load i8, ptr %8, align 1
  store i8 %9, ptr %0, align 1
  switch i8 %9, label %if.entry9.i [
    i8 10, label %if.entry.i
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i:                                       ; preds = %end.i
  %memberidx5.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i, align 4
  %memberidx6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %10 = load i64, ptr %memberidx6.i, align 4
  %11 = add nsw i64 %10, 1
  store i64 %11, ptr %memberidx6.i, align 4
  br label %Lexer_advance.exit

if.entry9.i:                                      ; preds = %end.i
  %memberidx12.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %memberidx12.i, align 4
  %13 = add nsw i64 %12, 1
  store i64 %13, ptr %memberidx12.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i, %if.entry9.i
  %14 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

ifend:                                            ; preds = %1
  %15 = and i8 %2, -33
  %16 = add i8 %15, -65
  %17 = icmp ult i8 %16, 26
  %18 = icmp eq i8 %2, 95
  %19 = or i1 %18, %17
  br i1 %19, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %memberidx.i167 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %20 = load i64, ptr %memberidx.i167, align 4
  %memberidx1.i.i169 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %21 = load ptr, ptr %memberidx1.i.i169, align 8
  %memberidx2.i.i170 = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  %memberidx5.i62.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i63.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.backedge, %if.entry3
  %22 = phi i64 [ %20, %if.entry3 ], [ %24, %while.entry.i.backedge ]
  %23 = phi i64 [ 1, %if.entry3 ], [ %144, %while.entry.i.backedge ]
  %24 = add nsw i64 %22, 1
  %25 = load i64, ptr %memberidx2.i.i170, align 4
  %26 = icmp slt i64 %24, %25
  br i1 %26, label %if.entry.i77.i, label %Lexer_peek.exit78.i

if.entry.i77.i:                                   ; preds = %while.entry.i
  %27 = load ptr, ptr %21, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 %24
  %29 = load i8, ptr %28, align 1
  br label %Lexer_peek.exit78.i

Lexer_peek.exit78.i:                              ; preds = %if.entry.i77.i, %while.entry.i
  %common.ret.op.i76.i = phi i8 [ %29, %if.entry.i77.i ], [ 0, %while.entry.i ]
  %30 = and i8 %common.ret.op.i76.i, -33
  %31 = add i8 %30, -65
  %32 = icmp ult i8 %31, 26
  %33 = icmp eq i8 %common.ret.op.i76.i, 95
  %34 = or i1 %33, %32
  %35 = add i8 %common.ret.op.i76.i, -48
  %36 = icmp ult i8 %35, 10
  %37 = or i1 %36, %34
  %.not1149 = icmp slt i64 %22, %25
  %38 = and i1 %.not1149, %37
  br i1 %38, label %end.i61.i, label %while.end.i

while.end.i:                                      ; preds = %Lexer_peek.exit78.i
  %39 = trunc i64 %23 to i32
  %40 = tail call ptr @malloc(i32 %39)
  %41 = load ptr, ptr %21, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %20
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(1) %40, ptr noundef nonnull align 536870912 dereferenceable(1) %42, i64 %23, i1 false)
  %43 = tail call ptr @malloc(i32 24)
  store ptr %40, ptr %43, align 8
  %memberidx1.i.i82.i = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 %23, ptr %memberidx1.i.i82.i, align 4
  %memberidx2.i.i83.i = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 %23, ptr %memberidx2.i.i83.i, align 4
  %44 = tail call ptr @malloc(i32 32)
  %45 = load i64, ptr %memberidx.i167, align 4
  %46 = sub nsw i64 1, %23
  %47 = add i64 %46, %45
  %48 = add nsw i64 %45, 1
  %49 = load i64, ptr %memberidx5.i62.i, align 4
  %50 = sub nuw i64 %49, %23
  %51 = load i64, ptr %memberidx6.i63.i, align 4
  store i64 %47, ptr %44, align 4
  %memberidx1.i.i86.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %48, ptr %memberidx1.i.i86.i, align 4
  %memberidx2.i.i87.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i.i87.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %51, ptr %memberidx3.i.i.i, align 4
  %52 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %52, ptr noundef nonnull align 8 dereferenceable(3) @40, i64 3, i1 false)
  %53 = tail call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %String, ptr %53, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i.i.i, align 4
  %.not.i.i.i = icmp eq i64 %23, 3
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %ifend.i.i

ifend.i.i.i:                                      ; preds = %while.end.i
  %54 = tail call i64 @memcmp(ptr %40, ptr nonnull %52, i64 3)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %if.entry.i173, label %ifend.i.i

ifend.i.i:                                        ; preds = %while.end.i, %ifend.i.i.i
  %56 = tail call ptr @malloc(i32 2)
  store i16 29295, ptr %56, align 8
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  %memberidx1.i.i89.i.i = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i89.i.i, align 4
  %memberidx2.i.i90.i.i = getelementptr inbounds %String, ptr %57, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i90.i.i, align 4
  %.not.i93.i.i = icmp eq i64 %23, 2
  br i1 %.not.i93.i.i, label %ifend.i95.i.i, label %ifend3.i.i

ifend.i95.i.i:                                    ; preds = %ifend.i.i
  %58 = tail call i64 @memcmp(ptr %40, ptr nonnull %56, i64 2)
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %if.entry.i173, label %ifend3.i.i

ifend3.i.i:                                       ; preds = %ifend.i.i, %ifend.i95.i.i
  %60 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %60, ptr noundef nonnull align 8 dereferenceable(5) @41, i64 5, i1 false)
  %61 = tail call ptr @malloc(i32 24)
  store ptr %60, ptr %61, align 8
  %memberidx1.i.i97.i.i = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i97.i.i, align 4
  %memberidx2.i.i98.i.i = getelementptr inbounds %String, ptr %61, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i98.i.i, align 4
  %.not.i101.i.i = icmp eq i64 %23, 5
  br i1 %.not.i101.i.i, label %ifend.i103.i.i, label %ifend6.i.i

ifend.i103.i.i:                                   ; preds = %ifend3.i.i
  %62 = tail call i64 @memcmp(ptr %40, ptr nonnull %60, i64 5)
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %if.entry.i173, label %ifend6.i.i

ifend6.i.i:                                       ; preds = %ifend3.i.i, %ifend.i103.i.i
  %64 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %64, ptr noundef nonnull align 8 dereferenceable(3) @42, i64 3, i1 false)
  %65 = tail call ptr @malloc(i32 24)
  store ptr %64, ptr %65, align 8
  %memberidx1.i.i105.i.i = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i105.i.i, align 4
  %memberidx2.i.i106.i.i = getelementptr inbounds %String, ptr %65, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i106.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i111.i.i, label %ifend9.i.i

ifend.i111.i.i:                                   ; preds = %ifend6.i.i
  %66 = tail call i64 @memcmp(ptr %40, ptr nonnull %64, i64 3)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %if.entry.i173, label %ifend9.i.i

ifend9.i.i:                                       ; preds = %ifend6.i.i, %ifend.i111.i.i
  %68 = tail call ptr @malloc(i32 2)
  store i16 26217, ptr %68, align 8
  %69 = tail call ptr @malloc(i32 24)
  store ptr %68, ptr %69, align 8
  %memberidx1.i.i113.i.i = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i113.i.i, align 4
  %memberidx2.i.i114.i.i = getelementptr inbounds %String, ptr %69, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i114.i.i, align 4
  br i1 %.not.i93.i.i, label %ifend.i119.i.i, label %ifend12.i.i

ifend.i119.i.i:                                   ; preds = %ifend9.i.i
  %70 = tail call i64 @memcmp(ptr %40, ptr nonnull %68, i64 2)
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %if.entry.i173, label %ifend12.i.i

ifend12.i.i:                                      ; preds = %ifend9.i.i, %ifend.i119.i.i
  %72 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %72, ptr noundef nonnull align 8 dereferenceable(5) @43, i64 5, i1 false)
  %73 = tail call ptr @malloc(i32 24)
  store ptr %72, ptr %73, align 8
  %memberidx1.i.i121.i.i = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i121.i.i, align 4
  %memberidx2.i.i122.i.i = getelementptr inbounds %String, ptr %73, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i122.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i127.i.i, label %ifend15.i.i

ifend.i127.i.i:                                   ; preds = %ifend12.i.i
  %74 = tail call i64 @memcmp(ptr %40, ptr nonnull %72, i64 5)
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %if.entry.i173, label %ifend15.i.i

ifend15.i.i:                                      ; preds = %ifend12.i.i, %ifend.i127.i.i
  %76 = tail call ptr @malloc(i32 4)
  store i32 1702063205, ptr %76, align 8
  %77 = tail call ptr @malloc(i32 24)
  store ptr %76, ptr %77, align 8
  %memberidx1.i.i129.i.i = getelementptr inbounds %String, ptr %77, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i129.i.i, align 4
  %memberidx2.i.i130.i.i = getelementptr inbounds %String, ptr %77, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i130.i.i, align 4
  %.not.i133.i.i = icmp eq i64 %23, 4
  br i1 %.not.i133.i.i, label %ifend.i135.i.i, label %ifend18.i.i

ifend.i135.i.i:                                   ; preds = %ifend15.i.i
  %78 = tail call i64 @memcmp(ptr %40, ptr nonnull %76, i64 4)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %if.entry.i173, label %ifend18.i.i

ifend18.i.i:                                      ; preds = %ifend15.i.i, %ifend.i135.i.i
  %80 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %80, ptr noundef nonnull align 8 dereferenceable(3) @45, i64 3, i1 false)
  %81 = tail call ptr @malloc(i32 24)
  store ptr %80, ptr %81, align 8
  %memberidx1.i.i137.i.i = getelementptr inbounds %String, ptr %81, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i137.i.i, align 4
  %memberidx2.i.i138.i.i = getelementptr inbounds %String, ptr %81, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i138.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i143.i.i, label %ifend21.i.i

ifend.i143.i.i:                                   ; preds = %ifend18.i.i
  %82 = tail call i64 @memcmp(ptr %40, ptr nonnull %80, i64 3)
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %if.entry.i173, label %ifend21.i.i

ifend21.i.i:                                      ; preds = %ifend18.i.i, %ifend.i143.i.i
  %84 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %84, ptr noundef nonnull align 8 dereferenceable(5) @46, i64 5, i1 false)
  %85 = tail call ptr @malloc(i32 24)
  store ptr %84, ptr %85, align 8
  %memberidx1.i.i145.i.i = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i145.i.i, align 4
  %memberidx2.i.i146.i.i = getelementptr inbounds %String, ptr %85, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i146.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i151.i.i, label %ifend24.i.i

ifend.i151.i.i:                                   ; preds = %ifend21.i.i
  %86 = tail call i64 @memcmp(ptr %40, ptr nonnull %84, i64 5)
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %if.entry.i173, label %ifend24.i.i

ifend24.i.i:                                      ; preds = %ifend21.i.i, %ifend.i151.i.i
  %88 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %88, ptr noundef nonnull align 8 dereferenceable(3) @47, i64 3, i1 false)
  %89 = tail call ptr @malloc(i32 24)
  store ptr %88, ptr %89, align 8
  %memberidx1.i.i153.i.i = getelementptr inbounds %String, ptr %89, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i153.i.i, align 4
  %memberidx2.i.i154.i.i = getelementptr inbounds %String, ptr %89, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i154.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i159.i.i, label %ifend27.i.i

ifend.i159.i.i:                                   ; preds = %ifend24.i.i
  %90 = tail call i64 @memcmp(ptr %40, ptr nonnull %88, i64 3)
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %if.entry.i173, label %ifend27.i.i

ifend27.i.i:                                      ; preds = %ifend24.i.i, %ifend.i159.i.i
  %92 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %92, ptr noundef nonnull align 8 dereferenceable(5) @48, i64 5, i1 false)
  %93 = tail call ptr @malloc(i32 24)
  store ptr %92, ptr %93, align 8
  %memberidx1.i.i161.i.i = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i161.i.i, align 4
  %memberidx2.i.i162.i.i = getelementptr inbounds %String, ptr %93, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i162.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i167.i.i, label %ifend30.i.i

ifend.i167.i.i:                                   ; preds = %ifend27.i.i
  %94 = tail call i64 @memcmp(ptr %40, ptr nonnull %92, i64 5)
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %if.entry.i173, label %ifend30.i.i

ifend30.i.i:                                      ; preds = %ifend27.i.i, %ifend.i167.i.i
  %96 = tail call ptr @malloc(i32 8)
  store i64 7310870969309884259, ptr %96, align 8
  %97 = tail call ptr @malloc(i32 24)
  store ptr %96, ptr %97, align 8
  %memberidx1.i.i169.i.i = getelementptr inbounds %String, ptr %97, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i169.i.i, align 4
  %memberidx2.i.i170.i.i = getelementptr inbounds %String, ptr %97, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i170.i.i, align 4
  %.not.i173.i.i = icmp eq i64 %23, 8
  br i1 %.not.i173.i.i, label %ifend.i175.i.i, label %ifend33.i.i

ifend.i175.i.i:                                   ; preds = %ifend30.i.i
  %98 = tail call i64 @memcmp(ptr %40, ptr nonnull %96, i64 8)
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %if.entry.i173, label %ifend33.i.i

ifend33.i.i:                                      ; preds = %ifend30.i.i, %ifend.i175.i.i
  %100 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %100, ptr noundef nonnull align 8 dereferenceable(6) @49, i64 6, i1 false)
  %101 = tail call ptr @malloc(i32 24)
  store ptr %100, ptr %101, align 8
  %memberidx1.i.i177.i.i = getelementptr inbounds %String, ptr %101, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i177.i.i, align 4
  %memberidx2.i.i178.i.i = getelementptr inbounds %String, ptr %101, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i178.i.i, align 4
  %.not.i181.i.i = icmp eq i64 %23, 6
  br i1 %.not.i181.i.i, label %ifend.i183.i.i, label %ifend36.i.i

ifend.i183.i.i:                                   ; preds = %ifend33.i.i
  %102 = tail call i64 @memcmp(ptr %40, ptr nonnull %100, i64 6)
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %if.entry.i173, label %ifend36.i.i

ifend36.i.i:                                      ; preds = %ifend33.i.i, %ifend.i183.i.i
  %104 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %104, ptr noundef nonnull align 8 dereferenceable(6) @50, i64 6, i1 false)
  %105 = tail call ptr @malloc(i32 24)
  store ptr %104, ptr %105, align 8
  %memberidx1.i.i185.i.i = getelementptr inbounds %String, ptr %105, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i185.i.i, align 4
  %memberidx2.i.i186.i.i = getelementptr inbounds %String, ptr %105, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i186.i.i, align 4
  br i1 %.not.i181.i.i, label %ifend.i191.i.i, label %ifend39.i.i

ifend.i191.i.i:                                   ; preds = %ifend36.i.i
  %106 = tail call i64 @memcmp(ptr %40, ptr nonnull %104, i64 6)
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %if.entry.i173, label %ifend39.i.i

ifend39.i.i:                                      ; preds = %ifend36.i.i, %ifend.i191.i.i
  %108 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %108, ptr noundef nonnull align 8 dereferenceable(7) @51, i64 7, i1 false)
  %109 = tail call ptr @malloc(i32 24)
  store ptr %108, ptr %109, align 8
  %memberidx1.i.i193.i.i = getelementptr inbounds %String, ptr %109, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i193.i.i, align 4
  %memberidx2.i.i194.i.i = getelementptr inbounds %String, ptr %109, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i194.i.i, align 4
  %.not.i197.i.i = icmp eq i64 %23, 7
  br i1 %.not.i197.i.i, label %ifend.i199.i.i, label %ifend42.i.i

ifend.i199.i.i:                                   ; preds = %ifend39.i.i
  %110 = tail call i64 @memcmp(ptr %40, ptr nonnull %108, i64 7)
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %if.entry.i173, label %ifend42.i.i

ifend42.i.i:                                      ; preds = %ifend39.i.i, %ifend.i199.i.i
  %112 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %112, ptr noundef nonnull align 8 dereferenceable(6) @52, i64 6, i1 false)
  %113 = tail call ptr @malloc(i32 24)
  store ptr %112, ptr %113, align 8
  %memberidx1.i.i201.i.i = getelementptr inbounds %String, ptr %113, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i201.i.i, align 4
  %memberidx2.i.i202.i.i = getelementptr inbounds %String, ptr %113, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i202.i.i, align 4
  br i1 %.not.i181.i.i, label %ifend.i207.i.i, label %ifend45.i.i

ifend.i207.i.i:                                   ; preds = %ifend42.i.i
  %114 = tail call i64 @memcmp(ptr %40, ptr nonnull %112, i64 6)
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %if.entry.i173, label %ifend45.i.i

ifend45.i.i:                                      ; preds = %ifend42.i.i, %ifend.i207.i.i
  %116 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %116, ptr noundef nonnull align 8 dereferenceable(9) @53, i64 9, i1 false)
  %117 = tail call ptr @malloc(i32 24)
  store ptr %116, ptr %117, align 8
  %memberidx1.i.i209.i.i = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i209.i.i, align 4
  %memberidx2.i.i210.i.i = getelementptr inbounds %String, ptr %117, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i210.i.i, align 4
  %.not.i213.i.i = icmp eq i64 %23, 9
  br i1 %.not.i213.i.i, label %ifend.i215.i.i, label %ifend48.i.i

ifend.i215.i.i:                                   ; preds = %ifend45.i.i
  %118 = tail call i64 @memcmp(ptr %40, ptr nonnull %116, i64 9)
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %if.entry.i173, label %ifend48.i.i

ifend48.i.i:                                      ; preds = %ifend45.i.i, %ifend.i215.i.i
  %120 = tail call ptr @malloc(i32 2)
  store i16 28265, ptr %120, align 8
  %121 = tail call ptr @malloc(i32 24)
  store ptr %120, ptr %121, align 8
  %memberidx1.i.i217.i.i = getelementptr inbounds %String, ptr %121, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i217.i.i, align 4
  %memberidx2.i.i218.i.i = getelementptr inbounds %String, ptr %121, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i218.i.i, align 4
  br i1 %.not.i93.i.i, label %ifend.i223.i.i, label %ifend51.i.i

ifend.i223.i.i:                                   ; preds = %ifend48.i.i
  %122 = tail call i64 @memcmp(ptr %40, ptr nonnull %120, i64 2)
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %if.entry.i173, label %ifend51.i.i

ifend51.i.i:                                      ; preds = %ifend48.i.i, %ifend.i223.i.i
  %124 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %124, ptr noundef nonnull align 8 dereferenceable(5) @54, i64 5, i1 false)
  %125 = tail call ptr @malloc(i32 24)
  store ptr %124, ptr %125, align 8
  %memberidx1.i.i225.i.i = getelementptr inbounds %String, ptr %125, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i225.i.i, align 4
  %memberidx2.i.i226.i.i = getelementptr inbounds %String, ptr %125, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i226.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i231.i.i, label %ifend54.i.i

ifend.i231.i.i:                                   ; preds = %ifend51.i.i
  %126 = tail call i64 @memcmp(ptr %40, ptr nonnull %124, i64 5)
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %if.entry.i173, label %ifend54.i.i

ifend54.i.i:                                      ; preds = %ifend51.i.i, %ifend.i231.i.i
  %128 = tail call ptr @malloc(i32 4)
  store i32 1836412517, ptr %128, align 8
  %129 = tail call ptr @malloc(i32 24)
  store ptr %128, ptr %129, align 8
  %memberidx1.i.i233.i.i = getelementptr inbounds %String, ptr %129, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i233.i.i, align 4
  %memberidx2.i.i234.i.i = getelementptr inbounds %String, ptr %129, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i234.i.i, align 4
  br i1 %.not.i133.i.i, label %ifend.i239.i.i, label %ifend57.i.i

ifend.i239.i.i:                                   ; preds = %ifend54.i.i
  %130 = tail call i64 @memcmp(ptr %40, ptr nonnull %128, i64 4)
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %if.entry.i173, label %ifend57.i.i

ifend57.i.i:                                      ; preds = %ifend54.i.i, %ifend.i239.i.i
  %132 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %132, ptr noundef nonnull align 8 dereferenceable(3) @55, i64 3, i1 false)
  %133 = tail call ptr @malloc(i32 24)
  store ptr %132, ptr %133, align 8
  %memberidx1.i.i241.i.i = getelementptr inbounds %String, ptr %133, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i241.i.i, align 4
  %memberidx2.i.i242.i.i = getelementptr inbounds %String, ptr %133, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i242.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i247.i.i, label %ifend60.i.i

ifend.i247.i.i:                                   ; preds = %ifend57.i.i
  %134 = tail call i64 @memcmp(ptr %40, ptr nonnull %132, i64 3)
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %if.entry.i173, label %ifend60.i.i

ifend60.i.i:                                      ; preds = %ifend57.i.i, %ifend.i247.i.i
  %136 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %136, ptr noundef nonnull align 8 dereferenceable(3) @56, i64 3, i1 false)
  %137 = tail call ptr @malloc(i32 24)
  store ptr %136, ptr %137, align 8
  %memberidx1.i.i249.i.i = getelementptr inbounds %String, ptr %137, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i249.i.i, align 4
  %memberidx2.i.i250.i.i = getelementptr inbounds %String, ptr %137, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i250.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i255.i.i, label %ifend63.i.i

ifend.i255.i.i:                                   ; preds = %ifend60.i.i
  %138 = tail call i64 @memcmp(ptr %40, ptr nonnull %136, i64 3)
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %if.entry.i173, label %ifend63.i.i

ifend63.i.i:                                      ; preds = %ifend60.i.i, %ifend.i255.i.i
  %140 = tail call ptr @malloc(i32 2)
  store i16 29537, ptr %140, align 8
  %141 = tail call ptr @malloc(i32 24)
  store ptr %140, ptr %141, align 8
  %memberidx1.i.i257.i.i = getelementptr inbounds %String, ptr %141, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i257.i.i, align 4
  %memberidx2.i.i258.i.i = getelementptr inbounds %String, ptr %141, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i258.i.i, align 4
  br i1 %.not.i93.i.i, label %ifend.i263.i.i, label %ifend.i

ifend.i263.i.i:                                   ; preds = %ifend63.i.i
  %142 = tail call i64 @memcmp(ptr %40, ptr nonnull %140, i64 2)
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %if.entry.i173, label %ifend.i

end.i61.i:                                        ; preds = %Lexer_peek.exit78.i
  %144 = add nuw nsw i64 %23, 1
  store i64 %24, ptr %memberidx.i167, align 4
  %145 = load ptr, ptr %21, align 8
  %146 = getelementptr inbounds i8, ptr %145, i64 %24
  %147 = load i8, ptr %146, align 1
  store i8 %147, ptr %0, align 1
  switch i8 %147, label %Lexer_advance.exit69.i.sink.split [
    i8 10, label %if.entry.i64.i
    i8 0, label %while.entry.i.backedge
  ]

if.entry.i64.i:                                   ; preds = %end.i61.i
  store i64 0, ptr %memberidx5.i62.i, align 4
  br label %Lexer_advance.exit69.i.sink.split

Lexer_advance.exit69.i.sink.split:                ; preds = %end.i61.i, %if.entry.i64.i
  %memberidx5.i62.i.sink1286 = phi ptr [ %memberidx6.i63.i, %if.entry.i64.i ], [ %memberidx5.i62.i, %end.i61.i ]
  %148 = load i64, ptr %memberidx5.i62.i.sink1286, align 4
  %149 = add nsw i64 %148, 1
  store i64 %149, ptr %memberidx5.i62.i.sink1286, align 4
  br label %while.entry.i.backedge

while.entry.i.backedge:                           ; preds = %Lexer_advance.exit69.i.sink.split, %end.i61.i
  br label %while.entry.i

if.entry.i173:                                    ; preds = %ifend.i263.i.i, %ifend.i.i.i, %ifend.i95.i.i, %ifend.i103.i.i, %ifend.i111.i.i, %ifend.i119.i.i, %ifend.i127.i.i, %ifend.i135.i.i, %ifend.i143.i.i, %ifend.i151.i.i, %ifend.i159.i.i, %ifend.i167.i.i, %ifend.i175.i.i, %ifend.i183.i.i, %ifend.i191.i.i, %ifend.i199.i.i, %ifend.i207.i.i, %ifend.i215.i.i, %ifend.i223.i.i, %ifend.i231.i.i, %ifend.i239.i.i, %ifend.i247.i.i, %ifend.i255.i.i
  %common.ret.op.i72.i.ph = phi i64 [ 73, %ifend.i255.i.i ], [ 72, %ifend.i247.i.i ], [ 71, %ifend.i239.i.i ], [ 70, %ifend.i231.i.i ], [ 69, %ifend.i223.i.i ], [ 68, %ifend.i215.i.i ], [ 67, %ifend.i207.i.i ], [ 66, %ifend.i199.i.i ], [ 65, %ifend.i191.i.i ], [ 64, %ifend.i183.i.i ], [ 63, %ifend.i175.i.i ], [ 62, %ifend.i167.i.i ], [ 61, %ifend.i159.i.i ], [ 60, %ifend.i151.i.i ], [ 59, %ifend.i143.i.i ], [ 58, %ifend.i135.i.i ], [ 57, %ifend.i127.i.i ], [ 56, %ifend.i119.i.i ], [ 55, %ifend.i111.i.i ], [ 54, %ifend.i103.i.i ], [ 9, %ifend.i95.i.i ], [ 8, %ifend.i.i.i ], [ 74, %ifend.i263.i.i ]
  %150 = load i64, ptr %memberidx.i167, align 4
  %151 = add nsw i64 %150, 1
  %152 = load ptr, ptr %memberidx1.i.i169, align 8
  %memberidx2.i50.i = getelementptr inbounds %String, ptr %152, i64 0, i32 1
  %153 = load i64, ptr %memberidx2.i50.i, align 4
  %154 = icmp slt i64 %151, %153
  br i1 %154, label %if.entry.i52.i, label %ifend4.i

if.entry.i52.i:                                   ; preds = %if.entry.i173
  %155 = load ptr, ptr %152, align 8
  %156 = getelementptr inbounds i8, ptr %155, i64 %151
  %157 = load i8, ptr %156, align 1
  %phi.cmp1150 = icmp eq i8 %157, 61
  br i1 %phi.cmp1150, label %if.entry2.i, label %ifend4.i

ifend.i:                                          ; preds = %ifend63.i.i, %ifend.i263.i.i
  %158 = tail call ptr @malloc(i32 24)
  store i64 53, ptr %158, align 4
  %memberidx1.i.i46.i = getelementptr inbounds %Token, ptr %158, i64 0, i32 1
  store ptr %44, ptr %memberidx1.i.i46.i, align 8
  %memberidx.i47.i = getelementptr inbounds %IdentifierToken, ptr %158, i64 0, i32 2
  store ptr %43, ptr %memberidx.i47.i, align 8
  br label %common.ret

if.entry2.i:                                      ; preds = %if.entry.i52.i
  %trunc = trunc i64 %common.ret.op.i72.i.ph to i7
  switch i7 %trunc, label %ifend4.i [
    i7 8, label %end.i36.i
    i7 9, label %if.entry8.i
  ]

ifend4.i:                                         ; preds = %if.entry2.i, %if.entry.i39.i, %if.entry9.i43.i, %end.i36.i, %end.i.i.thread, %if.entry.i28.i, %if.entry9.i.i, %end.i.i, %if.entry.i173, %if.entry.i52.i
  %keyword.0.i = phi i64 [ %common.ret.op.i72.i.ph, %if.entry.i52.i ], [ %common.ret.op.i72.i.ph, %if.entry.i173 ], [ 19, %end.i.i ], [ 19, %if.entry9.i.i ], [ 19, %if.entry.i28.i ], [ 19, %end.i.i.thread ], [ 18, %end.i36.i ], [ 18, %if.entry9.i43.i ], [ 18, %if.entry.i39.i ], [ %common.ret.op.i72.i.ph, %if.entry2.i ]
  %159 = tail call ptr @malloc(i32 16)
  store i64 %keyword.0.i, ptr %159, align 4
  %memberidx1.i45.i = getelementptr inbounds %Token, ptr %159, i64 0, i32 1
  store ptr %44, ptr %memberidx1.i45.i, align 8
  br label %common.ret

end.i36.i:                                        ; preds = %if.entry2.i
  store i64 %151, ptr %memberidx.i167, align 4
  %160 = load ptr, ptr %152, align 8
  %161 = getelementptr inbounds i8, ptr %160, i64 %151
  %162 = load i8, ptr %161, align 1
  store i8 %162, ptr %0, align 1
  switch i8 %162, label %if.entry9.i43.i [
    i8 10, label %if.entry.i39.i
    i8 0, label %ifend4.i
  ]

if.entry.i39.i:                                   ; preds = %end.i36.i
  store i64 0, ptr %memberidx5.i62.i, align 4
  %163 = load i64, ptr %memberidx6.i63.i, align 4
  %164 = add nsw i64 %163, 1
  store i64 %164, ptr %memberidx6.i63.i, align 4
  br label %ifend4.i

if.entry9.i43.i:                                  ; preds = %end.i36.i
  %165 = load i64, ptr %memberidx5.i62.i, align 4
  %166 = add nsw i64 %165, 1
  store i64 %166, ptr %memberidx5.i62.i, align 4
  br label %ifend4.i

if.entry8.i:                                      ; preds = %if.entry2.i
  %.not1151 = icmp slt i64 %150, %153
  br i1 %.not1151, label %end.i.i, label %end.i.i.thread

end.i.i.thread:                                   ; preds = %if.entry8.i
  store i8 0, ptr %0, align 1
  br label %ifend4.i

end.i.i:                                          ; preds = %if.entry8.i
  store i64 %151, ptr %memberidx.i167, align 4
  %167 = load ptr, ptr %152, align 8
  %168 = getelementptr inbounds i8, ptr %167, i64 %151
  %169 = load i8, ptr %168, align 1
  store i8 %169, ptr %0, align 1
  switch i8 %169, label %if.entry9.i.i [
    i8 10, label %if.entry.i28.i
    i8 0, label %ifend4.i
  ]

if.entry.i28.i:                                   ; preds = %end.i.i
  store i64 0, ptr %memberidx5.i62.i, align 4
  %170 = load i64, ptr %memberidx6.i63.i, align 4
  %171 = add nsw i64 %170, 1
  store i64 %171, ptr %memberidx6.i63.i, align 4
  br label %ifend4.i

if.entry9.i.i:                                    ; preds = %end.i.i
  %172 = load i64, ptr %memberidx5.i62.i, align 4
  %173 = add nsw i64 %172, 1
  store i64 %173, ptr %memberidx5.i62.i, align 4
  br label %ifend4.i

ifend5:                                           ; preds = %ifend
  %174 = icmp eq i8 %2, 34
  br i1 %174, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend5
  %175 = tail call ptr @malloc(i32 24)
  %memberidx.i.i976 = getelementptr inbounds %Array_Array_Token__, ptr %175, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i976, align 4
  %memberidx1.i.i977 = getelementptr inbounds %Array_Array_Token__, ptr %175, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i977, align 4
  %176 = tail call ptr @malloc(i32 64)
  store ptr %176, ptr %175, align 8
  store i64 0, ptr %memberidx.i.i976, align 4
  %177 = tail call ptr @malloc(i32 24)
  %memberidx.i64.i = getelementptr inbounds %Array_uint_, ptr %177, i64 0, i32 1
  store i64 0, ptr %memberidx.i64.i, align 4
  %memberidx1.i65.i979 = getelementptr inbounds %Array_uint_, ptr %177, i64 0, i32 2
  store i64 8, ptr %memberidx1.i65.i979, align 4
  %178 = tail call ptr @malloc(i32 64)
  store ptr %178, ptr %177, align 8
  store i64 0, ptr %memberidx.i64.i, align 4
  %memberidx.i.i.i981 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %179 = load i64, ptr %memberidx.i.i.i981, align 4
  %memberidx1.i.i.i982 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %180 = load ptr, ptr %memberidx1.i.i.i982, align 8
  %memberidx2.i.i.i983 = getelementptr inbounds %String, ptr %180, i64 0, i32 1
  %181 = load i64, ptr %memberidx2.i.i.i983, align 4
  %.not1141 = icmp slt i64 %179, %181
  br i1 %.not1141, label %end.i.i987, label %end.i.i987.thread

end.i.i987.thread:                                ; preds = %if.entry6
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i995

end.i.i987:                                       ; preds = %if.entry6
  %182 = add nsw i64 %179, 1
  store i64 %182, ptr %memberidx.i.i.i981, align 4
  %183 = load ptr, ptr %180, align 8
  %184 = getelementptr inbounds i8, ptr %183, i64 %182
  %185 = load i8, ptr %184, align 1
  store i8 %185, ptr %0, align 1
  switch i8 %185, label %if.entry9.i.i994 [
    i8 10, label %if.entry.i.i990
    i8 0, label %Lexer_advance.exit.i995
  ]

if.entry.i.i990:                                  ; preds = %end.i.i987
  %memberidx5.i.i988 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i988, align 4
  %memberidx6.i.i989 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %186 = load i64, ptr %memberidx6.i.i989, align 4
  %187 = add nsw i64 %186, 1
  store i64 %187, ptr %memberidx6.i.i989, align 4
  br label %Lexer_advance.exit.i995

if.entry9.i.i994:                                 ; preds = %end.i.i987
  %memberidx12.i.i993 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %188 = load i64, ptr %memberidx12.i.i993, align 4
  %189 = add nsw i64 %188, 1
  store i64 %189, ptr %memberidx12.i.i993, align 4
  br label %Lexer_advance.exit.i995

Lexer_advance.exit.i995:                          ; preds = %end.i.i987.thread, %end.i.i987, %if.entry9.i.i994, %if.entry.i.i990
  %190 = tail call ptr @malloc(i32 1)
  %191 = tail call ptr @malloc(i32 24)
  store ptr %190, ptr %191, align 8
  %memberidx1.i.i67.i = getelementptr inbounds %String, ptr %191, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i67.i, align 4
  %memberidx.i69.i = getelementptr inbounds %String, ptr %191, i64 0, i32 2
  store i64 1, ptr %memberidx.i69.i, align 4
  %192 = load i64, ptr %memberidx.i.i.i981, align 4
  %193 = load ptr, ptr %memberidx1.i.i.i982, align 8
  %memberidx2.i72.i12071212 = getelementptr inbounds %String, ptr %193, i64 0, i32 1
  %194 = load i64, ptr %memberidx2.i72.i12071212, align 4
  %.not114212081213 = icmp slt i64 %192, %194
  br i1 %.not114212081213, label %while.body.i1012.lr.ph.lr.ph, label %while.end.i1003

while.body.i1012.lr.ph.lr.ph:                     ; preds = %Lexer_advance.exit.i995
  %memberidx5.i94.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i95.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.body.i1012.lr.ph

while.body.i1012.lr.ph:                           ; preds = %while.body.i1012.lr.ph.lr.ph, %Lexer_advance.exit123.i
  %195 = phi ptr [ %190, %while.body.i1012.lr.ph.lr.ph ], [ %307, %Lexer_advance.exit123.i ]
  %196 = phi i64 [ 1, %while.body.i1012.lr.ph.lr.ph ], [ %308, %Lexer_advance.exit123.i ]
  %197 = phi i64 [ 0, %while.body.i1012.lr.ph.lr.ph ], [ %304, %Lexer_advance.exit123.i ]
  %length.0.i996.ph1215 = phi i64 [ 2, %while.body.i1012.lr.ph.lr.ph ], [ %302, %Lexer_advance.exit123.i ]
  %escape_next.0.i.ph1214 = phi i1 [ false, %while.body.i1012.lr.ph.lr.ph ], [ %303, %Lexer_advance.exit123.i ]
  %198 = add nsw i64 %length.0.i996.ph1215, -2
  br label %while.body.i1012

while.end.i1003:                                  ; preds = %Lexer_advance.exit123.i, %Array_Array_Token_____sl__.exit.i, %while.body.i1012, %Lexer_advance.exit.i995
  %199 = phi ptr [ %190, %Lexer_advance.exit.i995 ], [ %195, %while.body.i1012 ], [ %195, %Array_Array_Token_____sl__.exit.i ], [ %307, %Lexer_advance.exit123.i ]
  %200 = phi i64 [ 0, %Lexer_advance.exit.i995 ], [ %197, %while.body.i1012 ], [ %197, %Array_Array_Token_____sl__.exit.i ], [ %304, %Lexer_advance.exit123.i ]
  %length.0.i996.ph.lcssa = phi i64 [ 2, %Lexer_advance.exit.i995 ], [ %length.0.i996.ph1215, %while.body.i1012 ], [ %length.0.i996.ph1215, %Array_Array_Token_____sl__.exit.i ], [ %302, %Lexer_advance.exit123.i ]
  %201 = tail call ptr @malloc(i32 32)
  %202 = load i64, ptr %memberidx.i.i.i981, align 4
  %203 = sub i64 1, %length.0.i996.ph.lcssa
  %204 = add i64 %203, %202
  %205 = add nsw i64 %202, 1
  %memberidx2.i74.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %206 = load i64, ptr %memberidx2.i74.i, align 4
  %207 = sub nuw i64 %206, %length.0.i996.ph.lcssa
  %memberidx3.i.i999 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %208 = load i64, ptr %memberidx3.i.i999, align 4
  store i64 %204, ptr %201, align 4
  %memberidx1.i.i75.i = getelementptr inbounds %FloRange, ptr %201, i64 0, i32 1
  store i64 %205, ptr %memberidx1.i.i75.i, align 4
  %memberidx2.i.i76.i = getelementptr inbounds %FloRange, ptr %201, i64 0, i32 2
  store i64 %207, ptr %memberidx2.i.i76.i, align 4
  %memberidx3.i.i.i1000 = getelementptr inbounds %FloRange, ptr %201, i64 0, i32 3
  store i64 %208, ptr %memberidx3.i.i.i1000, align 4
  %209 = trunc i64 %200 to i32
  %210 = tail call ptr @malloc(i32 %209)
  %211 = tail call ptr @malloc(i32 24)
  store ptr %210, ptr %211, align 8
  %memberidx1.i.i.i.i1001 = getelementptr inbounds %String, ptr %211, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i.i1001, align 4
  %memberidx.i.i78.i = getelementptr inbounds %String, ptr %211, i64 0, i32 2
  store i64 %200, ptr %memberidx.i.i78.i, align 4
  %212 = icmp sgt i64 %200, 0
  br i1 %212, label %while.body.i.i1005.lr.ph, label %Lexer_string_token.exit

while.body.i.i1005.lr.ph:                         ; preds = %while.end.i1003
  %213 = getelementptr i8, ptr %199, i64 1
  br label %while.body.i.i1005

while.body.i.i1005:                               ; preds = %while.body.i.i1005.lr.ph, %while.entry.i.i1004.backedge
  %214 = phi i64 [ 0, %while.body.i.i1005.lr.ph ], [ %231, %while.entry.i.i1004.backedge ]
  %i.0.i.i1203 = phi i64 [ 0, %while.body.i.i1005.lr.ph ], [ %i.0.i.i.be, %while.entry.i.i1004.backedge ]
  %215 = getelementptr inbounds i8, ptr %199, i64 %i.0.i.i1203
  %216 = load i8, ptr %215, align 1
  %217 = icmp eq i8 %216, 92
  br i1 %217, label %if.entry.i79.i, label %ifend.i.i1006

if.entry.i79.i:                                   ; preds = %while.body.i.i1005
  %218 = add nuw i64 %i.0.i.i1203, 3
  %219 = icmp slt i64 %218, %200
  br i1 %219, label %if.entry3.i.i, label %ifend5.i.i

ifend.i.i1006:                                    ; preds = %ifend27.i.i.i, %get_escape_char.exit.i.i.fold.split, %get_escape_char.exit.i.i.fold.split1155, %get_escape_char.exit.i.i.fold.split1156, %get_escape_char.exit.i.i.fold.split1157, %get_escape_char.exit.i.i.fold.split1158, %get_escape_char.exit.i.i.fold.split1159, %get_escape_char.exit.i.i.fold.split1160, %get_escape_char.exit.i.i.fold.split1161, %get_escape_char.exit.i.i.fold.split1162, %ifend5.i.i, %while.body.i.i1005
  %char.0.i.i = phi i8 [ %216, %while.body.i.i1005 ], [ 7, %ifend5.i.i ], [ %241, %ifend27.i.i.i ], [ 8, %get_escape_char.exit.i.i.fold.split ], [ 9, %get_escape_char.exit.i.i.fold.split1155 ], [ 12, %get_escape_char.exit.i.i.fold.split1156 ], [ 10, %get_escape_char.exit.i.i.fold.split1157 ], [ 13, %get_escape_char.exit.i.i.fold.split1158 ], [ 11, %get_escape_char.exit.i.i.fold.split1159 ], [ 0, %get_escape_char.exit.i.i.fold.split1160 ], [ %241, %get_escape_char.exit.i.i.fold.split1161 ], [ %241, %get_escape_char.exit.i.i.fold.split1162 ]
  %i.1.i.i = phi i64 [ %i.0.i.i1203, %while.body.i.i1005 ], [ %239, %ifend5.i.i ], [ %239, %ifend27.i.i.i ], [ %239, %get_escape_char.exit.i.i.fold.split ], [ %239, %get_escape_char.exit.i.i.fold.split1155 ], [ %239, %get_escape_char.exit.i.i.fold.split1156 ], [ %239, %get_escape_char.exit.i.i.fold.split1157 ], [ %239, %get_escape_char.exit.i.i.fold.split1158 ], [ %239, %get_escape_char.exit.i.i.fold.split1159 ], [ %239, %get_escape_char.exit.i.i.fold.split1160 ], [ %239, %get_escape_char.exit.i.i.fold.split1161 ], [ %239, %get_escape_char.exit.i.i.fold.split1162 ]
  %220 = add nuw i64 %214, 1
  %221 = load i64, ptr %memberidx.i.i78.i, align 4
  %222 = icmp slt i64 %221, %220
  %223 = load ptr, ptr %211, align 8
  br i1 %222, label %if.entry.i.i.i.i, label %String_append_byte.exit.i.i

if.entry.i.i.i.i:                                 ; preds = %ifend.i.i1006
  %224 = tail call ptr @realloc(ptr %223, i64 %220)
  store ptr %224, ptr %211, align 8
  store i64 %220, ptr %memberidx.i.i78.i, align 4
  %.pre1244 = load i64, ptr %memberidx1.i.i.i.i1001, align 4
  br label %String_append_byte.exit.i.i

String_append_byte.exit.i.i:                      ; preds = %ifend.i.i1006, %if.entry.i.i.i.i
  %225 = phi ptr [ %224, %if.entry.i.i.i.i ], [ %223, %ifend.i.i1006 ]
  %226 = phi i64 [ %.pre1244, %if.entry.i.i.i.i ], [ %214, %ifend.i.i1006 ]
  %227 = getelementptr inbounds i8, ptr %225, i64 %226
  store i8 %char.0.i.i, ptr %227, align 1
  %228 = load i64, ptr %memberidx1.i.i.i.i1001, align 4
  %229 = add nuw i64 %228, 1
  store i64 %229, ptr %memberidx1.i.i.i.i1001, align 4
  %230 = add nuw i64 %i.1.i.i, 1
  br label %while.entry.i.i1004.backedge

while.entry.i.i1004.backedge:                     ; preds = %String_append_byte.exit.i.i, %String_append_bytes_length.exit44.i.i, %String_append_bytes_length.exit.i.i
  %231 = phi i64 [ %251, %String_append_bytes_length.exit44.i.i ], [ %266, %String_append_bytes_length.exit.i.i ], [ %229, %String_append_byte.exit.i.i ]
  %i.0.i.i.be = phi i64 [ %252, %String_append_bytes_length.exit44.i.i ], [ %267, %String_append_bytes_length.exit.i.i ], [ %230, %String_append_byte.exit.i.i ]
  %232 = icmp slt i64 %i.0.i.i.be, %200
  br i1 %232, label %while.body.i.i1005, label %Lexer_string_token.exit

if.entry3.i.i:                                    ; preds = %if.entry.i79.i
  %233 = getelementptr i8, ptr %213, i64 %i.0.i.i1203
  %234 = tail call i64 @memcmp(ptr %233, ptr nonnull @57, i64 3)
  %235 = icmp eq i64 %234, 0
  %236 = tail call i64 @memcmp(ptr %233, ptr nonnull @58, i64 3)
  %237 = icmp eq i64 %236, 0
  %238 = or i1 %235, %237
  br i1 %238, label %if.entry6.i.i, label %ifend8.i.i

ifend5.i.i:                                       ; preds = %if.entry10.i.i, %ifend8.i.i, %if.entry.i79.i
  %239 = add nsw i64 %i.0.i.i1203, 1
  %240 = getelementptr inbounds i8, ptr %199, i64 %239
  %241 = load i8, ptr %240, align 1
  switch i8 %241, label %ifend27.i.i.i [
    i8 97, label %ifend.i.i1006
    i8 98, label %get_escape_char.exit.i.i.fold.split
    i8 116, label %get_escape_char.exit.i.i.fold.split1155
    i8 102, label %get_escape_char.exit.i.i.fold.split1156
    i8 110, label %get_escape_char.exit.i.i.fold.split1157
    i8 114, label %get_escape_char.exit.i.i.fold.split1158
    i8 118, label %get_escape_char.exit.i.i.fold.split1159
    i8 48, label %get_escape_char.exit.i.i.fold.split1160
    i8 39, label %get_escape_char.exit.i.i.fold.split1161
    i8 34, label %get_escape_char.exit.i.i.fold.split1162
  ]

ifend27.i.i.i:                                    ; preds = %ifend5.i.i
  br label %ifend.i.i1006

get_escape_char.exit.i.i.fold.split:              ; preds = %ifend5.i.i
  br label %ifend.i.i1006

get_escape_char.exit.i.i.fold.split1155:          ; preds = %ifend5.i.i
  br label %ifend.i.i1006

get_escape_char.exit.i.i.fold.split1156:          ; preds = %ifend5.i.i
  br label %ifend.i.i1006

get_escape_char.exit.i.i.fold.split1157:          ; preds = %ifend5.i.i
  br label %ifend.i.i1006

get_escape_char.exit.i.i.fold.split1158:          ; preds = %ifend5.i.i
  br label %ifend.i.i1006

get_escape_char.exit.i.i.fold.split1159:          ; preds = %ifend5.i.i
  br label %ifend.i.i1006

get_escape_char.exit.i.i.fold.split1160:          ; preds = %ifend5.i.i
  br label %ifend.i.i1006

get_escape_char.exit.i.i.fold.split1161:          ; preds = %ifend5.i.i
  br label %ifend.i.i1006

get_escape_char.exit.i.i.fold.split1162:          ; preds = %ifend5.i.i
  br label %ifend.i.i1006

if.entry6.i.i:                                    ; preds = %if.entry3.i.i
  %242 = add nuw i64 %214, 1
  %243 = load i64, ptr %memberidx.i.i78.i, align 4
  %244 = icmp slt i64 %243, %242
  %245 = load ptr, ptr %211, align 8
  br i1 %244, label %if.entry.i.i43.i.i, label %String_append_bytes_length.exit44.i.i

if.entry.i.i43.i.i:                               ; preds = %if.entry6.i.i
  %246 = tail call ptr @realloc(ptr %245, i64 %242)
  store ptr %246, ptr %211, align 8
  store i64 %242, ptr %memberidx.i.i78.i, align 4
  %.pre1249 = load i64, ptr %memberidx1.i.i.i.i1001, align 4
  br label %String_append_bytes_length.exit44.i.i

String_append_bytes_length.exit44.i.i:            ; preds = %if.entry6.i.i, %if.entry.i.i43.i.i
  %247 = phi i64 [ %.pre1249, %if.entry.i.i43.i.i ], [ %214, %if.entry6.i.i ]
  %248 = phi ptr [ %246, %if.entry.i.i43.i.i ], [ %245, %if.entry6.i.i ]
  %249 = getelementptr inbounds i8, ptr %248, i64 %247
  store i8 27, ptr %249, align 536870912
  %250 = load i64, ptr %memberidx1.i.i.i.i1001, align 4
  %251 = add nuw i64 %250, 1
  store i64 %251, ptr %memberidx1.i.i.i.i1001, align 4
  %252 = add nuw i64 %i.0.i.i1203, 4
  br label %while.entry.i.i1004.backedge

ifend8.i.i:                                       ; preds = %if.entry3.i.i
  %253 = add nuw i64 %i.0.i.i1203, 5
  %254 = icmp slt i64 %253, %200
  br i1 %254, label %if.entry10.i.i, label %ifend5.i.i

if.entry10.i.i:                                   ; preds = %ifend8.i.i
  %255 = tail call i64 @memcmp(ptr %233, ptr nonnull @59, i64 5)
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %if.entry13.i.i, label %ifend5.i.i

if.entry13.i.i:                                   ; preds = %if.entry10.i.i
  %257 = add nuw i64 %214, 1
  %258 = load i64, ptr %memberidx.i.i78.i, align 4
  %259 = icmp slt i64 %258, %257
  %260 = load ptr, ptr %211, align 8
  br i1 %259, label %if.entry.i.i40.i.i, label %String_append_bytes_length.exit.i.i

if.entry.i.i40.i.i:                               ; preds = %if.entry13.i.i
  %261 = tail call ptr @realloc(ptr %260, i64 %257)
  store ptr %261, ptr %211, align 8
  store i64 %257, ptr %memberidx.i.i78.i, align 4
  %.pre1247 = load i64, ptr %memberidx1.i.i.i.i1001, align 4
  br label %String_append_bytes_length.exit.i.i

String_append_bytes_length.exit.i.i:              ; preds = %if.entry13.i.i, %if.entry.i.i40.i.i
  %262 = phi i64 [ %.pre1247, %if.entry.i.i40.i.i ], [ %214, %if.entry13.i.i ]
  %263 = phi ptr [ %261, %if.entry.i.i40.i.i ], [ %260, %if.entry13.i.i ]
  %264 = getelementptr inbounds i8, ptr %263, i64 %262
  store i8 27, ptr %264, align 536870912
  %265 = load i64, ptr %memberidx1.i.i.i.i1001, align 4
  %266 = add nuw i64 %265, 1
  store i64 %266, ptr %memberidx1.i.i.i.i1001, align 4
  %267 = add nuw i64 %i.0.i.i1203, 6
  br label %while.entry.i.i1004.backedge

while.body.i1012:                                 ; preds = %while.body.i1012.lr.ph, %Array_Array_Token_____sl__.exit.i
  %escape_next.0.i1209 = phi i1 [ %escape_next.0.i.ph1214, %while.body.i1012.lr.ph ], [ false, %Array_Array_Token_____sl__.exit.i ]
  %268 = load i8, ptr %0, align 1
  %269 = icmp ne i8 %268, 34
  %270 = or i1 %escape_next.0.i1209, %269
  br i1 %270, label %ifend.i1013, label %while.end.i1003

ifend.i1013:                                      ; preds = %while.body.i1012
  %271 = icmp ne i8 %268, 36
  %272 = or i1 %escape_next.0.i1209, %271
  br i1 %272, label %ifend8.i, label %if.entry6.i1015

if.entry6.i1015:                                  ; preds = %ifend.i1013
  %273 = load i64, ptr %memberidx.i64.i, align 4
  %274 = add i64 %273, 1
  %275 = load i64, ptr %memberidx1.i65.i979, align 4
  %276 = icmp slt i64 %275, %274
  %.pre1226 = load ptr, ptr %177, align 8
  br i1 %276, label %while.body.i.i.i, label %Array_uint____sl__.exit.i

while.body.i.i.i:                                 ; preds = %if.entry6.i1015, %while.body.i.i.i
  %277 = phi ptr [ %281, %while.body.i.i.i ], [ %.pre1226, %if.entry6.i1015 ]
  %278 = phi i64 [ %282, %while.body.i.i.i ], [ %275, %if.entry6.i1015 ]
  %279 = shl nuw i64 %278, 1
  store i64 %279, ptr %memberidx1.i65.i979, align 4
  %280 = shl i64 %278, 4
  %281 = tail call ptr @realloc(ptr %277, i64 %280)
  store ptr %281, ptr %177, align 8
  %282 = load i64, ptr %memberidx1.i65.i979, align 4
  %283 = icmp slt i64 %282, %274
  br i1 %283, label %while.body.i.i.i, label %Array_uint____sl__.exit.i.loopexit

Array_uint____sl__.exit.i.loopexit:               ; preds = %while.body.i.i.i
  %.pre1227 = load i64, ptr %memberidx.i64.i, align 4
  %.pre1250 = add nsw i64 %.pre1227, 1
  br label %Array_uint____sl__.exit.i

Array_uint____sl__.exit.i:                        ; preds = %if.entry6.i1015, %Array_uint____sl__.exit.i.loopexit
  %.pre-phi = phi i64 [ %.pre1250, %Array_uint____sl__.exit.i.loopexit ], [ %274, %if.entry6.i1015 ]
  %284 = phi ptr [ %281, %Array_uint____sl__.exit.i.loopexit ], [ %.pre1226, %if.entry6.i1015 ]
  %285 = phi i64 [ %.pre1227, %Array_uint____sl__.exit.i.loopexit ], [ %273, %if.entry6.i1015 ]
  store i64 %.pre-phi, ptr %memberidx.i64.i, align 4
  %286 = getelementptr inbounds i64, ptr %284, i64 %285
  store i64 %198, ptr %286, align 4
  %287 = load i64, ptr %memberidx.i.i.i981, align 4
  %288 = load ptr, ptr %memberidx1.i.i.i982, align 8
  %memberidx2.i.i88.i = getelementptr inbounds %String, ptr %288, i64 0, i32 1
  %289 = load i64, ptr %memberidx2.i.i88.i, align 4
  %.not1143 = icmp slt i64 %287, %289
  br i1 %.not1143, label %end.i93.i, label %end.i93.i.thread

end.i93.i.thread:                                 ; preds = %Array_uint____sl__.exit.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit102.i

end.i93.i:                                        ; preds = %Array_uint____sl__.exit.i
  %290 = add nsw i64 %287, 1
  store i64 %290, ptr %memberidx.i.i.i981, align 4
  %291 = load ptr, ptr %288, align 8
  %292 = getelementptr inbounds i8, ptr %291, i64 %290
  %293 = load i8, ptr %292, align 1
  store i8 %293, ptr %0, align 1
  switch i8 %293, label %if.entry9.i101.i [
    i8 10, label %if.entry.i96.i
    i8 0, label %Lexer_advance.exit102.i
  ]

if.entry.i96.i:                                   ; preds = %end.i93.i
  store i64 0, ptr %memberidx5.i94.i, align 4
  %294 = load i64, ptr %memberidx6.i95.i, align 4
  %295 = add nsw i64 %294, 1
  store i64 %295, ptr %memberidx6.i95.i, align 4
  br label %Lexer_advance.exit102.i

if.entry9.i101.i:                                 ; preds = %end.i93.i
  %296 = load i64, ptr %memberidx5.i94.i, align 4
  %297 = add nsw i64 %296, 1
  store i64 %297, ptr %memberidx5.i94.i, align 4
  br label %Lexer_advance.exit102.i

Lexer_advance.exit102.i:                          ; preds = %end.i93.i.thread, %end.i93.i, %if.entry9.i101.i, %if.entry.i96.i
  %298 = tail call ptr @malloc(i32 24)
  %memberidx.i103.i = getelementptr inbounds %Array_Token_, ptr %298, i64 0, i32 1
  store i64 0, ptr %memberidx.i103.i, align 4
  %memberidx1.i104.i = getelementptr inbounds %Array_Token_, ptr %298, i64 0, i32 2
  store i64 8, ptr %memberidx1.i104.i, align 4
  %299 = tail call ptr @malloc(i32 64)
  store ptr %299, ptr %298, align 8
  store i64 0, ptr %memberidx.i103.i, align 4
  %300 = load i8, ptr %0, align 1
  %301 = icmp eq i8 %300, 40
  br i1 %301, label %if.entry12.i, label %else13.i

ifend8.i:                                         ; preds = %ifend.i1013
  %302 = add nuw nsw i64 %length.0.i996.ph1215, 1
  %303 = icmp eq i8 %268, 92
  %304 = add nuw i64 %197, 1
  %305 = icmp slt i64 %196, %304
  br i1 %305, label %if.entry.i.i.i, label %String_append_byte.exit.i

if.entry.i.i.i:                                   ; preds = %ifend8.i
  %306 = tail call ptr @realloc(ptr %195, i64 %304)
  store ptr %306, ptr %191, align 8
  store i64 %304, ptr %memberidx.i69.i, align 4
  br label %String_append_byte.exit.i

String_append_byte.exit.i:                        ; preds = %if.entry.i.i.i, %ifend8.i
  %307 = phi ptr [ %306, %if.entry.i.i.i ], [ %195, %ifend8.i ]
  %308 = phi i64 [ %304, %if.entry.i.i.i ], [ %196, %ifend8.i ]
  %309 = getelementptr inbounds i8, ptr %307, i64 %197
  store i8 %268, ptr %309, align 1
  store i64 %304, ptr %memberidx1.i.i67.i, align 4
  %310 = load i64, ptr %memberidx.i.i.i981, align 4
  %311 = load ptr, ptr %memberidx1.i.i.i982, align 8
  %memberidx2.i.i109.i = getelementptr inbounds %String, ptr %311, i64 0, i32 1
  %312 = load i64, ptr %memberidx2.i.i109.i, align 4
  %.not1148 = icmp slt i64 %310, %312
  br i1 %.not1148, label %end.i114.i, label %end.i114.i.thread

end.i114.i.thread:                                ; preds = %String_append_byte.exit.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit123.i

end.i114.i:                                       ; preds = %String_append_byte.exit.i
  %313 = add nsw i64 %310, 1
  store i64 %313, ptr %memberidx.i.i.i981, align 4
  %314 = load ptr, ptr %311, align 8
  %315 = getelementptr inbounds i8, ptr %314, i64 %313
  %316 = load i8, ptr %315, align 1
  store i8 %316, ptr %0, align 1
  switch i8 %316, label %if.entry9.i122.i [
    i8 10, label %if.entry.i117.i
    i8 0, label %Lexer_advance.exit123.i
  ]

if.entry.i117.i:                                  ; preds = %end.i114.i
  store i64 0, ptr %memberidx5.i94.i, align 4
  %317 = load i64, ptr %memberidx6.i95.i, align 4
  %318 = add nsw i64 %317, 1
  store i64 %318, ptr %memberidx6.i95.i, align 4
  br label %Lexer_advance.exit123.i

if.entry9.i122.i:                                 ; preds = %end.i114.i
  %319 = load i64, ptr %memberidx5.i94.i, align 4
  %320 = add nsw i64 %319, 1
  store i64 %320, ptr %memberidx5.i94.i, align 4
  br label %Lexer_advance.exit123.i

Lexer_advance.exit123.i:                          ; preds = %end.i114.i.thread, %end.i114.i, %if.entry9.i122.i, %if.entry.i117.i
  %321 = phi i64 [ %310, %end.i114.i.thread ], [ %313, %end.i114.i ], [ %313, %if.entry9.i122.i ], [ %313, %if.entry.i117.i ]
  %322 = load i64, ptr %memberidx2.i.i109.i, align 4
  %.not11421208 = icmp slt i64 %321, %322
  br i1 %.not11421208, label %while.body.i1012.lr.ph, label %while.end.i1003

if.entry12.i:                                     ; preds = %Lexer_advance.exit102.i
  %323 = load i64, ptr %memberidx.i.i.i981, align 4
  %324 = load ptr, ptr %memberidx1.i.i.i982, align 8
  %memberidx2.i.i126.i = getelementptr inbounds %String, ptr %324, i64 0, i32 1
  %325 = load i64, ptr %memberidx2.i.i126.i, align 4
  %.not1145 = icmp slt i64 %323, %325
  br i1 %.not1145, label %end.i131.i, label %end.i131.i.thread

end.i131.i.thread:                                ; preds = %if.entry12.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit140.i

end.i131.i:                                       ; preds = %if.entry12.i
  %326 = add nsw i64 %323, 1
  store i64 %326, ptr %memberidx.i.i.i981, align 4
  %327 = load ptr, ptr %324, align 8
  %328 = getelementptr inbounds i8, ptr %327, i64 %326
  %329 = load i8, ptr %328, align 1
  store i8 %329, ptr %0, align 1
  switch i8 %329, label %if.entry9.i139.i [
    i8 10, label %if.entry.i134.i
    i8 0, label %Lexer_advance.exit140.i
  ]

if.entry.i134.i:                                  ; preds = %end.i131.i
  store i64 0, ptr %memberidx5.i94.i, align 4
  %330 = load i64, ptr %memberidx6.i95.i, align 4
  %331 = add nsw i64 %330, 1
  store i64 %331, ptr %memberidx6.i95.i, align 4
  br label %Lexer_advance.exit140.i

if.entry9.i139.i:                                 ; preds = %end.i131.i
  %332 = load i64, ptr %memberidx5.i94.i, align 4
  %333 = add nsw i64 %332, 1
  store i64 %333, ptr %memberidx5.i94.i, align 4
  br label %Lexer_advance.exit140.i

Lexer_advance.exit140.i:                          ; preds = %end.i131.i.thread, %end.i131.i, %if.entry9.i139.i, %if.entry.i134.i
  %334 = phi i64 [ %323, %end.i131.i.thread ], [ %326, %end.i131.i ], [ %326, %if.entry9.i139.i ], [ %326, %if.entry.i134.i ]
  %335 = phi i8 [ 0, %end.i131.i.thread ], [ %329, %end.i131.i ], [ %329, %if.entry9.i139.i ], [ 10, %if.entry.i134.i ]
  %336 = icmp ne i8 %335, 41
  %337 = load i64, ptr %memberidx2.i.i126.i, align 4
  %.not11461205 = icmp slt i64 %334, %337
  %338 = and i1 %336, %.not11461205
  br i1 %338, label %while.body17.i, label %ifend14.i

else13.i:                                         ; preds = %Lexer_advance.exit102.i
  %339 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %340 = load i64, ptr %memberidx.i103.i, align 4
  %341 = add i64 %340, 1
  %342 = load i64, ptr %memberidx1.i104.i, align 4
  %343 = icmp slt i64 %342, %341
  %.pre1229 = load ptr, ptr %298, align 8
  br i1 %343, label %while.body.i.i144.i, label %Array_Token____sl__.exit.i

while.body.i.i144.i:                              ; preds = %else13.i, %while.body.i.i144.i
  %344 = phi ptr [ %348, %while.body.i.i144.i ], [ %.pre1229, %else13.i ]
  %345 = phi i64 [ %349, %while.body.i.i144.i ], [ %342, %else13.i ]
  %346 = shl nuw i64 %345, 1
  store i64 %346, ptr %memberidx1.i104.i, align 4
  %347 = shl i64 %345, 4
  %348 = tail call ptr @realloc(ptr %344, i64 %347)
  store ptr %348, ptr %298, align 8
  %349 = load i64, ptr %memberidx1.i104.i, align 4
  %350 = icmp slt i64 %349, %341
  br i1 %350, label %while.body.i.i144.i, label %Array_Token____sl__.exit.i.loopexit

Array_Token____sl__.exit.i.loopexit:              ; preds = %while.body.i.i144.i
  %.pre1230 = load i64, ptr %memberidx.i103.i, align 4
  %.pre1257 = add nsw i64 %.pre1230, 1
  br label %Array_Token____sl__.exit.i

Array_Token____sl__.exit.i:                       ; preds = %else13.i, %Array_Token____sl__.exit.i.loopexit
  %.pre-phi1258 = phi i64 [ %.pre1257, %Array_Token____sl__.exit.i.loopexit ], [ %341, %else13.i ]
  %351 = phi ptr [ %348, %Array_Token____sl__.exit.i.loopexit ], [ %.pre1229, %else13.i ]
  %352 = phi i64 [ %.pre1230, %Array_Token____sl__.exit.i.loopexit ], [ %340, %else13.i ]
  store i64 %.pre-phi1258, ptr %memberidx.i103.i, align 4
  %353 = getelementptr inbounds ptr, ptr %351, i64 %352
  store ptr %339, ptr %353, align 8
  %.pre1235 = load i64, ptr %memberidx.i.i.i981, align 4
  %.pre1236 = load ptr, ptr %memberidx1.i.i.i982, align 8
  %memberidx2.i.i147.i.phi.trans.insert = getelementptr inbounds %String, ptr %.pre1236, i64 0, i32 1
  %.pre1237 = load i64, ptr %memberidx2.i.i147.i.phi.trans.insert, align 4
  br label %ifend14.i

ifend14.i:                                        ; preds = %Lexer_advance.exit199.i, %Lexer_advance.exit140.i, %Array_Token____sl__.exit.i
  %354 = phi i64 [ %337, %Lexer_advance.exit140.i ], [ %.pre1237, %Array_Token____sl__.exit.i ], [ %436, %Lexer_advance.exit199.i ]
  %355 = phi ptr [ %324, %Lexer_advance.exit140.i ], [ %.pre1236, %Array_Token____sl__.exit.i ], [ %421, %Lexer_advance.exit199.i ]
  %356 = phi i64 [ %334, %Lexer_advance.exit140.i ], [ %.pre1235, %Array_Token____sl__.exit.i ], [ %431, %Lexer_advance.exit199.i ]
  %.not1144 = icmp slt i64 %356, %354
  br i1 %.not1144, label %end.i152.i, label %end.i152.i.thread

end.i152.i.thread:                                ; preds = %ifend14.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit161.i

end.i152.i:                                       ; preds = %ifend14.i
  %357 = add nsw i64 %356, 1
  store i64 %357, ptr %memberidx.i.i.i981, align 4
  %358 = load ptr, ptr %355, align 8
  %359 = getelementptr inbounds i8, ptr %358, i64 %357
  %360 = load i8, ptr %359, align 1
  store i8 %360, ptr %0, align 1
  switch i8 %360, label %if.entry9.i160.i [
    i8 10, label %if.entry.i155.i
    i8 0, label %Lexer_advance.exit161.i
  ]

if.entry.i155.i:                                  ; preds = %end.i152.i
  store i64 0, ptr %memberidx5.i94.i, align 4
  %361 = load i64, ptr %memberidx6.i95.i, align 4
  %362 = add nsw i64 %361, 1
  store i64 %362, ptr %memberidx6.i95.i, align 4
  br label %Lexer_advance.exit161.i

if.entry9.i160.i:                                 ; preds = %end.i152.i
  %363 = load i64, ptr %memberidx5.i94.i, align 4
  %364 = add nsw i64 %363, 1
  store i64 %364, ptr %memberidx5.i94.i, align 4
  br label %Lexer_advance.exit161.i

Lexer_advance.exit161.i:                          ; preds = %end.i152.i.thread, %end.i152.i, %if.entry9.i160.i, %if.entry.i155.i
  %365 = tail call ptr @malloc(i32 16)
  %366 = tail call ptr @malloc(i32 32)
  %367 = load i64, ptr %memberidx5.i94.i, align 4
  %368 = load i64, ptr %memberidx6.i95.i, align 4
  %memberidx2.i163.i = getelementptr inbounds %FloRange, ptr %366, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %366, i8 0, i64 16, i1 false)
  store i64 %367, ptr %memberidx2.i163.i, align 4
  %memberidx3.i164.i = getelementptr inbounds %FloRange, ptr %366, i64 0, i32 3
  store i64 %368, ptr %memberidx3.i164.i, align 4
  store i64 46, ptr %365, align 4
  %memberidx1.i165.i = getelementptr inbounds %Token, ptr %365, i64 0, i32 1
  store ptr %366, ptr %memberidx1.i165.i, align 8
  %369 = load i64, ptr %memberidx.i103.i, align 4
  %370 = add i64 %369, 1
  %371 = load i64, ptr %memberidx1.i104.i, align 4
  %372 = icmp slt i64 %371, %370
  %.pre1238 = load ptr, ptr %298, align 8
  br i1 %372, label %while.body.i.i169.i, label %Array_Token____sl__.exit170.i

while.body.i.i169.i:                              ; preds = %Lexer_advance.exit161.i, %while.body.i.i169.i
  %373 = phi ptr [ %377, %while.body.i.i169.i ], [ %.pre1238, %Lexer_advance.exit161.i ]
  %374 = phi i64 [ %378, %while.body.i.i169.i ], [ %371, %Lexer_advance.exit161.i ]
  %375 = shl nuw i64 %374, 1
  store i64 %375, ptr %memberidx1.i104.i, align 4
  %376 = shl i64 %374, 4
  %377 = tail call ptr @realloc(ptr %373, i64 %376)
  store ptr %377, ptr %298, align 8
  %378 = load i64, ptr %memberidx1.i104.i, align 4
  %379 = icmp slt i64 %378, %370
  br i1 %379, label %while.body.i.i169.i, label %Array_Token____sl__.exit170.i.loopexit

Array_Token____sl__.exit170.i.loopexit:           ; preds = %while.body.i.i169.i
  %.pre1239 = load i64, ptr %memberidx.i103.i, align 4
  %.pre1253 = add nsw i64 %.pre1239, 1
  br label %Array_Token____sl__.exit170.i

Array_Token____sl__.exit170.i:                    ; preds = %Lexer_advance.exit161.i, %Array_Token____sl__.exit170.i.loopexit
  %.pre-phi1254 = phi i64 [ %.pre1253, %Array_Token____sl__.exit170.i.loopexit ], [ %370, %Lexer_advance.exit161.i ]
  %380 = phi ptr [ %377, %Array_Token____sl__.exit170.i.loopexit ], [ %.pre1238, %Lexer_advance.exit161.i ]
  %381 = phi i64 [ %.pre1239, %Array_Token____sl__.exit170.i.loopexit ], [ %369, %Lexer_advance.exit161.i ]
  store i64 %.pre-phi1254, ptr %memberidx.i103.i, align 4
  %382 = getelementptr inbounds ptr, ptr %380, i64 %381
  store ptr %365, ptr %382, align 8
  %383 = load i64, ptr %memberidx.i.i976, align 4
  %384 = add i64 %383, 1
  %385 = load i64, ptr %memberidx1.i.i977, align 4
  %386 = icmp slt i64 %385, %384
  %.pre1241 = load ptr, ptr %175, align 8
  br i1 %386, label %while.body.i.i174.i, label %Array_Array_Token_____sl__.exit.i

while.body.i.i174.i:                              ; preds = %Array_Token____sl__.exit170.i, %while.body.i.i174.i
  %387 = phi ptr [ %391, %while.body.i.i174.i ], [ %.pre1241, %Array_Token____sl__.exit170.i ]
  %388 = phi i64 [ %392, %while.body.i.i174.i ], [ %385, %Array_Token____sl__.exit170.i ]
  %389 = shl nuw i64 %388, 1
  store i64 %389, ptr %memberidx1.i.i977, align 4
  %390 = shl i64 %388, 4
  %391 = tail call ptr @realloc(ptr %387, i64 %390)
  store ptr %391, ptr %175, align 8
  %392 = load i64, ptr %memberidx1.i.i977, align 4
  %393 = icmp slt i64 %392, %384
  br i1 %393, label %while.body.i.i174.i, label %Array_Array_Token_____sl__.exit.i.loopexit

Array_Array_Token_____sl__.exit.i.loopexit:       ; preds = %while.body.i.i174.i
  %.pre1242 = load i64, ptr %memberidx.i.i976, align 4
  %.pre1255 = add nsw i64 %.pre1242, 1
  br label %Array_Array_Token_____sl__.exit.i

Array_Array_Token_____sl__.exit.i:                ; preds = %Array_Token____sl__.exit170.i, %Array_Array_Token_____sl__.exit.i.loopexit
  %.pre-phi1256 = phi i64 [ %.pre1255, %Array_Array_Token_____sl__.exit.i.loopexit ], [ %384, %Array_Token____sl__.exit170.i ]
  %394 = phi ptr [ %391, %Array_Array_Token_____sl__.exit.i.loopexit ], [ %.pre1241, %Array_Token____sl__.exit170.i ]
  %395 = phi i64 [ %.pre1242, %Array_Array_Token_____sl__.exit.i.loopexit ], [ %383, %Array_Token____sl__.exit170.i ]
  store i64 %.pre-phi1256, ptr %memberidx.i.i976, align 4
  %396 = getelementptr inbounds ptr, ptr %394, i64 %395
  store ptr %298, ptr %396, align 8
  %397 = load i64, ptr %memberidx.i.i.i981, align 4
  %398 = load ptr, ptr %memberidx1.i.i.i982, align 8
  %memberidx2.i72.i = getelementptr inbounds %String, ptr %398, i64 0, i32 1
  %399 = load i64, ptr %memberidx2.i72.i, align 4
  %.not1142 = icmp slt i64 %397, %399
  br i1 %.not1142, label %while.body.i1012, label %while.end.i1003

while.body17.i:                                   ; preds = %Lexer_advance.exit140.i, %Lexer_advance.exit199.i
  %400 = phi i8 [ %432, %Lexer_advance.exit199.i ], [ %335, %Lexer_advance.exit140.i ]
  %active_open_pars.0.i1206 = phi i64 [ %active_open_pars.2.i, %Lexer_advance.exit199.i ], [ 0, %Lexer_advance.exit140.i ]
  %401 = icmp eq i8 %400, 40
  %402 = zext i1 %401 to i64
  %spec.select = add nsw i64 %active_open_pars.0.i1206, %402
  %403 = icmp eq i8 %400, 41
  %404 = sext i1 %403 to i64
  %active_open_pars.2.i = add nsw i64 %spec.select, %404
  %405 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %406 = load i64, ptr %memberidx.i103.i, align 4
  %407 = add i64 %406, 1
  %408 = load i64, ptr %memberidx1.i104.i, align 4
  %409 = icmp slt i64 %408, %407
  %.pre1232 = load ptr, ptr %298, align 8
  br i1 %409, label %while.body.i.i181.i, label %Array_Token____sl__.exit182.i

while.body.i.i181.i:                              ; preds = %while.body17.i, %while.body.i.i181.i
  %410 = phi ptr [ %414, %while.body.i.i181.i ], [ %.pre1232, %while.body17.i ]
  %411 = phi i64 [ %415, %while.body.i.i181.i ], [ %408, %while.body17.i ]
  %412 = shl nuw i64 %411, 1
  store i64 %412, ptr %memberidx1.i104.i, align 4
  %413 = shl i64 %411, 4
  %414 = tail call ptr @realloc(ptr %410, i64 %413)
  store ptr %414, ptr %298, align 8
  %415 = load i64, ptr %memberidx1.i104.i, align 4
  %416 = icmp slt i64 %415, %407
  br i1 %416, label %while.body.i.i181.i, label %Array_Token____sl__.exit182.i.loopexit

Array_Token____sl__.exit182.i.loopexit:           ; preds = %while.body.i.i181.i
  %.pre1233 = load i64, ptr %memberidx.i103.i, align 4
  %.pre1251 = add nsw i64 %.pre1233, 1
  br label %Array_Token____sl__.exit182.i

Array_Token____sl__.exit182.i:                    ; preds = %while.body17.i, %Array_Token____sl__.exit182.i.loopexit
  %.pre-phi1252 = phi i64 [ %.pre1251, %Array_Token____sl__.exit182.i.loopexit ], [ %407, %while.body17.i ]
  %417 = phi ptr [ %414, %Array_Token____sl__.exit182.i.loopexit ], [ %.pre1232, %while.body17.i ]
  %418 = phi i64 [ %.pre1233, %Array_Token____sl__.exit182.i.loopexit ], [ %406, %while.body17.i ]
  store i64 %.pre-phi1252, ptr %memberidx.i103.i, align 4
  %419 = getelementptr inbounds ptr, ptr %417, i64 %418
  store ptr %405, ptr %419, align 8
  %420 = load i64, ptr %memberidx.i.i.i981, align 4
  %421 = load ptr, ptr %memberidx1.i.i.i982, align 8
  %memberidx2.i.i185.i = getelementptr inbounds %String, ptr %421, i64 0, i32 1
  %422 = load i64, ptr %memberidx2.i.i185.i, align 4
  %.not1147 = icmp slt i64 %420, %422
  br i1 %.not1147, label %end.i190.i, label %end.i190.i.thread

end.i190.i.thread:                                ; preds = %Array_Token____sl__.exit182.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit199.i

end.i190.i:                                       ; preds = %Array_Token____sl__.exit182.i
  %423 = add nsw i64 %420, 1
  store i64 %423, ptr %memberidx.i.i.i981, align 4
  %424 = load ptr, ptr %421, align 8
  %425 = getelementptr inbounds i8, ptr %424, i64 %423
  %426 = load i8, ptr %425, align 1
  store i8 %426, ptr %0, align 1
  switch i8 %426, label %if.entry9.i198.i [
    i8 10, label %if.entry.i193.i
    i8 0, label %Lexer_advance.exit199.i
  ]

if.entry.i193.i:                                  ; preds = %end.i190.i
  store i64 0, ptr %memberidx5.i94.i, align 4
  %427 = load i64, ptr %memberidx6.i95.i, align 4
  %428 = add nsw i64 %427, 1
  store i64 %428, ptr %memberidx6.i95.i, align 4
  br label %Lexer_advance.exit199.i

if.entry9.i198.i:                                 ; preds = %end.i190.i
  %429 = load i64, ptr %memberidx5.i94.i, align 4
  %430 = add nsw i64 %429, 1
  store i64 %430, ptr %memberidx5.i94.i, align 4
  br label %Lexer_advance.exit199.i

Lexer_advance.exit199.i:                          ; preds = %end.i190.i.thread, %end.i190.i, %if.entry9.i198.i, %if.entry.i193.i
  %431 = phi i64 [ %420, %end.i190.i.thread ], [ %423, %end.i190.i ], [ %423, %if.entry9.i198.i ], [ %423, %if.entry.i193.i ]
  %432 = phi i8 [ 0, %end.i190.i.thread ], [ %426, %end.i190.i ], [ %426, %if.entry9.i198.i ], [ 10, %if.entry.i193.i ]
  %433 = icmp ne i8 %432, 41
  %434 = icmp ne i64 %active_open_pars.2.i, 0
  %435 = or i1 %434, %433
  %436 = load i64, ptr %memberidx2.i.i185.i, align 4
  %.not1146 = icmp slt i64 %431, %436
  %437 = and i1 %435, %.not1146
  br i1 %437, label %while.body17.i, label %ifend14.i

Lexer_string_token.exit:                          ; preds = %while.entry.i.i1004.backedge, %while.end.i1003
  %438 = tail call ptr @malloc(i32 40)
  store i64 34, ptr %438, align 4
  %memberidx1.i.i80.i1009 = getelementptr inbounds %Token, ptr %438, i64 0, i32 1
  store ptr %201, ptr %memberidx1.i.i80.i1009, align 8
  %memberidx.i81.i = getelementptr inbounds %StrToken, ptr %438, i64 0, i32 2
  store ptr %211, ptr %memberidx.i81.i, align 8
  %memberidx1.i82.i1010 = getelementptr inbounds %StrToken, ptr %438, i64 0, i32 3
  store ptr %177, ptr %memberidx1.i82.i1010, align 8
  %memberidx2.i83.i1011 = getelementptr inbounds %StrToken, ptr %438, i64 0, i32 4
  store ptr %175, ptr %memberidx2.i83.i1011, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend5
  %439 = add i8 %2, -48
  %440 = icmp ult i8 %439, 10
  br i1 %440, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend8
  %441 = icmp eq i8 %2, 48
  %memberidx.i.i179 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %442 = load i64, ptr %memberidx.i.i179, align 4
  %443 = add nsw i64 %442, 1
  %memberidx1.i.i180 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %444 = load ptr, ptr %memberidx1.i.i180, align 8
  %memberidx2.i.i181 = getelementptr inbounds %String, ptr %444, i64 0, i32 1
  %445 = load i64, ptr %memberidx2.i.i181, align 4
  %446 = icmp slt i64 %443, %445
  br i1 %446, label %Lexer_peek.exit.i184, label %while.entry.i191.preheader

Lexer_peek.exit.i184:                             ; preds = %if.entry9
  %447 = load ptr, ptr %444, align 8
  %448 = getelementptr inbounds i8, ptr %447, i64 %443
  %449 = load i8, ptr %448, align 1
  %phi.cmp1136 = icmp eq i8 %449, 98
  %450 = and i1 %441, %phi.cmp1136
  br i1 %450, label %if.entry.i186, label %Lexer_peek.exit46.i

if.entry.i186:                                    ; preds = %Lexer_peek.exit.i184
  %451 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 2)
  br label %common.ret

Lexer_peek.exit46.i:                              ; preds = %Lexer_peek.exit.i184
  %phi.cmp1137 = icmp eq i8 %449, 111
  %452 = and i1 %441, %phi.cmp1137
  br i1 %452, label %if.entry2.i188, label %Lexer_peek.exit54.i

if.entry2.i188:                                   ; preds = %Lexer_peek.exit46.i
  %453 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 8)
  br label %common.ret

Lexer_peek.exit54.i:                              ; preds = %Lexer_peek.exit46.i
  %phi.cmp1138 = icmp eq i8 %449, 120
  %454 = and i1 %441, %phi.cmp1138
  br i1 %454, label %if.entry6.i, label %while.entry.i191.preheader

while.entry.i191.preheader:                       ; preds = %if.entry9, %Lexer_peek.exit54.i
  %memberidx5.i.i202 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i.i203 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i191

if.entry6.i:                                      ; preds = %Lexer_peek.exit54.i
  %455 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 16)
  br label %common.ret

while.entry.i191:                                 ; preds = %while.entry.i191.preheader, %Lexer_advance.exit.i208
  %456 = phi i8 [ %500, %Lexer_advance.exit.i208 ], [ %2, %while.entry.i191.preheader ]
  %457 = phi i64 [ %.pre1225, %Lexer_advance.exit.i208 ], [ %445, %while.entry.i191.preheader ]
  %458 = phi i64 [ %459, %Lexer_advance.exit.i208 ], [ %442, %while.entry.i191.preheader ]
  %length.0.i190 = phi i64 [ %497, %Lexer_advance.exit.i208 ], [ 1, %while.entry.i191.preheader ]
  %is_float.0.i = phi i1 [ %spec.select1163, %Lexer_advance.exit.i208 ], [ false, %while.entry.i191.preheader ]
  %459 = add nsw i64 %458, 1
  %460 = icmp slt i64 %459, %457
  br i1 %460, label %if.entry.i62.i, label %Lexer_peek.exit63.i

if.entry.i62.i:                                   ; preds = %while.entry.i191
  %461 = load ptr, ptr %444, align 8
  %462 = getelementptr inbounds i8, ptr %461, i64 %459
  %463 = load i8, ptr %462, align 1
  br label %Lexer_peek.exit63.i

Lexer_peek.exit63.i:                              ; preds = %if.entry.i62.i, %while.entry.i191
  %common.ret.op.i61.i = phi i8 [ %463, %if.entry.i62.i ], [ 0, %while.entry.i191 ]
  %464 = add i8 %common.ret.op.i61.i, -48
  %465 = icmp ult i8 %464, 10
  %466 = icmp eq i8 %common.ret.op.i61.i, 46
  %467 = or i1 %466, %465
  %.not1139 = icmp slt i64 %458, %457
  %468 = and i1 %.not1139, %467
  br i1 %468, label %while.body.i196, label %while.end.i195

while.end.i195:                                   ; preds = %Lexer_peek.exit73.i, %Lexer_peek.exit63.i
  %469 = tail call ptr @malloc(i32 32)
  %470 = load i64, ptr %memberidx.i.i179, align 4
  %471 = sub nsw i64 %470, %length.0.i190
  %472 = add nsw i64 %471, 1
  %473 = add nsw i64 %470, 1
  %474 = load i64, ptr %memberidx5.i.i202, align 4
  %475 = sub nuw i64 %474, %length.0.i190
  %476 = load i64, ptr %memberidx6.i.i203, align 4
  store i64 %472, ptr %469, align 4
  %memberidx1.i.i81.i = getelementptr inbounds %FloRange, ptr %469, i64 0, i32 1
  store i64 %473, ptr %memberidx1.i.i81.i, align 4
  %memberidx2.i.i82.i = getelementptr inbounds %FloRange, ptr %469, i64 0, i32 2
  store i64 %475, ptr %memberidx2.i.i82.i, align 4
  %memberidx3.i.i.i194 = getelementptr inbounds %FloRange, ptr %469, i64 0, i32 3
  store i64 %476, ptr %memberidx3.i.i.i194, align 4
  %477 = load ptr, ptr %memberidx1.i.i180, align 8
  %478 = trunc i64 %length.0.i190 to i32
  %479 = tail call ptr @malloc(i32 %478)
  %480 = load ptr, ptr %477, align 8
  %481 = getelementptr inbounds i8, ptr %480, i64 %472
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(1) %479, ptr noundef nonnull align 536870912 dereferenceable(1) %481, i64 %length.0.i190, i1 false)
  %482 = tail call ptr @malloc(i32 24)
  store ptr %479, ptr %482, align 8
  %memberidx1.i.i74.i = getelementptr inbounds %String, ptr %482, i64 0, i32 1
  store i64 %length.0.i190, ptr %memberidx1.i.i74.i, align 4
  %memberidx2.i.i75.i = getelementptr inbounds %String, ptr %482, i64 0, i32 2
  store i64 %length.0.i190, ptr %memberidx2.i.i75.i, align 4
  %483 = tail call ptr @malloc(i32 24)
  %484 = add i32 %478, 1
  %485 = tail call ptr @malloc(i32 %484)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(1) %485, ptr noundef nonnull align 8 dereferenceable(1) %479, i64 %length.0.i190, i1 false)
  %486 = getelementptr inbounds i8, ptr %485, i64 %length.0.i190
  store i8 0, ptr %486, align 1
  br i1 %is_float.0.i, label %true_block.i, label %false_block.i213

while.body.i196:                                  ; preds = %Lexer_peek.exit63.i
  %487 = add nsw i64 %458, 2
  %488 = icmp slt i64 %487, %457
  br i1 %488, label %if.entry.i72.i, label %Lexer_peek.exit73.i

if.entry.i72.i:                                   ; preds = %while.body.i196
  %489 = load ptr, ptr %444, align 8
  %490 = getelementptr inbounds i8, ptr %489, i64 %487
  %491 = load i8, ptr %490, align 1
  br label %Lexer_peek.exit73.i

Lexer_peek.exit73.i:                              ; preds = %if.entry.i72.i, %while.body.i196
  %common.ret.op.i71.i = phi i8 [ %491, %if.entry.i72.i ], [ 0, %while.body.i196 ]
  %492 = add i8 %common.ret.op.i71.i, -58
  %493 = icmp ult i8 %492, -10
  %494 = or i1 %is_float.0.i, %493
  %495 = and i1 %466, %494
  br i1 %495, label %while.end.i195, label %end.i.i201

end.i.i201:                                       ; preds = %Lexer_peek.exit73.i
  %496 = icmp eq i8 %456, 46
  %spec.select1163 = select i1 %496, i1 true, i1 %is_float.0.i
  %497 = add nuw nsw i64 %length.0.i190, 1
  store i64 %459, ptr %memberidx.i.i179, align 4
  %498 = load ptr, ptr %444, align 8
  %499 = getelementptr inbounds i8, ptr %498, i64 %459
  %500 = load i8, ptr %499, align 1
  store i8 %500, ptr %0, align 1
  switch i8 %500, label %Lexer_advance.exit.i208.sink.split [
    i8 10, label %if.entry.i67.i
    i8 0, label %Lexer_advance.exit.i208
  ]

if.entry.i67.i:                                   ; preds = %end.i.i201
  store i64 0, ptr %memberidx5.i.i202, align 4
  br label %Lexer_advance.exit.i208.sink.split

Lexer_advance.exit.i208.sink.split:               ; preds = %end.i.i201, %if.entry.i67.i
  %memberidx5.i.i202.sink1288 = phi ptr [ %memberidx6.i.i203, %if.entry.i67.i ], [ %memberidx5.i.i202, %end.i.i201 ]
  %501 = load i64, ptr %memberidx5.i.i202.sink1288, align 4
  %502 = add nsw i64 %501, 1
  store i64 %502, ptr %memberidx5.i.i202.sink1288, align 4
  br label %Lexer_advance.exit.i208

Lexer_advance.exit.i208:                          ; preds = %Lexer_advance.exit.i208.sink.split, %end.i.i201
  %.pre1225 = load i64, ptr %memberidx2.i.i181, align 4
  br label %while.entry.i191

true_block.i:                                     ; preds = %while.end.i195
  %503 = tail call double @atof(ptr %485)
  tail call void @free(ptr %485)
  store i64 32, ptr %483, align 4
  %memberidx1.i.i55.i209 = getelementptr inbounds %Token, ptr %483, i64 0, i32 1
  store ptr %469, ptr %memberidx1.i.i55.i209, align 8
  %memberidx.i56.i = getelementptr inbounds %FloatToken, ptr %483, i64 0, i32 2
  store double %503, ptr %memberidx.i56.i, align 8
  br label %end.i215

false_block.i213:                                 ; preds = %while.end.i195
  %504 = tail call i64 @atol(ptr nocapture %485)
  tail call void @free(ptr %485)
  store i64 31, ptr %483, align 4
  %memberidx1.i.i.i211 = getelementptr inbounds %Token, ptr %483, i64 0, i32 1
  store ptr %469, ptr %memberidx1.i.i.i211, align 8
  %memberidx.i47.i212 = getelementptr inbounds %IntToken, ptr %483, i64 0, i32 2
  store i64 %504, ptr %memberidx.i47.i212, align 4
  br label %end.i215

end.i215:                                         ; preds = %false_block.i213, %true_block.i
  tail call void @free(ptr %479)
  tail call void @free(ptr nonnull %482)
  br label %common.ret

ifend11:                                          ; preds = %ifend8
  switch i8 %2, label %ifend89 [
    i8 58, label %if.entry12
    i8 59, label %if.entry15
    i8 44, label %if.entry18
    i8 43, label %if.entry21
    i8 45, label %if.entry24
    i8 42, label %if.entry27
    i8 37, label %if.entry30
    i8 94, label %if.entry33
    i8 47, label %if.entry36
    i8 40, label %if.entry42
    i8 41, label %if.entry45
    i8 123, label %if.entry48
    i8 125, label %if.entry51
    i8 91, label %if.entry54
    i8 93, label %if.entry57
    i8 13, label %if.entry60
    i8 10, label %if.entry60
    i8 39, label %if.entry63
    i8 63, label %if.entry66
    i8 38, label %if.entry69
    i8 61, label %if.entry72
    i8 33, label %if.entry75
    i8 62, label %if.entry78
    i8 60, label %if.entry81
    i8 46, label %if.entry84
    i8 0, label %if.entry87
  ]

if.entry12:                                       ; preds = %ifend11
  %505 = tail call ptr @malloc(i32 16)
  %506 = tail call ptr @malloc(i32 32)
  %memberidx.i216 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %507 = load i64, ptr %memberidx.i216, align 4
  %508 = add nsw i64 %507, 1
  %memberidx2.i217 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %509 = load i64, ptr %memberidx2.i217, align 4
  %510 = add i64 %509, -1
  %memberidx3.i218 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %511 = load i64, ptr %memberidx3.i218, align 4
  store i64 %507, ptr %506, align 4
  %memberidx1.i.i219 = getelementptr inbounds %FloRange, ptr %506, i64 0, i32 1
  store i64 %508, ptr %memberidx1.i.i219, align 4
  %memberidx2.i.i220 = getelementptr inbounds %FloRange, ptr %506, i64 0, i32 2
  store i64 %510, ptr %memberidx2.i.i220, align 4
  %memberidx3.i.i221 = getelementptr inbounds %FloRange, ptr %506, i64 0, i32 3
  store i64 %511, ptr %memberidx3.i.i221, align 4
  store i64 1, ptr %505, align 4
  %memberidx1.i222 = getelementptr inbounds %Token, ptr %505, i64 0, i32 1
  store ptr %506, ptr %memberidx1.i222, align 8
  br label %common.ret

if.entry15:                                       ; preds = %ifend11
  %512 = tail call ptr @malloc(i32 16)
  %513 = tail call ptr @malloc(i32 32)
  %memberidx.i223 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %514 = load i64, ptr %memberidx.i223, align 4
  %515 = add nsw i64 %514, 1
  %memberidx2.i224 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %516 = load i64, ptr %memberidx2.i224, align 4
  %517 = add i64 %516, -1
  %memberidx3.i225 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %518 = load i64, ptr %memberidx3.i225, align 4
  store i64 %514, ptr %513, align 4
  %memberidx1.i.i226 = getelementptr inbounds %FloRange, ptr %513, i64 0, i32 1
  store i64 %515, ptr %memberidx1.i.i226, align 4
  %memberidx2.i.i227 = getelementptr inbounds %FloRange, ptr %513, i64 0, i32 2
  store i64 %517, ptr %memberidx2.i.i227, align 4
  %memberidx3.i.i228 = getelementptr inbounds %FloRange, ptr %513, i64 0, i32 3
  store i64 %518, ptr %memberidx3.i.i228, align 4
  store i64 2, ptr %512, align 4
  %memberidx1.i229 = getelementptr inbounds %Token, ptr %512, i64 0, i32 1
  store ptr %513, ptr %memberidx1.i229, align 8
  br label %common.ret

if.entry18:                                       ; preds = %ifend11
  %519 = tail call ptr @malloc(i32 16)
  %520 = tail call ptr @malloc(i32 32)
  %memberidx.i230 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %521 = load i64, ptr %memberidx.i230, align 4
  %522 = add nsw i64 %521, 1
  %memberidx2.i231 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %523 = load i64, ptr %memberidx2.i231, align 4
  %524 = add i64 %523, -1
  %memberidx3.i232 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %525 = load i64, ptr %memberidx3.i232, align 4
  store i64 %521, ptr %520, align 4
  %memberidx1.i.i233 = getelementptr inbounds %FloRange, ptr %520, i64 0, i32 1
  store i64 %522, ptr %memberidx1.i.i233, align 4
  %memberidx2.i.i234 = getelementptr inbounds %FloRange, ptr %520, i64 0, i32 2
  store i64 %524, ptr %memberidx2.i.i234, align 4
  %memberidx3.i.i235 = getelementptr inbounds %FloRange, ptr %520, i64 0, i32 3
  store i64 %525, ptr %memberidx3.i.i235, align 4
  store i64 3, ptr %519, align 4
  %memberidx1.i236 = getelementptr inbounds %Token, ptr %519, i64 0, i32 1
  store ptr %520, ptr %memberidx1.i236, align 8
  br label %common.ret

if.entry21:                                       ; preds = %ifend11
  %memberidx.i.i237 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %526 = load i64, ptr %memberidx.i.i237, align 4
  %527 = add nsw i64 %526, 1
  %memberidx1.i.i238 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %528 = load ptr, ptr %memberidx1.i.i238, align 8
  %memberidx2.i.i239 = getelementptr inbounds %String, ptr %528, i64 0, i32 1
  %529 = load i64, ptr %memberidx2.i.i239, align 4
  %530 = icmp slt i64 %527, %529
  br i1 %530, label %if.entry.i.i240, label %ifend3.i

if.entry.i.i240:                                  ; preds = %if.entry21
  %531 = load ptr, ptr %528, align 8
  %532 = getelementptr inbounds i8, ptr %531, i64 %527
  %533 = load i8, ptr %532, align 1
  switch i8 %533, label %ifend3.i [
    i8 43, label %end.i.i248
    i8 61, label %end.i39.i
  ]

end.i.i248:                                       ; preds = %if.entry.i.i240
  store i64 %527, ptr %memberidx.i.i237, align 4
  %534 = load ptr, ptr %528, align 8
  %535 = getelementptr inbounds i8, ptr %534, i64 %527
  %536 = load i8, ptr %535, align 1
  store i8 %536, ptr %0, align 1
  switch i8 %536, label %if.entry9.i.i254 [
    i8 10, label %if.entry.i17.i
    i8 0, label %Lexer_advance.exit.i255
  ]

if.entry.i17.i:                                   ; preds = %end.i.i248
  %memberidx5.i.i249 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i249, align 4
  %memberidx6.i.i250 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i255.sink.split

if.entry9.i.i254:                                 ; preds = %end.i.i248
  %memberidx12.i.i253 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i255.sink.split

Lexer_advance.exit.i255.sink.split:               ; preds = %if.entry.i17.i, %if.entry9.i.i254
  %memberidx12.i.i253.sink1290 = phi ptr [ %memberidx12.i.i253, %if.entry9.i.i254 ], [ %memberidx6.i.i250, %if.entry.i17.i ]
  %537 = load i64, ptr %memberidx12.i.i253.sink1290, align 4
  %538 = add nsw i64 %537, 1
  store i64 %538, ptr %memberidx12.i.i253.sink1290, align 4
  br label %Lexer_advance.exit.i255

Lexer_advance.exit.i255:                          ; preds = %Lexer_advance.exit.i255.sink.split, %end.i.i248
  %539 = tail call ptr @malloc(i32 16)
  %540 = tail call ptr @malloc(i32 32)
  %541 = load i64, ptr %memberidx.i.i237, align 4
  %542 = add nsw i64 %541, -1
  %543 = add nsw i64 %541, 1
  %memberidx2.i26.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %544 = load i64, ptr %memberidx2.i26.i, align 4
  %545 = add i64 %544, -2
  %memberidx3.i27.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %546 = load i64, ptr %memberidx3.i27.i, align 4
  store i64 %542, ptr %540, align 4
  %memberidx1.i.i28.i = getelementptr inbounds %FloRange, ptr %540, i64 0, i32 1
  store i64 %543, ptr %memberidx1.i.i28.i, align 4
  %memberidx2.i.i29.i = getelementptr inbounds %FloRange, ptr %540, i64 0, i32 2
  store i64 %545, ptr %memberidx2.i.i29.i, align 4
  %memberidx3.i.i30.i = getelementptr inbounds %FloRange, ptr %540, i64 0, i32 3
  store i64 %546, ptr %memberidx3.i.i30.i, align 4
  store i64 23, ptr %539, align 4
  %memberidx1.i31.i = getelementptr inbounds %Token, ptr %539, i64 0, i32 1
  store ptr %540, ptr %memberidx1.i31.i, align 8
  br label %common.ret

end.i39.i:                                        ; preds = %if.entry.i.i240
  store i64 %527, ptr %memberidx.i.i237, align 4
  %547 = load ptr, ptr %528, align 8
  %548 = getelementptr inbounds i8, ptr %547, i64 %527
  %549 = load i8, ptr %548, align 1
  store i8 %549, ptr %0, align 1
  switch i8 %549, label %if.entry9.i46.i [
    i8 10, label %if.entry.i42.i
    i8 0, label %Lexer_advance.exit47.i
  ]

if.entry.i42.i:                                   ; preds = %end.i39.i
  %memberidx5.i40.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i40.i, align 4
  %memberidx6.i41.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit47.i.sink.split

if.entry9.i46.i:                                  ; preds = %end.i39.i
  %memberidx12.i45.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit47.i.sink.split

Lexer_advance.exit47.i.sink.split:                ; preds = %if.entry.i42.i, %if.entry9.i46.i
  %memberidx12.i45.i.sink1292 = phi ptr [ %memberidx12.i45.i, %if.entry9.i46.i ], [ %memberidx6.i41.i, %if.entry.i42.i ]
  %550 = load i64, ptr %memberidx12.i45.i.sink1292, align 4
  %551 = add nsw i64 %550, 1
  store i64 %551, ptr %memberidx12.i45.i.sink1292, align 4
  br label %Lexer_advance.exit47.i

Lexer_advance.exit47.i:                           ; preds = %Lexer_advance.exit47.i.sink.split, %end.i39.i
  %552 = tail call ptr @malloc(i32 16)
  %553 = tail call ptr @malloc(i32 32)
  %554 = load i64, ptr %memberidx.i.i237, align 4
  %555 = add nsw i64 %554, -1
  %556 = add nsw i64 %554, 1
  %memberidx2.i20.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %557 = load i64, ptr %memberidx2.i20.i, align 4
  %558 = add i64 %557, -2
  %memberidx3.i21.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %559 = load i64, ptr %memberidx3.i21.i, align 4
  store i64 %555, ptr %553, align 4
  %memberidx1.i.i22.i = getelementptr inbounds %FloRange, ptr %553, i64 0, i32 1
  store i64 %556, ptr %memberidx1.i.i22.i, align 4
  %memberidx2.i.i23.i = getelementptr inbounds %FloRange, ptr %553, i64 0, i32 2
  store i64 %558, ptr %memberidx2.i.i23.i, align 4
  %memberidx3.i.i24.i = getelementptr inbounds %FloRange, ptr %553, i64 0, i32 3
  store i64 %559, ptr %memberidx3.i.i24.i, align 4
  store i64 14, ptr %552, align 4
  %memberidx1.i18.i = getelementptr inbounds %Token, ptr %552, i64 0, i32 1
  store ptr %553, ptr %memberidx1.i18.i, align 8
  br label %common.ret

ifend3.i:                                         ; preds = %if.entry.i.i240, %if.entry21
  %560 = tail call ptr @malloc(i32 16)
  %561 = tail call ptr @malloc(i32 32)
  %562 = load i64, ptr %memberidx.i.i237, align 4
  %563 = add nsw i64 %562, 1
  %memberidx2.i12.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %564 = load i64, ptr %memberidx2.i12.i, align 4
  %565 = add i64 %564, -1
  %memberidx3.i.i263 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %566 = load i64, ptr %memberidx3.i.i263, align 4
  store i64 %562, ptr %561, align 4
  %memberidx1.i.i.i264 = getelementptr inbounds %FloRange, ptr %561, i64 0, i32 1
  store i64 %563, ptr %memberidx1.i.i.i264, align 4
  %memberidx2.i.i.i265 = getelementptr inbounds %FloRange, ptr %561, i64 0, i32 2
  store i64 %565, ptr %memberidx2.i.i.i265, align 4
  %memberidx3.i.i.i266 = getelementptr inbounds %FloRange, ptr %561, i64 0, i32 3
  store i64 %566, ptr %memberidx3.i.i.i266, align 4
  store i64 6, ptr %560, align 4
  %memberidx1.i10.i = getelementptr inbounds %Token, ptr %560, i64 0, i32 1
  store ptr %561, ptr %memberidx1.i10.i, align 8
  br label %common.ret

if.entry24:                                       ; preds = %ifend11
  %memberidx.i.i267 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %567 = load i64, ptr %memberidx.i.i267, align 4
  %568 = add nsw i64 %567, 1
  %memberidx1.i.i268 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %569 = load ptr, ptr %memberidx1.i.i268, align 8
  %memberidx2.i.i269 = getelementptr inbounds %String, ptr %569, i64 0, i32 1
  %570 = load i64, ptr %memberidx2.i.i269, align 4
  %571 = icmp slt i64 %568, %570
  br i1 %571, label %if.entry.i.i270, label %ifend6.i

if.entry.i.i270:                                  ; preds = %if.entry24
  %572 = load ptr, ptr %569, align 8
  %573 = getelementptr inbounds i8, ptr %572, i64 %568
  %574 = load i8, ptr %573, align 1
  switch i8 %574, label %ifend6.i [
    i8 45, label %end.i.i278
    i8 61, label %end.i80.i
    i8 62, label %if.entry4.i
  ]

end.i.i278:                                       ; preds = %if.entry.i.i270
  store i64 %568, ptr %memberidx.i.i267, align 4
  %575 = load ptr, ptr %569, align 8
  %576 = getelementptr inbounds i8, ptr %575, i64 %568
  %577 = load i8, ptr %576, align 1
  store i8 %577, ptr %0, align 1
  switch i8 %577, label %if.entry9.i.i284 [
    i8 10, label %if.entry.i23.i
    i8 0, label %Lexer_advance.exit.i285
  ]

if.entry.i23.i:                                   ; preds = %end.i.i278
  %memberidx5.i.i279 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i279, align 4
  %memberidx6.i.i280 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i285.sink.split

if.entry9.i.i284:                                 ; preds = %end.i.i278
  %memberidx12.i.i283 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i285.sink.split

Lexer_advance.exit.i285.sink.split:               ; preds = %if.entry.i23.i, %if.entry9.i.i284
  %memberidx12.i.i283.sink1294 = phi ptr [ %memberidx12.i.i283, %if.entry9.i.i284 ], [ %memberidx6.i.i280, %if.entry.i23.i ]
  %578 = load i64, ptr %memberidx12.i.i283.sink1294, align 4
  %579 = add nsw i64 %578, 1
  store i64 %579, ptr %memberidx12.i.i283.sink1294, align 4
  br label %Lexer_advance.exit.i285

Lexer_advance.exit.i285:                          ; preds = %Lexer_advance.exit.i285.sink.split, %end.i.i278
  %580 = tail call ptr @malloc(i32 16)
  %581 = tail call ptr @malloc(i32 32)
  %582 = load i64, ptr %memberidx.i.i267, align 4
  %583 = add nsw i64 %582, -1
  %584 = add nsw i64 %582, 1
  %memberidx2.i32.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %585 = load i64, ptr %memberidx2.i32.i, align 4
  %586 = add i64 %585, -2
  %memberidx3.i33.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %587 = load i64, ptr %memberidx3.i33.i, align 4
  store i64 %583, ptr %581, align 4
  %memberidx1.i.i34.i = getelementptr inbounds %FloRange, ptr %581, i64 0, i32 1
  store i64 %584, ptr %memberidx1.i.i34.i, align 4
  %memberidx2.i.i35.i = getelementptr inbounds %FloRange, ptr %581, i64 0, i32 2
  store i64 %586, ptr %memberidx2.i.i35.i, align 4
  %memberidx3.i.i36.i = getelementptr inbounds %FloRange, ptr %581, i64 0, i32 3
  store i64 %587, ptr %memberidx3.i.i36.i, align 4
  store i64 24, ptr %580, align 4
  %memberidx1.i37.i = getelementptr inbounds %Token, ptr %580, i64 0, i32 1
  store ptr %581, ptr %memberidx1.i37.i, align 8
  br label %common.ret

end.i80.i:                                        ; preds = %if.entry.i.i270
  store i64 %568, ptr %memberidx.i.i267, align 4
  %588 = load ptr, ptr %569, align 8
  %589 = getelementptr inbounds i8, ptr %588, i64 %568
  %590 = load i8, ptr %589, align 1
  store i8 %590, ptr %0, align 1
  switch i8 %590, label %if.entry9.i87.i [
    i8 10, label %if.entry.i83.i
    i8 0, label %Lexer_advance.exit88.i
  ]

if.entry.i83.i:                                   ; preds = %end.i80.i
  %memberidx5.i81.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i, align 4
  %memberidx6.i82.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i.sink.split

if.entry9.i87.i:                                  ; preds = %end.i80.i
  %memberidx12.i86.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i.sink.split

Lexer_advance.exit88.i.sink.split:                ; preds = %if.entry.i83.i, %if.entry9.i87.i
  %memberidx12.i86.i.sink1296 = phi ptr [ %memberidx12.i86.i, %if.entry9.i87.i ], [ %memberidx6.i82.i, %if.entry.i83.i ]
  %591 = load i64, ptr %memberidx12.i86.i.sink1296, align 4
  %592 = add nsw i64 %591, 1
  store i64 %592, ptr %memberidx12.i86.i.sink1296, align 4
  br label %Lexer_advance.exit88.i

Lexer_advance.exit88.i:                           ; preds = %Lexer_advance.exit88.i.sink.split, %end.i80.i
  %593 = tail call ptr @malloc(i32 16)
  %594 = tail call ptr @malloc(i32 32)
  %595 = load i64, ptr %memberidx.i.i267, align 4
  %596 = add nsw i64 %595, -1
  %597 = add nsw i64 %595, 1
  %memberidx2.i62.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %598 = load i64, ptr %memberidx2.i62.i, align 4
  %599 = add i64 %598, -2
  %memberidx3.i63.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %600 = load i64, ptr %memberidx3.i63.i, align 4
  store i64 %596, ptr %594, align 4
  %memberidx1.i.i64.i290 = getelementptr inbounds %FloRange, ptr %594, i64 0, i32 1
  store i64 %597, ptr %memberidx1.i.i64.i290, align 4
  %memberidx2.i.i65.i = getelementptr inbounds %FloRange, ptr %594, i64 0, i32 2
  store i64 %599, ptr %memberidx2.i.i65.i, align 4
  %memberidx3.i.i66.i = getelementptr inbounds %FloRange, ptr %594, i64 0, i32 3
  store i64 %600, ptr %memberidx3.i.i66.i, align 4
  store i64 13, ptr %593, align 4
  %memberidx1.i60.i = getelementptr inbounds %Token, ptr %593, i64 0, i32 1
  store ptr %594, ptr %memberidx1.i60.i, align 8
  br label %common.ret

if.entry4.i:                                      ; preds = %if.entry.i.i270
  %.not1129 = icmp slt i64 %567, %570
  br i1 %.not1129, label %end.i45.i, label %end.i45.i.thread

end.i45.i.thread:                                 ; preds = %if.entry4.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit53.i

end.i45.i:                                        ; preds = %if.entry4.i
  store i64 %568, ptr %memberidx.i.i267, align 4
  %601 = load ptr, ptr %569, align 8
  %602 = getelementptr inbounds i8, ptr %601, i64 %568
  %603 = load i8, ptr %602, align 1
  store i8 %603, ptr %0, align 1
  switch i8 %603, label %if.entry9.i52.i [
    i8 10, label %if.entry.i48.i
    i8 0, label %Lexer_advance.exit53.i
  ]

if.entry.i48.i:                                   ; preds = %end.i45.i
  %memberidx5.i46.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i, align 4
  %memberidx6.i47.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %604 = load i64, ptr %memberidx6.i47.i, align 4
  %605 = add nsw i64 %604, 1
  store i64 %605, ptr %memberidx6.i47.i, align 4
  br label %Lexer_advance.exit53.i

if.entry9.i52.i:                                  ; preds = %end.i45.i
  %memberidx12.i51.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %606 = load i64, ptr %memberidx12.i51.i, align 4
  %607 = add nsw i64 %606, 1
  store i64 %607, ptr %memberidx12.i51.i, align 4
  br label %Lexer_advance.exit53.i

Lexer_advance.exit53.i:                           ; preds = %end.i45.i.thread, %end.i45.i, %if.entry9.i52.i, %if.entry.i48.i
  %608 = tail call ptr @malloc(i32 16)
  %609 = tail call ptr @malloc(i32 32)
  %610 = load i64, ptr %memberidx.i.i267, align 4
  %611 = add nsw i64 %610, -1
  %612 = add nsw i64 %610, 1
  %memberidx2.i26.i292 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %613 = load i64, ptr %memberidx2.i26.i292, align 4
  %614 = add i64 %613, -2
  %memberidx3.i27.i293 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %615 = load i64, ptr %memberidx3.i27.i293, align 4
  store i64 %611, ptr %609, align 4
  %memberidx1.i.i28.i294 = getelementptr inbounds %FloRange, ptr %609, i64 0, i32 1
  store i64 %612, ptr %memberidx1.i.i28.i294, align 4
  %memberidx2.i.i29.i295 = getelementptr inbounds %FloRange, ptr %609, i64 0, i32 2
  store i64 %614, ptr %memberidx2.i.i29.i295, align 4
  %memberidx3.i.i30.i296 = getelementptr inbounds %FloRange, ptr %609, i64 0, i32 3
  store i64 %615, ptr %memberidx3.i.i30.i296, align 4
  store i64 45, ptr %608, align 4
  %memberidx1.i24.i = getelementptr inbounds %Token, ptr %608, i64 0, i32 1
  store ptr %609, ptr %memberidx1.i24.i, align 8
  br label %common.ret

ifend6.i:                                         ; preds = %if.entry.i.i270, %if.entry24
  %616 = tail call ptr @malloc(i32 16)
  %617 = tail call ptr @malloc(i32 32)
  %618 = load i64, ptr %memberidx.i.i267, align 4
  %619 = add nsw i64 %618, -1
  %620 = add nsw i64 %618, 1
  %memberidx2.i18.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %621 = load i64, ptr %memberidx2.i18.i, align 4
  %622 = add i64 %621, -2
  %memberidx3.i.i297 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %623 = load i64, ptr %memberidx3.i.i297, align 4
  store i64 %619, ptr %617, align 4
  %memberidx1.i.i.i298 = getelementptr inbounds %FloRange, ptr %617, i64 0, i32 1
  store i64 %620, ptr %memberidx1.i.i.i298, align 4
  %memberidx2.i.i.i299 = getelementptr inbounds %FloRange, ptr %617, i64 0, i32 2
  store i64 %622, ptr %memberidx2.i.i.i299, align 4
  %memberidx3.i.i.i300 = getelementptr inbounds %FloRange, ptr %617, i64 0, i32 3
  store i64 %623, ptr %memberidx3.i.i.i300, align 4
  store i64 5, ptr %616, align 4
  %memberidx1.i16.i = getelementptr inbounds %Token, ptr %616, i64 0, i32 1
  store ptr %617, ptr %memberidx1.i16.i, align 8
  br label %common.ret

if.entry27:                                       ; preds = %ifend11
  %memberidx.i.i301 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %624 = load i64, ptr %memberidx.i.i301, align 4
  %625 = add nsw i64 %624, 1
  %memberidx1.i.i302 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %626 = load ptr, ptr %memberidx1.i.i302, align 8
  %memberidx2.i.i303 = getelementptr inbounds %String, ptr %626, i64 0, i32 1
  %627 = load i64, ptr %memberidx2.i.i303, align 4
  %628 = icmp slt i64 %625, %627
  br i1 %628, label %if.entry.i.i304, label %ifend3.i358

if.entry.i.i304:                                  ; preds = %if.entry27
  %629 = load ptr, ptr %626, align 8
  %630 = getelementptr inbounds i8, ptr %629, i64 %625
  %631 = load i8, ptr %630, align 1
  switch i8 %631, label %ifend3.i358 [
    i8 61, label %end.i.i316
    i8 42, label %end.i80.i342
  ]

end.i.i316:                                       ; preds = %if.entry.i.i304
  store i64 %625, ptr %memberidx.i.i301, align 4
  %632 = load ptr, ptr %626, align 8
  %633 = getelementptr inbounds i8, ptr %632, i64 %625
  %634 = load i8, ptr %633, align 1
  store i8 %634, ptr %0, align 1
  switch i8 %634, label %if.entry9.i.i323 [
    i8 10, label %if.entry.i23.i319
    i8 0, label %Lexer_advance.exit.i331
  ]

if.entry.i23.i319:                                ; preds = %end.i.i316
  %memberidx5.i.i317 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i317, align 4
  %memberidx6.i.i318 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i331.sink.split

if.entry9.i.i323:                                 ; preds = %end.i.i316
  %memberidx12.i.i322 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i331.sink.split

Lexer_advance.exit.i331.sink.split:               ; preds = %if.entry.i23.i319, %if.entry9.i.i323
  %memberidx12.i.i322.sink1298 = phi ptr [ %memberidx12.i.i322, %if.entry9.i.i323 ], [ %memberidx6.i.i318, %if.entry.i23.i319 ]
  %635 = load i64, ptr %memberidx12.i.i322.sink1298, align 4
  %636 = add nsw i64 %635, 1
  store i64 %636, ptr %memberidx12.i.i322.sink1298, align 4
  br label %Lexer_advance.exit.i331

Lexer_advance.exit.i331:                          ; preds = %Lexer_advance.exit.i331.sink.split, %end.i.i316
  %637 = tail call ptr @malloc(i32 16)
  %638 = tail call ptr @malloc(i32 32)
  %639 = load i64, ptr %memberidx.i.i301, align 4
  %640 = add nsw i64 %639, -1
  %641 = add nsw i64 %639, 1
  %memberidx2.i32.i325 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %642 = load i64, ptr %memberidx2.i32.i325, align 4
  %643 = add i64 %642, -2
  %memberidx3.i33.i326 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %644 = load i64, ptr %memberidx3.i33.i326, align 4
  store i64 %640, ptr %638, align 4
  %memberidx1.i.i34.i327 = getelementptr inbounds %FloRange, ptr %638, i64 0, i32 1
  store i64 %641, ptr %memberidx1.i.i34.i327, align 4
  %memberidx2.i.i35.i328 = getelementptr inbounds %FloRange, ptr %638, i64 0, i32 2
  store i64 %643, ptr %memberidx2.i.i35.i328, align 4
  %memberidx3.i.i36.i329 = getelementptr inbounds %FloRange, ptr %638, i64 0, i32 3
  store i64 %644, ptr %memberidx3.i.i36.i329, align 4
  store i64 12, ptr %637, align 4
  %memberidx1.i37.i330 = getelementptr inbounds %Token, ptr %637, i64 0, i32 1
  store ptr %638, ptr %memberidx1.i37.i330, align 8
  br label %common.ret

end.i80.i342:                                     ; preds = %if.entry.i.i304
  store i64 %625, ptr %memberidx.i.i301, align 4
  %645 = load ptr, ptr %626, align 8
  %646 = getelementptr inbounds i8, ptr %645, i64 %625
  %647 = load i8, ptr %646, align 1
  store i8 %647, ptr %0, align 1
  switch i8 %647, label %if.entry9.i87.i349 [
    i8 10, label %if.entry.i83.i345
    i8 0, label %Lexer_advance.exit88.i353
  ]

if.entry.i83.i345:                                ; preds = %end.i80.i342
  %memberidx5.i81.i343 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i343, align 4
  %memberidx6.i82.i344 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i353.sink.split

if.entry9.i87.i349:                               ; preds = %end.i80.i342
  %memberidx12.i86.i348 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i353.sink.split

Lexer_advance.exit88.i353.sink.split:             ; preds = %if.entry.i83.i345, %if.entry9.i87.i349
  %memberidx12.i86.i348.sink1300 = phi ptr [ %memberidx12.i86.i348, %if.entry9.i87.i349 ], [ %memberidx6.i82.i344, %if.entry.i83.i345 ]
  %648 = load i64, ptr %memberidx12.i86.i348.sink1300, align 4
  %649 = add nsw i64 %648, 1
  store i64 %649, ptr %memberidx12.i86.i348.sink1300, align 4
  br label %Lexer_advance.exit88.i353

Lexer_advance.exit88.i353:                        ; preds = %Lexer_advance.exit88.i353.sink.split, %end.i80.i342
  %650 = add nsw i64 %624, 2
  %651 = load i64, ptr %memberidx2.i.i303, align 4
  %652 = icmp slt i64 %650, %651
  br i1 %652, label %if.entry.i71.i354, label %ifend6.i390

if.entry.i71.i354:                                ; preds = %Lexer_advance.exit88.i353
  %653 = load ptr, ptr %626, align 8
  %654 = getelementptr inbounds i8, ptr %653, i64 %650
  %655 = load i8, ptr %654, align 1
  %phi.cmp1123 = icmp eq i8 %655, 61
  br i1 %phi.cmp1123, label %end.i45.i367, label %ifend6.i390

ifend3.i358:                                      ; preds = %if.entry.i.i304, %if.entry27
  %656 = tail call ptr @malloc(i32 16)
  %657 = tail call ptr @malloc(i32 32)
  %658 = load i64, ptr %memberidx.i.i301, align 4
  %659 = add nsw i64 %658, 1
  %memberidx2.i56.i357 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %660 = load i64, ptr %memberidx2.i56.i357, align 4
  %661 = add i64 %660, -1
  %memberidx3.i57.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %662 = load i64, ptr %memberidx3.i57.i, align 4
  store i64 %658, ptr %657, align 4
  %memberidx1.i.i58.i = getelementptr inbounds %FloRange, ptr %657, i64 0, i32 1
  store i64 %659, ptr %memberidx1.i.i58.i, align 4
  %memberidx2.i.i59.i = getelementptr inbounds %FloRange, ptr %657, i64 0, i32 2
  store i64 %661, ptr %memberidx2.i.i59.i, align 4
  %memberidx3.i.i60.i = getelementptr inbounds %FloRange, ptr %657, i64 0, i32 3
  store i64 %662, ptr %memberidx3.i.i60.i, align 4
  store i64 4, ptr %656, align 4
  %memberidx1.i54.i = getelementptr inbounds %Token, ptr %656, i64 0, i32 1
  store ptr %657, ptr %memberidx1.i54.i, align 8
  br label %common.ret

end.i45.i367:                                     ; preds = %if.entry.i71.i354
  store i64 %650, ptr %memberidx.i.i301, align 4
  %663 = load ptr, ptr %626, align 8
  %664 = getelementptr inbounds i8, ptr %663, i64 %650
  %665 = load i8, ptr %664, align 1
  store i8 %665, ptr %0, align 1
  switch i8 %665, label %if.entry9.i52.i374 [
    i8 10, label %if.entry.i48.i370
    i8 0, label %Lexer_advance.exit53.i382
  ]

if.entry.i48.i370:                                ; preds = %end.i45.i367
  %memberidx5.i46.i368 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i368, align 4
  %memberidx6.i47.i369 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit53.i382.sink.split

if.entry9.i52.i374:                               ; preds = %end.i45.i367
  %memberidx12.i51.i373 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit53.i382.sink.split

Lexer_advance.exit53.i382.sink.split:             ; preds = %if.entry.i48.i370, %if.entry9.i52.i374
  %memberidx12.i51.i373.sink1302 = phi ptr [ %memberidx12.i51.i373, %if.entry9.i52.i374 ], [ %memberidx6.i47.i369, %if.entry.i48.i370 ]
  %666 = load i64, ptr %memberidx12.i51.i373.sink1302, align 4
  %667 = add nsw i64 %666, 1
  store i64 %667, ptr %memberidx12.i51.i373.sink1302, align 4
  br label %Lexer_advance.exit53.i382

Lexer_advance.exit53.i382:                        ; preds = %Lexer_advance.exit53.i382.sink.split, %end.i45.i367
  %668 = tail call ptr @malloc(i32 16)
  %669 = tail call ptr @malloc(i32 32)
  %670 = load i64, ptr %memberidx.i.i301, align 4
  %671 = add nsw i64 %670, -2
  %672 = add nsw i64 %670, 1
  %memberidx2.i26.i376 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %673 = load i64, ptr %memberidx2.i26.i376, align 4
  %674 = add i64 %673, -3
  %memberidx3.i27.i377 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %675 = load i64, ptr %memberidx3.i27.i377, align 4
  store i64 %671, ptr %669, align 4
  %memberidx1.i.i28.i378 = getelementptr inbounds %FloRange, ptr %669, i64 0, i32 1
  store i64 %672, ptr %memberidx1.i.i28.i378, align 4
  %memberidx2.i.i29.i379 = getelementptr inbounds %FloRange, ptr %669, i64 0, i32 2
  store i64 %674, ptr %memberidx2.i.i29.i379, align 4
  %memberidx3.i.i30.i380 = getelementptr inbounds %FloRange, ptr %669, i64 0, i32 3
  store i64 %675, ptr %memberidx3.i.i30.i380, align 4
  store i64 17, ptr %668, align 4
  %memberidx1.i24.i381 = getelementptr inbounds %Token, ptr %668, i64 0, i32 1
  store ptr %669, ptr %memberidx1.i24.i381, align 8
  br label %common.ret

ifend6.i390:                                      ; preds = %Lexer_advance.exit88.i353, %if.entry.i71.i354
  %676 = tail call ptr @malloc(i32 16)
  %677 = tail call ptr @malloc(i32 32)
  %678 = load i64, ptr %memberidx.i.i301, align 4
  %679 = add nsw i64 %678, -1
  %680 = add nsw i64 %678, 1
  %memberidx2.i18.i384 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %681 = load i64, ptr %memberidx2.i18.i384, align 4
  %682 = add i64 %681, -2
  %memberidx3.i.i385 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %683 = load i64, ptr %memberidx3.i.i385, align 4
  store i64 %679, ptr %677, align 4
  %memberidx1.i.i.i386 = getelementptr inbounds %FloRange, ptr %677, i64 0, i32 1
  store i64 %680, ptr %memberidx1.i.i.i386, align 4
  %memberidx2.i.i.i387 = getelementptr inbounds %FloRange, ptr %677, i64 0, i32 2
  store i64 %682, ptr %memberidx2.i.i.i387, align 4
  %memberidx3.i.i.i388 = getelementptr inbounds %FloRange, ptr %677, i64 0, i32 3
  store i64 %683, ptr %memberidx3.i.i.i388, align 4
  store i64 11, ptr %676, align 4
  %memberidx1.i16.i389 = getelementptr inbounds %Token, ptr %676, i64 0, i32 1
  store ptr %677, ptr %memberidx1.i16.i389, align 8
  br label %common.ret

if.entry30:                                       ; preds = %ifend11
  %memberidx.i.i391 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %684 = load i64, ptr %memberidx.i.i391, align 4
  %685 = add nsw i64 %684, 1
  %memberidx1.i.i392 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %686 = load ptr, ptr %memberidx1.i.i392, align 8
  %memberidx2.i.i393 = getelementptr inbounds %String, ptr %686, i64 0, i32 1
  %687 = load i64, ptr %memberidx2.i.i393, align 4
  %688 = icmp slt i64 %685, %687
  br i1 %688, label %if.entry.i.i394, label %ifend.i414

if.entry.i.i394:                                  ; preds = %if.entry30
  %689 = load ptr, ptr %686, align 8
  %690 = getelementptr inbounds i8, ptr %689, i64 %685
  %691 = load i8, ptr %690, align 1
  %phi.cmp1118 = icmp eq i8 %691, 61
  br i1 %phi.cmp1118, label %end.i.i402, label %ifend.i414

end.i.i402:                                       ; preds = %if.entry.i.i394
  store i64 %685, ptr %memberidx.i.i391, align 4
  %692 = load ptr, ptr %686, align 8
  %693 = getelementptr inbounds i8, ptr %692, i64 %685
  %694 = load i8, ptr %693, align 1
  store i8 %694, ptr %0, align 1
  switch i8 %694, label %if.entry9.i.i408 [
    i8 10, label %if.entry.i11.i
    i8 0, label %Lexer_advance.exit.i409
  ]

if.entry.i11.i:                                   ; preds = %end.i.i402
  %memberidx5.i.i403 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i403, align 4
  %memberidx6.i.i404 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i409.sink.split

if.entry9.i.i408:                                 ; preds = %end.i.i402
  %memberidx12.i.i407 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i409.sink.split

Lexer_advance.exit.i409.sink.split:               ; preds = %if.entry.i11.i, %if.entry9.i.i408
  %memberidx12.i.i407.sink1304 = phi ptr [ %memberidx12.i.i407, %if.entry9.i.i408 ], [ %memberidx6.i.i404, %if.entry.i11.i ]
  %695 = load i64, ptr %memberidx12.i.i407.sink1304, align 4
  %696 = add nsw i64 %695, 1
  store i64 %696, ptr %memberidx12.i.i407.sink1304, align 4
  br label %Lexer_advance.exit.i409

Lexer_advance.exit.i409:                          ; preds = %Lexer_advance.exit.i409.sink.split, %end.i.i402
  %697 = tail call ptr @malloc(i32 16)
  %698 = tail call ptr @malloc(i32 32)
  %699 = load i64, ptr %memberidx.i.i391, align 4
  %700 = add nsw i64 %699, -1
  %701 = add nsw i64 %699, 1
  %memberidx2.i14.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %702 = load i64, ptr %memberidx2.i14.i, align 4
  %703 = add i64 %702, -2
  %memberidx3.i15.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %704 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %700, ptr %698, align 4
  %memberidx1.i.i16.i = getelementptr inbounds %FloRange, ptr %698, i64 0, i32 1
  store i64 %701, ptr %memberidx1.i.i16.i, align 4
  %memberidx2.i.i17.i = getelementptr inbounds %FloRange, ptr %698, i64 0, i32 2
  store i64 %703, ptr %memberidx2.i.i17.i, align 4
  %memberidx3.i.i18.i = getelementptr inbounds %FloRange, ptr %698, i64 0, i32 3
  store i64 %704, ptr %memberidx3.i.i18.i, align 4
  store i64 16, ptr %697, align 4
  %memberidx1.i12.i = getelementptr inbounds %Token, ptr %697, i64 0, i32 1
  store ptr %698, ptr %memberidx1.i12.i, align 8
  br label %common.ret

ifend.i414:                                       ; preds = %if.entry30, %if.entry.i.i394
  %705 = tail call ptr @malloc(i32 16)
  %706 = tail call ptr @malloc(i32 32)
  %707 = load i64, ptr %memberidx.i.i391, align 4
  %708 = add nsw i64 %707, 1
  %memberidx2.i6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %709 = load i64, ptr %memberidx2.i6.i, align 4
  %710 = add i64 %709, -1
  %memberidx3.i.i410 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %711 = load i64, ptr %memberidx3.i.i410, align 4
  store i64 %707, ptr %706, align 4
  %memberidx1.i.i.i411 = getelementptr inbounds %FloRange, ptr %706, i64 0, i32 1
  store i64 %708, ptr %memberidx1.i.i.i411, align 4
  %memberidx2.i.i.i412 = getelementptr inbounds %FloRange, ptr %706, i64 0, i32 2
  store i64 %710, ptr %memberidx2.i.i.i412, align 4
  %memberidx3.i.i.i413 = getelementptr inbounds %FloRange, ptr %706, i64 0, i32 3
  store i64 %711, ptr %memberidx3.i.i.i413, align 4
  store i64 10, ptr %705, align 4
  %memberidx1.i4.i = getelementptr inbounds %Token, ptr %705, i64 0, i32 1
  store ptr %706, ptr %memberidx1.i4.i, align 8
  br label %common.ret

if.entry33:                                       ; preds = %ifend11
  %memberidx.i.i415 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %712 = load i64, ptr %memberidx.i.i415, align 4
  %713 = add nsw i64 %712, 1
  %memberidx1.i.i416 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %714 = load ptr, ptr %memberidx1.i.i416, align 8
  %memberidx2.i.i417 = getelementptr inbounds %String, ptr %714, i64 0, i32 1
  %715 = load i64, ptr %memberidx2.i.i417, align 4
  %716 = icmp slt i64 %713, %715
  br i1 %716, label %if.entry.i.i418, label %ifend.i453

if.entry.i.i418:                                  ; preds = %if.entry33
  %717 = load ptr, ptr %714, align 8
  %718 = getelementptr inbounds i8, ptr %717, i64 %713
  %719 = load i8, ptr %718, align 1
  %phi.cmp1116 = icmp eq i8 %719, 61
  br i1 %phi.cmp1116, label %end.i.i430, label %ifend.i453

end.i.i430:                                       ; preds = %if.entry.i.i418
  store i64 %713, ptr %memberidx.i.i415, align 4
  %720 = load ptr, ptr %714, align 8
  %721 = getelementptr inbounds i8, ptr %720, i64 %713
  %722 = load i8, ptr %721, align 1
  store i8 %722, ptr %0, align 1
  switch i8 %722, label %if.entry9.i.i437 [
    i8 10, label %if.entry.i11.i433
    i8 0, label %Lexer_advance.exit.i445
  ]

if.entry.i11.i433:                                ; preds = %end.i.i430
  %memberidx5.i.i431 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i431, align 4
  %memberidx6.i.i432 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i445.sink.split

if.entry9.i.i437:                                 ; preds = %end.i.i430
  %memberidx12.i.i436 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i445.sink.split

Lexer_advance.exit.i445.sink.split:               ; preds = %if.entry.i11.i433, %if.entry9.i.i437
  %memberidx12.i.i436.sink1306 = phi ptr [ %memberidx12.i.i436, %if.entry9.i.i437 ], [ %memberidx6.i.i432, %if.entry.i11.i433 ]
  %723 = load i64, ptr %memberidx12.i.i436.sink1306, align 4
  %724 = add nsw i64 %723, 1
  store i64 %724, ptr %memberidx12.i.i436.sink1306, align 4
  br label %Lexer_advance.exit.i445

Lexer_advance.exit.i445:                          ; preds = %Lexer_advance.exit.i445.sink.split, %end.i.i430
  %725 = tail call ptr @malloc(i32 16)
  %726 = tail call ptr @malloc(i32 32)
  %727 = load i64, ptr %memberidx.i.i415, align 4
  %728 = add nsw i64 %727, -1
  %729 = add nsw i64 %727, 1
  %memberidx2.i14.i439 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %730 = load i64, ptr %memberidx2.i14.i439, align 4
  %731 = add i64 %730, -2
  %memberidx3.i15.i440 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %732 = load i64, ptr %memberidx3.i15.i440, align 4
  store i64 %728, ptr %726, align 4
  %memberidx1.i.i16.i441 = getelementptr inbounds %FloRange, ptr %726, i64 0, i32 1
  store i64 %729, ptr %memberidx1.i.i16.i441, align 4
  %memberidx2.i.i17.i442 = getelementptr inbounds %FloRange, ptr %726, i64 0, i32 2
  store i64 %731, ptr %memberidx2.i.i17.i442, align 4
  %memberidx3.i.i18.i443 = getelementptr inbounds %FloRange, ptr %726, i64 0, i32 3
  store i64 %732, ptr %memberidx3.i.i18.i443, align 4
  store i64 20, ptr %725, align 4
  %memberidx1.i12.i444 = getelementptr inbounds %Token, ptr %725, i64 0, i32 1
  store ptr %726, ptr %memberidx1.i12.i444, align 8
  br label %common.ret

ifend.i453:                                       ; preds = %if.entry33, %if.entry.i.i418
  %733 = tail call ptr @malloc(i32 16)
  %734 = tail call ptr @malloc(i32 32)
  %735 = load i64, ptr %memberidx.i.i415, align 4
  %736 = add nsw i64 %735, 1
  %memberidx2.i6.i447 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %737 = load i64, ptr %memberidx2.i6.i447, align 4
  %738 = add i64 %737, -1
  %memberidx3.i.i448 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %739 = load i64, ptr %memberidx3.i.i448, align 4
  store i64 %735, ptr %734, align 4
  %memberidx1.i.i.i449 = getelementptr inbounds %FloRange, ptr %734, i64 0, i32 1
  store i64 %736, ptr %memberidx1.i.i.i449, align 4
  %memberidx2.i.i.i450 = getelementptr inbounds %FloRange, ptr %734, i64 0, i32 2
  store i64 %738, ptr %memberidx2.i.i.i450, align 4
  %memberidx3.i.i.i451 = getelementptr inbounds %FloRange, ptr %734, i64 0, i32 3
  store i64 %739, ptr %memberidx3.i.i.i451, align 4
  store i64 51, ptr %733, align 4
  %memberidx1.i4.i452 = getelementptr inbounds %Token, ptr %733, i64 0, i32 1
  store ptr %734, ptr %memberidx1.i4.i452, align 8
  br label %common.ret

if.entry36:                                       ; preds = %ifend11
  %memberidx.i.i454 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %740 = load i64, ptr %memberidx.i.i454, align 4
  %741 = add nsw i64 %740, 1
  %memberidx1.i.i455 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %742 = load ptr, ptr %memberidx1.i.i455, align 8
  %memberidx2.i.i456 = getelementptr inbounds %String, ptr %742, i64 0, i32 1
  %743 = load i64, ptr %memberidx2.i.i456, align 4
  %744 = icmp slt i64 %741, %743
  br i1 %744, label %Lexer_peek.exit.i459, label %ifend.i552

Lexer_peek.exit.i459:                             ; preds = %if.entry36
  %745 = load ptr, ptr %742, align 8
  %746 = getelementptr inbounds i8, ptr %745, i64 %741
  %747 = load i8, ptr %746, align 1
  switch i8 %747, label %ifend.i552 [
    i8 42, label %end.i127.i
    i8 47, label %end.i42.i
    i8 61, label %if.entry.i524
  ]

end.i127.i:                                       ; preds = %Lexer_peek.exit.i459
  store i64 %741, ptr %memberidx.i.i454, align 4
  %748 = load ptr, ptr %742, align 8
  %749 = getelementptr inbounds i8, ptr %748, i64 %741
  %750 = load i8, ptr %749, align 1
  store i8 %750, ptr %0, align 1
  switch i8 %750, label %if.entry9.i134.i [
    i8 10, label %if.entry.i130.i
    i8 0, label %Lexer_advance.exit135.i
  ]

if.entry.i130.i:                                  ; preds = %end.i127.i
  %memberidx5.i128.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i128.i, align 4
  %memberidx6.i129.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit135.i.sink.split

if.entry9.i134.i:                                 ; preds = %end.i127.i
  %memberidx12.i133.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit135.i.sink.split

Lexer_advance.exit135.i.sink.split:               ; preds = %if.entry.i130.i, %if.entry9.i134.i
  %memberidx12.i133.i.sink1308 = phi ptr [ %memberidx12.i133.i, %if.entry9.i134.i ], [ %memberidx6.i129.i, %if.entry.i130.i ]
  %751 = load i64, ptr %memberidx12.i133.i.sink1308, align 4
  %752 = add nsw i64 %751, 1
  store i64 %752, ptr %memberidx12.i133.i.sink1308, align 4
  br label %Lexer_advance.exit135.i

Lexer_advance.exit135.i:                          ; preds = %Lexer_advance.exit135.i.sink.split, %end.i127.i
  %753 = load i64, ptr %memberidx2.i.i456, align 4
  %.not11121217 = icmp slt i64 %741, %753
  br i1 %.not11121217, label %while.body.i468.lr.ph, label %end.i102.i.thread

while.body.i468.lr.ph:                            ; preds = %Lexer_advance.exit135.i
  %memberidx5.i59.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i60.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.body.i468

end.i102.i.thread:                                ; preds = %Lexer_advance.exit66.i, %Lexer_advance.exit135.i
  %754 = phi i64 [ %741, %Lexer_advance.exit135.i ], [ %774, %Lexer_advance.exit66.i ]
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit110.i

end.i102.i:                                       ; preds = %Lexer_peek.exit72.i477
  store i64 %774, ptr %memberidx.i.i454, align 4
  %755 = load ptr, ptr %742, align 8
  %756 = getelementptr inbounds i8, ptr %755, i64 %774
  %757 = load i8, ptr %756, align 1
  store i8 %757, ptr %0, align 1
  switch i8 %757, label %if.entry9.i109.i [
    i8 10, label %if.entry.i105.i
    i8 0, label %Lexer_advance.exit110.i
  ]

if.entry.i105.i:                                  ; preds = %end.i102.i
  store i64 0, ptr %memberidx5.i59.i, align 4
  %758 = load i64, ptr %memberidx6.i60.i, align 4
  %759 = add nsw i64 %758, 1
  store i64 %759, ptr %memberidx6.i60.i, align 4
  br label %Lexer_advance.exit110.i

if.entry9.i109.i:                                 ; preds = %end.i102.i
  %760 = load i64, ptr %memberidx5.i59.i, align 4
  %761 = add nsw i64 %760, 1
  store i64 %761, ptr %memberidx5.i59.i, align 4
  br label %Lexer_advance.exit110.i

Lexer_advance.exit110.i:                          ; preds = %end.i102.i.thread, %end.i102.i, %if.entry9.i109.i, %if.entry.i105.i
  %762 = phi i64 [ %754, %end.i102.i.thread ], [ %774, %end.i102.i ], [ %774, %if.entry9.i109.i ], [ %774, %if.entry.i105.i ]
  %763 = load i64, ptr %memberidx2.i.i456, align 4
  %.not1115 = icmp slt i64 %762, %763
  br i1 %.not1115, label %end.i86.i, label %end.i86.i.thread

end.i86.i.thread:                                 ; preds = %Lexer_advance.exit110.i
  store i8 0, ptr %0, align 1
  br label %if.entry39

end.i86.i:                                        ; preds = %Lexer_advance.exit110.i
  %764 = add nsw i64 %762, 1
  store i64 %764, ptr %memberidx.i.i454, align 4
  %765 = load ptr, ptr %742, align 8
  %766 = getelementptr inbounds i8, ptr %765, i64 %764
  %767 = load i8, ptr %766, align 1
  store i8 %767, ptr %0, align 1
  switch i8 %767, label %if.entry9.i93.i [
    i8 10, label %if.entry.i89.i
    i8 0, label %if.entry39
  ]

if.entry.i89.i:                                   ; preds = %end.i86.i
  %memberidx5.i87.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i87.i, align 4
  %memberidx6.i88.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %768 = load i64, ptr %memberidx6.i88.i, align 4
  %769 = add nsw i64 %768, 1
  store i64 %769, ptr %memberidx6.i88.i, align 4
  br label %if.entry39

if.entry9.i93.i:                                  ; preds = %end.i86.i
  %memberidx12.i92.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %770 = load i64, ptr %memberidx12.i92.i, align 4
  %771 = add nsw i64 %770, 1
  store i64 %771, ptr %memberidx12.i92.i, align 4
  br label %if.entry39

while.body.i468:                                  ; preds = %while.body.i468.lr.ph, %Lexer_advance.exit66.i
  %772 = phi i64 [ %753, %while.body.i468.lr.ph ], [ %792, %Lexer_advance.exit66.i ]
  %773 = phi i64 [ %741, %while.body.i468.lr.ph ], [ %774, %Lexer_advance.exit66.i ]
  %774 = add nsw i64 %773, 1
  %775 = icmp slt i64 %774, %772
  br i1 %775, label %if.entry.i77.i469, label %Lexer_peek.exit78.i474

if.entry.i77.i469:                                ; preds = %while.body.i468
  %776 = load ptr, ptr %742, align 8
  %777 = getelementptr inbounds i8, ptr %776, i64 %774
  %778 = load i8, ptr %777, align 1
  br label %Lexer_peek.exit78.i474

Lexer_peek.exit78.i474:                           ; preds = %if.entry.i77.i469, %while.body.i468
  %common.ret.op.i76.i470 = phi i8 [ %778, %if.entry.i77.i469 ], [ 0, %while.body.i468 ]
  %779 = add nsw i64 %773, 2
  %780 = icmp slt i64 %779, %772
  br i1 %780, label %Lexer_peek.exit72.i477, label %end.i58.i

Lexer_peek.exit72.i477:                           ; preds = %Lexer_peek.exit78.i474
  %781 = icmp eq i8 %common.ret.op.i76.i470, 42
  %782 = load ptr, ptr %742, align 8
  %783 = getelementptr inbounds i8, ptr %782, i64 %779
  %784 = load i8, ptr %783, align 1
  %785 = icmp eq i8 %784, 47
  %786 = and i1 %781, %785
  br i1 %786, label %end.i102.i, label %end.i58.i

end.i58.i:                                        ; preds = %Lexer_peek.exit78.i474, %Lexer_peek.exit72.i477
  store i64 %774, ptr %memberidx.i.i454, align 4
  %787 = load ptr, ptr %742, align 8
  %788 = getelementptr inbounds i8, ptr %787, i64 %774
  %789 = load i8, ptr %788, align 1
  store i8 %789, ptr %0, align 1
  switch i8 %789, label %Lexer_advance.exit66.i.sink.split [
    i8 10, label %if.entry.i61.i
    i8 0, label %Lexer_advance.exit66.i
  ]

if.entry.i61.i:                                   ; preds = %end.i58.i
  store i64 0, ptr %memberidx5.i59.i, align 4
  br label %Lexer_advance.exit66.i.sink.split

Lexer_advance.exit66.i.sink.split:                ; preds = %end.i58.i, %if.entry.i61.i
  %memberidx5.i59.i.sink1310 = phi ptr [ %memberidx6.i60.i, %if.entry.i61.i ], [ %memberidx5.i59.i, %end.i58.i ]
  %790 = load i64, ptr %memberidx5.i59.i.sink1310, align 4
  %791 = add nsw i64 %790, 1
  store i64 %791, ptr %memberidx5.i59.i.sink1310, align 4
  br label %Lexer_advance.exit66.i

Lexer_advance.exit66.i:                           ; preds = %Lexer_advance.exit66.i.sink.split, %end.i58.i
  %792 = load i64, ptr %memberidx2.i.i456, align 4
  %.not1112 = icmp slt i64 %774, %792
  br i1 %.not1112, label %while.body.i468, label %end.i102.i.thread

end.i42.i:                                        ; preds = %Lexer_peek.exit.i459
  store i64 %741, ptr %memberidx.i.i454, align 4
  %793 = load ptr, ptr %742, align 8
  %794 = getelementptr inbounds i8, ptr %793, i64 %741
  %795 = load i8, ptr %794, align 1
  store i8 %795, ptr %0, align 1
  switch i8 %795, label %if.entry9.i49.i [
    i8 10, label %if.entry.i45.i481
    i8 0, label %Lexer_advance.exit50.i
  ]

if.entry.i45.i481:                                ; preds = %end.i42.i
  %memberidx5.i43.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i43.i, align 4
  %memberidx6.i44.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit50.i.sink.split

if.entry9.i49.i:                                  ; preds = %end.i42.i
  %memberidx12.i48.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit50.i.sink.split

Lexer_advance.exit50.i.sink.split:                ; preds = %if.entry.i45.i481, %if.entry9.i49.i
  %memberidx12.i48.i.sink1312 = phi ptr [ %memberidx12.i48.i, %if.entry9.i49.i ], [ %memberidx6.i44.i, %if.entry.i45.i481 ]
  %796 = load i64, ptr %memberidx12.i48.i.sink1312, align 4
  %797 = add nsw i64 %796, 1
  store i64 %797, ptr %memberidx12.i48.i.sink1312, align 4
  br label %Lexer_advance.exit50.i

Lexer_advance.exit50.i:                           ; preds = %Lexer_advance.exit50.i.sink.split, %end.i42.i
  %memberidx5.i.i488 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i.i489 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry7.i

while.entry7.i:                                   ; preds = %while.entry7.i.backedge, %Lexer_advance.exit50.i
  %798 = phi i64 [ %741, %Lexer_advance.exit50.i ], [ %799, %while.entry7.i.backedge ]
  %799 = add nsw i64 %798, 1
  %800 = load i64, ptr %memberidx2.i.i456, align 4
  %801 = icmp slt i64 %799, %800
  br i1 %801, label %if.entry.i33.i, label %Lexer_peek.exit34.i

if.entry.i33.i:                                   ; preds = %while.entry7.i
  %802 = load ptr, ptr %742, align 8
  %803 = getelementptr inbounds i8, ptr %802, i64 %799
  %804 = load i8, ptr %803, align 1
  br label %Lexer_peek.exit34.i

Lexer_peek.exit34.i:                              ; preds = %if.entry.i33.i, %while.entry7.i
  %common.ret.op.i32.i = phi i8 [ %804, %if.entry.i33.i ], [ 0, %while.entry7.i ]
  %805 = icmp eq i8 %common.ret.op.i32.i, 10
  %806 = icmp sge i64 %798, %800
  %807 = or i1 %806, %805
  br i1 %807, label %if.entry39, label %end.i.i487

end.i.i487:                                       ; preds = %Lexer_peek.exit34.i
  store i64 %799, ptr %memberidx.i.i454, align 4
  %808 = load ptr, ptr %742, align 8
  %809 = getelementptr inbounds i8, ptr %808, i64 %799
  %810 = load i8, ptr %809, align 1
  store i8 %810, ptr %0, align 1
  switch i8 %810, label %Lexer_advance.exit.i494.sink.split [
    i8 10, label %if.entry.i25.i
    i8 0, label %while.entry7.i.backedge
  ]

if.entry.i25.i:                                   ; preds = %end.i.i487
  store i64 0, ptr %memberidx5.i.i488, align 4
  br label %Lexer_advance.exit.i494.sink.split

Lexer_advance.exit.i494.sink.split:               ; preds = %end.i.i487, %if.entry.i25.i
  %memberidx5.i.i488.sink1314 = phi ptr [ %memberidx6.i.i489, %if.entry.i25.i ], [ %memberidx5.i.i488, %end.i.i487 ]
  %811 = load i64, ptr %memberidx5.i.i488.sink1314, align 4
  %812 = add nsw i64 %811, 1
  store i64 %812, ptr %memberidx5.i.i488.sink1314, align 4
  br label %while.entry7.i.backedge

while.entry7.i.backedge:                          ; preds = %Lexer_advance.exit.i494.sink.split, %end.i.i487
  br label %while.entry7.i

if.entry39:                                       ; preds = %Lexer_peek.exit34.i, %end.i86.i.thread, %end.i86.i, %if.entry9.i93.i, %if.entry.i89.i
  %813 = phi i64 [ %762, %end.i86.i.thread ], [ %764, %end.i86.i ], [ %764, %if.entry9.i93.i ], [ %764, %if.entry.i89.i ], [ %798, %Lexer_peek.exit34.i ]
  %814 = load i64, ptr %memberidx2.i.i456, align 4
  %.not1108 = icmp slt i64 %813, %814
  br i1 %.not1108, label %end.i502, label %end.i502.thread

end.i502.thread:                                  ; preds = %if.entry39
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit511

end.i502:                                         ; preds = %if.entry39
  %815 = add nsw i64 %813, 1
  store i64 %815, ptr %memberidx.i.i454, align 4
  %816 = load ptr, ptr %742, align 8
  %817 = getelementptr inbounds i8, ptr %816, i64 %815
  %818 = load i8, ptr %817, align 1
  store i8 %818, ptr %0, align 1
  switch i8 %818, label %if.entry9.i510 [
    i8 10, label %if.entry.i505
    i8 0, label %Lexer_advance.exit511
  ]

if.entry.i505:                                    ; preds = %end.i502
  %memberidx5.i503 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i503, align 4
  %memberidx6.i504 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %819 = load i64, ptr %memberidx6.i504, align 4
  %820 = add nsw i64 %819, 1
  store i64 %820, ptr %memberidx6.i504, align 4
  br label %Lexer_advance.exit511

if.entry9.i510:                                   ; preds = %end.i502
  %memberidx12.i509 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %821 = load i64, ptr %memberidx12.i509, align 4
  %822 = add nsw i64 %821, 1
  store i64 %822, ptr %memberidx12.i509, align 4
  br label %Lexer_advance.exit511

Lexer_advance.exit511:                            ; preds = %end.i502.thread, %end.i502, %if.entry.i505, %if.entry9.i510
  %823 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

if.entry.i524:                                    ; preds = %Lexer_peek.exit.i459
  %.not1107 = icmp slt i64 %740, %743
  br i1 %.not1107, label %end.i.i529, label %end.i.i529.thread

end.i.i529.thread:                                ; preds = %if.entry.i524
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i544

end.i.i529:                                       ; preds = %if.entry.i524
  store i64 %741, ptr %memberidx.i.i454, align 4
  %824 = load ptr, ptr %742, align 8
  %825 = getelementptr inbounds i8, ptr %824, i64 %741
  %826 = load i8, ptr %825, align 1
  store i8 %826, ptr %0, align 1
  switch i8 %826, label %if.entry9.i.i536 [
    i8 10, label %if.entry.i11.i532
    i8 0, label %Lexer_advance.exit.i544
  ]

if.entry.i11.i532:                                ; preds = %end.i.i529
  %memberidx5.i.i530 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i530, align 4
  %memberidx6.i.i531 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %827 = load i64, ptr %memberidx6.i.i531, align 4
  %828 = add nsw i64 %827, 1
  store i64 %828, ptr %memberidx6.i.i531, align 4
  br label %Lexer_advance.exit.i544

if.entry9.i.i536:                                 ; preds = %end.i.i529
  %memberidx12.i.i535 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %829 = load i64, ptr %memberidx12.i.i535, align 4
  %830 = add nsw i64 %829, 1
  store i64 %830, ptr %memberidx12.i.i535, align 4
  br label %Lexer_advance.exit.i544

Lexer_advance.exit.i544:                          ; preds = %end.i.i529.thread, %end.i.i529, %if.entry9.i.i536, %if.entry.i11.i532
  %831 = tail call ptr @malloc(i32 16)
  %832 = tail call ptr @malloc(i32 32)
  %833 = load i64, ptr %memberidx.i.i454, align 4
  %834 = add nsw i64 %833, -1
  %835 = add nsw i64 %833, 1
  %memberidx2.i14.i538 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %836 = load i64, ptr %memberidx2.i14.i538, align 4
  %837 = add i64 %836, -2
  %memberidx3.i15.i539 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %838 = load i64, ptr %memberidx3.i15.i539, align 4
  store i64 %834, ptr %832, align 4
  %memberidx1.i.i16.i540 = getelementptr inbounds %FloRange, ptr %832, i64 0, i32 1
  store i64 %835, ptr %memberidx1.i.i16.i540, align 4
  %memberidx2.i.i17.i541 = getelementptr inbounds %FloRange, ptr %832, i64 0, i32 2
  store i64 %837, ptr %memberidx2.i.i17.i541, align 4
  %memberidx3.i.i18.i542 = getelementptr inbounds %FloRange, ptr %832, i64 0, i32 3
  store i64 %838, ptr %memberidx3.i.i18.i542, align 4
  store i64 15, ptr %831, align 4
  %memberidx1.i12.i543 = getelementptr inbounds %Token, ptr %831, i64 0, i32 1
  store ptr %832, ptr %memberidx1.i12.i543, align 8
  br label %common.ret

ifend.i552:                                       ; preds = %Lexer_peek.exit.i459, %if.entry36
  %839 = tail call ptr @malloc(i32 16)
  %840 = tail call ptr @malloc(i32 32)
  %841 = load i64, ptr %memberidx.i.i454, align 4
  %842 = add nsw i64 %841, 1
  %memberidx2.i6.i546 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %843 = load i64, ptr %memberidx2.i6.i546, align 4
  %844 = add i64 %843, -1
  %memberidx3.i.i547 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %845 = load i64, ptr %memberidx3.i.i547, align 4
  store i64 %841, ptr %840, align 4
  %memberidx1.i.i.i548 = getelementptr inbounds %FloRange, ptr %840, i64 0, i32 1
  store i64 %842, ptr %memberidx1.i.i.i548, align 4
  %memberidx2.i.i.i549 = getelementptr inbounds %FloRange, ptr %840, i64 0, i32 2
  store i64 %844, ptr %memberidx2.i.i.i549, align 4
  %memberidx3.i.i.i550 = getelementptr inbounds %FloRange, ptr %840, i64 0, i32 3
  store i64 %845, ptr %memberidx3.i.i.i550, align 4
  store i64 7, ptr %839, align 4
  %memberidx1.i4.i551 = getelementptr inbounds %Token, ptr %839, i64 0, i32 1
  store ptr %840, ptr %memberidx1.i4.i551, align 8
  br label %common.ret

if.entry42:                                       ; preds = %ifend11
  %846 = tail call ptr @malloc(i32 16)
  %847 = tail call ptr @malloc(i32 32)
  %memberidx.i553 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %848 = load i64, ptr %memberidx.i553, align 4
  %849 = add nsw i64 %848, 1
  %memberidx2.i554 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %850 = load i64, ptr %memberidx2.i554, align 4
  %851 = add i64 %850, -1
  %memberidx3.i555 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %852 = load i64, ptr %memberidx3.i555, align 4
  store i64 %848, ptr %847, align 4
  %memberidx1.i.i556 = getelementptr inbounds %FloRange, ptr %847, i64 0, i32 1
  store i64 %849, ptr %memberidx1.i.i556, align 4
  %memberidx2.i.i557 = getelementptr inbounds %FloRange, ptr %847, i64 0, i32 2
  store i64 %851, ptr %memberidx2.i.i557, align 4
  %memberidx3.i.i558 = getelementptr inbounds %FloRange, ptr %847, i64 0, i32 3
  store i64 %852, ptr %memberidx3.i.i558, align 4
  store i64 25, ptr %846, align 4
  %memberidx1.i559 = getelementptr inbounds %Token, ptr %846, i64 0, i32 1
  store ptr %847, ptr %memberidx1.i559, align 8
  br label %common.ret

if.entry45:                                       ; preds = %ifend11
  %853 = tail call ptr @malloc(i32 16)
  %854 = tail call ptr @malloc(i32 32)
  %memberidx.i560 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %855 = load i64, ptr %memberidx.i560, align 4
  %856 = add nsw i64 %855, 1
  %memberidx2.i561 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %857 = load i64, ptr %memberidx2.i561, align 4
  %858 = add i64 %857, -1
  %memberidx3.i562 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %859 = load i64, ptr %memberidx3.i562, align 4
  store i64 %855, ptr %854, align 4
  %memberidx1.i.i563 = getelementptr inbounds %FloRange, ptr %854, i64 0, i32 1
  store i64 %856, ptr %memberidx1.i.i563, align 4
  %memberidx2.i.i564 = getelementptr inbounds %FloRange, ptr %854, i64 0, i32 2
  store i64 %858, ptr %memberidx2.i.i564, align 4
  %memberidx3.i.i565 = getelementptr inbounds %FloRange, ptr %854, i64 0, i32 3
  store i64 %859, ptr %memberidx3.i.i565, align 4
  store i64 26, ptr %853, align 4
  %memberidx1.i566 = getelementptr inbounds %Token, ptr %853, i64 0, i32 1
  store ptr %854, ptr %memberidx1.i566, align 8
  br label %common.ret

if.entry48:                                       ; preds = %ifend11
  %860 = tail call ptr @malloc(i32 16)
  %861 = tail call ptr @malloc(i32 32)
  %memberidx.i567 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %862 = load i64, ptr %memberidx.i567, align 4
  %863 = add nsw i64 %862, 1
  %memberidx2.i568 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %864 = load i64, ptr %memberidx2.i568, align 4
  %865 = add i64 %864, -1
  %memberidx3.i569 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %866 = load i64, ptr %memberidx3.i569, align 4
  store i64 %862, ptr %861, align 4
  %memberidx1.i.i570 = getelementptr inbounds %FloRange, ptr %861, i64 0, i32 1
  store i64 %863, ptr %memberidx1.i.i570, align 4
  %memberidx2.i.i571 = getelementptr inbounds %FloRange, ptr %861, i64 0, i32 2
  store i64 %865, ptr %memberidx2.i.i571, align 4
  %memberidx3.i.i572 = getelementptr inbounds %FloRange, ptr %861, i64 0, i32 3
  store i64 %866, ptr %memberidx3.i.i572, align 4
  store i64 27, ptr %860, align 4
  %memberidx1.i573 = getelementptr inbounds %Token, ptr %860, i64 0, i32 1
  store ptr %861, ptr %memberidx1.i573, align 8
  br label %common.ret

if.entry51:                                       ; preds = %ifend11
  %867 = tail call ptr @malloc(i32 16)
  %868 = tail call ptr @malloc(i32 32)
  %memberidx.i574 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %869 = load i64, ptr %memberidx.i574, align 4
  %870 = add nsw i64 %869, 1
  %memberidx2.i575 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %871 = load i64, ptr %memberidx2.i575, align 4
  %872 = add i64 %871, -1
  %memberidx3.i576 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %873 = load i64, ptr %memberidx3.i576, align 4
  store i64 %869, ptr %868, align 4
  %memberidx1.i.i577 = getelementptr inbounds %FloRange, ptr %868, i64 0, i32 1
  store i64 %870, ptr %memberidx1.i.i577, align 4
  %memberidx2.i.i578 = getelementptr inbounds %FloRange, ptr %868, i64 0, i32 2
  store i64 %872, ptr %memberidx2.i.i578, align 4
  %memberidx3.i.i579 = getelementptr inbounds %FloRange, ptr %868, i64 0, i32 3
  store i64 %873, ptr %memberidx3.i.i579, align 4
  store i64 28, ptr %867, align 4
  %memberidx1.i580 = getelementptr inbounds %Token, ptr %867, i64 0, i32 1
  store ptr %868, ptr %memberidx1.i580, align 8
  br label %common.ret

if.entry54:                                       ; preds = %ifend11
  %874 = tail call ptr @malloc(i32 16)
  %875 = tail call ptr @malloc(i32 32)
  %memberidx.i581 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %876 = load i64, ptr %memberidx.i581, align 4
  %877 = add nsw i64 %876, 1
  %memberidx2.i582 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %878 = load i64, ptr %memberidx2.i582, align 4
  %879 = add i64 %878, -1
  %memberidx3.i583 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %880 = load i64, ptr %memberidx3.i583, align 4
  store i64 %876, ptr %875, align 4
  %memberidx1.i.i584 = getelementptr inbounds %FloRange, ptr %875, i64 0, i32 1
  store i64 %877, ptr %memberidx1.i.i584, align 4
  %memberidx2.i.i585 = getelementptr inbounds %FloRange, ptr %875, i64 0, i32 2
  store i64 %879, ptr %memberidx2.i.i585, align 4
  %memberidx3.i.i586 = getelementptr inbounds %FloRange, ptr %875, i64 0, i32 3
  store i64 %880, ptr %memberidx3.i.i586, align 4
  store i64 29, ptr %874, align 4
  %memberidx1.i587 = getelementptr inbounds %Token, ptr %874, i64 0, i32 1
  store ptr %875, ptr %memberidx1.i587, align 8
  br label %common.ret

if.entry57:                                       ; preds = %ifend11
  %881 = tail call ptr @malloc(i32 16)
  %882 = tail call ptr @malloc(i32 32)
  %memberidx.i588 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %883 = load i64, ptr %memberidx.i588, align 4
  %884 = add nsw i64 %883, 1
  %memberidx2.i589 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %885 = load i64, ptr %memberidx2.i589, align 4
  %886 = add i64 %885, -1
  %memberidx3.i590 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %887 = load i64, ptr %memberidx3.i590, align 4
  store i64 %883, ptr %882, align 4
  %memberidx1.i.i591 = getelementptr inbounds %FloRange, ptr %882, i64 0, i32 1
  store i64 %884, ptr %memberidx1.i.i591, align 4
  %memberidx2.i.i592 = getelementptr inbounds %FloRange, ptr %882, i64 0, i32 2
  store i64 %886, ptr %memberidx2.i.i592, align 4
  %memberidx3.i.i593 = getelementptr inbounds %FloRange, ptr %882, i64 0, i32 3
  store i64 %887, ptr %memberidx3.i.i593, align 4
  store i64 30, ptr %881, align 4
  %memberidx1.i594 = getelementptr inbounds %Token, ptr %881, i64 0, i32 1
  store ptr %882, ptr %memberidx1.i594, align 8
  br label %common.ret

if.entry60:                                       ; preds = %ifend11, %ifend11
  %888 = tail call ptr @malloc(i32 16)
  %889 = tail call ptr @malloc(i32 32)
  %memberidx.i595 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %890 = load i64, ptr %memberidx.i595, align 4
  %891 = add nsw i64 %890, 1
  %memberidx2.i596 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %892 = load i64, ptr %memberidx2.i596, align 4
  %893 = add i64 %892, -1
  %memberidx3.i597 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %894 = load i64, ptr %memberidx3.i597, align 4
  store i64 %890, ptr %889, align 4
  %memberidx1.i.i598 = getelementptr inbounds %FloRange, ptr %889, i64 0, i32 1
  store i64 %891, ptr %memberidx1.i.i598, align 4
  %memberidx2.i.i599 = getelementptr inbounds %FloRange, ptr %889, i64 0, i32 2
  store i64 %893, ptr %memberidx2.i.i599, align 4
  %memberidx3.i.i600 = getelementptr inbounds %FloRange, ptr %889, i64 0, i32 3
  store i64 %894, ptr %memberidx3.i.i600, align 4
  store i64 33, ptr %888, align 4
  %memberidx1.i601 = getelementptr inbounds %Token, ptr %888, i64 0, i32 1
  store ptr %889, ptr %memberidx1.i601, align 8
  br label %common.ret

if.entry63:                                       ; preds = %ifend11
  %memberidx.i.i.i602 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %895 = load i64, ptr %memberidx.i.i.i602, align 4
  %memberidx1.i.i.i603 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %896 = load ptr, ptr %memberidx1.i.i.i603, align 8
  %memberidx2.i.i.i604 = getelementptr inbounds %String, ptr %896, i64 0, i32 1
  %897 = load i64, ptr %memberidx2.i.i.i604, align 4
  %.not1102 = icmp slt i64 %895, %897
  br i1 %.not1102, label %end.i.i609, label %end.i.i609.thread

end.i.i609.thread:                                ; preds = %if.entry63
  store i8 0, ptr %0, align 1
  br label %ifend.i635

end.i.i609:                                       ; preds = %if.entry63
  %898 = add nsw i64 %895, 1
  store i64 %898, ptr %memberidx.i.i.i602, align 4
  %899 = load ptr, ptr %896, align 8
  %900 = getelementptr inbounds i8, ptr %899, i64 %898
  %901 = load i8, ptr %900, align 1
  store i8 %901, ptr %0, align 1
  switch i8 %901, label %Lexer_advance.exit.i617 [
    i8 10, label %if.entry.i.i612
    i8 0, label %ifend.i635
  ]

if.entry.i.i612:                                  ; preds = %end.i.i609
  %memberidx5.i.i610 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i610, align 4
  %memberidx6.i.i611 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %902 = load i64, ptr %memberidx6.i.i611, align 4
  %903 = add nsw i64 %902, 1
  store i64 %903, ptr %memberidx6.i.i611, align 4
  br label %ifend.i635

Lexer_advance.exit.i617:                          ; preds = %end.i.i609
  %memberidx12.i.i615 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %904 = load i64, ptr %memberidx12.i.i615, align 4
  %905 = add nsw i64 %904, 1
  store i64 %905, ptr %memberidx12.i.i615, align 4
  %906 = icmp eq i8 %901, 92
  br i1 %906, label %if.entry.i620, label %ifend.i635

if.entry.i620:                                    ; preds = %Lexer_advance.exit.i617
  %907 = load i64, ptr %memberidx2.i.i.i604, align 4
  %.not1104 = icmp slt i64 %898, %907
  br i1 %.not1104, label %end.i22.i, label %end.i22.i.thread

end.i22.i.thread:                                 ; preds = %if.entry.i620
  store i8 0, ptr %0, align 1
  br label %ifend27.i.i632

end.i22.i:                                        ; preds = %if.entry.i620
  %908 = add nsw i64 %895, 2
  store i64 %908, ptr %memberidx.i.i.i602, align 4
  %909 = load ptr, ptr %896, align 8
  %910 = getelementptr inbounds i8, ptr %909, i64 %908
  %911 = load i8, ptr %910, align 1
  store i8 %911, ptr %0, align 1
  switch i8 %911, label %Lexer_advance.exit30.i [
    i8 10, label %if.entry.i25.i622
    i8 0, label %ifend27.i.i632
  ]

if.entry.i25.i622:                                ; preds = %end.i22.i
  store i64 0, ptr %memberidx12.i.i615, align 4
  %memberidx6.i24.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %912 = load i64, ptr %memberidx6.i24.i, align 4
  %913 = add nsw i64 %912, 1
  store i64 %913, ptr %memberidx6.i24.i, align 4
  br label %ifend27.i.i632

Lexer_advance.exit30.i:                           ; preds = %end.i22.i
  %914 = add nsw i64 %904, 2
  store i64 %914, ptr %memberidx12.i.i615, align 4
  switch i8 %911, label %ifend27.i.i632 [
    i8 97, label %ifend.i635
    i8 98, label %get_escape_char.exit.i.fold.split
    i8 116, label %get_escape_char.exit.i.fold.split1164
    i8 102, label %get_escape_char.exit.i.fold.split1165
    i8 110, label %get_escape_char.exit.i.fold.split1166
    i8 114, label %get_escape_char.exit.i.fold.split1167
    i8 118, label %get_escape_char.exit.i.fold.split1168
    i8 48, label %get_escape_char.exit.i.fold.split1169
    i8 39, label %get_escape_char.exit.i.fold.split1170
    i8 34, label %get_escape_char.exit.i.fold.split1171
  ]

ifend27.i.i632:                                   ; preds = %if.entry.i25.i622, %end.i22.i, %end.i22.i.thread, %Lexer_advance.exit30.i
  %915 = phi i64 [ %908, %Lexer_advance.exit30.i ], [ %908, %if.entry.i25.i622 ], [ %908, %end.i22.i ], [ %898, %end.i22.i.thread ]
  %ternary.i21.i11971199 = phi i8 [ %911, %Lexer_advance.exit30.i ], [ 10, %if.entry.i25.i622 ], [ %911, %end.i22.i ], [ 0, %end.i22.i.thread ]
  br label %ifend.i635

get_escape_char.exit.i.fold.split:                ; preds = %Lexer_advance.exit30.i
  br label %ifend.i635

get_escape_char.exit.i.fold.split1164:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i635

get_escape_char.exit.i.fold.split1165:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i635

get_escape_char.exit.i.fold.split1166:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i635

get_escape_char.exit.i.fold.split1167:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i635

get_escape_char.exit.i.fold.split1168:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i635

get_escape_char.exit.i.fold.split1169:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i635

get_escape_char.exit.i.fold.split1170:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i635

get_escape_char.exit.i.fold.split1171:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i635

ifend.i635:                                       ; preds = %if.entry.i.i612, %end.i.i609, %end.i.i609.thread, %ifend27.i.i632, %get_escape_char.exit.i.fold.split, %get_escape_char.exit.i.fold.split1164, %get_escape_char.exit.i.fold.split1165, %get_escape_char.exit.i.fold.split1166, %get_escape_char.exit.i.fold.split1167, %get_escape_char.exit.i.fold.split1168, %get_escape_char.exit.i.fold.split1169, %get_escape_char.exit.i.fold.split1170, %get_escape_char.exit.i.fold.split1171, %Lexer_advance.exit30.i, %Lexer_advance.exit.i617
  %916 = phi i64 [ %898, %Lexer_advance.exit.i617 ], [ %908, %Lexer_advance.exit30.i ], [ %908, %get_escape_char.exit.i.fold.split1171 ], [ %908, %get_escape_char.exit.i.fold.split1170 ], [ %908, %get_escape_char.exit.i.fold.split1169 ], [ %908, %get_escape_char.exit.i.fold.split1168 ], [ %908, %get_escape_char.exit.i.fold.split1167 ], [ %908, %get_escape_char.exit.i.fold.split1166 ], [ %908, %get_escape_char.exit.i.fold.split1165 ], [ %908, %get_escape_char.exit.i.fold.split1164 ], [ %908, %get_escape_char.exit.i.fold.split ], [ %915, %ifend27.i.i632 ], [ %895, %end.i.i609.thread ], [ %898, %end.i.i609 ], [ %898, %if.entry.i.i612 ]
  %length.0.i634 = phi i64 [ 3, %Lexer_advance.exit.i617 ], [ 5, %Lexer_advance.exit30.i ], [ 5, %get_escape_char.exit.i.fold.split1171 ], [ 5, %get_escape_char.exit.i.fold.split1170 ], [ 5, %get_escape_char.exit.i.fold.split1169 ], [ 5, %get_escape_char.exit.i.fold.split1168 ], [ 5, %get_escape_char.exit.i.fold.split1167 ], [ 5, %get_escape_char.exit.i.fold.split1166 ], [ 5, %get_escape_char.exit.i.fold.split1165 ], [ 5, %get_escape_char.exit.i.fold.split1164 ], [ 5, %get_escape_char.exit.i.fold.split ], [ 5, %ifend27.i.i632 ], [ 3, %end.i.i609.thread ], [ 3, %end.i.i609 ], [ 3, %if.entry.i.i612 ]
  %value.0.i = phi i8 [ %901, %Lexer_advance.exit.i617 ], [ 7, %Lexer_advance.exit30.i ], [ %911, %get_escape_char.exit.i.fold.split1171 ], [ %911, %get_escape_char.exit.i.fold.split1170 ], [ 0, %get_escape_char.exit.i.fold.split1169 ], [ 11, %get_escape_char.exit.i.fold.split1168 ], [ 13, %get_escape_char.exit.i.fold.split1167 ], [ 10, %get_escape_char.exit.i.fold.split1166 ], [ 12, %get_escape_char.exit.i.fold.split1165 ], [ 9, %get_escape_char.exit.i.fold.split1164 ], [ 8, %get_escape_char.exit.i.fold.split ], [ %ternary.i21.i11971199, %ifend27.i.i632 ], [ 0, %end.i.i609.thread ], [ %901, %end.i.i609 ], [ 10, %if.entry.i.i612 ]
  %917 = load i64, ptr %memberidx2.i.i.i604, align 4
  %.not1103 = icmp slt i64 %916, %917
  br i1 %.not1103, label %end.i38.i, label %end.i38.i.thread

end.i38.i.thread:                                 ; preds = %ifend.i635
  store i8 0, ptr %0, align 1
  br label %Lexer_char_token.exit

end.i38.i:                                        ; preds = %ifend.i635
  %918 = add nsw i64 %916, 1
  store i64 %918, ptr %memberidx.i.i.i602, align 4
  %919 = load ptr, ptr %896, align 8
  %920 = getelementptr inbounds i8, ptr %919, i64 %918
  %921 = load i8, ptr %920, align 1
  store i8 %921, ptr %0, align 1
  switch i8 %921, label %if.entry9.i45.i [
    i8 10, label %if.entry.i41.i
    i8 0, label %Lexer_char_token.exit
  ]

if.entry.i41.i:                                   ; preds = %end.i38.i
  %memberidx5.i39.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i39.i, align 4
  %memberidx6.i40.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %922 = load i64, ptr %memberidx6.i40.i, align 4
  %923 = add nsw i64 %922, 1
  store i64 %923, ptr %memberidx6.i40.i, align 4
  br label %Lexer_char_token.exit

if.entry9.i45.i:                                  ; preds = %end.i38.i
  %memberidx12.i44.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %924 = load i64, ptr %memberidx12.i44.i, align 4
  %925 = add nsw i64 %924, 1
  store i64 %925, ptr %memberidx12.i44.i, align 4
  br label %Lexer_char_token.exit

Lexer_char_token.exit:                            ; preds = %end.i38.i.thread, %end.i38.i, %if.entry.i41.i, %if.entry9.i45.i
  %926 = tail call ptr @malloc(i32 17)
  %927 = tail call ptr @malloc(i32 32)
  %928 = load i64, ptr %memberidx.i.i.i602, align 4
  %929 = sub nsw i64 1, %length.0.i634
  %930 = add i64 %929, %928
  %931 = add nsw i64 %928, 1
  %memberidx2.i12.i637 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %932 = load i64, ptr %memberidx2.i12.i637, align 4
  %933 = sub nuw i64 %932, %length.0.i634
  %memberidx3.i.i638 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %934 = load i64, ptr %memberidx3.i.i638, align 4
  store i64 %930, ptr %927, align 4
  %memberidx1.i.i13.i639 = getelementptr inbounds %FloRange, ptr %927, i64 0, i32 1
  store i64 %931, ptr %memberidx1.i.i13.i639, align 4
  %memberidx2.i.i14.i640 = getelementptr inbounds %FloRange, ptr %927, i64 0, i32 2
  store i64 %933, ptr %memberidx2.i.i14.i640, align 4
  %memberidx3.i.i.i641 = getelementptr inbounds %FloRange, ptr %927, i64 0, i32 3
  store i64 %934, ptr %memberidx3.i.i.i641, align 4
  store i64 35, ptr %926, align 4
  %memberidx1.i.i10.i = getelementptr inbounds %Token, ptr %926, i64 0, i32 1
  store ptr %927, ptr %memberidx1.i.i10.i, align 8
  %memberidx.i.i642 = getelementptr inbounds %CharToken, ptr %926, i64 0, i32 2
  store i8 %value.0.i, ptr %memberidx.i.i642, align 1
  br label %common.ret

if.entry66:                                       ; preds = %ifend11
  %935 = tail call ptr @malloc(i32 16)
  %936 = tail call ptr @malloc(i32 32)
  %memberidx.i643 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %937 = load i64, ptr %memberidx.i643, align 4
  %938 = add nsw i64 %937, 1
  %memberidx2.i644 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %939 = load i64, ptr %memberidx2.i644, align 4
  %940 = add i64 %939, -1
  %memberidx3.i645 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %941 = load i64, ptr %memberidx3.i645, align 4
  store i64 %937, ptr %936, align 4
  %memberidx1.i.i646 = getelementptr inbounds %FloRange, ptr %936, i64 0, i32 1
  store i64 %938, ptr %memberidx1.i.i646, align 4
  %memberidx2.i.i647 = getelementptr inbounds %FloRange, ptr %936, i64 0, i32 2
  store i64 %940, ptr %memberidx2.i.i647, align 4
  %memberidx3.i.i648 = getelementptr inbounds %FloRange, ptr %936, i64 0, i32 3
  store i64 %941, ptr %memberidx3.i.i648, align 4
  store i64 36, ptr %935, align 4
  %memberidx1.i649 = getelementptr inbounds %Token, ptr %935, i64 0, i32 1
  store ptr %936, ptr %memberidx1.i649, align 8
  br label %common.ret

if.entry69:                                       ; preds = %ifend11
  %942 = tail call ptr @malloc(i32 16)
  %943 = tail call ptr @malloc(i32 32)
  %memberidx.i650 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %944 = load i64, ptr %memberidx.i650, align 4
  %945 = add nsw i64 %944, 1
  %memberidx2.i651 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %946 = load i64, ptr %memberidx2.i651, align 4
  %947 = add i64 %946, -1
  %memberidx3.i652 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %948 = load i64, ptr %memberidx3.i652, align 4
  store i64 %944, ptr %943, align 4
  %memberidx1.i.i653 = getelementptr inbounds %FloRange, ptr %943, i64 0, i32 1
  store i64 %945, ptr %memberidx1.i.i653, align 4
  %memberidx2.i.i654 = getelementptr inbounds %FloRange, ptr %943, i64 0, i32 2
  store i64 %947, ptr %memberidx2.i.i654, align 4
  %memberidx3.i.i655 = getelementptr inbounds %FloRange, ptr %943, i64 0, i32 3
  store i64 %948, ptr %memberidx3.i.i655, align 4
  store i64 37, ptr %942, align 4
  %memberidx1.i656 = getelementptr inbounds %Token, ptr %942, i64 0, i32 1
  store ptr %943, ptr %memberidx1.i656, align 8
  br label %common.ret

if.entry72:                                       ; preds = %ifend11
  %memberidx.i.i657 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %949 = load i64, ptr %memberidx.i.i657, align 4
  %950 = add nsw i64 %949, 1
  %memberidx1.i.i658 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %951 = load ptr, ptr %memberidx1.i.i658, align 8
  %memberidx2.i.i659 = getelementptr inbounds %String, ptr %951, i64 0, i32 1
  %952 = load i64, ptr %memberidx2.i.i659, align 4
  %953 = icmp slt i64 %950, %952
  br i1 %953, label %if.entry.i.i660, label %ifend.i695

if.entry.i.i660:                                  ; preds = %if.entry72
  %954 = load ptr, ptr %951, align 8
  %955 = getelementptr inbounds i8, ptr %954, i64 %950
  %956 = load i8, ptr %955, align 1
  %phi.cmp1100 = icmp eq i8 %956, 61
  br i1 %phi.cmp1100, label %end.i.i672, label %ifend.i695

end.i.i672:                                       ; preds = %if.entry.i.i660
  store i64 %950, ptr %memberidx.i.i657, align 4
  %957 = load ptr, ptr %951, align 8
  %958 = getelementptr inbounds i8, ptr %957, i64 %950
  %959 = load i8, ptr %958, align 1
  store i8 %959, ptr %0, align 1
  switch i8 %959, label %if.entry9.i.i679 [
    i8 10, label %if.entry.i11.i675
    i8 0, label %Lexer_advance.exit.i687
  ]

if.entry.i11.i675:                                ; preds = %end.i.i672
  %memberidx5.i.i673 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i673, align 4
  %memberidx6.i.i674 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i687.sink.split

if.entry9.i.i679:                                 ; preds = %end.i.i672
  %memberidx12.i.i678 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i687.sink.split

Lexer_advance.exit.i687.sink.split:               ; preds = %if.entry.i11.i675, %if.entry9.i.i679
  %memberidx12.i.i678.sink1316 = phi ptr [ %memberidx12.i.i678, %if.entry9.i.i679 ], [ %memberidx6.i.i674, %if.entry.i11.i675 ]
  %960 = load i64, ptr %memberidx12.i.i678.sink1316, align 4
  %961 = add nsw i64 %960, 1
  store i64 %961, ptr %memberidx12.i.i678.sink1316, align 4
  br label %Lexer_advance.exit.i687

Lexer_advance.exit.i687:                          ; preds = %Lexer_advance.exit.i687.sink.split, %end.i.i672
  %962 = tail call ptr @malloc(i32 16)
  %963 = tail call ptr @malloc(i32 32)
  %964 = load i64, ptr %memberidx.i.i657, align 4
  %965 = add nsw i64 %964, -1
  %966 = add nsw i64 %964, 1
  %memberidx2.i14.i681 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %967 = load i64, ptr %memberidx2.i14.i681, align 4
  %968 = add i64 %967, -2
  %memberidx3.i15.i682 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %969 = load i64, ptr %memberidx3.i15.i682, align 4
  store i64 %965, ptr %963, align 4
  %memberidx1.i.i16.i683 = getelementptr inbounds %FloRange, ptr %963, i64 0, i32 1
  store i64 %966, ptr %memberidx1.i.i16.i683, align 4
  %memberidx2.i.i17.i684 = getelementptr inbounds %FloRange, ptr %963, i64 0, i32 2
  store i64 %968, ptr %memberidx2.i.i17.i684, align 4
  %memberidx3.i.i18.i685 = getelementptr inbounds %FloRange, ptr %963, i64 0, i32 3
  store i64 %969, ptr %memberidx3.i.i18.i685, align 4
  store i64 39, ptr %962, align 4
  %memberidx1.i12.i686 = getelementptr inbounds %Token, ptr %962, i64 0, i32 1
  store ptr %963, ptr %memberidx1.i12.i686, align 8
  br label %common.ret

ifend.i695:                                       ; preds = %if.entry72, %if.entry.i.i660
  %970 = tail call ptr @malloc(i32 16)
  %971 = tail call ptr @malloc(i32 32)
  %972 = load i64, ptr %memberidx.i.i657, align 4
  %973 = add nsw i64 %972, 1
  %memberidx2.i6.i689 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %974 = load i64, ptr %memberidx2.i6.i689, align 4
  %975 = add i64 %974, -1
  %memberidx3.i.i690 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %976 = load i64, ptr %memberidx3.i.i690, align 4
  store i64 %972, ptr %971, align 4
  %memberidx1.i.i.i691 = getelementptr inbounds %FloRange, ptr %971, i64 0, i32 1
  store i64 %973, ptr %memberidx1.i.i.i691, align 4
  %memberidx2.i.i.i692 = getelementptr inbounds %FloRange, ptr %971, i64 0, i32 2
  store i64 %975, ptr %memberidx2.i.i.i692, align 4
  %memberidx3.i.i.i693 = getelementptr inbounds %FloRange, ptr %971, i64 0, i32 3
  store i64 %976, ptr %memberidx3.i.i.i693, align 4
  store i64 38, ptr %970, align 4
  %memberidx1.i4.i694 = getelementptr inbounds %Token, ptr %970, i64 0, i32 1
  store ptr %971, ptr %memberidx1.i4.i694, align 8
  br label %common.ret

if.entry75:                                       ; preds = %ifend11
  %memberidx.i.i696 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %977 = load i64, ptr %memberidx.i.i696, align 4
  %978 = add nsw i64 %977, 1
  %memberidx1.i.i697 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %979 = load ptr, ptr %memberidx1.i.i697, align 8
  %memberidx2.i.i698 = getelementptr inbounds %String, ptr %979, i64 0, i32 1
  %980 = load i64, ptr %memberidx2.i.i698, align 4
  %981 = icmp slt i64 %978, %980
  br i1 %981, label %if.entry.i.i699, label %ifend.i734

if.entry.i.i699:                                  ; preds = %if.entry75
  %982 = load ptr, ptr %979, align 8
  %983 = getelementptr inbounds i8, ptr %982, i64 %978
  %984 = load i8, ptr %983, align 1
  %phi.cmp1098 = icmp eq i8 %984, 61
  br i1 %phi.cmp1098, label %end.i.i711, label %ifend.i734

end.i.i711:                                       ; preds = %if.entry.i.i699
  store i64 %978, ptr %memberidx.i.i696, align 4
  %985 = load ptr, ptr %979, align 8
  %986 = getelementptr inbounds i8, ptr %985, i64 %978
  %987 = load i8, ptr %986, align 1
  store i8 %987, ptr %0, align 1
  switch i8 %987, label %if.entry9.i.i718 [
    i8 10, label %if.entry.i11.i714
    i8 0, label %Lexer_advance.exit.i726
  ]

if.entry.i11.i714:                                ; preds = %end.i.i711
  %memberidx5.i.i712 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i712, align 4
  %memberidx6.i.i713 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i726.sink.split

if.entry9.i.i718:                                 ; preds = %end.i.i711
  %memberidx12.i.i717 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i726.sink.split

Lexer_advance.exit.i726.sink.split:               ; preds = %if.entry.i11.i714, %if.entry9.i.i718
  %memberidx12.i.i717.sink1318 = phi ptr [ %memberidx12.i.i717, %if.entry9.i.i718 ], [ %memberidx6.i.i713, %if.entry.i11.i714 ]
  %988 = load i64, ptr %memberidx12.i.i717.sink1318, align 4
  %989 = add nsw i64 %988, 1
  store i64 %989, ptr %memberidx12.i.i717.sink1318, align 4
  br label %Lexer_advance.exit.i726

Lexer_advance.exit.i726:                          ; preds = %Lexer_advance.exit.i726.sink.split, %end.i.i711
  %990 = tail call ptr @malloc(i32 16)
  %991 = tail call ptr @malloc(i32 32)
  %992 = load i64, ptr %memberidx.i.i696, align 4
  %993 = add nsw i64 %992, -1
  %994 = add nsw i64 %992, 1
  %memberidx2.i14.i720 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %995 = load i64, ptr %memberidx2.i14.i720, align 4
  %996 = add i64 %995, -2
  %memberidx3.i15.i721 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %997 = load i64, ptr %memberidx3.i15.i721, align 4
  store i64 %993, ptr %991, align 4
  %memberidx1.i.i16.i722 = getelementptr inbounds %FloRange, ptr %991, i64 0, i32 1
  store i64 %994, ptr %memberidx1.i.i16.i722, align 4
  %memberidx2.i.i17.i723 = getelementptr inbounds %FloRange, ptr %991, i64 0, i32 2
  store i64 %996, ptr %memberidx2.i.i17.i723, align 4
  %memberidx3.i.i18.i724 = getelementptr inbounds %FloRange, ptr %991, i64 0, i32 3
  store i64 %997, ptr %memberidx3.i.i18.i724, align 4
  store i64 40, ptr %990, align 4
  %memberidx1.i12.i725 = getelementptr inbounds %Token, ptr %990, i64 0, i32 1
  store ptr %991, ptr %memberidx1.i12.i725, align 8
  br label %common.ret

ifend.i734:                                       ; preds = %if.entry75, %if.entry.i.i699
  %998 = tail call ptr @malloc(i32 16)
  %999 = tail call ptr @malloc(i32 32)
  %1000 = load i64, ptr %memberidx.i.i696, align 4
  %1001 = add nsw i64 %1000, 1
  %memberidx2.i6.i728 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1002 = load i64, ptr %memberidx2.i6.i728, align 4
  %1003 = add i64 %1002, -1
  %memberidx3.i.i729 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1004 = load i64, ptr %memberidx3.i.i729, align 4
  store i64 %1000, ptr %999, align 4
  %memberidx1.i.i.i730 = getelementptr inbounds %FloRange, ptr %999, i64 0, i32 1
  store i64 %1001, ptr %memberidx1.i.i.i730, align 4
  %memberidx2.i.i.i731 = getelementptr inbounds %FloRange, ptr %999, i64 0, i32 2
  store i64 %1003, ptr %memberidx2.i.i.i731, align 4
  %memberidx3.i.i.i732 = getelementptr inbounds %FloRange, ptr %999, i64 0, i32 3
  store i64 %1004, ptr %memberidx3.i.i.i732, align 4
  store i64 47, ptr %998, align 4
  %memberidx1.i4.i733 = getelementptr inbounds %Token, ptr %998, i64 0, i32 1
  store ptr %999, ptr %memberidx1.i4.i733, align 8
  br label %common.ret

if.entry78:                                       ; preds = %ifend11
  %memberidx.i.i735 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1005 = load i64, ptr %memberidx.i.i735, align 4
  %1006 = add nsw i64 %1005, 1
  %memberidx1.i.i736 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1007 = load ptr, ptr %memberidx1.i.i736, align 8
  %memberidx2.i.i737 = getelementptr inbounds %String, ptr %1007, i64 0, i32 1
  %1008 = load i64, ptr %memberidx2.i.i737, align 4
  %1009 = icmp slt i64 %1006, %1008
  br i1 %1009, label %if.entry.i.i738, label %ifend3.i803

if.entry.i.i738:                                  ; preds = %if.entry78
  %1010 = load ptr, ptr %1007, align 8
  %1011 = getelementptr inbounds i8, ptr %1010, i64 %1006
  %1012 = load i8, ptr %1011, align 1
  switch i8 %1012, label %ifend3.i803 [
    i8 61, label %end.i.i750
    i8 62, label %end.i80.i781
  ]

end.i.i750:                                       ; preds = %if.entry.i.i738
  store i64 %1006, ptr %memberidx.i.i735, align 4
  %1013 = load ptr, ptr %1007, align 8
  %1014 = getelementptr inbounds i8, ptr %1013, i64 %1006
  %1015 = load i8, ptr %1014, align 1
  store i8 %1015, ptr %0, align 1
  switch i8 %1015, label %if.entry9.i.i757 [
    i8 10, label %if.entry.i23.i753
    i8 0, label %Lexer_advance.exit.i765
  ]

if.entry.i23.i753:                                ; preds = %end.i.i750
  %memberidx5.i.i751 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i751, align 4
  %memberidx6.i.i752 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i765.sink.split

if.entry9.i.i757:                                 ; preds = %end.i.i750
  %memberidx12.i.i756 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i765.sink.split

Lexer_advance.exit.i765.sink.split:               ; preds = %if.entry.i23.i753, %if.entry9.i.i757
  %memberidx12.i.i756.sink1320 = phi ptr [ %memberidx12.i.i756, %if.entry9.i.i757 ], [ %memberidx6.i.i752, %if.entry.i23.i753 ]
  %1016 = load i64, ptr %memberidx12.i.i756.sink1320, align 4
  %1017 = add nsw i64 %1016, 1
  store i64 %1017, ptr %memberidx12.i.i756.sink1320, align 4
  br label %Lexer_advance.exit.i765

Lexer_advance.exit.i765:                          ; preds = %Lexer_advance.exit.i765.sink.split, %end.i.i750
  %1018 = tail call ptr @malloc(i32 16)
  %1019 = tail call ptr @malloc(i32 32)
  %1020 = load i64, ptr %memberidx.i.i735, align 4
  %1021 = add nsw i64 %1020, -1
  %1022 = add nsw i64 %1020, 1
  %memberidx2.i32.i759 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1023 = load i64, ptr %memberidx2.i32.i759, align 4
  %1024 = add i64 %1023, -2
  %memberidx3.i33.i760 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1025 = load i64, ptr %memberidx3.i33.i760, align 4
  store i64 %1021, ptr %1019, align 4
  %memberidx1.i.i34.i761 = getelementptr inbounds %FloRange, ptr %1019, i64 0, i32 1
  store i64 %1022, ptr %memberidx1.i.i34.i761, align 4
  %memberidx2.i.i35.i762 = getelementptr inbounds %FloRange, ptr %1019, i64 0, i32 2
  store i64 %1024, ptr %memberidx2.i.i35.i762, align 4
  %memberidx3.i.i36.i763 = getelementptr inbounds %FloRange, ptr %1019, i64 0, i32 3
  store i64 %1025, ptr %memberidx3.i.i36.i763, align 4
  store i64 44, ptr %1018, align 4
  %memberidx1.i37.i764 = getelementptr inbounds %Token, ptr %1018, i64 0, i32 1
  store ptr %1019, ptr %memberidx1.i37.i764, align 8
  br label %common.ret

end.i80.i781:                                     ; preds = %if.entry.i.i738
  store i64 %1006, ptr %memberidx.i.i735, align 4
  %1026 = load ptr, ptr %1007, align 8
  %1027 = getelementptr inbounds i8, ptr %1026, i64 %1006
  %1028 = load i8, ptr %1027, align 1
  store i8 %1028, ptr %0, align 1
  switch i8 %1028, label %if.entry9.i87.i788 [
    i8 10, label %if.entry.i83.i784
    i8 0, label %Lexer_advance.exit88.i792
  ]

if.entry.i83.i784:                                ; preds = %end.i80.i781
  %memberidx5.i81.i782 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i782, align 4
  %memberidx6.i82.i783 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i792.sink.split

if.entry9.i87.i788:                               ; preds = %end.i80.i781
  %memberidx12.i86.i787 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i792.sink.split

Lexer_advance.exit88.i792.sink.split:             ; preds = %if.entry.i83.i784, %if.entry9.i87.i788
  %memberidx12.i86.i787.sink1322 = phi ptr [ %memberidx12.i86.i787, %if.entry9.i87.i788 ], [ %memberidx6.i82.i783, %if.entry.i83.i784 ]
  %1029 = load i64, ptr %memberidx12.i86.i787.sink1322, align 4
  %1030 = add nsw i64 %1029, 1
  store i64 %1030, ptr %memberidx12.i86.i787.sink1322, align 4
  br label %Lexer_advance.exit88.i792

Lexer_advance.exit88.i792:                        ; preds = %Lexer_advance.exit88.i792.sink.split, %end.i80.i781
  %1031 = add nsw i64 %1005, 2
  %1032 = load i64, ptr %memberidx2.i.i737, align 4
  %1033 = icmp slt i64 %1031, %1032
  br i1 %1033, label %if.entry.i71.i793, label %ifend6.i835

if.entry.i71.i793:                                ; preds = %Lexer_advance.exit88.i792
  %1034 = load ptr, ptr %1007, align 8
  %1035 = getelementptr inbounds i8, ptr %1034, i64 %1031
  %1036 = load i8, ptr %1035, align 1
  %phi.cmp1095 = icmp eq i8 %1036, 61
  br i1 %phi.cmp1095, label %end.i45.i812, label %ifend6.i835

ifend3.i803:                                      ; preds = %if.entry.i.i738, %if.entry78
  %1037 = tail call ptr @malloc(i32 16)
  %1038 = tail call ptr @malloc(i32 32)
  %1039 = load i64, ptr %memberidx.i.i735, align 4
  %1040 = add nsw i64 %1039, 1
  %memberidx2.i56.i797 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1041 = load i64, ptr %memberidx2.i56.i797, align 4
  %1042 = add i64 %1041, -1
  %memberidx3.i57.i798 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1043 = load i64, ptr %memberidx3.i57.i798, align 4
  store i64 %1039, ptr %1038, align 4
  %memberidx1.i.i58.i799 = getelementptr inbounds %FloRange, ptr %1038, i64 0, i32 1
  store i64 %1040, ptr %memberidx1.i.i58.i799, align 4
  %memberidx2.i.i59.i800 = getelementptr inbounds %FloRange, ptr %1038, i64 0, i32 2
  store i64 %1042, ptr %memberidx2.i.i59.i800, align 4
  %memberidx3.i.i60.i801 = getelementptr inbounds %FloRange, ptr %1038, i64 0, i32 3
  store i64 %1043, ptr %memberidx3.i.i60.i801, align 4
  store i64 41, ptr %1037, align 4
  %memberidx1.i54.i802 = getelementptr inbounds %Token, ptr %1037, i64 0, i32 1
  store ptr %1038, ptr %memberidx1.i54.i802, align 8
  br label %common.ret

end.i45.i812:                                     ; preds = %if.entry.i71.i793
  store i64 %1031, ptr %memberidx.i.i735, align 4
  %1044 = load ptr, ptr %1007, align 8
  %1045 = getelementptr inbounds i8, ptr %1044, i64 %1031
  %1046 = load i8, ptr %1045, align 1
  store i8 %1046, ptr %0, align 1
  switch i8 %1046, label %if.entry9.i52.i819 [
    i8 10, label %if.entry.i48.i815
    i8 0, label %Lexer_advance.exit53.i827
  ]

if.entry.i48.i815:                                ; preds = %end.i45.i812
  %memberidx5.i46.i813 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i813, align 4
  %memberidx6.i47.i814 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit53.i827.sink.split

if.entry9.i52.i819:                               ; preds = %end.i45.i812
  %memberidx12.i51.i818 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit53.i827.sink.split

Lexer_advance.exit53.i827.sink.split:             ; preds = %if.entry.i48.i815, %if.entry9.i52.i819
  %memberidx12.i51.i818.sink1324 = phi ptr [ %memberidx12.i51.i818, %if.entry9.i52.i819 ], [ %memberidx6.i47.i814, %if.entry.i48.i815 ]
  %1047 = load i64, ptr %memberidx12.i51.i818.sink1324, align 4
  %1048 = add nsw i64 %1047, 1
  store i64 %1048, ptr %memberidx12.i51.i818.sink1324, align 4
  br label %Lexer_advance.exit53.i827

Lexer_advance.exit53.i827:                        ; preds = %Lexer_advance.exit53.i827.sink.split, %end.i45.i812
  %1049 = tail call ptr @malloc(i32 16)
  %1050 = tail call ptr @malloc(i32 32)
  %1051 = load i64, ptr %memberidx.i.i735, align 4
  %1052 = add nsw i64 %1051, -2
  %1053 = add nsw i64 %1051, 1
  %memberidx2.i26.i821 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1054 = load i64, ptr %memberidx2.i26.i821, align 4
  %1055 = add i64 %1054, -3
  %memberidx3.i27.i822 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1056 = load i64, ptr %memberidx3.i27.i822, align 4
  store i64 %1052, ptr %1050, align 4
  %memberidx1.i.i28.i823 = getelementptr inbounds %FloRange, ptr %1050, i64 0, i32 1
  store i64 %1053, ptr %memberidx1.i.i28.i823, align 4
  %memberidx2.i.i29.i824 = getelementptr inbounds %FloRange, ptr %1050, i64 0, i32 2
  store i64 %1055, ptr %memberidx2.i.i29.i824, align 4
  %memberidx3.i.i30.i825 = getelementptr inbounds %FloRange, ptr %1050, i64 0, i32 3
  store i64 %1056, ptr %memberidx3.i.i30.i825, align 4
  store i64 21, ptr %1049, align 4
  %memberidx1.i24.i826 = getelementptr inbounds %Token, ptr %1049, i64 0, i32 1
  store ptr %1050, ptr %memberidx1.i24.i826, align 8
  br label %common.ret

ifend6.i835:                                      ; preds = %Lexer_advance.exit88.i792, %if.entry.i71.i793
  %1057 = tail call ptr @malloc(i32 16)
  %1058 = tail call ptr @malloc(i32 32)
  %1059 = load i64, ptr %memberidx.i.i735, align 4
  %1060 = add nsw i64 %1059, -1
  %1061 = add nsw i64 %1059, 1
  %memberidx2.i18.i829 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1062 = load i64, ptr %memberidx2.i18.i829, align 4
  %1063 = add i64 %1062, -2
  %memberidx3.i.i830 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1064 = load i64, ptr %memberidx3.i.i830, align 4
  store i64 %1060, ptr %1058, align 4
  %memberidx1.i.i.i831 = getelementptr inbounds %FloRange, ptr %1058, i64 0, i32 1
  store i64 %1061, ptr %memberidx1.i.i.i831, align 4
  %memberidx2.i.i.i832 = getelementptr inbounds %FloRange, ptr %1058, i64 0, i32 2
  store i64 %1063, ptr %memberidx2.i.i.i832, align 4
  %memberidx3.i.i.i833 = getelementptr inbounds %FloRange, ptr %1058, i64 0, i32 3
  store i64 %1064, ptr %memberidx3.i.i.i833, align 4
  store i64 49, ptr %1057, align 4
  %memberidx1.i16.i834 = getelementptr inbounds %Token, ptr %1057, i64 0, i32 1
  store ptr %1058, ptr %memberidx1.i16.i834, align 8
  br label %common.ret

if.entry81:                                       ; preds = %ifend11
  %memberidx.i.i836 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1065 = load i64, ptr %memberidx.i.i836, align 4
  %1066 = add nsw i64 %1065, 1
  %memberidx1.i.i837 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1067 = load ptr, ptr %memberidx1.i.i837, align 8
  %memberidx2.i.i838 = getelementptr inbounds %String, ptr %1067, i64 0, i32 1
  %1068 = load i64, ptr %memberidx2.i.i838, align 4
  %1069 = icmp slt i64 %1066, %1068
  br i1 %1069, label %if.entry.i.i839, label %ifend3.i904

if.entry.i.i839:                                  ; preds = %if.entry81
  %1070 = load ptr, ptr %1067, align 8
  %1071 = getelementptr inbounds i8, ptr %1070, i64 %1066
  %1072 = load i8, ptr %1071, align 1
  switch i8 %1072, label %ifend3.i904 [
    i8 61, label %end.i.i851
    i8 60, label %end.i80.i882
  ]

end.i.i851:                                       ; preds = %if.entry.i.i839
  store i64 %1066, ptr %memberidx.i.i836, align 4
  %1073 = load ptr, ptr %1067, align 8
  %1074 = getelementptr inbounds i8, ptr %1073, i64 %1066
  %1075 = load i8, ptr %1074, align 1
  store i8 %1075, ptr %0, align 1
  switch i8 %1075, label %if.entry9.i.i858 [
    i8 10, label %if.entry.i23.i854
    i8 0, label %Lexer_advance.exit.i866
  ]

if.entry.i23.i854:                                ; preds = %end.i.i851
  %memberidx5.i.i852 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i852, align 4
  %memberidx6.i.i853 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i866.sink.split

if.entry9.i.i858:                                 ; preds = %end.i.i851
  %memberidx12.i.i857 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i866.sink.split

Lexer_advance.exit.i866.sink.split:               ; preds = %if.entry.i23.i854, %if.entry9.i.i858
  %memberidx12.i.i857.sink1326 = phi ptr [ %memberidx12.i.i857, %if.entry9.i.i858 ], [ %memberidx6.i.i853, %if.entry.i23.i854 ]
  %1076 = load i64, ptr %memberidx12.i.i857.sink1326, align 4
  %1077 = add nsw i64 %1076, 1
  store i64 %1077, ptr %memberidx12.i.i857.sink1326, align 4
  br label %Lexer_advance.exit.i866

Lexer_advance.exit.i866:                          ; preds = %Lexer_advance.exit.i866.sink.split, %end.i.i851
  %1078 = tail call ptr @malloc(i32 16)
  %1079 = tail call ptr @malloc(i32 32)
  %1080 = load i64, ptr %memberidx.i.i836, align 4
  %1081 = add nsw i64 %1080, -1
  %1082 = add nsw i64 %1080, 1
  %memberidx2.i32.i860 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1083 = load i64, ptr %memberidx2.i32.i860, align 4
  %1084 = add i64 %1083, -2
  %memberidx3.i33.i861 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1085 = load i64, ptr %memberidx3.i33.i861, align 4
  store i64 %1081, ptr %1079, align 4
  %memberidx1.i.i34.i862 = getelementptr inbounds %FloRange, ptr %1079, i64 0, i32 1
  store i64 %1082, ptr %memberidx1.i.i34.i862, align 4
  %memberidx2.i.i35.i863 = getelementptr inbounds %FloRange, ptr %1079, i64 0, i32 2
  store i64 %1084, ptr %memberidx2.i.i35.i863, align 4
  %memberidx3.i.i36.i864 = getelementptr inbounds %FloRange, ptr %1079, i64 0, i32 3
  store i64 %1085, ptr %memberidx3.i.i36.i864, align 4
  store i64 43, ptr %1078, align 4
  %memberidx1.i37.i865 = getelementptr inbounds %Token, ptr %1078, i64 0, i32 1
  store ptr %1079, ptr %memberidx1.i37.i865, align 8
  br label %common.ret

end.i80.i882:                                     ; preds = %if.entry.i.i839
  store i64 %1066, ptr %memberidx.i.i836, align 4
  %1086 = load ptr, ptr %1067, align 8
  %1087 = getelementptr inbounds i8, ptr %1086, i64 %1066
  %1088 = load i8, ptr %1087, align 1
  store i8 %1088, ptr %0, align 1
  switch i8 %1088, label %if.entry9.i87.i889 [
    i8 10, label %if.entry.i83.i885
    i8 0, label %Lexer_advance.exit88.i893
  ]

if.entry.i83.i885:                                ; preds = %end.i80.i882
  %memberidx5.i81.i883 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i883, align 4
  %memberidx6.i82.i884 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i893.sink.split

if.entry9.i87.i889:                               ; preds = %end.i80.i882
  %memberidx12.i86.i888 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i893.sink.split

Lexer_advance.exit88.i893.sink.split:             ; preds = %if.entry.i83.i885, %if.entry9.i87.i889
  %memberidx12.i86.i888.sink1328 = phi ptr [ %memberidx12.i86.i888, %if.entry9.i87.i889 ], [ %memberidx6.i82.i884, %if.entry.i83.i885 ]
  %1089 = load i64, ptr %memberidx12.i86.i888.sink1328, align 4
  %1090 = add nsw i64 %1089, 1
  store i64 %1090, ptr %memberidx12.i86.i888.sink1328, align 4
  br label %Lexer_advance.exit88.i893

Lexer_advance.exit88.i893:                        ; preds = %Lexer_advance.exit88.i893.sink.split, %end.i80.i882
  %1091 = add nsw i64 %1065, 2
  %1092 = load i64, ptr %memberidx2.i.i838, align 4
  %1093 = icmp slt i64 %1091, %1092
  br i1 %1093, label %if.entry.i71.i894, label %ifend6.i936

if.entry.i71.i894:                                ; preds = %Lexer_advance.exit88.i893
  %1094 = load ptr, ptr %1067, align 8
  %1095 = getelementptr inbounds i8, ptr %1094, i64 %1091
  %1096 = load i8, ptr %1095, align 1
  %phi.cmp1089 = icmp eq i8 %1096, 61
  br i1 %phi.cmp1089, label %end.i45.i913, label %ifend6.i936

ifend3.i904:                                      ; preds = %if.entry.i.i839, %if.entry81
  %1097 = tail call ptr @malloc(i32 16)
  %1098 = tail call ptr @malloc(i32 32)
  %1099 = load i64, ptr %memberidx.i.i836, align 4
  %1100 = add nsw i64 %1099, 1
  %memberidx2.i56.i898 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1101 = load i64, ptr %memberidx2.i56.i898, align 4
  %1102 = add i64 %1101, -1
  %memberidx3.i57.i899 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1103 = load i64, ptr %memberidx3.i57.i899, align 4
  store i64 %1099, ptr %1098, align 4
  %memberidx1.i.i58.i900 = getelementptr inbounds %FloRange, ptr %1098, i64 0, i32 1
  store i64 %1100, ptr %memberidx1.i.i58.i900, align 4
  %memberidx2.i.i59.i901 = getelementptr inbounds %FloRange, ptr %1098, i64 0, i32 2
  store i64 %1102, ptr %memberidx2.i.i59.i901, align 4
  %memberidx3.i.i60.i902 = getelementptr inbounds %FloRange, ptr %1098, i64 0, i32 3
  store i64 %1103, ptr %memberidx3.i.i60.i902, align 4
  store i64 42, ptr %1097, align 4
  %memberidx1.i54.i903 = getelementptr inbounds %Token, ptr %1097, i64 0, i32 1
  store ptr %1098, ptr %memberidx1.i54.i903, align 8
  br label %common.ret

end.i45.i913:                                     ; preds = %if.entry.i71.i894
  store i64 %1091, ptr %memberidx.i.i836, align 4
  %1104 = load ptr, ptr %1067, align 8
  %1105 = getelementptr inbounds i8, ptr %1104, i64 %1091
  %1106 = load i8, ptr %1105, align 1
  store i8 %1106, ptr %0, align 1
  switch i8 %1106, label %if.entry9.i52.i920 [
    i8 10, label %if.entry.i48.i916
    i8 0, label %Lexer_advance.exit53.i928
  ]

if.entry.i48.i916:                                ; preds = %end.i45.i913
  %memberidx5.i46.i914 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i914, align 4
  %memberidx6.i47.i915 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit53.i928.sink.split

if.entry9.i52.i920:                               ; preds = %end.i45.i913
  %memberidx12.i51.i919 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit53.i928.sink.split

Lexer_advance.exit53.i928.sink.split:             ; preds = %if.entry.i48.i916, %if.entry9.i52.i920
  %memberidx12.i51.i919.sink1330 = phi ptr [ %memberidx12.i51.i919, %if.entry9.i52.i920 ], [ %memberidx6.i47.i915, %if.entry.i48.i916 ]
  %1107 = load i64, ptr %memberidx12.i51.i919.sink1330, align 4
  %1108 = add nsw i64 %1107, 1
  store i64 %1108, ptr %memberidx12.i51.i919.sink1330, align 4
  br label %Lexer_advance.exit53.i928

Lexer_advance.exit53.i928:                        ; preds = %Lexer_advance.exit53.i928.sink.split, %end.i45.i913
  %1109 = tail call ptr @malloc(i32 16)
  %1110 = tail call ptr @malloc(i32 32)
  %1111 = load i64, ptr %memberidx.i.i836, align 4
  %1112 = add nsw i64 %1111, -2
  %1113 = add nsw i64 %1111, 1
  %memberidx2.i26.i922 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1114 = load i64, ptr %memberidx2.i26.i922, align 4
  %1115 = add i64 %1114, -3
  %memberidx3.i27.i923 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1116 = load i64, ptr %memberidx3.i27.i923, align 4
  store i64 %1112, ptr %1110, align 4
  %memberidx1.i.i28.i924 = getelementptr inbounds %FloRange, ptr %1110, i64 0, i32 1
  store i64 %1113, ptr %memberidx1.i.i28.i924, align 4
  %memberidx2.i.i29.i925 = getelementptr inbounds %FloRange, ptr %1110, i64 0, i32 2
  store i64 %1115, ptr %memberidx2.i.i29.i925, align 4
  %memberidx3.i.i30.i926 = getelementptr inbounds %FloRange, ptr %1110, i64 0, i32 3
  store i64 %1116, ptr %memberidx3.i.i30.i926, align 4
  store i64 22, ptr %1109, align 4
  %memberidx1.i24.i927 = getelementptr inbounds %Token, ptr %1109, i64 0, i32 1
  store ptr %1110, ptr %memberidx1.i24.i927, align 8
  br label %common.ret

ifend6.i936:                                      ; preds = %Lexer_advance.exit88.i893, %if.entry.i71.i894
  %1117 = tail call ptr @malloc(i32 16)
  %1118 = tail call ptr @malloc(i32 32)
  %1119 = load i64, ptr %memberidx.i.i836, align 4
  %1120 = add nsw i64 %1119, -1
  %1121 = add nsw i64 %1119, 1
  %memberidx2.i18.i930 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1122 = load i64, ptr %memberidx2.i18.i930, align 4
  %1123 = add i64 %1122, -2
  %memberidx3.i.i931 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1124 = load i64, ptr %memberidx3.i.i931, align 4
  store i64 %1120, ptr %1118, align 4
  %memberidx1.i.i.i932 = getelementptr inbounds %FloRange, ptr %1118, i64 0, i32 1
  store i64 %1121, ptr %memberidx1.i.i.i932, align 4
  %memberidx2.i.i.i933 = getelementptr inbounds %FloRange, ptr %1118, i64 0, i32 2
  store i64 %1123, ptr %memberidx2.i.i.i933, align 4
  %memberidx3.i.i.i934 = getelementptr inbounds %FloRange, ptr %1118, i64 0, i32 3
  store i64 %1124, ptr %memberidx3.i.i.i934, align 4
  store i64 48, ptr %1117, align 4
  %memberidx1.i16.i935 = getelementptr inbounds %Token, ptr %1117, i64 0, i32 1
  store ptr %1118, ptr %memberidx1.i16.i935, align 8
  br label %common.ret

if.entry84:                                       ; preds = %ifend11
  %memberidx.i.i937 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1125 = load i64, ptr %memberidx.i.i937, align 4
  %1126 = add nsw i64 %1125, 1
  %memberidx1.i.i938 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1127 = load ptr, ptr %memberidx1.i.i938, align 8
  %memberidx2.i.i939 = getelementptr inbounds %String, ptr %1127, i64 0, i32 1
  %1128 = load i64, ptr %memberidx2.i.i939, align 4
  %1129 = icmp slt i64 %1126, %1128
  br i1 %1129, label %if.entry.i.i940, label %Lexer_dot_token.exit

if.entry.i.i940:                                  ; preds = %if.entry84
  %1130 = load ptr, ptr %1127, align 8
  %1131 = getelementptr inbounds i8, ptr %1130, i64 %1126
  %1132 = load i8, ptr %1131, align 1
  %phi.cmp = icmp eq i8 %1132, 46
  br i1 %phi.cmp, label %end.i.i951, label %Lexer_dot_token.exit

end.i.i951:                                       ; preds = %if.entry.i.i940
  store i64 %1126, ptr %memberidx.i.i937, align 4
  %1133 = load ptr, ptr %1127, align 8
  %1134 = getelementptr inbounds i8, ptr %1133, i64 %1126
  %1135 = load i8, ptr %1134, align 1
  store i8 %1135, ptr %0, align 1
  switch i8 %1135, label %if.entry9.i.i958 [
    i8 10, label %if.entry.i11.i954
    i8 0, label %Lexer_dot_token.exit
  ]

if.entry.i11.i954:                                ; preds = %end.i.i951
  %memberidx5.i.i952 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i952, align 4
  %memberidx6.i.i953 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_dot_token.exit.sink.split

if.entry9.i.i958:                                 ; preds = %end.i.i951
  %memberidx12.i.i957 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_dot_token.exit.sink.split

Lexer_dot_token.exit.sink.split:                  ; preds = %if.entry9.i.i958, %if.entry.i11.i954
  %memberidx6.i.i953.sink1332 = phi ptr [ %memberidx6.i.i953, %if.entry.i11.i954 ], [ %memberidx12.i.i957, %if.entry9.i.i958 ]
  %1136 = load i64, ptr %memberidx6.i.i953.sink1332, align 4
  %1137 = add nsw i64 %1136, 1
  store i64 %1137, ptr %memberidx6.i.i953.sink1332, align 4
  br label %Lexer_dot_token.exit

Lexer_dot_token.exit:                             ; preds = %Lexer_dot_token.exit.sink.split, %if.entry84, %end.i.i951, %if.entry.i.i940
  %length.0.i960 = phi i64 [ 1, %if.entry.i.i940 ], [ 2, %end.i.i951 ], [ 1, %if.entry84 ], [ 2, %Lexer_dot_token.exit.sink.split ]
  %token.0.i = phi i64 [ 50, %if.entry.i.i940 ], [ 52, %end.i.i951 ], [ 50, %if.entry84 ], [ 52, %Lexer_dot_token.exit.sink.split ]
  %1138 = tail call ptr @malloc(i32 16)
  %1139 = tail call ptr @malloc(i32 32)
  %1140 = load i64, ptr %memberidx.i.i937, align 4
  %1141 = sub nsw i64 1, %length.0.i960
  %1142 = add i64 %1141, %1140
  %1143 = add nsw i64 %1140, 1
  %memberidx2.i6.i962 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1144 = load i64, ptr %memberidx2.i6.i962, align 4
  %1145 = sub nuw i64 %1144, %length.0.i960
  %memberidx3.i.i963 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1146 = load i64, ptr %memberidx3.i.i963, align 4
  store i64 %1142, ptr %1139, align 4
  %memberidx1.i.i.i964 = getelementptr inbounds %FloRange, ptr %1139, i64 0, i32 1
  store i64 %1143, ptr %memberidx1.i.i.i964, align 4
  %memberidx2.i.i.i965 = getelementptr inbounds %FloRange, ptr %1139, i64 0, i32 2
  store i64 %1145, ptr %memberidx2.i.i.i965, align 4
  %memberidx3.i.i.i966 = getelementptr inbounds %FloRange, ptr %1139, i64 0, i32 3
  store i64 %1146, ptr %memberidx3.i.i.i966, align 4
  store i64 %token.0.i, ptr %1138, align 4
  %memberidx1.i4.i967 = getelementptr inbounds %Token, ptr %1138, i64 0, i32 1
  store ptr %1139, ptr %memberidx1.i4.i967, align 8
  br label %common.ret

if.entry87:                                       ; preds = %ifend11
  %1147 = tail call ptr @malloc(i32 16)
  %1148 = tail call ptr @malloc(i32 32)
  %memberidx90 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1149 = load i64, ptr %memberidx90, align 4
  %memberidx91 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1150 = load i64, ptr %memberidx91, align 4
  %memberidx2.i970 = getelementptr inbounds %FloRange, ptr %1148, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %1148, i8 0, i64 16, i1 false)
  store i64 %1149, ptr %memberidx2.i970, align 4
  %memberidx3.i971 = getelementptr inbounds %FloRange, ptr %1148, i64 0, i32 3
  store i64 %1150, ptr %memberidx3.i971, align 4
  store i64 46, ptr %1147, align 4
  %memberidx1.i972 = getelementptr inbounds %Token, ptr %1147, i64 0, i32 1
  store ptr %1148, ptr %memberidx1.i972, align 8
  br label %common.ret

ifend89:                                          ; preds = %ifend11
  %memberidx92 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1151 = load ptr, ptr %memberidx92, align 8
  %memberidx93 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1152 = load i64, ptr %memberidx93, align 4
  %1153 = tail call ptr @malloc(i32 1)
  %1154 = load ptr, ptr %1151, align 8
  %1155 = getelementptr inbounds i8, ptr %1154, i64 %1152
  %1156 = load i8, ptr %1155, align 536870912
  store i8 %1156, ptr %1153, align 8
  %1157 = tail call ptr @malloc(i32 24)
  store ptr %1153, ptr %1157, align 8
  %memberidx1.i.i973 = getelementptr inbounds %String, ptr %1157, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i973, align 4
  %memberidx2.i.i974 = getelementptr inbounds %String, ptr %1157, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i974, align 4
  %memberidx94 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 2
  %1158 = load ptr, ptr %memberidx94, align 8
  %1159 = tail call ptr @malloc(i32 24)
  %1160 = tail call ptr @malloc(i32 2)
  %1161 = load i8, ptr %1153, align 8
  store i8 %1161, ptr %1160, align 8
  %1162 = getelementptr inbounds i8, ptr %1160, i64 1
  store i8 0, ptr %1162, align 1
  %1163 = alloca ptr, align 8
  %1164 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %1163, ptr nonnull @60, ptr nonnull %1160)
  %1165 = load ptr, ptr %1163, align 8
  %1166 = tail call ptr @malloc(i32 24)
  store ptr %1165, ptr %1166, align 8
  %memberidx1.i512 = getelementptr inbounds %String, ptr %1166, i64 0, i32 1
  store i64 %1164, ptr %memberidx1.i512, align 4
  %memberidx2.i513 = getelementptr inbounds %String, ptr %1166, i64 0, i32 2
  store i64 %1164, ptr %memberidx2.i513, align 4
  tail call void @free(ptr %1160)
  %1167 = call ptr @malloc(i32 32)
  %1168 = load i64, ptr %memberidx93, align 4
  %1169 = add nsw i64 %1168, 1
  %memberidx2.i175 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1170 = load i64, ptr %memberidx2.i175, align 4
  %1171 = add i64 %1170, -1
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1172 = load i64, ptr %memberidx3.i, align 4
  store i64 %1168, ptr %1167, align 4
  %memberidx1.i.i176 = getelementptr inbounds %FloRange, ptr %1167, i64 0, i32 1
  store i64 %1169, ptr %memberidx1.i.i176, align 4
  %memberidx2.i.i177 = getelementptr inbounds %FloRange, ptr %1167, i64 0, i32 2
  store i64 %1171, ptr %memberidx2.i.i177, align 4
  %memberidx3.i.i178 = getelementptr inbounds %FloRange, ptr %1167, i64 0, i32 3
  store i64 %1172, ptr %memberidx3.i.i178, align 4
  store i64 0, ptr %1159, align 4
  %memberidx1.i165 = getelementptr inbounds %FloError, ptr %1159, i64 0, i32 2
  store ptr %1167, ptr %memberidx1.i165, align 8
  %memberidx2.i166 = getelementptr inbounds %FloError, ptr %1159, i64 0, i32 1
  store ptr %1166, ptr %memberidx2.i166, align 8
  %memberidx.i = getelementptr inbounds %Array_FloError_, ptr %1158, i64 0, i32 1
  %1173 = load i64, ptr %memberidx.i, align 4
  %1174 = add i64 %1173, 1
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %1158, i64 0, i32 2
  %1175 = load i64, ptr %memberidx.i.i, align 4
  %1176 = icmp slt i64 %1175, %1174
  %.pre = load ptr, ptr %1158, align 8
  br i1 %1176, label %while.body.i.i, label %Array_FloError____sl__.exit

while.body.i.i:                                   ; preds = %ifend89, %while.body.i.i
  %1177 = phi ptr [ %1181, %while.body.i.i ], [ %.pre, %ifend89 ]
  %1178 = phi i64 [ %1182, %while.body.i.i ], [ %1175, %ifend89 ]
  %1179 = shl nuw i64 %1178, 1
  store i64 %1179, ptr %memberidx.i.i, align 4
  %1180 = shl i64 %1178, 4
  %1181 = call ptr @realloc(ptr %1177, i64 %1180)
  store ptr %1181, ptr %1158, align 8
  %1182 = load i64, ptr %memberidx.i.i, align 4
  %1183 = icmp slt i64 %1182, %1174
  br i1 %1183, label %while.body.i.i, label %Array_FloError____sl__.exit.loopexit

Array_FloError____sl__.exit.loopexit:             ; preds = %while.body.i.i
  %.pre1223 = load i64, ptr %memberidx.i, align 4
  %.pre1259 = add nsw i64 %.pre1223, 1
  br label %Array_FloError____sl__.exit

Array_FloError____sl__.exit:                      ; preds = %ifend89, %Array_FloError____sl__.exit.loopexit
  %.pre-phi1260 = phi i64 [ %.pre1259, %Array_FloError____sl__.exit.loopexit ], [ %1174, %ifend89 ]
  %1184 = phi ptr [ %1181, %Array_FloError____sl__.exit.loopexit ], [ %.pre, %ifend89 ]
  %1185 = phi i64 [ %.pre1223, %Array_FloError____sl__.exit.loopexit ], [ %1173, %ifend89 ]
  store i64 %.pre-phi1260, ptr %memberidx.i, align 4
  %1186 = getelementptr inbounds ptr, ptr %1184, i64 %1185
  store ptr %1159, ptr %1186, align 8
  call void @free(ptr %1153)
  tail call void @free(ptr %1157)
  br label %common.ret
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare double @atof(ptr nocapture) local_unnamed_addr #7

define internal fastcc noalias ptr @Parser_parse(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Parser, align 8
  store ptr %0, ptr %3, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i67 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx2.i67, align 4
  %5 = icmp sgt i64 %4, -1
  br i1 %5, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %2
  %memberidx3.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  store i64 0, ptr %memberidx2.i, align 8
  %6 = load ptr, ptr %0, align 8
  %7 = load ptr, ptr %6, align 8
  store ptr %7, ptr %memberidx3.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %2, %if.entry.i
  %8 = phi i64 [ -1, %2 ], [ 0, %if.entry.i ]
  %9 = phi ptr [ undef, %2 ], [ %7, %if.entry.i ]
  %10 = tail call ptr @malloc(i32 56)
  tail call fastcc void @ModuleAST_constructor(ptr %10)
  %memberidx.i68 = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 1
  %11 = load i64, ptr %9, align 4
  %12 = icmp eq i64 %11, 33
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %while.body.i.lr.ph, label %while.entry.preheader

while.body.i.lr.ph:                               ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx2.i67, align 4
  %17 = icmp slt i64 %8, %16
  br i1 %17, label %while.body.i, label %while.body.i.us

while.body.i.us:                                  ; preds = %while.body.i.lr.ph, %while.body.i.us
  br label %while.body.i.us

while.entry.preheader:                            ; preds = %Parser_advance.exit.i, %Parser_advance.exit
  %18 = phi i64 [ %11, %Parser_advance.exit ], [ %30, %Parser_advance.exit.i ]
  %19 = phi ptr [ %9, %Parser_advance.exit ], [ %32, %Parser_advance.exit.i ]
  %20 = icmp ne i64 %18, 46
  %21 = and i1 %20, %14
  br i1 %21, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %while.entry.preheader
  %memberidx37 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 6
  %memberidx32 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 5
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 4
  %memberidx20 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 3
  %memberidx14 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 2
  %memberidx8 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 1
  br label %while.body

while.body.i:                                     ; preds = %while.body.i.lr.ph, %Parser_advance.exit.i
  %22 = phi i64 [ %30, %Parser_advance.exit.i ], [ 33, %while.body.i.lr.ph ]
  %23 = phi ptr [ %32, %Parser_advance.exit.i ], [ %9, %while.body.i.lr.ph ]
  %24 = phi i64 [ %33, %Parser_advance.exit.i ], [ %8, %while.body.i.lr.ph ]
  %25 = icmp slt i64 %24, %16
  br i1 %25, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.body.i
  %26 = add nsw i64 %24, 1
  store i64 %26, ptr %memberidx2.i, align 8
  %27 = load ptr, ptr %0, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %26
  %29 = load ptr, ptr %28, align 8
  store ptr %29, ptr %memberidx.i68, align 8
  %.pre = load i64, ptr %29, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.body.i
  %30 = phi i64 [ %.pre, %if.entry.i.i ], [ %22, %while.body.i ]
  %31 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.body.i ]
  %32 = phi ptr [ %29, %if.entry.i.i ], [ %23, %while.body.i ]
  %33 = phi i64 [ %26, %if.entry.i.i ], [ %24, %while.body.i ]
  %34 = icmp eq i64 %31, 33
  br i1 %34, label %while.body.i, label %while.entry.preheader

while.entry.loopexit:                             ; preds = %Parser_advance.exit.i109, %ifend
  %35 = phi i64 [ %141, %ifend ], [ %155, %Parser_advance.exit.i109 ]
  %36 = phi i64 [ %139, %ifend ], [ %156, %Parser_advance.exit.i109 ]
  %37 = phi ptr [ %138, %ifend ], [ %159, %Parser_advance.exit.i109 ]
  %38 = icmp ne i64 %36, 46
  %39 = icmp eq i64 %35, 0
  %40 = and i1 %38, %39
  br i1 %40, label %while.body, label %while.end

while.end:                                        ; preds = %while.entry.loopexit, %while.entry.preheader, %Parser_error.exit
  ret ptr %10

while.body:                                       ; preds = %while.body.lr.ph, %while.entry.loopexit
  %41 = phi i64 [ %18, %while.body.lr.ph ], [ %36, %while.entry.loopexit ]
  %42 = phi ptr [ %19, %while.body.lr.ph ], [ %37, %while.entry.loopexit ]
  switch i64 %41, label %else35 [
    i64 61, label %if.entry
    i64 70, label %if.entry5
    i64 71, label %if.entry11
    i64 65, label %if.entry17
    i64 54, label %if.entry23
    i64 55, label %if.entry29
    i64 53, label %if.entry.i219
  ]

if.entry:                                         ; preds = %while.body
  %43 = load i64, ptr %memberidx2.i, align 8
  %44 = load ptr, ptr %3, align 8
  %memberidx2.i77 = getelementptr inbounds %Array_Token_, ptr %44, i64 0, i32 1
  %45 = load i64, ptr %memberidx2.i77, align 4
  %46 = icmp slt i64 %43, %45
  br i1 %46, label %if.entry.i79, label %Parser_advance.exit80

if.entry.i79:                                     ; preds = %if.entry
  %47 = add nsw i64 %43, 1
  store i64 %47, ptr %memberidx2.i, align 8
  %48 = load ptr, ptr %44, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  store ptr %50, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit80

Parser_advance.exit80:                            ; preds = %if.entry, %if.entry.i79
  %51 = load ptr, ptr %10, align 8
  %52 = call ptr @malloc(i32 33)
  %memberidx.i.i83 = getelementptr inbounds %FunctionDeclarationNode, ptr %52, i64 0, i32 1
  %53 = call ptr @malloc(i32 24)
  %memberidx.i.i.i84 = getelementptr inbounds %Array_ArgNode_, ptr %53, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i84, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %53, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i, align 4
  %54 = call ptr @malloc(i32 64)
  store ptr %54, ptr %53, align 8
  store i64 0, ptr %memberidx.i.i.i84, align 4
  store ptr %53, ptr %memberidx.i.i83, align 8
  %memberidx3.i.i86 = getelementptr inbounds %FunctionDeclarationNode, ptr %52, i64 0, i32 4
  store i1 false, ptr %memberidx3.i.i86, align 1
  %55 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %55, ptr %52, align 8
  %56 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %57 = load ptr, ptr %memberidx.i68, align 8
  %58 = load i64, ptr %57, align 4
  %.not.i = icmp eq i64 %58, 26
  br i1 %.not.i, label %Parser_new_lines.exit.i, label %ifend.i

ifend.i:                                          ; preds = %Parser_advance.exit80
  %59 = load ptr, ptr %memberidx.i.i83, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %59)
  %.pre396 = load ptr, ptr %memberidx.i68, align 8
  %.pre397 = load i64, ptr %.pre396, align 4
  %60 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 1
  %61 = icmp eq i64 %.pre397, 33
  %62 = load i64, ptr %memberidx3.i.i.i, align 4
  %63 = icmp eq i64 %62, 0
  %64 = and i1 %61, %63
  br i1 %64, label %while.body.i.i91.lr.ph, label %Parser_new_lines.exit.i

while.body.i.i91.lr.ph:                           ; preds = %ifend.i
  %65 = load ptr, ptr %3, align 8
  %memberidx2.i5.i.i = getelementptr inbounds %Array_Token_, ptr %65, i64 0, i32 1
  %.pre398 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i.i91

while.body.i.i91:                                 ; preds = %while.body.i.i91.lr.ph, %Parser_advance.exit.i.i
  %66 = phi i64 [ %.pre398, %while.body.i.i91.lr.ph ], [ %75, %Parser_advance.exit.i.i ]
  %67 = load i64, ptr %memberidx2.i5.i.i, align 4
  %68 = icmp slt i64 %66, %67
  br i1 %68, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %while.body.i.i91
  %69 = add nsw i64 %66, 1
  store i64 %69, ptr %memberidx2.i, align 8
  %70 = load ptr, ptr %65, align 8
  %71 = getelementptr inbounds ptr, ptr %70, i64 %69
  %72 = load ptr, ptr %71, align 8
  store ptr %72, ptr %memberidx.i68, align 8
  %.pre399 = load i64, ptr %72, align 4
  %.pre400 = load i64, ptr %memberidx3.i.i.i, align 4
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %while.body.i.i91
  %73 = phi i64 [ %.pre400, %if.entry.i.i.i ], [ 0, %while.body.i.i91 ]
  %74 = phi i64 [ %.pre399, %if.entry.i.i.i ], [ 33, %while.body.i.i91 ]
  %75 = phi i64 [ %69, %if.entry.i.i.i ], [ %66, %while.body.i.i91 ]
  %76 = icmp eq i64 %74, 33
  %77 = icmp eq i64 %73, 0
  %78 = and i1 %76, %77
  br i1 %78, label %while.body.i.i91, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i, %Parser_advance.exit80, %ifend.i
  %79 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %80 = load ptr, ptr %memberidx.i68, align 8
  %81 = load i64, ptr %80, align 4
  %82 = icmp eq i64 %81, 1
  br i1 %82, label %if.entry6.i, label %else7.i

if.entry6.i:                                      ; preds = %Parser_new_lines.exit.i
  %83 = load i64, ptr %memberidx2.i, align 8
  %84 = load ptr, ptr %3, align 8
  %memberidx2.i40.i = getelementptr inbounds %Array_Token_, ptr %84, i64 0, i32 1
  %85 = load i64, ptr %memberidx2.i40.i, align 4
  %86 = icmp slt i64 %83, %85
  br i1 %86, label %if.entry.i.i92, label %Parser_advance.exit.i93

if.entry.i.i92:                                   ; preds = %if.entry6.i
  %87 = add nsw i64 %83, 1
  store i64 %87, ptr %memberidx2.i, align 8
  %88 = load ptr, ptr %84, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  store ptr %90, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit.i93

Parser_advance.exit.i93:                          ; preds = %if.entry.i.i92, %if.entry6.i
  %memberidx9.i = getelementptr inbounds %FunctionDeclarationNode, ptr %52, i64 0, i32 3
  %91 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %91, ptr %memberidx9.i, align 8
  br label %ifend8.i

else7.i:                                          ; preds = %Parser_new_lines.exit.i
  %92 = call ptr @malloc(i32 24)
  %93 = call ptr @malloc(i32 4)
  store i32 1684631414, ptr %93, align 8
  %94 = call ptr @malloc(i32 24)
  store ptr %93, ptr %94, align 8
  %memberidx1.i.i42.i = getelementptr inbounds %String, ptr %94, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i42.i, align 4
  %memberidx2.i.i43.i = getelementptr inbounds %String, ptr %94, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i43.i, align 4
  %95 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %95, i8 0, i64 32, i1 false)
  store i64 53, ptr %92, align 4
  %memberidx1.i.i46.i = getelementptr inbounds %Token, ptr %92, i64 0, i32 1
  store ptr %95, ptr %memberidx1.i.i46.i, align 8
  %memberidx.i47.i = getelementptr inbounds %IdentifierToken, ptr %92, i64 0, i32 2
  store ptr %94, ptr %memberidx.i47.i, align 8
  %memberidx10.i = getelementptr inbounds %FunctionDeclarationNode, ptr %52, i64 0, i32 3
  %96 = call ptr @malloc(i32 32)
  %97 = load ptr, ptr %memberidx1.i.i46.i, align 8
  store ptr %97, ptr %96, align 8
  %memberidx.i.i60.i = getelementptr inbounds %TypeNode, ptr %96, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i60.i, align 4
  %memberidx.i61.i = getelementptr inbounds %RecordTypeNode, ptr %96, i64 0, i32 2
  store ptr %92, ptr %memberidx.i61.i, align 8
  %memberidx1.i62.i = getelementptr inbounds %RecordTypeNode, ptr %96, i64 0, i32 3
  %98 = call ptr @malloc(i32 24)
  %memberidx.i5.i.i = getelementptr inbounds %Array_TypeNode_, ptr %98, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i, align 4
  %memberidx1.i.i63.i = getelementptr inbounds %Array_TypeNode_, ptr %98, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i63.i, align 4
  %99 = call ptr @malloc(i32 64)
  store ptr %99, ptr %98, align 8
  store i64 0, ptr %memberidx.i5.i.i, align 4
  store ptr %98, ptr %memberidx1.i62.i, align 8
  store ptr %96, ptr %memberidx10.i, align 8
  br label %ifend8.i

ifend8.i:                                         ; preds = %else7.i, %Parser_advance.exit.i93
  %100 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i51.i = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 1
  %101 = load ptr, ptr %memberidx.i68, align 8
  %102 = load i64, ptr %101, align 4
  %103 = icmp eq i64 %102, 33
  %104 = load i64, ptr %memberidx3.i.i51.i, align 4
  %105 = icmp eq i64 %104, 0
  %106 = and i1 %103, %105
  br i1 %106, label %while.body.i55.i.lr.ph, label %Parser_new_lines.exit59.i

while.body.i55.i.lr.ph:                           ; preds = %ifend8.i
  %107 = load ptr, ptr %3, align 8
  %memberidx2.i5.i54.i = getelementptr inbounds %Array_Token_, ptr %107, i64 0, i32 1
  %.pre401 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i55.i

while.body.i55.i:                                 ; preds = %while.body.i55.i.lr.ph, %Parser_advance.exit.i58.i
  %108 = phi i64 [ %.pre401, %while.body.i55.i.lr.ph ], [ %117, %Parser_advance.exit.i58.i ]
  %109 = load i64, ptr %memberidx2.i5.i54.i, align 4
  %110 = icmp slt i64 %108, %109
  br i1 %110, label %if.entry.i.i57.i, label %Parser_advance.exit.i58.i

if.entry.i.i57.i:                                 ; preds = %while.body.i55.i
  %111 = add nsw i64 %108, 1
  store i64 %111, ptr %memberidx2.i, align 8
  %112 = load ptr, ptr %107, align 8
  %113 = getelementptr inbounds ptr, ptr %112, i64 %111
  %114 = load ptr, ptr %113, align 8
  store ptr %114, ptr %memberidx.i68, align 8
  %.pre402 = load i64, ptr %114, align 4
  %.pre403 = load i64, ptr %memberidx3.i.i51.i, align 4
  br label %Parser_advance.exit.i58.i

Parser_advance.exit.i58.i:                        ; preds = %if.entry.i.i57.i, %while.body.i55.i
  %115 = phi i64 [ %.pre403, %if.entry.i.i57.i ], [ 0, %while.body.i55.i ]
  %116 = phi i64 [ %.pre402, %if.entry.i.i57.i ], [ 33, %while.body.i55.i ]
  %117 = phi i64 [ %111, %if.entry.i.i57.i ], [ %108, %while.body.i55.i ]
  %118 = icmp eq i64 %116, 33
  %119 = icmp eq i64 %115, 0
  %120 = and i1 %118, %119
  br i1 %120, label %while.body.i55.i, label %Parser_new_lines.exit59.i

Parser_new_lines.exit59.i:                        ; preds = %Parser_advance.exit.i58.i, %ifend8.i
  %.lcssa294 = phi i64 [ %102, %ifend8.i ], [ %116, %Parser_advance.exit.i58.i ]
  %121 = icmp eq i64 %.lcssa294, 27
  br i1 %121, label %if.entry14.i, label %else15.i

if.entry14.i:                                     ; preds = %Parser_new_lines.exit59.i
  %memberidx17.i = getelementptr inbounds %FunctionDeclarationNode, ptr %52, i64 0, i32 2
  %122 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %122, ptr %memberidx17.i, align 8
  br label %Parser_parse_function.exit

else15.i:                                         ; preds = %Parser_new_lines.exit59.i
  store i1 true, ptr %memberidx3.i.i86, align 1
  br label %Parser_parse_function.exit

Parser_parse_function.exit:                       ; preds = %if.entry14.i, %else15.i
  %memberidx.i95 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %51, i64 0, i32 1
  %123 = load i64, ptr %memberidx.i95, align 4
  %124 = add i64 %123, 1
  %memberidx.i.i96 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %51, i64 0, i32 2
  %125 = load i64, ptr %memberidx.i.i96, align 4
  %126 = icmp slt i64 %125, %124
  %.pre404 = load ptr, ptr %51, align 8
  br i1 %126, label %while.body.i.i98, label %Array_FunctionDeclarationNode____sl__.exit

while.body.i.i98:                                 ; preds = %Parser_parse_function.exit, %while.body.i.i98
  %127 = phi ptr [ %131, %while.body.i.i98 ], [ %.pre404, %Parser_parse_function.exit ]
  %128 = phi i64 [ %132, %while.body.i.i98 ], [ %125, %Parser_parse_function.exit ]
  %129 = shl nuw i64 %128, 1
  store i64 %129, ptr %memberidx.i.i96, align 4
  %130 = shl i64 %128, 4
  %131 = call ptr @realloc(ptr %127, i64 %130)
  store ptr %131, ptr %51, align 8
  %132 = load i64, ptr %memberidx.i.i96, align 4
  %133 = icmp slt i64 %132, %124
  br i1 %133, label %while.body.i.i98, label %Array_FunctionDeclarationNode____sl__.exit.loopexit

Array_FunctionDeclarationNode____sl__.exit.loopexit: ; preds = %while.body.i.i98
  %.pre405 = load i64, ptr %memberidx.i95, align 4
  %.pre414 = add nsw i64 %.pre405, 1
  br label %Array_FunctionDeclarationNode____sl__.exit

Array_FunctionDeclarationNode____sl__.exit:       ; preds = %Parser_parse_function.exit, %Array_FunctionDeclarationNode____sl__.exit.loopexit
  %.pre-phi415 = phi i64 [ %.pre414, %Array_FunctionDeclarationNode____sl__.exit.loopexit ], [ %124, %Parser_parse_function.exit ]
  %134 = phi ptr [ %131, %Array_FunctionDeclarationNode____sl__.exit.loopexit ], [ %.pre404, %Parser_parse_function.exit ]
  %135 = phi i64 [ %.pre405, %Array_FunctionDeclarationNode____sl__.exit.loopexit ], [ %123, %Parser_parse_function.exit ]
  store i64 %.pre-phi415, ptr %memberidx.i95, align 4
  %136 = getelementptr inbounds ptr, ptr %134, i64 %135
  store ptr %52, ptr %136, align 8
  br label %ifend

ifend:                                            ; preds = %Array_VarDeclarationStatement____sl__.exit, %Array_TypeAliasNode____sl__.exit, %Array_ConstDeclarationStatement____sl__.exit, %Array_ImportNode____sl__.exit, %Array_EnumNode____sl__.exit, %Array_ClassDeclarationNode____sl__.exit, %Array_FunctionDeclarationNode____sl__.exit
  %137 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i102 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %138 = load ptr, ptr %memberidx.i68, align 8
  %139 = load i64, ptr %138, align 4
  %140 = icmp eq i64 %139, 33
  %141 = load i64, ptr %memberidx3.i.i102, align 4
  %142 = icmp eq i64 %141, 0
  %143 = and i1 %140, %142
  br i1 %143, label %while.body.i106.lr.ph, label %while.entry.loopexit

while.body.i106.lr.ph:                            ; preds = %ifend
  %144 = load ptr, ptr %3, align 8
  %memberidx2.i5.i105 = getelementptr inbounds %Array_Token_, ptr %144, i64 0, i32 1
  %.pre407 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i106

while.body.i106:                                  ; preds = %while.body.i106.lr.ph, %Parser_advance.exit.i109
  %145 = phi i64 [ 0, %while.body.i106.lr.ph ], [ %155, %Parser_advance.exit.i109 ]
  %146 = phi i64 [ 33, %while.body.i106.lr.ph ], [ %156, %Parser_advance.exit.i109 ]
  %147 = phi ptr [ %138, %while.body.i106.lr.ph ], [ %159, %Parser_advance.exit.i109 ]
  %148 = phi i64 [ %.pre407, %while.body.i106.lr.ph ], [ %160, %Parser_advance.exit.i109 ]
  %149 = load i64, ptr %memberidx2.i5.i105, align 4
  %150 = icmp slt i64 %148, %149
  br i1 %150, label %if.entry.i.i108, label %Parser_advance.exit.i109

if.entry.i.i108:                                  ; preds = %while.body.i106
  %151 = add nsw i64 %148, 1
  store i64 %151, ptr %memberidx2.i, align 8
  %152 = load ptr, ptr %144, align 8
  %153 = getelementptr inbounds ptr, ptr %152, i64 %151
  %154 = load ptr, ptr %153, align 8
  store ptr %154, ptr %memberidx.i68, align 8
  %.pre408 = load i64, ptr %154, align 4
  %.pre409 = load i64, ptr %memberidx3.i.i102, align 4
  br label %Parser_advance.exit.i109

Parser_advance.exit.i109:                         ; preds = %if.entry.i.i108, %while.body.i106
  %155 = phi i64 [ %.pre409, %if.entry.i.i108 ], [ %145, %while.body.i106 ]
  %156 = phi i64 [ %.pre408, %if.entry.i.i108 ], [ %146, %while.body.i106 ]
  %157 = phi i64 [ %.pre409, %if.entry.i.i108 ], [ 0, %while.body.i106 ]
  %158 = phi i64 [ %.pre408, %if.entry.i.i108 ], [ 33, %while.body.i106 ]
  %159 = phi ptr [ %154, %if.entry.i.i108 ], [ %147, %while.body.i106 ]
  %160 = phi i64 [ %151, %if.entry.i.i108 ], [ %148, %while.body.i106 ]
  %161 = icmp eq i64 %158, 33
  %162 = icmp eq i64 %157, 0
  %163 = and i1 %161, %162
  br i1 %163, label %while.body.i106, label %while.entry.loopexit

if.entry5:                                        ; preds = %while.body
  %164 = load ptr, ptr %memberidx8, align 8
  %165 = load i64, ptr %memberidx2.i, align 8
  %166 = load ptr, ptr %3, align 8
  %memberidx2.i.i112 = getelementptr inbounds %Array_Token_, ptr %166, i64 0, i32 1
  %167 = load i64, ptr %memberidx2.i.i112, align 4
  %168 = icmp slt i64 %165, %167
  br i1 %168, label %if.entry.i.i114, label %Parser_advance.exit.i117

if.entry.i.i114:                                  ; preds = %if.entry5
  %169 = add nsw i64 %165, 1
  store i64 %169, ptr %memberidx2.i, align 8
  %170 = load ptr, ptr %166, align 8
  %171 = getelementptr inbounds ptr, ptr %170, i64 %169
  %172 = load ptr, ptr %171, align 8
  store ptr %172, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit.i117

Parser_advance.exit.i117:                         ; preds = %if.entry.i.i114, %if.entry5
  %173 = call ptr @malloc(i32 40)
  %174 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %174, ptr %173, align 8
  %memberidx1.i.i115 = getelementptr inbounds %ClassDeclarationNode, ptr %173, i64 0, i32 3
  %175 = call ptr @malloc(i32 24)
  %memberidx.i.i23.i = getelementptr inbounds %Array_FieldNode_, ptr %175, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i23.i, align 4
  %memberidx1.i.i24.i = getelementptr inbounds %Array_FieldNode_, ptr %175, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i24.i, align 4
  %176 = call ptr @malloc(i32 64)
  store ptr %176, ptr %175, align 8
  store i64 0, ptr %memberidx.i.i23.i, align 4
  store ptr %175, ptr %memberidx1.i.i115, align 8
  %memberidx4.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %173, i64 0, i32 4
  %177 = call ptr @malloc(i32 24)
  %memberidx.i15.i.i = getelementptr inbounds %Array_MethodNode_, ptr %177, i64 0, i32 1
  store i64 0, ptr %memberidx.i15.i.i, align 4
  %memberidx1.i16.i.i = getelementptr inbounds %Array_MethodNode_, ptr %177, i64 0, i32 2
  store i64 8, ptr %memberidx1.i16.i.i, align 4
  %178 = call ptr @malloc(i32 64)
  store ptr %178, ptr %177, align 8
  store i64 0, ptr %memberidx.i15.i.i, align 4
  store ptr %177, ptr %memberidx4.i.i, align 8
  %memberidx7.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %173, i64 0, i32 1
  %179 = call ptr @malloc(i32 24)
  %memberidx.i17.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %179, i64 0, i32 1
  store i64 0, ptr %memberidx.i17.i.i, align 4
  %memberidx1.i18.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %179, i64 0, i32 2
  store i64 8, ptr %memberidx1.i18.i.i, align 4
  %180 = call ptr @malloc(i32 64)
  store ptr %180, ptr %179, align 8
  store i64 0, ptr %memberidx.i17.i.i, align 4
  store ptr %179, ptr %memberidx7.i.i, align 8
  %memberidx10.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %173, i64 0, i32 2
  store ptr null, ptr %memberidx10.i.i, align 8
  %181 = load ptr, ptr %memberidx.i68, align 8
  %182 = load i64, ptr %181, align 4
  %183 = icmp eq i64 %182, 42
  br i1 %183, label %if.entry.i119, label %ifend.i120

if.entry.i119:                                    ; preds = %Parser_advance.exit.i117
  %184 = load i64, ptr %memberidx2.i, align 8
  %185 = load ptr, ptr %3, align 8
  %memberidx2.i.i28.i = getelementptr inbounds %Array_Token_, ptr %185, i64 0, i32 1
  %186 = load i64, ptr %memberidx2.i.i28.i, align 4
  %187 = icmp slt i64 %184, %186
  br i1 %187, label %if.entry.i.i30.i, label %Parser_advance.exit.i31.i

if.entry.i.i30.i:                                 ; preds = %if.entry.i119
  %188 = add nsw i64 %184, 1
  store i64 %188, ptr %memberidx2.i, align 8
  %189 = load ptr, ptr %185, align 8
  %190 = getelementptr inbounds ptr, ptr %189, i64 %188
  %191 = load ptr, ptr %190, align 8
  store ptr %191, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit.i31.i

Parser_advance.exit.i31.i:                        ; preds = %if.entry.i.i30.i, %if.entry.i119
  %192 = call ptr @malloc(i32 8)
  %193 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %193, ptr %192, align 8
  %194 = load i64, ptr %memberidx.i17.i.i, align 4
  %195 = add i64 %194, 1
  %196 = load i64, ptr %memberidx1.i18.i.i, align 4
  %197 = icmp slt i64 %196, %195
  %.pre351 = load ptr, ptr %179, align 8
  br i1 %197, label %while.body.i.i13.i.i, label %Array_GenericParameterNode____sl__.exit14.i.i

while.body.i.i13.i.i:                             ; preds = %Parser_advance.exit.i31.i, %while.body.i.i13.i.i
  %198 = phi ptr [ %202, %while.body.i.i13.i.i ], [ %.pre351, %Parser_advance.exit.i31.i ]
  %199 = phi i64 [ %203, %while.body.i.i13.i.i ], [ %196, %Parser_advance.exit.i31.i ]
  %200 = shl nuw i64 %199, 1
  store i64 %200, ptr %memberidx1.i18.i.i, align 4
  %201 = shl i64 %199, 4
  %202 = call ptr @realloc(ptr %198, i64 %201)
  store ptr %202, ptr %179, align 8
  %203 = load i64, ptr %memberidx1.i18.i.i, align 4
  %204 = icmp slt i64 %203, %195
  br i1 %204, label %while.body.i.i13.i.i, label %Array_GenericParameterNode____sl__.exit14.i.i.loopexit

Array_GenericParameterNode____sl__.exit14.i.i.loopexit: ; preds = %while.body.i.i13.i.i
  %.pre352 = load i64, ptr %memberidx.i17.i.i, align 4
  %.pre416 = add nsw i64 %.pre352, 1
  br label %Array_GenericParameterNode____sl__.exit14.i.i

Array_GenericParameterNode____sl__.exit14.i.i:    ; preds = %Parser_advance.exit.i31.i, %Array_GenericParameterNode____sl__.exit14.i.i.loopexit
  %.pre-phi417 = phi i64 [ %.pre416, %Array_GenericParameterNode____sl__.exit14.i.i.loopexit ], [ %195, %Parser_advance.exit.i31.i ]
  %205 = phi ptr [ %202, %Array_GenericParameterNode____sl__.exit14.i.i.loopexit ], [ %.pre351, %Parser_advance.exit.i31.i ]
  %206 = phi i64 [ %.pre352, %Array_GenericParameterNode____sl__.exit14.i.i.loopexit ], [ %194, %Parser_advance.exit.i31.i ]
  store i64 %.pre-phi417, ptr %memberidx.i17.i.i, align 4
  %207 = getelementptr inbounds ptr, ptr %205, i64 %206
  store ptr %192, ptr %207, align 8
  %208 = load ptr, ptr %memberidx.i68, align 8
  %209 = load i64, ptr %208, align 4
  %210 = icmp eq i64 %209, 3
  %211 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i17.i.i297 = getelementptr inbounds %Array_FloError_, ptr %211, i64 0, i32 1
  %212 = load i64, ptr %memberidx3.i17.i.i297, align 4
  %213 = icmp eq i64 %212, 0
  %214 = and i1 %210, %213
  br i1 %214, label %while.body.i36.i, label %Parser_parse_generic_parameters.exit.i

while.body.i36.i:                                 ; preds = %Array_GenericParameterNode____sl__.exit14.i.i, %Array_GenericParameterNode____sl__.exit.i.i
  %215 = load i64, ptr %memberidx2.i, align 8
  %216 = load ptr, ptr %3, align 8
  %memberidx2.i19.i.i = getelementptr inbounds %Array_Token_, ptr %216, i64 0, i32 1
  %217 = load i64, ptr %memberidx2.i19.i.i, align 4
  %218 = icmp slt i64 %215, %217
  br i1 %218, label %if.entry.i21.i.i, label %Parser_advance.exit22.i.i

if.entry.i21.i.i:                                 ; preds = %while.body.i36.i
  %219 = add nsw i64 %215, 1
  store i64 %219, ptr %memberidx2.i, align 8
  %220 = load ptr, ptr %216, align 8
  %221 = getelementptr inbounds ptr, ptr %220, i64 %219
  %222 = load ptr, ptr %221, align 8
  store ptr %222, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit22.i.i

Parser_advance.exit22.i.i:                        ; preds = %if.entry.i21.i.i, %while.body.i36.i
  %223 = call ptr @malloc(i32 8)
  %224 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %224, ptr %223, align 8
  %225 = load i64, ptr %memberidx.i17.i.i, align 4
  %226 = add i64 %225, 1
  %227 = load i64, ptr %memberidx1.i18.i.i, align 4
  %228 = icmp slt i64 %227, %226
  %.pre354 = load ptr, ptr %179, align 8
  br i1 %228, label %while.body.i.i.i39.i, label %Array_GenericParameterNode____sl__.exit.i.i

while.body.i.i.i39.i:                             ; preds = %Parser_advance.exit22.i.i, %while.body.i.i.i39.i
  %229 = phi ptr [ %233, %while.body.i.i.i39.i ], [ %.pre354, %Parser_advance.exit22.i.i ]
  %230 = phi i64 [ %234, %while.body.i.i.i39.i ], [ %227, %Parser_advance.exit22.i.i ]
  %231 = shl nuw i64 %230, 1
  store i64 %231, ptr %memberidx1.i18.i.i, align 4
  %232 = shl i64 %230, 4
  %233 = call ptr @realloc(ptr %229, i64 %232)
  store ptr %233, ptr %179, align 8
  %234 = load i64, ptr %memberidx1.i18.i.i, align 4
  %235 = icmp slt i64 %234, %226
  br i1 %235, label %while.body.i.i.i39.i, label %Array_GenericParameterNode____sl__.exit.i.i.loopexit

Array_GenericParameterNode____sl__.exit.i.i.loopexit: ; preds = %while.body.i.i.i39.i
  %.pre355 = load i64, ptr %memberidx.i17.i.i, align 4
  %.pre418 = add nsw i64 %.pre355, 1
  br label %Array_GenericParameterNode____sl__.exit.i.i

Array_GenericParameterNode____sl__.exit.i.i:      ; preds = %Parser_advance.exit22.i.i, %Array_GenericParameterNode____sl__.exit.i.i.loopexit
  %.pre-phi419 = phi i64 [ %.pre418, %Array_GenericParameterNode____sl__.exit.i.i.loopexit ], [ %226, %Parser_advance.exit22.i.i ]
  %236 = phi ptr [ %233, %Array_GenericParameterNode____sl__.exit.i.i.loopexit ], [ %.pre354, %Parser_advance.exit22.i.i ]
  %237 = phi i64 [ %.pre355, %Array_GenericParameterNode____sl__.exit.i.i.loopexit ], [ %225, %Parser_advance.exit22.i.i ]
  store i64 %.pre-phi419, ptr %memberidx.i17.i.i, align 4
  %238 = getelementptr inbounds ptr, ptr %236, i64 %237
  store ptr %223, ptr %238, align 8
  %239 = load ptr, ptr %memberidx.i68, align 8
  %240 = load i64, ptr %239, align 4
  %241 = icmp eq i64 %240, 3
  %242 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i17.i.i = getelementptr inbounds %Array_FloError_, ptr %242, i64 0, i32 1
  %243 = load i64, ptr %memberidx3.i17.i.i, align 4
  %244 = icmp eq i64 %243, 0
  %245 = and i1 %241, %244
  br i1 %245, label %while.body.i36.i, label %Parser_parse_generic_parameters.exit.i

Parser_parse_generic_parameters.exit.i:           ; preds = %Array_GenericParameterNode____sl__.exit.i.i, %Array_GenericParameterNode____sl__.exit14.i.i
  %246 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 41)
  %.pre357 = load ptr, ptr %memberidx.i68, align 8
  %.pre358 = load i64, ptr %.pre357, align 4
  br label %ifend.i120

ifend.i120:                                       ; preds = %Parser_parse_generic_parameters.exit.i, %Parser_advance.exit.i117
  %247 = phi i64 [ %.pre358, %Parser_parse_generic_parameters.exit.i ], [ %182, %Parser_advance.exit.i117 ]
  %248 = icmp eq i64 %247, 25
  br i1 %248, label %if.entry5.i, label %ifend7.i

if.entry5.i:                                      ; preds = %ifend.i120
  %249 = load i64, ptr %memberidx2.i, align 8
  %250 = load ptr, ptr %3, align 8
  %memberidx2.i41.i = getelementptr inbounds %Array_Token_, ptr %250, i64 0, i32 1
  %251 = load i64, ptr %memberidx2.i41.i, align 4
  %252 = icmp slt i64 %249, %251
  br i1 %252, label %if.entry.i43.i, label %Parser_advance.exit45.i

if.entry.i43.i:                                   ; preds = %if.entry5.i
  %253 = add nsw i64 %249, 1
  store i64 %253, ptr %memberidx2.i, align 8
  %254 = load ptr, ptr %250, align 8
  %255 = getelementptr inbounds ptr, ptr %254, i64 %253
  %256 = load ptr, ptr %255, align 8
  store ptr %256, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit45.i

Parser_advance.exit45.i:                          ; preds = %if.entry.i43.i, %if.entry5.i
  %257 = call fastcc ptr @Parser_parse_object_type(ptr nonnull %3)
  store ptr %257, ptr %memberidx10.i.i, align 8
  %258 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %.pre359 = load ptr, ptr %memberidx.i68, align 8
  %.pre360 = load i64, ptr %.pre359, align 4
  br label %ifend7.i

ifend7.i:                                         ; preds = %Parser_advance.exit45.i, %ifend.i120
  %259 = phi i64 [ %.pre360, %Parser_advance.exit45.i ], [ %247, %ifend.i120 ]
  %260 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i49.i = getelementptr inbounds %Array_FloError_, ptr %260, i64 0, i32 1
  %261 = icmp eq i64 %259, 33
  %262 = load i64, ptr %memberidx3.i.i49.i, align 4
  %263 = icmp eq i64 %262, 0
  %264 = and i1 %261, %263
  br i1 %264, label %while.body.i52.i.lr.ph, label %Parser_new_lines.exit.i124

while.body.i52.i.lr.ph:                           ; preds = %ifend7.i
  %265 = load ptr, ptr %3, align 8
  %memberidx2.i5.i.i122 = getelementptr inbounds %Array_Token_, ptr %265, i64 0, i32 1
  %.pre361 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i52.i

while.body.i52.i:                                 ; preds = %while.body.i52.i.lr.ph, %Parser_advance.exit.i54.i
  %266 = phi i64 [ %.pre361, %while.body.i52.i.lr.ph ], [ %275, %Parser_advance.exit.i54.i ]
  %267 = load i64, ptr %memberidx2.i5.i.i122, align 4
  %268 = icmp slt i64 %266, %267
  br i1 %268, label %if.entry.i.i53.i, label %Parser_advance.exit.i54.i

if.entry.i.i53.i:                                 ; preds = %while.body.i52.i
  %269 = add nsw i64 %266, 1
  store i64 %269, ptr %memberidx2.i, align 8
  %270 = load ptr, ptr %265, align 8
  %271 = getelementptr inbounds ptr, ptr %270, i64 %269
  %272 = load ptr, ptr %271, align 8
  store ptr %272, ptr %memberidx.i68, align 8
  %.pre362 = load i64, ptr %272, align 4
  %.pre363 = load i64, ptr %memberidx3.i.i49.i, align 4
  br label %Parser_advance.exit.i54.i

Parser_advance.exit.i54.i:                        ; preds = %if.entry.i.i53.i, %while.body.i52.i
  %273 = phi i64 [ %.pre363, %if.entry.i.i53.i ], [ 0, %while.body.i52.i ]
  %274 = phi i64 [ %.pre362, %if.entry.i.i53.i ], [ 33, %while.body.i52.i ]
  %275 = phi i64 [ %269, %if.entry.i.i53.i ], [ %266, %while.body.i52.i ]
  %276 = icmp eq i64 %274, 33
  %277 = icmp eq i64 %273, 0
  %278 = and i1 %276, %277
  br i1 %278, label %while.body.i52.i, label %Parser_new_lines.exit.i124

Parser_new_lines.exit.i124:                       ; preds = %Parser_advance.exit.i54.i, %ifend7.i
  %279 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 27)
  %280 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %280, i64 0, i32 1
  %281 = load ptr, ptr %memberidx.i68, align 8
  %282 = load i64, ptr %281, align 4
  %283 = icmp eq i64 %282, 33
  %284 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %285 = icmp eq i64 %284, 0
  %286 = and i1 %283, %285
  br i1 %286, label %while.body.i.i.i127.lr.ph, label %while.entry.i.i129.preheader

while.body.i.i.i127.lr.ph:                        ; preds = %Parser_new_lines.exit.i124
  %287 = load ptr, ptr %3, align 8
  %memberidx2.i5.i.i.i = getelementptr inbounds %Array_Token_, ptr %287, i64 0, i32 1
  %.pre364 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i.i.i127

while.entry.i.i129.preheader:                     ; preds = %Parser_advance.exit.i.i.i, %Parser_new_lines.exit.i124
  %288 = phi i64 [ %282, %Parser_new_lines.exit.i124 ], [ %300, %Parser_advance.exit.i.i.i ]
  %289 = phi i64 [ %284, %Parser_new_lines.exit.i124 ], [ %301, %Parser_advance.exit.i.i.i ]
  %.fr302 = freeze i64 %289
  %290 = icmp eq i64 %.fr302, 0
  br i1 %290, label %switch.early.test, label %while.end.i.i

while.body.i.i.i127:                              ; preds = %while.body.i.i.i127.lr.ph, %Parser_advance.exit.i.i.i
  %291 = phi i64 [ 33, %while.body.i.i.i127.lr.ph ], [ %300, %Parser_advance.exit.i.i.i ]
  %292 = phi i64 [ 0, %while.body.i.i.i127.lr.ph ], [ %301, %Parser_advance.exit.i.i.i ]
  %293 = phi i64 [ %.pre364, %while.body.i.i.i127.lr.ph ], [ %304, %Parser_advance.exit.i.i.i ]
  %294 = load i64, ptr %memberidx2.i5.i.i.i, align 4
  %295 = icmp slt i64 %293, %294
  br i1 %295, label %if.entry.i.i.i.i, label %Parser_advance.exit.i.i.i

if.entry.i.i.i.i:                                 ; preds = %while.body.i.i.i127
  %296 = add nsw i64 %293, 1
  store i64 %296, ptr %memberidx2.i, align 8
  %297 = load ptr, ptr %287, align 8
  %298 = getelementptr inbounds ptr, ptr %297, i64 %296
  %299 = load ptr, ptr %298, align 8
  store ptr %299, ptr %memberidx.i68, align 8
  %.pre365 = load i64, ptr %299, align 4
  %.pre366 = load i64, ptr %memberidx3.i.i.i.i, align 4
  br label %Parser_advance.exit.i.i.i

Parser_advance.exit.i.i.i:                        ; preds = %if.entry.i.i.i.i, %while.body.i.i.i127
  %300 = phi i64 [ %.pre365, %if.entry.i.i.i.i ], [ %291, %while.body.i.i.i127 ]
  %301 = phi i64 [ %.pre366, %if.entry.i.i.i.i ], [ %292, %while.body.i.i.i127 ]
  %302 = phi i64 [ %.pre366, %if.entry.i.i.i.i ], [ 0, %while.body.i.i.i127 ]
  %303 = phi i64 [ %.pre365, %if.entry.i.i.i.i ], [ 33, %while.body.i.i.i127 ]
  %304 = phi i64 [ %296, %if.entry.i.i.i.i ], [ %293, %while.body.i.i.i127 ]
  %305 = icmp eq i64 %303, 33
  %306 = icmp eq i64 %302, 0
  %307 = and i1 %305, %306
  br i1 %307, label %while.body.i.i.i127, label %while.entry.i.i129.preheader

while.entry.i.i129.loopexit:                      ; preds = %Parser_advance.exit.i94.i.i, %ifend5.i.i
  %308 = phi i64 [ %348, %ifend5.i.i ], [ %360, %Parser_advance.exit.i94.i.i ]
  %309 = phi i64 [ %346, %ifend5.i.i ], [ %362, %Parser_advance.exit.i94.i.i ]
  %.fr = freeze i64 %308
  %310 = icmp eq i64 %.fr, 0
  br i1 %310, label %switch.early.test, label %while.end.i.i

switch.early.test:                                ; preds = %while.entry.i.i129.preheader, %while.entry.i.i129.loopexit
  %311 = phi i64 [ %309, %while.entry.i.i129.loopexit ], [ %288, %while.entry.i.i129.preheader ]
  switch i64 %311, label %switch.early.test.ifend.i.i_crit_edge [
    i64 46, label %while.end.i.i
    i64 28, label %while.end.i.i
    i64 67, label %else.i.i
    i64 66, label %Parser_parse_access_modifier.exit.i.i.fold.split
    i64 68, label %else.i.i.fold.split
  ]

switch.early.test.ifend.i.i_crit_edge:            ; preds = %switch.early.test
  %.pre367 = load i64, ptr %memberidx2.i, align 8
  %.pre368 = load ptr, ptr %3, align 8
  br label %ifend.i.i

while.end.i.i:                                    ; preds = %while.entry.i.i129.loopexit, %switch.early.test, %switch.early.test, %while.entry.i.i129.preheader
  %312 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 28)
  br label %Parser_parse_class.exit

Parser_parse_access_modifier.exit.i.i.fold.split: ; preds = %switch.early.test
  br label %else.i.i

else.i.i.fold.split:                              ; preds = %switch.early.test
  br label %else.i.i

else.i.i:                                         ; preds = %switch.early.test, %else.i.i.fold.split, %Parser_parse_access_modifier.exit.i.i.fold.split
  %common.ret.op.i.i.i.ph = phi i64 [ 1, %Parser_parse_access_modifier.exit.i.i.fold.split ], [ 2, %switch.early.test ], [ 3, %else.i.i.fold.split ]
  %313 = load i64, ptr %memberidx2.i, align 8
  %314 = load ptr, ptr %3, align 8
  %memberidx2.i54.i.i = getelementptr inbounds %Array_Token_, ptr %314, i64 0, i32 1
  %315 = load i64, ptr %memberidx2.i54.i.i, align 4
  %316 = icmp slt i64 %313, %315
  br i1 %316, label %if.entry.i.i.i131, label %ifend.i.i

if.entry.i.i.i131:                                ; preds = %else.i.i
  %317 = add nsw i64 %313, 1
  store i64 %317, ptr %memberidx2.i, align 8
  %318 = load ptr, ptr %314, align 8
  %319 = getelementptr inbounds ptr, ptr %318, i64 %317
  %320 = load ptr, ptr %319, align 8
  store ptr %320, ptr %memberidx.i68, align 8
  br label %ifend.i.i

ifend.i.i:                                        ; preds = %switch.early.test.ifend.i.i_crit_edge, %else.i.i, %if.entry.i.i.i131
  %321 = phi ptr [ %314, %if.entry.i.i.i131 ], [ %314, %else.i.i ], [ %.pre368, %switch.early.test.ifend.i.i_crit_edge ]
  %322 = phi i64 [ %317, %if.entry.i.i.i131 ], [ %313, %else.i.i ], [ %.pre367, %switch.early.test.ifend.i.i_crit_edge ]
  %access_modifier.0.i.i = phi i64 [ %common.ret.op.i.i.i.ph, %if.entry.i.i.i131 ], [ %common.ret.op.i.i.i.ph, %else.i.i ], [ 2, %switch.early.test.ifend.i.i_crit_edge ]
  %323 = add nsw i64 %322, 1
  %memberidx2.i58.i.i = getelementptr inbounds %Array_Token_, ptr %321, i64 0, i32 1
  %324 = load i64, ptr %memberidx2.i58.i.i, align 4
  %325 = icmp slt i64 %323, %324
  br i1 %325, label %Parser_peek.exit.i.i, label %Parser_peek.exit.i.i.thread

Parser_peek.exit.i.i:                             ; preds = %ifend.i.i
  %326 = load ptr, ptr %321, align 8
  %327 = getelementptr inbounds ptr, ptr %326, i64 %323
  %common.ret.op.i59.i.i = load ptr, ptr %327, align 8
  %328 = load i64, ptr %common.ret.op.i59.i.i, align 4
  %329 = icmp eq i64 %328, 1
  br i1 %329, label %if.entry3.i.i, label %Parser_peek.exit83.i.i

Parser_peek.exit.i.i.thread:                      ; preds = %ifend.i.i
  %330 = add i64 %324, -1
  %331 = load ptr, ptr %321, align 8
  %332 = getelementptr inbounds ptr, ptr %331, i64 %330
  %common.ret.op.i59.i.i289 = load ptr, ptr %332, align 8
  %333 = load i64, ptr %common.ret.op.i59.i.i289, align 4
  %334 = icmp eq i64 %333, 1
  br i1 %334, label %if.entry3.i.i, label %Parser_peek.exit83.i.i

if.entry3.i.i:                                    ; preds = %Parser_peek.exit.i.i.thread, %Parser_peek.exit.i.i
  %335 = call ptr @malloc(i32 32)
  %336 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %336, ptr %335, align 8
  %memberidx1.i64.i.i = getelementptr inbounds %FieldNode, ptr %335, i64 0, i32 2
  store ptr null, ptr %memberidx1.i64.i.i, align 8
  %337 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 1)
  %memberidx6.i.i = getelementptr inbounds %FieldNode, ptr %335, i64 0, i32 3
  %338 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %338, ptr %memberidx6.i.i, align 8
  %339 = load ptr, ptr %memberidx.i68, align 8
  %340 = load i64, ptr %339, align 4
  %341 = icmp eq i64 %340, 38
  br i1 %341, label %if.entry9.i.i, label %ifend11.i.i

Parser_peek.exit83.i.i:                           ; preds = %Parser_peek.exit.i.i.thread, %Parser_peek.exit.i.i
  %342 = phi i64 [ %328, %Parser_peek.exit.i.i ], [ %333, %Parser_peek.exit.i.i.thread ]
  %343 = icmp eq i64 %342, 25
  br i1 %343, label %if.entry16.i.i, label %else17.i.i

ifend5.i.i:                                       ; preds = %Array_MethodNode____sl__.exit.i.i, %Array_FieldNode____sl__.exit.i.i
  %344 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i87.i.i = getelementptr inbounds %Array_FloError_, ptr %344, i64 0, i32 1
  %345 = load ptr, ptr %memberidx.i68, align 8
  %346 = load i64, ptr %345, align 4
  %347 = icmp eq i64 %346, 33
  %348 = load i64, ptr %memberidx3.i.i87.i.i, align 4
  %349 = icmp eq i64 %348, 0
  %350 = and i1 %347, %349
  br i1 %350, label %while.body.i91.i.i.lr.ph, label %while.entry.i.i129.loopexit

while.body.i91.i.i.lr.ph:                         ; preds = %ifend5.i.i
  %351 = load ptr, ptr %3, align 8
  %memberidx2.i5.i90.i.i = getelementptr inbounds %Array_Token_, ptr %351, i64 0, i32 1
  %.pre390 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i91.i.i

while.body.i91.i.i:                               ; preds = %while.body.i91.i.i.lr.ph, %Parser_advance.exit.i94.i.i
  %352 = phi i64 [ 0, %while.body.i91.i.i.lr.ph ], [ %360, %Parser_advance.exit.i94.i.i ]
  %353 = phi i64 [ %.pre390, %while.body.i91.i.i.lr.ph ], [ %363, %Parser_advance.exit.i94.i.i ]
  %354 = load i64, ptr %memberidx2.i5.i90.i.i, align 4
  %355 = icmp slt i64 %353, %354
  br i1 %355, label %if.entry.i.i93.i.i, label %Parser_advance.exit.i94.i.i

if.entry.i.i93.i.i:                               ; preds = %while.body.i91.i.i
  %356 = add nsw i64 %353, 1
  store i64 %356, ptr %memberidx2.i, align 8
  %357 = load ptr, ptr %351, align 8
  %358 = getelementptr inbounds ptr, ptr %357, i64 %356
  %359 = load ptr, ptr %358, align 8
  store ptr %359, ptr %memberidx.i68, align 8
  %.pre391 = load i64, ptr %359, align 4
  %.pre392 = load i64, ptr %memberidx3.i.i87.i.i, align 4
  br label %Parser_advance.exit.i94.i.i

Parser_advance.exit.i94.i.i:                      ; preds = %if.entry.i.i93.i.i, %while.body.i91.i.i
  %360 = phi i64 [ %.pre392, %if.entry.i.i93.i.i ], [ %352, %while.body.i91.i.i ]
  %361 = phi i64 [ %.pre392, %if.entry.i.i93.i.i ], [ 0, %while.body.i91.i.i ]
  %362 = phi i64 [ %.pre391, %if.entry.i.i93.i.i ], [ 33, %while.body.i91.i.i ]
  %363 = phi i64 [ %356, %if.entry.i.i93.i.i ], [ %353, %while.body.i91.i.i ]
  %364 = icmp eq i64 %362, 33
  %365 = icmp eq i64 %361, 0
  %366 = and i1 %364, %365
  br i1 %366, label %while.body.i91.i.i, label %while.entry.i.i129.loopexit

if.entry9.i.i:                                    ; preds = %if.entry3.i.i
  %367 = load i64, ptr %memberidx2.i, align 8
  %368 = load ptr, ptr %3, align 8
  %memberidx2.i97.i.i = getelementptr inbounds %Array_Token_, ptr %368, i64 0, i32 1
  %369 = load i64, ptr %memberidx2.i97.i.i, align 4
  %370 = icmp slt i64 %367, %369
  br i1 %370, label %if.entry.i99.i.i, label %Parser_advance.exit101.i.i

if.entry.i99.i.i:                                 ; preds = %if.entry9.i.i
  %371 = add nsw i64 %367, 1
  store i64 %371, ptr %memberidx2.i, align 8
  %372 = load ptr, ptr %368, align 8
  %373 = getelementptr inbounds ptr, ptr %372, i64 %371
  %374 = load ptr, ptr %373, align 8
  store ptr %374, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit101.i.i

Parser_advance.exit101.i.i:                       ; preds = %if.entry.i99.i.i, %if.entry9.i.i
  %375 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %375, ptr %memberidx1.i64.i.i, align 8
  br label %ifend11.i.i

ifend11.i.i:                                      ; preds = %Parser_advance.exit101.i.i, %if.entry3.i.i
  %memberidx13.i.i = getelementptr inbounds %FieldNode, ptr %335, i64 0, i32 1
  store i64 %access_modifier.0.i.i, ptr %memberidx13.i.i, align 4
  %376 = load ptr, ptr %memberidx1.i.i115, align 8
  %memberidx.i102.i.i = getelementptr inbounds %Array_FieldNode_, ptr %376, i64 0, i32 1
  %377 = load i64, ptr %memberidx.i102.i.i, align 4
  %378 = add i64 %377, 1
  %memberidx.i.i103.i.i = getelementptr inbounds %Array_FieldNode_, ptr %376, i64 0, i32 2
  %379 = load i64, ptr %memberidx.i.i103.i.i, align 4
  %380 = icmp slt i64 %379, %378
  %.pre387 = load ptr, ptr %376, align 8
  br i1 %380, label %while.body.i.i105.i.i, label %Array_FieldNode____sl__.exit.i.i

while.body.i.i105.i.i:                            ; preds = %ifend11.i.i, %while.body.i.i105.i.i
  %381 = phi ptr [ %385, %while.body.i.i105.i.i ], [ %.pre387, %ifend11.i.i ]
  %382 = phi i64 [ %386, %while.body.i.i105.i.i ], [ %379, %ifend11.i.i ]
  %383 = shl nuw i64 %382, 1
  store i64 %383, ptr %memberidx.i.i103.i.i, align 4
  %384 = shl i64 %382, 4
  %385 = call ptr @realloc(ptr %381, i64 %384)
  store ptr %385, ptr %376, align 8
  %386 = load i64, ptr %memberidx.i.i103.i.i, align 4
  %387 = icmp slt i64 %386, %378
  br i1 %387, label %while.body.i.i105.i.i, label %Array_FieldNode____sl__.exit.i.i.loopexit

Array_FieldNode____sl__.exit.i.i.loopexit:        ; preds = %while.body.i.i105.i.i
  %.pre388 = load i64, ptr %memberidx.i102.i.i, align 4
  %.pre420 = add nsw i64 %.pre388, 1
  br label %Array_FieldNode____sl__.exit.i.i

Array_FieldNode____sl__.exit.i.i:                 ; preds = %ifend11.i.i, %Array_FieldNode____sl__.exit.i.i.loopexit
  %.pre-phi421 = phi i64 [ %.pre420, %Array_FieldNode____sl__.exit.i.i.loopexit ], [ %378, %ifend11.i.i ]
  %388 = phi ptr [ %385, %Array_FieldNode____sl__.exit.i.i.loopexit ], [ %.pre387, %ifend11.i.i ]
  %389 = phi i64 [ %.pre388, %Array_FieldNode____sl__.exit.i.i.loopexit ], [ %377, %ifend11.i.i ]
  store i64 %.pre-phi421, ptr %memberidx.i102.i.i, align 4
  %390 = getelementptr inbounds ptr, ptr %388, i64 %389
  store ptr %335, ptr %390, align 8
  br label %ifend5.i.i

if.entry16.i.i:                                   ; preds = %Parser_peek.exit83.i.i
  %391 = call ptr @malloc(i32 42)
  %392 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %392, ptr %391, align 8
  %memberidx1.i.i65.i.i = getelementptr inbounds %MethodNode, ptr %391, i64 0, i32 1
  %393 = call ptr @malloc(i32 24)
  %memberidx.i.i.i66.i.i = getelementptr inbounds %Array_ArgNode_, ptr %393, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i66.i.i, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %393, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i.i.i, align 4
  %394 = call ptr @malloc(i32 64)
  store ptr %394, ptr %393, align 8
  store i64 0, ptr %memberidx.i.i.i66.i.i, align 4
  store ptr %393, ptr %memberidx1.i.i65.i.i, align 8
  %memberidx4.i.i.i.i = getelementptr inbounds %MethodNode, ptr %391, i64 0, i32 5
  store i1 true, ptr %memberidx4.i.i.i.i, align 1
  %memberidx5.i.i.i.i = getelementptr inbounds %MethodNode, ptr %391, i64 0, i32 6
  store i1 false, ptr %memberidx5.i.i.i.i, align 1
  %395 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %396 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %396, i64 0, i32 1
  %397 = load ptr, ptr %memberidx.i68, align 8
  %398 = load i64, ptr %397, align 4
  %399 = icmp eq i64 %398, 33
  %400 = load i64, ptr %memberidx3.i.i.i.i.i, align 4
  %401 = icmp eq i64 %400, 0
  %402 = and i1 %399, %401
  br i1 %402, label %while.body.i.i70.i.i.lr.ph, label %Parser_new_lines.exit.i.i.i

while.body.i.i70.i.i.lr.ph:                       ; preds = %if.entry16.i.i
  %403 = load ptr, ptr %3, align 8
  %memberidx2.i5.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %403, i64 0, i32 1
  %.pre373 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i.i70.i.i

while.body.i.i70.i.i:                             ; preds = %while.body.i.i70.i.i.lr.ph, %Parser_advance.exit.i.i.i.i
  %404 = phi ptr [ %397, %while.body.i.i70.i.i.lr.ph ], [ %414, %Parser_advance.exit.i.i.i.i ]
  %405 = phi i64 [ %.pre373, %while.body.i.i70.i.i.lr.ph ], [ %415, %Parser_advance.exit.i.i.i.i ]
  %406 = load i64, ptr %memberidx2.i5.i.i.i.i, align 4
  %407 = icmp slt i64 %405, %406
  br i1 %407, label %if.entry.i.i.i.i.i, label %Parser_advance.exit.i.i.i.i

if.entry.i.i.i.i.i:                               ; preds = %while.body.i.i70.i.i
  %408 = add nsw i64 %405, 1
  store i64 %408, ptr %memberidx2.i, align 8
  %409 = load ptr, ptr %403, align 8
  %410 = getelementptr inbounds ptr, ptr %409, i64 %408
  %411 = load ptr, ptr %410, align 8
  store ptr %411, ptr %memberidx.i68, align 8
  %.pre374 = load i64, ptr %411, align 4
  %.pre375 = load i64, ptr %memberidx3.i.i.i.i.i, align 4
  br label %Parser_advance.exit.i.i.i.i

Parser_advance.exit.i.i.i.i:                      ; preds = %if.entry.i.i.i.i.i, %while.body.i.i70.i.i
  %412 = phi i64 [ %.pre375, %if.entry.i.i.i.i.i ], [ 0, %while.body.i.i70.i.i ]
  %413 = phi i64 [ %.pre374, %if.entry.i.i.i.i.i ], [ 33, %while.body.i.i70.i.i ]
  %414 = phi ptr [ %411, %if.entry.i.i.i.i.i ], [ %404, %while.body.i.i70.i.i ]
  %415 = phi i64 [ %408, %if.entry.i.i.i.i.i ], [ %405, %while.body.i.i70.i.i ]
  %416 = icmp eq i64 %413, 33
  %417 = icmp eq i64 %412, 0
  %418 = and i1 %416, %417
  br i1 %418, label %while.body.i.i70.i.i, label %Parser_new_lines.exit.i.i.i

Parser_new_lines.exit.i.i.i:                      ; preds = %Parser_advance.exit.i.i.i.i, %if.entry16.i.i
  %.lcssa292 = phi ptr [ %397, %if.entry16.i.i ], [ %414, %Parser_advance.exit.i.i.i.i ]
  %.lcssa291 = phi i64 [ %398, %if.entry16.i.i ], [ %413, %Parser_advance.exit.i.i.i.i ]
  %.not.i.i.i = icmp eq i64 %.lcssa291, 26
  br i1 %.not.i.i.i, label %ifend.i74.i.i, label %if.entry.i73.i.i

if.entry.i73.i.i:                                 ; preds = %Parser_new_lines.exit.i.i.i
  %memberidx3.i72.i.i = getelementptr inbounds %IdentifierToken, ptr %.lcssa292, i64 0, i32 2
  %419 = load ptr, ptr %memberidx3.i72.i.i, align 8
  %420 = call ptr @malloc(i32 4)
  store i32 1936287860, ptr %420, align 8
  %421 = call ptr @malloc(i32 24)
  store ptr %420, ptr %421, align 8
  %memberidx1.i.i59.i.i.i = getelementptr inbounds %String, ptr %421, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i59.i.i.i, align 4
  %memberidx2.i.i60.i.i.i = getelementptr inbounds %String, ptr %421, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i60.i.i.i, align 4
  %memberidx.i61.i.i.i = getelementptr inbounds %String, ptr %419, i64 0, i32 1
  %422 = load i64, ptr %memberidx.i61.i.i.i, align 4
  %.not.i.i.i.i = icmp eq i64 %422, 4
  br i1 %.not.i.i.i.i, label %ifend.i.i.i.i, label %ifend.i74.i.i

ifend.i.i.i.i:                                    ; preds = %if.entry.i73.i.i
  %423 = load ptr, ptr %419, align 8
  %424 = call i64 @memcmp(ptr %423, ptr nonnull %420, i64 4)
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %if.entry4.i.i.i, label %ifend.i74.i.i

ifend.i74.i.i:                                    ; preds = %if.entry.i73.i.i, %if.entry4.i.i.i, %if.entry.i.i76.i.i, %ifend.i.i.i.i, %Parser_new_lines.exit.i.i.i
  %426 = load ptr, ptr %memberidx.i68, align 8
  %427 = load i64, ptr %426, align 4
  %.not57.i.i.i = icmp eq i64 %427, 26
  br i1 %.not57.i.i.i, label %Parser_new_lines.exit77.i.i.i, label %if.entry10.i.i.i

if.entry4.i.i.i:                                  ; preds = %ifend.i.i.i.i
  store i1 false, ptr %memberidx4.i.i.i.i, align 1
  %428 = load i64, ptr %memberidx2.i, align 8
  %429 = load ptr, ptr %3, align 8
  %memberidx2.i.i75.i.i = getelementptr inbounds %Array_Token_, ptr %429, i64 0, i32 1
  %430 = load i64, ptr %memberidx2.i.i75.i.i, align 4
  %431 = icmp slt i64 %428, %430
  br i1 %431, label %if.entry.i.i76.i.i, label %ifend.i74.i.i

if.entry.i.i76.i.i:                               ; preds = %if.entry4.i.i.i
  %432 = add nsw i64 %428, 1
  store i64 %432, ptr %memberidx2.i, align 8
  %433 = load ptr, ptr %429, align 8
  %434 = getelementptr inbounds ptr, ptr %433, i64 %432
  %435 = load ptr, ptr %434, align 8
  store ptr %435, ptr %memberidx.i68, align 8
  br label %ifend.i74.i.i

if.entry10.i.i.i:                                 ; preds = %ifend.i74.i.i
  %436 = load i1, ptr %memberidx4.i.i.i.i, align 1
  br i1 %436, label %ifend12.i.i.i, label %if.entry14.i.i.i

ifend12.i.i.i:                                    ; preds = %if.entry10.i.i.i, %if.entry14.i.i.i
  %437 = load ptr, ptr %memberidx1.i.i65.i.i, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %437)
  %.pre376 = load ptr, ptr %memberidx.i68, align 8
  %.pre377 = load i64, ptr %.pre376, align 4
  %438 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i69.i.i.i = getelementptr inbounds %Array_FloError_, ptr %438, i64 0, i32 1
  %439 = icmp eq i64 %.pre377, 33
  %440 = load i64, ptr %memberidx3.i.i69.i.i.i, align 4
  %441 = icmp eq i64 %440, 0
  %442 = and i1 %439, %441
  br i1 %442, label %while.body.i73.i.i.i.lr.ph, label %Parser_new_lines.exit77.i.i.i

while.body.i73.i.i.i.lr.ph:                       ; preds = %ifend12.i.i.i
  %443 = load ptr, ptr %3, align 8
  %memberidx2.i5.i72.i.i.i = getelementptr inbounds %Array_Token_, ptr %443, i64 0, i32 1
  %.pre378 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i73.i.i.i

while.body.i73.i.i.i:                             ; preds = %while.body.i73.i.i.i.lr.ph, %Parser_advance.exit.i76.i.i.i
  %444 = phi i64 [ %.pre378, %while.body.i73.i.i.i.lr.ph ], [ %453, %Parser_advance.exit.i76.i.i.i ]
  %445 = load i64, ptr %memberidx2.i5.i72.i.i.i, align 4
  %446 = icmp slt i64 %444, %445
  br i1 %446, label %if.entry.i.i75.i.i.i, label %Parser_advance.exit.i76.i.i.i

if.entry.i.i75.i.i.i:                             ; preds = %while.body.i73.i.i.i
  %447 = add nsw i64 %444, 1
  store i64 %447, ptr %memberidx2.i, align 8
  %448 = load ptr, ptr %443, align 8
  %449 = getelementptr inbounds ptr, ptr %448, i64 %447
  %450 = load ptr, ptr %449, align 8
  store ptr %450, ptr %memberidx.i68, align 8
  %.pre379 = load i64, ptr %450, align 4
  %.pre380 = load i64, ptr %memberidx3.i.i69.i.i.i, align 4
  br label %Parser_advance.exit.i76.i.i.i

Parser_advance.exit.i76.i.i.i:                    ; preds = %if.entry.i.i75.i.i.i, %while.body.i73.i.i.i
  %451 = phi i64 [ %.pre380, %if.entry.i.i75.i.i.i ], [ 0, %while.body.i73.i.i.i ]
  %452 = phi i64 [ %.pre379, %if.entry.i.i75.i.i.i ], [ 33, %while.body.i73.i.i.i ]
  %453 = phi i64 [ %447, %if.entry.i.i75.i.i.i ], [ %444, %while.body.i73.i.i.i ]
  %454 = icmp eq i64 %452, 33
  %455 = icmp eq i64 %451, 0
  %456 = and i1 %454, %455
  br i1 %456, label %while.body.i73.i.i.i, label %Parser_new_lines.exit77.i.i.i

Parser_new_lines.exit77.i.i.i:                    ; preds = %Parser_advance.exit.i76.i.i.i, %ifend.i74.i.i, %ifend12.i.i.i
  %457 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %458 = load ptr, ptr %memberidx.i68, align 8
  %459 = load i64, ptr %458, align 4
  %460 = icmp eq i64 %459, 1
  br i1 %460, label %if.entry20.i.i.i, label %else21.i.i.i

if.entry14.i.i.i:                                 ; preds = %if.entry10.i.i.i
  %461 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 3)
  br label %ifend12.i.i.i

if.entry20.i.i.i:                                 ; preds = %Parser_new_lines.exit77.i.i.i
  %462 = load i64, ptr %memberidx2.i, align 8
  %463 = load ptr, ptr %3, align 8
  %memberidx2.i79.i.i.i = getelementptr inbounds %Array_Token_, ptr %463, i64 0, i32 1
  %464 = load i64, ptr %memberidx2.i79.i.i.i, align 4
  %465 = icmp slt i64 %462, %464
  br i1 %465, label %if.entry.i81.i.i.i, label %Parser_advance.exit83.i.i.i

if.entry.i81.i.i.i:                               ; preds = %if.entry20.i.i.i
  %466 = add nsw i64 %462, 1
  store i64 %466, ptr %memberidx2.i, align 8
  %467 = load ptr, ptr %463, align 8
  %468 = getelementptr inbounds ptr, ptr %467, i64 %466
  %469 = load ptr, ptr %468, align 8
  store ptr %469, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit83.i.i.i

Parser_advance.exit83.i.i.i:                      ; preds = %if.entry.i81.i.i.i, %if.entry20.i.i.i
  %memberidx23.i.i.i = getelementptr inbounds %MethodNode, ptr %391, i64 0, i32 4
  %470 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %470, ptr %memberidx23.i.i.i, align 8
  br label %ifend22.i.i.i

else21.i.i.i:                                     ; preds = %Parser_new_lines.exit77.i.i.i
  %471 = call ptr @malloc(i32 24)
  %472 = call ptr @malloc(i32 4)
  store i32 1684631414, ptr %472, align 8
  %473 = call ptr @malloc(i32 24)
  store ptr %472, ptr %473, align 8
  %memberidx1.i.i101.i.i.i = getelementptr inbounds %String, ptr %473, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i101.i.i.i, align 4
  %memberidx2.i.i102.i.i.i = getelementptr inbounds %String, ptr %473, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i102.i.i.i, align 4
  %474 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %474, i8 0, i64 32, i1 false)
  store i64 53, ptr %471, align 4
  %memberidx1.i.i106.i.i.i = getelementptr inbounds %Token, ptr %471, i64 0, i32 1
  store ptr %474, ptr %memberidx1.i.i106.i.i.i, align 8
  %memberidx.i107.i.i.i = getelementptr inbounds %IdentifierToken, ptr %471, i64 0, i32 2
  store ptr %473, ptr %memberidx.i107.i.i.i, align 8
  %memberidx24.i.i.i = getelementptr inbounds %MethodNode, ptr %391, i64 0, i32 4
  %475 = call ptr @malloc(i32 32)
  %476 = load ptr, ptr %memberidx1.i.i106.i.i.i, align 8
  store ptr %476, ptr %475, align 8
  %memberidx.i.i96.i.i.i = getelementptr inbounds %TypeNode, ptr %475, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i96.i.i.i, align 4
  %memberidx.i97.i.i.i = getelementptr inbounds %RecordTypeNode, ptr %475, i64 0, i32 2
  store ptr %471, ptr %memberidx.i97.i.i.i, align 8
  %memberidx1.i98.i.i.i = getelementptr inbounds %RecordTypeNode, ptr %475, i64 0, i32 3
  %477 = call ptr @malloc(i32 24)
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %477, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i.i.i, align 4
  %memberidx1.i.i99.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %477, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i99.i.i.i, align 4
  %478 = call ptr @malloc(i32 64)
  store ptr %478, ptr %477, align 8
  store i64 0, ptr %memberidx.i5.i.i.i.i, align 4
  store ptr %477, ptr %memberidx1.i98.i.i.i, align 8
  store ptr %475, ptr %memberidx24.i.i.i, align 8
  br label %ifend22.i.i.i

ifend22.i.i.i:                                    ; preds = %else21.i.i.i, %Parser_advance.exit83.i.i.i
  %479 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i87.i.i.i = getelementptr inbounds %Array_FloError_, ptr %479, i64 0, i32 1
  %480 = load ptr, ptr %memberidx.i68, align 8
  %481 = load i64, ptr %480, align 4
  %482 = icmp eq i64 %481, 33
  %483 = load i64, ptr %memberidx3.i.i87.i.i.i, align 4
  %484 = icmp eq i64 %483, 0
  %485 = and i1 %482, %484
  br i1 %485, label %while.body.i91.i.i.i.lr.ph, label %Parser_new_lines.exit95.i.i.i

while.body.i91.i.i.i.lr.ph:                       ; preds = %ifend22.i.i.i
  %486 = load ptr, ptr %3, align 8
  %memberidx2.i5.i90.i.i.i = getelementptr inbounds %Array_Token_, ptr %486, i64 0, i32 1
  %.pre381 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i91.i.i.i

while.body.i91.i.i.i:                             ; preds = %while.body.i91.i.i.i.lr.ph, %Parser_advance.exit.i94.i.i.i
  %487 = phi i64 [ %.pre381, %while.body.i91.i.i.i.lr.ph ], [ %496, %Parser_advance.exit.i94.i.i.i ]
  %488 = load i64, ptr %memberidx2.i5.i90.i.i.i, align 4
  %489 = icmp slt i64 %487, %488
  br i1 %489, label %if.entry.i.i93.i.i.i, label %Parser_advance.exit.i94.i.i.i

if.entry.i.i93.i.i.i:                             ; preds = %while.body.i91.i.i.i
  %490 = add nsw i64 %487, 1
  store i64 %490, ptr %memberidx2.i, align 8
  %491 = load ptr, ptr %486, align 8
  %492 = getelementptr inbounds ptr, ptr %491, i64 %490
  %493 = load ptr, ptr %492, align 8
  store ptr %493, ptr %memberidx.i68, align 8
  %.pre382 = load i64, ptr %493, align 4
  %.pre383 = load i64, ptr %memberidx3.i.i87.i.i.i, align 4
  br label %Parser_advance.exit.i94.i.i.i

Parser_advance.exit.i94.i.i.i:                    ; preds = %if.entry.i.i93.i.i.i, %while.body.i91.i.i.i
  %494 = phi i64 [ %.pre383, %if.entry.i.i93.i.i.i ], [ 0, %while.body.i91.i.i.i ]
  %495 = phi i64 [ %.pre382, %if.entry.i.i93.i.i.i ], [ 33, %while.body.i91.i.i.i ]
  %496 = phi i64 [ %490, %if.entry.i.i93.i.i.i ], [ %487, %while.body.i91.i.i.i ]
  %497 = icmp eq i64 %495, 33
  %498 = icmp eq i64 %494, 0
  %499 = and i1 %497, %498
  br i1 %499, label %while.body.i91.i.i.i, label %Parser_new_lines.exit95.i.i.i

Parser_new_lines.exit95.i.i.i:                    ; preds = %Parser_advance.exit.i94.i.i.i, %ifend22.i.i.i
  %.lcssa293 = phi i64 [ %481, %ifend22.i.i.i ], [ %495, %Parser_advance.exit.i94.i.i.i ]
  %500 = icmp eq i64 %.lcssa293, 27
  br i1 %500, label %if.entry28.i.i.i, label %else29.i.i.i

if.entry28.i.i.i:                                 ; preds = %Parser_new_lines.exit95.i.i.i
  %memberidx31.i.i.i = getelementptr inbounds %MethodNode, ptr %391, i64 0, i32 2
  %501 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %501, ptr %memberidx31.i.i.i, align 8
  br label %Parser_parse_method.exit.i.i

else29.i.i.i:                                     ; preds = %Parser_new_lines.exit95.i.i.i
  store i1 true, ptr %memberidx5.i.i.i.i, align 1
  br label %Parser_parse_method.exit.i.i

Parser_parse_method.exit.i.i:                     ; preds = %else29.i.i.i, %if.entry28.i.i.i
  %memberidx19.i.i = getelementptr inbounds %MethodNode, ptr %391, i64 0, i32 3
  store i64 %access_modifier.0.i.i, ptr %memberidx19.i.i, align 4
  %502 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx.i62.i.i = getelementptr inbounds %Array_MethodNode_, ptr %502, i64 0, i32 1
  %503 = load i64, ptr %memberidx.i62.i.i, align 4
  %504 = add i64 %503, 1
  %memberidx.i.i63.i.i = getelementptr inbounds %Array_MethodNode_, ptr %502, i64 0, i32 2
  %505 = load i64, ptr %memberidx.i.i63.i.i, align 4
  %506 = icmp slt i64 %505, %504
  %.pre384 = load ptr, ptr %502, align 8
  br i1 %506, label %while.body.i.i.i.i, label %Array_MethodNode____sl__.exit.i.i

while.body.i.i.i.i:                               ; preds = %Parser_parse_method.exit.i.i, %while.body.i.i.i.i
  %507 = phi ptr [ %511, %while.body.i.i.i.i ], [ %.pre384, %Parser_parse_method.exit.i.i ]
  %508 = phi i64 [ %512, %while.body.i.i.i.i ], [ %505, %Parser_parse_method.exit.i.i ]
  %509 = shl nuw i64 %508, 1
  store i64 %509, ptr %memberidx.i.i63.i.i, align 4
  %510 = shl i64 %508, 4
  %511 = call ptr @realloc(ptr %507, i64 %510)
  store ptr %511, ptr %502, align 8
  %512 = load i64, ptr %memberidx.i.i63.i.i, align 4
  %513 = icmp slt i64 %512, %504
  br i1 %513, label %while.body.i.i.i.i, label %Array_MethodNode____sl__.exit.i.i.loopexit

Array_MethodNode____sl__.exit.i.i.loopexit:       ; preds = %while.body.i.i.i.i
  %.pre385 = load i64, ptr %memberidx.i62.i.i, align 4
  %.pre424 = add nsw i64 %.pre385, 1
  br label %Array_MethodNode____sl__.exit.i.i

Array_MethodNode____sl__.exit.i.i:                ; preds = %Parser_parse_method.exit.i.i, %Array_MethodNode____sl__.exit.i.i.loopexit
  %.pre-phi425 = phi i64 [ %.pre424, %Array_MethodNode____sl__.exit.i.i.loopexit ], [ %504, %Parser_parse_method.exit.i.i ]
  %514 = phi ptr [ %511, %Array_MethodNode____sl__.exit.i.i.loopexit ], [ %.pre384, %Parser_parse_method.exit.i.i ]
  %515 = phi i64 [ %.pre385, %Array_MethodNode____sl__.exit.i.i.loopexit ], [ %503, %Parser_parse_method.exit.i.i ]
  store i64 %.pre-phi425, ptr %memberidx.i62.i.i, align 4
  %516 = getelementptr inbounds ptr, ptr %514, i64 %515
  store ptr %391, ptr %516, align 8
  br label %ifend5.i.i

else17.i.i:                                       ; preds = %Parser_peek.exit83.i.i
  %517 = call ptr @malloc(i32 19)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %517, ptr noundef nonnull align 8 dereferenceable(19) @76, i64 19, i1 false)
  %518 = call ptr @malloc(i32 24)
  store ptr %517, ptr %518, align 8
  %memberidx1.i.i51.i.i = getelementptr inbounds %String, ptr %518, i64 0, i32 1
  store i64 19, ptr %memberidx1.i.i51.i.i, align 4
  %memberidx2.i.i52.i.i = getelementptr inbounds %String, ptr %518, i64 0, i32 2
  store i64 19, ptr %memberidx2.i.i52.i.i, align 4
  %519 = load ptr, ptr %memberidx1.i, align 8
  %520 = call ptr @malloc(i32 24)
  %521 = load ptr, ptr %memberidx.i68, align 8
  %memberidx2.i.i.i134 = getelementptr inbounds %Token, ptr %521, i64 0, i32 1
  %522 = load ptr, ptr %memberidx2.i.i.i134, align 8
  store i64 2, ptr %520, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloError, ptr %520, i64 0, i32 2
  store ptr %522, ptr %memberidx1.i.i.i.i, align 8
  %memberidx2.i.i46.i.i = getelementptr inbounds %FloError, ptr %520, i64 0, i32 1
  store ptr %518, ptr %memberidx2.i.i46.i.i, align 8
  %memberidx.i.i47.i.i = getelementptr inbounds %Array_FloError_, ptr %519, i64 0, i32 1
  %523 = load i64, ptr %memberidx.i.i47.i.i, align 4
  %524 = add i64 %523, 1
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %519, i64 0, i32 2
  %525 = load i64, ptr %memberidx.i.i.i.i.i, align 4
  %526 = icmp slt i64 %525, %524
  %.pre370 = load ptr, ptr %519, align 8
  br i1 %526, label %while.body.i.i.i.i.i, label %Parser_error.exit.i.i

while.body.i.i.i.i.i:                             ; preds = %else17.i.i, %while.body.i.i.i.i.i
  %527 = phi ptr [ %531, %while.body.i.i.i.i.i ], [ %.pre370, %else17.i.i ]
  %528 = phi i64 [ %532, %while.body.i.i.i.i.i ], [ %525, %else17.i.i ]
  %529 = shl nuw i64 %528, 1
  store i64 %529, ptr %memberidx.i.i.i.i.i, align 4
  %530 = shl i64 %528, 4
  %531 = call ptr @realloc(ptr %527, i64 %530)
  store ptr %531, ptr %519, align 8
  %532 = load i64, ptr %memberidx.i.i.i.i.i, align 4
  %533 = icmp slt i64 %532, %524
  br i1 %533, label %while.body.i.i.i.i.i, label %Parser_error.exit.i.i.loopexit

Parser_error.exit.i.i.loopexit:                   ; preds = %while.body.i.i.i.i.i
  %.pre371 = load i64, ptr %memberidx.i.i47.i.i, align 4
  %.pre426 = add nsw i64 %.pre371, 1
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else17.i.i, %Parser_error.exit.i.i.loopexit
  %.pre-phi427 = phi i64 [ %.pre426, %Parser_error.exit.i.i.loopexit ], [ %524, %else17.i.i ]
  %534 = phi ptr [ %531, %Parser_error.exit.i.i.loopexit ], [ %.pre370, %else17.i.i ]
  %535 = phi i64 [ %.pre371, %Parser_error.exit.i.i.loopexit ], [ %523, %else17.i.i ]
  store i64 %.pre-phi427, ptr %memberidx.i.i47.i.i, align 4
  %536 = getelementptr inbounds ptr, ptr %534, i64 %535
  store ptr %520, ptr %536, align 8
  br label %Parser_parse_class.exit

Parser_parse_class.exit:                          ; preds = %while.end.i.i, %Parser_error.exit.i.i
  %memberidx.i135 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %164, i64 0, i32 1
  %537 = load i64, ptr %memberidx.i135, align 4
  %538 = add i64 %537, 1
  %memberidx.i.i136 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %164, i64 0, i32 2
  %539 = load i64, ptr %memberidx.i.i136, align 4
  %540 = icmp slt i64 %539, %538
  %.pre393 = load ptr, ptr %164, align 8
  br i1 %540, label %while.body.i.i138, label %Array_ClassDeclarationNode____sl__.exit

while.body.i.i138:                                ; preds = %Parser_parse_class.exit, %while.body.i.i138
  %541 = phi ptr [ %545, %while.body.i.i138 ], [ %.pre393, %Parser_parse_class.exit ]
  %542 = phi i64 [ %546, %while.body.i.i138 ], [ %539, %Parser_parse_class.exit ]
  %543 = shl nuw i64 %542, 1
  store i64 %543, ptr %memberidx.i.i136, align 4
  %544 = shl i64 %542, 4
  %545 = call ptr @realloc(ptr %541, i64 %544)
  store ptr %545, ptr %164, align 8
  %546 = load i64, ptr %memberidx.i.i136, align 4
  %547 = icmp slt i64 %546, %538
  br i1 %547, label %while.body.i.i138, label %Array_ClassDeclarationNode____sl__.exit.loopexit

Array_ClassDeclarationNode____sl__.exit.loopexit: ; preds = %while.body.i.i138
  %.pre394 = load i64, ptr %memberidx.i135, align 4
  %.pre422 = add nsw i64 %.pre394, 1
  br label %Array_ClassDeclarationNode____sl__.exit

Array_ClassDeclarationNode____sl__.exit:          ; preds = %Parser_parse_class.exit, %Array_ClassDeclarationNode____sl__.exit.loopexit
  %.pre-phi423 = phi i64 [ %.pre422, %Array_ClassDeclarationNode____sl__.exit.loopexit ], [ %538, %Parser_parse_class.exit ]
  %548 = phi ptr [ %545, %Array_ClassDeclarationNode____sl__.exit.loopexit ], [ %.pre393, %Parser_parse_class.exit ]
  %549 = phi i64 [ %.pre394, %Array_ClassDeclarationNode____sl__.exit.loopexit ], [ %537, %Parser_parse_class.exit ]
  store i64 %.pre-phi423, ptr %memberidx.i135, align 4
  %550 = getelementptr inbounds ptr, ptr %548, i64 %549
  store ptr %173, ptr %550, align 8
  br label %ifend

if.entry11:                                       ; preds = %while.body
  %551 = load ptr, ptr %memberidx14, align 8
  %552 = load i64, ptr %memberidx2.i, align 8
  %553 = load ptr, ptr %3, align 8
  %memberidx2.i.i140 = getelementptr inbounds %Array_Token_, ptr %553, i64 0, i32 1
  %554 = load i64, ptr %memberidx2.i.i140, align 4
  %555 = icmp slt i64 %552, %554
  br i1 %555, label %if.entry.i.i142, label %Parser_advance.exit.i147

if.entry.i.i142:                                  ; preds = %if.entry11
  %556 = add nsw i64 %552, 1
  store i64 %556, ptr %memberidx2.i, align 8
  %557 = load ptr, ptr %553, align 8
  %558 = getelementptr inbounds ptr, ptr %557, i64 %556
  %559 = load ptr, ptr %558, align 8
  store ptr %559, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit.i147

Parser_advance.exit.i147:                         ; preds = %if.entry.i.i142, %if.entry11
  %560 = call ptr @malloc(i32 24)
  %561 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %561, ptr %560, align 8
  %memberidx1.i.i143 = getelementptr inbounds %EnumNode, ptr %560, i64 0, i32 1
  %562 = call ptr @malloc(i32 24)
  %memberidx.i.i33.i = getelementptr inbounds %Array_EnumNodeField_, ptr %562, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i33.i, align 4
  %memberidx1.i.i.i144 = getelementptr inbounds %Array_EnumNodeField_, ptr %562, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i144, align 4
  %563 = call ptr @malloc(i32 64)
  store ptr %563, ptr %562, align 8
  store i64 0, ptr %memberidx.i.i33.i, align 4
  store ptr %562, ptr %memberidx1.i.i143, align 8
  %memberidx4.i.i145 = getelementptr inbounds %EnumNode, ptr %560, i64 0, i32 2
  store ptr null, ptr %memberidx4.i.i145, align 8
  %564 = load ptr, ptr %memberidx.i68, align 8
  %565 = load i64, ptr %564, align 4
  %566 = icmp eq i64 %565, 25
  br i1 %566, label %if.entry.i148, label %ifend.i150

if.entry.i148:                                    ; preds = %Parser_advance.exit.i147
  %567 = load i64, ptr %memberidx2.i, align 8
  %568 = load ptr, ptr %3, align 8
  %memberidx2.i36.i = getelementptr inbounds %Array_Token_, ptr %568, i64 0, i32 1
  %569 = load i64, ptr %memberidx2.i36.i, align 4
  %570 = icmp slt i64 %567, %569
  br i1 %570, label %if.entry.i38.i, label %Parser_advance.exit39.i

if.entry.i38.i:                                   ; preds = %if.entry.i148
  %571 = add nsw i64 %567, 1
  store i64 %571, ptr %memberidx2.i, align 8
  %572 = load ptr, ptr %568, align 8
  %573 = getelementptr inbounds ptr, ptr %572, i64 %571
  %574 = load ptr, ptr %573, align 8
  store ptr %574, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit39.i

Parser_advance.exit39.i:                          ; preds = %if.entry.i38.i, %if.entry.i148
  %575 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %575, ptr %memberidx4.i.i145, align 8
  %576 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %.pre335 = load ptr, ptr %memberidx.i68, align 8
  %.pre336 = load i64, ptr %.pre335, align 4
  br label %ifend.i150

ifend.i150:                                       ; preds = %Parser_advance.exit39.i, %Parser_advance.exit.i147
  %577 = phi i64 [ %.pre336, %Parser_advance.exit39.i ], [ %565, %Parser_advance.exit.i147 ]
  %578 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i43.i = getelementptr inbounds %Array_FloError_, ptr %578, i64 0, i32 1
  %579 = icmp eq i64 %577, 33
  %580 = load i64, ptr %memberidx3.i.i43.i, align 4
  %581 = icmp eq i64 %580, 0
  %582 = and i1 %579, %581
  br i1 %582, label %while.body.i47.i.lr.ph, label %Parser_new_lines.exit51.i

while.body.i47.i.lr.ph:                           ; preds = %ifend.i150
  %583 = load ptr, ptr %3, align 8
  %memberidx2.i5.i46.i = getelementptr inbounds %Array_Token_, ptr %583, i64 0, i32 1
  %.pre337 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i47.i

while.body.i47.i:                                 ; preds = %while.body.i47.i.lr.ph, %Parser_advance.exit.i50.i
  %584 = phi i64 [ %.pre337, %while.body.i47.i.lr.ph ], [ %593, %Parser_advance.exit.i50.i ]
  %585 = load i64, ptr %memberidx2.i5.i46.i, align 4
  %586 = icmp slt i64 %584, %585
  br i1 %586, label %if.entry.i.i49.i, label %Parser_advance.exit.i50.i

if.entry.i.i49.i:                                 ; preds = %while.body.i47.i
  %587 = add nsw i64 %584, 1
  store i64 %587, ptr %memberidx2.i, align 8
  %588 = load ptr, ptr %583, align 8
  %589 = getelementptr inbounds ptr, ptr %588, i64 %587
  %590 = load ptr, ptr %589, align 8
  store ptr %590, ptr %memberidx.i68, align 8
  %.pre338 = load i64, ptr %590, align 4
  %.pre339 = load i64, ptr %memberidx3.i.i43.i, align 4
  br label %Parser_advance.exit.i50.i

Parser_advance.exit.i50.i:                        ; preds = %if.entry.i.i49.i, %while.body.i47.i
  %591 = phi i64 [ %.pre339, %if.entry.i.i49.i ], [ 0, %while.body.i47.i ]
  %592 = phi i64 [ %.pre338, %if.entry.i.i49.i ], [ 33, %while.body.i47.i ]
  %593 = phi i64 [ %587, %if.entry.i.i49.i ], [ %584, %while.body.i47.i ]
  %594 = icmp eq i64 %592, 33
  %595 = icmp eq i64 %591, 0
  %596 = and i1 %594, %595
  br i1 %596, label %while.body.i47.i, label %Parser_new_lines.exit51.i

Parser_new_lines.exit51.i:                        ; preds = %Parser_advance.exit.i50.i, %ifend.i150
  %597 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 27)
  %598 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i55.i = getelementptr inbounds %Array_FloError_, ptr %598, i64 0, i32 1
  %599 = load ptr, ptr %memberidx.i68, align 8
  %600 = load i64, ptr %599, align 4
  %601 = icmp eq i64 %600, 33
  %602 = load i64, ptr %memberidx3.i.i55.i, align 4
  %603 = icmp eq i64 %602, 0
  %604 = and i1 %601, %603
  br i1 %604, label %while.body.i59.i.lr.ph, label %while.entry.i152.preheader

while.body.i59.i.lr.ph:                           ; preds = %Parser_new_lines.exit51.i
  %605 = load ptr, ptr %3, align 8
  %memberidx2.i5.i58.i = getelementptr inbounds %Array_Token_, ptr %605, i64 0, i32 1
  %.pre340 = load i64, ptr %memberidx2.i, align 8
  br label %while.body.i59.i

while.entry.i152.preheader:                       ; preds = %Parser_advance.exit.i62.i, %Parser_new_lines.exit51.i
  %606 = phi i64 [ %600, %Parser_new_lines.exit51.i ], [ %616, %Parser_advance.exit.i62.i ]
  %607 = icmp eq i64 %606, 53
  br i1 %607, label %while.body.i153, label %Parser_parse_enum.exit

while.body.i59.i:                                 ; preds = %while.body.i59.i.lr.ph, %Parser_advance.exit.i62.i
  %608 = phi i64 [ 33, %while.body.i59.i.lr.ph ], [ %616, %Parser_advance.exit.i62.i ]
  %609 = phi i64 [ %.pre340, %while.body.i59.i.lr.ph ], [ %619, %Parser_advance.exit.i62.i ]
  %610 = load i64, ptr %memberidx2.i5.i58.i, align 4
  %611 = icmp slt i64 %609, %610
  br i1 %611, label %if.entry.i.i61.i, label %Parser_advance.exit.i62.i

if.entry.i.i61.i:                                 ; preds = %while.body.i59.i
  %612 = add nsw i64 %609, 1
  store i64 %612, ptr %memberidx2.i, align 8
  %613 = load ptr, ptr %605, align 8
  %614 = getelementptr inbounds ptr, ptr %613, i64 %612
  %615 = load ptr, ptr %614, align 8
  store ptr %615, ptr %memberidx.i68, align 8
  %.pre341 = load i64, ptr %615, align 4
  %.pre342 = load i64, ptr %memberidx3.i.i55.i, align 4
  br label %Parser_advance.exit.i62.i

Parser_advance.exit.i62.i:                        ; preds = %if.entry.i.i61.i, %while.body.i59.i
  %616 = phi i64 [ %.pre341, %if.entry.i.i61.i ], [ %608, %while.body.i59.i ]
  %617 = phi i64 [ %.pre342, %if.entry.i.i61.i ], [ 0, %while.body.i59.i ]
  %618 = phi i64 [ %.pre341, %if.entry.i.i61.i ], [ 33, %while.body.i59.i ]
  %619 = phi i64 [ %612, %if.entry.i.i61.i ], [ %609, %while.body.i59.i ]
  %620 = icmp eq i64 %618, 33
  %621 = icmp eq i64 %617, 0
  %622 = and i1 %620, %621
  br i1 %622, label %while.body.i59.i, label %while.entry.i152.preheader

while.entry.i152.loopexit:                        ; preds = %Parser_advance.exit.i.i167, %Array_EnumNodeField____sl__.exit.i
  %623 = phi i64 [ %656, %Array_EnumNodeField____sl__.exit.i ], [ %673, %Parser_advance.exit.i.i167 ]
  %624 = icmp eq i64 %623, 53
  br i1 %624, label %while.body.i153, label %Parser_parse_enum.exit

while.body.i153:                                  ; preds = %while.entry.i152.preheader, %while.entry.i152.loopexit
  %625 = call ptr @malloc(i32 16)
  %626 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %626, ptr %625, align 8
  %memberidx1.i69.i = getelementptr inbounds %EnumNodeField, ptr %625, i64 0, i32 1
  store ptr null, ptr %memberidx1.i69.i, align 8
  %627 = load ptr, ptr %memberidx.i68, align 8
  %628 = load i64, ptr %627, align 4
  %629 = icmp eq i64 %628, 38
  br i1 %629, label %if.entry7.i, label %ifend9.i

if.entry7.i:                                      ; preds = %while.body.i153
  %630 = load i64, ptr %memberidx2.i, align 8
  %631 = load ptr, ptr %3, align 8
  %memberidx2.i65.i = getelementptr inbounds %Array_Token_, ptr %631, i64 0, i32 1
  %632 = load i64, ptr %memberidx2.i65.i, align 4
  %633 = icmp slt i64 %630, %632
  br i1 %633, label %if.entry.i67.i, label %Parser_advance.exit68.i

if.entry.i67.i:                                   ; preds = %if.entry7.i
  %634 = add nsw i64 %630, 1
  store i64 %634, ptr %memberidx2.i, align 8
  %635 = load ptr, ptr %631, align 8
  %636 = getelementptr inbounds ptr, ptr %635, i64 %634
  %637 = load ptr, ptr %636, align 8
  store ptr %637, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit68.i

Parser_advance.exit68.i:                          ; preds = %if.entry.i67.i, %if.entry7.i
  %638 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %638, ptr %memberidx1.i69.i, align 8
  br label %ifend9.i

ifend9.i:                                         ; preds = %Parser_advance.exit68.i, %while.body.i153
  %639 = load ptr, ptr %memberidx1.i.i143, align 8
  %memberidx.i31.i = getelementptr inbounds %Array_EnumNodeField_, ptr %639, i64 0, i32 1
  %640 = load i64, ptr %memberidx.i31.i, align 4
  %641 = add i64 %640, 1
  %memberidx.i.i32.i = getelementptr inbounds %Array_EnumNodeField_, ptr %639, i64 0, i32 2
  %642 = load i64, ptr %memberidx.i.i32.i, align 4
  %643 = icmp slt i64 %642, %641
  %.pre343 = load ptr, ptr %639, align 8
  br i1 %643, label %while.body.i.i.i157, label %Array_EnumNodeField____sl__.exit.i

while.body.i.i.i157:                              ; preds = %ifend9.i, %while.body.i.i.i157
  %644 = phi ptr [ %648, %while.body.i.i.i157 ], [ %.pre343, %ifend9.i ]
  %645 = phi i64 [ %649, %while.body.i.i.i157 ], [ %642, %ifend9.i ]
  %646 = shl nuw i64 %645, 1
  store i64 %646, ptr %memberidx.i.i32.i, align 4
  %647 = shl i64 %645, 4
  %648 = call ptr @realloc(ptr %644, i64 %647)
  store ptr %648, ptr %639, align 8
  %649 = load i64, ptr %memberidx.i.i32.i, align 4
  %650 = icmp slt i64 %649, %641
  br i1 %650, label %while.body.i.i.i157, label %Array_EnumNodeField____sl__.exit.i.loopexit

Array_EnumNodeField____sl__.exit.i.loopexit:      ; preds = %while.body.i.i.i157
  %.pre344 = load i64, ptr %memberidx.i31.i, align 4
  %.pre428 = add nsw i64 %.pre344, 1
  br label %Array_EnumNodeField____sl__.exit.i

Array_EnumNodeField____sl__.exit.i:               ; preds = %ifend9.i, %Array_EnumNodeField____sl__.exit.i.loopexit
  %.pre-phi429 = phi i64 [ %.pre428, %Array_EnumNodeField____sl__.exit.i.loopexit ], [ %641, %ifend9.i ]
  %651 = phi ptr [ %648, %Array_EnumNodeField____sl__.exit.i.loopexit ], [ %.pre343, %ifend9.i ]
  %652 = phi i64 [ %.pre344, %Array_EnumNodeField____sl__.exit.i.loopexit ], [ %640, %ifend9.i ]
  store i64 %.pre-phi429, ptr %memberidx.i31.i, align 4
  %653 = getelementptr inbounds ptr, ptr %651, i64 %652
  store ptr %625, ptr %653, align 8
  %654 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i160 = getelementptr inbounds %Array_FloError_, ptr %654, i64 0, i32 1
  %655 = load ptr, ptr %memberidx.i68, align 8
  %656 = load i64, ptr %655, align 4
  %657 = icmp eq i64 %656, 33
  %658 = load i64, ptr %memberidx3.i.i.i160, align 4
  %659 = icmp eq i64 %658, 0
  %660 = and i1 %657, %659
  br i1 %660, label %while.body.i.i164.lr.ph, label %while.entry.i152.loopexit

while.body.i.i164.lr.ph:                          ; preds = %Array_EnumNodeField____sl__.exit.i
  %661 = load ptr, ptr %3, align 8
  %memberidx2.i5.i.i163 = getelementptr inbounds %Array_Token_, ptr %661, i64 0, i32 1
  %662 = load i64, ptr %memberidx2.i, align 8
  %663 = load i64, ptr %memberidx2.i5.i.i163, align 4
  %664 = icmp slt i64 %662, %663
  br i1 %664, label %while.body.i.i164, label %while.body.i.i164.us

while.body.i.i164.us:                             ; preds = %while.body.i.i164.lr.ph, %while.body.i.i164.us
  br label %while.body.i.i164.us

while.body.i.i164:                                ; preds = %while.body.i.i164.lr.ph, %Parser_advance.exit.i.i167
  %665 = phi i64 [ %673, %Parser_advance.exit.i.i167 ], [ 33, %while.body.i.i164.lr.ph ]
  %666 = phi i64 [ %676, %Parser_advance.exit.i.i167 ], [ %662, %while.body.i.i164.lr.ph ]
  %667 = load i64, ptr %memberidx2.i5.i.i163, align 4
  %668 = icmp slt i64 %666, %667
  br i1 %668, label %if.entry.i.i.i166, label %Parser_advance.exit.i.i167

if.entry.i.i.i166:                                ; preds = %while.body.i.i164
  %669 = add nsw i64 %666, 1
  store i64 %669, ptr %memberidx2.i, align 8
  %670 = load ptr, ptr %661, align 8
  %671 = getelementptr inbounds ptr, ptr %670, i64 %669
  %672 = load ptr, ptr %671, align 8
  store ptr %672, ptr %memberidx.i68, align 8
  %.pre346 = load i64, ptr %672, align 4
  %.pre347 = load i64, ptr %memberidx3.i.i.i160, align 4
  br label %Parser_advance.exit.i.i167

Parser_advance.exit.i.i167:                       ; preds = %if.entry.i.i.i166, %while.body.i.i164
  %673 = phi i64 [ %.pre346, %if.entry.i.i.i166 ], [ %665, %while.body.i.i164 ]
  %674 = phi i64 [ %.pre347, %if.entry.i.i.i166 ], [ 0, %while.body.i.i164 ]
  %675 = phi i64 [ %.pre346, %if.entry.i.i.i166 ], [ 33, %while.body.i.i164 ]
  %676 = phi i64 [ %669, %if.entry.i.i.i166 ], [ %666, %while.body.i.i164 ]
  %677 = icmp eq i64 %675, 33
  %678 = icmp eq i64 %674, 0
  %679 = and i1 %677, %678
  br i1 %679, label %while.body.i.i164, label %while.entry.i152.loopexit

Parser_parse_enum.exit:                           ; preds = %while.entry.i152.loopexit, %while.entry.i152.preheader
  %680 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 28)
  %memberidx.i169 = getelementptr inbounds %Array_EnumNode_, ptr %551, i64 0, i32 1
  %681 = load i64, ptr %memberidx.i169, align 4
  %682 = add i64 %681, 1
  %memberidx.i.i170 = getelementptr inbounds %Array_EnumNode_, ptr %551, i64 0, i32 2
  %683 = load i64, ptr %memberidx.i.i170, align 4
  %684 = icmp slt i64 %683, %682
  %.pre348 = load ptr, ptr %551, align 8
  br i1 %684, label %while.body.i.i172, label %Array_EnumNode____sl__.exit

while.body.i.i172:                                ; preds = %Parser_parse_enum.exit, %while.body.i.i172
  %685 = phi ptr [ %689, %while.body.i.i172 ], [ %.pre348, %Parser_parse_enum.exit ]
  %686 = phi i64 [ %690, %while.body.i.i172 ], [ %683, %Parser_parse_enum.exit ]
  %687 = shl nuw i64 %686, 1
  store i64 %687, ptr %memberidx.i.i170, align 4
  %688 = shl i64 %686, 4
  %689 = call ptr @realloc(ptr %685, i64 %688)
  store ptr %689, ptr %551, align 8
  %690 = load i64, ptr %memberidx.i.i170, align 4
  %691 = icmp slt i64 %690, %682
  br i1 %691, label %while.body.i.i172, label %Array_EnumNode____sl__.exit.loopexit

Array_EnumNode____sl__.exit.loopexit:             ; preds = %while.body.i.i172
  %.pre349 = load i64, ptr %memberidx.i169, align 4
  %.pre430 = add nsw i64 %.pre349, 1
  br label %Array_EnumNode____sl__.exit

Array_EnumNode____sl__.exit:                      ; preds = %Parser_parse_enum.exit, %Array_EnumNode____sl__.exit.loopexit
  %.pre-phi431 = phi i64 [ %.pre430, %Array_EnumNode____sl__.exit.loopexit ], [ %682, %Parser_parse_enum.exit ]
  %692 = phi ptr [ %689, %Array_EnumNode____sl__.exit.loopexit ], [ %.pre348, %Parser_parse_enum.exit ]
  %693 = phi i64 [ %.pre349, %Array_EnumNode____sl__.exit.loopexit ], [ %681, %Parser_parse_enum.exit ]
  store i64 %.pre-phi431, ptr %memberidx.i169, align 4
  %694 = getelementptr inbounds ptr, ptr %692, i64 %693
  store ptr %560, ptr %694, align 8
  br label %ifend

if.entry17:                                       ; preds = %while.body
  %695 = load ptr, ptr %memberidx20, align 8
  %696 = load i64, ptr %memberidx2.i, align 8
  %697 = load ptr, ptr %3, align 8
  %memberidx2.i.i174 = getelementptr inbounds %Array_Token_, ptr %697, i64 0, i32 1
  %698 = load i64, ptr %memberidx2.i.i174, align 4
  %699 = icmp slt i64 %696, %698
  br i1 %699, label %if.entry.i.i176, label %Parser_advance.exit.i180

if.entry.i.i176:                                  ; preds = %if.entry17
  %700 = add nsw i64 %696, 1
  store i64 %700, ptr %memberidx2.i, align 8
  %701 = load ptr, ptr %697, align 8
  %702 = getelementptr inbounds ptr, ptr %701, i64 %700
  %703 = load ptr, ptr %702, align 8
  store ptr %703, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit.i180

Parser_advance.exit.i180:                         ; preds = %if.entry.i.i176, %if.entry17
  %704 = call ptr @malloc(i32 24)
  %705 = call ptr @malloc(i32 24)
  %memberidx.i.i.i177 = getelementptr inbounds %Array_ImportClause_, ptr %705, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i177, align 4
  %memberidx1.i.i.i178 = getelementptr inbounds %Array_ImportClause_, ptr %705, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i178, align 4
  %706 = call ptr @malloc(i32 64)
  store ptr %706, ptr %705, align 8
  store i64 0, ptr %memberidx.i.i.i177, align 4
  store ptr %705, ptr %704, align 8
  %memberidx3.i29.i = getelementptr inbounds %ImportNode, ptr %704, i64 0, i32 2
  store ptr null, ptr %memberidx3.i29.i, align 8
  %707 = load ptr, ptr %memberidx.i68, align 8
  %708 = load i64, ptr %707, align 4
  %709 = icmp eq i64 %708, 53
  br i1 %709, label %if.entry.i182, label %ifend.i192

if.entry.i182:                                    ; preds = %Parser_advance.exit.i180
  %710 = call ptr @malloc(i32 16)
  %711 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %711, ptr %710, align 8
  %memberidx1.i.i30.i = getelementptr inbounds %ImportClause, ptr %710, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i30.i, align 8
  %712 = load ptr, ptr %memberidx.i68, align 8
  %713 = load i64, ptr %712, align 4
  %714 = icmp eq i64 %713, 74
  br i1 %714, label %if.entry.i33.i, label %Parser_parse_import_clause.exit.i

if.entry.i33.i:                                   ; preds = %if.entry.i182
  %715 = load i64, ptr %memberidx2.i, align 8
  %716 = load ptr, ptr %3, align 8
  %memberidx2.i.i.i184 = getelementptr inbounds %Array_Token_, ptr %716, i64 0, i32 1
  %717 = load i64, ptr %memberidx2.i.i.i184, align 4
  %718 = icmp slt i64 %715, %717
  br i1 %718, label %if.entry.i.i.i186, label %Parser_advance.exit.i.i187

if.entry.i.i.i186:                                ; preds = %if.entry.i33.i
  %719 = add nsw i64 %715, 1
  store i64 %719, ptr %memberidx2.i, align 8
  %720 = load ptr, ptr %716, align 8
  %721 = getelementptr inbounds ptr, ptr %720, i64 %719
  %722 = load ptr, ptr %721, align 8
  store ptr %722, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit.i.i187

Parser_advance.exit.i.i187:                       ; preds = %if.entry.i.i.i186, %if.entry.i33.i
  %723 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %723, ptr %memberidx1.i.i30.i, align 8
  br label %Parser_parse_import_clause.exit.i

Parser_parse_import_clause.exit.i:                ; preds = %Parser_advance.exit.i.i187, %if.entry.i182
  %724 = load i64, ptr %memberidx.i.i.i177, align 4
  %725 = add i64 %724, 1
  %726 = load i64, ptr %memberidx1.i.i.i178, align 4
  %727 = icmp slt i64 %726, %725
  %.pre324 = load ptr, ptr %705, align 8
  br i1 %727, label %while.body.i.i.i190, label %Array_ImportClause____sl__.exit.i

while.body.i.i.i190:                              ; preds = %Parser_parse_import_clause.exit.i, %while.body.i.i.i190
  %728 = phi ptr [ %732, %while.body.i.i.i190 ], [ %.pre324, %Parser_parse_import_clause.exit.i ]
  %729 = phi i64 [ %733, %while.body.i.i.i190 ], [ %726, %Parser_parse_import_clause.exit.i ]
  %730 = shl nuw i64 %729, 1
  store i64 %730, ptr %memberidx1.i.i.i178, align 4
  %731 = shl i64 %729, 4
  %732 = call ptr @realloc(ptr %728, i64 %731)
  store ptr %732, ptr %705, align 8
  %733 = load i64, ptr %memberidx1.i.i.i178, align 4
  %734 = icmp slt i64 %733, %725
  br i1 %734, label %while.body.i.i.i190, label %Array_ImportClause____sl__.exit.i.loopexit

Array_ImportClause____sl__.exit.i.loopexit:       ; preds = %while.body.i.i.i190
  %.pre325 = load i64, ptr %memberidx.i.i.i177, align 4
  %.pre432 = add nsw i64 %.pre325, 1
  br label %Array_ImportClause____sl__.exit.i

Array_ImportClause____sl__.exit.i:                ; preds = %Parser_parse_import_clause.exit.i, %Array_ImportClause____sl__.exit.i.loopexit
  %.pre-phi433 = phi i64 [ %.pre432, %Array_ImportClause____sl__.exit.i.loopexit ], [ %725, %Parser_parse_import_clause.exit.i ]
  %735 = phi ptr [ %732, %Array_ImportClause____sl__.exit.i.loopexit ], [ %.pre324, %Parser_parse_import_clause.exit.i ]
  %736 = phi i64 [ %.pre325, %Array_ImportClause____sl__.exit.i.loopexit ], [ %724, %Parser_parse_import_clause.exit.i ]
  store i64 %.pre-phi433, ptr %memberidx.i.i.i177, align 4
  %737 = getelementptr inbounds ptr, ptr %735, i64 %736
  store ptr %710, ptr %737, align 8
  %738 = load ptr, ptr %memberidx.i68, align 8
  %739 = load i64, ptr %738, align 4
  %740 = icmp eq i64 %739, 3
  %741 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i46.i295 = getelementptr inbounds %Array_FloError_, ptr %741, i64 0, i32 1
  %742 = load i64, ptr %memberidx3.i46.i295, align 4
  %743 = icmp eq i64 %742, 0
  %744 = and i1 %740, %743
  br i1 %744, label %while.body.i201, label %while.end.i

ifend.i192thread-pre-split:                       ; preds = %if.entry.i51.i, %if.entry.i.i53.i199, %else.i55.i
  %.ph = phi ptr [ %.lcssa290, %if.entry.i51.i ], [ %769, %if.entry.i.i53.i199 ], [ %.pre330, %else.i55.i ]
  %.pr = load i64, ptr %.ph, align 4
  br label %ifend.i192

ifend.i192:                                       ; preds = %ifend.i192thread-pre-split, %Parser_advance.exit.i180
  %745 = phi i64 [ %.pr, %ifend.i192thread-pre-split ], [ %708, %Parser_advance.exit.i180 ]
  %746 = phi ptr [ %.ph, %ifend.i192thread-pre-split ], [ %707, %Parser_advance.exit.i180 ]
  %memberidx6.i = getelementptr inbounds %ImportNode, ptr %704, i64 0, i32 1
  %747 = icmp eq i64 %745, 34
  br i1 %747, label %if.entry.i40.i, label %else.i.i194

if.entry.i40.i:                                   ; preds = %ifend.i192
  %748 = load i64, ptr %memberidx2.i, align 8
  %749 = load ptr, ptr %3, align 8
  %memberidx2.i.i39.i = getelementptr inbounds %Array_Token_, ptr %749, i64 0, i32 1
  %750 = load i64, ptr %memberidx2.i.i39.i, align 4
  %751 = icmp slt i64 %748, %750
  br i1 %751, label %if.entry.i.i42.i, label %Parser_eat.exit.i

if.entry.i.i42.i:                                 ; preds = %if.entry.i40.i
  %752 = add nsw i64 %748, 1
  store i64 %752, ptr %memberidx2.i, align 8
  %753 = load ptr, ptr %749, align 8
  %754 = getelementptr inbounds ptr, ptr %753, i64 %752
  %755 = load ptr, ptr %754, align 8
  store ptr %755, ptr %memberidx.i68, align 8
  br label %Parser_eat.exit.i

else.i.i194:                                      ; preds = %ifend.i192
  %756 = call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %746, i64 0, i32 1
  %757 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %756, align 4
  %memberidx1.i75.i.i = getelementptr inbounds %Token, ptr %756, i64 0, i32 1
  store ptr %757, ptr %memberidx1.i75.i.i, align 8
  %.pre331 = load ptr, ptr %memberidx.i68, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i40.i, %if.entry.i.i42.i, %else.i.i194
  %758 = phi ptr [ %.pre331, %else.i.i194 ], [ %755, %if.entry.i.i42.i ], [ %746, %if.entry.i40.i ]
  %common.ret.op.i.i = phi ptr [ %756, %else.i.i194 ], [ %746, %if.entry.i.i42.i ], [ %746, %if.entry.i40.i ]
  store ptr %common.ret.op.i.i, ptr %memberidx6.i, align 8
  %759 = load i64, ptr %758, align 4
  %760 = icmp eq i64 %759, 74
  br i1 %760, label %if.entry9.i, label %Parser_parse_import.exit

while.end.i:                                      ; preds = %Array_ImportClause____sl__.exit78.i, %Array_ImportClause____sl__.exit.i
  %.lcssa290 = phi ptr [ %738, %Array_ImportClause____sl__.exit.i ], [ %809, %Array_ImportClause____sl__.exit78.i ]
  %.lcssa = phi i64 [ %739, %Array_ImportClause____sl__.exit.i ], [ %810, %Array_ImportClause____sl__.exit78.i ]
  %761 = icmp eq i64 %.lcssa, 69
  br i1 %761, label %if.entry.i51.i, label %else.i55.i

if.entry.i51.i:                                   ; preds = %while.end.i
  %762 = load i64, ptr %memberidx2.i, align 8
  %763 = load ptr, ptr %3, align 8
  %memberidx2.i.i50.i198 = getelementptr inbounds %Array_Token_, ptr %763, i64 0, i32 1
  %764 = load i64, ptr %memberidx2.i.i50.i198, align 4
  %765 = icmp slt i64 %762, %764
  br i1 %765, label %if.entry.i.i53.i199, label %ifend.i192thread-pre-split

if.entry.i.i53.i199:                              ; preds = %if.entry.i51.i
  %766 = add nsw i64 %762, 1
  store i64 %766, ptr %memberidx2.i, align 8
  %767 = load ptr, ptr %763, align 8
  %768 = getelementptr inbounds ptr, ptr %767, i64 %766
  %769 = load ptr, ptr %768, align 8
  store ptr %769, ptr %memberidx.i68, align 8
  br label %ifend.i192thread-pre-split

else.i55.i:                                       ; preds = %while.end.i
  %770 = call ptr @malloc(i32 16)
  %memberidx35.i56.i = getelementptr inbounds %Token, ptr %.lcssa290, i64 0, i32 1
  %771 = load ptr, ptr %memberidx35.i56.i, align 8
  store i64 46, ptr %770, align 4
  %memberidx1.i75.i57.i = getelementptr inbounds %Token, ptr %770, i64 0, i32 1
  store ptr %771, ptr %memberidx1.i75.i57.i, align 8
  %.pre330 = load ptr, ptr %memberidx.i68, align 8
  br label %ifend.i192thread-pre-split

while.body.i201:                                  ; preds = %Array_ImportClause____sl__.exit.i, %Array_ImportClause____sl__.exit78.i
  %772 = load i64, ptr %memberidx2.i, align 8
  %773 = load ptr, ptr %3, align 8
  %memberidx2.i60.i = getelementptr inbounds %Array_Token_, ptr %773, i64 0, i32 1
  %774 = load i64, ptr %memberidx2.i60.i, align 4
  %775 = icmp slt i64 %772, %774
  br i1 %775, label %if.entry.i62.i, label %Parser_advance.exit63.i

if.entry.i62.i:                                   ; preds = %while.body.i201
  %776 = add nsw i64 %772, 1
  store i64 %776, ptr %memberidx2.i, align 8
  %777 = load ptr, ptr %773, align 8
  %778 = getelementptr inbounds ptr, ptr %777, i64 %776
  %779 = load ptr, ptr %778, align 8
  store ptr %779, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit63.i

Parser_advance.exit63.i:                          ; preds = %if.entry.i62.i, %while.body.i201
  %780 = load ptr, ptr %704, align 8
  %781 = call ptr @malloc(i32 16)
  %782 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %782, ptr %781, align 8
  %memberidx1.i.i64.i = getelementptr inbounds %ImportClause, ptr %781, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i64.i, align 8
  %783 = load ptr, ptr %memberidx.i68, align 8
  %784 = load i64, ptr %783, align 4
  %785 = icmp eq i64 %784, 74
  br i1 %785, label %if.entry.i68.i, label %Parser_parse_import_clause.exit73.i

if.entry.i68.i:                                   ; preds = %Parser_advance.exit63.i
  %786 = load i64, ptr %memberidx2.i, align 8
  %787 = load ptr, ptr %3, align 8
  %memberidx2.i.i67.i = getelementptr inbounds %Array_Token_, ptr %787, i64 0, i32 1
  %788 = load i64, ptr %memberidx2.i.i67.i, align 4
  %789 = icmp slt i64 %786, %788
  br i1 %789, label %if.entry.i.i70.i, label %Parser_advance.exit.i72.i

if.entry.i.i70.i:                                 ; preds = %if.entry.i68.i
  %790 = add nsw i64 %786, 1
  store i64 %790, ptr %memberidx2.i, align 8
  %791 = load ptr, ptr %787, align 8
  %792 = getelementptr inbounds ptr, ptr %791, i64 %790
  %793 = load ptr, ptr %792, align 8
  store ptr %793, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit.i72.i

Parser_advance.exit.i72.i:                        ; preds = %if.entry.i.i70.i, %if.entry.i68.i
  %794 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %794, ptr %memberidx1.i.i64.i, align 8
  br label %Parser_parse_import_clause.exit73.i

Parser_parse_import_clause.exit73.i:              ; preds = %Parser_advance.exit.i72.i, %Parser_advance.exit63.i
  %memberidx.i74.i = getelementptr inbounds %Array_ImportClause_, ptr %780, i64 0, i32 1
  %795 = load i64, ptr %memberidx.i74.i, align 4
  %796 = add i64 %795, 1
  %memberidx.i.i75.i = getelementptr inbounds %Array_ImportClause_, ptr %780, i64 0, i32 2
  %797 = load i64, ptr %memberidx.i.i75.i, align 4
  %798 = icmp slt i64 %797, %796
  %.pre327 = load ptr, ptr %780, align 8
  br i1 %798, label %while.body.i.i77.i, label %Array_ImportClause____sl__.exit78.i

while.body.i.i77.i:                               ; preds = %Parser_parse_import_clause.exit73.i, %while.body.i.i77.i
  %799 = phi ptr [ %803, %while.body.i.i77.i ], [ %.pre327, %Parser_parse_import_clause.exit73.i ]
  %800 = phi i64 [ %804, %while.body.i.i77.i ], [ %797, %Parser_parse_import_clause.exit73.i ]
  %801 = shl nuw i64 %800, 1
  store i64 %801, ptr %memberidx.i.i75.i, align 4
  %802 = shl i64 %800, 4
  %803 = call ptr @realloc(ptr %799, i64 %802)
  store ptr %803, ptr %780, align 8
  %804 = load i64, ptr %memberidx.i.i75.i, align 4
  %805 = icmp slt i64 %804, %796
  br i1 %805, label %while.body.i.i77.i, label %Array_ImportClause____sl__.exit78.i.loopexit

Array_ImportClause____sl__.exit78.i.loopexit:     ; preds = %while.body.i.i77.i
  %.pre328 = load i64, ptr %memberidx.i74.i, align 4
  %.pre434 = add nsw i64 %.pre328, 1
  br label %Array_ImportClause____sl__.exit78.i

Array_ImportClause____sl__.exit78.i:              ; preds = %Parser_parse_import_clause.exit73.i, %Array_ImportClause____sl__.exit78.i.loopexit
  %.pre-phi435 = phi i64 [ %.pre434, %Array_ImportClause____sl__.exit78.i.loopexit ], [ %796, %Parser_parse_import_clause.exit73.i ]
  %806 = phi ptr [ %803, %Array_ImportClause____sl__.exit78.i.loopexit ], [ %.pre327, %Parser_parse_import_clause.exit73.i ]
  %807 = phi i64 [ %.pre328, %Array_ImportClause____sl__.exit78.i.loopexit ], [ %795, %Parser_parse_import_clause.exit73.i ]
  store i64 %.pre-phi435, ptr %memberidx.i74.i, align 4
  %808 = getelementptr inbounds ptr, ptr %806, i64 %807
  store ptr %781, ptr %808, align 8
  %809 = load ptr, ptr %memberidx.i68, align 8
  %810 = load i64, ptr %809, align 4
  %811 = icmp eq i64 %810, 3
  %812 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i46.i = getelementptr inbounds %Array_FloError_, ptr %812, i64 0, i32 1
  %813 = load i64, ptr %memberidx3.i46.i, align 4
  %814 = icmp eq i64 %813, 0
  %815 = and i1 %811, %814
  br i1 %815, label %while.body.i201, label %while.end.i

if.entry9.i:                                      ; preds = %Parser_eat.exit.i
  %816 = load i64, ptr %memberidx2.i, align 8
  %817 = load ptr, ptr %3, align 8
  %memberidx2.i80.i = getelementptr inbounds %Array_Token_, ptr %817, i64 0, i32 1
  %818 = load i64, ptr %memberidx2.i80.i, align 4
  %819 = icmp slt i64 %816, %818
  br i1 %819, label %if.entry.i82.i, label %Parser_advance.exit83.i

if.entry.i82.i:                                   ; preds = %if.entry9.i
  %820 = add nsw i64 %816, 1
  store i64 %820, ptr %memberidx2.i, align 8
  %821 = load ptr, ptr %817, align 8
  %822 = getelementptr inbounds ptr, ptr %821, i64 %820
  %823 = load ptr, ptr %822, align 8
  store ptr %823, ptr %memberidx.i68, align 8
  br label %Parser_advance.exit83.i

Parser_advance.exit83.i:                          ; preds = %if.entry.i82.i, %if.entry9.i
  %824 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %824, ptr %memberidx3.i29.i, align 8
  br label %Parser_parse_import.exit

Parser_parse_import.exit:                         ; preds = %Parser_eat.exit.i, %Parser_advance.exit83.i
  %memberidx.i202 = getelementptr inbounds %Array_ImportNode_, ptr %695, i64 0, i32 1
  %825 = load i64, ptr %memberidx.i202, align 4
  %826 = add i64 %825, 1
  %memberidx.i.i203 = getelementptr inbounds %Array_ImportNode_, ptr %695, i64 0, i32 2
  %827 = load i64, ptr %memberidx.i.i203, align 4
  %828 = icmp slt i64 %827, %826
  %.pre332 = load ptr, ptr %695, align 8
  br i1 %828, label %while.body.i.i205, label %Array_ImportNode____sl__.exit

while.body.i.i205:                                ; preds = %Parser_parse_import.exit, %while.body.i.i205
  %829 = phi ptr [ %833, %while.body.i.i205 ], [ %.pre332, %Parser_parse_import.exit ]
  %830 = phi i64 [ %834, %while.body.i.i205 ], [ %827, %Parser_parse_import.exit ]
  %831 = shl nuw i64 %830, 1
  store i64 %831, ptr %memberidx.i.i203, align 4
  %832 = shl i64 %830, 4
  %833 = call ptr @realloc(ptr %829, i64 %832)
  store ptr %833, ptr %695, align 8
  %834 = load i64, ptr %memberidx.i.i203, align 4
  %835 = icmp slt i64 %834, %826
  br i1 %835, label %while.body.i.i205, label %Array_ImportNode____sl__.exit.loopexit

Array_ImportNode____sl__.exit.loopexit:           ; preds = %while.body.i.i205
  %.pre333 = load i64, ptr %memberidx.i202, align 4
  %.pre436 = add nsw i64 %.pre333, 1
  br label %Array_ImportNode____sl__.exit

Array_ImportNode____sl__.exit:                    ; preds = %Parser_parse_import.exit, %Array_ImportNode____sl__.exit.loopexit
  %.pre-phi437 = phi i64 [ %.pre436, %Array_ImportNode____sl__.exit.loopexit ], [ %826, %Parser_parse_import.exit ]
  %836 = phi ptr [ %833, %Array_ImportNode____sl__.exit.loopexit ], [ %.pre332, %Parser_parse_import.exit ]
  %837 = phi i64 [ %.pre333, %Array_ImportNode____sl__.exit.loopexit ], [ %825, %Parser_parse_import.exit ]
  store i64 %.pre-phi437, ptr %memberidx.i202, align 4
  %838 = getelementptr inbounds ptr, ptr %836, i64 %837
  store ptr %704, ptr %838, align 8
  br label %ifend

if.entry23:                                       ; preds = %while.body
  %839 = load ptr, ptr %memberidx26, align 8
  %840 = call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %3)
  %memberidx.i206 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %839, i64 0, i32 1
  %841 = load i64, ptr %memberidx.i206, align 4
  %842 = add i64 %841, 1
  %memberidx.i.i207 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %839, i64 0, i32 2
  %843 = load i64, ptr %memberidx.i.i207, align 4
  %844 = icmp slt i64 %843, %842
  %.pre321 = load ptr, ptr %839, align 8
  br i1 %844, label %while.body.i.i209, label %Array_ConstDeclarationStatement____sl__.exit

while.body.i.i209:                                ; preds = %if.entry23, %while.body.i.i209
  %845 = phi ptr [ %849, %while.body.i.i209 ], [ %.pre321, %if.entry23 ]
  %846 = phi i64 [ %850, %while.body.i.i209 ], [ %843, %if.entry23 ]
  %847 = shl nuw i64 %846, 1
  store i64 %847, ptr %memberidx.i.i207, align 4
  %848 = shl i64 %846, 4
  %849 = call ptr @realloc(ptr %845, i64 %848)
  store ptr %849, ptr %839, align 8
  %850 = load i64, ptr %memberidx.i.i207, align 4
  %851 = icmp slt i64 %850, %842
  br i1 %851, label %while.body.i.i209, label %Array_ConstDeclarationStatement____sl__.exit.loopexit

Array_ConstDeclarationStatement____sl__.exit.loopexit: ; preds = %while.body.i.i209
  %.pre322 = load i64, ptr %memberidx.i206, align 4
  %.pre438 = add nsw i64 %.pre322, 1
  br label %Array_ConstDeclarationStatement____sl__.exit

Array_ConstDeclarationStatement____sl__.exit:     ; preds = %if.entry23, %Array_ConstDeclarationStatement____sl__.exit.loopexit
  %.pre-phi439 = phi i64 [ %.pre438, %Array_ConstDeclarationStatement____sl__.exit.loopexit ], [ %842, %if.entry23 ]
  %852 = phi ptr [ %849, %Array_ConstDeclarationStatement____sl__.exit.loopexit ], [ %.pre321, %if.entry23 ]
  %853 = phi i64 [ %.pre322, %Array_ConstDeclarationStatement____sl__.exit.loopexit ], [ %841, %if.entry23 ]
  store i64 %.pre-phi439, ptr %memberidx.i206, align 4
  %854 = getelementptr inbounds ptr, ptr %852, i64 %853
  store ptr %840, ptr %854, align 8
  br label %ifend

if.entry29:                                       ; preds = %while.body
  %855 = load ptr, ptr %memberidx32, align 8
  %856 = call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %3)
  %memberidx.i210 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %855, i64 0, i32 1
  %857 = load i64, ptr %memberidx.i210, align 4
  %858 = add i64 %857, 1
  %memberidx.i.i211 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %855, i64 0, i32 2
  %859 = load i64, ptr %memberidx.i.i211, align 4
  %860 = icmp slt i64 %859, %858
  %.pre318 = load ptr, ptr %855, align 8
  br i1 %860, label %while.body.i.i213, label %Array_VarDeclarationStatement____sl__.exit

while.body.i.i213:                                ; preds = %if.entry29, %while.body.i.i213
  %861 = phi ptr [ %865, %while.body.i.i213 ], [ %.pre318, %if.entry29 ]
  %862 = phi i64 [ %866, %while.body.i.i213 ], [ %859, %if.entry29 ]
  %863 = shl nuw i64 %862, 1
  store i64 %863, ptr %memberidx.i.i211, align 4
  %864 = shl i64 %862, 4
  %865 = call ptr @realloc(ptr %861, i64 %864)
  store ptr %865, ptr %855, align 8
  %866 = load i64, ptr %memberidx.i.i211, align 4
  %867 = icmp slt i64 %866, %858
  br i1 %867, label %while.body.i.i213, label %Array_VarDeclarationStatement____sl__.exit.loopexit

Array_VarDeclarationStatement____sl__.exit.loopexit: ; preds = %while.body.i.i213
  %.pre319 = load i64, ptr %memberidx.i210, align 4
  %.pre440 = add nsw i64 %.pre319, 1
  br label %Array_VarDeclarationStatement____sl__.exit

Array_VarDeclarationStatement____sl__.exit:       ; preds = %if.entry29, %Array_VarDeclarationStatement____sl__.exit.loopexit
  %.pre-phi441 = phi i64 [ %.pre440, %Array_VarDeclarationStatement____sl__.exit.loopexit ], [ %858, %if.entry29 ]
  %868 = phi ptr [ %865, %Array_VarDeclarationStatement____sl__.exit.loopexit ], [ %.pre318, %if.entry29 ]
  %869 = phi i64 [ %.pre319, %Array_VarDeclarationStatement____sl__.exit.loopexit ], [ %857, %if.entry29 ]
  store i64 %.pre-phi441, ptr %memberidx.i210, align 4
  %870 = getelementptr inbounds ptr, ptr %868, i64 %869
  store ptr %856, ptr %870, align 8
  br label %ifend

if.entry.i219:                                    ; preds = %while.body
  %memberidx1.i214 = getelementptr inbounds %IdentifierToken, ptr %42, i64 0, i32 2
  %871 = load ptr, ptr %memberidx1.i214, align 8
  %872 = call ptr @malloc(i32 4)
  store i32 1701869940, ptr %872, align 8
  %873 = call ptr @malloc(i32 24)
  store ptr %872, ptr %873, align 8
  %memberidx1.i.i.i215 = getelementptr inbounds %String, ptr %873, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i215, align 4
  %memberidx2.i.i.i216 = getelementptr inbounds %String, ptr %873, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i216, align 4
  %memberidx.i.i217 = getelementptr inbounds %String, ptr %871, i64 0, i32 1
  %874 = load i64, ptr %memberidx.i.i217, align 4
  %.not.i.i = icmp eq i64 %874, 4
  br i1 %.not.i.i, label %ifend.i.i220, label %else35

ifend.i.i220:                                     ; preds = %if.entry.i219
  %875 = load ptr, ptr %871, align 8
  %876 = call i64 @memcmp(ptr %875, ptr nonnull %872, i64 4)
  %877 = icmp eq i64 %876, 0
  br i1 %877, label %if.entry34, label %else35

if.entry34:                                       ; preds = %ifend.i.i220
  %878 = load ptr, ptr %memberidx37, align 8
  %879 = load i64, ptr %memberidx2.i, align 8
  %880 = load ptr, ptr %3, align 8
  %memberidx2.i.i223 = getelementptr inbounds %Array_Token_, ptr %880, i64 0, i32 1
  %881 = load i64, ptr %memberidx2.i.i223, align 4
  %882 = icmp slt i64 %879, %881
  br i1 %882, label %if.entry.i.i225, label %Parser_parse_type_alias.exit

if.entry.i.i225:                                  ; preds = %if.entry34
  %883 = add nsw i64 %879, 1
  store i64 %883, ptr %memberidx2.i, align 8
  %884 = load ptr, ptr %880, align 8
  %885 = getelementptr inbounds ptr, ptr %884, i64 %883
  %886 = load ptr, ptr %885, align 8
  store ptr %886, ptr %memberidx.i68, align 8
  br label %Parser_parse_type_alias.exit

Parser_parse_type_alias.exit:                     ; preds = %if.entry34, %if.entry.i.i225
  %887 = call ptr @malloc(i32 16)
  %888 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %888, ptr %887, align 8
  %889 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 38)
  %memberidx.i226 = getelementptr inbounds %TypeAliasNode, ptr %887, i64 0, i32 1
  %890 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %890, ptr %memberidx.i226, align 8
  %memberidx.i81 = getelementptr inbounds %Array_TypeAliasNode_, ptr %878, i64 0, i32 1
  %891 = load i64, ptr %memberidx.i81, align 4
  %892 = add i64 %891, 1
  %memberidx.i.i82 = getelementptr inbounds %Array_TypeAliasNode_, ptr %878, i64 0, i32 2
  %893 = load i64, ptr %memberidx.i.i82, align 4
  %894 = icmp slt i64 %893, %892
  %.pre315 = load ptr, ptr %878, align 8
  br i1 %894, label %while.body.i.i, label %Array_TypeAliasNode____sl__.exit

while.body.i.i:                                   ; preds = %Parser_parse_type_alias.exit, %while.body.i.i
  %895 = phi ptr [ %899, %while.body.i.i ], [ %.pre315, %Parser_parse_type_alias.exit ]
  %896 = phi i64 [ %900, %while.body.i.i ], [ %893, %Parser_parse_type_alias.exit ]
  %897 = shl nuw i64 %896, 1
  store i64 %897, ptr %memberidx.i.i82, align 4
  %898 = shl i64 %896, 4
  %899 = call ptr @realloc(ptr %895, i64 %898)
  store ptr %899, ptr %878, align 8
  %900 = load i64, ptr %memberidx.i.i82, align 4
  %901 = icmp slt i64 %900, %892
  br i1 %901, label %while.body.i.i, label %Array_TypeAliasNode____sl__.exit.loopexit

Array_TypeAliasNode____sl__.exit.loopexit:        ; preds = %while.body.i.i
  %.pre316 = load i64, ptr %memberidx.i81, align 4
  %.pre442 = add nsw i64 %.pre316, 1
  br label %Array_TypeAliasNode____sl__.exit

Array_TypeAliasNode____sl__.exit:                 ; preds = %Parser_parse_type_alias.exit, %Array_TypeAliasNode____sl__.exit.loopexit
  %.pre-phi443 = phi i64 [ %.pre442, %Array_TypeAliasNode____sl__.exit.loopexit ], [ %892, %Parser_parse_type_alias.exit ]
  %902 = phi ptr [ %899, %Array_TypeAliasNode____sl__.exit.loopexit ], [ %.pre315, %Parser_parse_type_alias.exit ]
  %903 = phi i64 [ %.pre316, %Array_TypeAliasNode____sl__.exit.loopexit ], [ %891, %Parser_parse_type_alias.exit ]
  store i64 %.pre-phi443, ptr %memberidx.i81, align 4
  %904 = getelementptr inbounds ptr, ptr %902, i64 %903
  store ptr %887, ptr %904, align 8
  br label %ifend

else35:                                           ; preds = %while.body, %if.entry.i219, %ifend.i.i220
  %905 = call ptr @malloc(i32 87)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(87) %905, ptr noundef nonnull align 8 dereferenceable(87) @77, i64 87, i1 false)
  %906 = call ptr @malloc(i32 24)
  store ptr %905, ptr %906, align 8
  %memberidx1.i.i71 = getelementptr inbounds %String, ptr %906, i64 0, i32 1
  store i64 87, ptr %memberidx1.i.i71, align 4
  %memberidx2.i.i72 = getelementptr inbounds %String, ptr %906, i64 0, i32 2
  store i64 87, ptr %memberidx2.i.i72, align 4
  %907 = load ptr, ptr %memberidx1.i, align 8
  %908 = call ptr @malloc(i32 24)
  %909 = load ptr, ptr %memberidx.i68, align 8
  %memberidx2.i65 = getelementptr inbounds %Token, ptr %909, i64 0, i32 1
  %910 = load ptr, ptr %memberidx2.i65, align 8
  store i64 2, ptr %908, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %908, i64 0, i32 2
  store ptr %910, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %908, i64 0, i32 1
  store ptr %906, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %907, i64 0, i32 1
  %911 = load i64, ptr %memberidx.i.i, align 4
  %912 = add i64 %911, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %907, i64 0, i32 2
  %913 = load i64, ptr %memberidx.i.i.i, align 4
  %914 = icmp slt i64 %913, %912
  %.pre410 = load ptr, ptr %907, align 8
  br i1 %914, label %while.body.i.i.i, label %Parser_error.exit

while.body.i.i.i:                                 ; preds = %else35, %while.body.i.i.i
  %915 = phi ptr [ %919, %while.body.i.i.i ], [ %.pre410, %else35 ]
  %916 = phi i64 [ %920, %while.body.i.i.i ], [ %913, %else35 ]
  %917 = shl nuw i64 %916, 1
  store i64 %917, ptr %memberidx.i.i.i, align 4
  %918 = shl i64 %916, 4
  %919 = call ptr @realloc(ptr %915, i64 %918)
  store ptr %919, ptr %907, align 8
  %920 = load i64, ptr %memberidx.i.i.i, align 4
  %921 = icmp slt i64 %920, %912
  br i1 %921, label %while.body.i.i.i, label %Parser_error.exit.loopexit

Parser_error.exit.loopexit:                       ; preds = %while.body.i.i.i
  %.pre411 = load i64, ptr %memberidx.i.i, align 4
  %.pre413 = add nsw i64 %.pre411, 1
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %else35, %Parser_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre413, %Parser_error.exit.loopexit ], [ %912, %else35 ]
  %922 = phi ptr [ %919, %Parser_error.exit.loopexit ], [ %.pre410, %else35 ]
  %923 = phi i64 [ %.pre411, %Parser_error.exit.loopexit ], [ %911, %else35 ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %924 = getelementptr inbounds ptr, ptr %922, i64 %923
  store ptr %908, ptr %924, align 8
  br label %while.end
}

define internal fastcc ptr @Parser_parse_block(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 16)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %BlockNode, ptr %2, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %5, ptr %memberidx.i, align 8
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx, align 8
  %9 = load i64, ptr %8, align 4
  %10 = icmp eq i64 %9, 33
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = icmp eq i64 %11, 0
  %13 = and i1 %10, %12
  br i1 %13, label %while.body.i.lr.ph, label %Parser_new_lines.exit

while.body.i.lr.ph:                               ; preds = %1
  %memberidx.i4.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i5.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i4.i, align 4
  %16 = load i64, ptr %memberidx2.i5.i, align 4
  %17 = icmp slt i64 %15, %16
  br i1 %17, label %while.body.i, label %while.body.i.us

while.body.i.us:                                  ; preds = %while.body.i.lr.ph, %while.body.i.us
  br label %while.body.i.us

while.body.i:                                     ; preds = %while.body.i.lr.ph, %Parser_advance.exit.i
  %18 = phi i64 [ %27, %Parser_advance.exit.i ], [ 0, %while.body.i.lr.ph ]
  %19 = phi i64 [ %28, %Parser_advance.exit.i ], [ 33, %while.body.i.lr.ph ]
  %20 = phi i64 [ %31, %Parser_advance.exit.i ], [ %15, %while.body.i.lr.ph ]
  %21 = load i64, ptr %memberidx2.i5.i, align 4
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.body.i
  %23 = add nsw i64 %20, 1
  store i64 %23, ptr %memberidx.i4.i, align 4
  %24 = load ptr, ptr %14, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  store ptr %26, ptr %memberidx, align 8
  %.pre = load i64, ptr %26, align 4
  %.pre76 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.body.i
  %27 = phi i64 [ %.pre76, %if.entry.i.i ], [ %18, %while.body.i ]
  %28 = phi i64 [ %.pre, %if.entry.i.i ], [ %19, %while.body.i ]
  %29 = phi i64 [ %.pre76, %if.entry.i.i ], [ 0, %while.body.i ]
  %30 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.body.i ]
  %31 = phi i64 [ %23, %if.entry.i.i ], [ %20, %while.body.i ]
  %32 = icmp eq i64 %30, 33
  %33 = icmp eq i64 %29, 0
  %34 = and i1 %32, %33
  br i1 %34, label %while.body.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %1
  %35 = phi i64 [ %11, %1 ], [ %27, %Parser_advance.exit.i ]
  %36 = phi i64 [ %9, %1 ], [ %28, %Parser_advance.exit.i ]
  %.lcssa = phi i64 [ %9, %1 ], [ %30, %Parser_advance.exit.i ]
  %37 = icmp eq i64 %.lcssa, 27
  br i1 %37, label %if.entry, label %else

if.entry:                                         ; preds = %Parser_new_lines.exit
  %memberidx.i22 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %38 = load i64, ptr %memberidx.i22, align 4
  %39 = load ptr, ptr %0, align 8
  %memberidx2.i23 = getelementptr inbounds %Array_Token_, ptr %39, i64 0, i32 1
  %40 = load i64, ptr %memberidx2.i23, align 4
  %41 = icmp slt i64 %38, %40
  br i1 %41, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %42 = add nsw i64 %38, 1
  store i64 %42, ptr %memberidx.i22, align 4
  %43 = load ptr, ptr %39, align 8
  %44 = getelementptr inbounds ptr, ptr %43, i64 %42
  %45 = load ptr, ptr %44, align 8
  store ptr %45, ptr %memberidx, align 8
  %.pre80 = load i64, ptr %45, align 4
  %.pre81 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  %46 = phi i64 [ %38, %if.entry ], [ %42, %if.entry.i ]
  %47 = phi i64 [ %35, %if.entry ], [ %.pre81, %if.entry.i ]
  %48 = phi i64 [ %36, %if.entry ], [ %.pre80, %if.entry.i ]
  %49 = icmp eq i64 %48, 33
  %50 = icmp eq i64 %47, 0
  %51 = and i1 %49, %50
  br i1 %51, label %while.body.i31.lr.ph, label %while.entry.preheader

while.body.i31.lr.ph:                             ; preds = %Parser_advance.exit
  %52 = load i64, ptr %memberidx2.i23, align 4
  %53 = icmp slt i64 %46, %52
  br i1 %53, label %while.body.i31, label %while.body.i31.us

while.body.i31.us:                                ; preds = %while.body.i31.lr.ph, %while.body.i31.us
  br label %while.body.i31.us

while.entry.preheader:                            ; preds = %Parser_advance.exit.i34, %Parser_advance.exit
  %54 = phi i64 [ %48, %Parser_advance.exit ], [ %66, %Parser_advance.exit.i34 ]
  %55 = phi i64 [ %47, %Parser_advance.exit ], [ %67, %Parser_advance.exit.i34 ]
  %.fr65 = freeze i64 %55
  %56 = icmp eq i64 %.fr65, 0
  br i1 %56, label %switch.early.test, label %while.end

while.body.i31:                                   ; preds = %while.body.i31.lr.ph, %Parser_advance.exit.i34
  %57 = phi i64 [ %66, %Parser_advance.exit.i34 ], [ 33, %while.body.i31.lr.ph ]
  %58 = phi i64 [ %67, %Parser_advance.exit.i34 ], [ 0, %while.body.i31.lr.ph ]
  %59 = phi i64 [ %70, %Parser_advance.exit.i34 ], [ %46, %while.body.i31.lr.ph ]
  %60 = load i64, ptr %memberidx2.i23, align 4
  %61 = icmp slt i64 %59, %60
  br i1 %61, label %if.entry.i.i33, label %Parser_advance.exit.i34

if.entry.i.i33:                                   ; preds = %while.body.i31
  %62 = add nsw i64 %59, 1
  store i64 %62, ptr %memberidx.i22, align 4
  %63 = load ptr, ptr %39, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  store ptr %65, ptr %memberidx, align 8
  %.pre82 = load i64, ptr %65, align 4
  %.pre83 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i34

Parser_advance.exit.i34:                          ; preds = %if.entry.i.i33, %while.body.i31
  %66 = phi i64 [ %.pre82, %if.entry.i.i33 ], [ %57, %while.body.i31 ]
  %67 = phi i64 [ %.pre83, %if.entry.i.i33 ], [ %58, %while.body.i31 ]
  %68 = phi i64 [ %.pre83, %if.entry.i.i33 ], [ 0, %while.body.i31 ]
  %69 = phi i64 [ %.pre82, %if.entry.i.i33 ], [ 33, %while.body.i31 ]
  %70 = phi i64 [ %62, %if.entry.i.i33 ], [ %59, %while.body.i31 ]
  %71 = icmp eq i64 %69, 33
  %72 = icmp eq i64 %68, 0
  %73 = and i1 %71, %72
  br i1 %73, label %while.body.i31, label %while.entry.preheader

else:                                             ; preds = %Parser_new_lines.exit
  %74 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %75 = load i64, ptr %memberidx.i.i, align 4
  %76 = add i64 %75, 1
  %77 = load i64, ptr %memberidx1.i.i, align 4
  %78 = icmp slt i64 %77, %76
  %.pre77 = load ptr, ptr %5, align 8
  br i1 %78, label %while.body.i.i, label %Array_StatementNode____sl__.exit

while.body.i.i:                                   ; preds = %else, %while.body.i.i
  %79 = phi ptr [ %83, %while.body.i.i ], [ %.pre77, %else ]
  %80 = phi i64 [ %84, %while.body.i.i ], [ %77, %else ]
  %81 = shl nuw i64 %80, 1
  store i64 %81, ptr %memberidx1.i.i, align 4
  %82 = shl i64 %80, 4
  %83 = tail call ptr @realloc(ptr %79, i64 %82)
  store ptr %83, ptr %5, align 8
  %84 = load i64, ptr %memberidx1.i.i, align 4
  %85 = icmp slt i64 %84, %76
  br i1 %85, label %while.body.i.i, label %Array_StatementNode____sl__.exit.loopexit

Array_StatementNode____sl__.exit.loopexit:        ; preds = %while.body.i.i
  %.pre78 = load i64, ptr %memberidx.i.i, align 4
  %.pre90 = add nsw i64 %.pre78, 1
  br label %Array_StatementNode____sl__.exit

Array_StatementNode____sl__.exit:                 ; preds = %else, %Array_StatementNode____sl__.exit.loopexit
  %.pre-phi91 = phi i64 [ %.pre90, %Array_StatementNode____sl__.exit.loopexit ], [ %76, %else ]
  %86 = phi ptr [ %83, %Array_StatementNode____sl__.exit.loopexit ], [ %.pre77, %else ]
  %87 = phi i64 [ %.pre78, %Array_StatementNode____sl__.exit.loopexit ], [ %75, %else ]
  store i64 %.pre-phi91, ptr %memberidx.i.i, align 4
  %88 = getelementptr inbounds ptr, ptr %86, i64 %87
  store ptr %74, ptr %88, align 8
  br label %ifend

ifend:                                            ; preds = %Array_StatementNode____sl__.exit, %while.end
  ret ptr %2

while.entry.loopexit:                             ; preds = %Parser_advance.exit.i56, %Array_StatementNode____sl__.exit45
  %89 = phi i64 [ %113, %Array_StatementNode____sl__.exit45 ], [ %128, %Parser_advance.exit.i56 ]
  %90 = phi i64 [ %110, %Array_StatementNode____sl__.exit45 ], [ %130, %Parser_advance.exit.i56 ]
  %.fr = freeze i64 %89
  %91 = icmp eq i64 %.fr, 0
  br i1 %91, label %switch.early.test, label %while.end

switch.early.test:                                ; preds = %while.entry.preheader, %while.entry.loopexit
  %92 = phi i64 [ %90, %while.entry.loopexit ], [ %54, %while.entry.preheader ]
  switch i64 %92, label %while.body [
    i64 46, label %while.end
    i64 28, label %while.end
  ]

while.end:                                        ; preds = %while.entry.loopexit, %switch.early.test, %switch.early.test, %while.entry.preheader
  %93 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 28)
  br label %ifend

while.body:                                       ; preds = %switch.early.test
  %94 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %95 = load i64, ptr %memberidx.i.i, align 4
  %96 = add i64 %95, 1
  %97 = load i64, ptr %memberidx1.i.i, align 4
  %98 = icmp slt i64 %97, %96
  %.pre84 = load ptr, ptr %5, align 8
  br i1 %98, label %while.body.i.i44, label %Array_StatementNode____sl__.exit45

while.body.i.i44:                                 ; preds = %while.body, %while.body.i.i44
  %99 = phi ptr [ %103, %while.body.i.i44 ], [ %.pre84, %while.body ]
  %100 = phi i64 [ %104, %while.body.i.i44 ], [ %97, %while.body ]
  %101 = shl nuw i64 %100, 1
  store i64 %101, ptr %memberidx1.i.i, align 4
  %102 = shl i64 %100, 4
  %103 = tail call ptr @realloc(ptr %99, i64 %102)
  store ptr %103, ptr %5, align 8
  %104 = load i64, ptr %memberidx1.i.i, align 4
  %105 = icmp slt i64 %104, %96
  br i1 %105, label %while.body.i.i44, label %Array_StatementNode____sl__.exit45.loopexit

Array_StatementNode____sl__.exit45.loopexit:      ; preds = %while.body.i.i44
  %.pre85 = load i64, ptr %memberidx.i.i, align 4
  %.pre89 = add nsw i64 %.pre85, 1
  br label %Array_StatementNode____sl__.exit45

Array_StatementNode____sl__.exit45:               ; preds = %while.body, %Array_StatementNode____sl__.exit45.loopexit
  %.pre-phi = phi i64 [ %.pre89, %Array_StatementNode____sl__.exit45.loopexit ], [ %96, %while.body ]
  %106 = phi ptr [ %103, %Array_StatementNode____sl__.exit45.loopexit ], [ %.pre84, %while.body ]
  %107 = phi i64 [ %.pre85, %Array_StatementNode____sl__.exit45.loopexit ], [ %95, %while.body ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %108 = getelementptr inbounds ptr, ptr %106, i64 %107
  store ptr %94, ptr %108, align 8
  %109 = load ptr, ptr %memberidx, align 8
  %110 = load i64, ptr %109, align 4
  %111 = icmp eq i64 %110, 33
  %112 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i4963 = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 1
  %113 = load i64, ptr %memberidx3.i.i4963, align 4
  %114 = icmp eq i64 %113, 0
  %115 = and i1 %111, %114
  br i1 %115, label %while.body.i53.lr.ph, label %while.entry.loopexit

while.body.i53.lr.ph:                             ; preds = %Array_StatementNode____sl__.exit45
  %116 = load ptr, ptr %0, align 8
  %memberidx2.i5.i52 = getelementptr inbounds %Array_Token_, ptr %116, i64 0, i32 1
  %117 = load i64, ptr %memberidx.i22, align 4
  %118 = load i64, ptr %memberidx2.i5.i52, align 4
  %119 = icmp slt i64 %117, %118
  br i1 %119, label %while.body.i53, label %while.body.i53.us

while.body.i53.us:                                ; preds = %while.body.i53.lr.ph, %while.body.i53.us
  br label %while.body.i53.us

while.body.i53:                                   ; preds = %while.body.i53.lr.ph, %Parser_advance.exit.i56
  %120 = phi i64 [ %128, %Parser_advance.exit.i56 ], [ 0, %while.body.i53.lr.ph ]
  %121 = phi i64 [ %131, %Parser_advance.exit.i56 ], [ %117, %while.body.i53.lr.ph ]
  %122 = load i64, ptr %memberidx2.i5.i52, align 4
  %123 = icmp slt i64 %121, %122
  br i1 %123, label %if.entry.i.i55, label %Parser_advance.exit.i56

if.entry.i.i55:                                   ; preds = %while.body.i53
  %124 = add nsw i64 %121, 1
  store i64 %124, ptr %memberidx.i22, align 4
  %125 = load ptr, ptr %116, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %124
  %127 = load ptr, ptr %126, align 8
  store ptr %127, ptr %memberidx, align 8
  %.pre87 = load i64, ptr %127, align 4
  %.pre88 = load i64, ptr %memberidx3.i.i4963, align 4
  br label %Parser_advance.exit.i56

Parser_advance.exit.i56:                          ; preds = %if.entry.i.i55, %while.body.i53
  %128 = phi i64 [ %.pre88, %if.entry.i.i55 ], [ %120, %while.body.i53 ]
  %129 = phi i64 [ %.pre88, %if.entry.i.i55 ], [ 0, %while.body.i53 ]
  %130 = phi i64 [ %.pre87, %if.entry.i.i55 ], [ 33, %while.body.i53 ]
  %131 = phi i64 [ %124, %if.entry.i.i55 ], [ %121, %while.body.i53 ]
  %132 = icmp eq i64 %130, 33
  %133 = icmp eq i64 %129, 0
  %134 = and i1 %132, %133
  br i1 %134, label %while.body.i53, label %while.entry.loopexit
}

define internal fastcc ptr @Parser_parse_type(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  switch i64 %3, label %ifend [
    i64 53, label %if.entry
    i64 25, label %if.entry5
    i64 29, label %if.entry10
  ]

if.entry:                                         ; preds = %1
  %4 = tail call fastcc ptr @Parser_parse_object_type(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %else.i159, %if.entry.i.i157, %if.entry.i155, %1, %ifend11.i, %if.entry9.i, %if.entry
  %type_node.0 = phi ptr [ %4, %if.entry ], [ %34, %if.entry9.i ], [ %41, %ifend11.i ], [ null, %1 ], [ %49, %if.entry.i155 ], [ %49, %if.entry.i.i157 ], [ %49, %else.i159 ]
  %memberidx2.i149 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 29
  %8 = icmp eq i64 %6, 11
  %9 = or i1 %7, %8
  %10 = icmp eq i64 %6, 4
  %11 = or i1 %10, %9
  %12 = load ptr, ptr %memberidx2.i149, align 8
  %memberidx3.i150209 = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i150209, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %11, %14
  br i1 %15, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.body

if.entry5:                                        ; preds = %1
  %16 = tail call ptr @malloc(i32 24)
  %memberidx.i43.i = getelementptr inbounds %Array_TypeNode_, ptr %16, i64 0, i32 1
  store i64 0, ptr %memberidx.i43.i, align 4
  %memberidx1.i44.i = getelementptr inbounds %Array_TypeNode_, ptr %16, i64 0, i32 2
  store i64 8, ptr %memberidx1.i44.i, align 4
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %16, align 8
  store i64 0, ptr %memberidx.i43.i, align 4
  %18 = load ptr, ptr %memberidx, align 8
  %memberidx3.i190 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx3.i190, align 8
  %memberidx.i40.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %20 = load i64, ptr %memberidx.i40.i, align 4
  %21 = load ptr, ptr %0, align 8
  %memberidx2.i41.i = getelementptr inbounds %Array_Token_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx2.i41.i, align 4
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %if.entry.i.i191, label %Parser_advance.exit.i192

if.entry.i.i191:                                  ; preds = %if.entry5
  %24 = add nsw i64 %20, 1
  store i64 %24, ptr %memberidx.i40.i, align 4
  %25 = load ptr, ptr %21, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  store ptr %27, ptr %memberidx, align 8
  br label %Parser_advance.exit.i192

Parser_advance.exit.i192:                         ; preds = %if.entry.i.i191, %if.entry5
  %28 = phi ptr [ %27, %if.entry.i.i191 ], [ %18, %if.entry5 ]
  %29 = load i64, ptr %28, align 4
  %.not.i = icmp eq i64 %29, 26
  br i1 %.not.i, label %ifend.i, label %if.entry.i193

if.entry.i193:                                    ; preds = %Parser_advance.exit.i192
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %16)
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry.i193, %Parser_advance.exit.i192
  %30 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %31 = load ptr, ptr %memberidx, align 8
  %32 = load i64, ptr %31, align 4
  %.not31.i = icmp eq i64 %32, 45
  br i1 %.not31.i, label %ifend11.i, label %if.entry9.i

if.entry9.i:                                      ; preds = %ifend.i
  %memberidx6.i = getelementptr inbounds %Token, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx6.i, align 8
  %34 = tail call ptr @malloc(i32 24)
  %35 = tail call ptr @malloc(i32 32)
  %36 = load i64, ptr %19, align 4
  %memberidx1.i34.i = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 1
  %37 = load i64, ptr %memberidx1.i34.i, align 4
  %memberidx2.i35.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i35.i, align 4
  %memberidx3.i36.i = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 3
  %39 = load i64, ptr %memberidx3.i36.i, align 4
  store i64 %36, ptr %35, align 4
  %memberidx1.i.i37.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i.i37.i, align 4
  %memberidx2.i.i38.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 2
  store i64 %38, ptr %memberidx2.i.i38.i, align 4
  %memberidx3.i.i39.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 3
  store i64 %39, ptr %memberidx3.i.i39.i, align 4
  store ptr %35, ptr %34, align 8
  %memberidx.i.i32.i = getelementptr inbounds %TypeNode, ptr %34, i64 0, i32 1
  store i64 15, ptr %memberidx.i.i32.i, align 4
  %memberidx.i33.i = getelementptr inbounds %TupleTypeNode, ptr %34, i64 0, i32 2
  store ptr %16, ptr %memberidx.i33.i, align 8
  br label %ifend

ifend11.i:                                        ; preds = %ifend.i
  %40 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 45)
  %41 = tail call ptr @malloc(i32 32)
  store ptr %19, ptr %41, align 8
  %memberidx.i.i.i = getelementptr inbounds %TypeNode, ptr %41, i64 0, i32 1
  store i64 16, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i195 = getelementptr inbounds %FunctionTypeNode, ptr %41, i64 0, i32 2
  store ptr %16, ptr %memberidx.i.i195, align 8
  %memberidx12.i = getelementptr inbounds %FunctionTypeNode, ptr %41, i64 0, i32 3
  %42 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %42, ptr %memberidx12.i, align 8
  %43 = load ptr, ptr %42, align 8
  %44 = tail call ptr @malloc(i32 32)
  %45 = load i64, ptr %19, align 4
  %memberidx1.i.i196 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i.i196, align 4
  %memberidx2.i.i197 = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i.i197, align 4
  %memberidx3.i.i198 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 3
  %48 = load i64, ptr %memberidx3.i.i198, align 4
  store i64 %45, ptr %44, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %47, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %48, ptr %memberidx3.i.i.i, align 4
  store ptr %44, ptr %41, align 8
  br label %ifend

if.entry10:                                       ; preds = %1
  %49 = tail call ptr @malloc(i32 32)
  %50 = tail call ptr @malloc(i32 24)
  %51 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %51, ptr noundef nonnull align 8 dereferenceable(3) @72, i64 3, i1 false)
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i.i186 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i186, align 4
  %memberidx2.i.i187 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i187, align 4
  %53 = load ptr, ptr %memberidx, align 8
  %memberidx14 = getelementptr inbounds %Token, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx14, align 8
  store i64 53, ptr %50, align 4
  %memberidx1.i.i184 = getelementptr inbounds %Token, ptr %50, i64 0, i32 1
  store ptr %54, ptr %memberidx1.i.i184, align 8
  %memberidx.i185 = getelementptr inbounds %IdentifierToken, ptr %50, i64 0, i32 2
  store ptr %52, ptr %memberidx.i185, align 8
  %55 = load ptr, ptr %memberidx14, align 8
  store ptr %55, ptr %49, align 8
  %memberidx.i.i178 = getelementptr inbounds %TypeNode, ptr %49, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i178, align 4
  %memberidx.i179 = getelementptr inbounds %RecordTypeNode, ptr %49, i64 0, i32 2
  store ptr %50, ptr %memberidx.i179, align 8
  %memberidx1.i180 = getelementptr inbounds %RecordTypeNode, ptr %49, i64 0, i32 3
  %56 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i181 = getelementptr inbounds %Array_TypeNode_, ptr %56, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i181, align 4
  %memberidx1.i.i182 = getelementptr inbounds %Array_TypeNode_, ptr %56, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i182, align 4
  %57 = tail call ptr @malloc(i32 64)
  store ptr %57, ptr %56, align 8
  store i64 0, ptr %memberidx.i5.i181, align 4
  store ptr %56, ptr %memberidx1.i180, align 8
  %memberidx.i173 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %58 = load i64, ptr %memberidx.i173, align 4
  %59 = load ptr, ptr %0, align 8
  %memberidx2.i174 = getelementptr inbounds %Array_Token_, ptr %59, i64 0, i32 1
  %60 = load i64, ptr %memberidx2.i174, align 4
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %if.entry.i176, label %Parser_advance.exit177

if.entry.i176:                                    ; preds = %if.entry10
  %62 = add nsw i64 %58, 1
  store i64 %62, ptr %memberidx.i173, align 4
  %63 = load ptr, ptr %59, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  store ptr %65, ptr %memberidx, align 8
  br label %Parser_advance.exit177

Parser_advance.exit177:                           ; preds = %if.entry10, %if.entry.i176
  %66 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %67 = load i64, ptr %memberidx.i5.i181, align 4
  %68 = add i64 %67, 1
  %69 = load i64, ptr %memberidx1.i.i182, align 4
  %70 = icmp slt i64 %69, %68
  %.pre = load ptr, ptr %56, align 8
  br i1 %70, label %while.body.i.i171, label %Array_TypeNode____sl__.exit172

while.body.i.i171:                                ; preds = %Parser_advance.exit177, %while.body.i.i171
  %71 = phi ptr [ %75, %while.body.i.i171 ], [ %.pre, %Parser_advance.exit177 ]
  %72 = phi i64 [ %76, %while.body.i.i171 ], [ %69, %Parser_advance.exit177 ]
  %73 = shl nuw i64 %72, 1
  store i64 %73, ptr %memberidx1.i.i182, align 4
  %74 = shl i64 %72, 4
  %75 = tail call ptr @realloc(ptr %71, i64 %74)
  store ptr %75, ptr %56, align 8
  %76 = load i64, ptr %memberidx1.i.i182, align 4
  %77 = icmp slt i64 %76, %68
  br i1 %77, label %while.body.i.i171, label %Array_TypeNode____sl__.exit172.loopexit

Array_TypeNode____sl__.exit172.loopexit:          ; preds = %while.body.i.i171
  %.pre211 = load i64, ptr %memberidx.i5.i181, align 4
  %.pre219 = add nsw i64 %.pre211, 1
  br label %Array_TypeNode____sl__.exit172

Array_TypeNode____sl__.exit172:                   ; preds = %Parser_advance.exit177, %Array_TypeNode____sl__.exit172.loopexit
  %.pre-phi = phi i64 [ %.pre219, %Array_TypeNode____sl__.exit172.loopexit ], [ %68, %Parser_advance.exit177 ]
  %78 = phi ptr [ %75, %Array_TypeNode____sl__.exit172.loopexit ], [ %.pre, %Parser_advance.exit177 ]
  %79 = phi i64 [ %.pre211, %Array_TypeNode____sl__.exit172.loopexit ], [ %67, %Parser_advance.exit177 ]
  store i64 %.pre-phi, ptr %memberidx.i5.i181, align 4
  %80 = getelementptr inbounds ptr, ptr %78, i64 %79
  store ptr %66, ptr %80, align 8
  %81 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %82 = load ptr, ptr %memberidx1.i180, align 8
  %83 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i163 = getelementptr inbounds %Array_TypeNode_, ptr %82, i64 0, i32 1
  %84 = load i64, ptr %memberidx.i163, align 4
  %85 = add i64 %84, 1
  %memberidx.i.i164 = getelementptr inbounds %Array_TypeNode_, ptr %82, i64 0, i32 2
  %86 = load i64, ptr %memberidx.i.i164, align 4
  %87 = icmp slt i64 %86, %85
  %.pre213 = load ptr, ptr %82, align 8
  br i1 %87, label %while.body.i.i166, label %Array_TypeNode____sl__.exit167

while.body.i.i166:                                ; preds = %Array_TypeNode____sl__.exit172, %while.body.i.i166
  %88 = phi ptr [ %92, %while.body.i.i166 ], [ %.pre213, %Array_TypeNode____sl__.exit172 ]
  %89 = phi i64 [ %93, %while.body.i.i166 ], [ %86, %Array_TypeNode____sl__.exit172 ]
  %90 = shl nuw i64 %89, 1
  store i64 %90, ptr %memberidx.i.i164, align 4
  %91 = shl i64 %89, 4
  %92 = tail call ptr @realloc(ptr %88, i64 %91)
  store ptr %92, ptr %82, align 8
  %93 = load i64, ptr %memberidx.i.i164, align 4
  %94 = icmp slt i64 %93, %85
  br i1 %94, label %while.body.i.i166, label %Array_TypeNode____sl__.exit167.loopexit

Array_TypeNode____sl__.exit167.loopexit:          ; preds = %while.body.i.i166
  %.pre214 = load i64, ptr %memberidx.i163, align 4
  %.pre220 = add nsw i64 %.pre214, 1
  br label %Array_TypeNode____sl__.exit167

Array_TypeNode____sl__.exit167:                   ; preds = %Array_TypeNode____sl__.exit172, %Array_TypeNode____sl__.exit167.loopexit
  %.pre-phi221 = phi i64 [ %.pre220, %Array_TypeNode____sl__.exit167.loopexit ], [ %85, %Array_TypeNode____sl__.exit172 ]
  %95 = phi ptr [ %92, %Array_TypeNode____sl__.exit167.loopexit ], [ %.pre213, %Array_TypeNode____sl__.exit172 ]
  %96 = phi i64 [ %.pre214, %Array_TypeNode____sl__.exit167.loopexit ], [ %84, %Array_TypeNode____sl__.exit172 ]
  store i64 %.pre-phi221, ptr %memberidx.i163, align 4
  %97 = getelementptr inbounds ptr, ptr %95, i64 %96
  store ptr %83, ptr %97, align 8
  %98 = load ptr, ptr %memberidx, align 8
  %99 = load i64, ptr %98, align 4
  %100 = icmp eq i64 %99, 30
  br i1 %100, label %if.entry.i155, label %else.i159

if.entry.i155:                                    ; preds = %Array_TypeNode____sl__.exit167
  %101 = load i64, ptr %memberidx.i173, align 4
  %102 = load ptr, ptr %0, align 8
  %memberidx2.i.i154 = getelementptr inbounds %Array_Token_, ptr %102, i64 0, i32 1
  %103 = load i64, ptr %memberidx2.i.i154, align 4
  %104 = icmp slt i64 %101, %103
  br i1 %104, label %if.entry.i.i157, label %ifend

if.entry.i.i157:                                  ; preds = %if.entry.i155
  %105 = add nsw i64 %101, 1
  store i64 %105, ptr %memberidx.i173, align 4
  %106 = load ptr, ptr %102, align 8
  %107 = getelementptr inbounds ptr, ptr %106, i64 %105
  %108 = load ptr, ptr %107, align 8
  store ptr %108, ptr %memberidx, align 8
  br label %ifend

else.i159:                                        ; preds = %Array_TypeNode____sl__.exit167
  %109 = tail call ptr @malloc(i32 16)
  %memberidx35.i160 = getelementptr inbounds %Token, ptr %98, i64 0, i32 1
  %110 = load ptr, ptr %memberidx35.i160, align 8
  store i64 46, ptr %109, align 4
  %memberidx1.i75.i161 = getelementptr inbounds %Token, ptr %109, i64 0, i32 1
  store ptr %110, ptr %memberidx1.i75.i161, align 8
  br label %ifend

while.end:                                        ; preds = %ifend29, %ifend
  %type_node.1.lcssa = phi ptr [ %type_node.0, %ifend ], [ %type_node.2, %ifend29 ]
  ret ptr %type_node.1.lcssa

while.body:                                       ; preds = %while.body.lr.ph, %ifend29
  %111 = phi i1 [ %7, %while.body.lr.ph ], [ %135, %ifend29 ]
  %type_node.1210 = phi ptr [ %type_node.0, %while.body.lr.ph ], [ %type_node.2, %ifend29 ]
  br i1 %111, label %if.entry27, label %else28

if.entry27:                                       ; preds = %while.body
  %112 = load i64, ptr %memberidx.i, align 4
  %113 = load ptr, ptr %0, align 8
  %memberidx2.i144 = getelementptr inbounds %Array_Token_, ptr %113, i64 0, i32 1
  %114 = load i64, ptr %memberidx2.i144, align 4
  %115 = icmp slt i64 %112, %114
  br i1 %115, label %Parser_advance.exit147, label %else33

Parser_advance.exit147:                           ; preds = %if.entry27
  %116 = add nsw i64 %112, 1
  store i64 %116, ptr %memberidx.i, align 4
  %117 = load ptr, ptr %113, align 8
  %118 = getelementptr inbounds ptr, ptr %117, i64 %116
  %119 = load ptr, ptr %118, align 8
  store ptr %119, ptr %memberidx, align 8
  %.pre216 = load i64, ptr %119, align 4
  %120 = icmp eq i64 %.pre216, 30
  br i1 %120, label %if.entry32, label %else33

else28:                                           ; preds = %while.body
  %121 = tail call ptr @malloc(i32 24)
  %122 = load ptr, ptr %type_node.1210, align 8
  %123 = load ptr, ptr %memberidx, align 8
  %memberidx48 = getelementptr inbounds %Token, ptr %123, i64 0, i32 1
  %124 = load ptr, ptr %memberidx48, align 8
  %125 = tail call ptr @malloc(i32 32)
  %126 = load i64, ptr %122, align 4
  %memberidx1.i137 = getelementptr inbounds %FloRange, ptr %124, i64 0, i32 1
  %127 = load i64, ptr %memberidx1.i137, align 4
  %memberidx2.i138 = getelementptr inbounds %FloRange, ptr %122, i64 0, i32 2
  %128 = load i64, ptr %memberidx2.i138, align 4
  %memberidx3.i139 = getelementptr inbounds %FloRange, ptr %124, i64 0, i32 3
  %129 = load i64, ptr %memberidx3.i139, align 4
  store i64 %126, ptr %125, align 4
  %memberidx1.i.i140 = getelementptr inbounds %FloRange, ptr %125, i64 0, i32 1
  store i64 %127, ptr %memberidx1.i.i140, align 4
  %memberidx2.i.i141 = getelementptr inbounds %FloRange, ptr %125, i64 0, i32 2
  store i64 %128, ptr %memberidx2.i.i141, align 4
  %memberidx3.i.i142 = getelementptr inbounds %FloRange, ptr %125, i64 0, i32 3
  store i64 %129, ptr %memberidx3.i.i142, align 4
  store ptr %125, ptr %121, align 8
  %memberidx.i.i135 = getelementptr inbounds %TypeNode, ptr %121, i64 0, i32 1
  store i64 13, ptr %memberidx.i.i135, align 4
  %memberidx.i136 = getelementptr inbounds %PointerTypeNode, ptr %121, i64 0, i32 2
  store ptr %type_node.1210, ptr %memberidx.i136, align 8
  %130 = load ptr, ptr %memberidx, align 8
  %131 = load i64, ptr %130, align 4
  %132 = icmp eq i64 %131, 11
  br i1 %132, label %if.entry51, label %else52

ifend29:                                          ; preds = %if.entry.i, %else52, %else.i111, %if.entry.i.i109, %if.entry.i107, %Parser_eat.exit
  %type_node.2 = phi ptr [ %187, %Parser_eat.exit ], [ %type_node.3, %if.entry.i107 ], [ %type_node.3, %if.entry.i.i109 ], [ %type_node.3, %else.i111 ], [ %121, %else52 ], [ %121, %if.entry.i ]
  %133 = load ptr, ptr %memberidx, align 8
  %134 = load i64, ptr %133, align 4
  %135 = icmp eq i64 %134, 29
  %136 = icmp eq i64 %134, 11
  %137 = or i1 %135, %136
  %138 = icmp eq i64 %134, 4
  %139 = or i1 %138, %137
  %140 = load ptr, ptr %memberidx2.i149, align 8
  %memberidx3.i150 = getelementptr inbounds %Array_FloError_, ptr %140, i64 0, i32 1
  %141 = load i64, ptr %memberidx3.i150, align 4
  %142 = icmp eq i64 %141, 0
  %143 = and i1 %139, %142
  br i1 %143, label %while.body, label %while.end

if.entry32:                                       ; preds = %Parser_advance.exit147
  %144 = tail call ptr @malloc(i32 32)
  %145 = tail call ptr @malloc(i32 24)
  %146 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %146, ptr noundef nonnull align 8 dereferenceable(5) @73, i64 5, i1 false)
  %147 = tail call ptr @malloc(i32 24)
  store ptr %146, ptr %147, align 8
  %memberidx1.i.i133 = getelementptr inbounds %String, ptr %147, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i133, align 4
  %memberidx2.i.i134 = getelementptr inbounds %String, ptr %147, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i134, align 4
  %148 = load ptr, ptr %memberidx, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %148, i64 0, i32 1
  %149 = load ptr, ptr %memberidx36, align 8
  store i64 53, ptr %145, align 4
  %memberidx1.i.i131 = getelementptr inbounds %Token, ptr %145, i64 0, i32 1
  store ptr %149, ptr %memberidx1.i.i131, align 8
  %memberidx.i132 = getelementptr inbounds %IdentifierToken, ptr %145, i64 0, i32 2
  store ptr %147, ptr %memberidx.i132, align 8
  %150 = load ptr, ptr %memberidx36, align 8
  store ptr %150, ptr %144, align 8
  %memberidx.i.i126 = getelementptr inbounds %TypeNode, ptr %144, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i126, align 4
  %memberidx.i127 = getelementptr inbounds %RecordTypeNode, ptr %144, i64 0, i32 2
  store ptr %145, ptr %memberidx.i127, align 8
  %memberidx1.i128 = getelementptr inbounds %RecordTypeNode, ptr %144, i64 0, i32 3
  %151 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %151, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i129 = getelementptr inbounds %Array_TypeNode_, ptr %151, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i129, align 4
  %152 = tail call ptr @malloc(i32 64)
  store ptr %152, ptr %151, align 8
  store ptr %151, ptr %memberidx1.i128, align 8
  %153 = load i64, ptr %memberidx1.i.i129, align 4
  %154 = icmp slt i64 %153, 1
  br i1 %154, label %while.body.i.i, label %Array_TypeNode____sl__.exit

while.body.i.i:                                   ; preds = %if.entry32, %while.body.i.i
  %155 = phi ptr [ %159, %while.body.i.i ], [ %152, %if.entry32 ]
  %156 = phi i64 [ %157, %while.body.i.i ], [ %153, %if.entry32 ]
  %157 = shl nuw i64 %156, 1
  %158 = shl i64 %156, 4
  %159 = tail call ptr @realloc(ptr %155, i64 %158)
  %160 = icmp slt i64 %157, 1
  br i1 %160, label %while.body.i.i, label %Array_TypeNode____sl__.exit.loopexit

Array_TypeNode____sl__.exit.loopexit:             ; preds = %while.body.i.i
  store i64 %157, ptr %memberidx1.i.i129, align 4
  store ptr %159, ptr %151, align 8
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %Array_TypeNode____sl__.exit.loopexit, %if.entry32
  %161 = phi ptr [ %152, %if.entry32 ], [ %159, %Array_TypeNode____sl__.exit.loopexit ]
  store i64 1, ptr %memberidx.i5.i, align 4
  store ptr %type_node.1210, ptr %161, align 8
  %.pre217 = load ptr, ptr %144, align 8
  %.pre218 = load ptr, ptr %memberidx, align 8
  br label %ifend34

else33:                                           ; preds = %if.entry27, %Parser_advance.exit147
  %162 = tail call ptr @malloc(i32 32)
  %163 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %164 = load ptr, ptr %memberidx, align 8
  %memberidx41 = getelementptr inbounds %Token, ptr %164, i64 0, i32 1
  %165 = load ptr, ptr %memberidx41, align 8
  store ptr %165, ptr %162, align 8
  %memberidx.i.i121 = getelementptr inbounds %TypeNode, ptr %162, i64 0, i32 1
  store i64 14, ptr %memberidx.i.i121, align 4
  %memberidx.i122 = getelementptr inbounds %ArrayTypeNode, ptr %162, i64 0, i32 2
  store ptr %type_node.1210, ptr %memberidx.i122, align 8
  %memberidx1.i123 = getelementptr inbounds %ArrayTypeNode, ptr %162, i64 0, i32 3
  store ptr %163, ptr %memberidx1.i123, align 8
  br label %ifend34

ifend34:                                          ; preds = %else33, %Array_TypeNode____sl__.exit
  %166 = phi ptr [ %.pre218, %Array_TypeNode____sl__.exit ], [ %164, %else33 ]
  %167 = phi ptr [ %.pre217, %Array_TypeNode____sl__.exit ], [ %165, %else33 ]
  %type_node.3 = phi ptr [ %144, %Array_TypeNode____sl__.exit ], [ %162, %else33 ]
  %memberidx45 = getelementptr inbounds %Token, ptr %166, i64 0, i32 1
  %168 = load ptr, ptr %memberidx45, align 8
  %169 = tail call ptr @malloc(i32 32)
  %170 = load i64, ptr %167, align 4
  %memberidx1.i115 = getelementptr inbounds %FloRange, ptr %168, i64 0, i32 1
  %171 = load i64, ptr %memberidx1.i115, align 4
  %memberidx2.i116 = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 2
  %172 = load i64, ptr %memberidx2.i116, align 4
  %memberidx3.i117 = getelementptr inbounds %FloRange, ptr %168, i64 0, i32 3
  %173 = load i64, ptr %memberidx3.i117, align 4
  store i64 %170, ptr %169, align 4
  %memberidx1.i.i118 = getelementptr inbounds %FloRange, ptr %169, i64 0, i32 1
  store i64 %171, ptr %memberidx1.i.i118, align 4
  %memberidx2.i.i119 = getelementptr inbounds %FloRange, ptr %169, i64 0, i32 2
  store i64 %172, ptr %memberidx2.i.i119, align 4
  %memberidx3.i.i120 = getelementptr inbounds %FloRange, ptr %169, i64 0, i32 3
  store i64 %173, ptr %memberidx3.i.i120, align 4
  store ptr %169, ptr %type_node.3, align 8
  %174 = load ptr, ptr %memberidx, align 8
  %175 = load i64, ptr %174, align 4
  %176 = icmp eq i64 %175, 30
  br i1 %176, label %if.entry.i107, label %else.i111

if.entry.i107:                                    ; preds = %ifend34
  %177 = load i64, ptr %memberidx.i, align 4
  %178 = load ptr, ptr %0, align 8
  %memberidx2.i.i106 = getelementptr inbounds %Array_Token_, ptr %178, i64 0, i32 1
  %179 = load i64, ptr %memberidx2.i.i106, align 4
  %180 = icmp slt i64 %177, %179
  br i1 %180, label %if.entry.i.i109, label %ifend29

if.entry.i.i109:                                  ; preds = %if.entry.i107
  %181 = add nsw i64 %177, 1
  store i64 %181, ptr %memberidx.i, align 4
  %182 = load ptr, ptr %178, align 8
  %183 = getelementptr inbounds ptr, ptr %182, i64 %181
  %184 = load ptr, ptr %183, align 8
  store ptr %184, ptr %memberidx, align 8
  br label %ifend29

else.i111:                                        ; preds = %ifend34
  %185 = tail call ptr @malloc(i32 16)
  %memberidx35.i112 = getelementptr inbounds %Token, ptr %174, i64 0, i32 1
  %186 = load ptr, ptr %memberidx35.i112, align 8
  store i64 46, ptr %185, align 4
  %memberidx1.i75.i113 = getelementptr inbounds %Token, ptr %185, i64 0, i32 1
  store ptr %186, ptr %memberidx1.i75.i113, align 8
  br label %ifend29

if.entry51:                                       ; preds = %else28
  %187 = tail call ptr @malloc(i32 24)
  %188 = load ptr, ptr %121, align 8
  %189 = load ptr, ptr %memberidx, align 8
  %190 = load i64, ptr %189, align 4
  %191 = icmp eq i64 %190, 11
  br i1 %191, label %if.entry.i101, label %else.i

if.entry.i101:                                    ; preds = %if.entry51
  %192 = load i64, ptr %memberidx.i, align 4
  %193 = load ptr, ptr %0, align 8
  %memberidx2.i.i100 = getelementptr inbounds %Array_Token_, ptr %193, i64 0, i32 1
  %194 = load i64, ptr %memberidx2.i.i100, align 4
  %195 = icmp slt i64 %192, %194
  br i1 %195, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i101
  %196 = add nsw i64 %192, 1
  store i64 %196, ptr %memberidx.i, align 4
  %197 = load ptr, ptr %193, align 8
  %198 = getelementptr inbounds ptr, ptr %197, i64 %196
  %199 = load ptr, ptr %198, align 8
  store ptr %199, ptr %memberidx, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %if.entry51
  %200 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %189, i64 0, i32 1
  %201 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %200, align 4
  %memberidx1.i75.i = getelementptr inbounds %Token, ptr %200, i64 0, i32 1
  store ptr %201, ptr %memberidx1.i75.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i101, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %200, %else.i ], [ %189, %if.entry.i.i ], [ %189, %if.entry.i101 ]
  %memberidx55 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %202 = load ptr, ptr %memberidx55, align 8
  %203 = tail call ptr @malloc(i32 32)
  %204 = load i64, ptr %188, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %202, i64 0, i32 1
  %205 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i96 = getelementptr inbounds %FloRange, ptr %188, i64 0, i32 2
  %206 = load i64, ptr %memberidx2.i96, align 4
  %memberidx3.i97 = getelementptr inbounds %FloRange, ptr %202, i64 0, i32 3
  %207 = load i64, ptr %memberidx3.i97, align 4
  store i64 %204, ptr %203, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %203, i64 0, i32 1
  store i64 %205, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %203, i64 0, i32 2
  store i64 %206, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %203, i64 0, i32 3
  store i64 %207, ptr %memberidx3.i.i, align 4
  store ptr %203, ptr %187, align 8
  %memberidx.i.i = getelementptr inbounds %TypeNode, ptr %187, i64 0, i32 1
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx.i95 = getelementptr inbounds %PointerTypeNode, ptr %187, i64 0, i32 2
  store ptr %121, ptr %memberidx.i95, align 8
  br label %ifend29

else52:                                           ; preds = %else28
  %208 = load i64, ptr %memberidx.i, align 4
  %209 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %209, i64 0, i32 1
  %210 = load i64, ptr %memberidx2.i, align 4
  %211 = icmp slt i64 %208, %210
  br i1 %211, label %if.entry.i, label %ifend29

if.entry.i:                                       ; preds = %else52
  %212 = add nsw i64 %208, 1
  store i64 %212, ptr %memberidx.i, align 4
  %213 = load ptr, ptr %209, align 8
  %214 = getelementptr inbounds ptr, ptr %213, i64 %212
  %215 = load ptr, ptr %214, align 8
  store ptr %215, ptr %memberidx, align 8
  br label %ifend29
}

define internal fastcc void @Parser_parse_expression_list(ptr %0, ptr nocapture %1, i64 %2) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 33
  %8 = load i64, ptr %memberidx3.i.i, align 4
  %9 = icmp eq i64 %8, 0
  %10 = and i1 %7, %9
  br i1 %10, label %while.body.i.lr.ph, label %Parser_new_lines.exit

while.body.i.lr.ph:                               ; preds = %3
  %memberidx.i4.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i5.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i4.i, align 4
  %13 = load i64, ptr %memberidx2.i5.i, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %while.body.i, label %while.body.i.us

while.body.i.us:                                  ; preds = %while.body.i.lr.ph, %while.body.i.us
  br label %while.body.i.us

while.body.i:                                     ; preds = %while.body.i.lr.ph, %Parser_advance.exit.i
  %15 = phi i64 [ %24, %Parser_advance.exit.i ], [ %12, %while.body.i.lr.ph ]
  %16 = load i64, ptr %memberidx2.i5.i, align 4
  %17 = icmp slt i64 %15, %16
  br i1 %17, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.body.i
  %18 = add nsw i64 %15, 1
  store i64 %18, ptr %memberidx.i4.i, align 4
  %19 = load ptr, ptr %11, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %18
  %21 = load ptr, ptr %20, align 8
  store ptr %21, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %21, align 4
  %.pre83 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.body.i
  %22 = phi i64 [ %.pre83, %if.entry.i.i ], [ 0, %while.body.i ]
  %23 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.body.i ]
  %24 = phi i64 [ %18, %if.entry.i.i ], [ %15, %while.body.i ]
  %25 = icmp eq i64 %23, 33
  %26 = icmp eq i64 %22, 0
  %27 = and i1 %25, %26
  br i1 %27, label %while.body.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %3
  %.lcssa = phi i64 [ %6, %3 ], [ %23, %Parser_advance.exit.i ]
  %28 = icmp eq i64 %.lcssa, %2
  br i1 %28, label %common.ret, label %ifend

common.ret:                                       ; preds = %Parser_advance.exit.i39, %while.entry.i33.preheader, %Parser_new_lines.exit
  ret void

ifend:                                            ; preds = %Parser_new_lines.exit
  %29 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %memberidx.i14 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i14, align 4
  %31 = add i64 %30, 1
  %memberidx.i.i15 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 2
  %32 = load i64, ptr %memberidx.i.i15, align 4
  %33 = icmp slt i64 %32, %31
  %.pre84 = load ptr, ptr %1, align 8
  br i1 %33, label %while.body.i.i, label %Array_ExpressionNode____sl__.exit

while.body.i.i:                                   ; preds = %ifend, %while.body.i.i
  %34 = phi ptr [ %38, %while.body.i.i ], [ %.pre84, %ifend ]
  %35 = phi i64 [ %39, %while.body.i.i ], [ %32, %ifend ]
  %36 = shl nuw i64 %35, 1
  store i64 %36, ptr %memberidx.i.i15, align 4
  %37 = shl i64 %35, 4
  %38 = tail call ptr @realloc(ptr %34, i64 %37)
  store ptr %38, ptr %1, align 8
  %39 = load i64, ptr %memberidx.i.i15, align 4
  %40 = icmp slt i64 %39, %31
  br i1 %40, label %while.body.i.i, label %Array_ExpressionNode____sl__.exit.loopexit

Array_ExpressionNode____sl__.exit.loopexit:       ; preds = %while.body.i.i
  %.pre85 = load i64, ptr %memberidx.i14, align 4
  %.pre98 = add nsw i64 %.pre85, 1
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %ifend, %Array_ExpressionNode____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre98, %Array_ExpressionNode____sl__.exit.loopexit ], [ %31, %ifend ]
  %41 = phi ptr [ %38, %Array_ExpressionNode____sl__.exit.loopexit ], [ %.pre84, %ifend ]
  %42 = phi i64 [ %.pre85, %Array_ExpressionNode____sl__.exit.loopexit ], [ %30, %ifend ]
  store i64 %.pre-phi, ptr %memberidx.i14, align 4
  %43 = getelementptr inbounds ptr, ptr %41, i64 %42
  store ptr %29, ptr %43, align 8
  %44 = load ptr, ptr %memberidx.i, align 8
  %45 = load i64, ptr %44, align 4
  %46 = icmp eq i64 %45, 33
  %47 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i1969 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %48 = load i64, ptr %memberidx3.i.i1969, align 4
  %49 = icmp eq i64 %48, 0
  %50 = and i1 %46, %49
  br i1 %50, label %while.body.i23.lr.ph, label %while.entry.preheader

while.body.i23.lr.ph:                             ; preds = %Array_ExpressionNode____sl__.exit
  %memberidx.i4.i21 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %51 = load ptr, ptr %0, align 8
  %memberidx2.i5.i22 = getelementptr inbounds %Array_Token_, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i4.i21, align 4
  %53 = load i64, ptr %memberidx2.i5.i22, align 4
  %54 = icmp slt i64 %52, %53
  br i1 %54, label %while.body.i23, label %while.body.i23.us

while.body.i23.us:                                ; preds = %while.body.i23.lr.ph, %while.body.i23.us
  br label %while.body.i23.us

while.entry.preheader:                            ; preds = %Parser_advance.exit.i26, %Array_ExpressionNode____sl__.exit
  %55 = phi i64 [ %48, %Array_ExpressionNode____sl__.exit ], [ %69, %Parser_advance.exit.i26 ]
  %56 = phi i64 [ %45, %Array_ExpressionNode____sl__.exit ], [ %70, %Parser_advance.exit.i26 ]
  %57 = icmp eq i64 %56, 3
  %58 = icmp eq i64 %55, 0
  %59 = and i1 %57, %58
  br i1 %59, label %while.body.lr.ph, label %while.entry.i33.preheader

while.body.lr.ph:                                 ; preds = %while.entry.preheader
  %memberidx.i41 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.body

while.body.i23:                                   ; preds = %while.body.i23.lr.ph, %Parser_advance.exit.i26
  %60 = phi i64 [ %69, %Parser_advance.exit.i26 ], [ 0, %while.body.i23.lr.ph ]
  %61 = phi i64 [ %70, %Parser_advance.exit.i26 ], [ 33, %while.body.i23.lr.ph ]
  %62 = phi i64 [ %73, %Parser_advance.exit.i26 ], [ %52, %while.body.i23.lr.ph ]
  %63 = load i64, ptr %memberidx2.i5.i22, align 4
  %64 = icmp slt i64 %62, %63
  br i1 %64, label %if.entry.i.i25, label %Parser_advance.exit.i26

if.entry.i.i25:                                   ; preds = %while.body.i23
  %65 = add nsw i64 %62, 1
  store i64 %65, ptr %memberidx.i4.i21, align 4
  %66 = load ptr, ptr %51, align 8
  %67 = getelementptr inbounds ptr, ptr %66, i64 %65
  %68 = load ptr, ptr %67, align 8
  store ptr %68, ptr %memberidx.i, align 8
  %.pre87 = load i64, ptr %68, align 4
  %.pre88 = load i64, ptr %memberidx3.i.i1969, align 4
  br label %Parser_advance.exit.i26

Parser_advance.exit.i26:                          ; preds = %if.entry.i.i25, %while.body.i23
  %69 = phi i64 [ %.pre88, %if.entry.i.i25 ], [ %60, %while.body.i23 ]
  %70 = phi i64 [ %.pre87, %if.entry.i.i25 ], [ %61, %while.body.i23 ]
  %71 = phi i64 [ %.pre88, %if.entry.i.i25 ], [ 0, %while.body.i23 ]
  %72 = phi i64 [ %.pre87, %if.entry.i.i25 ], [ 33, %while.body.i23 ]
  %73 = phi i64 [ %65, %if.entry.i.i25 ], [ %62, %while.body.i23 ]
  %74 = icmp eq i64 %72, 33
  %75 = icmp eq i64 %71, 0
  %76 = and i1 %74, %75
  br i1 %76, label %while.body.i23, label %while.entry.preheader

while.entry.i33.preheader:                        ; preds = %Array_ExpressionNode____sl__.exit60, %while.entry.preheader
  %77 = phi i64 [ %55, %while.entry.preheader ], [ %144, %Array_ExpressionNode____sl__.exit60 ]
  %78 = phi i64 [ %56, %while.entry.preheader ], [ %141, %Array_ExpressionNode____sl__.exit60 ]
  %memberidx3.i.lcssa = phi ptr [ %memberidx3.i.i1969, %while.entry.preheader ], [ %memberidx3.i, %Array_ExpressionNode____sl__.exit60 ]
  %79 = icmp eq i64 %78, 33
  %80 = icmp eq i64 %77, 0
  %81 = and i1 %79, %80
  br i1 %81, label %while.body.i36.lr.ph, label %common.ret

while.body.i36.lr.ph:                             ; preds = %while.entry.i33.preheader
  %memberidx.i4.i34 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %82 = load ptr, ptr %0, align 8
  %memberidx2.i5.i35 = getelementptr inbounds %Array_Token_, ptr %82, i64 0, i32 1
  %83 = load i64, ptr %memberidx.i4.i34, align 4
  %84 = load i64, ptr %memberidx2.i5.i35, align 4
  %85 = icmp slt i64 %83, %84
  br i1 %85, label %while.body.i36, label %while.body.i36.us

while.body.i36.us:                                ; preds = %while.body.i36.lr.ph, %while.body.i36.us
  br label %while.body.i36.us

while.body.i36:                                   ; preds = %while.body.i36.lr.ph, %Parser_advance.exit.i39
  %86 = phi i64 [ %95, %Parser_advance.exit.i39 ], [ %83, %while.body.i36.lr.ph ]
  %87 = load i64, ptr %memberidx2.i5.i35, align 4
  %88 = icmp slt i64 %86, %87
  br i1 %88, label %if.entry.i.i38, label %Parser_advance.exit.i39

if.entry.i.i38:                                   ; preds = %while.body.i36
  %89 = add nsw i64 %86, 1
  store i64 %89, ptr %memberidx.i4.i34, align 4
  %90 = load ptr, ptr %82, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %89
  %92 = load ptr, ptr %91, align 8
  store ptr %92, ptr %memberidx.i, align 8
  %.pre96 = load i64, ptr %92, align 4
  %.pre97 = load i64, ptr %memberidx3.i.lcssa, align 4
  br label %Parser_advance.exit.i39

Parser_advance.exit.i39:                          ; preds = %if.entry.i.i38, %while.body.i36
  %93 = phi i64 [ %.pre97, %if.entry.i.i38 ], [ 0, %while.body.i36 ]
  %94 = phi i64 [ %.pre96, %if.entry.i.i38 ], [ 33, %while.body.i36 ]
  %95 = phi i64 [ %89, %if.entry.i.i38 ], [ %86, %while.body.i36 ]
  %96 = icmp eq i64 %94, 33
  %97 = icmp eq i64 %93, 0
  %98 = and i1 %96, %97
  br i1 %98, label %while.body.i36, label %common.ret

while.body:                                       ; preds = %while.body.lr.ph, %Array_ExpressionNode____sl__.exit60
  %memberidx3.i68 = phi ptr [ %memberidx3.i.i1969, %while.body.lr.ph ], [ %memberidx3.i, %Array_ExpressionNode____sl__.exit60 ]
  %99 = load i64, ptr %memberidx.i41, align 4
  %100 = load ptr, ptr %0, align 8
  %memberidx2.i42 = getelementptr inbounds %Array_Token_, ptr %100, i64 0, i32 1
  %101 = load i64, ptr %memberidx2.i42, align 4
  %102 = icmp slt i64 %99, %101
  br i1 %102, label %Parser_advance.exit, label %Parser_new_lines.exit55

Parser_advance.exit:                              ; preds = %while.body
  %103 = add nsw i64 %99, 1
  store i64 %103, ptr %memberidx.i41, align 4
  %104 = load ptr, ptr %100, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %103
  %106 = load ptr, ptr %105, align 8
  store ptr %106, ptr %memberidx.i, align 8
  %.pre89 = load i64, ptr %106, align 4
  %.pre90 = load i64, ptr %memberidx3.i68, align 4
  %107 = icmp eq i64 %.pre89, 33
  %108 = icmp eq i64 %.pre90, 0
  %109 = and i1 %107, %108
  br i1 %109, label %while.body.i51.lr.ph, label %Parser_new_lines.exit55

while.body.i51.lr.ph:                             ; preds = %Parser_advance.exit
  %110 = load i64, ptr %memberidx2.i42, align 4
  %111 = icmp slt i64 %103, %110
  br i1 %111, label %while.body.i51, label %while.body.i51.us

while.body.i51.us:                                ; preds = %while.body.i51.lr.ph, %while.body.i51.us
  br label %while.body.i51.us

while.body.i51:                                   ; preds = %while.body.i51.lr.ph, %Parser_advance.exit.i54
  %112 = phi i64 [ %121, %Parser_advance.exit.i54 ], [ %103, %while.body.i51.lr.ph ]
  %113 = load i64, ptr %memberidx2.i42, align 4
  %114 = icmp slt i64 %112, %113
  br i1 %114, label %if.entry.i.i53, label %Parser_advance.exit.i54

if.entry.i.i53:                                   ; preds = %while.body.i51
  %115 = add nsw i64 %112, 1
  store i64 %115, ptr %memberidx.i41, align 4
  %116 = load ptr, ptr %100, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %115
  %118 = load ptr, ptr %117, align 8
  store ptr %118, ptr %memberidx.i, align 8
  %.pre91 = load i64, ptr %118, align 4
  %.pre92 = load i64, ptr %memberidx3.i68, align 4
  br label %Parser_advance.exit.i54

Parser_advance.exit.i54:                          ; preds = %if.entry.i.i53, %while.body.i51
  %119 = phi i64 [ %.pre92, %if.entry.i.i53 ], [ 0, %while.body.i51 ]
  %120 = phi i64 [ %.pre91, %if.entry.i.i53 ], [ 33, %while.body.i51 ]
  %121 = phi i64 [ %115, %if.entry.i.i53 ], [ %112, %while.body.i51 ]
  %122 = icmp eq i64 %120, 33
  %123 = icmp eq i64 %119, 0
  %124 = and i1 %122, %123
  br i1 %124, label %while.body.i51, label %Parser_new_lines.exit55

Parser_new_lines.exit55:                          ; preds = %Parser_advance.exit.i54, %while.body, %Parser_advance.exit
  %125 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %126 = load i64, ptr %memberidx.i14, align 4
  %127 = add i64 %126, 1
  %128 = load i64, ptr %memberidx.i.i15, align 4
  %129 = icmp slt i64 %128, %127
  %.pre93 = load ptr, ptr %1, align 8
  br i1 %129, label %while.body.i.i59, label %Array_ExpressionNode____sl__.exit60

while.body.i.i59:                                 ; preds = %Parser_new_lines.exit55, %while.body.i.i59
  %130 = phi ptr [ %134, %while.body.i.i59 ], [ %.pre93, %Parser_new_lines.exit55 ]
  %131 = phi i64 [ %135, %while.body.i.i59 ], [ %128, %Parser_new_lines.exit55 ]
  %132 = shl nuw i64 %131, 1
  store i64 %132, ptr %memberidx.i.i15, align 4
  %133 = shl i64 %131, 4
  %134 = tail call ptr @realloc(ptr %130, i64 %133)
  store ptr %134, ptr %1, align 8
  %135 = load i64, ptr %memberidx.i.i15, align 4
  %136 = icmp slt i64 %135, %127
  br i1 %136, label %while.body.i.i59, label %Array_ExpressionNode____sl__.exit60.loopexit

Array_ExpressionNode____sl__.exit60.loopexit:     ; preds = %while.body.i.i59
  %.pre94 = load i64, ptr %memberidx.i14, align 4
  %.pre99 = add nsw i64 %.pre94, 1
  br label %Array_ExpressionNode____sl__.exit60

Array_ExpressionNode____sl__.exit60:              ; preds = %Parser_new_lines.exit55, %Array_ExpressionNode____sl__.exit60.loopexit
  %.pre-phi100 = phi i64 [ %.pre99, %Array_ExpressionNode____sl__.exit60.loopexit ], [ %127, %Parser_new_lines.exit55 ]
  %137 = phi ptr [ %134, %Array_ExpressionNode____sl__.exit60.loopexit ], [ %.pre93, %Parser_new_lines.exit55 ]
  %138 = phi i64 [ %.pre94, %Array_ExpressionNode____sl__.exit60.loopexit ], [ %126, %Parser_new_lines.exit55 ]
  store i64 %.pre-phi100, ptr %memberidx.i14, align 4
  %139 = getelementptr inbounds ptr, ptr %137, i64 %138
  store ptr %125, ptr %139, align 8
  %140 = load ptr, ptr %memberidx.i, align 8
  %141 = load i64, ptr %140, align 4
  %142 = icmp eq i64 %141, 3
  %143 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %143, i64 0, i32 1
  %144 = load i64, ptr %memberidx3.i, align 4
  %145 = icmp eq i64 %144, 0
  %146 = and i1 %142, %145
  br i1 %146, label %while.body, label %while.entry.i33.preheader
}

define internal fastcc ptr @Parser_parse_string(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %1 = load ptr, ptr %memberidx.i, align 8
  %2 = load i64, ptr %1, align 4
  %3 = icmp eq i64 %2, 34
  br i1 %3, label %if.entry.i, label %else.i

if.entry.i:                                       ; preds = %for.entry
  %memberidx.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i.i, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx.i, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %for.entry
  %12 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %1, i64 0, i32 1
  %13 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %12, align 4
  %memberidx1.i75.i = getelementptr inbounds %Token, ptr %12, i64 0, i32 1
  store ptr %13, ptr %memberidx1.i75.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %12, %else.i ], [ %1, %if.entry.i.i ], [ %1, %if.entry.i ]
  %14 = alloca %Parser, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %memberidx, align 8
  store ptr null, ptr %14, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %14, i64 0, i32 1
  store ptr %15, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %14, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %16 = tail call ptr @malloc(i32 24)
  %memberidx.i14 = getelementptr inbounds %Array_ExpressionNode_, ptr %16, i64 0, i32 1
  store i64 0, ptr %memberidx.i14, align 4
  %memberidx1.i15 = getelementptr inbounds %Array_ExpressionNode_, ptr %16, i64 0, i32 2
  store i64 8, ptr %memberidx1.i15, align 4
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %16, align 8
  store i64 0, ptr %memberidx.i14, align 4
  %memberidx3 = getelementptr inbounds %StrToken, ptr %common.ret.op.i, i64 0, i32 4
  %18 = load ptr, ptr %memberidx3, align 8
  %19 = tail call ptr @malloc(i32 25)
  %20 = load ptr, ptr %18, align 8
  %memberidx1.i16 = getelementptr inbounds %Array_Array_Token__, ptr %18, i64 0, i32 1
  %21 = load i64, ptr %memberidx1.i16, align 4
  store i1 false, ptr %19, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_Array_Token__, ptr %19, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i17 = getelementptr inbounds %ArrayIterator_Array_Token__, ptr %19, i64 0, i32 3
  store ptr %20, ptr %memberidx2.i.i17, align 8
  %memberidx3.i.i18 = getelementptr inbounds %ArrayIterator_Array_Token__, ptr %19, i64 0, i32 2
  store i64 %21, ptr %memberidx3.i.i18, align 4
  %22 = icmp slt i64 %21, 1
  br i1 %22, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %Parser_eat.exit
  %memberidx3.i29 = getelementptr inbounds %Parser, ptr %14, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ExpressionNode____sl__.exit
  %.in = phi ptr [ %20, %for.body.lr.ph ], [ %54, %Array_ExpressionNode____sl__.exit ]
  %23 = phi i64 [ 1, %for.body.lr.ph ], [ %53, %Array_ExpressionNode____sl__.exit ]
  %24 = load ptr, ptr %.in, align 8
  %25 = load ptr, ptr %memberidx.i, align 8
  %26 = load i64, ptr %25, align 4
  %27 = icmp ne i64 %26, 46
  %28 = load ptr, ptr %memberidx, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx3.i, align 4
  %30 = icmp eq i64 %29, 0
  %31 = and i1 %27, %30
  br i1 %31, label %ifend, label %for.end

for.end:                                          ; preds = %Array_ExpressionNode____sl__.exit, %for.body, %Parser_eat.exit
  tail call void @free(ptr nonnull %19)
  %32 = tail call ptr @malloc(i32 40)
  %memberidx.i23 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i23, align 8
  store ptr %33, ptr %32, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %32, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i24 = getelementptr inbounds %ExpressionNode, ptr %32, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i24, align 4
  %memberidx1.i25 = getelementptr inbounds %StringExpressionNode, ptr %32, i64 0, i32 3
  store ptr %common.ret.op.i, ptr %memberidx1.i25, align 8
  %memberidx2.i26 = getelementptr inbounds %StringExpressionNode, ptr %32, i64 0, i32 4
  store ptr %16, ptr %memberidx2.i26, align 8
  ret ptr %32

ifend:                                            ; preds = %for.body
  store ptr %24, ptr %14, align 8
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i28 = getelementptr inbounds %Array_Token_, ptr %24, i64 0, i32 1
  %34 = load i64, ptr %memberidx2.i28, align 4
  %35 = icmp sgt i64 %34, -1
  br i1 %35, label %if.entry.i30, label %Parser_advance.exit

if.entry.i30:                                     ; preds = %ifend
  store i64 0, ptr %memberidx2.i, align 8
  %36 = load ptr, ptr %24, align 8
  %37 = load ptr, ptr %36, align 8
  store ptr %37, ptr %memberidx3.i29, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend, %if.entry.i30
  %38 = call fastcc ptr @Parser_parse_expression(ptr nonnull %14)
  %39 = load i64, ptr %memberidx.i14, align 4
  %40 = add i64 %39, 1
  %41 = load i64, ptr %memberidx1.i15, align 4
  %42 = icmp slt i64 %41, %40
  %.pre = load ptr, ptr %16, align 8
  br i1 %42, label %while.body.i.i, label %Array_ExpressionNode____sl__.exit

while.body.i.i:                                   ; preds = %Parser_advance.exit, %while.body.i.i
  %43 = phi ptr [ %47, %while.body.i.i ], [ %.pre, %Parser_advance.exit ]
  %44 = phi i64 [ %48, %while.body.i.i ], [ %41, %Parser_advance.exit ]
  %45 = shl nuw i64 %44, 1
  store i64 %45, ptr %memberidx1.i15, align 4
  %46 = shl i64 %44, 4
  %47 = call ptr @realloc(ptr %43, i64 %46)
  store ptr %47, ptr %16, align 8
  %48 = load i64, ptr %memberidx1.i15, align 4
  %49 = icmp slt i64 %48, %40
  br i1 %49, label %while.body.i.i, label %Array_ExpressionNode____sl__.exit.loopexit

Array_ExpressionNode____sl__.exit.loopexit:       ; preds = %while.body.i.i
  %.pre39 = load i64, ptr %memberidx.i14, align 4
  %.pre41 = add nsw i64 %.pre39, 1
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %Parser_advance.exit, %Array_ExpressionNode____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre41, %Array_ExpressionNode____sl__.exit.loopexit ], [ %40, %Parser_advance.exit ]
  %50 = phi ptr [ %47, %Array_ExpressionNode____sl__.exit.loopexit ], [ %.pre, %Parser_advance.exit ]
  %51 = phi i64 [ %.pre39, %Array_ExpressionNode____sl__.exit.loopexit ], [ %39, %Parser_advance.exit ]
  store i64 %.pre-phi, ptr %memberidx.i14, align 4
  %52 = getelementptr inbounds ptr, ptr %50, i64 %51
  store ptr %38, ptr %52, align 8
  %53 = add nuw nsw i64 %23, 1
  %54 = getelementptr inbounds ptr, ptr %20, i64 %23
  %.not = icmp slt i64 %23, %21
  br i1 %.not, label %for.body, label %for.end
}

define internal fastcc ptr @Parser_parse_variable_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 1, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 3
  %memberidx1.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 4
  %memberidx.i60 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx.i, i8 0, i64 16, i1 false)
  %5 = load i64, ptr %memberidx.i60, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i60, align 4
  %10 = load ptr, ptr %6, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 2
  %13 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %13, ptr %memberidx2, align 8
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %17 = load i64, ptr %memberidx.i60, align 4
  %18 = load ptr, ptr %0, align 8
  %memberidx2.i62 = getelementptr inbounds %Array_Token_, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx2.i62, align 4
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %if.entry.i64, label %Parser_advance.exit65

if.entry.i64:                                     ; preds = %if.entry
  %21 = add nsw i64 %17, 1
  store i64 %21, ptr %memberidx.i60, align 4
  %22 = load ptr, ptr %18, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  store ptr %24, ptr %memberidx, align 8
  br label %Parser_advance.exit65

Parser_advance.exit65:                            ; preds = %if.entry, %if.entry.i64
  %25 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %25, ptr %memberidx.i, align 8
  %.pre = load ptr, ptr %memberidx, align 8
  %.pre94 = load i64, ptr %.pre, align 4
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit65
  %26 = phi ptr [ null, %Parser_advance.exit ], [ %25, %Parser_advance.exit65 ]
  %27 = phi i64 [ %15, %Parser_advance.exit ], [ %.pre94, %Parser_advance.exit65 ]
  %28 = phi ptr [ %14, %Parser_advance.exit ], [ %.pre, %Parser_advance.exit65 ]
  %memberidx7 = getelementptr inbounds %Token, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx7, align 8
  %30 = icmp eq i64 %27, 38
  br i1 %30, label %if.entry10, label %else11

if.entry10:                                       ; preds = %ifend
  %31 = load i64, ptr %memberidx.i60, align 4
  %32 = load ptr, ptr %0, align 8
  %memberidx2.i67 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i67, align 4
  %34 = icmp slt i64 %31, %33
  br i1 %34, label %if.entry.i69, label %Parser_advance.exit70

if.entry.i69:                                     ; preds = %if.entry10
  %35 = add nsw i64 %31, 1
  store i64 %35, ptr %memberidx.i60, align 4
  %36 = load ptr, ptr %32, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  store ptr %38, ptr %memberidx, align 8
  br label %Parser_advance.exit70

Parser_advance.exit70:                            ; preds = %if.entry10, %if.entry.i69
  %39 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %39, ptr %memberidx1.i, align 8
  %40 = load ptr, ptr %39, align 8
  br label %ifend12

else11:                                           ; preds = %ifend
  %41 = icmp ne ptr %26, null
  %42 = icmp eq i64 %27, 25
  %43 = and i1 %42, %41
  br i1 %43, label %if.entry19, label %ifend12

ifend12:                                          ; preds = %Parser_advance.exit83, %else11, %Parser_advance.exit70
  %end_range.0 = phi ptr [ %40, %Parser_advance.exit70 ], [ %29, %Parser_advance.exit83 ], [ %29, %else11 ]
  %44 = tail call ptr @malloc(i32 32)
  %45 = load i64, ptr %4, align 4
  %memberidx1.i71 = getelementptr inbounds %FloRange, ptr %end_range.0, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i71, align 4
  %memberidx2.i72 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i72, align 4
  %memberidx3.i73 = getelementptr inbounds %FloRange, ptr %end_range.0, i64 0, i32 3
  %48 = load i64, ptr %memberidx3.i73, align 4
  store i64 %45, ptr %44, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %47, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %48, ptr %memberidx3.i.i, align 4
  store ptr %44, ptr %2, align 8
  ret ptr %2

if.entry19:                                       ; preds = %else11
  %49 = tail call ptr @malloc(i32 41)
  %50 = load ptr, ptr %26, align 8
  %memberidx.i74 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 3
  store ptr %26, ptr %memberidx.i74, align 8
  %memberidx1.i75 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 4
  store i1 true, ptr %memberidx1.i75, align 1
  store ptr %50, ptr %49, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %49, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i76 = getelementptr inbounds %ExpressionNode, ptr %49, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i76, align 4
  %memberidx2.i77 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 5
  %51 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_ExpressionNode_, ptr %51, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i.i78 = getelementptr inbounds %Array_ExpressionNode_, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i78, align 4
  %52 = tail call ptr @malloc(i32 64)
  store ptr %52, ptr %51, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %51, ptr %memberidx2.i77, align 8
  store i1 false, ptr %memberidx1.i75, align 1
  %53 = load i64, ptr %memberidx.i60, align 4
  %54 = load ptr, ptr %0, align 8
  %memberidx2.i80 = getelementptr inbounds %Array_Token_, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx2.i80, align 4
  %56 = icmp slt i64 %53, %55
  br i1 %56, label %if.entry.i82, label %Parser_advance.exit83

if.entry.i82:                                     ; preds = %if.entry19
  %57 = add nsw i64 %53, 1
  store i64 %57, ptr %memberidx.i60, align 4
  %58 = load ptr, ptr %54, align 8
  %59 = getelementptr inbounds ptr, ptr %58, i64 %57
  %60 = load ptr, ptr %59, align 8
  store ptr %60, ptr %memberidx, align 8
  br label %Parser_advance.exit83

Parser_advance.exit83:                            ; preds = %if.entry19, %if.entry.i82
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %51, i64 26)
  %61 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx29 = getelementptr inbounds %Token, ptr %61, i64 0, i32 1
  %62 = load ptr, ptr %memberidx29, align 8
  %63 = tail call ptr @malloc(i32 32)
  %64 = load i64, ptr %50, align 4
  %memberidx1.i84 = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 1
  %65 = load i64, ptr %memberidx1.i84, align 4
  %memberidx2.i85 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  %66 = load i64, ptr %memberidx2.i85, align 4
  %memberidx3.i86 = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 3
  %67 = load i64, ptr %memberidx3.i86, align 4
  store i64 %64, ptr %63, align 4
  %memberidx1.i.i87 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 1
  store i64 %65, ptr %memberidx1.i.i87, align 4
  %memberidx2.i.i88 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 2
  store i64 %66, ptr %memberidx2.i.i88, align 4
  %memberidx3.i.i89 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 3
  store i64 %67, ptr %memberidx3.i.i89, align 4
  store ptr %63, ptr %49, align 8
  store ptr %49, ptr %memberidx1.i, align 8
  br label %ifend12
}

define internal fastcc ptr @Parser_parse_statement(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %ifend38 [
    i64 56, label %if.entry
    i64 60, label %if.entry6
    i64 59, label %if.entry11
    i64 64, label %if.entry16
    i64 55, label %if.entry21
    i64 54, label %if.entry26
    i64 63, label %if.entry31
    i64 62, label %if.entry36
  ]

common.ret:                                       ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %Parser_advance.exit.i, %if.entry.i65, %if.entry.i80, %Parser_eat.exit.i, %Parser_advance.exit35.i, %Parser_new_lines.exit.i, %Parser_advance.exit62, %Parser_advance.exit, %if.entry26, %if.entry21, %Parser_parse_while_statement.exit, %ifend38
  %common.ret.op = phi ptr [ %161, %ifend38 ], [ %58, %Parser_parse_while_statement.exit ], [ %141, %if.entry21 ], [ %142, %if.entry26 ], [ %151, %Parser_advance.exit ], [ %160, %Parser_advance.exit62 ], [ %5, %Parser_new_lines.exit.i ], [ %5, %Parser_advance.exit35.i ], [ %77, %Parser_eat.exit.i ], [ %77, %if.entry.i80 ], [ %118, %switch.early.test ], [ %118, %if.entry.i65 ], [ %118, %Parser_advance.exit.i ], [ %118, %switch.early.test ], [ %118, %switch.early.test ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %5 = tail call ptr @malloc(i32 40)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1.i96 = getelementptr inbounds %Token, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1.i96, align 8
  store ptr %7, ptr %5, align 8
  %memberidx.i.i.i97 = getelementptr inbounds %StatementNode, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i97, align 4
  %memberidx.i.i98 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 4
  store ptr null, ptr %memberidx.i.i98, align 8
  %memberidx.i24.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %8 = load i64, ptr %memberidx.i24.i, align 4
  %9 = load ptr, ptr %0, align 8
  %memberidx2.i.i99 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx2.i.i99, align 4
  %11 = icmp slt i64 %8, %10
  br i1 %11, label %if.entry.i.i101, label %Parser_advance.exit.i108

if.entry.i.i101:                                  ; preds = %if.entry
  %12 = add nsw i64 %8, 1
  store i64 %12, ptr %memberidx.i24.i, align 4
  %13 = load ptr, ptr %9, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  store ptr %15, ptr %memberidx, align 8
  br label %Parser_advance.exit.i108

Parser_advance.exit.i108:                         ; preds = %if.entry.i.i101, %if.entry
  %memberidx2.i102 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 2
  %16 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %16, ptr %memberidx2.i102, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 32)
  %19 = load i64, ptr %7, align 4
  %memberidx1.i.i103 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 1
  %20 = load i64, ptr %memberidx1.i.i103, align 4
  %memberidx2.i25.i = getelementptr inbounds %FloRange, ptr %7, i64 0, i32 2
  %21 = load i64, ptr %memberidx2.i25.i, align 4
  %memberidx3.i26.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  %22 = load i64, ptr %memberidx3.i26.i, align 4
  store i64 %19, ptr %18, align 4
  %memberidx1.i.i.i104 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i.i.i104, align 4
  %memberidx2.i.i.i105 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 2
  store i64 %21, ptr %memberidx2.i.i.i105, align 4
  %memberidx3.i.i.i106 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 3
  store i64 %22, ptr %memberidx3.i.i.i106, align 4
  store ptr %18, ptr %5, align 8
  %memberidx7.i107 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 3
  %23 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %23, ptr %memberidx7.i107, align 8
  %memberidx2.i.i29.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %24 = load ptr, ptr %memberidx2.i.i29.i, align 8
  %memberidx3.i.i30.i = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %25 = load ptr, ptr %memberidx, align 8
  %26 = load i64, ptr %25, align 4
  %27 = icmp eq i64 %26, 33
  %28 = load i64, ptr %memberidx3.i.i30.i, align 4
  %29 = icmp eq i64 %28, 0
  %30 = and i1 %27, %29
  br i1 %30, label %while.body.i.i.lr.ph, label %Parser_new_lines.exit.i

while.body.i.i.lr.ph:                             ; preds = %Parser_advance.exit.i108
  %31 = load ptr, ptr %0, align 8
  %memberidx2.i5.i.i = getelementptr inbounds %Array_Token_, ptr %31, i64 0, i32 1
  %32 = load i64, ptr %memberidx.i24.i, align 4
  %33 = load i64, ptr %memberidx2.i5.i.i, align 4
  %34 = icmp slt i64 %32, %33
  br i1 %34, label %while.body.i.i, label %while.body.i.i.us

while.body.i.i.us:                                ; preds = %while.body.i.i.lr.ph, %while.body.i.i.us
  br label %while.body.i.i.us

while.body.i.i:                                   ; preds = %while.body.i.i.lr.ph, %Parser_advance.exit.i.i110
  %35 = phi i64 [ %44, %Parser_advance.exit.i.i110 ], [ %32, %while.body.i.i.lr.ph ]
  %36 = load i64, ptr %memberidx2.i5.i.i, align 4
  %37 = icmp slt i64 %35, %36
  br i1 %37, label %if.entry.i.i.i109, label %Parser_advance.exit.i.i110

if.entry.i.i.i109:                                ; preds = %while.body.i.i
  %38 = add nsw i64 %35, 1
  store i64 %38, ptr %memberidx.i24.i, align 4
  %39 = load ptr, ptr %31, align 8
  %40 = getelementptr inbounds ptr, ptr %39, i64 %38
  %41 = load ptr, ptr %40, align 8
  store ptr %41, ptr %memberidx, align 8
  %.pre = load i64, ptr %41, align 4
  %.pre124 = load i64, ptr %memberidx3.i.i30.i, align 4
  br label %Parser_advance.exit.i.i110

Parser_advance.exit.i.i110:                       ; preds = %if.entry.i.i.i109, %while.body.i.i
  %42 = phi i64 [ %.pre124, %if.entry.i.i.i109 ], [ 0, %while.body.i.i ]
  %43 = phi i64 [ %.pre, %if.entry.i.i.i109 ], [ 33, %while.body.i.i ]
  %44 = phi i64 [ %38, %if.entry.i.i.i109 ], [ %35, %while.body.i.i ]
  %45 = icmp eq i64 %43, 33
  %46 = icmp eq i64 %42, 0
  %47 = and i1 %45, %46
  br i1 %47, label %while.body.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i110, %Parser_advance.exit.i108
  %.lcssa = phi i64 [ %26, %Parser_advance.exit.i108 ], [ %43, %Parser_advance.exit.i.i110 ]
  %48 = icmp eq i64 %.lcssa, 58
  br i1 %48, label %if.entry.i111, label %common.ret

if.entry.i111:                                    ; preds = %Parser_new_lines.exit.i
  %49 = load i64, ptr %memberidx.i24.i, align 4
  %50 = load ptr, ptr %0, align 8
  %memberidx2.i32.i = getelementptr inbounds %Array_Token_, ptr %50, i64 0, i32 1
  %51 = load i64, ptr %memberidx2.i32.i, align 4
  %52 = icmp slt i64 %49, %51
  br i1 %52, label %if.entry.i34.i, label %Parser_advance.exit35.i

if.entry.i34.i:                                   ; preds = %if.entry.i111
  %53 = add nsw i64 %49, 1
  store i64 %53, ptr %memberidx.i24.i, align 4
  %54 = load ptr, ptr %50, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  store ptr %56, ptr %memberidx, align 8
  br label %Parser_advance.exit35.i

Parser_advance.exit35.i:                          ; preds = %if.entry.i34.i, %if.entry.i111
  %57 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %57, ptr %memberidx.i.i98, align 8
  br label %common.ret

if.entry6:                                        ; preds = %1
  %58 = tail call ptr @malloc(i32 32)
  %59 = load ptr, ptr %memberidx, align 8
  %memberidx1.i82 = getelementptr inbounds %Token, ptr %59, i64 0, i32 1
  %60 = load ptr, ptr %memberidx1.i82, align 8
  store ptr %60, ptr %58, align 8
  %memberidx.i.i.i83 = getelementptr inbounds %StatementNode, ptr %58, i64 0, i32 1
  store i64 4, ptr %memberidx.i.i.i83, align 4
  %memberidx.i.i84 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %61 = load i64, ptr %memberidx.i.i84, align 4
  %62 = load ptr, ptr %0, align 8
  %memberidx2.i.i85 = getelementptr inbounds %Array_Token_, ptr %62, i64 0, i32 1
  %63 = load i64, ptr %memberidx2.i.i85, align 4
  %64 = icmp slt i64 %61, %63
  br i1 %64, label %if.entry.i.i87, label %Parser_parse_while_statement.exit

if.entry.i.i87:                                   ; preds = %if.entry6
  %65 = add nsw i64 %61, 1
  store i64 %65, ptr %memberidx.i.i84, align 4
  %66 = load ptr, ptr %62, align 8
  %67 = getelementptr inbounds ptr, ptr %66, i64 %65
  %68 = load ptr, ptr %67, align 8
  store ptr %68, ptr %memberidx, align 8
  br label %Parser_parse_while_statement.exit

Parser_parse_while_statement.exit:                ; preds = %if.entry6, %if.entry.i.i87
  %memberidx2.i88 = getelementptr inbounds %WhileStatementNode, ptr %58, i64 0, i32 2
  %69 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %69, ptr %memberidx2.i88, align 8
  %70 = load ptr, ptr %69, align 8
  %71 = tail call ptr @malloc(i32 32)
  %72 = load i64, ptr %60, align 4
  %memberidx1.i.i89 = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 1
  %73 = load i64, ptr %memberidx1.i.i89, align 4
  %memberidx2.i16.i = getelementptr inbounds %FloRange, ptr %60, i64 0, i32 2
  %74 = load i64, ptr %memberidx2.i16.i, align 4
  %memberidx3.i17.i = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 3
  %75 = load i64, ptr %memberidx3.i17.i, align 4
  store i64 %72, ptr %71, align 4
  %memberidx1.i.i.i90 = getelementptr inbounds %FloRange, ptr %71, i64 0, i32 1
  store i64 %73, ptr %memberidx1.i.i.i90, align 4
  %memberidx2.i.i.i91 = getelementptr inbounds %FloRange, ptr %71, i64 0, i32 2
  store i64 %74, ptr %memberidx2.i.i.i91, align 4
  %memberidx3.i.i.i92 = getelementptr inbounds %FloRange, ptr %71, i64 0, i32 3
  store i64 %75, ptr %memberidx3.i.i.i92, align 4
  store ptr %71, ptr %58, align 8
  %memberidx7.i93 = getelementptr inbounds %WhileStatementNode, ptr %58, i64 0, i32 3
  %76 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %76, ptr %memberidx7.i93, align 8
  br label %common.ret

if.entry11:                                       ; preds = %1
  %77 = tail call ptr @malloc(i32 40)
  %78 = load ptr, ptr %memberidx, align 8
  %memberidx1.i67 = getelementptr inbounds %Token, ptr %78, i64 0, i32 1
  %79 = load ptr, ptr %memberidx1.i67, align 8
  %memberidx.i.i68 = getelementptr inbounds %ForStatementNode, ptr %77, i64 0, i32 2
  %memberidx1.i.i69 = getelementptr inbounds %ForStatementNode, ptr %77, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx.i.i68, i8 0, i64 16, i1 false)
  store ptr %79, ptr %77, align 8
  %memberidx.i.i.i70 = getelementptr inbounds %StatementNode, ptr %77, i64 0, i32 1
  store i64 3, ptr %memberidx.i.i.i70, align 4
  %memberidx.i21.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %80 = load i64, ptr %memberidx.i21.i, align 4
  %81 = load ptr, ptr %0, align 8
  %memberidx2.i.i71 = getelementptr inbounds %Array_Token_, ptr %81, i64 0, i32 1
  %82 = load i64, ptr %memberidx2.i.i71, align 4
  %83 = icmp slt i64 %80, %82
  br i1 %83, label %if.entry.i.i73, label %Parser_advance.exit.i75

if.entry.i.i73:                                   ; preds = %if.entry11
  %84 = add nsw i64 %80, 1
  store i64 %84, ptr %memberidx.i21.i, align 4
  %85 = load ptr, ptr %81, align 8
  %86 = getelementptr inbounds ptr, ptr %85, i64 %84
  %87 = load ptr, ptr %86, align 8
  store ptr %87, ptr %memberidx, align 8
  br label %Parser_advance.exit.i75

Parser_advance.exit.i75:                          ; preds = %if.entry.i.i73, %if.entry11
  %88 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %88, ptr %memberidx.i.i68, align 8
  %89 = load ptr, ptr %memberidx, align 8
  %90 = load i64, ptr %89, align 4
  %91 = icmp eq i64 %90, 69
  br i1 %91, label %if.entry.i24.i, label %else.i.i

if.entry.i24.i:                                   ; preds = %Parser_advance.exit.i75
  %92 = load i64, ptr %memberidx.i21.i, align 4
  %93 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i76 = getelementptr inbounds %Array_Token_, ptr %93, i64 0, i32 1
  %94 = load i64, ptr %memberidx2.i.i.i76, align 4
  %95 = icmp slt i64 %92, %94
  br i1 %95, label %if.entry.i.i.i, label %Parser_eat.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry.i24.i
  %96 = add nsw i64 %92, 1
  store i64 %96, ptr %memberidx.i21.i, align 4
  %97 = load ptr, ptr %93, align 8
  %98 = getelementptr inbounds ptr, ptr %97, i64 %96
  %99 = load ptr, ptr %98, align 8
  store ptr %99, ptr %memberidx, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %Parser_advance.exit.i75
  %100 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %89, i64 0, i32 1
  %101 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %100, align 4
  %memberidx1.i75.i.i = getelementptr inbounds %Token, ptr %100, i64 0, i32 1
  store ptr %101, ptr %memberidx1.i75.i.i, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i24.i, %if.entry.i.i.i, %else.i.i
  %102 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %102, ptr %memberidx1.i.i69, align 8
  %103 = load ptr, ptr %memberidx, align 8
  %memberidx7.i = getelementptr inbounds %Token, ptr %103, i64 0, i32 1
  %104 = load ptr, ptr %memberidx7.i, align 8
  %105 = tail call ptr @malloc(i32 32)
  %106 = load i64, ptr %79, align 4
  %memberidx1.i25.i = getelementptr inbounds %FloRange, ptr %104, i64 0, i32 1
  %107 = load i64, ptr %memberidx1.i25.i, align 4
  %memberidx2.i26.i = getelementptr inbounds %FloRange, ptr %79, i64 0, i32 2
  %108 = load i64, ptr %memberidx2.i26.i, align 4
  %memberidx3.i27.i = getelementptr inbounds %FloRange, ptr %104, i64 0, i32 3
  %109 = load i64, ptr %memberidx3.i27.i, align 4
  store i64 %106, ptr %105, align 4
  %memberidx1.i.i.i79 = getelementptr inbounds %FloRange, ptr %105, i64 0, i32 1
  store i64 %107, ptr %memberidx1.i.i.i79, align 4
  %memberidx2.i.i28.i = getelementptr inbounds %FloRange, ptr %105, i64 0, i32 2
  store i64 %108, ptr %memberidx2.i.i28.i, align 4
  %memberidx3.i.i29.i = getelementptr inbounds %FloRange, ptr %105, i64 0, i32 3
  store i64 %109, ptr %memberidx3.i.i29.i, align 4
  store ptr %105, ptr %77, align 8
  %110 = load ptr, ptr %memberidx, align 8
  %111 = load i64, ptr %110, align 4
  %112 = icmp ne i64 %111, 46
  %memberidx2.i31.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %113 = load ptr, ptr %memberidx2.i31.i, align 8
  %memberidx3.i32.i = getelementptr inbounds %Array_FloError_, ptr %113, i64 0, i32 1
  %114 = load i64, ptr %memberidx3.i32.i, align 4
  %115 = icmp eq i64 %114, 0
  %116 = and i1 %112, %115
  br i1 %116, label %if.entry.i80, label %common.ret

if.entry.i80:                                     ; preds = %Parser_eat.exit.i
  %memberidx8.i = getelementptr inbounds %ForStatementNode, ptr %77, i64 0, i32 4
  %117 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %117, ptr %memberidx8.i, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %118 = tail call ptr @malloc(i32 24)
  %119 = load ptr, ptr %memberidx, align 8
  %memberidx1.i = getelementptr inbounds %Token, ptr %119, i64 0, i32 1
  %120 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %ReturnStatementNode, ptr %118, i64 0, i32 2
  store ptr null, ptr %memberidx.i.i, align 8
  store ptr %120, ptr %118, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %118, i64 0, i32 1
  store i64 7, ptr %memberidx.i.i.i, align 4
  %memberidx.i19.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %121 = load i64, ptr %memberidx.i19.i, align 4
  %122 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %122, i64 0, i32 1
  %123 = load i64, ptr %memberidx2.i.i, align 4
  %124 = icmp slt i64 %121, %123
  br i1 %124, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %if.entry16
  %125 = add nsw i64 %121, 1
  store i64 %125, ptr %memberidx.i19.i, align 4
  %126 = load ptr, ptr %122, align 8
  %127 = getelementptr inbounds ptr, ptr %126, i64 %125
  %128 = load ptr, ptr %127, align 8
  store ptr %128, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %if.entry16
  %129 = phi ptr [ %128, %if.entry.i.i ], [ %119, %if.entry16 ]
  %memberidx2.i21.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %130 = load ptr, ptr %memberidx2.i21.i, align 8
  %memberidx3.i22.i = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 1
  %131 = load i64, ptr %memberidx3.i22.i, align 4
  %.fr = freeze i64 %131
  %132 = icmp eq i64 %.fr, 0
  br i1 %132, label %switch.early.test, label %common.ret

switch.early.test:                                ; preds = %Parser_advance.exit.i
  %133 = load i64, ptr %129, align 4
  switch i64 %133, label %if.entry.i65 [
    i64 46, label %common.ret
    i64 33, label %common.ret
    i64 28, label %common.ret
  ]

if.entry.i65:                                     ; preds = %switch.early.test
  %134 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %135 = load ptr, ptr %134, align 8
  %136 = tail call ptr @malloc(i32 32)
  %137 = load i64, ptr %120, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %135, i64 0, i32 1
  %138 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i23.i = getelementptr inbounds %FloRange, ptr %120, i64 0, i32 2
  %139 = load i64, ptr %memberidx2.i23.i, align 4
  %memberidx3.i24.i = getelementptr inbounds %FloRange, ptr %135, i64 0, i32 3
  %140 = load i64, ptr %memberidx3.i24.i, align 4
  store i64 %137, ptr %136, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %136, i64 0, i32 1
  store i64 %138, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %136, i64 0, i32 2
  store i64 %139, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %136, i64 0, i32 3
  store i64 %140, ptr %memberidx3.i.i.i, align 4
  store ptr %136, ptr %118, align 8
  store ptr %134, ptr %memberidx.i.i, align 8
  br label %common.ret

if.entry21:                                       ; preds = %1
  %141 = tail call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry26:                                       ; preds = %1
  %142 = tail call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry31:                                       ; preds = %1
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %143 = load i64, ptr %memberidx.i, align 4
  %144 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %144, i64 0, i32 1
  %145 = load i64, ptr %memberidx2.i, align 4
  %146 = icmp slt i64 %143, %145
  br i1 %146, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry31
  %147 = add nsw i64 %143, 1
  store i64 %147, ptr %memberidx.i, align 4
  %148 = load ptr, ptr %144, align 8
  %149 = getelementptr inbounds ptr, ptr %148, i64 %147
  %150 = load ptr, ptr %149, align 8
  store ptr %150, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry31, %if.entry.i
  %151 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %151, align 8
  %memberidx.i57 = getelementptr inbounds %StatementNode, ptr %151, i64 0, i32 1
  store i64 5, ptr %memberidx.i57, align 4
  br label %common.ret

if.entry36:                                       ; preds = %1
  %memberidx.i58 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %152 = load i64, ptr %memberidx.i58, align 4
  %153 = load ptr, ptr %0, align 8
  %memberidx2.i59 = getelementptr inbounds %Array_Token_, ptr %153, i64 0, i32 1
  %154 = load i64, ptr %memberidx2.i59, align 4
  %155 = icmp slt i64 %152, %154
  br i1 %155, label %if.entry.i61, label %Parser_advance.exit62

if.entry.i61:                                     ; preds = %if.entry36
  %156 = add nsw i64 %152, 1
  store i64 %156, ptr %memberidx.i58, align 4
  %157 = load ptr, ptr %153, align 8
  %158 = getelementptr inbounds ptr, ptr %157, i64 %156
  %159 = load ptr, ptr %158, align 8
  store ptr %159, ptr %memberidx, align 8
  br label %Parser_advance.exit62

Parser_advance.exit62:                            ; preds = %if.entry36, %if.entry.i61
  %160 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %160, align 8
  %memberidx.i63 = getelementptr inbounds %StatementNode, ptr %160, i64 0, i32 1
  store i64 6, ptr %memberidx.i63, align 4
  br label %common.ret

ifend38:                                          ; preds = %1
  %161 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  br label %common.ret
}

define internal fastcc void @Parser_parse_args(ptr %0, ptr nocapture %1) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 33
  %7 = load i64, ptr %memberidx3.i.i, align 4
  %8 = icmp eq i64 %7, 0
  %9 = and i1 %6, %8
  br i1 %9, label %while.body.i.lr.ph, label %Parser_new_lines.exit

while.body.i.lr.ph:                               ; preds = %2
  %memberidx.i4.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i5.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx.i4.i, align 4
  %12 = load i64, ptr %memberidx2.i5.i, align 4
  %13 = icmp slt i64 %11, %12
  br i1 %13, label %while.body.i, label %while.body.i.us

while.body.i.us:                                  ; preds = %while.body.i.lr.ph, %while.body.i.us
  br label %while.body.i.us

while.body.i:                                     ; preds = %while.body.i.lr.ph, %Parser_advance.exit.i
  %14 = phi i64 [ %23, %Parser_advance.exit.i ], [ %11, %while.body.i.lr.ph ]
  %15 = load i64, ptr %memberidx2.i5.i, align 4
  %16 = icmp slt i64 %14, %15
  br i1 %16, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.body.i
  %17 = add nsw i64 %14, 1
  store i64 %17, ptr %memberidx.i4.i, align 4
  %18 = load ptr, ptr %10, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %20, align 4
  %.pre39 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.body.i
  %21 = phi i64 [ %.pre39, %if.entry.i.i ], [ 0, %while.body.i ]
  %22 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.body.i ]
  %23 = phi i64 [ %17, %if.entry.i.i ], [ %14, %while.body.i ]
  %24 = icmp eq i64 %22, 33
  %25 = icmp eq i64 %21, 0
  %26 = and i1 %24, %25
  br i1 %26, label %while.body.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %2
  %27 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %memberidx.i11 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %28 = load i64, ptr %memberidx.i11, align 4
  %29 = add i64 %28, 1
  %memberidx.i.i12 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i12, align 4
  %31 = icmp slt i64 %30, %29
  %.pre40 = load ptr, ptr %1, align 8
  br i1 %31, label %while.body.i.i14, label %Array_ArgNode____sl__.exit15

while.body.i.i14:                                 ; preds = %Parser_new_lines.exit, %while.body.i.i14
  %32 = phi ptr [ %36, %while.body.i.i14 ], [ %.pre40, %Parser_new_lines.exit ]
  %33 = phi i64 [ %37, %while.body.i.i14 ], [ %30, %Parser_new_lines.exit ]
  %34 = shl nuw i64 %33, 1
  store i64 %34, ptr %memberidx.i.i12, align 4
  %35 = shl i64 %33, 4
  %36 = tail call ptr @realloc(ptr %32, i64 %35)
  store ptr %36, ptr %1, align 8
  %37 = load i64, ptr %memberidx.i.i12, align 4
  %38 = icmp slt i64 %37, %29
  br i1 %38, label %while.body.i.i14, label %Array_ArgNode____sl__.exit15.loopexit

Array_ArgNode____sl__.exit15.loopexit:            ; preds = %while.body.i.i14
  %.pre41 = load i64, ptr %memberidx.i11, align 4
  %.pre48 = add nsw i64 %.pre41, 1
  br label %Array_ArgNode____sl__.exit15

Array_ArgNode____sl__.exit15:                     ; preds = %Parser_new_lines.exit, %Array_ArgNode____sl__.exit15.loopexit
  %.pre-phi = phi i64 [ %.pre48, %Array_ArgNode____sl__.exit15.loopexit ], [ %29, %Parser_new_lines.exit ]
  %39 = phi ptr [ %36, %Array_ArgNode____sl__.exit15.loopexit ], [ %.pre40, %Parser_new_lines.exit ]
  %40 = phi i64 [ %.pre41, %Array_ArgNode____sl__.exit15.loopexit ], [ %28, %Parser_new_lines.exit ]
  store i64 %.pre-phi, ptr %memberidx.i11, align 4
  %41 = getelementptr inbounds ptr, ptr %39, i64 %40
  store ptr %27, ptr %41, align 8
  %42 = load ptr, ptr %memberidx.i, align 8
  %43 = load i64, ptr %42, align 4
  %44 = icmp eq i64 %43, 3
  %45 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i33 = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 1
  %46 = load i64, ptr %memberidx3.i33, align 4
  %47 = icmp eq i64 %46, 0
  %48 = and i1 %44, %47
  br i1 %48, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %Array_ArgNode____sl__.exit15
  %memberidx.i4.i22 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.body

while.end:                                        ; preds = %Array_ArgNode____sl__.exit, %Array_ArgNode____sl__.exit15
  ret void

while.body:                                       ; preds = %while.body.lr.ph, %Array_ArgNode____sl__.exit
  %49 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 3)
  %50 = load ptr, ptr %memberidx.i, align 8
  %51 = load i64, ptr %50, align 4
  %52 = icmp eq i64 %51, 33
  %53 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i2032 = getelementptr inbounds %Array_FloError_, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx3.i.i2032, align 4
  %55 = icmp eq i64 %54, 0
  %56 = and i1 %52, %55
  br i1 %56, label %while.body.i24.lr.ph, label %Parser_new_lines.exit28

while.body.i24.lr.ph:                             ; preds = %while.body
  %57 = load ptr, ptr %0, align 8
  %memberidx2.i5.i23 = getelementptr inbounds %Array_Token_, ptr %57, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i4.i22, align 4
  %59 = load i64, ptr %memberidx2.i5.i23, align 4
  %60 = icmp slt i64 %58, %59
  br i1 %60, label %while.body.i24, label %while.body.i24.us

while.body.i24.us:                                ; preds = %while.body.i24.lr.ph, %while.body.i24.us
  br label %while.body.i24.us

while.body.i24:                                   ; preds = %while.body.i24.lr.ph, %Parser_advance.exit.i27
  %61 = phi i64 [ %70, %Parser_advance.exit.i27 ], [ %58, %while.body.i24.lr.ph ]
  %62 = load i64, ptr %memberidx2.i5.i23, align 4
  %63 = icmp slt i64 %61, %62
  br i1 %63, label %if.entry.i.i26, label %Parser_advance.exit.i27

if.entry.i.i26:                                   ; preds = %while.body.i24
  %64 = add nsw i64 %61, 1
  store i64 %64, ptr %memberidx.i4.i22, align 4
  %65 = load ptr, ptr %57, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  store ptr %67, ptr %memberidx.i, align 8
  %.pre43 = load i64, ptr %67, align 4
  %.pre44 = load i64, ptr %memberidx3.i.i2032, align 4
  br label %Parser_advance.exit.i27

Parser_advance.exit.i27:                          ; preds = %if.entry.i.i26, %while.body.i24
  %68 = phi i64 [ %.pre44, %if.entry.i.i26 ], [ 0, %while.body.i24 ]
  %69 = phi i64 [ %.pre43, %if.entry.i.i26 ], [ 33, %while.body.i24 ]
  %70 = phi i64 [ %64, %if.entry.i.i26 ], [ %61, %while.body.i24 ]
  %71 = icmp eq i64 %69, 33
  %72 = icmp eq i64 %68, 0
  %73 = and i1 %71, %72
  br i1 %73, label %while.body.i24, label %Parser_new_lines.exit28

Parser_new_lines.exit28:                          ; preds = %Parser_advance.exit.i27, %while.body
  %74 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %75 = load i64, ptr %memberidx.i11, align 4
  %76 = add i64 %75, 1
  %77 = load i64, ptr %memberidx.i.i12, align 4
  %78 = icmp slt i64 %77, %76
  %.pre45 = load ptr, ptr %1, align 8
  br i1 %78, label %while.body.i.i, label %Array_ArgNode____sl__.exit

while.body.i.i:                                   ; preds = %Parser_new_lines.exit28, %while.body.i.i
  %79 = phi ptr [ %83, %while.body.i.i ], [ %.pre45, %Parser_new_lines.exit28 ]
  %80 = phi i64 [ %84, %while.body.i.i ], [ %77, %Parser_new_lines.exit28 ]
  %81 = shl nuw i64 %80, 1
  store i64 %81, ptr %memberidx.i.i12, align 4
  %82 = shl i64 %80, 4
  %83 = tail call ptr @realloc(ptr %79, i64 %82)
  store ptr %83, ptr %1, align 8
  %84 = load i64, ptr %memberidx.i.i12, align 4
  %85 = icmp slt i64 %84, %76
  br i1 %85, label %while.body.i.i, label %Array_ArgNode____sl__.exit.loopexit

Array_ArgNode____sl__.exit.loopexit:              ; preds = %while.body.i.i
  %.pre46 = load i64, ptr %memberidx.i11, align 4
  %.pre49 = add nsw i64 %.pre46, 1
  br label %Array_ArgNode____sl__.exit

Array_ArgNode____sl__.exit:                       ; preds = %Parser_new_lines.exit28, %Array_ArgNode____sl__.exit.loopexit
  %.pre-phi50 = phi i64 [ %.pre49, %Array_ArgNode____sl__.exit.loopexit ], [ %76, %Parser_new_lines.exit28 ]
  %86 = phi ptr [ %83, %Array_ArgNode____sl__.exit.loopexit ], [ %.pre45, %Parser_new_lines.exit28 ]
  %87 = phi i64 [ %.pre46, %Array_ArgNode____sl__.exit.loopexit ], [ %75, %Parser_new_lines.exit28 ]
  store i64 %.pre-phi50, ptr %memberidx.i11, align 4
  %88 = getelementptr inbounds ptr, ptr %86, i64 %87
  store ptr %74, ptr %88, align 8
  %89 = load ptr, ptr %memberidx.i, align 8
  %90 = load i64, ptr %89, align 4
  %91 = icmp eq i64 %90, 3
  %92 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %93 = load i64, ptr %memberidx3.i, align 4
  %94 = icmp eq i64 %93, 0
  %95 = and i1 %91, %94
  br i1 %95, label %while.body, label %while.end
}

define internal fastcc ptr @Parser_parse_const_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 2, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 3
  store ptr null, ptr %memberidx.i, align 8
  %memberidx.i24 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %5 = load i64, ptr %memberidx.i24, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i24, align 4
  %10 = load ptr, ptr %6, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 2
  %13 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %13, ptr %memberidx2, align 8
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %17 = load i64, ptr %memberidx.i24, align 4
  %18 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds %Array_Token_, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx2.i26, align 4
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %if.entry.i28, label %Parser_advance.exit29

if.entry.i28:                                     ; preds = %if.entry
  %21 = add nsw i64 %17, 1
  store i64 %21, ptr %memberidx.i24, align 4
  %22 = load ptr, ptr %18, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  store ptr %24, ptr %memberidx, align 8
  br label %Parser_advance.exit29

Parser_advance.exit29:                            ; preds = %if.entry, %if.entry.i28
  %25 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %25, ptr %memberidx.i, align 8
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit29
  %26 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 38)
  %memberidx6 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 4
  %27 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %27, ptr %memberidx6, align 8
  %28 = load ptr, ptr %27, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i30 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i30, align 4
  %memberidx3.i31 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i31, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i, align 4
  store ptr %29, ptr %2, align 8
  ret ptr %2
}

define internal fastcc ptr @Parser_parse_tuple_expression_or_expression_par(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %12 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 3
  br i1 %15, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = load ptr, ptr %0, align 8
  %memberidx2.i22 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx2.i22, align 4
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %if.entry.i24, label %Array_ExpressionNode____sl__.exit

if.entry.i24:                                     ; preds = %if.entry
  %20 = add nsw i64 %16, 1
  store i64 %20, ptr %memberidx.i, align 4
  %21 = load ptr, ptr %17, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  store ptr %23, ptr %memberidx, align 8
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %if.entry.i24, %if.entry
  %24 = tail call ptr @malloc(i32 32)
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %24, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %24, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i, align 4
  %memberidx.i26 = getelementptr inbounds %TupleExpressionNode, ptr %24, i64 0, i32 3
  %25 = tail call ptr @malloc(i32 24)
  %memberidx.i3.i = getelementptr inbounds %Array_ExpressionNode_, ptr %25, i64 0, i32 1
  store i64 0, ptr %memberidx.i3.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %25, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %26 = tail call ptr @malloc(i32 64)
  store ptr %26, ptr %25, align 8
  store ptr %25, ptr %memberidx.i26, align 8
  store i64 1, ptr %memberidx.i3.i, align 4
  store ptr %12, ptr %26, align 8
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %25, i64 26)
  %27 = load ptr, ptr %memberidx, align 8
  %memberidx8 = getelementptr inbounds %Token, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx8, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %3, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i30 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i30, align 4
  %memberidx3.i31 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i31, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i32 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i32, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i, align 4
  store ptr %29, ptr %24, align 8
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Array_ExpressionNode____sl__.exit
  %expression.0 = phi ptr [ %24, %Array_ExpressionNode____sl__.exit ], [ %12, %Parser_advance.exit ]
  %34 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  ret ptr %expression.0
}

define internal fastcc void @Parser_parse_type_list(ptr %0, ptr nocapture %1) unnamed_addr {
  %3 = tail call fastcc ptr @Parser_parse_type(ptr %0)
  %memberidx.i10 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %4 = load i64, ptr %memberidx.i10, align 4
  %5 = add i64 %4, 1
  %memberidx.i.i = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 2
  %6 = load i64, ptr %memberidx.i.i, align 4
  %7 = icmp slt i64 %6, %5
  %.pre = load ptr, ptr %1, align 8
  br i1 %7, label %while.body.i.i, label %Array_TypeNode____sl__.exit

while.body.i.i:                                   ; preds = %2, %while.body.i.i
  %8 = phi ptr [ %12, %while.body.i.i ], [ %.pre, %2 ]
  %9 = phi i64 [ %13, %while.body.i.i ], [ %6, %2 ]
  %10 = shl nuw i64 %9, 1
  store i64 %10, ptr %memberidx.i.i, align 4
  %11 = shl i64 %9, 4
  %12 = tail call ptr @realloc(ptr %8, i64 %11)
  store ptr %12, ptr %1, align 8
  %13 = load i64, ptr %memberidx.i.i, align 4
  %14 = icmp slt i64 %13, %5
  br i1 %14, label %while.body.i.i, label %Array_TypeNode____sl__.exit.loopexit

Array_TypeNode____sl__.exit.loopexit:             ; preds = %while.body.i.i
  %.pre19 = load i64, ptr %memberidx.i10, align 4
  %.pre24 = add nsw i64 %.pre19, 1
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %2, %Array_TypeNode____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre24, %Array_TypeNode____sl__.exit.loopexit ], [ %5, %2 ]
  %15 = phi ptr [ %12, %Array_TypeNode____sl__.exit.loopexit ], [ %.pre, %2 ]
  %16 = phi i64 [ %.pre19, %Array_TypeNode____sl__.exit.loopexit ], [ %4, %2 ]
  store i64 %.pre-phi, ptr %memberidx.i10, align 4
  %17 = getelementptr inbounds ptr, ptr %15, i64 %16
  store ptr %3, ptr %17, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %memberidx2.i8 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %18 = load ptr, ptr %memberidx, align 8
  %19 = load i64, ptr %18, align 4
  %20 = icmp eq i64 %19, 3
  %21 = load ptr, ptr %memberidx2.i8, align 8
  %memberidx3.i918 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx3.i918, align 4
  %23 = icmp eq i64 %22, 0
  %24 = and i1 %20, %23
  br i1 %24, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %Array_TypeNode____sl__.exit
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.body

while.end:                                        ; preds = %Array_TypeNode____sl__.exit15, %Array_TypeNode____sl__.exit
  ret void

while.body:                                       ; preds = %while.body.lr.ph, %Array_TypeNode____sl__.exit15
  %25 = load i64, ptr %memberidx.i, align 4
  %26 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i, align 4
  %28 = icmp slt i64 %25, %27
  br i1 %28, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.body
  %29 = add nsw i64 %25, 1
  store i64 %29, ptr %memberidx.i, align 4
  %30 = load ptr, ptr %26, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %29
  %32 = load ptr, ptr %31, align 8
  store ptr %32, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.body, %if.entry.i
  %33 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %34 = load i64, ptr %memberidx.i10, align 4
  %35 = add i64 %34, 1
  %36 = load i64, ptr %memberidx.i.i, align 4
  %37 = icmp slt i64 %36, %35
  %.pre21 = load ptr, ptr %1, align 8
  br i1 %37, label %while.body.i.i14, label %Array_TypeNode____sl__.exit15

while.body.i.i14:                                 ; preds = %Parser_advance.exit, %while.body.i.i14
  %38 = phi ptr [ %42, %while.body.i.i14 ], [ %.pre21, %Parser_advance.exit ]
  %39 = phi i64 [ %43, %while.body.i.i14 ], [ %36, %Parser_advance.exit ]
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx.i.i, align 4
  %41 = shl i64 %39, 4
  %42 = tail call ptr @realloc(ptr %38, i64 %41)
  store ptr %42, ptr %1, align 8
  %43 = load i64, ptr %memberidx.i.i, align 4
  %44 = icmp slt i64 %43, %35
  br i1 %44, label %while.body.i.i14, label %Array_TypeNode____sl__.exit15.loopexit

Array_TypeNode____sl__.exit15.loopexit:           ; preds = %while.body.i.i14
  %.pre22 = load i64, ptr %memberidx.i10, align 4
  %.pre25 = add nsw i64 %.pre22, 1
  br label %Array_TypeNode____sl__.exit15

Array_TypeNode____sl__.exit15:                    ; preds = %Parser_advance.exit, %Array_TypeNode____sl__.exit15.loopexit
  %.pre-phi26 = phi i64 [ %.pre25, %Array_TypeNode____sl__.exit15.loopexit ], [ %35, %Parser_advance.exit ]
  %45 = phi ptr [ %42, %Array_TypeNode____sl__.exit15.loopexit ], [ %.pre21, %Parser_advance.exit ]
  %46 = phi i64 [ %.pre22, %Array_TypeNode____sl__.exit15.loopexit ], [ %34, %Parser_advance.exit ]
  store i64 %.pre-phi26, ptr %memberidx.i10, align 4
  %47 = getelementptr inbounds ptr, ptr %45, i64 %46
  store ptr %33, ptr %47, align 8
  %48 = load ptr, ptr %memberidx, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 3
  %51 = load ptr, ptr %memberidx2.i8, align 8
  %memberidx3.i9 = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx3.i9, align 4
  %53 = icmp eq i64 %52, 0
  %54 = and i1 %50, %53
  br i1 %54, label %while.body, label %while.end
}

define internal fastcc noalias ptr @Parser_parse_arg(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 24)
  %3 = tail call fastcc ptr @Parser_eat(ptr %0, i64 53)
  store ptr %3, ptr %2, align 8
  %memberidx1.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 1
  %memberidx2.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 2
  %memberidx.i49 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx1.i, i8 0, i64 16, i1 false)
  %4 = load ptr, ptr %memberidx.i49, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp ne i64 %5, 46
  %memberidx2.i50 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i50, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx3.i, align 4
  %9 = icmp eq i64 %8, 0
  %10 = and i1 %6, %9
  br i1 %10, label %ifend, label %common.ret

common.ret:                                       ; preds = %Parser_error.exit, %ifend13, %Parser_advance.exit, %1
  ret ptr %2

ifend:                                            ; preds = %1
  %11 = icmp eq i64 %5, 1
  br i1 %11, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx.i51 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %12 = load i64, ptr %memberidx.i51, align 4
  %13 = load ptr, ptr %0, align 8
  %memberidx2.i52 = getelementptr inbounds %Array_Token_, ptr %13, i64 0, i32 1
  %14 = load i64, ptr %memberidx2.i52, align 4
  %15 = icmp slt i64 %12, %14
  br i1 %15, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry2
  %16 = add nsw i64 %12, 1
  store i64 %16, ptr %memberidx.i51, align 4
  %17 = load ptr, ptr %13, align 8
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = load ptr, ptr %18, align 8
  store ptr %19, ptr %memberidx.i49, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry2, %if.entry.i
  %20 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %20, ptr %memberidx1.i, align 8
  %21 = load ptr, ptr %memberidx.i49, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp ne i64 %22, 46
  %24 = load ptr, ptr %memberidx2.i50, align 8
  %memberidx3.i59 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx3.i59, align 4
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %ifend4, label %common.ret

ifend4:                                           ; preds = %Parser_advance.exit, %ifend
  %28 = phi ptr [ %20, %Parser_advance.exit ], [ null, %ifend ]
  %29 = phi i64 [ %22, %Parser_advance.exit ], [ %5, %ifend ]
  %30 = icmp eq i64 %29, 38
  br i1 %30, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %ifend4
  %memberidx.i60 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %31 = load i64, ptr %memberidx.i60, align 4
  %32 = load ptr, ptr %0, align 8
  %memberidx2.i61 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i61, align 4
  %34 = icmp slt i64 %31, %33
  br i1 %34, label %if.entry.i63, label %Parser_advance.exit64

if.entry.i63:                                     ; preds = %if.entry11
  %35 = add nsw i64 %31, 1
  store i64 %35, ptr %memberidx.i60, align 4
  %36 = load ptr, ptr %32, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  store ptr %38, ptr %memberidx.i49, align 8
  br label %Parser_advance.exit64

Parser_advance.exit64:                            ; preds = %if.entry11, %if.entry.i63
  %39 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %39, ptr %memberidx2.i, align 8
  %phi.cmp = icmp eq ptr %39, null
  br label %ifend13

ifend13:                                          ; preds = %ifend4, %Parser_advance.exit64
  %40 = phi i1 [ true, %ifend4 ], [ %phi.cmp, %Parser_advance.exit64 ]
  %41 = icmp eq ptr %28, null
  %42 = and i1 %41, %40
  br i1 %42, label %if.entry17, label %common.ret

if.entry17:                                       ; preds = %ifend13
  %memberidx21 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %43 = load ptr, ptr %memberidx21, align 8
  %memberidx.i56 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i56, align 4
  %45 = trunc i64 %44 to i32
  %46 = add i32 %45, 1
  %47 = tail call ptr @malloc(i32 %46)
  %48 = load ptr, ptr %43, align 8
  %49 = load i64, ptr %memberidx.i56, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %48, i64 %49, i1 false)
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  store i8 0, ptr %50, align 1
  %51 = alloca ptr, align 8
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %51, ptr nonnull @75, ptr %47)
  %53 = load ptr, ptr %51, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i54 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %52, ptr %memberidx1.i54, align 4
  %memberidx2.i55 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx2.i55, align 4
  tail call void @free(ptr %47)
  %55 = load ptr, ptr %memberidx2.i50, align 8
  %56 = call ptr @malloc(i32 24)
  %57 = load ptr, ptr %memberidx.i49, align 8
  %memberidx2.i48 = getelementptr inbounds %Token, ptr %57, i64 0, i32 1
  %58 = load ptr, ptr %memberidx2.i48, align 8
  store i64 2, ptr %56, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 2
  store ptr %58, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 1
  store ptr %54, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i.i, align 4
  %60 = add i64 %59, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %61 = load i64, ptr %memberidx.i.i.i, align 4
  %62 = icmp slt i64 %61, %60
  %.pre = load ptr, ptr %55, align 8
  br i1 %62, label %while.body.i.i.i, label %Parser_error.exit

while.body.i.i.i:                                 ; preds = %if.entry17, %while.body.i.i.i
  %63 = phi ptr [ %67, %while.body.i.i.i ], [ %.pre, %if.entry17 ]
  %64 = phi i64 [ %68, %while.body.i.i.i ], [ %61, %if.entry17 ]
  %65 = shl nuw i64 %64, 1
  store i64 %65, ptr %memberidx.i.i.i, align 4
  %66 = shl i64 %64, 4
  %67 = call ptr @realloc(ptr %63, i64 %66)
  store ptr %67, ptr %55, align 8
  %68 = load i64, ptr %memberidx.i.i.i, align 4
  %69 = icmp slt i64 %68, %60
  br i1 %69, label %while.body.i.i.i, label %Parser_error.exit.loopexit

Parser_error.exit.loopexit:                       ; preds = %while.body.i.i.i
  %.pre67 = load i64, ptr %memberidx.i.i, align 4
  %.pre69 = add nsw i64 %.pre67, 1
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry17, %Parser_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre69, %Parser_error.exit.loopexit ], [ %60, %if.entry17 ]
  %70 = phi ptr [ %67, %Parser_error.exit.loopexit ], [ %.pre, %if.entry17 ]
  %71 = phi i64 [ %.pre67, %Parser_error.exit.loopexit ], [ %59, %if.entry17 ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %72 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %56, ptr %72, align 8
  %73 = load ptr, ptr %memberidx2.i50, align 8
  %memberidx24 = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx24, align 4
  %75 = add i64 %74, -1
  %76 = load ptr, ptr %73, align 8
  %77 = getelementptr inbounds ptr, ptr %76, i64 %75
  %78 = load ptr, ptr %77, align 8
  %memberidx25 = getelementptr inbounds %FloError, ptr %78, i64 0, i32 2
  %memberidx27 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %79 = load ptr, ptr %memberidx27, align 8
  store ptr %79, ptr %memberidx25, align 8
  br label %common.ret
}

define internal fastcc ptr @Parser_parse_object_type(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_eat(ptr %0, i64 53)
  %3 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  store ptr %4, ptr %3, align 8
  %memberidx.i.i = getelementptr inbounds %TypeNode, ptr %3, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i, align 4
  %memberidx.i28 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 2
  store ptr %2, ptr %memberidx.i28, align 8
  %memberidx1.i29 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 3
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i30 = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i30, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i5.i, align 4
  store ptr %5, ptr %memberidx1.i29, align 8
  %memberidx1 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 42
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx2.i26, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i, align 4
  %15 = load ptr, ptr %11, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %memberidx1, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %5)
  %18 = load ptr, ptr %memberidx1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx5, align 8
  %20 = load i64, ptr %18, align 4
  %21 = icmp eq i64 %20, 49
  br i1 %21, label %if.entry8, label %else9

ifend:                                            ; preds = %1, %ifend10
  ret ptr %3

if.entry8:                                        ; preds = %Parser_advance.exit
  store i64 41, ptr %18, align 4
  br label %ifend10

else9:                                            ; preds = %Parser_advance.exit
  %22 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 41)
  br label %ifend10

ifend10:                                          ; preds = %else9, %if.entry8
  %23 = tail call ptr @malloc(i32 32)
  %24 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 1
  %25 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %26 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 3
  %27 = load i64, ptr %memberidx3.i, align 4
  store i64 %24, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  store i64 %26, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 3
  store i64 %27, ptr %memberidx3.i.i, align 4
  store ptr %23, ptr %3, align 8
  br label %ifend
}

define internal fastcc ptr @Parser_parse_unary_expression_pre(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %else35.i.i [
    i64 23, label %ifend
    i64 24, label %Parser_is_unary_op.exit.fold.split
    i64 5, label %Parser_is_unary_op.exit.fold.split27
    i64 37, label %Parser_is_unary_op.exit.fold.split28
    i64 73, label %ifend.fold.split
    i64 34, label %if.entry.i.i29
    i64 31, label %if.entry4.i.i
    i64 32, label %if.entry9.i.i
    i64 35, label %if.entry14.i.i
    i64 53, label %if.entry19.i.i
    i64 29, label %if.entry24.i.i
    i64 72, label %if.entry29.i.i
    i64 25, label %if.entry34.i.i
  ]

Parser_is_unary_op.exit.fold.split:               ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split27:             ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split28:             ; preds = %1
  br label %ifend

common.ret42.sink.split:                          ; preds = %Parser_advance.exit, %Parser_advance.exit.i
  %.sink81 = phi ptr [ %167, %Parser_advance.exit.i ], [ %185, %Parser_advance.exit ]
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %.sink81, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i.i23 = getelementptr inbounds %ExpressionNode, ptr %.sink81, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i23, align 4
  br label %common.ret42

common.ret42:                                     ; preds = %while.body.i, %common.ret42.sink.split, %Parser_parse_lhs_expression_allow_call.exit
  %common.ret42.op = phi ptr [ %expression.0.i.lcssa, %Parser_parse_lhs_expression_allow_call.exit ], [ %.sink81, %common.ret42.sink.split ], [ %expression.0.i56, %while.body.i ]
  ret ptr %common.ret42.op

if.entry.i.i29:                                   ; preds = %1
  %5 = tail call fastcc ptr @Parser_parse_string(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry4.i.i:                                    ; preds = %1
  %6 = tail call ptr @malloc(i32 32)
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 31
  br i1 %9, label %if.entry.i.i56.i, label %else.i.i62.i

if.entry.i.i56.i:                                 ; preds = %if.entry4.i.i
  %memberidx.i.i.i54.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i.i.i54.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i55.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx2.i.i.i55.i, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i.i.i58.i, label %Parser_eat.exit.i66.i

if.entry.i.i.i58.i:                               ; preds = %if.entry.i.i56.i
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i.i.i54.i, align 4
  %15 = load ptr, ptr %11, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %memberidx, align 8
  br label %Parser_eat.exit.i66.i

else.i.i62.i:                                     ; preds = %if.entry4.i.i
  %18 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i60.i = getelementptr inbounds %Token, ptr %7, i64 0, i32 1
  %19 = load ptr, ptr %memberidx35.i.i60.i, align 8
  store i64 46, ptr %18, align 4
  %memberidx1.i75.i.i61.i = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  store ptr %19, ptr %memberidx1.i75.i.i61.i, align 8
  br label %Parser_eat.exit.i66.i

Parser_eat.exit.i66.i:                            ; preds = %else.i.i62.i, %if.entry.i.i.i58.i, %if.entry.i.i56.i
  %common.ret.op.i.i63.i = phi ptr [ %18, %else.i.i62.i ], [ %7, %if.entry.i.i.i58.i ], [ %7, %if.entry.i.i56.i ]
  %memberidx.i56.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i.i63.i, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i56.i.i, align 8
  store ptr %20, ptr %6, align 8
  %memberidx.i.i.i.i64.i = getelementptr inbounds %StatementNode, ptr %6, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i64.i, align 4
  %memberidx.i.i57.i.i = getelementptr inbounds %ExpressionNode, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i57.i.i, align 4
  %memberidx1.i.i65.i = getelementptr inbounds %IntExpressionNode, ptr %6, i64 0, i32 3
  store ptr %common.ret.op.i.i63.i, ptr %memberidx1.i.i65.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry9.i.i:                                    ; preds = %1
  %21 = tail call ptr @malloc(i32 32)
  %22 = load ptr, ptr %memberidx, align 8
  %23 = load i64, ptr %22, align 4
  %24 = icmp eq i64 %23, 32
  br i1 %24, label %if.entry.i62.i.i, label %else.i66.i.i

if.entry.i62.i.i:                                 ; preds = %if.entry9.i.i
  %memberidx.i.i60.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %25 = load i64, ptr %memberidx.i.i60.i.i, align 4
  %26 = load ptr, ptr %0, align 8
  %memberidx2.i.i61.i.i = getelementptr inbounds %Array_Token_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i.i61.i.i, align 4
  %28 = icmp slt i64 %25, %27
  br i1 %28, label %if.entry.i.i64.i.i, label %Parser_eat.exit69.i.i

if.entry.i.i64.i.i:                               ; preds = %if.entry.i62.i.i
  %29 = add nsw i64 %25, 1
  store i64 %29, ptr %memberidx.i.i60.i.i, align 4
  %30 = load ptr, ptr %26, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %29
  %32 = load ptr, ptr %31, align 8
  store ptr %32, ptr %memberidx, align 8
  br label %Parser_eat.exit69.i.i

else.i66.i.i:                                     ; preds = %if.entry9.i.i
  %33 = tail call ptr @malloc(i32 16)
  %memberidx35.i67.i.i = getelementptr inbounds %Token, ptr %22, i64 0, i32 1
  %34 = load ptr, ptr %memberidx35.i67.i.i, align 8
  store i64 46, ptr %33, align 4
  %memberidx1.i75.i68.i.i = getelementptr inbounds %Token, ptr %33, i64 0, i32 1
  store ptr %34, ptr %memberidx1.i75.i68.i.i, align 8
  br label %Parser_eat.exit69.i.i

Parser_eat.exit69.i.i:                            ; preds = %else.i66.i.i, %if.entry.i.i64.i.i, %if.entry.i62.i.i
  %common.ret.op.i59.i.i = phi ptr [ %33, %else.i66.i.i ], [ %22, %if.entry.i.i64.i.i ], [ %22, %if.entry.i62.i.i ]
  %memberidx.i70.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i59.i.i, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i70.i.i, align 8
  store ptr %35, ptr %21, align 8
  %memberidx.i.i.i71.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i71.i.i, align 4
  %memberidx.i.i72.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i72.i.i, align 4
  %memberidx1.i73.i.i = getelementptr inbounds %FloatExpressionNode, ptr %21, i64 0, i32 3
  store ptr %common.ret.op.i59.i.i, ptr %memberidx1.i73.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry14.i.i:                                   ; preds = %1
  %36 = tail call ptr @malloc(i32 32)
  %37 = load ptr, ptr %memberidx, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 35
  br i1 %39, label %if.entry.i78.i.i, label %else.i82.i.i

if.entry.i78.i.i:                                 ; preds = %if.entry14.i.i
  %memberidx.i.i76.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %40 = load i64, ptr %memberidx.i.i76.i.i, align 4
  %41 = load ptr, ptr %0, align 8
  %memberidx2.i.i77.i.i = getelementptr inbounds %Array_Token_, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx2.i.i77.i.i, align 4
  %43 = icmp slt i64 %40, %42
  br i1 %43, label %if.entry.i.i80.i.i, label %Parser_eat.exit85.i.i

if.entry.i.i80.i.i:                               ; preds = %if.entry.i78.i.i
  %44 = add nsw i64 %40, 1
  store i64 %44, ptr %memberidx.i.i76.i.i, align 4
  %45 = load ptr, ptr %41, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  %47 = load ptr, ptr %46, align 8
  store ptr %47, ptr %memberidx, align 8
  br label %Parser_eat.exit85.i.i

else.i82.i.i:                                     ; preds = %if.entry14.i.i
  %48 = tail call ptr @malloc(i32 16)
  %memberidx35.i83.i.i = getelementptr inbounds %Token, ptr %37, i64 0, i32 1
  %49 = load ptr, ptr %memberidx35.i83.i.i, align 8
  store i64 46, ptr %48, align 4
  %memberidx1.i75.i84.i.i = getelementptr inbounds %Token, ptr %48, i64 0, i32 1
  store ptr %49, ptr %memberidx1.i75.i84.i.i, align 8
  br label %Parser_eat.exit85.i.i

Parser_eat.exit85.i.i:                            ; preds = %else.i82.i.i, %if.entry.i.i80.i.i, %if.entry.i78.i.i
  %common.ret.op.i75.i.i = phi ptr [ %48, %else.i82.i.i ], [ %37, %if.entry.i.i80.i.i ], [ %37, %if.entry.i78.i.i ]
  %memberidx.i86.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i75.i.i, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i86.i.i, align 8
  store ptr %50, ptr %36, align 8
  %memberidx.i.i.i87.i.i = getelementptr inbounds %StatementNode, ptr %36, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i87.i.i, align 4
  %memberidx.i.i88.i.i = getelementptr inbounds %ExpressionNode, ptr %36, i64 0, i32 2
  store i64 3, ptr %memberidx.i.i88.i.i, align 4
  %memberidx1.i89.i.i = getelementptr inbounds %CharExpressionNode, ptr %36, i64 0, i32 3
  store ptr %common.ret.op.i75.i.i, ptr %memberidx1.i89.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry19.i.i:                                   ; preds = %1
  %51 = tail call ptr @malloc(i32 32)
  %52 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  %memberidx.i90.i.i = getelementptr inbounds %Token, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i90.i.i, align 8
  store ptr %53, ptr %51, align 8
  %memberidx.i.i.i91.i.i = getelementptr inbounds %StatementNode, ptr %51, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i91.i.i, align 4
  %memberidx.i.i92.i.i = getelementptr inbounds %ExpressionNode, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i92.i.i, align 4
  %memberidx1.i93.i.i = getelementptr inbounds %VarAccessExpressionNode, ptr %51, i64 0, i32 3
  store ptr %52, ptr %memberidx1.i93.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry24.i.i:                                   ; preds = %1
  %54 = tail call fastcc ptr @Parser_parse_array_expression(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry29.i.i:                                   ; preds = %1
  %55 = tail call fastcc ptr @Parser_parse_new_expression(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry34.i.i:                                   ; preds = %1
  %56 = tail call fastcc ptr @Parser_parse_tuple_expression_or_expression_par(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

else35.i.i:                                       ; preds = %1
  %57 = tail call ptr @malloc(i32 28)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %57, ptr noundef nonnull align 8 dereferenceable(28) @74, i64 28, i1 false)
  %58 = tail call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i.i67.i = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 28, ptr %memberidx1.i.i.i67.i, align 4
  %memberidx2.i.i94.i.i = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 28, ptr %memberidx2.i.i94.i.i, align 4
  %memberidx.i95.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i95.i.i, align 8
  %60 = tail call ptr @malloc(i32 24)
  %61 = load ptr, ptr %memberidx, align 8
  %memberidx2.i.i68.i = getelementptr inbounds %Token, ptr %61, i64 0, i32 1
  %62 = load ptr, ptr %memberidx2.i.i68.i, align 8
  store i64 2, ptr %60, align 4
  %memberidx1.i.i97.i.i = getelementptr inbounds %FloError, ptr %60, i64 0, i32 2
  store ptr %62, ptr %memberidx1.i.i97.i.i, align 8
  %memberidx2.i.i98.i.i = getelementptr inbounds %FloError, ptr %60, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i98.i.i, align 8
  %memberidx.i.i99.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %63 = load i64, ptr %memberidx.i.i99.i.i, align 4
  %64 = add i64 %63, 1
  %memberidx.i.i.i100.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %65 = load i64, ptr %memberidx.i.i.i100.i.i, align 4
  %66 = icmp slt i64 %65, %64
  %.pre = load ptr, ptr %59, align 8
  br i1 %66, label %while.body.i.i.i.i.i, label %Parser_error.exit.i.i

while.body.i.i.i.i.i:                             ; preds = %else35.i.i, %while.body.i.i.i.i.i
  %67 = phi ptr [ %71, %while.body.i.i.i.i.i ], [ %.pre, %else35.i.i ]
  %68 = phi i64 [ %72, %while.body.i.i.i.i.i ], [ %65, %else35.i.i ]
  %69 = shl nuw i64 %68, 1
  store i64 %69, ptr %memberidx.i.i.i100.i.i, align 4
  %70 = shl i64 %68, 4
  %71 = tail call ptr @realloc(ptr %67, i64 %70)
  store ptr %71, ptr %59, align 8
  %72 = load i64, ptr %memberidx.i.i.i100.i.i, align 4
  %73 = icmp slt i64 %72, %64
  br i1 %73, label %while.body.i.i.i.i.i, label %Parser_error.exit.i.i.loopexit

Parser_error.exit.i.i.loopexit:                   ; preds = %while.body.i.i.i.i.i
  %.pre68 = load i64, ptr %memberidx.i.i99.i.i, align 4
  %.pre70 = add nsw i64 %.pre68, 1
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else35.i.i, %Parser_error.exit.i.i.loopexit
  %.pre-phi = phi i64 [ %.pre70, %Parser_error.exit.i.i.loopexit ], [ %64, %else35.i.i ]
  %74 = phi ptr [ %71, %Parser_error.exit.i.i.loopexit ], [ %.pre, %else35.i.i ]
  %75 = phi i64 [ %.pre68, %Parser_error.exit.i.i.loopexit ], [ %63, %else35.i.i ]
  store i64 %.pre-phi, ptr %memberidx.i.i99.i.i, align 4
  %76 = getelementptr inbounds ptr, ptr %74, i64 %75
  store ptr %60, ptr %76, align 8
  %77 = tail call ptr @malloc(i32 24)
  %78 = load ptr, ptr %memberidx, align 8
  %memberidx38.i.i = getelementptr inbounds %Token, ptr %78, i64 0, i32 1
  %79 = load ptr, ptr %memberidx38.i.i, align 8
  store ptr %79, ptr %77, align 8
  %memberidx.i.i101.i.i = getelementptr inbounds %StatementNode, ptr %77, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i101.i.i, align 4
  %memberidx.i102.i.i = getelementptr inbounds %ExpressionNode, ptr %77, i64 0, i32 2
  store i64 8, ptr %memberidx.i102.i.i, align 4
  br label %Parser_parse_atom.exit.i

Parser_parse_atom.exit.i:                         ; preds = %Parser_error.exit.i.i, %if.entry34.i.i, %if.entry29.i.i, %if.entry24.i.i, %if.entry19.i.i, %Parser_eat.exit85.i.i, %Parser_eat.exit69.i.i, %Parser_eat.exit.i66.i, %if.entry.i.i29
  %common.ret.op.i.i = phi ptr [ %5, %if.entry.i.i29 ], [ %77, %Parser_error.exit.i.i ], [ %6, %Parser_eat.exit.i66.i ], [ %21, %Parser_eat.exit69.i.i ], [ %36, %Parser_eat.exit85.i.i ], [ %51, %if.entry19.i.i ], [ %54, %if.entry24.i.i ], [ %55, %if.entry29.i.i ], [ %56, %if.entry34.i.i ]
  %memberidx2.i.i31 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %80 = load ptr, ptr %memberidx, align 8
  %81 = load i64, ptr %80, align 4
  %82 = icmp ne i64 %81, 46
  %83 = load ptr, ptr %memberidx2.i.i31, align 8
  %memberidx3.i.i3255 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 1
  %84 = load i64, ptr %memberidx3.i.i3255, align 4
  %85 = icmp eq i64 %84, 0
  %86 = and i1 %82, %85
  br i1 %86, label %while.body.i.lr.ph, label %Parser_parse_lhs_expression_allow_call.exit

while.body.i.lr.ph:                               ; preds = %Parser_parse_atom.exit.i
  %memberidx.i.i.i.i35 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.lr.ph, %ifend.i
  %87 = phi i64 [ %81, %while.body.i.lr.ph ], [ %104, %ifend.i ]
  %88 = phi ptr [ %80, %while.body.i.lr.ph ], [ %103, %ifend.i ]
  %expression.0.i56 = phi ptr [ %common.ret.op.i.i, %while.body.i.lr.ph ], [ %expression.1.i, %ifend.i ]
  switch i64 %87, label %common.ret42 [
    i64 25, label %if.entry.i33
    i64 29, label %if.entry.i.i25.i
    i64 50, label %if.entry.i.i.i
    i64 23, label %ifend.i20
    i64 24, label %if.entry3.i
  ]

if.entry.i33:                                     ; preds = %while.body.i
  %89 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 25)
  %90 = tail call ptr @malloc(i32 40)
  %91 = load ptr, ptr %memberidx, align 8
  %memberidx1.i41.i = getelementptr inbounds %Token, ptr %91, i64 0, i32 1
  %92 = load ptr, ptr %memberidx1.i41.i, align 8
  store ptr %92, ptr %90, align 8
  %memberidx.i.i.i.i42.i = getelementptr inbounds %StatementNode, ptr %90, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i42.i, align 4
  %memberidx.i.i.i43.i = getelementptr inbounds %ExpressionNode, ptr %90, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i.i43.i, align 4
  %memberidx.i.i44.i = getelementptr inbounds %CallExpressionNode, ptr %90, i64 0, i32 3
  store ptr %expression.0.i56, ptr %memberidx.i.i44.i, align 8
  %memberidx1.i.i45.i = getelementptr inbounds %CallExpressionNode, ptr %90, i64 0, i32 4
  %93 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %93, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  %memberidx1.i.i.i46.i = getelementptr inbounds %Array_ExpressionNode_, ptr %93, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i46.i, align 4
  %94 = tail call ptr @malloc(i32 64)
  store ptr %94, ptr %93, align 8
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  store ptr %93, ptr %memberidx1.i.i45.i, align 8
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %93, i64 26)
  %95 = load ptr, ptr %expression.0.i56, align 8
  %96 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx5.i.i = getelementptr inbounds %Token, ptr %96, i64 0, i32 1
  %97 = load ptr, ptr %memberidx5.i.i, align 8
  %98 = tail call ptr @malloc(i32 32)
  %99 = load i64, ptr %95, align 4
  %memberidx1.i12.i.i = getelementptr inbounds %FloRange, ptr %97, i64 0, i32 1
  %100 = load i64, ptr %memberidx1.i12.i.i, align 4
  %memberidx2.i.i49.i = getelementptr inbounds %FloRange, ptr %95, i64 0, i32 2
  %101 = load i64, ptr %memberidx2.i.i49.i, align 4
  %memberidx3.i13.i.i = getelementptr inbounds %FloRange, ptr %97, i64 0, i32 3
  %102 = load i64, ptr %memberidx3.i13.i.i, align 4
  store i64 %99, ptr %98, align 4
  %memberidx1.i.i14.i.i = getelementptr inbounds %FloRange, ptr %98, i64 0, i32 1
  store i64 %100, ptr %memberidx1.i.i14.i.i, align 4
  %memberidx2.i.i.i50.i = getelementptr inbounds %FloRange, ptr %98, i64 0, i32 2
  store i64 %101, ptr %memberidx2.i.i.i50.i, align 4
  %memberidx3.i.i.i51.i = getelementptr inbounds %FloRange, ptr %98, i64 0, i32 3
  store i64 %102, ptr %memberidx3.i.i.i51.i, align 4
  store ptr %98, ptr %90, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %Parser_parse_member_expression.exit.i, %Parser_parse_index_expression.exit.i, %if.entry.i33
  %expression.1.i = phi ptr [ %90, %if.entry.i33 ], [ %118, %Parser_parse_index_expression.exit.i ], [ %150, %Parser_parse_member_expression.exit.i ]
  %103 = load ptr, ptr %memberidx, align 8
  %104 = load i64, ptr %103, align 4
  %105 = icmp ne i64 %104, 46
  %106 = load ptr, ptr %memberidx2.i.i31, align 8
  %memberidx3.i.i32 = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 1
  %107 = load i64, ptr %memberidx3.i.i32, align 4
  %108 = icmp eq i64 %107, 0
  %109 = and i1 %105, %108
  br i1 %109, label %while.body.i, label %Parser_parse_lhs_expression_allow_call.exit

if.entry.i.i25.i:                                 ; preds = %while.body.i
  %110 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %111 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i24.i = getelementptr inbounds %Array_Token_, ptr %111, i64 0, i32 1
  %112 = load i64, ptr %memberidx2.i.i.i24.i, align 4
  %113 = icmp slt i64 %110, %112
  br i1 %113, label %if.entry.i.i.i27.i, label %Parser_eat.exit.i.i

if.entry.i.i.i27.i:                               ; preds = %if.entry.i.i25.i
  %114 = add nsw i64 %110, 1
  store i64 %114, ptr %memberidx.i.i.i.i35, align 4
  %115 = load ptr, ptr %111, align 8
  %116 = getelementptr inbounds ptr, ptr %115, i64 %114
  %117 = load ptr, ptr %116, align 8
  store ptr %117, ptr %memberidx, align 8
  br label %Parser_eat.exit.i.i

Parser_eat.exit.i.i:                              ; preds = %if.entry.i.i.i27.i, %if.entry.i.i25.i
  %118 = tail call ptr @malloc(i32 40)
  %119 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %120 = load ptr, ptr %memberidx, align 8
  %memberidx1.i34.i = getelementptr inbounds %Token, ptr %120, i64 0, i32 1
  %121 = load ptr, ptr %memberidx1.i34.i, align 8
  %memberidx.i10.i.i = getelementptr inbounds %ExpressionIndexNode, ptr %118, i64 0, i32 3
  store ptr %expression.0.i56, ptr %memberidx.i10.i.i, align 8
  %memberidx1.i.i35.i = getelementptr inbounds %ExpressionIndexNode, ptr %118, i64 0, i32 4
  store ptr %119, ptr %memberidx1.i.i35.i, align 8
  store ptr %121, ptr %118, align 8
  %memberidx.i.i.i.i36.i = getelementptr inbounds %StatementNode, ptr %118, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i36.i, align 4
  %memberidx.i.i11.i.i = getelementptr inbounds %ExpressionNode, ptr %118, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i11.i.i, align 4
  %122 = load ptr, ptr %expression.0.i56, align 8
  %123 = load i64, ptr %120, align 4
  %124 = icmp eq i64 %123, 30
  br i1 %124, label %if.entry.i16.i.i, label %else.i20.i.i

if.entry.i16.i.i:                                 ; preds = %Parser_eat.exit.i.i
  %125 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %126 = load ptr, ptr %0, align 8
  %memberidx2.i.i15.i.i = getelementptr inbounds %Array_Token_, ptr %126, i64 0, i32 1
  %127 = load i64, ptr %memberidx2.i.i15.i.i, align 4
  %128 = icmp slt i64 %125, %127
  br i1 %128, label %if.entry.i.i18.i.i, label %Parser_parse_index_expression.exit.i

if.entry.i.i18.i.i:                               ; preds = %if.entry.i16.i.i
  %129 = add nsw i64 %125, 1
  store i64 %129, ptr %memberidx.i.i.i.i35, align 4
  %130 = load ptr, ptr %126, align 8
  %131 = getelementptr inbounds ptr, ptr %130, i64 %129
  %132 = load ptr, ptr %131, align 8
  store ptr %132, ptr %memberidx, align 8
  br label %Parser_parse_index_expression.exit.i

else.i20.i.i:                                     ; preds = %Parser_eat.exit.i.i
  %133 = tail call ptr @malloc(i32 16)
  %134 = load ptr, ptr %memberidx1.i34.i, align 8
  store i64 46, ptr %133, align 4
  %memberidx1.i75.i22.i.i = getelementptr inbounds %Token, ptr %133, i64 0, i32 1
  store ptr %134, ptr %memberidx1.i75.i22.i.i, align 8
  br label %Parser_parse_index_expression.exit.i

Parser_parse_index_expression.exit.i:             ; preds = %else.i20.i.i, %if.entry.i.i18.i.i, %if.entry.i16.i.i
  %common.ret.op.i13.i.i = phi ptr [ %133, %else.i20.i.i ], [ %120, %if.entry.i.i18.i.i ], [ %120, %if.entry.i16.i.i ]
  %memberidx4.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i13.i.i, i64 0, i32 1
  %135 = load ptr, ptr %memberidx4.i.i, align 8
  %136 = tail call ptr @malloc(i32 32)
  %137 = load i64, ptr %122, align 4
  %memberidx1.i24.i.i = getelementptr inbounds %FloRange, ptr %135, i64 0, i32 1
  %138 = load i64, ptr %memberidx1.i24.i.i, align 4
  %memberidx2.i.i37.i = getelementptr inbounds %FloRange, ptr %122, i64 0, i32 2
  %139 = load i64, ptr %memberidx2.i.i37.i, align 4
  %memberidx3.i.i38.i = getelementptr inbounds %FloRange, ptr %135, i64 0, i32 3
  %140 = load i64, ptr %memberidx3.i.i38.i, align 4
  store i64 %137, ptr %136, align 4
  %memberidx1.i.i.i39.i = getelementptr inbounds %FloRange, ptr %136, i64 0, i32 1
  store i64 %138, ptr %memberidx1.i.i.i39.i, align 4
  %memberidx2.i.i25.i.i = getelementptr inbounds %FloRange, ptr %136, i64 0, i32 2
  store i64 %139, ptr %memberidx2.i.i25.i.i, align 4
  %memberidx3.i.i26.i.i = getelementptr inbounds %FloRange, ptr %136, i64 0, i32 3
  store i64 %140, ptr %memberidx3.i.i26.i.i, align 4
  store ptr %136, ptr %118, align 8
  br label %ifend.i

if.entry.i.i.i:                                   ; preds = %while.body.i
  %141 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %142 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %142, i64 0, i32 1
  %143 = load i64, ptr %memberidx2.i.i.i.i, align 4
  %144 = icmp slt i64 %141, %143
  br i1 %144, label %if.entry.i.i.i.i, label %Parser_parse_member_expression.exit.i

if.entry.i.i.i.i:                                 ; preds = %if.entry.i.i.i
  %145 = add nsw i64 %141, 1
  store i64 %145, ptr %memberidx.i.i.i.i35, align 4
  %146 = load ptr, ptr %142, align 8
  %147 = getelementptr inbounds ptr, ptr %146, i64 %145
  %148 = load ptr, ptr %147, align 8
  store ptr %148, ptr %memberidx, align 8
  br label %Parser_parse_member_expression.exit.i

Parser_parse_member_expression.exit.i:            ; preds = %if.entry.i.i.i.i, %if.entry.i.i.i
  %149 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  %150 = tail call ptr @malloc(i32 40)
  %151 = load ptr, ptr %expression.0.i56, align 8
  %memberidx1.i.i36 = getelementptr inbounds %Token, ptr %149, i64 0, i32 1
  %152 = load ptr, ptr %memberidx1.i.i36, align 8
  %153 = tail call ptr @malloc(i32 32)
  %154 = load i64, ptr %151, align 4
  %memberidx1.i.i.i37 = getelementptr inbounds %FloRange, ptr %152, i64 0, i32 1
  %155 = load i64, ptr %memberidx1.i.i.i37, align 4
  %memberidx2.i.i.i38 = getelementptr inbounds %FloRange, ptr %151, i64 0, i32 2
  %156 = load i64, ptr %memberidx2.i.i.i38, align 4
  %memberidx3.i.i.i39 = getelementptr inbounds %FloRange, ptr %152, i64 0, i32 3
  %157 = load i64, ptr %memberidx3.i.i.i39, align 4
  store i64 %154, ptr %153, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %153, i64 0, i32 1
  store i64 %155, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i5.i.i = getelementptr inbounds %FloRange, ptr %153, i64 0, i32 2
  store i64 %156, ptr %memberidx2.i.i5.i.i, align 4
  %memberidx3.i.i6.i.i = getelementptr inbounds %FloRange, ptr %153, i64 0, i32 3
  store i64 %157, ptr %memberidx3.i.i6.i.i, align 4
  store ptr %153, ptr %150, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %StatementNode, ptr %150, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i.i, align 4
  %memberidx.i.i7.i.i = getelementptr inbounds %ExpressionNode, ptr %150, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i7.i.i, align 4
  %memberidx.i8.i.i = getelementptr inbounds %MemberExpressionNode, ptr %150, i64 0, i32 3
  store ptr %expression.0.i56, ptr %memberidx.i8.i.i, align 8
  %memberidx1.i9.i.i = getelementptr inbounds %MemberExpressionNode, ptr %150, i64 0, i32 4
  store ptr %149, ptr %memberidx1.i9.i.i, align 8
  br label %ifend.i

Parser_parse_lhs_expression_allow_call.exit:      ; preds = %ifend.i, %Parser_parse_atom.exit.i
  %expression.0.i.lcssa = phi ptr [ %common.ret.op.i.i, %Parser_parse_atom.exit.i ], [ %expression.1.i, %ifend.i ]
  %.lcssa46 = phi ptr [ %80, %Parser_parse_atom.exit.i ], [ %103, %ifend.i ]
  %.lcssa = phi i64 [ %81, %Parser_parse_atom.exit.i ], [ %104, %ifend.i ]
  switch i64 %.lcssa, label %common.ret42 [
    i64 23, label %ifend.i20
    i64 24, label %if.entry3.i
  ]

ifend.i20:                                        ; preds = %while.body.i, %Parser_parse_lhs_expression_allow_call.exit, %if.entry3.i
  %expression.0.i54 = phi ptr [ %expression.0.i53, %if.entry3.i ], [ %expression.0.i.lcssa, %Parser_parse_lhs_expression_allow_call.exit ], [ %expression.0.i56, %while.body.i ]
  %158 = phi ptr [ %175, %if.entry3.i ], [ %.lcssa46, %Parser_parse_lhs_expression_allow_call.exit ], [ %88, %while.body.i ]
  %op.0.i = phi i64 [ 5, %if.entry3.i ], [ 4, %Parser_parse_lhs_expression_allow_call.exit ], [ 4, %while.body.i ]
  %memberidx.i.i18 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %159 = load i64, ptr %memberidx.i.i18, align 4
  %160 = load ptr, ptr %0, align 8
  %memberidx2.i.i19 = getelementptr inbounds %Array_Token_, ptr %160, i64 0, i32 1
  %161 = load i64, ptr %memberidx2.i.i19, align 4
  %162 = icmp slt i64 %159, %161
  br i1 %162, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %ifend.i20
  %163 = add nsw i64 %159, 1
  store i64 %163, ptr %memberidx.i.i18, align 4
  %164 = load ptr, ptr %160, align 8
  %165 = getelementptr inbounds ptr, ptr %164, i64 %163
  %166 = load ptr, ptr %165, align 8
  store ptr %166, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %ifend.i20
  %167 = tail call ptr @malloc(i32 40)
  %168 = load ptr, ptr %expression.0.i54, align 8
  %memberidx7.i = getelementptr inbounds %Token, ptr %158, i64 0, i32 1
  %169 = load ptr, ptr %memberidx7.i, align 8
  %170 = tail call ptr @malloc(i32 32)
  %171 = load i64, ptr %168, align 4
  %memberidx1.i.i22 = getelementptr inbounds %FloRange, ptr %169, i64 0, i32 1
  %172 = load i64, ptr %memberidx1.i.i22, align 4
  %memberidx2.i14.i = getelementptr inbounds %FloRange, ptr %168, i64 0, i32 2
  %173 = load i64, ptr %memberidx2.i14.i, align 4
  %memberidx3.i15.i = getelementptr inbounds %FloRange, ptr %169, i64 0, i32 3
  %174 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %171, ptr %170, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %170, i64 0, i32 1
  store i64 %172, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %170, i64 0, i32 2
  store i64 %173, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %170, i64 0, i32 3
  store i64 %174, ptr %memberidx3.i.i.i, align 4
  %memberidx.i16.i = getelementptr inbounds %UnaryExpressionNode, ptr %167, i64 0, i32 3
  store i64 %op.0.i, ptr %memberidx.i16.i, align 4
  %memberidx1.i17.i = getelementptr inbounds %UnaryExpressionNode, ptr %167, i64 0, i32 4
  store ptr %expression.0.i54, ptr %memberidx1.i17.i, align 8
  store ptr %170, ptr %167, align 8
  br label %common.ret42.sink.split

if.entry3.i:                                      ; preds = %while.body.i, %Parser_parse_lhs_expression_allow_call.exit
  %expression.0.i53 = phi ptr [ %expression.0.i.lcssa, %Parser_parse_lhs_expression_allow_call.exit ], [ %expression.0.i56, %while.body.i ]
  %175 = phi ptr [ %.lcssa46, %Parser_parse_lhs_expression_allow_call.exit ], [ %88, %while.body.i ]
  br label %ifend.i20

ifend.fold.split:                                 ; preds = %1
  br label %ifend

ifend:                                            ; preds = %1, %ifend.fold.split, %Parser_is_unary_op.exit.fold.split28, %Parser_is_unary_op.exit.fold.split27, %Parser_is_unary_op.exit.fold.split
  %common.ret.op.i41 = phi i64 [ 8, %Parser_is_unary_op.exit.fold.split28 ], [ 6, %Parser_is_unary_op.exit.fold.split27 ], [ 3, %Parser_is_unary_op.exit.fold.split ], [ 2, %1 ], [ 1, %ifend.fold.split ]
  %memberidx.i9 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %176 = load i64, ptr %memberidx.i9, align 4
  %177 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %177, i64 0, i32 1
  %178 = load i64, ptr %memberidx2.i, align 4
  %179 = icmp slt i64 %176, %178
  br i1 %179, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %ifend
  %180 = add nsw i64 %176, 1
  store i64 %180, ptr %memberidx.i9, align 4
  %181 = load ptr, ptr %177, align 8
  %182 = getelementptr inbounds ptr, ptr %181, i64 %180
  %183 = load ptr, ptr %182, align 8
  store ptr %183, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend, %if.entry.i
  %184 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %185 = tail call ptr @malloc(i32 40)
  %186 = load ptr, ptr %184, align 8
  %187 = tail call ptr @malloc(i32 32)
  %188 = load i64, ptr %3, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %186, i64 0, i32 1
  %189 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i11 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %190 = load i64, ptr %memberidx2.i11, align 4
  %memberidx3.i12 = getelementptr inbounds %FloRange, ptr %186, i64 0, i32 3
  %191 = load i64, ptr %memberidx3.i12, align 4
  store i64 %188, ptr %187, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 1
  store i64 %189, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 2
  store i64 %190, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 3
  store i64 %191, ptr %memberidx3.i.i, align 4
  %memberidx.i13 = getelementptr inbounds %UnaryExpressionNode, ptr %185, i64 0, i32 3
  store i64 %common.ret.op.i41, ptr %memberidx.i13, align 4
  %memberidx1.i14 = getelementptr inbounds %UnaryExpressionNode, ptr %185, i64 0, i32 4
  store ptr %184, ptr %memberidx1.i14, align 8
  store ptr %187, ptr %185, align 8
  br label %common.ret42.sink.split
}

define internal fastcc ptr @Parser_eat(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %if.entry, label %else

common.ret:                                       ; preds = %if.entry.i, %if.entry, %ifend4
  %common.ret.op = phi ptr [ %34, %ifend4 ], [ %3, %if.entry ], [ %3, %if.entry.i ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %7, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  store ptr %13, ptr %memberidx, align 8
  br label %common.ret

else:                                             ; preds = %2
  switch i64 %1, label %ifend4 [
    i64 53, label %if.entry2
    i64 38, label %if.entry5
    i64 1, label %if.entry8
    i64 25, label %if.entry11
    i64 26, label %if.entry14
    i64 27, label %if.entry17
    i64 28, label %if.entry20
    i64 3, label %if.entry23
    i64 42, label %if.entry26
    i64 41, label %if.entry29
    i64 45, label %if.entry32
  ]

if.entry2:                                        ; preds = %else
  %14 = tail call ptr @malloc(i32 22)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %14, ptr noundef nonnull align 8 dereferenceable(22) @61, i64 22, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i63 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 22, ptr %memberidx1.i.i63, align 4
  %memberidx2.i.i64 = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 22, ptr %memberidx2.i.i64, align 4
  %memberidx.i65 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i65, align 8
  %17 = tail call ptr @malloc(i32 24)
  %18 = load ptr, ptr %memberidx, align 8
  %memberidx2.i67 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx2.i67, align 8
  store i64 2, ptr %17, align 4
  %memberidx1.i.i68 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 2
  store ptr %19, ptr %memberidx1.i.i68, align 8
  %memberidx2.i.i69 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 1
  store ptr %15, ptr %memberidx2.i.i69, align 8
  %memberidx.i.i70 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i.i70, align 4
  %21 = add i64 %20, 1
  %memberidx.i.i.i71 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i.i.i71, align 4
  %23 = icmp slt i64 %22, %21
  %.pre227 = load ptr, ptr %16, align 8
  br i1 %23, label %while.body.i.i.i73, label %Parser_error.exit74

while.body.i.i.i73:                               ; preds = %if.entry2, %while.body.i.i.i73
  %24 = phi ptr [ %28, %while.body.i.i.i73 ], [ %.pre227, %if.entry2 ]
  %25 = phi i64 [ %29, %while.body.i.i.i73 ], [ %22, %if.entry2 ]
  %26 = shl nuw i64 %25, 1
  store i64 %26, ptr %memberidx.i.i.i71, align 4
  %27 = shl i64 %25, 4
  %28 = tail call ptr @realloc(ptr %24, i64 %27)
  store ptr %28, ptr %16, align 8
  %29 = load i64, ptr %memberidx.i.i.i71, align 4
  %30 = icmp slt i64 %29, %21
  br i1 %30, label %while.body.i.i.i73, label %Parser_error.exit74.loopexit

Parser_error.exit74.loopexit:                     ; preds = %while.body.i.i.i73
  %.pre228 = load i64, ptr %memberidx.i.i70, align 4
  %.pre230 = add nsw i64 %.pre228, 1
  br label %Parser_error.exit74

Parser_error.exit74:                              ; preds = %if.entry2, %Parser_error.exit74.loopexit
  %.pre-phi = phi i64 [ %.pre230, %Parser_error.exit74.loopexit ], [ %21, %if.entry2 ]
  %31 = phi ptr [ %28, %Parser_error.exit74.loopexit ], [ %.pre227, %if.entry2 ]
  %32 = phi i64 [ %.pre228, %Parser_error.exit74.loopexit ], [ %20, %if.entry2 ]
  store i64 %.pre-phi, ptr %memberidx.i.i70, align 4
  %33 = getelementptr inbounds ptr, ptr %31, i64 %32
  store ptr %17, ptr %33, align 8
  br label %ifend4

ifend4:                                           ; preds = %else, %Parser_error.exit, %Parser_error.exit183, %Parser_error.exit171, %Parser_error.exit159, %Parser_error.exit147, %Parser_error.exit135, %Parser_error.exit123, %Parser_error.exit111, %Parser_error.exit99, %Parser_error.exit87, %Parser_error.exit74
  %34 = tail call ptr @malloc(i32 16)
  %memberidx35 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %35 = load ptr, ptr %memberidx35, align 8
  store i64 46, ptr %34, align 4
  %memberidx1.i75 = getelementptr inbounds %Token, ptr %34, i64 0, i32 1
  store ptr %35, ptr %memberidx1.i75, align 8
  br label %common.ret

if.entry5:                                        ; preds = %else
  %36 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %36, ptr noundef nonnull align 8 dereferenceable(12) @62, i64 12, i1 false)
  %37 = tail call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  %memberidx1.i.i76 = getelementptr inbounds %String, ptr %37, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i76, align 4
  %memberidx2.i.i77 = getelementptr inbounds %String, ptr %37, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i77, align 4
  %memberidx.i78 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i78, align 8
  %39 = tail call ptr @malloc(i32 24)
  %40 = load ptr, ptr %memberidx, align 8
  %memberidx2.i80 = getelementptr inbounds %Token, ptr %40, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2.i80, align 8
  store i64 2, ptr %39, align 4
  %memberidx1.i.i81 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i81, align 8
  %memberidx2.i.i82 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 1
  store ptr %37, ptr %memberidx2.i.i82, align 8
  %memberidx.i.i83 = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i.i83, align 4
  %43 = add i64 %42, 1
  %memberidx.i.i.i84 = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i.i.i84, align 4
  %45 = icmp slt i64 %44, %43
  %.pre224 = load ptr, ptr %38, align 8
  br i1 %45, label %while.body.i.i.i86, label %Parser_error.exit87

while.body.i.i.i86:                               ; preds = %if.entry5, %while.body.i.i.i86
  %46 = phi ptr [ %50, %while.body.i.i.i86 ], [ %.pre224, %if.entry5 ]
  %47 = phi i64 [ %51, %while.body.i.i.i86 ], [ %44, %if.entry5 ]
  %48 = shl nuw i64 %47, 1
  store i64 %48, ptr %memberidx.i.i.i84, align 4
  %49 = shl i64 %47, 4
  %50 = tail call ptr @realloc(ptr %46, i64 %49)
  store ptr %50, ptr %38, align 8
  %51 = load i64, ptr %memberidx.i.i.i84, align 4
  %52 = icmp slt i64 %51, %43
  br i1 %52, label %while.body.i.i.i86, label %Parser_error.exit87.loopexit

Parser_error.exit87.loopexit:                     ; preds = %while.body.i.i.i86
  %.pre225 = load i64, ptr %memberidx.i.i83, align 4
  %.pre231 = add nsw i64 %.pre225, 1
  br label %Parser_error.exit87

Parser_error.exit87:                              ; preds = %if.entry5, %Parser_error.exit87.loopexit
  %.pre-phi232 = phi i64 [ %.pre231, %Parser_error.exit87.loopexit ], [ %43, %if.entry5 ]
  %53 = phi ptr [ %50, %Parser_error.exit87.loopexit ], [ %.pre224, %if.entry5 ]
  %54 = phi i64 [ %.pre225, %Parser_error.exit87.loopexit ], [ %42, %if.entry5 ]
  store i64 %.pre-phi232, ptr %memberidx.i.i83, align 4
  %55 = getelementptr inbounds ptr, ptr %53, i64 %54
  store ptr %39, ptr %55, align 8
  br label %ifend4

if.entry8:                                        ; preds = %else
  %56 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %56, ptr noundef nonnull align 8 dereferenceable(12) @63, i64 12, i1 false)
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  %memberidx1.i.i88 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i88, align 4
  %memberidx2.i.i89 = getelementptr inbounds %String, ptr %57, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i89, align 4
  %memberidx.i90 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %58 = load ptr, ptr %memberidx.i90, align 8
  %59 = tail call ptr @malloc(i32 24)
  %60 = load ptr, ptr %memberidx, align 8
  %memberidx2.i92 = getelementptr inbounds %Token, ptr %60, i64 0, i32 1
  %61 = load ptr, ptr %memberidx2.i92, align 8
  store i64 2, ptr %59, align 4
  %memberidx1.i.i93 = getelementptr inbounds %FloError, ptr %59, i64 0, i32 2
  store ptr %61, ptr %memberidx1.i.i93, align 8
  %memberidx2.i.i94 = getelementptr inbounds %FloError, ptr %59, i64 0, i32 1
  store ptr %57, ptr %memberidx2.i.i94, align 8
  %memberidx.i.i95 = getelementptr inbounds %Array_FloError_, ptr %58, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i.i95, align 4
  %63 = add i64 %62, 1
  %memberidx.i.i.i96 = getelementptr inbounds %Array_FloError_, ptr %58, i64 0, i32 2
  %64 = load i64, ptr %memberidx.i.i.i96, align 4
  %65 = icmp slt i64 %64, %63
  %.pre221 = load ptr, ptr %58, align 8
  br i1 %65, label %while.body.i.i.i98, label %Parser_error.exit99

while.body.i.i.i98:                               ; preds = %if.entry8, %while.body.i.i.i98
  %66 = phi ptr [ %70, %while.body.i.i.i98 ], [ %.pre221, %if.entry8 ]
  %67 = phi i64 [ %71, %while.body.i.i.i98 ], [ %64, %if.entry8 ]
  %68 = shl nuw i64 %67, 1
  store i64 %68, ptr %memberidx.i.i.i96, align 4
  %69 = shl i64 %67, 4
  %70 = tail call ptr @realloc(ptr %66, i64 %69)
  store ptr %70, ptr %58, align 8
  %71 = load i64, ptr %memberidx.i.i.i96, align 4
  %72 = icmp slt i64 %71, %63
  br i1 %72, label %while.body.i.i.i98, label %Parser_error.exit99.loopexit

Parser_error.exit99.loopexit:                     ; preds = %while.body.i.i.i98
  %.pre222 = load i64, ptr %memberidx.i.i95, align 4
  %.pre233 = add nsw i64 %.pre222, 1
  br label %Parser_error.exit99

Parser_error.exit99:                              ; preds = %if.entry8, %Parser_error.exit99.loopexit
  %.pre-phi234 = phi i64 [ %.pre233, %Parser_error.exit99.loopexit ], [ %63, %if.entry8 ]
  %73 = phi ptr [ %70, %Parser_error.exit99.loopexit ], [ %.pre221, %if.entry8 ]
  %74 = phi i64 [ %.pre222, %Parser_error.exit99.loopexit ], [ %62, %if.entry8 ]
  store i64 %.pre-phi234, ptr %memberidx.i.i95, align 4
  %75 = getelementptr inbounds ptr, ptr %73, i64 %74
  store ptr %59, ptr %75, align 8
  br label %ifend4

if.entry11:                                       ; preds = %else
  %76 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %76, ptr noundef nonnull align 8 dereferenceable(12) @64, i64 12, i1 false)
  %77 = tail call ptr @malloc(i32 24)
  store ptr %76, ptr %77, align 8
  %memberidx1.i.i100 = getelementptr inbounds %String, ptr %77, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i100, align 4
  %memberidx2.i.i101 = getelementptr inbounds %String, ptr %77, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i101, align 4
  %memberidx.i102 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i102, align 8
  %79 = tail call ptr @malloc(i32 24)
  %80 = load ptr, ptr %memberidx, align 8
  %memberidx2.i104 = getelementptr inbounds %Token, ptr %80, i64 0, i32 1
  %81 = load ptr, ptr %memberidx2.i104, align 8
  store i64 2, ptr %79, align 4
  %memberidx1.i.i105 = getelementptr inbounds %FloError, ptr %79, i64 0, i32 2
  store ptr %81, ptr %memberidx1.i.i105, align 8
  %memberidx2.i.i106 = getelementptr inbounds %FloError, ptr %79, i64 0, i32 1
  store ptr %77, ptr %memberidx2.i.i106, align 8
  %memberidx.i.i107 = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 1
  %82 = load i64, ptr %memberidx.i.i107, align 4
  %83 = add i64 %82, 1
  %memberidx.i.i.i108 = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 2
  %84 = load i64, ptr %memberidx.i.i.i108, align 4
  %85 = icmp slt i64 %84, %83
  %.pre218 = load ptr, ptr %78, align 8
  br i1 %85, label %while.body.i.i.i110, label %Parser_error.exit111

while.body.i.i.i110:                              ; preds = %if.entry11, %while.body.i.i.i110
  %86 = phi ptr [ %90, %while.body.i.i.i110 ], [ %.pre218, %if.entry11 ]
  %87 = phi i64 [ %91, %while.body.i.i.i110 ], [ %84, %if.entry11 ]
  %88 = shl nuw i64 %87, 1
  store i64 %88, ptr %memberidx.i.i.i108, align 4
  %89 = shl i64 %87, 4
  %90 = tail call ptr @realloc(ptr %86, i64 %89)
  store ptr %90, ptr %78, align 8
  %91 = load i64, ptr %memberidx.i.i.i108, align 4
  %92 = icmp slt i64 %91, %83
  br i1 %92, label %while.body.i.i.i110, label %Parser_error.exit111.loopexit

Parser_error.exit111.loopexit:                    ; preds = %while.body.i.i.i110
  %.pre219 = load i64, ptr %memberidx.i.i107, align 4
  %.pre235 = add nsw i64 %.pre219, 1
  br label %Parser_error.exit111

Parser_error.exit111:                             ; preds = %if.entry11, %Parser_error.exit111.loopexit
  %.pre-phi236 = phi i64 [ %.pre235, %Parser_error.exit111.loopexit ], [ %83, %if.entry11 ]
  %93 = phi ptr [ %90, %Parser_error.exit111.loopexit ], [ %.pre218, %if.entry11 ]
  %94 = phi i64 [ %.pre219, %Parser_error.exit111.loopexit ], [ %82, %if.entry11 ]
  store i64 %.pre-phi236, ptr %memberidx.i.i107, align 4
  %95 = getelementptr inbounds ptr, ptr %93, i64 %94
  store ptr %79, ptr %95, align 8
  br label %ifend4

if.entry14:                                       ; preds = %else
  %96 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %96, ptr noundef nonnull align 8 dereferenceable(12) @65, i64 12, i1 false)
  %97 = tail call ptr @malloc(i32 24)
  store ptr %96, ptr %97, align 8
  %memberidx1.i.i112 = getelementptr inbounds %String, ptr %97, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i112, align 4
  %memberidx2.i.i113 = getelementptr inbounds %String, ptr %97, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i113, align 4
  %memberidx.i114 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %98 = load ptr, ptr %memberidx.i114, align 8
  %99 = tail call ptr @malloc(i32 24)
  %100 = load ptr, ptr %memberidx, align 8
  %memberidx2.i116 = getelementptr inbounds %Token, ptr %100, i64 0, i32 1
  %101 = load ptr, ptr %memberidx2.i116, align 8
  store i64 2, ptr %99, align 4
  %memberidx1.i.i117 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 2
  store ptr %101, ptr %memberidx1.i.i117, align 8
  %memberidx2.i.i118 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 1
  store ptr %97, ptr %memberidx2.i.i118, align 8
  %memberidx.i.i119 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %102 = load i64, ptr %memberidx.i.i119, align 4
  %103 = add i64 %102, 1
  %memberidx.i.i.i120 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 2
  %104 = load i64, ptr %memberidx.i.i.i120, align 4
  %105 = icmp slt i64 %104, %103
  %.pre215 = load ptr, ptr %98, align 8
  br i1 %105, label %while.body.i.i.i122, label %Parser_error.exit123

while.body.i.i.i122:                              ; preds = %if.entry14, %while.body.i.i.i122
  %106 = phi ptr [ %110, %while.body.i.i.i122 ], [ %.pre215, %if.entry14 ]
  %107 = phi i64 [ %111, %while.body.i.i.i122 ], [ %104, %if.entry14 ]
  %108 = shl nuw i64 %107, 1
  store i64 %108, ptr %memberidx.i.i.i120, align 4
  %109 = shl i64 %107, 4
  %110 = tail call ptr @realloc(ptr %106, i64 %109)
  store ptr %110, ptr %98, align 8
  %111 = load i64, ptr %memberidx.i.i.i120, align 4
  %112 = icmp slt i64 %111, %103
  br i1 %112, label %while.body.i.i.i122, label %Parser_error.exit123.loopexit

Parser_error.exit123.loopexit:                    ; preds = %while.body.i.i.i122
  %.pre216 = load i64, ptr %memberidx.i.i119, align 4
  %.pre237 = add nsw i64 %.pre216, 1
  br label %Parser_error.exit123

Parser_error.exit123:                             ; preds = %if.entry14, %Parser_error.exit123.loopexit
  %.pre-phi238 = phi i64 [ %.pre237, %Parser_error.exit123.loopexit ], [ %103, %if.entry14 ]
  %113 = phi ptr [ %110, %Parser_error.exit123.loopexit ], [ %.pre215, %if.entry14 ]
  %114 = phi i64 [ %.pre216, %Parser_error.exit123.loopexit ], [ %102, %if.entry14 ]
  store i64 %.pre-phi238, ptr %memberidx.i.i119, align 4
  %115 = getelementptr inbounds ptr, ptr %113, i64 %114
  store ptr %99, ptr %115, align 8
  br label %ifend4

if.entry17:                                       ; preds = %else
  %116 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %116, ptr noundef nonnull align 8 dereferenceable(12) @66, i64 12, i1 false)
  %117 = tail call ptr @malloc(i32 24)
  store ptr %116, ptr %117, align 8
  %memberidx1.i.i124 = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i124, align 4
  %memberidx2.i.i125 = getelementptr inbounds %String, ptr %117, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i125, align 4
  %memberidx.i126 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %118 = load ptr, ptr %memberidx.i126, align 8
  %119 = tail call ptr @malloc(i32 24)
  %120 = load ptr, ptr %memberidx, align 8
  %memberidx2.i128 = getelementptr inbounds %Token, ptr %120, i64 0, i32 1
  %121 = load ptr, ptr %memberidx2.i128, align 8
  store i64 2, ptr %119, align 4
  %memberidx1.i.i129 = getelementptr inbounds %FloError, ptr %119, i64 0, i32 2
  store ptr %121, ptr %memberidx1.i.i129, align 8
  %memberidx2.i.i130 = getelementptr inbounds %FloError, ptr %119, i64 0, i32 1
  store ptr %117, ptr %memberidx2.i.i130, align 8
  %memberidx.i.i131 = getelementptr inbounds %Array_FloError_, ptr %118, i64 0, i32 1
  %122 = load i64, ptr %memberidx.i.i131, align 4
  %123 = add i64 %122, 1
  %memberidx.i.i.i132 = getelementptr inbounds %Array_FloError_, ptr %118, i64 0, i32 2
  %124 = load i64, ptr %memberidx.i.i.i132, align 4
  %125 = icmp slt i64 %124, %123
  %.pre212 = load ptr, ptr %118, align 8
  br i1 %125, label %while.body.i.i.i134, label %Parser_error.exit135

while.body.i.i.i134:                              ; preds = %if.entry17, %while.body.i.i.i134
  %126 = phi ptr [ %130, %while.body.i.i.i134 ], [ %.pre212, %if.entry17 ]
  %127 = phi i64 [ %131, %while.body.i.i.i134 ], [ %124, %if.entry17 ]
  %128 = shl nuw i64 %127, 1
  store i64 %128, ptr %memberidx.i.i.i132, align 4
  %129 = shl i64 %127, 4
  %130 = tail call ptr @realloc(ptr %126, i64 %129)
  store ptr %130, ptr %118, align 8
  %131 = load i64, ptr %memberidx.i.i.i132, align 4
  %132 = icmp slt i64 %131, %123
  br i1 %132, label %while.body.i.i.i134, label %Parser_error.exit135.loopexit

Parser_error.exit135.loopexit:                    ; preds = %while.body.i.i.i134
  %.pre213 = load i64, ptr %memberidx.i.i131, align 4
  %.pre239 = add nsw i64 %.pre213, 1
  br label %Parser_error.exit135

Parser_error.exit135:                             ; preds = %if.entry17, %Parser_error.exit135.loopexit
  %.pre-phi240 = phi i64 [ %.pre239, %Parser_error.exit135.loopexit ], [ %123, %if.entry17 ]
  %133 = phi ptr [ %130, %Parser_error.exit135.loopexit ], [ %.pre212, %if.entry17 ]
  %134 = phi i64 [ %.pre213, %Parser_error.exit135.loopexit ], [ %122, %if.entry17 ]
  store i64 %.pre-phi240, ptr %memberidx.i.i131, align 4
  %135 = getelementptr inbounds ptr, ptr %133, i64 %134
  store ptr %119, ptr %135, align 8
  br label %ifend4

if.entry20:                                       ; preds = %else
  %136 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %136, ptr noundef nonnull align 8 dereferenceable(12) @67, i64 12, i1 false)
  %137 = tail call ptr @malloc(i32 24)
  store ptr %136, ptr %137, align 8
  %memberidx1.i.i136 = getelementptr inbounds %String, ptr %137, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i136, align 4
  %memberidx2.i.i137 = getelementptr inbounds %String, ptr %137, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i137, align 4
  %memberidx.i138 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %138 = load ptr, ptr %memberidx.i138, align 8
  %139 = tail call ptr @malloc(i32 24)
  %140 = load ptr, ptr %memberidx, align 8
  %memberidx2.i140 = getelementptr inbounds %Token, ptr %140, i64 0, i32 1
  %141 = load ptr, ptr %memberidx2.i140, align 8
  store i64 2, ptr %139, align 4
  %memberidx1.i.i141 = getelementptr inbounds %FloError, ptr %139, i64 0, i32 2
  store ptr %141, ptr %memberidx1.i.i141, align 8
  %memberidx2.i.i142 = getelementptr inbounds %FloError, ptr %139, i64 0, i32 1
  store ptr %137, ptr %memberidx2.i.i142, align 8
  %memberidx.i.i143 = getelementptr inbounds %Array_FloError_, ptr %138, i64 0, i32 1
  %142 = load i64, ptr %memberidx.i.i143, align 4
  %143 = add i64 %142, 1
  %memberidx.i.i.i144 = getelementptr inbounds %Array_FloError_, ptr %138, i64 0, i32 2
  %144 = load i64, ptr %memberidx.i.i.i144, align 4
  %145 = icmp slt i64 %144, %143
  %.pre209 = load ptr, ptr %138, align 8
  br i1 %145, label %while.body.i.i.i146, label %Parser_error.exit147

while.body.i.i.i146:                              ; preds = %if.entry20, %while.body.i.i.i146
  %146 = phi ptr [ %150, %while.body.i.i.i146 ], [ %.pre209, %if.entry20 ]
  %147 = phi i64 [ %151, %while.body.i.i.i146 ], [ %144, %if.entry20 ]
  %148 = shl nuw i64 %147, 1
  store i64 %148, ptr %memberidx.i.i.i144, align 4
  %149 = shl i64 %147, 4
  %150 = tail call ptr @realloc(ptr %146, i64 %149)
  store ptr %150, ptr %138, align 8
  %151 = load i64, ptr %memberidx.i.i.i144, align 4
  %152 = icmp slt i64 %151, %143
  br i1 %152, label %while.body.i.i.i146, label %Parser_error.exit147.loopexit

Parser_error.exit147.loopexit:                    ; preds = %while.body.i.i.i146
  %.pre210 = load i64, ptr %memberidx.i.i143, align 4
  %.pre241 = add nsw i64 %.pre210, 1
  br label %Parser_error.exit147

Parser_error.exit147:                             ; preds = %if.entry20, %Parser_error.exit147.loopexit
  %.pre-phi242 = phi i64 [ %.pre241, %Parser_error.exit147.loopexit ], [ %143, %if.entry20 ]
  %153 = phi ptr [ %150, %Parser_error.exit147.loopexit ], [ %.pre209, %if.entry20 ]
  %154 = phi i64 [ %.pre210, %Parser_error.exit147.loopexit ], [ %142, %if.entry20 ]
  store i64 %.pre-phi242, ptr %memberidx.i.i143, align 4
  %155 = getelementptr inbounds ptr, ptr %153, i64 %154
  store ptr %139, ptr %155, align 8
  br label %ifend4

if.entry23:                                       ; preds = %else
  %156 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %156, ptr noundef nonnull align 8 dereferenceable(12) @68, i64 12, i1 false)
  %157 = tail call ptr @malloc(i32 24)
  store ptr %156, ptr %157, align 8
  %memberidx1.i.i148 = getelementptr inbounds %String, ptr %157, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i148, align 4
  %memberidx2.i.i149 = getelementptr inbounds %String, ptr %157, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i149, align 4
  %memberidx.i150 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %158 = load ptr, ptr %memberidx.i150, align 8
  %159 = tail call ptr @malloc(i32 24)
  %160 = load ptr, ptr %memberidx, align 8
  %memberidx2.i152 = getelementptr inbounds %Token, ptr %160, i64 0, i32 1
  %161 = load ptr, ptr %memberidx2.i152, align 8
  store i64 2, ptr %159, align 4
  %memberidx1.i.i153 = getelementptr inbounds %FloError, ptr %159, i64 0, i32 2
  store ptr %161, ptr %memberidx1.i.i153, align 8
  %memberidx2.i.i154 = getelementptr inbounds %FloError, ptr %159, i64 0, i32 1
  store ptr %157, ptr %memberidx2.i.i154, align 8
  %memberidx.i.i155 = getelementptr inbounds %Array_FloError_, ptr %158, i64 0, i32 1
  %162 = load i64, ptr %memberidx.i.i155, align 4
  %163 = add i64 %162, 1
  %memberidx.i.i.i156 = getelementptr inbounds %Array_FloError_, ptr %158, i64 0, i32 2
  %164 = load i64, ptr %memberidx.i.i.i156, align 4
  %165 = icmp slt i64 %164, %163
  %.pre206 = load ptr, ptr %158, align 8
  br i1 %165, label %while.body.i.i.i158, label %Parser_error.exit159

while.body.i.i.i158:                              ; preds = %if.entry23, %while.body.i.i.i158
  %166 = phi ptr [ %170, %while.body.i.i.i158 ], [ %.pre206, %if.entry23 ]
  %167 = phi i64 [ %171, %while.body.i.i.i158 ], [ %164, %if.entry23 ]
  %168 = shl nuw i64 %167, 1
  store i64 %168, ptr %memberidx.i.i.i156, align 4
  %169 = shl i64 %167, 4
  %170 = tail call ptr @realloc(ptr %166, i64 %169)
  store ptr %170, ptr %158, align 8
  %171 = load i64, ptr %memberidx.i.i.i156, align 4
  %172 = icmp slt i64 %171, %163
  br i1 %172, label %while.body.i.i.i158, label %Parser_error.exit159.loopexit

Parser_error.exit159.loopexit:                    ; preds = %while.body.i.i.i158
  %.pre207 = load i64, ptr %memberidx.i.i155, align 4
  %.pre243 = add nsw i64 %.pre207, 1
  br label %Parser_error.exit159

Parser_error.exit159:                             ; preds = %if.entry23, %Parser_error.exit159.loopexit
  %.pre-phi244 = phi i64 [ %.pre243, %Parser_error.exit159.loopexit ], [ %163, %if.entry23 ]
  %173 = phi ptr [ %170, %Parser_error.exit159.loopexit ], [ %.pre206, %if.entry23 ]
  %174 = phi i64 [ %.pre207, %Parser_error.exit159.loopexit ], [ %162, %if.entry23 ]
  store i64 %.pre-phi244, ptr %memberidx.i.i155, align 4
  %175 = getelementptr inbounds ptr, ptr %173, i64 %174
  store ptr %159, ptr %175, align 8
  br label %ifend4

if.entry26:                                       ; preds = %else
  %176 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %176, ptr noundef nonnull align 8 dereferenceable(12) @69, i64 12, i1 false)
  %177 = tail call ptr @malloc(i32 24)
  store ptr %176, ptr %177, align 8
  %memberidx1.i.i160 = getelementptr inbounds %String, ptr %177, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i160, align 4
  %memberidx2.i.i161 = getelementptr inbounds %String, ptr %177, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i161, align 4
  %memberidx.i162 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %178 = load ptr, ptr %memberidx.i162, align 8
  %179 = tail call ptr @malloc(i32 24)
  %180 = load ptr, ptr %memberidx, align 8
  %memberidx2.i164 = getelementptr inbounds %Token, ptr %180, i64 0, i32 1
  %181 = load ptr, ptr %memberidx2.i164, align 8
  store i64 2, ptr %179, align 4
  %memberidx1.i.i165 = getelementptr inbounds %FloError, ptr %179, i64 0, i32 2
  store ptr %181, ptr %memberidx1.i.i165, align 8
  %memberidx2.i.i166 = getelementptr inbounds %FloError, ptr %179, i64 0, i32 1
  store ptr %177, ptr %memberidx2.i.i166, align 8
  %memberidx.i.i167 = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 1
  %182 = load i64, ptr %memberidx.i.i167, align 4
  %183 = add i64 %182, 1
  %memberidx.i.i.i168 = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 2
  %184 = load i64, ptr %memberidx.i.i.i168, align 4
  %185 = icmp slt i64 %184, %183
  %.pre203 = load ptr, ptr %178, align 8
  br i1 %185, label %while.body.i.i.i170, label %Parser_error.exit171

while.body.i.i.i170:                              ; preds = %if.entry26, %while.body.i.i.i170
  %186 = phi ptr [ %190, %while.body.i.i.i170 ], [ %.pre203, %if.entry26 ]
  %187 = phi i64 [ %191, %while.body.i.i.i170 ], [ %184, %if.entry26 ]
  %188 = shl nuw i64 %187, 1
  store i64 %188, ptr %memberidx.i.i.i168, align 4
  %189 = shl i64 %187, 4
  %190 = tail call ptr @realloc(ptr %186, i64 %189)
  store ptr %190, ptr %178, align 8
  %191 = load i64, ptr %memberidx.i.i.i168, align 4
  %192 = icmp slt i64 %191, %183
  br i1 %192, label %while.body.i.i.i170, label %Parser_error.exit171.loopexit

Parser_error.exit171.loopexit:                    ; preds = %while.body.i.i.i170
  %.pre204 = load i64, ptr %memberidx.i.i167, align 4
  %.pre245 = add nsw i64 %.pre204, 1
  br label %Parser_error.exit171

Parser_error.exit171:                             ; preds = %if.entry26, %Parser_error.exit171.loopexit
  %.pre-phi246 = phi i64 [ %.pre245, %Parser_error.exit171.loopexit ], [ %183, %if.entry26 ]
  %193 = phi ptr [ %190, %Parser_error.exit171.loopexit ], [ %.pre203, %if.entry26 ]
  %194 = phi i64 [ %.pre204, %Parser_error.exit171.loopexit ], [ %182, %if.entry26 ]
  store i64 %.pre-phi246, ptr %memberidx.i.i167, align 4
  %195 = getelementptr inbounds ptr, ptr %193, i64 %194
  store ptr %179, ptr %195, align 8
  br label %ifend4

if.entry29:                                       ; preds = %else
  %196 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %196, ptr noundef nonnull align 8 dereferenceable(12) @70, i64 12, i1 false)
  %197 = tail call ptr @malloc(i32 24)
  store ptr %196, ptr %197, align 8
  %memberidx1.i.i172 = getelementptr inbounds %String, ptr %197, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i172, align 4
  %memberidx2.i.i173 = getelementptr inbounds %String, ptr %197, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i173, align 4
  %memberidx.i174 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %198 = load ptr, ptr %memberidx.i174, align 8
  %199 = tail call ptr @malloc(i32 24)
  %200 = load ptr, ptr %memberidx, align 8
  %memberidx2.i176 = getelementptr inbounds %Token, ptr %200, i64 0, i32 1
  %201 = load ptr, ptr %memberidx2.i176, align 8
  store i64 2, ptr %199, align 4
  %memberidx1.i.i177 = getelementptr inbounds %FloError, ptr %199, i64 0, i32 2
  store ptr %201, ptr %memberidx1.i.i177, align 8
  %memberidx2.i.i178 = getelementptr inbounds %FloError, ptr %199, i64 0, i32 1
  store ptr %197, ptr %memberidx2.i.i178, align 8
  %memberidx.i.i179 = getelementptr inbounds %Array_FloError_, ptr %198, i64 0, i32 1
  %202 = load i64, ptr %memberidx.i.i179, align 4
  %203 = add i64 %202, 1
  %memberidx.i.i.i180 = getelementptr inbounds %Array_FloError_, ptr %198, i64 0, i32 2
  %204 = load i64, ptr %memberidx.i.i.i180, align 4
  %205 = icmp slt i64 %204, %203
  %.pre200 = load ptr, ptr %198, align 8
  br i1 %205, label %while.body.i.i.i182, label %Parser_error.exit183

while.body.i.i.i182:                              ; preds = %if.entry29, %while.body.i.i.i182
  %206 = phi ptr [ %210, %while.body.i.i.i182 ], [ %.pre200, %if.entry29 ]
  %207 = phi i64 [ %211, %while.body.i.i.i182 ], [ %204, %if.entry29 ]
  %208 = shl nuw i64 %207, 1
  store i64 %208, ptr %memberidx.i.i.i180, align 4
  %209 = shl i64 %207, 4
  %210 = tail call ptr @realloc(ptr %206, i64 %209)
  store ptr %210, ptr %198, align 8
  %211 = load i64, ptr %memberidx.i.i.i180, align 4
  %212 = icmp slt i64 %211, %203
  br i1 %212, label %while.body.i.i.i182, label %Parser_error.exit183.loopexit

Parser_error.exit183.loopexit:                    ; preds = %while.body.i.i.i182
  %.pre201 = load i64, ptr %memberidx.i.i179, align 4
  %.pre247 = add nsw i64 %.pre201, 1
  br label %Parser_error.exit183

Parser_error.exit183:                             ; preds = %if.entry29, %Parser_error.exit183.loopexit
  %.pre-phi248 = phi i64 [ %.pre247, %Parser_error.exit183.loopexit ], [ %203, %if.entry29 ]
  %213 = phi ptr [ %210, %Parser_error.exit183.loopexit ], [ %.pre200, %if.entry29 ]
  %214 = phi i64 [ %.pre201, %Parser_error.exit183.loopexit ], [ %202, %if.entry29 ]
  store i64 %.pre-phi248, ptr %memberidx.i.i179, align 4
  %215 = getelementptr inbounds ptr, ptr %213, i64 %214
  store ptr %199, ptr %215, align 8
  br label %ifend4

if.entry32:                                       ; preds = %else
  %216 = tail call ptr @malloc(i32 13)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %216, ptr noundef nonnull align 8 dereferenceable(13) @71, i64 13, i1 false)
  %217 = tail call ptr @malloc(i32 24)
  store ptr %216, ptr %217, align 8
  %memberidx1.i.i184 = getelementptr inbounds %String, ptr %217, i64 0, i32 1
  store i64 13, ptr %memberidx1.i.i184, align 4
  %memberidx2.i.i185 = getelementptr inbounds %String, ptr %217, i64 0, i32 2
  store i64 13, ptr %memberidx2.i.i185, align 4
  %memberidx.i61 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %218 = load ptr, ptr %memberidx.i61, align 8
  %219 = tail call ptr @malloc(i32 24)
  %220 = load ptr, ptr %memberidx, align 8
  %memberidx2.i62 = getelementptr inbounds %Token, ptr %220, i64 0, i32 1
  %221 = load ptr, ptr %memberidx2.i62, align 8
  store i64 2, ptr %219, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %219, i64 0, i32 2
  store ptr %221, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %219, i64 0, i32 1
  store ptr %217, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %218, i64 0, i32 1
  %222 = load i64, ptr %memberidx.i.i, align 4
  %223 = add i64 %222, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %218, i64 0, i32 2
  %224 = load i64, ptr %memberidx.i.i.i, align 4
  %225 = icmp slt i64 %224, %223
  %.pre = load ptr, ptr %218, align 8
  br i1 %225, label %while.body.i.i.i, label %Parser_error.exit

while.body.i.i.i:                                 ; preds = %if.entry32, %while.body.i.i.i
  %226 = phi ptr [ %230, %while.body.i.i.i ], [ %.pre, %if.entry32 ]
  %227 = phi i64 [ %231, %while.body.i.i.i ], [ %224, %if.entry32 ]
  %228 = shl nuw i64 %227, 1
  store i64 %228, ptr %memberidx.i.i.i, align 4
  %229 = shl i64 %227, 4
  %230 = tail call ptr @realloc(ptr %226, i64 %229)
  store ptr %230, ptr %218, align 8
  %231 = load i64, ptr %memberidx.i.i.i, align 4
  %232 = icmp slt i64 %231, %223
  br i1 %232, label %while.body.i.i.i, label %Parser_error.exit.loopexit

Parser_error.exit.loopexit:                       ; preds = %while.body.i.i.i
  %.pre198 = load i64, ptr %memberidx.i.i, align 4
  %.pre249 = add nsw i64 %.pre198, 1
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry32, %Parser_error.exit.loopexit
  %.pre-phi250 = phi i64 [ %.pre249, %Parser_error.exit.loopexit ], [ %223, %if.entry32 ]
  %233 = phi ptr [ %230, %Parser_error.exit.loopexit ], [ %.pre, %if.entry32 ]
  %234 = phi i64 [ %.pre198, %Parser_error.exit.loopexit ], [ %222, %if.entry32 ]
  store i64 %.pre-phi250, ptr %memberidx.i.i, align 4
  %235 = getelementptr inbounds ptr, ptr %233, i64 %234
  store ptr %219, ptr %235, align 8
  br label %ifend4
}

define internal fastcc ptr @Parser_parse_array_expression(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %2, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %ArrayExpressionNode, ptr %2, i64 0, i32 3
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i3.i = getelementptr inbounds %Array_ExpressionNode_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i3.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i3.i, align 4
  store ptr %5, ptr %memberidx.i, align 8
  %memberidx.i12 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %7 = load i64, ptr %memberidx.i12, align 4
  %8 = load ptr, ptr %0, align 8
  %memberidx2.i13 = getelementptr inbounds %Array_Token_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i13, align 4
  %10 = icmp slt i64 %7, %9
  br i1 %10, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %11 = add nsw i64 %7, 1
  store i64 %11, ptr %memberidx.i12, align 4
  %12 = load ptr, ptr %8, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  store ptr %14, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %5, i64 30)
  %15 = load ptr, ptr %memberidx, align 8
  %16 = load i64, ptr %15, align 4
  %17 = icmp eq i64 %16, 30
  br i1 %17, label %if.entry.i16, label %else.i

if.entry.i16:                                     ; preds = %Parser_advance.exit
  %18 = load i64, ptr %memberidx.i12, align 4
  %19 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx2.i.i, align 4
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i16
  %22 = add nsw i64 %18, 1
  store i64 %22, ptr %memberidx.i12, align 4
  %23 = load ptr, ptr %19, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  store ptr %25, ptr %memberidx, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %Parser_advance.exit
  %26 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %15, i64 0, i32 1
  %27 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %26, align 4
  %memberidx1.i75.i = getelementptr inbounds %Token, ptr %26, i64 0, i32 1
  store ptr %27, ptr %memberidx1.i75.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i16, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %26, %else.i ], [ %15, %if.entry.i.i ], [ %15, %if.entry.i16 ]
  %memberidx5 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %28 = load ptr, ptr %memberidx5, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i17 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i17, align 4
  %memberidx3.i18 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i18, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i19 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i19, align 4
  %memberidx2.i.i20 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i20, align 4
  %memberidx3.i.i21 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i21, align 4
  store ptr %29, ptr %2, align 8
  ret ptr %2
}

define internal fastcc ptr @Parser_parse_new_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %12 = tail call ptr @malloc(i32 41)
  %13 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i14 = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 3
  store ptr %13, ptr %memberidx.i14, align 8
  %memberidx1.i = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 4
  store i1 true, ptr %memberidx1.i, align 1
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %12, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %12, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i, align 4
  %memberidx2.i15 = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 5
  %14 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_ExpressionNode_, ptr %14, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %14, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %14, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %14, ptr %memberidx2.i15, align 8
  %16 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 25)
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %14, i64 26)
  %17 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx5 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx5, align 8
  %19 = tail call ptr @malloc(i32 32)
  %20 = load i64, ptr %3, align 4
  %memberidx1.i16 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 1
  %21 = load i64, ptr %memberidx1.i16, align 4
  %memberidx2.i17 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i17, align 4
  %memberidx3.i18 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 3
  %23 = load i64, ptr %memberidx3.i18, align 4
  store i64 %20, ptr %19, align 4
  %memberidx1.i.i19 = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 1
  store i64 %21, ptr %memberidx1.i.i19, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 3
  store i64 %23, ptr %memberidx3.i.i, align 4
  store ptr %19, ptr %12, align 8
  ret ptr %12
}

define internal fastcc ptr @Parser_parse_term_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend7.i [
    i64 4, label %Parser_is_term_expr_op.exit
    i64 7, label %Parser_is_term_expr_op.exit.fold.split
    i64 10, label %Parser_is_term_expr_op.exit.fold.split24
  ]

ifend7.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 11
  %spec.select.i = select i1 %5, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split:           ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split24:         ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit:                      ; preds = %1, %Parser_is_term_expr_op.exit.fold.split24, %Parser_is_term_expr_op.exit.fold.split, %ifend7.i
  %common.ret.op.i = phi i64 [ 3, %1 ], [ %spec.select.i, %ifend7.i ], [ 4, %Parser_is_term_expr_op.exit.fold.split ], [ 5, %Parser_is_term_expr_op.exit.fold.split24 ]
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 46
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i26 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx3.i26, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %Parser_is_term_expr_op.exit
  %memberidx.i9 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.body

while.end:                                        ; preds = %Parser_is_term_expr_op.exit21, %Parser_is_term_expr_op.exit
  %unary.0.lcssa = phi ptr [ %2, %Parser_is_term_expr_op.exit ], [ %21, %Parser_is_term_expr_op.exit21 ]
  ret ptr %unary.0.lcssa

while.body:                                       ; preds = %while.body.lr.ph, %Parser_is_term_expr_op.exit21
  %unary.028 = phi ptr [ %2, %while.body.lr.ph ], [ %21, %Parser_is_term_expr_op.exit21 ]
  %op.027 = phi i64 [ %common.ret.op.i, %while.body.lr.ph ], [ %common.ret.op.i16, %Parser_is_term_expr_op.exit21 ]
  %13 = load i64, ptr %memberidx.i9, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i10 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx2.i10, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.body
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i9, align 4
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.body, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %23 = load ptr, ptr %unary.028, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i13 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %unary.028, ptr %memberidx2.i13, align 8
  %memberidx3.i14 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.027, ptr %memberidx3.i14, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  switch i64 %31, label %ifend7.i20 [
    i64 4, label %Parser_is_term_expr_op.exit21
    i64 7, label %Parser_is_term_expr_op.exit21.fold.split
    i64 10, label %Parser_is_term_expr_op.exit21.fold.split25
  ]

ifend7.i20:                                       ; preds = %Parser_advance.exit
  %32 = icmp eq i64 %31, 11
  %spec.select.i19 = select i1 %32, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit21

Parser_is_term_expr_op.exit21.fold.split:         ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit21

Parser_is_term_expr_op.exit21.fold.split25:       ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit21

Parser_is_term_expr_op.exit21:                    ; preds = %Parser_advance.exit, %Parser_is_term_expr_op.exit21.fold.split25, %Parser_is_term_expr_op.exit21.fold.split, %ifend7.i20
  %common.ret.op.i16 = phi i64 [ 3, %Parser_advance.exit ], [ %spec.select.i19, %ifend7.i20 ], [ 4, %Parser_is_term_expr_op.exit21.fold.split ], [ 5, %Parser_is_term_expr_op.exit21.fold.split25 ]
  %33 = icmp ne i64 %common.ret.op.i16, 0
  %34 = icmp ne i64 %31, 46
  %35 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %35, i64 0, i32 1
  %36 = load i64, ptr %memberidx3.i, align 4
  %37 = icmp eq i64 %36, 0
  %38 = and i1 %34, %37
  %39 = and i1 %33, %38
  br i1 %39, label %while.body, label %while.end
}

define internal fastcc ptr @Parser_parse_arithmetic_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_term_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i17 = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx3.i17, align 4
  %7 = icmp eq i64 %6, 0
  %8 = add i64 %4, -5
  %9 = icmp ult i64 %8, 2
  %10 = and i1 %9, %7
  br i1 %10, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %1
  %11 = icmp eq i64 %4, 5
  %12 = icmp eq i64 %4, 6
  %spec.select.i = select i1 %11, i64 2, i64 0
  %common.ret.op.i = select i1 %12, i64 1, i64 %spec.select.i
  %memberidx.i9 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.body

while.end:                                        ; preds = %Parser_advance.exit, %1
  %term.0.lcssa = phi ptr [ %2, %1 ], [ %21, %Parser_advance.exit ]
  ret ptr %term.0.lcssa

while.body:                                       ; preds = %while.body.lr.ph, %Parser_advance.exit
  %term.019 = phi ptr [ %2, %while.body.lr.ph ], [ %21, %Parser_advance.exit ]
  %op.018 = phi i64 [ %common.ret.op.i, %while.body.lr.ph ], [ %common.ret.op.i16, %Parser_advance.exit ]
  %13 = load i64, ptr %memberidx.i9, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i10 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx2.i10, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.body
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i9, align 4
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.body, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_term_expression(ptr nonnull %0)
  %23 = load ptr, ptr %term.019, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i12 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %term.019, ptr %memberidx2.i12, align 8
  %memberidx3.i13 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.018, ptr %memberidx3.i13, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  %32 = icmp eq i64 %31, 6
  %33 = icmp eq i64 %31, 5
  %spec.select.i15 = select i1 %33, i64 2, i64 0
  %common.ret.op.i16 = select i1 %32, i64 1, i64 %spec.select.i15
  %34 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 1
  %35 = load i64, ptr %memberidx3.i, align 4
  %36 = icmp eq i64 %35, 0
  %37 = add i64 %31, -5
  %38 = icmp ult i64 %37, 2
  %39 = and i1 %38, %36
  br i1 %39, label %while.body, label %while.end
}

define internal fastcc ptr @Parser_parse_bitshift_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend4.i [
    i64 48, label %Parser_is_bitshift_expr_op.exit
    i64 49, label %Parser_is_bitshift_expr_op.exit.fold.split
  ]

ifend4.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 51
  %spec.select.i = select i1 %5, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit.fold.split:       ; preds = %1
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit:                  ; preds = %1, %Parser_is_bitshift_expr_op.exit.fold.split, %ifend4.i
  %common.ret.op.i = phi i64 [ 13, %1 ], [ %spec.select.i, %ifend4.i ], [ 14, %Parser_is_bitshift_expr_op.exit.fold.split ]
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 46
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i23 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx3.i23, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %Parser_is_bitshift_expr_op.exit
  %memberidx.i9 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.body

while.end:                                        ; preds = %Parser_is_bitshift_expr_op.exit20, %Parser_is_bitshift_expr_op.exit
  %arith.0.lcssa = phi ptr [ %2, %Parser_is_bitshift_expr_op.exit ], [ %21, %Parser_is_bitshift_expr_op.exit20 ]
  ret ptr %arith.0.lcssa

while.body:                                       ; preds = %while.body.lr.ph, %Parser_is_bitshift_expr_op.exit20
  %arith.025 = phi ptr [ %2, %while.body.lr.ph ], [ %21, %Parser_is_bitshift_expr_op.exit20 ]
  %op.024 = phi i64 [ %common.ret.op.i, %while.body.lr.ph ], [ %common.ret.op.i16, %Parser_is_bitshift_expr_op.exit20 ]
  %13 = load i64, ptr %memberidx.i9, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i10 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx2.i10, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.body
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i9, align 4
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.body, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr nonnull %0)
  %23 = load ptr, ptr %arith.025, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i13 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %arith.025, ptr %memberidx2.i13, align 8
  %memberidx3.i14 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.024, ptr %memberidx3.i14, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  switch i64 %31, label %ifend4.i19 [
    i64 48, label %Parser_is_bitshift_expr_op.exit20
    i64 49, label %Parser_is_bitshift_expr_op.exit20.fold.split
  ]

ifend4.i19:                                       ; preds = %Parser_advance.exit
  %32 = icmp eq i64 %31, 51
  %spec.select.i18 = select i1 %32, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit20

Parser_is_bitshift_expr_op.exit20.fold.split:     ; preds = %Parser_advance.exit
  br label %Parser_is_bitshift_expr_op.exit20

Parser_is_bitshift_expr_op.exit20:                ; preds = %Parser_advance.exit, %Parser_is_bitshift_expr_op.exit20.fold.split, %ifend4.i19
  %common.ret.op.i16 = phi i64 [ 13, %Parser_advance.exit ], [ %spec.select.i18, %ifend4.i19 ], [ 14, %Parser_is_bitshift_expr_op.exit20.fold.split ]
  %33 = icmp ne i64 %common.ret.op.i16, 0
  %34 = icmp ne i64 %31, 46
  %35 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %35, i64 0, i32 1
  %36 = load i64, ptr %memberidx3.i, align 4
  %37 = icmp eq i64 %36, 0
  %38 = and i1 %34, %37
  %39 = and i1 %33, %38
  br i1 %39, label %while.body, label %while.end
}

define internal fastcc ptr @Parser_parse_comparison_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 47
  br i1 %4, label %if.entry, label %ifend

common.ret56:                                     ; preds = %Parser_is_comp_expr_op.exit46, %Parser_is_comp_expr_op.exit, %Parser_advance.exit
  %common.ret56.op = phi ptr [ %15, %Parser_advance.exit ], [ %22, %Parser_is_comp_expr_op.exit ], [ %41, %Parser_is_comp_expr_op.exit46 ]
  ret ptr %common.ret56.op

if.entry:                                         ; preds = %1
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %5 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %7, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  store ptr %13, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  %14 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %15 = tail call ptr @malloc(i32 40)
  %16 = load ptr, ptr %14, align 8
  %17 = tail call ptr @malloc(i32 32)
  %18 = load i64, ptr %5, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 1
  %19 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i17 = getelementptr inbounds %FloRange, ptr %5, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i17, align 4
  %memberidx3.i18 = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 3
  %21 = load i64, ptr %memberidx3.i18, align 4
  store i64 %18, ptr %17, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  store i64 %21, ptr %memberidx3.i.i, align 4
  %memberidx.i19 = getelementptr inbounds %UnaryExpressionNode, ptr %15, i64 0, i32 3
  store i64 7, ptr %memberidx.i19, align 4
  %memberidx1.i20 = getelementptr inbounds %UnaryExpressionNode, ptr %15, i64 0, i32 4
  store ptr %14, ptr %memberidx1.i20, align 8
  store ptr %17, ptr %15, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %15, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %15, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i, align 4
  br label %common.ret56

ifend:                                            ; preds = %1
  %22 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %23 = load ptr, ptr %memberidx, align 8
  %24 = load i64, ptr %23, align 4
  switch i64 %24, label %ifend13.i [
    i64 41, label %Parser_is_comp_expr_op.exit
    i64 42, label %Parser_is_comp_expr_op.exit.fold.split
    i64 44, label %Parser_is_comp_expr_op.exit.fold.split50
    i64 43, label %Parser_is_comp_expr_op.exit.fold.split51
    i64 39, label %Parser_is_comp_expr_op.exit.fold.split52
  ]

ifend13.i:                                        ; preds = %ifend
  %25 = icmp eq i64 %24, 40
  %spec.select.i = select i1 %25, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split:           ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split50:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split51:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split52:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit:                      ; preds = %ifend, %Parser_is_comp_expr_op.exit.fold.split52, %Parser_is_comp_expr_op.exit.fold.split51, %Parser_is_comp_expr_op.exit.fold.split50, %Parser_is_comp_expr_op.exit.fold.split, %ifend13.i
  %common.ret.op.i = phi i64 [ 7, %ifend ], [ %spec.select.i, %ifend13.i ], [ 9, %Parser_is_comp_expr_op.exit.fold.split ], [ 8, %Parser_is_comp_expr_op.exit.fold.split50 ], [ 10, %Parser_is_comp_expr_op.exit.fold.split51 ], [ 11, %Parser_is_comp_expr_op.exit.fold.split52 ]
  %memberidx2.i23 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %26 = icmp ne i64 %common.ret.op.i, 0
  %27 = icmp ne i64 %24, 46
  %28 = load ptr, ptr %memberidx2.i23, align 8
  %memberidx3.i2457 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx3.i2457, align 4
  %30 = icmp eq i64 %29, 0
  %31 = and i1 %27, %30
  %32 = and i1 %26, %31
  br i1 %32, label %while.body.lr.ph, label %common.ret56

while.body.lr.ph:                                 ; preds = %Parser_is_comp_expr_op.exit
  %memberidx.i25 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %Parser_is_comp_expr_op.exit46
  %op.059 = phi i64 [ %common.ret.op.i, %while.body.lr.ph ], [ %common.ret.op.i39, %Parser_is_comp_expr_op.exit46 ]
  %bit.058 = phi ptr [ %22, %while.body.lr.ph ], [ %41, %Parser_is_comp_expr_op.exit46 ]
  %33 = load i64, ptr %memberidx.i25, align 4
  %34 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds %Array_Token_, ptr %34, i64 0, i32 1
  %35 = load i64, ptr %memberidx2.i26, align 4
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %if.entry.i28, label %Parser_advance.exit30

if.entry.i28:                                     ; preds = %while.body
  %37 = add nsw i64 %33, 1
  store i64 %37, ptr %memberidx.i25, align 4
  %38 = load ptr, ptr %34, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  store ptr %40, ptr %memberidx, align 8
  br label %Parser_advance.exit30

Parser_advance.exit30:                            ; preds = %while.body, %if.entry.i28
  %41 = tail call ptr @malloc(i32 48)
  %42 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %43 = load ptr, ptr %bit.058, align 8
  %44 = load ptr, ptr %42, align 8
  %45 = tail call ptr @malloc(i32 32)
  %46 = load i64, ptr %43, align 4
  %memberidx1.i.i31 = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  %47 = load i64, ptr %memberidx1.i.i31, align 4
  %memberidx2.i.i32 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 2
  %48 = load i64, ptr %memberidx2.i.i32, align 4
  %memberidx3.i.i33 = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  %49 = load i64, ptr %memberidx3.i.i33, align 4
  store i64 %46, ptr %45, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 1
  store i64 %47, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 2
  store i64 %48, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 3
  store i64 %49, ptr %memberidx3.i.i.i, align 4
  store ptr %45, ptr %41, align 8
  %memberidx.i.i.i34 = getelementptr inbounds %StatementNode, ptr %41, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i34, align 4
  %memberidx.i.i35 = getelementptr inbounds %ExpressionNode, ptr %41, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i35, align 4
  %memberidx2.i36 = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 3
  store ptr %bit.058, ptr %memberidx2.i36, align 8
  %memberidx3.i37 = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 4
  store i64 %op.059, ptr %memberidx3.i37, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 5
  store ptr %42, ptr %memberidx4.i, align 8
  %50 = load ptr, ptr %memberidx, align 8
  %51 = load i64, ptr %50, align 4
  switch i64 %51, label %ifend13.i45 [
    i64 41, label %Parser_is_comp_expr_op.exit46
    i64 42, label %Parser_is_comp_expr_op.exit46.fold.split
    i64 44, label %Parser_is_comp_expr_op.exit46.fold.split53
    i64 43, label %Parser_is_comp_expr_op.exit46.fold.split54
    i64 39, label %Parser_is_comp_expr_op.exit46.fold.split55
  ]

ifend13.i45:                                      ; preds = %Parser_advance.exit30
  %52 = icmp eq i64 %51, 40
  %spec.select.i44 = select i1 %52, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit46

Parser_is_comp_expr_op.exit46.fold.split:         ; preds = %Parser_advance.exit30
  br label %Parser_is_comp_expr_op.exit46

Parser_is_comp_expr_op.exit46.fold.split53:       ; preds = %Parser_advance.exit30
  br label %Parser_is_comp_expr_op.exit46

Parser_is_comp_expr_op.exit46.fold.split54:       ; preds = %Parser_advance.exit30
  br label %Parser_is_comp_expr_op.exit46

Parser_is_comp_expr_op.exit46.fold.split55:       ; preds = %Parser_advance.exit30
  br label %Parser_is_comp_expr_op.exit46

Parser_is_comp_expr_op.exit46:                    ; preds = %Parser_advance.exit30, %Parser_is_comp_expr_op.exit46.fold.split55, %Parser_is_comp_expr_op.exit46.fold.split54, %Parser_is_comp_expr_op.exit46.fold.split53, %Parser_is_comp_expr_op.exit46.fold.split, %ifend13.i45
  %common.ret.op.i39 = phi i64 [ 7, %Parser_advance.exit30 ], [ %spec.select.i44, %ifend13.i45 ], [ 9, %Parser_is_comp_expr_op.exit46.fold.split ], [ 8, %Parser_is_comp_expr_op.exit46.fold.split53 ], [ 10, %Parser_is_comp_expr_op.exit46.fold.split54 ], [ 11, %Parser_is_comp_expr_op.exit46.fold.split55 ]
  %53 = icmp ne i64 %common.ret.op.i39, 0
  %54 = icmp ne i64 %51, 46
  %55 = load ptr, ptr %memberidx2.i23, align 8
  %memberidx3.i24 = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx3.i24, align 4
  %57 = icmp eq i64 %56, 0
  %58 = and i1 %54, %57
  %59 = and i1 %53, %58
  br i1 %59, label %while.body, label %common.ret56
}

define internal fastcc ptr @Parser_parse_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 57
  br i1 %4, label %if.entry, label %ifend

common.ret115:                                    ; preds = %Parser_parse_match_expression.exit, %Parser_is_assign_op.exit, %Parser_advance.exit, %Parser_advance.exit46
  %common.ret115.op = phi ptr [ %280, %Parser_advance.exit46 ], [ %302, %Parser_advance.exit ], [ %5, %Parser_parse_match_expression.exit ], [ %common.ret.op.i66, %Parser_is_assign_op.exit ]
  ret ptr %common.ret115.op

if.entry:                                         ; preds = %1
  %5 = tail call ptr @malloc(i32 48)
  %6 = load ptr, ptr %memberidx, align 8
  %7 = load i64, ptr %6, align 4
  %8 = icmp eq i64 %7, 57
  br i1 %8, label %if.entry.i76.i, label %else.i.i

if.entry.i76.i:                                   ; preds = %if.entry
  %memberidx.i.i74.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %9 = load i64, ptr %memberidx.i.i74.i, align 4
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i.i75.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx2.i.i75.i, align 4
  %12 = icmp slt i64 %9, %11
  br i1 %12, label %if.entry.i.i78.i, label %Parser_eat.exit.i

if.entry.i.i78.i:                                 ; preds = %if.entry.i76.i
  %13 = add nsw i64 %9, 1
  store i64 %13, ptr %memberidx.i.i74.i, align 4
  %14 = load ptr, ptr %10, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  store ptr %16, ptr %memberidx, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %if.entry
  %17 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %6, i64 0, i32 1
  %18 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %17, align 4
  %memberidx1.i75.i.i = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  store ptr %18, ptr %memberidx1.i75.i.i, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i76.i, %if.entry.i.i78.i, %else.i.i
  %common.ret.op.i.i = phi ptr [ %17, %else.i.i ], [ %6, %if.entry.i.i78.i ], [ %6, %if.entry.i76.i ]
  %memberidx.i50 = getelementptr inbounds %Token, ptr %common.ret.op.i.i, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i50, align 8
  store ptr %19, ptr %5, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %5, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i69.i = getelementptr inbounds %ExpressionNode, ptr %5, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i69.i, align 4
  %memberidx.i70.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 4
  %20 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i.i = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %20, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i, align 4
  %memberidx1.i.i.i51 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %20, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i51, align 4
  %21 = tail call ptr @malloc(i32 64)
  store ptr %21, ptr %20, align 8
  store i64 0, ptr %memberidx.i5.i.i, align 4
  store ptr %20, ptr %memberidx.i70.i, align 8
  %memberidx3.i72.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 5
  store ptr null, ptr %memberidx3.i72.i, align 8
  %memberidx1.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 3
  %22 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %22, ptr %memberidx1.i, align 8
  %memberidx2.i.i59.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i59.i, align 8
  %memberidx3.i.i60.i = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx, align 8
  %25 = load i64, ptr %24, align 4
  %26 = icmp eq i64 %25, 33
  %27 = load i64, ptr %memberidx3.i.i60.i, align 4
  %28 = icmp eq i64 %27, 0
  %29 = and i1 %26, %28
  br i1 %29, label %while.body.i64.i.lr.ph, label %Parser_new_lines.exit68.i

while.body.i64.i.lr.ph:                           ; preds = %Parser_eat.exit.i
  %memberidx.i4.i62.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %30 = load ptr, ptr %0, align 8
  %memberidx2.i5.i63.i = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i4.i62.i, align 4
  %32 = load i64, ptr %memberidx2.i5.i63.i, align 4
  %33 = icmp slt i64 %31, %32
  br i1 %33, label %while.body.i64.i, label %while.body.i64.i.us

while.body.i64.i.us:                              ; preds = %while.body.i64.i.lr.ph, %while.body.i64.i.us
  br label %while.body.i64.i.us

while.body.i64.i:                                 ; preds = %while.body.i64.i.lr.ph, %Parser_advance.exit.i67.i
  %34 = phi i64 [ %43, %Parser_advance.exit.i67.i ], [ %31, %while.body.i64.i.lr.ph ]
  %35 = load i64, ptr %memberidx2.i5.i63.i, align 4
  %36 = icmp slt i64 %34, %35
  br i1 %36, label %if.entry.i.i66.i, label %Parser_advance.exit.i67.i

if.entry.i.i66.i:                                 ; preds = %while.body.i64.i
  %37 = add nsw i64 %34, 1
  store i64 %37, ptr %memberidx.i4.i62.i, align 4
  %38 = load ptr, ptr %30, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  store ptr %40, ptr %memberidx, align 8
  %.pre143 = load i64, ptr %40, align 4
  %.pre144 = load i64, ptr %memberidx3.i.i60.i, align 4
  br label %Parser_advance.exit.i67.i

Parser_advance.exit.i67.i:                        ; preds = %if.entry.i.i66.i, %while.body.i64.i
  %41 = phi i64 [ %.pre144, %if.entry.i.i66.i ], [ 0, %while.body.i64.i ]
  %42 = phi i64 [ %.pre143, %if.entry.i.i66.i ], [ 33, %while.body.i64.i ]
  %43 = phi i64 [ %37, %if.entry.i.i66.i ], [ %34, %while.body.i64.i ]
  %44 = icmp eq i64 %42, 33
  %45 = icmp eq i64 %41, 0
  %46 = and i1 %44, %45
  br i1 %46, label %while.body.i64.i, label %Parser_new_lines.exit68.i

Parser_new_lines.exit68.i:                        ; preds = %Parser_advance.exit.i67.i, %Parser_eat.exit.i
  %47 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 27)
  %48 = load ptr, ptr %memberidx, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 33
  %51 = load ptr, ptr %memberidx2.i.i59.i, align 8
  %memberidx3.i.i48.i122 = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx3.i.i48.i122, align 4
  %53 = icmp eq i64 %52, 0
  %54 = and i1 %50, %53
  br i1 %54, label %while.body.i52.i.lr.ph, label %while.entry.i.preheader

while.body.i52.i.lr.ph:                           ; preds = %Parser_new_lines.exit68.i
  %memberidx.i4.i50.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %55 = load ptr, ptr %0, align 8
  %memberidx2.i5.i51.i = getelementptr inbounds %Array_Token_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx.i4.i50.i, align 4
  %57 = load i64, ptr %memberidx2.i5.i51.i, align 4
  %58 = icmp slt i64 %56, %57
  br i1 %58, label %while.body.i52.i, label %while.body.i52.i.us

while.body.i52.i.us:                              ; preds = %while.body.i52.i.lr.ph, %while.body.i52.i.us
  br label %while.body.i52.i.us

while.entry.i.preheader:                          ; preds = %Parser_advance.exit.i55.i, %Parser_new_lines.exit68.i
  %59 = phi i64 [ %52, %Parser_new_lines.exit68.i ], [ %69, %Parser_advance.exit.i55.i ]
  %.fr120 = freeze i64 %59
  %60 = icmp eq i64 %.fr120, 0
  br i1 %60, label %switch.early.test.lr.ph, label %Parser_parse_match_expression.exit

switch.early.test.lr.ph:                          ; preds = %while.entry.i.preheader
  %memberidx.i41.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %switch.early.test

while.body.i52.i:                                 ; preds = %while.body.i52.i.lr.ph, %Parser_advance.exit.i55.i
  %61 = phi i64 [ %69, %Parser_advance.exit.i55.i ], [ 0, %while.body.i52.i.lr.ph ]
  %62 = phi i64 [ %72, %Parser_advance.exit.i55.i ], [ %56, %while.body.i52.i.lr.ph ]
  %63 = load i64, ptr %memberidx2.i5.i51.i, align 4
  %64 = icmp slt i64 %62, %63
  br i1 %64, label %if.entry.i.i54.i, label %Parser_advance.exit.i55.i

if.entry.i.i54.i:                                 ; preds = %while.body.i52.i
  %65 = add nsw i64 %62, 1
  store i64 %65, ptr %memberidx.i4.i50.i, align 4
  %66 = load ptr, ptr %55, align 8
  %67 = getelementptr inbounds ptr, ptr %66, i64 %65
  %68 = load ptr, ptr %67, align 8
  store ptr %68, ptr %memberidx, align 8
  %.pre145 = load i64, ptr %68, align 4
  %.pre146 = load i64, ptr %memberidx3.i.i48.i122, align 4
  br label %Parser_advance.exit.i55.i

Parser_advance.exit.i55.i:                        ; preds = %if.entry.i.i54.i, %while.body.i52.i
  %69 = phi i64 [ %.pre146, %if.entry.i.i54.i ], [ %61, %while.body.i52.i ]
  %70 = phi i64 [ %.pre146, %if.entry.i.i54.i ], [ 0, %while.body.i52.i ]
  %71 = phi i64 [ %.pre145, %if.entry.i.i54.i ], [ 33, %while.body.i52.i ]
  %72 = phi i64 [ %65, %if.entry.i.i54.i ], [ %62, %while.body.i52.i ]
  %73 = icmp eq i64 %71, 33
  %74 = icmp eq i64 %70, 0
  %75 = and i1 %73, %74
  br i1 %75, label %while.body.i52.i, label %while.entry.i.preheader

switch.early.test:                                ; preds = %switch.early.test.lr.ph, %ifend.i61
  %76 = load ptr, ptr %memberidx, align 8
  %77 = load i64, ptr %76, align 4
  switch i64 %77, label %else.i [
    i64 46, label %Parser_parse_match_expression.exit
    i64 28, label %Parser_parse_match_expression.exit
    i64 58, label %if.entry.i54
  ]

if.entry.i54:                                     ; preds = %switch.early.test
  %78 = load i64, ptr %memberidx.i41.i, align 4
  %79 = load ptr, ptr %0, align 8
  %memberidx2.i.i53 = getelementptr inbounds %Array_Token_, ptr %79, i64 0, i32 1
  %80 = load i64, ptr %memberidx2.i.i53, align 4
  %81 = icmp slt i64 %78, %80
  br i1 %81, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %if.entry.i54
  %82 = add nsw i64 %78, 1
  store i64 %82, ptr %memberidx.i41.i, align 4
  %83 = load ptr, ptr %79, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  store ptr %85, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %if.entry.i54
  %86 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %87 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %87, ptr %memberidx3.i72.i, align 8
  %88 = load ptr, ptr %memberidx, align 8
  %89 = load i64, ptr %88, align 4
  %90 = icmp eq i64 %89, 33
  %91 = load ptr, ptr %memberidx2.i.i59.i, align 8
  %memberidx3.i.i32.i117 = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 1
  %92 = load i64, ptr %memberidx3.i.i32.i117, align 4
  %93 = icmp eq i64 %92, 0
  %94 = and i1 %90, %93
  br i1 %94, label %while.body.i36.i.lr.ph, label %ifend.i61

while.body.i36.i.lr.ph:                           ; preds = %Parser_advance.exit.i
  %95 = load ptr, ptr %0, align 8
  %memberidx2.i5.i35.i = getelementptr inbounds %Array_Token_, ptr %95, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i41.i, align 4
  %97 = load i64, ptr %memberidx2.i5.i35.i, align 4
  %98 = icmp slt i64 %96, %97
  br i1 %98, label %while.body.i36.i, label %while.body.i36.i.us

while.body.i36.i.us:                              ; preds = %while.body.i36.i.lr.ph, %while.body.i36.i.us
  br label %while.body.i36.i.us

while.body.i36.i:                                 ; preds = %while.body.i36.i.lr.ph, %Parser_advance.exit.i39.i
  %99 = phi i64 [ %107, %Parser_advance.exit.i39.i ], [ 0, %while.body.i36.i.lr.ph ]
  %100 = phi i64 [ %110, %Parser_advance.exit.i39.i ], [ %96, %while.body.i36.i.lr.ph ]
  %101 = load i64, ptr %memberidx2.i5.i35.i, align 4
  %102 = icmp slt i64 %100, %101
  br i1 %102, label %if.entry.i.i38.i, label %Parser_advance.exit.i39.i

if.entry.i.i38.i:                                 ; preds = %while.body.i36.i
  %103 = add nsw i64 %100, 1
  store i64 %103, ptr %memberidx.i41.i, align 4
  %104 = load ptr, ptr %95, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %103
  %106 = load ptr, ptr %105, align 8
  store ptr %106, ptr %memberidx, align 8
  %.pre147 = load i64, ptr %106, align 4
  %.pre148 = load i64, ptr %memberidx3.i.i32.i117, align 4
  br label %Parser_advance.exit.i39.i

Parser_advance.exit.i39.i:                        ; preds = %if.entry.i.i38.i, %while.body.i36.i
  %107 = phi i64 [ %.pre148, %if.entry.i.i38.i ], [ %99, %while.body.i36.i ]
  %108 = phi i64 [ %.pre148, %if.entry.i.i38.i ], [ 0, %while.body.i36.i ]
  %109 = phi i64 [ %.pre147, %if.entry.i.i38.i ], [ 33, %while.body.i36.i ]
  %110 = phi i64 [ %103, %if.entry.i.i38.i ], [ %100, %while.body.i36.i ]
  %111 = icmp eq i64 %109, 33
  %112 = icmp eq i64 %108, 0
  %113 = and i1 %111, %112
  br i1 %113, label %while.body.i36.i, label %ifend.i61

else.i:                                           ; preds = %switch.early.test
  %114 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %115 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %116 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  %117 = load ptr, ptr %memberidx, align 8
  %118 = load i64, ptr %117, align 4
  %119 = icmp eq i64 %118, 33
  %120 = load ptr, ptr %memberidx2.i.i59.i, align 8
  %memberidx3.i.i.i57118 = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 1
  %121 = load i64, ptr %memberidx3.i.i.i57118, align 4
  %122 = icmp eq i64 %121, 0
  %123 = and i1 %119, %122
  br i1 %123, label %while.body.i.i.lr.ph, label %Parser_new_lines.exit.i

while.body.i.i.lr.ph:                             ; preds = %else.i
  %124 = load ptr, ptr %0, align 8
  %memberidx2.i5.i.i = getelementptr inbounds %Array_Token_, ptr %124, i64 0, i32 1
  %.pre149 = load i64, ptr %memberidx.i41.i, align 4
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.lr.ph, %Parser_advance.exit.i.i
  %125 = phi i64 [ %.pre149, %while.body.i.i.lr.ph ], [ %134, %Parser_advance.exit.i.i ]
  %126 = load i64, ptr %memberidx2.i5.i.i, align 4
  %127 = icmp slt i64 %125, %126
  br i1 %127, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %while.body.i.i
  %128 = add nsw i64 %125, 1
  store i64 %128, ptr %memberidx.i41.i, align 4
  %129 = load ptr, ptr %124, align 8
  %130 = getelementptr inbounds ptr, ptr %129, i64 %128
  %131 = load ptr, ptr %130, align 8
  store ptr %131, ptr %memberidx, align 8
  %.pre150 = load i64, ptr %131, align 4
  %.pre151 = load i64, ptr %memberidx3.i.i.i57118, align 4
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %while.body.i.i
  %132 = phi i64 [ %.pre151, %if.entry.i.i.i ], [ 0, %while.body.i.i ]
  %133 = phi i64 [ %.pre150, %if.entry.i.i.i ], [ 33, %while.body.i.i ]
  %134 = phi i64 [ %128, %if.entry.i.i.i ], [ %125, %while.body.i.i ]
  %135 = icmp eq i64 %133, 33
  %136 = icmp eq i64 %132, 0
  %137 = and i1 %135, %136
  br i1 %137, label %while.body.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i, %else.i
  %138 = tail call ptr @malloc(i32 16)
  store ptr %114, ptr %138, align 8
  %memberidx1.i.i58 = getelementptr inbounds %MatchExpressionCaseNode, ptr %138, i64 0, i32 1
  store ptr %116, ptr %memberidx1.i.i58, align 8
  %139 = load i64, ptr %memberidx.i5.i.i, align 4
  %140 = add i64 %139, 1
  %141 = load i64, ptr %memberidx1.i.i.i51, align 4
  %142 = icmp slt i64 %141, %140
  %.pre152 = load ptr, ptr %20, align 8
  br i1 %142, label %while.body.i.i.i, label %Array_MatchExpressionCaseNode____sl__.exit.i

while.body.i.i.i:                                 ; preds = %Parser_new_lines.exit.i, %while.body.i.i.i
  %143 = phi ptr [ %147, %while.body.i.i.i ], [ %.pre152, %Parser_new_lines.exit.i ]
  %144 = phi i64 [ %148, %while.body.i.i.i ], [ %141, %Parser_new_lines.exit.i ]
  %145 = shl nuw i64 %144, 1
  store i64 %145, ptr %memberidx1.i.i.i51, align 4
  %146 = shl i64 %144, 4
  %147 = tail call ptr @realloc(ptr %143, i64 %146)
  store ptr %147, ptr %20, align 8
  %148 = load i64, ptr %memberidx1.i.i.i51, align 4
  %149 = icmp slt i64 %148, %140
  br i1 %149, label %while.body.i.i.i, label %Array_MatchExpressionCaseNode____sl__.exit.i.loopexit

Array_MatchExpressionCaseNode____sl__.exit.i.loopexit: ; preds = %while.body.i.i.i
  %.pre153 = load i64, ptr %memberidx.i5.i.i, align 4
  %.pre157 = add nsw i64 %.pre153, 1
  br label %Array_MatchExpressionCaseNode____sl__.exit.i

Array_MatchExpressionCaseNode____sl__.exit.i:     ; preds = %Parser_new_lines.exit.i, %Array_MatchExpressionCaseNode____sl__.exit.i.loopexit
  %.pre-phi = phi i64 [ %.pre157, %Array_MatchExpressionCaseNode____sl__.exit.i.loopexit ], [ %140, %Parser_new_lines.exit.i ]
  %150 = phi ptr [ %147, %Array_MatchExpressionCaseNode____sl__.exit.i.loopexit ], [ %.pre152, %Parser_new_lines.exit.i ]
  %151 = phi i64 [ %.pre153, %Array_MatchExpressionCaseNode____sl__.exit.i.loopexit ], [ %139, %Parser_new_lines.exit.i ]
  store i64 %.pre-phi, ptr %memberidx.i5.i.i, align 4
  %152 = getelementptr inbounds ptr, ptr %150, i64 %151
  store ptr %138, ptr %152, align 8
  %.pre155 = load ptr, ptr %memberidx2.i.i59.i, align 8
  %memberidx3.i44.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre155, i64 0, i32 1
  %.pre156 = load i64, ptr %memberidx3.i44.i.phi.trans.insert, align 4
  br label %ifend.i61

ifend.i61:                                        ; preds = %Parser_advance.exit.i39.i, %Parser_advance.exit.i, %Array_MatchExpressionCaseNode____sl__.exit.i
  %153 = phi i64 [ %92, %Parser_advance.exit.i ], [ %.pre156, %Array_MatchExpressionCaseNode____sl__.exit.i ], [ %107, %Parser_advance.exit.i39.i ]
  %.fr = freeze i64 %153
  %154 = icmp eq i64 %.fr, 0
  br i1 %154, label %switch.early.test, label %Parser_parse_match_expression.exit

Parser_parse_match_expression.exit:               ; preds = %ifend.i61, %switch.early.test, %switch.early.test, %while.entry.i.preheader
  %155 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 28)
  br label %common.ret115

ifend:                                            ; preds = %1
  %156 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %157 = load ptr, ptr %memberidx, align 8
  %158 = load i64, ptr %157, align 4
  %memberidx2.i.i20.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %159 = and i64 %158, -2
  %160 = icmp eq i64 %159, 8
  %161 = icmp ne i64 %158, 46
  %162 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.i21.i123 = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 1
  %163 = load i64, ptr %memberidx3.i.i21.i123, align 4
  %164 = icmp eq i64 %163, 0
  %165 = and i1 %161, %164
  %166 = and i1 %160, %165
  br i1 %166, label %while.body.i.i96.lr.ph, label %Parser_parse_bit_expression.exit.i

while.body.i.i96.lr.ph:                           ; preds = %ifend
  %167 = icmp eq i64 %158, 8
  %168 = icmp eq i64 %158, 9
  %spec.select.i.i.i = select i1 %167, i64 16, i64 0
  %common.ret.op.i.i.i = select i1 %168, i64 15, i64 %spec.select.i.i.i
  %memberidx.i9.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.body.i.i96

while.body.i.i96:                                 ; preds = %while.body.i.i96.lr.ph, %Parser_advance.exit.i31.i
  %cmp.0.i.i125 = phi ptr [ %156, %while.body.i.i96.lr.ph ], [ %177, %Parser_advance.exit.i31.i ]
  %op.0.i.i124 = phi i64 [ %common.ret.op.i.i.i, %while.body.i.i96.lr.ph ], [ %common.ret.op.i16.i.i, %Parser_advance.exit.i31.i ]
  %169 = load i64, ptr %memberidx.i9.i.i, align 4
  %170 = load ptr, ptr %0, align 8
  %memberidx2.i10.i.i = getelementptr inbounds %Array_Token_, ptr %170, i64 0, i32 1
  %171 = load i64, ptr %memberidx2.i10.i.i, align 4
  %172 = icmp slt i64 %169, %171
  br i1 %172, label %if.entry.i.i22.i, label %Parser_advance.exit.i31.i

if.entry.i.i22.i:                                 ; preds = %while.body.i.i96
  %173 = add nsw i64 %169, 1
  store i64 %173, ptr %memberidx.i9.i.i, align 4
  %174 = load ptr, ptr %170, align 8
  %175 = getelementptr inbounds ptr, ptr %174, i64 %173
  %176 = load ptr, ptr %175, align 8
  store ptr %176, ptr %memberidx, align 8
  br label %Parser_advance.exit.i31.i

Parser_advance.exit.i31.i:                        ; preds = %if.entry.i.i22.i, %while.body.i.i96
  %177 = tail call ptr @malloc(i32 48)
  %178 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %179 = load ptr, ptr %cmp.0.i.i125, align 8
  %180 = load ptr, ptr %178, align 8
  %181 = tail call ptr @malloc(i32 32)
  %182 = load i64, ptr %179, align 4
  %memberidx1.i.i.i23.i = getelementptr inbounds %FloRange, ptr %180, i64 0, i32 1
  %183 = load i64, ptr %memberidx1.i.i.i23.i, align 4
  %memberidx2.i.i.i24.i = getelementptr inbounds %FloRange, ptr %179, i64 0, i32 2
  %184 = load i64, ptr %memberidx2.i.i.i24.i, align 4
  %memberidx3.i.i.i25.i = getelementptr inbounds %FloRange, ptr %180, i64 0, i32 3
  %185 = load i64, ptr %memberidx3.i.i.i25.i, align 4
  store i64 %182, ptr %181, align 4
  %memberidx1.i.i.i.i26.i = getelementptr inbounds %FloRange, ptr %181, i64 0, i32 1
  store i64 %183, ptr %memberidx1.i.i.i.i26.i, align 4
  %memberidx2.i.i.i.i27.i = getelementptr inbounds %FloRange, ptr %181, i64 0, i32 2
  store i64 %184, ptr %memberidx2.i.i.i.i27.i, align 4
  %memberidx3.i.i.i.i28.i = getelementptr inbounds %FloRange, ptr %181, i64 0, i32 3
  store i64 %185, ptr %memberidx3.i.i.i.i28.i, align 4
  store ptr %181, ptr %177, align 8
  %memberidx.i.i.i.i29.i = getelementptr inbounds %StatementNode, ptr %177, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i29.i, align 4
  %memberidx.i.i.i30.i = getelementptr inbounds %ExpressionNode, ptr %177, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i.i30.i, align 4
  %memberidx2.i12.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %177, i64 0, i32 3
  store ptr %cmp.0.i.i125, ptr %memberidx2.i12.i.i, align 8
  %memberidx3.i13.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %177, i64 0, i32 4
  store i64 %op.0.i.i124, ptr %memberidx3.i13.i.i, align 4
  %memberidx4.i.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %177, i64 0, i32 5
  store ptr %178, ptr %memberidx4.i.i.i, align 8
  %186 = load ptr, ptr %memberidx, align 8
  %187 = load i64, ptr %186, align 4
  %188 = icmp eq i64 %187, 9
  %189 = icmp eq i64 %187, 8
  %spec.select.i15.i.i = select i1 %189, i64 16, i64 0
  %common.ret.op.i16.i.i = select i1 %188, i64 15, i64 %spec.select.i15.i.i
  %190 = and i64 %187, -2
  %191 = icmp eq i64 %190, 8
  %192 = icmp ne i64 %187, 46
  %193 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.i21.i = getelementptr inbounds %Array_FloError_, ptr %193, i64 0, i32 1
  %194 = load i64, ptr %memberidx3.i.i21.i, align 4
  %195 = icmp eq i64 %194, 0
  %196 = and i1 %192, %195
  %197 = and i1 %191, %196
  br i1 %197, label %while.body.i.i96, label %Parser_parse_bit_expression.exit.i

Parser_parse_bit_expression.exit.i:               ; preds = %Parser_advance.exit.i31.i, %ifend
  %cmp.0.i.i.lcssa = phi ptr [ %156, %ifend ], [ %177, %Parser_advance.exit.i31.i ]
  %.lcssa116 = phi i64 [ %158, %ifend ], [ %187, %Parser_advance.exit.i31.i ]
  %.lcssa = phi i1 [ %164, %ifend ], [ %195, %Parser_advance.exit.i31.i ]
  %198 = icmp eq i64 %.lcssa116, 52
  %199 = and i1 %198, %.lcssa
  br i1 %199, label %ifend.i.i, label %Parser_parse_range_expression.exit.i

ifend.i.i:                                        ; preds = %Parser_parse_bit_expression.exit.i
  %memberidx.i8.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %200 = load i64, ptr %memberidx.i8.i.i, align 4
  %201 = load ptr, ptr %0, align 8
  %memberidx2.i9.i.i = getelementptr inbounds %Array_Token_, ptr %201, i64 0, i32 1
  %202 = load i64, ptr %memberidx2.i9.i.i, align 4
  %203 = icmp slt i64 %200, %202
  br i1 %203, label %if.entry.i.i.i97, label %Parser_advance.exit.i.i98

if.entry.i.i.i97:                                 ; preds = %ifend.i.i
  %204 = add nsw i64 %200, 1
  store i64 %204, ptr %memberidx.i8.i.i, align 4
  %205 = load ptr, ptr %201, align 8
  %206 = getelementptr inbounds ptr, ptr %205, i64 %204
  %207 = load ptr, ptr %206, align 8
  store ptr %207, ptr %memberidx, align 8
  br label %Parser_advance.exit.i.i98

Parser_advance.exit.i.i98:                        ; preds = %if.entry.i.i.i97, %ifend.i.i
  %208 = tail call ptr @malloc(i32 40)
  %209 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %210 = load ptr, ptr %cmp.0.i.i.lcssa, align 8
  %211 = load ptr, ptr %209, align 8
  %212 = tail call ptr @malloc(i32 32)
  %213 = load i64, ptr %210, align 4
  %memberidx1.i.i.i13.i = getelementptr inbounds %FloRange, ptr %211, i64 0, i32 1
  %214 = load i64, ptr %memberidx1.i.i.i13.i, align 4
  %memberidx2.i.i.i14.i = getelementptr inbounds %FloRange, ptr %210, i64 0, i32 2
  %215 = load i64, ptr %memberidx2.i.i.i14.i, align 4
  %memberidx3.i.i.i15.i = getelementptr inbounds %FloRange, ptr %211, i64 0, i32 3
  %216 = load i64, ptr %memberidx3.i.i.i15.i, align 4
  store i64 %213, ptr %212, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %212, i64 0, i32 1
  store i64 %214, ptr %memberidx1.i.i.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %212, i64 0, i32 2
  store i64 %215, ptr %memberidx2.i.i.i.i.i, align 4
  %memberidx3.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %212, i64 0, i32 3
  store i64 %216, ptr %memberidx3.i.i.i.i.i, align 4
  store ptr %212, ptr %208, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %StatementNode, ptr %208, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i.i, align 4
  %memberidx.i.i.i16.i = getelementptr inbounds %ExpressionNode, ptr %208, i64 0, i32 2
  store i64 17, ptr %memberidx.i.i.i16.i, align 4
  %memberidx2.i11.i.i = getelementptr inbounds %RangeExpressionNode, ptr %208, i64 0, i32 3
  store ptr %cmp.0.i.i.lcssa, ptr %memberidx2.i11.i.i, align 8
  %memberidx3.i12.i.i = getelementptr inbounds %RangeExpressionNode, ptr %208, i64 0, i32 4
  store ptr %209, ptr %memberidx3.i12.i.i, align 8
  %.pre = load ptr, ptr %memberidx, align 8
  %.pre136 = load i64, ptr %.pre, align 4
  br label %Parser_parse_range_expression.exit.i

Parser_parse_range_expression.exit.i:             ; preds = %Parser_advance.exit.i.i98, %Parser_parse_bit_expression.exit.i
  %217 = phi i64 [ %.pre136, %Parser_advance.exit.i.i98 ], [ %.lcssa116, %Parser_parse_bit_expression.exit.i ]
  %common.ret.op.i.i99 = phi ptr [ %208, %Parser_advance.exit.i.i98 ], [ %cmp.0.i.i.lcssa, %Parser_parse_bit_expression.exit.i ]
  %.not.i = icmp eq i64 %217, 74
  br i1 %.not.i, label %ifend.i, label %Parser_parse_typecast_expression.exit

ifend.i:                                          ; preds = %Parser_parse_range_expression.exit.i
  %memberidx.i.i102 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %218 = load i64, ptr %memberidx.i.i102, align 4
  %219 = load ptr, ptr %0, align 8
  %memberidx2.i.i103 = getelementptr inbounds %Array_Token_, ptr %219, i64 0, i32 1
  %220 = load i64, ptr %memberidx2.i.i103, align 4
  %221 = icmp slt i64 %218, %220
  br i1 %221, label %if.entry.i.i105, label %Parser_advance.exit.i114

if.entry.i.i105:                                  ; preds = %ifend.i
  %222 = add nsw i64 %218, 1
  store i64 %222, ptr %memberidx.i.i102, align 4
  %223 = load ptr, ptr %219, align 8
  %224 = getelementptr inbounds ptr, ptr %223, i64 %222
  %225 = load ptr, ptr %224, align 8
  store ptr %225, ptr %memberidx, align 8
  br label %Parser_advance.exit.i114

Parser_advance.exit.i114:                         ; preds = %if.entry.i.i105, %ifend.i
  %226 = tail call ptr @malloc(i32 40)
  %227 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %228 = load ptr, ptr %common.ret.op.i.i99, align 8
  %229 = load ptr, ptr %227, align 8
  %230 = tail call ptr @malloc(i32 32)
  %231 = load i64, ptr %228, align 4
  %memberidx1.i.i.i106 = getelementptr inbounds %FloRange, ptr %229, i64 0, i32 1
  %232 = load i64, ptr %memberidx1.i.i.i106, align 4
  %memberidx2.i.i.i107 = getelementptr inbounds %FloRange, ptr %228, i64 0, i32 2
  %233 = load i64, ptr %memberidx2.i.i.i107, align 4
  %memberidx3.i.i.i108 = getelementptr inbounds %FloRange, ptr %229, i64 0, i32 3
  %234 = load i64, ptr %memberidx3.i.i.i108, align 4
  store i64 %231, ptr %230, align 4
  %memberidx1.i.i.i.i109 = getelementptr inbounds %FloRange, ptr %230, i64 0, i32 1
  store i64 %232, ptr %memberidx1.i.i.i.i109, align 4
  %memberidx2.i.i.i.i110 = getelementptr inbounds %FloRange, ptr %230, i64 0, i32 2
  store i64 %233, ptr %memberidx2.i.i.i.i110, align 4
  %memberidx3.i.i.i.i111 = getelementptr inbounds %FloRange, ptr %230, i64 0, i32 3
  store i64 %234, ptr %memberidx3.i.i.i.i111, align 4
  store ptr %230, ptr %226, align 8
  %memberidx.i.i.i.i112 = getelementptr inbounds %StatementNode, ptr %226, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i112, align 4
  %memberidx.i.i.i113 = getelementptr inbounds %ExpressionNode, ptr %226, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i113, align 4
  %memberidx2.i6.i = getelementptr inbounds %TypeCastExpressionNode, ptr %226, i64 0, i32 3
  store ptr %common.ret.op.i.i99, ptr %memberidx2.i6.i, align 8
  %memberidx3.i7.i = getelementptr inbounds %TypeCastExpressionNode, ptr %226, i64 0, i32 4
  store ptr %227, ptr %memberidx3.i7.i, align 8
  %.pre137 = load ptr, ptr %memberidx, align 8
  %.pre138 = load i64, ptr %.pre137, align 4
  br label %Parser_parse_typecast_expression.exit

Parser_parse_typecast_expression.exit:            ; preds = %Parser_parse_range_expression.exit.i, %Parser_advance.exit.i114
  %235 = phi i64 [ %.pre138, %Parser_advance.exit.i114 ], [ %217, %Parser_parse_range_expression.exit.i ]
  %common.ret.op.i101 = phi ptr [ %226, %Parser_advance.exit.i114 ], [ %common.ret.op.i.i99, %Parser_parse_range_expression.exit.i ]
  %236 = icmp eq i64 %235, 36
  %237 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.i65 = getelementptr inbounds %Array_FloError_, ptr %237, i64 0, i32 1
  %238 = load i64, ptr %memberidx3.i.i65, align 4
  %239 = icmp eq i64 %238, 0
  %240 = and i1 %236, %239
  br i1 %240, label %ifend.i68, label %Parser_parse_ternary_expression.exit

ifend.i68:                                        ; preds = %Parser_parse_typecast_expression.exit
  %memberidx.i10.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %241 = load i64, ptr %memberidx.i10.i, align 4
  %242 = load ptr, ptr %0, align 8
  %memberidx2.i11.i = getelementptr inbounds %Array_Token_, ptr %242, i64 0, i32 1
  %243 = load i64, ptr %memberidx2.i11.i, align 4
  %244 = icmp slt i64 %241, %243
  br i1 %244, label %if.entry.i.i69, label %Parser_advance.exit.i75

if.entry.i.i69:                                   ; preds = %ifend.i68
  %245 = add nsw i64 %241, 1
  store i64 %245, ptr %memberidx.i10.i, align 4
  %246 = load ptr, ptr %242, align 8
  %247 = getelementptr inbounds ptr, ptr %246, i64 %245
  %248 = load ptr, ptr %247, align 8
  store ptr %248, ptr %memberidx, align 8
  br label %Parser_advance.exit.i75

Parser_advance.exit.i75:                          ; preds = %if.entry.i.i69, %ifend.i68
  %249 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %250 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %251 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %252 = tail call ptr @malloc(i32 48)
  %253 = load ptr, ptr %common.ret.op.i101, align 8
  %254 = load ptr, ptr %251, align 8
  %255 = tail call ptr @malloc(i32 32)
  %256 = load i64, ptr %253, align 4
  %memberidx1.i.i.i70 = getelementptr inbounds %FloRange, ptr %254, i64 0, i32 1
  %257 = load i64, ptr %memberidx1.i.i.i70, align 4
  %memberidx2.i.i.i71 = getelementptr inbounds %FloRange, ptr %253, i64 0, i32 2
  %258 = load i64, ptr %memberidx2.i.i.i71, align 4
  %memberidx3.i.i.i72 = getelementptr inbounds %FloRange, ptr %254, i64 0, i32 3
  %259 = load i64, ptr %memberidx3.i.i.i72, align 4
  store i64 %256, ptr %255, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %255, i64 0, i32 1
  store i64 %257, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %255, i64 0, i32 2
  store i64 %258, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %255, i64 0, i32 3
  store i64 %259, ptr %memberidx3.i.i.i.i, align 4
  store ptr %255, ptr %252, align 8
  %memberidx.i.i.i.i73 = getelementptr inbounds %StatementNode, ptr %252, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i73, align 4
  %memberidx.i.i.i74 = getelementptr inbounds %ExpressionNode, ptr %252, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i.i74, align 4
  %memberidx2.i13.i = getelementptr inbounds %TernaryExpressionNode, ptr %252, i64 0, i32 3
  store ptr %common.ret.op.i101, ptr %memberidx2.i13.i, align 8
  %memberidx3.i14.i = getelementptr inbounds %TernaryExpressionNode, ptr %252, i64 0, i32 4
  store ptr %249, ptr %memberidx3.i14.i, align 8
  %memberidx4.i.i = getelementptr inbounds %TernaryExpressionNode, ptr %252, i64 0, i32 5
  store ptr %251, ptr %memberidx4.i.i, align 8
  %260 = load ptr, ptr %249, align 8
  %261 = load ptr, ptr %251, align 8
  %262 = tail call ptr @malloc(i32 32)
  %263 = load i64, ptr %260, align 4
  %memberidx1.i15.i.i = getelementptr inbounds %FloRange, ptr %261, i64 0, i32 1
  %264 = load i64, ptr %memberidx1.i15.i.i, align 4
  %memberidx2.i16.i.i = getelementptr inbounds %FloRange, ptr %260, i64 0, i32 2
  %265 = load i64, ptr %memberidx2.i16.i.i, align 4
  %memberidx3.i17.i.i = getelementptr inbounds %FloRange, ptr %261, i64 0, i32 3
  %266 = load i64, ptr %memberidx3.i17.i.i, align 4
  store i64 %263, ptr %262, align 4
  %memberidx1.i.i18.i.i = getelementptr inbounds %FloRange, ptr %262, i64 0, i32 1
  store i64 %264, ptr %memberidx1.i.i18.i.i, align 4
  %memberidx2.i.i19.i.i = getelementptr inbounds %FloRange, ptr %262, i64 0, i32 2
  store i64 %265, ptr %memberidx2.i.i19.i.i, align 4
  %memberidx3.i.i20.i.i = getelementptr inbounds %FloRange, ptr %262, i64 0, i32 3
  store i64 %266, ptr %memberidx3.i.i20.i.i, align 4
  store ptr %262, ptr %252, align 8
  %.pre139 = load ptr, ptr %memberidx, align 8
  %.pre140 = load i64, ptr %.pre139, align 4
  %.pre141 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i49.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre141, i64 0, i32 1
  %.pre142 = load i64, ptr %memberidx3.i49.phi.trans.insert, align 4
  br label %Parser_parse_ternary_expression.exit

Parser_parse_ternary_expression.exit:             ; preds = %Parser_parse_typecast_expression.exit, %Parser_advance.exit.i75
  %267 = phi i64 [ %.pre142, %Parser_advance.exit.i75 ], [ %238, %Parser_parse_typecast_expression.exit ]
  %268 = phi i64 [ %.pre140, %Parser_advance.exit.i75 ], [ %235, %Parser_parse_typecast_expression.exit ]
  %common.ret.op.i66 = phi ptr [ %252, %Parser_advance.exit.i75 ], [ %common.ret.op.i101, %Parser_parse_typecast_expression.exit ]
  %269 = icmp eq i64 %268, 69
  %270 = icmp eq i64 %267, 0
  %271 = and i1 %269, %270
  br i1 %271, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %Parser_parse_ternary_expression.exit
  %memberidx.i41 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %272 = load i64, ptr %memberidx.i41, align 4
  %273 = load ptr, ptr %0, align 8
  %memberidx2.i42 = getelementptr inbounds %Array_Token_, ptr %273, i64 0, i32 1
  %274 = load i64, ptr %memberidx2.i42, align 4
  %275 = icmp slt i64 %272, %274
  br i1 %275, label %if.entry.i44, label %Parser_advance.exit46

if.entry.i44:                                     ; preds = %if.entry4
  %276 = add nsw i64 %272, 1
  store i64 %276, ptr %memberidx.i41, align 4
  %277 = load ptr, ptr %273, align 8
  %278 = getelementptr inbounds ptr, ptr %277, i64 %276
  %279 = load ptr, ptr %278, align 8
  store ptr %279, ptr %memberidx, align 8
  br label %Parser_advance.exit46

Parser_advance.exit46:                            ; preds = %if.entry4, %if.entry.i44
  %280 = tail call ptr @malloc(i32 48)
  %281 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %282 = load ptr, ptr %common.ret.op.i66, align 8
  %283 = load ptr, ptr %281, align 8
  %284 = tail call ptr @malloc(i32 32)
  %285 = load i64, ptr %282, align 4
  %memberidx1.i.i30 = getelementptr inbounds %FloRange, ptr %283, i64 0, i32 1
  %286 = load i64, ptr %memberidx1.i.i30, align 4
  %memberidx2.i.i31 = getelementptr inbounds %FloRange, ptr %282, i64 0, i32 2
  %287 = load i64, ptr %memberidx2.i.i31, align 4
  %memberidx3.i.i32 = getelementptr inbounds %FloRange, ptr %283, i64 0, i32 3
  %288 = load i64, ptr %memberidx3.i.i32, align 4
  store i64 %285, ptr %284, align 4
  %memberidx1.i.i.i33 = getelementptr inbounds %FloRange, ptr %284, i64 0, i32 1
  store i64 %286, ptr %memberidx1.i.i.i33, align 4
  %memberidx2.i.i.i34 = getelementptr inbounds %FloRange, ptr %284, i64 0, i32 2
  store i64 %287, ptr %memberidx2.i.i.i34, align 4
  %memberidx3.i.i.i35 = getelementptr inbounds %FloRange, ptr %284, i64 0, i32 3
  store i64 %288, ptr %memberidx3.i.i.i35, align 4
  store ptr %284, ptr %280, align 8
  %memberidx.i.i.i36 = getelementptr inbounds %StatementNode, ptr %280, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i36, align 4
  %memberidx.i.i37 = getelementptr inbounds %ExpressionNode, ptr %280, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i37, align 4
  %memberidx2.i38 = getelementptr inbounds %BinaryExpressionNode, ptr %280, i64 0, i32 3
  store ptr %common.ret.op.i66, ptr %memberidx2.i38, align 8
  %memberidx3.i39 = getelementptr inbounds %BinaryExpressionNode, ptr %280, i64 0, i32 4
  store i64 18, ptr %memberidx3.i39, align 4
  %memberidx4.i40 = getelementptr inbounds %BinaryExpressionNode, ptr %280, i64 0, i32 5
  store ptr %281, ptr %memberidx4.i40, align 8
  br label %common.ret115

ifend6:                                           ; preds = %Parser_parse_ternary_expression.exit
  switch i64 %268, label %ifend51.i [
    i64 38, label %Parser_is_assign_op.exit
    i64 12, label %Parser_is_assign_op.exit.fold.split
    i64 13, label %Parser_is_assign_op.exit.fold.split86
    i64 14, label %Parser_is_assign_op.exit.fold.split87
    i64 15, label %Parser_is_assign_op.exit.fold.split88
    i64 16, label %Parser_is_assign_op.exit.fold.split89
    i64 17, label %Parser_is_assign_op.exit.fold.split90
    i64 18, label %Parser_is_assign_op.exit.fold.split91
    i64 19, label %Parser_is_assign_op.exit.fold.split92
    i64 20, label %Parser_is_assign_op.exit.fold.split93
    i64 22, label %Parser_is_assign_op.exit.fold.split94
  ]

ifend51.i:                                        ; preds = %ifend6
  %289 = icmp eq i64 %268, 21
  %spec.select.i = select i1 %289, i64 30, i64 0
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split:              ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split86:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split87:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split88:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split89:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split90:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split91:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split92:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split93:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split94:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit:                         ; preds = %ifend6, %Parser_is_assign_op.exit.fold.split94, %Parser_is_assign_op.exit.fold.split93, %Parser_is_assign_op.exit.fold.split92, %Parser_is_assign_op.exit.fold.split91, %Parser_is_assign_op.exit.fold.split90, %Parser_is_assign_op.exit.fold.split89, %Parser_is_assign_op.exit.fold.split88, %Parser_is_assign_op.exit.fold.split87, %Parser_is_assign_op.exit.fold.split86, %Parser_is_assign_op.exit.fold.split, %ifend51.i
  %common.ret.op.i = phi i64 [ 19, %ifend6 ], [ %spec.select.i, %ifend51.i ], [ 22, %Parser_is_assign_op.exit.fold.split ], [ 21, %Parser_is_assign_op.exit.fold.split86 ], [ 20, %Parser_is_assign_op.exit.fold.split87 ], [ 23, %Parser_is_assign_op.exit.fold.split88 ], [ 24, %Parser_is_assign_op.exit.fold.split89 ], [ 25, %Parser_is_assign_op.exit.fold.split90 ], [ 26, %Parser_is_assign_op.exit.fold.split91 ], [ 27, %Parser_is_assign_op.exit.fold.split92 ], [ 28, %Parser_is_assign_op.exit.fold.split93 ], [ 29, %Parser_is_assign_op.exit.fold.split94 ]
  %290 = icmp ne i64 %common.ret.op.i, 0
  %291 = icmp ne i64 %268, 46
  %292 = and i1 %291, %270
  %293 = and i1 %292, %290
  br i1 %293, label %ifend9, label %common.ret115

ifend9:                                           ; preds = %Parser_is_assign_op.exit
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %294 = load i64, ptr %memberidx.i, align 4
  %295 = load ptr, ptr %0, align 8
  %memberidx2.i24 = getelementptr inbounds %Array_Token_, ptr %295, i64 0, i32 1
  %296 = load i64, ptr %memberidx2.i24, align 4
  %297 = icmp slt i64 %294, %296
  br i1 %297, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %ifend9
  %298 = add nsw i64 %294, 1
  store i64 %298, ptr %memberidx.i, align 4
  %299 = load ptr, ptr %295, align 8
  %300 = getelementptr inbounds ptr, ptr %299, i64 %298
  %301 = load ptr, ptr %300, align 8
  store ptr %301, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend9, %if.entry.i
  %302 = tail call ptr @malloc(i32 48)
  %303 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %304 = load ptr, ptr %common.ret.op.i66, align 8
  %305 = load ptr, ptr %303, align 8
  %306 = tail call ptr @malloc(i32 32)
  %307 = load i64, ptr %304, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %305, i64 0, i32 1
  %308 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %304, i64 0, i32 2
  %309 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %305, i64 0, i32 3
  %310 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %307, ptr %306, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %306, i64 0, i32 1
  store i64 %308, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %306, i64 0, i32 2
  store i64 %309, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %306, i64 0, i32 3
  store i64 %310, ptr %memberidx3.i.i.i, align 4
  store ptr %306, ptr %302, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %302, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %302, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i = getelementptr inbounds %BinaryExpressionNode, ptr %302, i64 0, i32 3
  store ptr %common.ret.op.i66, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %BinaryExpressionNode, ptr %302, i64 0, i32 4
  store i64 %common.ret.op.i, ptr %memberidx3.i, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %302, i64 0, i32 5
  store ptr %303, ptr %memberidx4.i, align 8
  br label %common.ret115
}

define internal fastcc ptr @TypeChecker_check_module(ptr %0, ptr nocapture readonly %1, ptr %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  store i1 false, ptr %memberidx, align 1
  %memberidx4 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %3 = load ptr, ptr %memberidx4, align 8
  %4 = tail call ptr @malloc(i32 80)
  store ptr %2, ptr %4, align 8
  %memberidx1.i164 = getelementptr inbounds %Module, ptr %4, i64 0, i32 4
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %5, ptr %memberidx1.i164, align 8
  %memberidx4.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 24)
  %memberidx.i33.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 1
  store i64 0, ptr %memberidx.i33.i, align 4
  %memberidx1.i34.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 2
  store i64 8, ptr %memberidx1.i34.i, align 4
  %8 = tail call ptr @malloc(i32 64)
  store ptr %8, ptr %7, align 8
  store i64 0, ptr %memberidx.i33.i, align 4
  store ptr %7, ptr %memberidx4.i, align 8
  %memberidx7.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 3
  %9 = tail call ptr @malloc(i32 24)
  %memberidx.i35.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 1
  store i64 0, ptr %memberidx.i35.i, align 4
  %memberidx1.i36.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 2
  store i64 8, ptr %memberidx1.i36.i, align 4
  %10 = tail call ptr @malloc(i32 64)
  store ptr %10, ptr %9, align 8
  store i64 0, ptr %memberidx.i35.i, align 4
  store ptr %9, ptr %memberidx7.i, align 8
  %memberidx10.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 6
  %11 = tail call ptr @malloc(i32 24)
  %memberidx.i37.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 1
  store i64 0, ptr %memberidx.i37.i, align 4
  %memberidx1.i38.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 2
  store i64 8, ptr %memberidx1.i38.i, align 4
  %12 = tail call ptr @malloc(i32 64)
  store ptr %12, ptr %11, align 8
  store i64 0, ptr %memberidx.i37.i, align 4
  store ptr %11, ptr %memberidx10.i, align 8
  %memberidx13.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 7
  %13 = tail call ptr @malloc(i32 24)
  %memberidx.i39.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 1
  store i64 0, ptr %memberidx.i39.i, align 4
  %memberidx1.i40.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 2
  store i64 8, ptr %memberidx1.i40.i, align 4
  %14 = tail call ptr @malloc(i32 64)
  store ptr %14, ptr %13, align 8
  store i64 0, ptr %memberidx.i39.i, align 4
  store ptr %13, ptr %memberidx13.i, align 8
  %memberidx16.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 8
  %15 = tail call ptr @malloc(i32 24)
  %memberidx.i41.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 1
  store i64 0, ptr %memberidx.i41.i, align 4
  %memberidx1.i42.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 2
  store i64 8, ptr %memberidx1.i42.i, align 4
  %16 = tail call ptr @malloc(i32 64)
  store ptr %16, ptr %15, align 8
  store i64 0, ptr %memberidx.i41.i, align 4
  store ptr %15, ptr %memberidx16.i, align 8
  %memberidx19.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 9
  %17 = tail call ptr @malloc(i32 24)
  %memberidx.i43.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 1
  store i64 0, ptr %memberidx.i43.i, align 4
  %memberidx1.i44.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 2
  store i64 8, ptr %memberidx1.i44.i, align 4
  %18 = tail call ptr @malloc(i32 64)
  store ptr %18, ptr %17, align 8
  store i64 0, ptr %memberidx.i43.i, align 4
  store ptr %17, ptr %memberidx19.i, align 8
  %memberidx22.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 2
  %19 = tail call ptr @malloc(i32 24)
  %memberidx.i45.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 1
  store i64 0, ptr %memberidx.i45.i, align 4
  %memberidx1.i46.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 2
  store i64 8, ptr %memberidx1.i46.i, align 4
  %20 = tail call ptr @malloc(i32 64)
  store ptr %20, ptr %19, align 8
  store i64 0, ptr %memberidx.i45.i, align 4
  store ptr %19, ptr %memberidx22.i, align 8
  %21 = load ptr, ptr %0, align 8
  %22 = load ptr, ptr %21, align 8
  %memberidx7 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx7, align 4
  %24 = add i64 %23, 1
  %memberidx.i.i166 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %memberidx.i.i166, align 4
  %26 = icmp slt i64 %25, %24
  %.pre = load ptr, ptr %22, align 8
  br i1 %26, label %while.body.i.i, label %Array_Module____sl__.exit

while.body.i.i:                                   ; preds = %for.entry, %while.body.i.i
  %27 = phi ptr [ %31, %while.body.i.i ], [ %.pre, %for.entry ]
  %28 = phi i64 [ %32, %while.body.i.i ], [ %25, %for.entry ]
  %29 = shl nuw i64 %28, 1
  store i64 %29, ptr %memberidx.i.i166, align 4
  %30 = shl i64 %28, 4
  %31 = tail call ptr @realloc(ptr %27, i64 %30)
  store ptr %31, ptr %22, align 8
  %32 = load i64, ptr %memberidx.i.i166, align 4
  %33 = icmp slt i64 %32, %24
  br i1 %33, label %while.body.i.i, label %Array_Module____sl__.exit.loopexit

Array_Module____sl__.exit.loopexit:               ; preds = %while.body.i.i
  %.pre382 = load i64, ptr %memberidx7, align 4
  %.pre402 = add nsw i64 %.pre382, 1
  br label %Array_Module____sl__.exit

Array_Module____sl__.exit:                        ; preds = %for.entry, %Array_Module____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre402, %Array_Module____sl__.exit.loopexit ], [ %24, %for.entry ]
  %34 = phi ptr [ %31, %Array_Module____sl__.exit.loopexit ], [ %.pre, %for.entry ]
  %35 = phi i64 [ %.pre382, %Array_Module____sl__.exit.loopexit ], [ %23, %for.entry ]
  store i64 %.pre-phi, ptr %memberidx7, align 4
  %36 = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %4, ptr %36, align 8
  %37 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %23)
  %memberidx10 = getelementptr inbounds %Module, ptr %4, i64 0, i32 5
  %38 = load ptr, ptr %37, align 8
  store ptr %38, ptr %memberidx10, align 8
  %memberidx12 = getelementptr inbounds %Scope, ptr %37, i64 0, i32 1
  %39 = load ptr, ptr %memberidx12, align 8
  %40 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %40, align 8
  %41 = tail call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  %memberidx1.i.i167 = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i167, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %41, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %39, ptr nonnull %41, ptr null)
  %42 = load ptr, ptr %memberidx12, align 8
  %43 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %43, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %44 = tail call ptr @malloc(i32 24)
  store ptr %43, ptr %44, align 8
  %memberidx1.i.i168 = getelementptr inbounds %String, ptr %44, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i168, align 4
  %memberidx2.i.i169 = getelementptr inbounds %String, ptr %44, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i169, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %42, ptr nonnull %44, ptr null)
  %45 = load ptr, ptr %memberidx12, align 8
  %46 = tail call ptr @malloc(i32 4)
  store i32 1819047278, ptr %46, align 8
  %47 = tail call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  %memberidx1.i.i170 = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i170, align 4
  %memberidx2.i.i171 = getelementptr inbounds %String, ptr %47, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i171, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %45, ptr nonnull %47, ptr null)
  %48 = load ptr, ptr %37, align 8
  store ptr %48, ptr %memberidx4, align 8
  %memberidx18 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %memberidx19 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %memberidx20 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx18, i8 0, i64 24, i1 false)
  %49 = load ptr, ptr %memberidx20, align 8
  %50 = tail call ptr @malloc(i32 25)
  %51 = load ptr, ptr %49, align 8
  %memberidx1.i172 = getelementptr inbounds %Array_ImportNode_, ptr %49, i64 0, i32 1
  %52 = load i64, ptr %memberidx1.i172, align 4
  store i1 false, ptr %50, align 1
  %memberidx1.i.i173 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %50, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i173, align 4
  %memberidx2.i.i174 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %50, i64 0, i32 3
  store ptr %51, ptr %memberidx2.i.i174, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %50, i64 0, i32 2
  store i64 %52, ptr %memberidx3.i.i, align 4
  %memberidx.i187 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.next

for.next:                                         ; preds = %for.body, %Array_Module____sl__.exit
  %53 = phi i64 [ %54, %for.body ], [ 0, %Array_Module____sl__.exit ]
  %.not415 = icmp slt i64 %53, %52
  br i1 %.not415, label %for.body, label %for.end

for.body:                                         ; preds = %for.next
  %54 = add nuw nsw i64 %53, 1
  %55 = getelementptr inbounds ptr, ptr %51, i64 %53
  %56 = load ptr, ptr %55, align 8
  tail call fastcc void @TypeChecker_check_module_import(ptr nonnull %0, ptr %56)
  %57 = load ptr, ptr %memberidx.i187, align 8
  %memberidx1.i188 = getelementptr inbounds %Compiler, ptr %57, i64 0, i32 5
  %58 = load ptr, ptr %memberidx1.i188, align 8
  %memberidx2.i189 = getelementptr inbounds %Array_FloError_, ptr %58, i64 0, i32 1
  %59 = load i64, ptr %memberidx2.i189, align 4
  %60 = icmp sgt i64 %59, 0
  br i1 %60, label %common.ret.loopexit, label %for.next

for.end:                                          ; preds = %for.next
  tail call void @free(ptr nonnull %50)
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 2
  %61 = load ptr, ptr %memberidx26, align 8
  %62 = tail call ptr @malloc(i32 25)
  %63 = load ptr, ptr %61, align 8
  %memberidx1.i190 = getelementptr inbounds %Array_EnumNode_, ptr %61, i64 0, i32 1
  %64 = load i64, ptr %memberidx1.i190, align 4
  store i1 false, ptr %62, align 1
  %memberidx1.i.i191 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %62, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i191, align 4
  %memberidx2.i.i192 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %62, i64 0, i32 3
  store ptr %63, ptr %memberidx2.i.i192, align 8
  %memberidx3.i.i193 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %62, i64 0, i32 2
  store i64 %64, ptr %memberidx3.i.i193, align 4
  %65 = icmp slt i64 %64, 1
  br i1 %65, label %for.end25, label %for.body24

common.ret.loopexit:                              ; preds = %for.body
  store i64 %54, ptr %memberidx1.i.i173, align 4
  store i1 false, ptr %50, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %for.end68, %for.end31, %ifend103, %TypeChecker_error.exit
  ret ptr %4

for.body24:                                       ; preds = %for.end, %for.body24
  %.in = phi ptr [ %69, %for.body24 ], [ %63, %for.end ]
  %66 = phi i64 [ %68, %for.body24 ], [ 1, %for.end ]
  %67 = load ptr, ptr %.in, align 8
  tail call fastcc void @TypeChecker_declare_enum_within_module(ptr nonnull %0, ptr %67)
  %68 = add nuw nsw i64 %66, 1
  %69 = getelementptr inbounds ptr, ptr %63, i64 %66
  %.not416 = icmp slt i64 %66, %64
  br i1 %.not416, label %for.body24, label %for.end25

for.end25:                                        ; preds = %for.body24, %for.end
  tail call void @free(ptr nonnull %62)
  %memberidx32 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 1
  %70 = load ptr, ptr %memberidx32, align 8
  %71 = tail call ptr @malloc(i32 25)
  %72 = load ptr, ptr %70, align 8
  %memberidx1.i197 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %70, i64 0, i32 1
  %73 = load i64, ptr %memberidx1.i197, align 4
  store i1 false, ptr %71, align 1
  %memberidx1.i.i198 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %71, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i198, align 4
  %memberidx2.i.i199 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %71, i64 0, i32 3
  store ptr %72, ptr %memberidx2.i.i199, align 8
  %memberidx3.i.i200 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %71, i64 0, i32 2
  store i64 %73, ptr %memberidx3.i.i200, align 4
  %74 = icmp slt i64 %73, 1
  br i1 %74, label %for.end31, label %for.body30

for.body30:                                       ; preds = %for.end25, %for.body30
  %.in346 = phi ptr [ %78, %for.body30 ], [ %72, %for.end25 ]
  %75 = phi i64 [ %77, %for.body30 ], [ 1, %for.end25 ]
  %76 = load ptr, ptr %.in346, align 8
  tail call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr %76)
  %77 = add nuw nsw i64 %75, 1
  %78 = getelementptr inbounds ptr, ptr %72, i64 %75
  %.not417 = icmp slt i64 %75, %73
  br i1 %.not417, label %for.body30, label %for.end31

for.end31:                                        ; preds = %for.body30, %for.end25
  tail call void @free(ptr nonnull %71)
  %79 = load ptr, ptr %memberidx.i187, align 8
  %memberidx1.i205 = getelementptr inbounds %Compiler, ptr %79, i64 0, i32 5
  %80 = load ptr, ptr %memberidx1.i205, align 8
  %memberidx2.i206 = getelementptr inbounds %Array_FloError_, ptr %80, i64 0, i32 1
  %81 = load i64, ptr %memberidx2.i206, align 4
  %82 = icmp sgt i64 %81, 0
  br i1 %82, label %common.ret, label %for.entry37

for.entry37:                                      ; preds = %for.end31
  %memberidx41 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 6
  %83 = load ptr, ptr %memberidx41, align 8
  %84 = tail call ptr @malloc(i32 25)
  %85 = load ptr, ptr %83, align 8
  %memberidx1.i207 = getelementptr inbounds %Array_TypeAliasNode_, ptr %83, i64 0, i32 1
  %86 = load i64, ptr %memberidx1.i207, align 4
  store i1 false, ptr %84, align 1
  %memberidx1.i.i208 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %84, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i208, align 4
  %memberidx2.i.i209 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %84, i64 0, i32 3
  store ptr %85, ptr %memberidx2.i.i209, align 8
  %memberidx3.i.i210 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %84, i64 0, i32 2
  store i64 %86, ptr %memberidx3.i.i210, align 4
  %87 = icmp slt i64 %86, 1
  br i1 %87, label %for.end40, label %for.body39.lr.ph

for.body39.lr.ph:                                 ; preds = %for.entry37
  %memberidx52 = getelementptr inbounds %Scope, ptr %37, i64 0, i32 6
  br label %for.body39

for.body39:                                       ; preds = %for.body39.lr.ph, %ifend49
  %.in347 = phi ptr [ %85, %for.body39.lr.ph ], [ %133, %ifend49 ]
  %88 = phi i64 [ 1, %for.body39.lr.ph ], [ %132, %ifend49 ]
  %89 = load ptr, ptr %.in347, align 8
  %memberidx43 = getelementptr inbounds %TypeAliasNode, ptr %89, i64 0, i32 1
  %90 = load ptr, ptr %memberidx43, align 8
  %91 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %90)
  %92 = load ptr, ptr %89, align 8
  %memberidx45 = getelementptr inbounds %IdentifierToken, ptr %92, i64 0, i32 2
  %93 = load ptr, ptr %memberidx45, align 8
  %94 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %93)
  %95 = load i64, ptr %94, align 4
  %.not = icmp eq i64 %95, 21
  br i1 %.not, label %ifend49, label %if.entry47

for.end40:                                        ; preds = %ifend49, %for.entry37
  tail call void @free(ptr nonnull %84)
  %memberidx57 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 4
  %96 = load ptr, ptr %memberidx57, align 8
  %97 = tail call ptr @malloc(i32 25)
  %98 = load ptr, ptr %96, align 8
  %memberidx1.i214 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %96, i64 0, i32 1
  %99 = load i64, ptr %memberidx1.i214, align 4
  store i1 false, ptr %97, align 1
  %memberidx1.i.i215 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %97, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i215, align 4
  %memberidx2.i.i216 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %97, i64 0, i32 3
  store ptr %98, ptr %memberidx2.i.i216, align 8
  %memberidx3.i.i217 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %97, i64 0, i32 2
  store i64 %99, ptr %memberidx3.i.i217, align 4
  %100 = icmp slt i64 %99, 1
  br i1 %100, label %for.end56, label %for.body55

if.entry47:                                       ; preds = %for.body39
  store i64 %88, ptr %memberidx1.i.i208, align 4
  store i1 false, ptr %84, align 1
  %memberidx.i218 = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  %101 = load i64, ptr %memberidx.i218, align 4
  %102 = trunc i64 %101 to i32
  %103 = add i32 %102, 1
  %104 = tail call ptr @malloc(i32 %103)
  %105 = load ptr, ptr %93, align 8
  %106 = load i64, ptr %memberidx.i218, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %104, ptr align 8 %105, i64 %106, i1 false)
  %107 = getelementptr inbounds i8, ptr %104, i64 %106
  store i8 0, ptr %107, align 1
  %108 = alloca ptr, align 8
  %109 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %108, ptr nonnull @101, ptr %104)
  %110 = load ptr, ptr %108, align 8
  %111 = tail call ptr @malloc(i32 24)
  store ptr %110, ptr %111, align 8
  %memberidx1.i219 = getelementptr inbounds %String, ptr %111, i64 0, i32 1
  store i64 %109, ptr %memberidx1.i219, align 4
  %memberidx2.i220 = getelementptr inbounds %String, ptr %111, i64 0, i32 2
  store i64 %109, ptr %memberidx2.i220, align 4
  tail call void @free(ptr %104)
  %112 = load ptr, ptr %89, align 8
  %memberidx51 = getelementptr inbounds %Token, ptr %112, i64 0, i32 1
  %113 = load ptr, ptr %memberidx51, align 8
  %114 = load ptr, ptr %memberidx.i187, align 8
  %memberidx1.i222 = getelementptr inbounds %Compiler, ptr %114, i64 0, i32 5
  %115 = load ptr, ptr %memberidx1.i222, align 8
  %116 = call ptr @malloc(i32 24)
  store i64 1, ptr %116, align 4
  %memberidx1.i.i223 = getelementptr inbounds %FloError, ptr %116, i64 0, i32 2
  store ptr %113, ptr %memberidx1.i.i223, align 8
  %memberidx2.i.i224 = getelementptr inbounds %FloError, ptr %116, i64 0, i32 1
  store ptr %111, ptr %memberidx2.i.i224, align 8
  %memberidx.i.i225 = getelementptr inbounds %Array_FloError_, ptr %115, i64 0, i32 1
  %117 = load i64, ptr %memberidx.i.i225, align 4
  %118 = add i64 %117, 1
  %memberidx.i.i.i226 = getelementptr inbounds %Array_FloError_, ptr %115, i64 0, i32 2
  %119 = load i64, ptr %memberidx.i.i.i226, align 4
  %120 = icmp slt i64 %119, %118
  %.pre384 = load ptr, ptr %115, align 8
  br i1 %120, label %while.body.i.i.i228, label %TypeChecker_error.exit

while.body.i.i.i228:                              ; preds = %if.entry47, %while.body.i.i.i228
  %121 = phi ptr [ %125, %while.body.i.i.i228 ], [ %.pre384, %if.entry47 ]
  %122 = phi i64 [ %126, %while.body.i.i.i228 ], [ %119, %if.entry47 ]
  %123 = shl nuw i64 %122, 1
  store i64 %123, ptr %memberidx.i.i.i226, align 4
  %124 = shl i64 %122, 4
  %125 = call ptr @realloc(ptr %121, i64 %124)
  store ptr %125, ptr %115, align 8
  %126 = load i64, ptr %memberidx.i.i.i226, align 4
  %127 = icmp slt i64 %126, %118
  br i1 %127, label %while.body.i.i.i228, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i228
  %.pre385 = load i64, ptr %memberidx.i.i225, align 4
  %.pre413 = add nsw i64 %.pre385, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry47, %TypeChecker_error.exit.loopexit
  %.pre-phi414 = phi i64 [ %.pre413, %TypeChecker_error.exit.loopexit ], [ %118, %if.entry47 ]
  %128 = phi ptr [ %125, %TypeChecker_error.exit.loopexit ], [ %.pre384, %if.entry47 ]
  %129 = phi i64 [ %.pre385, %TypeChecker_error.exit.loopexit ], [ %117, %if.entry47 ]
  store i64 %.pre-phi414, ptr %memberidx.i.i225, align 4
  %130 = getelementptr inbounds ptr, ptr %128, i64 %129
  store ptr %116, ptr %130, align 8
  br label %common.ret

ifend49:                                          ; preds = %for.body39
  %131 = load ptr, ptr %memberidx52, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr %131, ptr %93, ptr %91)
  %132 = add nuw nsw i64 %88, 1
  %133 = getelementptr inbounds ptr, ptr %85, i64 %88
  %.not418 = icmp slt i64 %88, %86
  br i1 %.not418, label %for.body39, label %for.end40

for.body55:                                       ; preds = %for.end40, %TypeChecker_declare_global_const.exit
  %.in348 = phi ptr [ %164, %TypeChecker_declare_global_const.exit ], [ %98, %for.end40 ]
  %134 = phi i64 [ %163, %TypeChecker_declare_global_const.exit ], [ 1, %for.end40 ]
  %135 = load ptr, ptr %.in348, align 8
  %136 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr nonnull %0, ptr %135)
  %137 = load ptr, ptr %memberidx.i187, align 8
  %memberidx1.i.i233 = getelementptr inbounds %Compiler, ptr %137, i64 0, i32 5
  %138 = load ptr, ptr %memberidx1.i.i233, align 8
  %memberidx2.i.i234 = getelementptr inbounds %Array_FloError_, ptr %138, i64 0, i32 1
  %139 = load i64, ptr %memberidx2.i.i234, align 4
  %140 = icmp sgt i64 %139, 0
  br i1 %140, label %TypeChecker_declare_global_const.exit, label %ifend.i237

ifend.i237:                                       ; preds = %for.body55
  %memberidx.i235 = getelementptr inbounds %ConstDeclaration, ptr %136, i64 0, i32 3
  store i1 true, ptr %memberidx.i235, align 1
  %141 = load ptr, ptr %memberidx4, align 8
  %142 = load i64, ptr %141, align 4
  %143 = load ptr, ptr %0, align 8
  %144 = load ptr, ptr %143, align 8
  %145 = load ptr, ptr %144, align 8
  %146 = getelementptr inbounds ptr, ptr %145, i64 %142
  %147 = load ptr, ptr %146, align 8
  %memberidx1.i236 = getelementptr inbounds %Module, ptr %147, i64 0, i32 8
  %148 = load ptr, ptr %memberidx1.i236, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %148, i64 0, i32 1
  %149 = load i64, ptr %memberidx.i5.i, align 4
  %150 = add i64 %149, 1
  %memberidx.i.i.i238 = getelementptr inbounds %Array_ConstDeclaration_, ptr %148, i64 0, i32 2
  %151 = load i64, ptr %memberidx.i.i.i238, align 4
  %152 = icmp slt i64 %151, %150
  %.pre387 = load ptr, ptr %148, align 8
  br i1 %152, label %while.body.i.i.i240, label %Array_ConstDeclaration____sl__.exit.i

while.body.i.i.i240:                              ; preds = %ifend.i237, %while.body.i.i.i240
  %153 = phi ptr [ %157, %while.body.i.i.i240 ], [ %.pre387, %ifend.i237 ]
  %154 = phi i64 [ %158, %while.body.i.i.i240 ], [ %151, %ifend.i237 ]
  %155 = shl nuw i64 %154, 1
  store i64 %155, ptr %memberidx.i.i.i238, align 4
  %156 = shl i64 %154, 4
  %157 = tail call ptr @realloc(ptr %153, i64 %156)
  store ptr %157, ptr %148, align 8
  %158 = load i64, ptr %memberidx.i.i.i238, align 4
  %159 = icmp slt i64 %158, %150
  br i1 %159, label %while.body.i.i.i240, label %Array_ConstDeclaration____sl__.exit.i.loopexit

Array_ConstDeclaration____sl__.exit.i.loopexit:   ; preds = %while.body.i.i.i240
  %.pre388 = load i64, ptr %memberidx.i5.i, align 4
  %.pre411 = add nsw i64 %.pre388, 1
  br label %Array_ConstDeclaration____sl__.exit.i

Array_ConstDeclaration____sl__.exit.i:            ; preds = %ifend.i237, %Array_ConstDeclaration____sl__.exit.i.loopexit
  %.pre-phi412 = phi i64 [ %.pre411, %Array_ConstDeclaration____sl__.exit.i.loopexit ], [ %150, %ifend.i237 ]
  %160 = phi ptr [ %157, %Array_ConstDeclaration____sl__.exit.i.loopexit ], [ %.pre387, %ifend.i237 ]
  %161 = phi i64 [ %.pre388, %Array_ConstDeclaration____sl__.exit.i.loopexit ], [ %149, %ifend.i237 ]
  store i64 %.pre-phi412, ptr %memberidx.i5.i, align 4
  %162 = getelementptr inbounds ptr, ptr %160, i64 %161
  store ptr %136, ptr %162, align 8
  br label %TypeChecker_declare_global_const.exit

TypeChecker_declare_global_const.exit:            ; preds = %for.body55, %Array_ConstDeclaration____sl__.exit.i
  %163 = add nuw nsw i64 %134, 1
  %164 = getelementptr inbounds ptr, ptr %98, i64 %134
  %.not419 = icmp slt i64 %134, %99
  br i1 %.not419, label %for.body55, label %for.end56

for.end56:                                        ; preds = %TypeChecker_declare_global_const.exit, %for.end40
  tail call void @free(ptr nonnull %97)
  %memberidx63 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 5
  %165 = load ptr, ptr %memberidx63, align 8
  %166 = tail call ptr @malloc(i32 25)
  %167 = load ptr, ptr %165, align 8
  %memberidx1.i241 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %165, i64 0, i32 1
  %168 = load i64, ptr %memberidx1.i241, align 4
  store i1 false, ptr %166, align 1
  %memberidx1.i.i242 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %166, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i242, align 4
  %memberidx2.i.i243 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %166, i64 0, i32 3
  store ptr %167, ptr %memberidx2.i.i243, align 8
  %memberidx3.i.i244 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %166, i64 0, i32 2
  store i64 %168, ptr %memberidx3.i.i244, align 4
  %169 = icmp slt i64 %168, 1
  br i1 %169, label %for.end62, label %for.body61

for.body61:                                       ; preds = %for.end56, %TypeChecker_declare_global_var.exit
  %.in349 = phi ptr [ %235, %TypeChecker_declare_global_var.exit ], [ %167, %for.end56 ]
  %170 = phi i64 [ %234, %TypeChecker_declare_global_var.exit ], [ 1, %for.end56 ]
  %171 = load ptr, ptr %.in349, align 8
  %172 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr nonnull %0, ptr %171)
  %173 = load ptr, ptr %memberidx.i187, align 8
  %memberidx1.i.i249 = getelementptr inbounds %Compiler, ptr %173, i64 0, i32 5
  %174 = load ptr, ptr %memberidx1.i.i249, align 8
  %memberidx2.i.i250 = getelementptr inbounds %Array_FloError_, ptr %174, i64 0, i32 1
  %175 = load i64, ptr %memberidx2.i.i250, align 4
  %176 = icmp sgt i64 %175, 0
  br i1 %176, label %TypeChecker_declare_global_var.exit, label %ifend.i254

ifend.i254:                                       ; preds = %for.body61
  %177 = load ptr, ptr %0, align 8
  %memberidx1.i251 = getelementptr inbounds %VarDeclaration, ptr %172, i64 0, i32 2
  %178 = load ptr, ptr %memberidx1.i251, align 8
  %179 = load ptr, ptr %177, align 8
  %memberidx1.i24.i = getelementptr inbounds %VarId, ptr %178, i64 0, i32 1
  %180 = load i64, ptr %memberidx1.i24.i, align 4
  %181 = load ptr, ptr %179, align 8
  %182 = getelementptr inbounds ptr, ptr %181, i64 %180
  %183 = load ptr, ptr %182, align 8
  %memberidx2.i25.i = getelementptr inbounds %Module, ptr %183, i64 0, i32 1
  %184 = load ptr, ptr %memberidx2.i25.i, align 8
  %memberidx3.i.i252 = getelementptr inbounds %VarId, ptr %178, i64 0, i32 2
  %185 = load i64, ptr %memberidx3.i.i252, align 4
  %186 = load ptr, ptr %184, align 8
  %187 = getelementptr inbounds ptr, ptr %186, i64 %185
  %188 = load ptr, ptr %187, align 8
  %memberidx2.i253 = getelementptr inbounds %Var, ptr %188, i64 0, i32 2
  %189 = load ptr, ptr %memberidx2.i253, align 8
  %.not.i = icmp eq ptr %189, null
  br i1 %.not.i, label %ifend5.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %ifend.i254
  %memberidx6.i255 = getelementptr inbounds %Expression, ptr %189, i64 0, i32 1
  %190 = load i1, ptr %memberidx6.i255, align 1
  br i1 %190, label %ifend5.i, label %if.entry7.i

ifend5.i:                                         ; preds = %if.entry3.i, %ifend.i254
  %memberidx12.i256 = getelementptr inbounds %VarDeclaration, ptr %172, i64 0, i32 3
  store i1 true, ptr %memberidx12.i256, align 1
  %191 = load ptr, ptr %memberidx4, align 8
  %192 = load i64, ptr %191, align 4
  %193 = load ptr, ptr %0, align 8
  %194 = load ptr, ptr %193, align 8
  %195 = load ptr, ptr %194, align 8
  %196 = getelementptr inbounds ptr, ptr %195, i64 %192
  %197 = load ptr, ptr %196, align 8
  %memberidx13.i257 = getelementptr inbounds %Module, ptr %197, i64 0, i32 9
  %198 = load ptr, ptr %memberidx13.i257, align 8
  %memberidx.i29.i = getelementptr inbounds %Array_VarDeclaration_, ptr %198, i64 0, i32 1
  %199 = load i64, ptr %memberidx.i29.i, align 4
  %200 = add i64 %199, 1
  %memberidx.i.i30.i = getelementptr inbounds %Array_VarDeclaration_, ptr %198, i64 0, i32 2
  %201 = load i64, ptr %memberidx.i.i30.i, align 4
  %202 = icmp slt i64 %201, %200
  %.pre393 = load ptr, ptr %198, align 8
  br i1 %202, label %while.body.i.i.i259, label %Array_VarDeclaration____sl__.exit.i

while.body.i.i.i259:                              ; preds = %ifend5.i, %while.body.i.i.i259
  %203 = phi ptr [ %207, %while.body.i.i.i259 ], [ %.pre393, %ifend5.i ]
  %204 = phi i64 [ %208, %while.body.i.i.i259 ], [ %201, %ifend5.i ]
  %205 = shl nuw i64 %204, 1
  store i64 %205, ptr %memberidx.i.i30.i, align 4
  %206 = shl i64 %204, 4
  %207 = tail call ptr @realloc(ptr %203, i64 %206)
  store ptr %207, ptr %198, align 8
  %208 = load i64, ptr %memberidx.i.i30.i, align 4
  %209 = icmp slt i64 %208, %200
  br i1 %209, label %while.body.i.i.i259, label %Array_VarDeclaration____sl__.exit.i.loopexit

Array_VarDeclaration____sl__.exit.i.loopexit:     ; preds = %while.body.i.i.i259
  %.pre394 = load i64, ptr %memberidx.i29.i, align 4
  %.pre407 = add nsw i64 %.pre394, 1
  br label %Array_VarDeclaration____sl__.exit.i

Array_VarDeclaration____sl__.exit.i:              ; preds = %ifend5.i, %Array_VarDeclaration____sl__.exit.i.loopexit
  %.pre-phi408 = phi i64 [ %.pre407, %Array_VarDeclaration____sl__.exit.i.loopexit ], [ %200, %ifend5.i ]
  %210 = phi ptr [ %207, %Array_VarDeclaration____sl__.exit.i.loopexit ], [ %.pre393, %ifend5.i ]
  %211 = phi i64 [ %.pre394, %Array_VarDeclaration____sl__.exit.i.loopexit ], [ %199, %ifend5.i ]
  store i64 %.pre-phi408, ptr %memberidx.i29.i, align 4
  %212 = getelementptr inbounds ptr, ptr %210, i64 %211
  store ptr %172, ptr %212, align 8
  br label %TypeChecker_declare_global_var.exit

if.entry7.i:                                      ; preds = %if.entry3.i
  %213 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %213, ptr noundef nonnull align 8 dereferenceable(54) @105, i64 54, i1 false)
  %214 = tail call ptr @malloc(i32 24)
  store ptr %213, ptr %214, align 8
  %memberidx1.i.i27.i = getelementptr inbounds %String, ptr %214, i64 0, i32 1
  store i64 54, ptr %memberidx1.i.i27.i, align 4
  %memberidx2.i.i28.i = getelementptr inbounds %String, ptr %214, i64 0, i32 2
  store i64 54, ptr %memberidx2.i.i28.i, align 4
  %memberidx10.i260 = getelementptr inbounds %VarDeclarationStatement, ptr %171, i64 0, i32 4
  %215 = load ptr, ptr %memberidx10.i260, align 8
  %216 = load ptr, ptr %215, align 8
  %217 = load ptr, ptr %memberidx.i187, align 8
  %memberidx1.i23.i = getelementptr inbounds %Compiler, ptr %217, i64 0, i32 5
  %218 = load ptr, ptr %memberidx1.i23.i, align 8
  %219 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %219, align 4
  %memberidx1.i.i.i261 = getelementptr inbounds %FloError, ptr %219, i64 0, i32 2
  store ptr %216, ptr %memberidx1.i.i.i261, align 8
  %memberidx2.i.i.i262 = getelementptr inbounds %FloError, ptr %219, i64 0, i32 1
  store ptr %214, ptr %memberidx2.i.i.i262, align 8
  %memberidx.i.i.i263 = getelementptr inbounds %Array_FloError_, ptr %218, i64 0, i32 1
  %220 = load i64, ptr %memberidx.i.i.i263, align 4
  %221 = add i64 %220, 1
  %memberidx.i.i.i.i264 = getelementptr inbounds %Array_FloError_, ptr %218, i64 0, i32 2
  %222 = load i64, ptr %memberidx.i.i.i.i264, align 4
  %223 = icmp slt i64 %222, %221
  %.pre390 = load ptr, ptr %218, align 8
  br i1 %223, label %while.body.i.i.i.i266, label %TypeChecker_error.exit.i267

while.body.i.i.i.i266:                            ; preds = %if.entry7.i, %while.body.i.i.i.i266
  %224 = phi ptr [ %228, %while.body.i.i.i.i266 ], [ %.pre390, %if.entry7.i ]
  %225 = phi i64 [ %229, %while.body.i.i.i.i266 ], [ %222, %if.entry7.i ]
  %226 = shl nuw i64 %225, 1
  store i64 %226, ptr %memberidx.i.i.i.i264, align 4
  %227 = shl i64 %225, 4
  %228 = tail call ptr @realloc(ptr %224, i64 %227)
  store ptr %228, ptr %218, align 8
  %229 = load i64, ptr %memberidx.i.i.i.i264, align 4
  %230 = icmp slt i64 %229, %221
  br i1 %230, label %while.body.i.i.i.i266, label %TypeChecker_error.exit.i267.loopexit

TypeChecker_error.exit.i267.loopexit:             ; preds = %while.body.i.i.i.i266
  %.pre391 = load i64, ptr %memberidx.i.i.i263, align 4
  %.pre409 = add nsw i64 %.pre391, 1
  br label %TypeChecker_error.exit.i267

TypeChecker_error.exit.i267:                      ; preds = %if.entry7.i, %TypeChecker_error.exit.i267.loopexit
  %.pre-phi410 = phi i64 [ %.pre409, %TypeChecker_error.exit.i267.loopexit ], [ %221, %if.entry7.i ]
  %231 = phi ptr [ %228, %TypeChecker_error.exit.i267.loopexit ], [ %.pre390, %if.entry7.i ]
  %232 = phi i64 [ %.pre391, %TypeChecker_error.exit.i267.loopexit ], [ %220, %if.entry7.i ]
  store i64 %.pre-phi410, ptr %memberidx.i.i.i263, align 4
  %233 = getelementptr inbounds ptr, ptr %231, i64 %232
  store ptr %219, ptr %233, align 8
  br label %TypeChecker_declare_global_var.exit

TypeChecker_declare_global_var.exit:              ; preds = %for.body61, %Array_VarDeclaration____sl__.exit.i, %TypeChecker_error.exit.i267
  %234 = add nuw nsw i64 %170, 1
  %235 = getelementptr inbounds ptr, ptr %167, i64 %170
  %.not420 = icmp slt i64 %170, %168
  br i1 %.not420, label %for.body61, label %for.end62

for.end62:                                        ; preds = %TypeChecker_declare_global_var.exit, %for.end56
  tail call void @free(ptr nonnull %166)
  %236 = load ptr, ptr %1, align 8
  %237 = tail call ptr @malloc(i32 25)
  %238 = load ptr, ptr %236, align 8
  %memberidx1.i268 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %236, i64 0, i32 1
  %239 = load i64, ptr %memberidx1.i268, align 4
  store i1 false, ptr %237, align 1
  %memberidx1.i.i269 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %237, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i269, align 4
  %memberidx2.i.i270 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %237, i64 0, i32 3
  store ptr %238, ptr %memberidx2.i.i270, align 8
  %memberidx3.i.i271 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %237, i64 0, i32 2
  store i64 %239, ptr %memberidx3.i.i271, align 4
  %240 = icmp slt i64 %239, 1
  br i1 %240, label %for.end68, label %for.body67

for.body67:                                       ; preds = %for.end62, %for.body67
  %.in350 = phi ptr [ %244, %for.body67 ], [ %238, %for.end62 ]
  %241 = phi i64 [ %243, %for.body67 ], [ 1, %for.end62 ]
  %242 = load ptr, ptr %.in350, align 8
  tail call fastcc void @TypeChecker_declare_function_within_module(ptr nonnull %0, ptr %242)
  %243 = add nuw nsw i64 %241, 1
  %244 = getelementptr inbounds ptr, ptr %238, i64 %241
  %.not421 = icmp slt i64 %241, %239
  br i1 %.not421, label %for.body67, label %for.end68

for.end68:                                        ; preds = %for.body67, %for.end62
  tail call void @free(ptr nonnull %237)
  %245 = load ptr, ptr %memberidx.i187, align 8
  %memberidx1.i276 = getelementptr inbounds %Compiler, ptr %245, i64 0, i32 5
  %246 = load ptr, ptr %memberidx1.i276, align 8
  %memberidx2.i277 = getelementptr inbounds %Array_FloError_, ptr %246, i64 0, i32 1
  %247 = load i64, ptr %memberidx2.i277, align 4
  %248 = icmp sgt i64 %247, 0
  br i1 %248, label %common.ret, label %for.entry74

for.entry74:                                      ; preds = %for.end68
  %249 = load ptr, ptr %memberidx26, align 8
  %memberidx79 = getelementptr inbounds %Array_EnumNode_, ptr %249, i64 0, i32 1
  %250 = load i64, ptr %memberidx79, align 4
  %251 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %251, align 4
  %memberidx1.i278 = getelementptr inbounds %Range, ptr %251, i64 0, i32 1
  store i64 %250, ptr %memberidx1.i278, align 4
  %252 = tail call ptr @malloc(i32 17)
  %memberidx.i.i280 = getelementptr inbounds %RangeIterator, ptr %252, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i280, align 4
  %memberidx1.i.i281 = getelementptr inbounds %RangeIterator, ptr %252, i64 0, i32 2
  store i64 %250, ptr %memberidx1.i.i281, align 4
  %253 = icmp slt i64 %250, 1
  br i1 %253, label %for.end77, label %for.body76

for.body76:                                       ; preds = %for.entry74, %for.body76
  %254 = phi i64 [ %264, %for.body76 ], [ 1, %for.entry74 ]
  %255 = phi i64 [ %254, %for.body76 ], [ 0, %for.entry74 ]
  %256 = load ptr, ptr %memberidx10.i, align 8
  %257 = load ptr, ptr %256, align 8
  %258 = getelementptr inbounds ptr, ptr %257, i64 %255
  %259 = load ptr, ptr %258, align 8
  %260 = load ptr, ptr %memberidx26, align 8
  %261 = load ptr, ptr %260, align 8
  %262 = getelementptr inbounds ptr, ptr %261, i64 %255
  %263 = load ptr, ptr %262, align 8
  tail call fastcc void @TypeChecker_check_enum_body(ptr nonnull %0, ptr %259, ptr %263)
  %.not422 = icmp slt i64 %254, %250
  %264 = add nuw nsw i64 %254, 1
  br i1 %.not422, label %for.body76, label %for.end77

for.end77:                                        ; preds = %for.body76, %for.entry74
  tail call void @free(ptr nonnull %252)
  %265 = load ptr, ptr %memberidx32, align 8
  %266 = tail call ptr @malloc(i32 25)
  %267 = load ptr, ptr %265, align 8
  %memberidx1.i284 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %265, i64 0, i32 1
  %268 = load i64, ptr %memberidx1.i284, align 4
  store i1 false, ptr %266, align 1
  %memberidx1.i.i285 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %266, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i285, align 4
  %memberidx2.i.i286 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %266, i64 0, i32 3
  store ptr %267, ptr %memberidx2.i.i286, align 8
  %memberidx3.i.i287 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %266, i64 0, i32 2
  store i64 %268, ptr %memberidx3.i.i287, align 4
  %269 = icmp slt i64 %268, 1
  br i1 %269, label %for.end86, label %for.body85

for.body85:                                       ; preds = %for.end77, %for.body85
  %.in351 = phi ptr [ %273, %for.body85 ], [ %267, %for.end77 ]
  %270 = phi i64 [ %272, %for.body85 ], [ 1, %for.end77 ]
  %271 = load ptr, ptr %.in351, align 8
  tail call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr %271)
  %272 = add nuw nsw i64 %270, 1
  %273 = getelementptr inbounds ptr, ptr %267, i64 %270
  %.not423 = icmp slt i64 %270, %268
  br i1 %.not423, label %for.body85, label %for.end86

for.end86:                                        ; preds = %for.body85, %for.end77
  tail call void @free(ptr nonnull %266)
  %274 = load ptr, ptr %1, align 8
  %memberidx94 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %274, i64 0, i32 1
  %275 = load i64, ptr %memberidx94, align 4
  %276 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %276, align 4
  %memberidx1.i291 = getelementptr inbounds %Range, ptr %276, i64 0, i32 1
  store i64 %275, ptr %memberidx1.i291, align 4
  %277 = tail call ptr @malloc(i32 17)
  %memberidx.i.i293 = getelementptr inbounds %RangeIterator, ptr %277, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i293, align 4
  %memberidx1.i.i294 = getelementptr inbounds %RangeIterator, ptr %277, i64 0, i32 2
  store i64 %275, ptr %memberidx1.i.i294, align 4
  %278 = icmp slt i64 %275, 1
  br i1 %278, label %for.end92, label %for.body91

for.body91:                                       ; preds = %for.end86, %TypeChecker_check_function_body.exit
  %279 = phi i64 [ %353, %TypeChecker_check_function_body.exit ], [ 1, %for.end86 ]
  %280 = phi i64 [ %279, %TypeChecker_check_function_body.exit ], [ 0, %for.end86 ]
  %281 = load ptr, ptr %memberidx1.i164, align 8
  %282 = load ptr, ptr %281, align 8
  %283 = getelementptr inbounds ptr, ptr %282, i64 %280
  %284 = load ptr, ptr %283, align 8
  %285 = load ptr, ptr %1, align 8
  %286 = load ptr, ptr %285, align 8
  %287 = getelementptr inbounds ptr, ptr %286, i64 %280
  %288 = load ptr, ptr %287, align 8
  %memberidx.i176 = getelementptr inbounds %Function, ptr %284, i64 0, i32 6
  %289 = load i1, ptr %memberidx.i176, align 1
  br i1 %289, label %TypeChecker_check_function_body.exit, label %ifend.i

ifend.i:                                          ; preds = %for.body91
  %290 = load ptr, ptr %284, align 8
  store ptr %290, ptr %memberidx19, align 8
  %memberidx6.i179 = getelementptr inbounds %Function, ptr %284, i64 0, i32 5
  %291 = load ptr, ptr %memberidx6.i179, align 8
  store ptr %291, ptr %memberidx4, align 8
  %memberidx7.i180 = getelementptr inbounds %Function, ptr %284, i64 0, i32 3
  %memberidx8.i = getelementptr inbounds %FunctionDeclarationNode, ptr %288, i64 0, i32 2
  %292 = load ptr, ptr %memberidx8.i, align 8
  %293 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %292, ptr null, i1 false)
  store ptr %293, ptr %memberidx7.i180, align 8
  %294 = load ptr, ptr %memberidx.i187, align 8
  %memberidx1.i.i182 = getelementptr inbounds %Compiler, ptr %294, i64 0, i32 5
  %295 = load ptr, ptr %memberidx1.i.i182, align 8
  %memberidx2.i.i183 = getelementptr inbounds %Array_FloError_, ptr %295, i64 0, i32 1
  %296 = load i64, ptr %memberidx2.i.i183, align 4
  %297 = icmp sgt i64 %296, 0
  br i1 %297, label %TypeChecker_check_function_body.exit, label %ifend11.i

ifend11.i:                                        ; preds = %ifend.i
  %memberidx13.i184 = getelementptr inbounds %Block, ptr %293, i64 0, i32 1
  %298 = load i1, ptr %memberidx13.i184, align 1
  br i1 %298, label %ifend16.i, label %if.entry14.i

if.entry14.i:                                     ; preds = %ifend11.i
  %memberidx17.i = getelementptr inbounds %Function, ptr %284, i64 0, i32 4
  %299 = load ptr, ptr %memberidx17.i, align 8
  %memberidx18.i185 = getelementptr inbounds %FunctionType, ptr %299, i64 0, i32 2
  %300 = load ptr, ptr %memberidx18.i185, align 8
  %301 = load i64, ptr %300, align 4
  %302 = icmp eq i64 %301, 10
  br i1 %302, label %if.entry20.i, label %else21.i

ifend16.i:                                        ; preds = %Array_Statement____sl__.exit.i, %ifend11.i
  %303 = load ptr, ptr %0, align 8
  %304 = load ptr, ptr %memberidx6.i179, align 8
  %305 = load ptr, ptr %303, align 8
  %306 = load i64, ptr %304, align 4
  %307 = load ptr, ptr %305, align 8
  %308 = getelementptr inbounds ptr, ptr %307, i64 %306
  %309 = load ptr, ptr %308, align 8
  %memberidx2.i49.i = getelementptr inbounds %Module, ptr %309, i64 0, i32 7
  %310 = load ptr, ptr %memberidx2.i49.i, align 8
  %memberidx3.i.i186 = getelementptr inbounds %ScopeId, ptr %304, i64 0, i32 1
  %311 = load i64, ptr %memberidx3.i.i186, align 4
  %312 = load ptr, ptr %310, align 8
  %313 = getelementptr inbounds ptr, ptr %312, i64 %311
  %314 = load ptr, ptr %313, align 8
  %memberidx30.i = getelementptr inbounds %Scope, ptr %314, i64 0, i32 5
  %315 = load ptr, ptr %memberidx30.i, align 8
  store ptr %315, ptr %memberidx4, align 8
  br label %TypeChecker_check_function_body.exit

if.entry20.i:                                     ; preds = %if.entry14.i
  %316 = load ptr, ptr %293, align 8
  %317 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %317, align 4
  %memberidx.i50.i = getelementptr inbounds %ReturnStatement, ptr %317, i64 0, i32 1
  store ptr null, ptr %memberidx.i50.i, align 8
  %memberidx.i53.i = getelementptr inbounds %Array_Statement_, ptr %316, i64 0, i32 1
  %318 = load i64, ptr %memberidx.i53.i, align 4
  %319 = add i64 %318, 1
  %memberidx.i.i54.i = getelementptr inbounds %Array_Statement_, ptr %316, i64 0, i32 2
  %320 = load i64, ptr %memberidx.i.i54.i, align 4
  %321 = icmp slt i64 %320, %319
  %.pre399 = load ptr, ptr %316, align 8
  br i1 %321, label %while.body.i.i.i, label %Array_Statement____sl__.exit.i

while.body.i.i.i:                                 ; preds = %if.entry20.i, %while.body.i.i.i
  %322 = phi ptr [ %326, %while.body.i.i.i ], [ %.pre399, %if.entry20.i ]
  %323 = phi i64 [ %327, %while.body.i.i.i ], [ %320, %if.entry20.i ]
  %324 = shl nuw i64 %323, 1
  store i64 %324, ptr %memberidx.i.i54.i, align 4
  %325 = shl i64 %323, 4
  %326 = tail call ptr @realloc(ptr %322, i64 %325)
  store ptr %326, ptr %316, align 8
  %327 = load i64, ptr %memberidx.i.i54.i, align 4
  %328 = icmp slt i64 %327, %319
  br i1 %328, label %while.body.i.i.i, label %Array_Statement____sl__.exit.i.loopexit

Array_Statement____sl__.exit.i.loopexit:          ; preds = %while.body.i.i.i
  %.pre400 = load i64, ptr %memberidx.i53.i, align 4
  %.pre403 = add nsw i64 %.pre400, 1
  br label %Array_Statement____sl__.exit.i

Array_Statement____sl__.exit.i:                   ; preds = %if.entry20.i, %Array_Statement____sl__.exit.i.loopexit
  %.pre-phi404 = phi i64 [ %.pre403, %Array_Statement____sl__.exit.i.loopexit ], [ %319, %if.entry20.i ]
  %329 = phi ptr [ %326, %Array_Statement____sl__.exit.i.loopexit ], [ %.pre399, %if.entry20.i ]
  %330 = phi i64 [ %.pre400, %Array_Statement____sl__.exit.i.loopexit ], [ %318, %if.entry20.i ]
  store i64 %.pre-phi404, ptr %memberidx.i53.i, align 4
  %331 = getelementptr inbounds ptr, ptr %329, i64 %330
  store ptr %317, ptr %331, align 8
  br label %ifend16.i

else21.i:                                         ; preds = %if.entry14.i
  %332 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %332, ptr noundef nonnull align 8 dereferenceable(40) @157, i64 40, i1 false)
  %333 = tail call ptr @malloc(i32 24)
  store ptr %332, ptr %333, align 8
  %memberidx1.i.i51.i = getelementptr inbounds %String, ptr %333, i64 0, i32 1
  store i64 40, ptr %memberidx1.i.i51.i, align 4
  %memberidx2.i.i52.i = getelementptr inbounds %String, ptr %333, i64 0, i32 2
  store i64 40, ptr %memberidx2.i.i52.i, align 4
  %memberidx25.i = getelementptr inbounds %FunctionDeclarationNode, ptr %288, i64 0, i32 3
  %334 = load ptr, ptr %memberidx25.i, align 8
  %335 = load ptr, ptr %334, align 8
  %336 = load ptr, ptr %memberidx.i187, align 8
  %memberidx1.i48.i = getelementptr inbounds %Compiler, ptr %336, i64 0, i32 5
  %337 = load ptr, ptr %memberidx1.i48.i, align 8
  %338 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %338, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloError, ptr %338, i64 0, i32 2
  store ptr %335, ptr %memberidx1.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %FloError, ptr %338, i64 0, i32 1
  store ptr %333, ptr %memberidx2.i.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %337, i64 0, i32 1
  %339 = load i64, ptr %memberidx.i.i.i, align 4
  %340 = add i64 %339, 1
  %memberidx.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %337, i64 0, i32 2
  %341 = load i64, ptr %memberidx.i.i.i.i, align 4
  %342 = icmp slt i64 %341, %340
  %.pre396 = load ptr, ptr %337, align 8
  br i1 %342, label %while.body.i.i.i.i, label %TypeChecker_error.exit.i

while.body.i.i.i.i:                               ; preds = %else21.i, %while.body.i.i.i.i
  %343 = phi ptr [ %347, %while.body.i.i.i.i ], [ %.pre396, %else21.i ]
  %344 = phi i64 [ %348, %while.body.i.i.i.i ], [ %341, %else21.i ]
  %345 = shl nuw i64 %344, 1
  store i64 %345, ptr %memberidx.i.i.i.i, align 4
  %346 = shl i64 %344, 4
  %347 = tail call ptr @realloc(ptr %343, i64 %346)
  store ptr %347, ptr %337, align 8
  %348 = load i64, ptr %memberidx.i.i.i.i, align 4
  %349 = icmp slt i64 %348, %340
  br i1 %349, label %while.body.i.i.i.i, label %TypeChecker_error.exit.i.loopexit

TypeChecker_error.exit.i.loopexit:                ; preds = %while.body.i.i.i.i
  %.pre397 = load i64, ptr %memberidx.i.i.i, align 4
  %.pre405 = add nsw i64 %.pre397, 1
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %else21.i, %TypeChecker_error.exit.i.loopexit
  %.pre-phi406 = phi i64 [ %.pre405, %TypeChecker_error.exit.i.loopexit ], [ %340, %else21.i ]
  %350 = phi ptr [ %347, %TypeChecker_error.exit.i.loopexit ], [ %.pre396, %else21.i ]
  %351 = phi i64 [ %.pre397, %TypeChecker_error.exit.i.loopexit ], [ %339, %else21.i ]
  store i64 %.pre-phi406, ptr %memberidx.i.i.i, align 4
  %352 = getelementptr inbounds ptr, ptr %350, i64 %351
  store ptr %338, ptr %352, align 8
  br label %TypeChecker_check_function_body.exit

TypeChecker_check_function_body.exit:             ; preds = %for.body91, %ifend.i, %ifend16.i, %TypeChecker_error.exit.i
  %.not424 = icmp slt i64 %279, %275
  %353 = add nuw nsw i64 %279, 1
  br i1 %.not424, label %for.body91, label %for.end92

for.end92:                                        ; preds = %TypeChecker_check_function_body.exit, %for.end86
  tail call void @free(ptr nonnull %277)
  %354 = load i1, ptr %memberidx, align 1
  %355 = load ptr, ptr %memberidx4, align 8
  %356 = load i64, ptr %355, align 4
  %357 = icmp ne i64 %356, 0
  %358 = and i1 %354, %357
  br i1 %358, label %if.entry101, label %ifend103

if.entry101:                                      ; preds = %for.end92
  %359 = load i64, ptr @GENERIC_MODULE_ID, align 8
  %360 = load ptr, ptr %0, align 8
  %361 = load ptr, ptr %360, align 8
  %362 = load ptr, ptr %361, align 8
  %363 = getelementptr inbounds ptr, ptr %362, i64 %359
  %364 = load ptr, ptr %363, align 8
  %memberidx1.i = getelementptr inbounds %Module, ptr %364, i64 0, i32 5
  %365 = load ptr, ptr %memberidx1.i, align 8
  store ptr %365, ptr %memberidx4, align 8
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %4)
  br label %ifend103

ifend103:                                         ; preds = %for.end92, %if.entry101
  store ptr %3, ptr %memberidx4, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_import_all_from_module(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = load ptr, ptr %0, align 8
  %memberidx1 = getelementptr inbounds %Module, ptr %1, i64 0, i32 5
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = load i64, ptr %3, align 4
  %6 = load ptr, ptr %4, align 8
  %7 = getelementptr inbounds ptr, ptr %6, i64 %5
  %8 = load ptr, ptr %7, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %3, i64 0, i32 1
  %10 = load i64, ptr %memberidx3.i, align 4
  %11 = load ptr, ptr %9, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx2 = getelementptr inbounds %Module, ptr %1, i64 0, i32 9
  %14 = load ptr, ptr %memberidx2, align 8
  %15 = tail call ptr @malloc(i32 25)
  %16 = load ptr, ptr %14, align 8
  %memberidx1.i = getelementptr inbounds %Array_VarDeclaration_, ptr %14, i64 0, i32 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %17, 1
  br i1 %18, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i.i.i73 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.in = phi ptr [ %16, %for.body.lr.ph ], [ %41, %for.body ]
  %19 = phi i64 [ 1, %for.body.lr.ph ], [ %40, %for.body ]
  %20 = load ptr, ptr %.in, align 8
  %memberidx4 = getelementptr inbounds %VarDeclaration, ptr %20, i64 0, i32 1
  %21 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %VarDeclaration, ptr %20, i64 0, i32 2
  %22 = load ptr, ptr %memberidx5, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = load ptr, ptr %memberidx.i.i.i73, align 8
  %25 = load i64, ptr %24, align 4
  %26 = load ptr, ptr %23, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %25
  %29 = load ptr, ptr %28, align 8
  %memberidx1.i.i74 = getelementptr inbounds %Module, ptr %29, i64 0, i32 5
  %30 = load ptr, ptr %memberidx1.i.i74, align 8
  %31 = load i64, ptr %30, align 4
  %32 = getelementptr inbounds ptr, ptr %27, i64 %31
  %33 = load ptr, ptr %32, align 8
  %memberidx2.i.i.i75 = getelementptr inbounds %Module, ptr %33, i64 0, i32 7
  %34 = load ptr, ptr %memberidx2.i.i.i75, align 8
  %memberidx3.i.i.i76 = getelementptr inbounds %ScopeId, ptr %30, i64 0, i32 1
  %35 = load i64, ptr %memberidx3.i.i.i76, align 4
  %36 = load ptr, ptr %34, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  %memberidx.i77 = getelementptr inbounds %Scope, ptr %38, i64 0, i32 1
  %39 = load ptr, ptr %memberidx.i77, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %39, ptr %21, ptr %22)
  %40 = add nuw nsw i64 %19, 1
  %41 = getelementptr inbounds ptr, ptr %16, i64 %19
  %.not = icmp slt i64 %19, %17
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %15)
  %memberidx10 = getelementptr inbounds %Module, ptr %1, i64 0, i32 8
  %42 = load ptr, ptr %memberidx10, align 8
  %43 = tail call ptr @malloc(i32 25)
  %44 = load ptr, ptr %42, align 8
  %memberidx1.i78 = getelementptr inbounds %Array_ConstDeclaration_, ptr %42, i64 0, i32 1
  %45 = load i64, ptr %memberidx1.i78, align 4
  store i1 false, ptr %43, align 1
  %memberidx1.i.i79 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %43, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i79, align 4
  %memberidx2.i.i80 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %43, i64 0, i32 3
  store ptr %44, ptr %memberidx2.i.i80, align 8
  %memberidx3.i.i81 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %43, i64 0, i32 2
  store i64 %45, ptr %memberidx3.i.i81, align 4
  %46 = icmp slt i64 %45, 1
  br i1 %46, label %for.end9, label %for.body8.lr.ph

for.body8.lr.ph:                                  ; preds = %for.end
  %memberidx.i.i.i91 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body8

for.body8:                                        ; preds = %for.body8.lr.ph, %for.body8
  %.in154 = phi ptr [ %44, %for.body8.lr.ph ], [ %69, %for.body8 ]
  %47 = phi i64 [ 1, %for.body8.lr.ph ], [ %68, %for.body8 ]
  %48 = load ptr, ptr %.in154, align 8
  %memberidx12 = getelementptr inbounds %ConstDeclaration, ptr %48, i64 0, i32 1
  %49 = load ptr, ptr %memberidx12, align 8
  %memberidx13 = getelementptr inbounds %ConstDeclaration, ptr %48, i64 0, i32 2
  %50 = load ptr, ptr %memberidx13, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = load ptr, ptr %memberidx.i.i.i91, align 8
  %53 = load i64, ptr %52, align 4
  %54 = load ptr, ptr %51, align 8
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 %53
  %57 = load ptr, ptr %56, align 8
  %memberidx1.i.i92 = getelementptr inbounds %Module, ptr %57, i64 0, i32 5
  %58 = load ptr, ptr %memberidx1.i.i92, align 8
  %59 = load i64, ptr %58, align 4
  %60 = getelementptr inbounds ptr, ptr %55, i64 %59
  %61 = load ptr, ptr %60, align 8
  %memberidx2.i.i.i93 = getelementptr inbounds %Module, ptr %61, i64 0, i32 7
  %62 = load ptr, ptr %memberidx2.i.i.i93, align 8
  %memberidx3.i.i.i94 = getelementptr inbounds %ScopeId, ptr %58, i64 0, i32 1
  %63 = load i64, ptr %memberidx3.i.i.i94, align 4
  %64 = load ptr, ptr %62, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  %memberidx.i95 = getelementptr inbounds %Scope, ptr %66, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i95, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %67, ptr %49, ptr %50)
  %68 = add nuw nsw i64 %47, 1
  %69 = getelementptr inbounds ptr, ptr %44, i64 %47
  %.not171 = icmp slt i64 %47, %45
  br i1 %.not171, label %for.body8, label %for.end9

for.end9:                                         ; preds = %for.body8, %for.end
  tail call void @free(ptr nonnull %43)
  %memberidx18 = getelementptr inbounds %Module, ptr %1, i64 0, i32 4
  %70 = load ptr, ptr %memberidx18, align 8
  %71 = tail call ptr @malloc(i32 25)
  %72 = load ptr, ptr %70, align 8
  %memberidx1.i96 = getelementptr inbounds %Array_Function_, ptr %70, i64 0, i32 1
  %73 = load i64, ptr %memberidx1.i96, align 4
  store i1 false, ptr %71, align 1
  %memberidx1.i.i97 = getelementptr inbounds %ArrayIterator_Function_, ptr %71, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i97, align 4
  %memberidx2.i.i98 = getelementptr inbounds %ArrayIterator_Function_, ptr %71, i64 0, i32 3
  store ptr %72, ptr %memberidx2.i.i98, align 8
  %memberidx3.i.i99 = getelementptr inbounds %ArrayIterator_Function_, ptr %71, i64 0, i32 2
  store i64 %73, ptr %memberidx3.i.i99, align 4
  %74 = icmp slt i64 %73, 1
  br i1 %74, label %for.end17, label %for.body16.lr.ph

for.body16.lr.ph:                                 ; preds = %for.end9
  %memberidx.i.i.i103 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body16

for.body16:                                       ; preds = %for.body16.lr.ph, %for.body16
  %.in155 = phi ptr [ %72, %for.body16.lr.ph ], [ %97, %for.body16 ]
  %75 = phi i64 [ 1, %for.body16.lr.ph ], [ %96, %for.body16 ]
  %76 = load ptr, ptr %.in155, align 8
  %memberidx20 = getelementptr inbounds %Function, ptr %76, i64 0, i32 1
  %77 = load ptr, ptr %memberidx20, align 8
  %78 = load ptr, ptr %76, align 8
  %79 = load ptr, ptr %0, align 8
  %80 = load ptr, ptr %memberidx.i.i.i103, align 8
  %81 = load i64, ptr %80, align 4
  %82 = load ptr, ptr %79, align 8
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %81
  %85 = load ptr, ptr %84, align 8
  %memberidx1.i.i104 = getelementptr inbounds %Module, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx1.i.i104, align 8
  %87 = load i64, ptr %86, align 4
  %88 = getelementptr inbounds ptr, ptr %83, i64 %87
  %89 = load ptr, ptr %88, align 8
  %memberidx2.i.i.i105 = getelementptr inbounds %Module, ptr %89, i64 0, i32 7
  %90 = load ptr, ptr %memberidx2.i.i.i105, align 8
  %memberidx3.i.i.i106 = getelementptr inbounds %ScopeId, ptr %86, i64 0, i32 1
  %91 = load i64, ptr %memberidx3.i.i.i106, align 4
  %92 = load ptr, ptr %90, align 8
  %93 = getelementptr inbounds ptr, ptr %92, i64 %91
  %94 = load ptr, ptr %93, align 8
  %memberidx.i107 = getelementptr inbounds %Scope, ptr %94, i64 0, i32 3
  %95 = load ptr, ptr %memberidx.i107, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %95, ptr %77, ptr %78)
  %96 = add nuw nsw i64 %75, 1
  %97 = getelementptr inbounds ptr, ptr %72, i64 %75
  %.not172 = icmp slt i64 %75, %73
  br i1 %.not172, label %for.body16, label %for.end17

for.end17:                                        ; preds = %for.body16, %for.end9
  tail call void @free(ptr nonnull %71)
  %memberidx26 = getelementptr inbounds %Module, ptr %1, i64 0, i32 3
  %98 = load ptr, ptr %memberidx26, align 8
  %99 = tail call ptr @malloc(i32 25)
  %100 = load ptr, ptr %98, align 8
  %memberidx1.i108 = getelementptr inbounds %Array_Class_, ptr %98, i64 0, i32 1
  %101 = load i64, ptr %memberidx1.i108, align 4
  store i1 false, ptr %99, align 1
  %memberidx1.i.i109 = getelementptr inbounds %ArrayIterator_Class_, ptr %99, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i109, align 4
  %memberidx2.i.i110 = getelementptr inbounds %ArrayIterator_Class_, ptr %99, i64 0, i32 3
  store ptr %100, ptr %memberidx2.i.i110, align 8
  %memberidx3.i.i111 = getelementptr inbounds %ArrayIterator_Class_, ptr %99, i64 0, i32 2
  store i64 %101, ptr %memberidx3.i.i111, align 4
  %102 = icmp slt i64 %101, 1
  br i1 %102, label %for.end25, label %for.body24.lr.ph

for.body24.lr.ph:                                 ; preds = %for.end17
  %memberidx.i.i.i115 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body24

for.body24:                                       ; preds = %for.body24.lr.ph, %for.body24
  %.in156 = phi ptr [ %100, %for.body24.lr.ph ], [ %129, %for.body24 ]
  %103 = phi i64 [ 1, %for.body24.lr.ph ], [ %128, %for.body24 ]
  %104 = load ptr, ptr %.in156, align 8
  %memberidx28 = getelementptr inbounds %Class, ptr %104, i64 0, i32 1
  %105 = load ptr, ptr %memberidx28, align 8
  %106 = load ptr, ptr %104, align 8
  %107 = load ptr, ptr %0, align 8
  %108 = load ptr, ptr %memberidx.i.i.i115, align 8
  %109 = load i64, ptr %108, align 4
  %110 = load ptr, ptr %107, align 8
  %111 = load ptr, ptr %110, align 8
  %112 = getelementptr inbounds ptr, ptr %111, i64 %109
  %113 = load ptr, ptr %112, align 8
  %memberidx1.i.i116 = getelementptr inbounds %Module, ptr %113, i64 0, i32 5
  %114 = load ptr, ptr %memberidx1.i.i116, align 8
  %115 = load i64, ptr %114, align 4
  %116 = getelementptr inbounds ptr, ptr %111, i64 %115
  %117 = load ptr, ptr %116, align 8
  %memberidx2.i.i.i117 = getelementptr inbounds %Module, ptr %117, i64 0, i32 7
  %118 = load ptr, ptr %memberidx2.i.i.i117, align 8
  %memberidx3.i.i.i118 = getelementptr inbounds %ScopeId, ptr %114, i64 0, i32 1
  %119 = load i64, ptr %memberidx3.i.i.i118, align 4
  %120 = load ptr, ptr %118, align 8
  %121 = getelementptr inbounds ptr, ptr %120, i64 %119
  %122 = load ptr, ptr %121, align 8
  %memberidx.i119 = getelementptr inbounds %Scope, ptr %122, i64 0, i32 2
  %123 = load ptr, ptr %memberidx.i119, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %123, ptr %105, ptr %106)
  %memberidx1.i120 = getelementptr inbounds %Scope, ptr %122, i64 0, i32 1
  %124 = load ptr, ptr %memberidx1.i120, align 8
  %125 = tail call ptr @malloc(i32 24)
  %126 = load i64, ptr %106, align 4
  %memberidx1.i5.i121 = getelementptr inbounds %TypeId, ptr %106, i64 0, i32 2
  %127 = load i64, ptr %memberidx1.i5.i121, align 4
  store i64 3, ptr %125, align 4
  %memberidx1.i.i.i122 = getelementptr inbounds %VarId, ptr %125, i64 0, i32 1
  store i64 %126, ptr %memberidx1.i.i.i122, align 4
  %memberidx2.i.i6.i123 = getelementptr inbounds %VarId, ptr %125, i64 0, i32 2
  store i64 %127, ptr %memberidx2.i.i6.i123, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %124, ptr %105, ptr nonnull %125)
  %128 = add nuw nsw i64 %103, 1
  %129 = getelementptr inbounds ptr, ptr %100, i64 %103
  %.not173 = icmp slt i64 %103, %101
  br i1 %.not173, label %for.body24, label %for.end25

for.end25:                                        ; preds = %for.body24, %for.end17
  tail call void @free(ptr nonnull %99)
  %memberidx34 = getelementptr inbounds %Module, ptr %1, i64 0, i32 6
  %130 = load ptr, ptr %memberidx34, align 8
  %131 = tail call ptr @malloc(i32 25)
  %132 = load ptr, ptr %130, align 8
  %memberidx1.i124 = getelementptr inbounds %Array_Enum_, ptr %130, i64 0, i32 1
  %133 = load i64, ptr %memberidx1.i124, align 4
  store i1 false, ptr %131, align 1
  %memberidx1.i.i125 = getelementptr inbounds %ArrayIterator_Enum_, ptr %131, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i125, align 4
  %memberidx2.i.i126 = getelementptr inbounds %ArrayIterator_Enum_, ptr %131, i64 0, i32 3
  store ptr %132, ptr %memberidx2.i.i126, align 8
  %memberidx3.i.i127 = getelementptr inbounds %ArrayIterator_Enum_, ptr %131, i64 0, i32 2
  store i64 %133, ptr %memberidx3.i.i127, align 4
  %134 = icmp slt i64 %133, 1
  br i1 %134, label %for.end33, label %for.body32.lr.ph

for.body32.lr.ph:                                 ; preds = %for.end25
  %memberidx.i.i.i85 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body32

for.body32:                                       ; preds = %for.body32.lr.ph, %for.body32
  %.in157 = phi ptr [ %132, %for.body32.lr.ph ], [ %161, %for.body32 ]
  %135 = phi i64 [ 1, %for.body32.lr.ph ], [ %160, %for.body32 ]
  %136 = load ptr, ptr %.in157, align 8
  %memberidx36 = getelementptr inbounds %Enum, ptr %136, i64 0, i32 1
  %137 = load ptr, ptr %memberidx36, align 8
  %138 = load ptr, ptr %136, align 8
  %139 = load ptr, ptr %0, align 8
  %140 = load ptr, ptr %memberidx.i.i.i85, align 8
  %141 = load i64, ptr %140, align 4
  %142 = load ptr, ptr %139, align 8
  %143 = load ptr, ptr %142, align 8
  %144 = getelementptr inbounds ptr, ptr %143, i64 %141
  %145 = load ptr, ptr %144, align 8
  %memberidx1.i.i86 = getelementptr inbounds %Module, ptr %145, i64 0, i32 5
  %146 = load ptr, ptr %memberidx1.i.i86, align 8
  %147 = load i64, ptr %146, align 4
  %148 = getelementptr inbounds ptr, ptr %143, i64 %147
  %149 = load ptr, ptr %148, align 8
  %memberidx2.i.i.i87 = getelementptr inbounds %Module, ptr %149, i64 0, i32 7
  %150 = load ptr, ptr %memberidx2.i.i.i87, align 8
  %memberidx3.i.i.i88 = getelementptr inbounds %ScopeId, ptr %146, i64 0, i32 1
  %151 = load i64, ptr %memberidx3.i.i.i88, align 4
  %152 = load ptr, ptr %150, align 8
  %153 = getelementptr inbounds ptr, ptr %152, i64 %151
  %154 = load ptr, ptr %153, align 8
  %memberidx.i89 = getelementptr inbounds %Scope, ptr %154, i64 0, i32 4
  %155 = load ptr, ptr %memberidx.i89, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %155, ptr %137, ptr %138)
  %memberidx1.i90 = getelementptr inbounds %Scope, ptr %154, i64 0, i32 1
  %156 = load ptr, ptr %memberidx1.i90, align 8
  %157 = tail call ptr @malloc(i32 24)
  %158 = load i64, ptr %138, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %138, i64 0, i32 2
  %159 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 4, ptr %157, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %157, i64 0, i32 1
  store i64 %158, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %157, i64 0, i32 2
  store i64 %159, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %156, ptr %137, ptr nonnull %157)
  %160 = add nuw nsw i64 %135, 1
  %161 = getelementptr inbounds ptr, ptr %132, i64 %135
  %.not174 = icmp slt i64 %135, %133
  br i1 %.not174, label %for.body32, label %for.end33

for.end33:                                        ; preds = %for.body32, %for.end25
  tail call void @free(ptr nonnull %131)
  %memberidx42 = getelementptr inbounds %Scope, ptr %13, i64 0, i32 6
  %162 = load ptr, ptr %memberidx42, align 8
  %163 = tail call ptr @malloc(i32 25)
  %164 = load ptr, ptr %162, align 8
  %memberidx1.i68 = getelementptr inbounds %Map_String_Type_, ptr %162, i64 0, i32 1
  %165 = load i64, ptr %memberidx1.i68, align 4
  %memberidx2.i69 = getelementptr inbounds %Map_String_Type_, ptr %162, i64 0, i32 2
  %166 = load i64, ptr %memberidx2.i69, align 4
  store i1 false, ptr %163, align 1
  %memberidx1.i.i70 = getelementptr inbounds %MapIterator_String_Type_, ptr %163, i64 0, i32 1
  store ptr %164, ptr %memberidx1.i.i70, align 8
  %memberidx2.i.i71 = getelementptr inbounds %MapIterator_String_Type_, ptr %163, i64 0, i32 2
  store i64 %165, ptr %memberidx2.i.i71, align 4
  %memberidx3.i.i72 = getelementptr inbounds %MapIterator_String_Type_, ptr %163, i64 0, i32 3
  store i64 %166, ptr %memberidx3.i.i72, align 4
  %memberidx.i.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.next39

for.next39:                                       ; preds = %for.body40, %for.end33
  %167 = phi ptr [ %175, %for.body40 ], [ %164, %for.end33 ]
  %168 = phi i64 [ %177, %for.body40 ], [ %166, %for.end33 ]
  %.lcssa132 = phi i64 [ %.lcssa, %for.body40 ], [ %165, %for.end33 ]
  %smin = call i64 @llvm.smin.i64(i64 %.lcssa132, i64 0)
  %169 = add i64 %smin, -1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.body.i, %for.next39
  %170 = phi ptr [ %incdec.ptr.i, %while.body.i ], [ %167, %for.next39 ]
  %171 = phi i64 [ %173, %while.body.i ], [ %.lcssa132, %for.next39 ]
  %172 = icmp sgt i64 %171, 0
  br i1 %172, label %while.body.i, label %MapIterator_String_Type__next.exit

while.body.i:                                     ; preds = %while.entry.i
  %173 = add nsw i64 %171, -1
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %170, i64 1
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i70, align 8
  %174 = load ptr, ptr %170, align 8
  %.not.i = icmp eq ptr %174, null
  br i1 %.not.i, label %while.entry.i, label %MapIterator_String_Type__next.exit

MapIterator_String_Type__next.exit:               ; preds = %while.entry.i, %while.body.i
  %175 = phi ptr [ %170, %while.entry.i ], [ %incdec.ptr.i, %while.body.i ]
  %.lcssa = phi i64 [ %169, %while.entry.i ], [ %173, %while.body.i ]
  %176 = icmp slt i64 %168, 1
  br i1 %176, label %for.end41, label %for.body40

for.body40:                                       ; preds = %MapIterator_String_Type__next.exit
  %177 = add nsw i64 %168, -1
  %178 = getelementptr inbounds ptr, ptr %175, i64 -1
  %179 = load ptr, ptr %178, align 8
  %180 = load ptr, ptr %179, align 8
  %memberidx45 = getelementptr inbounds %MapEntry_String_Type_, ptr %179, i64 0, i32 1
  %181 = load ptr, ptr %memberidx45, align 8
  %182 = load ptr, ptr %0, align 8
  %183 = load ptr, ptr %memberidx.i.i.i, align 8
  %184 = load i64, ptr %183, align 4
  %185 = load ptr, ptr %182, align 8
  %186 = load ptr, ptr %185, align 8
  %187 = getelementptr inbounds ptr, ptr %186, i64 %184
  %188 = load ptr, ptr %187, align 8
  %memberidx1.i.i = getelementptr inbounds %Module, ptr %188, i64 0, i32 5
  %189 = load ptr, ptr %memberidx1.i.i, align 8
  %190 = load i64, ptr %189, align 4
  %191 = getelementptr inbounds ptr, ptr %186, i64 %190
  %192 = load ptr, ptr %191, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %192, i64 0, i32 7
  %193 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %189, i64 0, i32 1
  %194 = load i64, ptr %memberidx3.i.i.i, align 4
  %195 = load ptr, ptr %193, align 8
  %196 = getelementptr inbounds ptr, ptr %195, i64 %194
  %197 = load ptr, ptr %196, align 8
  %memberidx.i = getelementptr inbounds %Scope, ptr %197, i64 0, i32 6
  %198 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr %198, ptr %180, ptr %181)
  br label %for.next39

for.end41:                                        ; preds = %MapIterator_String_Type__next.exit
  tail call void @free(ptr nonnull %163)
  ret void
}

define internal fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx1 = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %6)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %8 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %8, i64 0, i32 5
  %9 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx2.i, align 4
  %11 = icmp sgt i64 %10, 0
  br i1 %11, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend46, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %44, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %184, %ifend46 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = load ptr, ptr %0, align 8
  %14 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %14, ptr noundef nonnull align 8 dereferenceable(6) @186, i64 6, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i, align 4
  %16 = load i64, ptr %7, align 4
  %17 = icmp eq i64 %16, 20
  br i1 %17, label %if.entry.i, label %is_object.exit.thread

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %18, %if.entry.i ], [ %7, %ifend ]
  %memberidx1.i151 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %18 = load ptr, ptr %memberidx1.i151, align 8
  %19 = load i64, ptr %18, align 4
  switch i64 %19, label %ifend6 [
    i64 20, label %if.entry.i
    i64 11, label %tailrecurse.i.preheader
  ]

is_object.exit.thread:                            ; preds = %ifend
  %20 = icmp eq i64 %16, 11
  br i1 %20, label %if.entry3.i, label %ifend6

tailrecurse.i.preheader:                          ; preds = %if.entry.i
  br i1 %17, label %if.entry.i154, label %if.entry3.i

if.entry.i154:                                    ; preds = %tailrecurse.i.preheader, %if.entry.i154
  %.tr11.i197 = phi ptr [ %21, %if.entry.i154 ], [ %7, %tailrecurse.i.preheader ]
  %memberidx1.i153 = getelementptr inbounds %GenericType, ptr %.tr11.i197, i64 0, i32 3
  %21 = load ptr, ptr %memberidx1.i153, align 8
  %22 = load i64, ptr %21, align 4
  %switch = icmp eq i64 %22, 20
  br i1 %switch, label %if.entry.i154, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i154, %is_object.exit.thread, %tailrecurse.i.preheader
  %.tr11.i.lcssa = phi ptr [ %7, %tailrecurse.i.preheader ], [ %7, %is_object.exit.thread ], [ %21, %if.entry.i154 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %24 = load ptr, ptr %13, align 8
  %25 = load i64, ptr %23, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx2.i.i155 = getelementptr inbounds %Module, ptr %28, i64 0, i32 3
  %29 = load ptr, ptr %memberidx2.i.i155, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %30 = load i64, ptr %memberidx3.i.i, align 4
  %31 = load ptr, ptr %29, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 %30
  %33 = load ptr, ptr %32, align 8
  %memberidx.i80 = getelementptr inbounds %Class, ptr %33, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i80, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %34, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %35, 6
  br i1 %.not.i.i, label %String___eq__.exit.i, label %ifend6

String___eq__.exit.i:                             ; preds = %if.entry3.i
  %36 = load ptr, ptr %34, align 8
  %37 = tail call i64 @memcmp(ptr %36, ptr %14, i64 6)
  %38 = icmp eq i64 %37, 0
  %39 = load ptr, ptr %33, align 8
  %40 = load i64, ptr %39, align 4
  %41 = load i64, ptr @BUILTIN_MODULE_ID, align 8
  %42 = icmp eq i64 %40, %41
  %43 = and i1 %38, %42
  br i1 %43, label %if.entry4, label %String___eq__.exit.i.ifend6_crit_edge

String___eq__.exit.i.ifend6_crit_edge:            ; preds = %String___eq__.exit.i
  %.pre = load i64, ptr %7, align 4
  br label %ifend6

if.entry4:                                        ; preds = %String___eq__.exit.i
  %44 = tail call ptr @malloc(i32 49)
  %45 = tail call ptr @malloc(i32 0)
  %46 = tail call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i.i82 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i82, i8 0, i64 16, i1 false)
  %47 = tail call ptr @malloc(i32 24)
  %memberidx.i84 = getelementptr inbounds %Array_uint_, ptr %47, i64 0, i32 1
  store i64 0, ptr %memberidx.i84, align 4
  %memberidx1.i85 = getelementptr inbounds %Array_uint_, ptr %47, i64 0, i32 2
  store i64 8, ptr %memberidx1.i85, align 4
  %48 = tail call ptr @malloc(i32 64)
  store ptr %48, ptr %47, align 8
  store i64 0, ptr %48, align 4
  store i64 1, ptr %memberidx.i84, align 4
  %49 = tail call ptr @malloc(i32 24)
  %memberidx.i86 = getelementptr inbounds %Array_Expression_, ptr %49, i64 0, i32 1
  store i64 0, ptr %memberidx.i86, align 4
  %memberidx1.i87 = getelementptr inbounds %Array_Expression_, ptr %49, i64 0, i32 2
  store i64 8, ptr %memberidx1.i87, align 4
  %50 = tail call ptr @malloc(i32 64)
  store ptr %50, ptr %49, align 8
  store ptr %5, ptr %50, align 8
  store i64 1, ptr %memberidx.i86, align 4
  store i64 8, ptr %44, align 4
  %memberidx.i.i88 = getelementptr inbounds %Expression, ptr %44, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i88, align 4
  %memberidx1.i.i89 = getelementptr inbounds %Expression, ptr %44, i64 0, i32 1
  %memberidx.i90 = getelementptr inbounds %StringExpression, ptr %44, i64 0, i32 6
  store ptr %49, ptr %memberidx.i90, align 8
  %memberidx1.i91 = getelementptr inbounds %StringExpression, ptr %44, i64 0, i32 5
  store ptr %47, ptr %memberidx1.i91, align 8
  %memberidx2.i92 = getelementptr inbounds %Expression, ptr %44, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i92, align 8
  %memberidx3.i = getelementptr inbounds %StringExpression, ptr %44, i64 0, i32 4
  store ptr %46, ptr %memberidx3.i, align 8
  store i1 true, ptr %memberidx1.i.i89, align 1
  br label %common.ret

ifend6:                                           ; preds = %if.entry.i, %is_object.exit.thread, %String___eq__.exit.i.ifend6_crit_edge, %if.entry3.i
  %51 = phi i64 [ %.pre, %String___eq__.exit.i.ifend6_crit_edge ], [ %16, %if.entry3.i ], [ %16, %is_object.exit.thread ], [ %16, %if.entry.i ]
  %52 = add i64 %51, -1
  %53 = icmp ult i64 %52, 9
  %54 = load i64, ptr %12, align 4
  %55 = add i64 %54, -1
  %56 = icmp ult i64 %55, 9
  %57 = and i1 %53, %56
  %58 = icmp ult i64 %52, 7
  %59 = icmp eq i64 %54, 12
  %60 = and i1 %58, %59
  %61 = icmp ult i64 %55, 7
  %62 = icmp eq i64 %51, 12
  %63 = and i1 %62, %61
  %64 = select i1 %63, i1 true, i1 %60
  %spec.select = select i1 %64, i1 true, i1 %57
  %65 = load ptr, ptr %0, align 8
  %66 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %66, ptr noundef nonnull align 8 dereferenceable(6) @186, i64 6, i1 false)
  %67 = tail call ptr @malloc(i32 24)
  store ptr %66, ptr %67, align 8
  %memberidx1.i.i93 = getelementptr inbounds %String, ptr %67, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i93, align 4
  %memberidx2.i.i94 = getelementptr inbounds %String, ptr %67, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i94, align 4
  %68 = load i64, ptr %12, align 4
  %69 = icmp eq i64 %68, 20
  br i1 %69, label %if.entry.i158, label %is_object.exit161.thread

if.entry.i158:                                    ; preds = %ifend6, %if.entry.i158
  %.tr5.i156 = phi ptr [ %70, %if.entry.i158 ], [ %12, %ifend6 ]
  %memberidx1.i157 = getelementptr inbounds %GenericType, ptr %.tr5.i156, i64 0, i32 3
  %70 = load ptr, ptr %memberidx1.i157, align 8
  %71 = load i64, ptr %70, align 4
  switch i64 %71, label %ifend25 [
    i64 20, label %if.entry.i158
    i64 11, label %tailrecurse.i163.preheader
  ]

is_object.exit161.thread:                         ; preds = %ifend6
  %72 = icmp eq i64 %68, 11
  br i1 %72, label %if.entry3.i170, label %ifend25

tailrecurse.i163.preheader:                       ; preds = %if.entry.i158
  br i1 %69, label %if.entry.i166, label %if.entry3.i170

if.entry.i166:                                    ; preds = %tailrecurse.i163.preheader, %if.entry.i166
  %.tr11.i162195 = phi ptr [ %73, %if.entry.i166 ], [ %12, %tailrecurse.i163.preheader ]
  %memberidx1.i165 = getelementptr inbounds %GenericType, ptr %.tr11.i162195, i64 0, i32 3
  %73 = load ptr, ptr %memberidx1.i165, align 8
  %74 = load i64, ptr %73, align 4
  %switch190 = icmp eq i64 %74, 20
  br i1 %switch190, label %if.entry.i166, label %if.entry3.i170

if.entry3.i170:                                   ; preds = %if.entry.i166, %is_object.exit161.thread, %tailrecurse.i163.preheader
  %.tr11.i162.lcssa = phi ptr [ %12, %tailrecurse.i163.preheader ], [ %12, %is_object.exit161.thread ], [ %73, %if.entry.i166 ]
  %memberidx6.i167 = getelementptr inbounds %ObjectType, ptr %.tr11.i162.lcssa, i64 0, i32 1
  %75 = load ptr, ptr %memberidx6.i167, align 8
  %76 = load ptr, ptr %65, align 8
  %77 = load i64, ptr %75, align 4
  %78 = load ptr, ptr %76, align 8
  %79 = getelementptr inbounds ptr, ptr %78, i64 %77
  %80 = load ptr, ptr %79, align 8
  %memberidx2.i.i168 = getelementptr inbounds %Module, ptr %80, i64 0, i32 3
  %81 = load ptr, ptr %memberidx2.i.i168, align 8
  %memberidx3.i.i169 = getelementptr inbounds %TypeId, ptr %75, i64 0, i32 2
  %82 = load i64, ptr %memberidx3.i.i169, align 4
  %83 = load ptr, ptr %81, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  %memberidx.i96 = getelementptr inbounds %Class, ptr %85, i64 0, i32 1
  %86 = load ptr, ptr %memberidx.i96, align 8
  %memberidx.i.i97 = getelementptr inbounds %String, ptr %86, i64 0, i32 1
  %87 = load i64, ptr %memberidx.i.i97, align 4
  %.not.i.i99 = icmp eq i64 %87, 6
  br i1 %.not.i.i99, label %is_buitin.exit104, label %ifend25

is_buitin.exit104:                                ; preds = %if.entry3.i170
  %88 = load ptr, ptr %86, align 8
  %89 = tail call i64 @memcmp(ptr %88, ptr %66, i64 6)
  %90 = icmp eq i64 %89, 0
  %91 = load ptr, ptr %85, align 8
  %92 = load i64, ptr %91, align 4
  %93 = load i64, ptr @BUILTIN_MODULE_ID, align 8
  %94 = icmp eq i64 %92, %93
  %95 = and i1 %90, %94
  %96 = and i1 %53, %95
  br i1 %96, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %is_buitin.exit104
  %97 = load i64, ptr %7, align 4
  %98 = and i64 %97, -2
  %99 = icmp eq i64 %98, 8
  br i1 %99, label %if.entry26, label %else27

ifend25:                                          ; preds = %if.entry.i158, %is_object.exit161.thread, %if.entry3.i170, %is_buitin.exit104, %Array_Expression____sl__.exit
  %is_valid_cast.3 = phi i1 [ true, %Array_Expression____sl__.exit ], [ %spec.select, %is_buitin.exit104 ], [ %spec.select, %if.entry3.i170 ], [ %spec.select, %is_object.exit161.thread ], [ %spec.select, %if.entry.i158 ]
  %exp.0 = phi ptr [ %call.0, %Array_Expression____sl__.exit ], [ %5, %is_buitin.exit104 ], [ %5, %if.entry3.i170 ], [ %5, %is_object.exit161.thread ], [ %5, %if.entry.i158 ]
  %100 = load i64, ptr %7, align 4
  %101 = icmp eq i64 %100, 20
  br i1 %101, label %if.entry.i174, label %is_object.exit177

if.entry.i174:                                    ; preds = %ifend25, %if.entry.i174
  %.tr5.i172 = phi ptr [ %102, %if.entry.i174 ], [ %7, %ifend25 ]
  %memberidx1.i173 = getelementptr inbounds %GenericType, ptr %.tr5.i172, i64 0, i32 3
  %102 = load ptr, ptr %memberidx1.i173, align 8
  %103 = load i64, ptr %102, align 4
  %104 = icmp eq i64 %103, 20
  br i1 %104, label %if.entry.i174, label %is_object.exit177

is_object.exit177:                                ; preds = %if.entry.i174, %ifend25
  %.lcssa.i175 = phi i64 [ %100, %ifend25 ], [ %103, %if.entry.i174 ]
  %105 = icmp eq i64 %.lcssa.i175, 11
  %106 = load i64, ptr %12, align 4
  %107 = icmp eq i64 %106, 20
  br i1 %107, label %if.entry.i180, label %is_object.exit183

if.entry.i180:                                    ; preds = %is_object.exit177, %if.entry.i180
  %.tr5.i178 = phi ptr [ %108, %if.entry.i180 ], [ %12, %is_object.exit177 ]
  %memberidx1.i179 = getelementptr inbounds %GenericType, ptr %.tr5.i178, i64 0, i32 3
  %108 = load ptr, ptr %memberidx1.i179, align 8
  %109 = load i64, ptr %108, align 4
  %110 = icmp eq i64 %109, 20
  br i1 %110, label %if.entry.i180, label %is_object.exit183

is_object.exit183:                                ; preds = %if.entry.i180, %is_object.exit177
  %.lcssa.i181 = phi i64 [ %106, %is_object.exit177 ], [ %109, %if.entry.i180 ]
  %111 = icmp eq i64 %.lcssa.i181, 11
  %112 = and i1 %105, %111
  %113 = icmp eq i64 %100, 13
  %114 = icmp eq i64 %106, 13
  %115 = and i1 %113, %114
  %116 = icmp eq i64 %100, 0
  %117 = select i1 %116, i1 true, i1 %115
  %118 = select i1 %117, i1 true, i1 %112
  %spec.select148 = select i1 %118, i1 true, i1 %is_valid_cast.3
  br i1 %spec.select148, label %ifend46, label %if.entry44

if.entry26:                                       ; preds = %if.entry23
  %119 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %119, align 4
  %memberidx.i.i105 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 19, ptr %memberidx.i.i105, align 4
  %memberidx1.i.i106 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i106, align 1
  %memberidx.i107 = getelementptr inbounds %IntrinsicCall, ptr %119, i64 0, i32 4
  store i64 0, ptr %memberidx.i107, align 4
  %memberidx1.i108 = getelementptr inbounds %IntrinsicCall, ptr %119, i64 0, i32 5
  %120 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %120, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %120, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i, align 4
  %121 = tail call ptr @malloc(i32 64)
  store ptr %121, ptr %120, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %120, ptr %memberidx1.i108, align 8
  %memberidx4.i110 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  %122 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %122, align 4
  store ptr %122, ptr %memberidx4.i110, align 8
  br label %ifend28

else27:                                           ; preds = %if.entry23
  %123 = icmp slt i64 %97, 5
  %124 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %124, align 4
  %memberidx.i.i113 = getelementptr inbounds %Expression, ptr %124, i64 0, i32 2
  store i64 19, ptr %memberidx.i.i113, align 4
  %memberidx1.i.i114 = getelementptr inbounds %Expression, ptr %124, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i114, align 1
  %memberidx.i115 = getelementptr inbounds %IntrinsicCall, ptr %124, i64 0, i32 4
  br i1 %123, label %if.entry31, label %else32

ifend28:                                          ; preds = %if.entry31, %else32, %if.entry26
  %125 = phi ptr [ %120, %if.entry26 ], [ %140, %if.entry31 ], [ %143, %else32 ]
  %call.0 = phi ptr [ %119, %if.entry26 ], [ %124, %if.entry31 ], [ %124, %else32 ]
  %memberidx.i111 = getelementptr inbounds %Array_Expression_, ptr %125, i64 0, i32 1
  %126 = load i64, ptr %memberidx.i111, align 4
  %127 = add i64 %126, 1
  %memberidx.i.i112 = getelementptr inbounds %Array_Expression_, ptr %125, i64 0, i32 2
  %128 = load i64, ptr %memberidx.i.i112, align 4
  %129 = icmp slt i64 %128, %127
  %.pre204 = load ptr, ptr %125, align 8
  br i1 %129, label %while.body.i.i, label %Array_Expression____sl__.exit

while.body.i.i:                                   ; preds = %ifend28, %while.body.i.i
  %130 = phi ptr [ %134, %while.body.i.i ], [ %.pre204, %ifend28 ]
  %131 = phi i64 [ %135, %while.body.i.i ], [ %128, %ifend28 ]
  %132 = shl nuw i64 %131, 1
  store i64 %132, ptr %memberidx.i.i112, align 4
  %133 = shl i64 %131, 4
  %134 = tail call ptr @realloc(ptr %130, i64 %133)
  store ptr %134, ptr %125, align 8
  %135 = load i64, ptr %memberidx.i.i112, align 4
  %136 = icmp slt i64 %135, %127
  br i1 %136, label %while.body.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.body.i.i
  %.pre205 = load i64, ptr %memberidx.i111, align 4
  %.pre210 = add nsw i64 %.pre205, 1
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend28, %Array_Expression____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre210, %Array_Expression____sl__.exit.loopexit ], [ %127, %ifend28 ]
  %137 = phi ptr [ %134, %Array_Expression____sl__.exit.loopexit ], [ %.pre204, %ifend28 ]
  %138 = phi i64 [ %.pre205, %Array_Expression____sl__.exit.loopexit ], [ %126, %ifend28 ]
  store i64 %.pre-phi, ptr %memberidx.i111, align 4
  %139 = getelementptr inbounds ptr, ptr %137, i64 %138
  store ptr %5, ptr %139, align 8
  br label %ifend25

if.entry31:                                       ; preds = %else27
  store i64 1, ptr %memberidx.i115, align 4
  %memberidx1.i116 = getelementptr inbounds %IntrinsicCall, ptr %124, i64 0, i32 5
  %140 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i117 = getelementptr inbounds %Array_Expression_, ptr %140, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i117, align 4
  %memberidx1.i8.i118 = getelementptr inbounds %Array_Expression_, ptr %140, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i118, align 4
  %141 = tail call ptr @malloc(i32 64)
  store ptr %141, ptr %140, align 8
  store i64 0, ptr %memberidx.i7.i117, align 4
  store ptr %140, ptr %memberidx1.i116, align 8
  %memberidx4.i120 = getelementptr inbounds %Expression, ptr %124, i64 0, i32 3
  %142 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %142, align 4
  store ptr %142, ptr %memberidx4.i120, align 8
  br label %ifend28

else32:                                           ; preds = %else27
  store i64 2, ptr %memberidx.i115, align 4
  %memberidx1.i124 = getelementptr inbounds %IntrinsicCall, ptr %124, i64 0, i32 5
  %143 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i125 = getelementptr inbounds %Array_Expression_, ptr %143, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i125, align 4
  %memberidx1.i8.i126 = getelementptr inbounds %Array_Expression_, ptr %143, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i126, align 4
  %144 = tail call ptr @malloc(i32 64)
  store ptr %144, ptr %143, align 8
  store i64 0, ptr %memberidx.i7.i125, align 4
  store ptr %143, ptr %memberidx1.i124, align 8
  %memberidx4.i128 = getelementptr inbounds %Expression, ptr %124, i64 0, i32 3
  %145 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %145, align 4
  store ptr %145, ptr %memberidx4.i128, align 8
  br label %ifend28

if.entry44:                                       ; preds = %is_object.exit183
  %146 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %12)
  %memberidx.i129 = getelementptr inbounds %String, ptr %146, i64 0, i32 1
  %147 = load i64, ptr %memberidx.i129, align 4
  %148 = trunc i64 %147 to i32
  %149 = add i32 %148, 1
  %150 = tail call ptr @malloc(i32 %149)
  %151 = load ptr, ptr %146, align 8
  %152 = load i64, ptr %memberidx.i129, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %150, ptr align 8 %151, i64 %152, i1 false)
  %153 = getelementptr inbounds i8, ptr %150, i64 %152
  store i8 0, ptr %153, align 1
  %154 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %7)
  %memberidx.i130 = getelementptr inbounds %String, ptr %154, i64 0, i32 1
  %155 = load i64, ptr %memberidx.i130, align 4
  %156 = trunc i64 %155 to i32
  %157 = add i32 %156, 1
  %158 = tail call ptr @malloc(i32 %157)
  %159 = load ptr, ptr %154, align 8
  %160 = load i64, ptr %memberidx.i130, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %158, ptr align 8 %159, i64 %160, i1 false)
  %161 = getelementptr inbounds i8, ptr %158, i64 %160
  store i8 0, ptr %161, align 1
  %162 = alloca ptr, align 8
  %163 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %162, ptr nonnull @187, ptr %150, ptr %158)
  %164 = load ptr, ptr %162, align 8
  %165 = tail call ptr @malloc(i32 24)
  store ptr %164, ptr %165, align 8
  %memberidx1.i131 = getelementptr inbounds %String, ptr %165, i64 0, i32 1
  store i64 %163, ptr %memberidx1.i131, align 4
  %memberidx2.i132 = getelementptr inbounds %String, ptr %165, i64 0, i32 2
  store i64 %163, ptr %memberidx2.i132, align 4
  tail call void @free(ptr %150)
  tail call void @free(ptr %158)
  %166 = load ptr, ptr %1, align 8
  %167 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i134 = getelementptr inbounds %Compiler, ptr %167, i64 0, i32 5
  %168 = load ptr, ptr %memberidx1.i134, align 8
  %169 = call ptr @malloc(i32 24)
  store i64 5, ptr %169, align 4
  %memberidx1.i.i135 = getelementptr inbounds %FloError, ptr %169, i64 0, i32 2
  store ptr %166, ptr %memberidx1.i.i135, align 8
  %memberidx2.i.i136 = getelementptr inbounds %FloError, ptr %169, i64 0, i32 1
  store ptr %165, ptr %memberidx2.i.i136, align 8
  %memberidx.i.i137 = getelementptr inbounds %Array_FloError_, ptr %168, i64 0, i32 1
  %170 = load i64, ptr %memberidx.i.i137, align 4
  %171 = add i64 %170, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %168, i64 0, i32 2
  %172 = load i64, ptr %memberidx.i.i.i, align 4
  %173 = icmp slt i64 %172, %171
  %.pre207 = load ptr, ptr %168, align 8
  br i1 %173, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry44, %while.body.i.i.i
  %174 = phi ptr [ %178, %while.body.i.i.i ], [ %.pre207, %if.entry44 ]
  %175 = phi i64 [ %179, %while.body.i.i.i ], [ %172, %if.entry44 ]
  %176 = shl nuw i64 %175, 1
  store i64 %176, ptr %memberidx.i.i.i, align 4
  %177 = shl i64 %175, 4
  %178 = call ptr @realloc(ptr %174, i64 %177)
  store ptr %178, ptr %168, align 8
  %179 = load i64, ptr %memberidx.i.i.i, align 4
  %180 = icmp slt i64 %179, %171
  br i1 %180, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre208 = load i64, ptr %memberidx.i.i137, align 4
  %.pre211 = add nsw i64 %.pre208, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry44, %TypeChecker_error.exit.loopexit
  %.pre-phi212 = phi i64 [ %.pre211, %TypeChecker_error.exit.loopexit ], [ %171, %if.entry44 ]
  %181 = phi ptr [ %178, %TypeChecker_error.exit.loopexit ], [ %.pre207, %if.entry44 ]
  %182 = phi i64 [ %.pre208, %TypeChecker_error.exit.loopexit ], [ %170, %if.entry44 ]
  store i64 %.pre-phi212, ptr %memberidx.i.i137, align 4
  %183 = getelementptr inbounds ptr, ptr %181, i64 %182
  store ptr %169, ptr %183, align 8
  br label %common.ret

ifend46:                                          ; preds = %is_object.exit183
  %184 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %184, align 4
  %memberidx.i.i138 = getelementptr inbounds %Expression, ptr %184, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i138, align 4
  %memberidx1.i.i139 = getelementptr inbounds %Expression, ptr %184, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i139, align 1
  %memberidx.i140 = getelementptr inbounds %TypeCastExpression, ptr %184, i64 0, i32 4
  store ptr %exp.0, ptr %memberidx.i140, align 8
  %memberidx1.i141 = getelementptr inbounds %Expression, ptr %184, i64 0, i32 3
  store ptr %7, ptr %memberidx1.i141, align 8
  %memberidx3.i143 = getelementptr inbounds %Expression, ptr %exp.0, i64 0, i32 1
  %185 = load i1, ptr %memberidx3.i143, align 1
  store i1 %185, ptr %memberidx1.i.i139, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_fill_in_call_args(ptr %0, ptr nocapture readonly %1, ptr readonly %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 1
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i, align 4
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  %6 = load i64, ptr %memberidx2, align 4
  %7 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %7, align 4
  %memberidx1.i34 = getelementptr inbounds %Range, ptr %7, i64 0, i32 1
  store i64 %6, ptr %memberidx1.i34, align 4
  %8 = tail call ptr @malloc(i32 17)
  %memberidx.i.i = getelementptr inbounds %RangeIterator, ptr %8, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %RangeIterator, ptr %8, i64 0, i32 2
  store i64 %6, ptr %memberidx1.i.i, align 4
  %9 = icmp slt i64 %6, 1
  br i1 %9, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx4 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %10 = phi ptr [ %5, %for.body.lr.ph ], [ %40, %Array_Expression____sl__.exit ]
  %memberidx1.i.promoted60 = phi i64 [ 8, %for.body.lr.ph ], [ %.lcssa61, %Array_Expression____sl__.exit ]
  %11 = phi i64 [ 0, %for.body.lr.ph ], [ %32, %Array_Expression____sl__.exit ]
  %12 = phi i64 [ 1, %for.body.lr.ph ], [ %42, %Array_Expression____sl__.exit ]
  %13 = phi i64 [ 0, %for.body.lr.ph ], [ %12, %Array_Expression____sl__.exit ]
  %14 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Array_Type_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx5, align 4
  %16 = icmp sgt i64 %15, %13
  br i1 %16, label %true_block, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  %.promoted84 = phi ptr [ %5, %for.entry ], [ %40, %Array_Expression____sl__.exit ]
  %memberidx1.i.promoted81 = phi i64 [ 8, %for.entry ], [ %.lcssa61, %Array_Expression____sl__.exit ]
  %17 = phi i64 [ 0, %for.entry ], [ %32, %Array_Expression____sl__.exit ]
  tail call void @free(ptr nonnull %8)
  %memberidx.i37 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %18 = load ptr, ptr %memberidx.i37, align 8
  %memberidx1.i38 = getelementptr inbounds %Compiler, ptr %18, i64 0, i32 5
  %19 = load ptr, ptr %memberidx1.i38, align 8
  %memberidx2.i39 = getelementptr inbounds %Array_FloError_, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx2.i39, align 4
  %21 = icmp sgt i64 %20, 0
  %22 = icmp eq ptr %2, null
  %23 = or i1 %22, %21
  br i1 %23, label %common.ret, label %ifend

true_block:                                       ; preds = %for.body
  %24 = load ptr, ptr %14, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %13
  %26 = load ptr, ptr %25, align 8
  br label %end

false_block:                                      ; preds = %for.body
  %27 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %27, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %26, %true_block ], [ %27, %false_block ]
  %28 = load ptr, ptr %3, align 8
  %29 = getelementptr inbounds ptr, ptr %28, i64 %13
  %30 = load ptr, ptr %29, align 8
  %31 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %ternary, ptr %30)
  %32 = add nuw i64 %11, 1
  %33 = icmp slt i64 %memberidx1.i.promoted60, %32
  br i1 %33, label %while.body.i.i, label %Array_Expression____sl__.exit

while.body.i.i:                                   ; preds = %end, %while.body.i.i
  %34 = phi ptr [ %38, %while.body.i.i ], [ %10, %end ]
  %35 = phi i64 [ %36, %while.body.i.i ], [ %memberidx1.i.promoted60, %end ]
  %36 = shl nuw i64 %35, 1
  %37 = shl i64 %35, 4
  %38 = tail call ptr @realloc(ptr %34, i64 %37)
  %39 = icmp slt i64 %36, %32
  br i1 %39, label %while.body.i.i, label %while.entry.i.i.Array_Expression____sl__.exit_crit_edge

while.entry.i.i.Array_Expression____sl__.exit_crit_edge: ; preds = %while.body.i.i
  store ptr %38, ptr %4, align 8
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %while.entry.i.i.Array_Expression____sl__.exit_crit_edge, %end
  %40 = phi ptr [ %38, %while.entry.i.i.Array_Expression____sl__.exit_crit_edge ], [ %10, %end ]
  %.lcssa61 = phi i64 [ %36, %while.entry.i.i.Array_Expression____sl__.exit_crit_edge ], [ %memberidx1.i.promoted60, %end ]
  store i64 %.lcssa61, ptr %memberidx1.i, align 4
  store i64 %32, ptr %memberidx.i, align 4
  %41 = getelementptr inbounds ptr, ptr %40, i64 %11
  store ptr %31, ptr %41, align 8
  %.not85 = icmp slt i64 %12, %6
  %42 = add nuw nsw i64 %12, 1
  br i1 %.not85, label %for.body, label %for.end

common.ret:                                       ; preds = %for.end15, %ifend, %for.end
  ret ptr %4

ifend:                                            ; preds = %for.end
  %memberidx7 = getelementptr inbounds %Array_FunctionArg_, ptr %2, i64 0, i32 1
  %43 = load i64, ptr %memberidx7, align 4
  %44 = load i64, ptr %memberidx2, align 4
  %45 = icmp sgt i64 %43, %44
  br i1 %45, label %for.entry12, label %common.ret

for.entry12:                                      ; preds = %ifend
  %46 = tail call ptr @malloc(i32 25)
  %47 = load ptr, ptr %2, align 8
  %48 = load i64, ptr %memberidx7, align 4
  store i1 false, ptr %46, align 1
  %memberidx1.i.i43 = getelementptr inbounds %ArrayIterator_FunctionArg_, ptr %46, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i43, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_FunctionArg_, ptr %46, i64 0, i32 3
  store ptr %47, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_FunctionArg_, ptr %46, i64 0, i32 2
  store i64 %48, ptr %memberidx3.i.i, align 4
  %49 = icmp slt i64 %48, 1
  br i1 %49, label %for.end15, label %for.body14

for.body14:                                       ; preds = %for.entry12, %ifend20
  %50 = phi ptr [ %65, %ifend20 ], [ %.promoted84, %for.entry12 ]
  %.promoted = phi ptr [ %.promoted83, %ifend20 ], [ %.promoted84, %for.entry12 ]
  %memberidx1.i.promoted = phi i64 [ %memberidx1.i.promoted80, %ifend20 ], [ %memberidx1.i.promoted81, %for.entry12 ]
  %51 = phi i64 [ %66, %ifend20 ], [ %17, %for.entry12 ]
  %.in = phi ptr [ %68, %ifend20 ], [ %47, %for.entry12 ]
  %52 = phi i64 [ %67, %ifend20 ], [ 1, %for.entry12 ]
  %53 = load ptr, ptr %.in, align 8
  %memberidx17 = getelementptr inbounds %FunctionArg, ptr %53, i64 0, i32 6
  %54 = load ptr, ptr %memberidx17, align 8
  %.not = icmp eq ptr %54, null
  br i1 %.not, label %ifend20, label %if.entry18

for.end15:                                        ; preds = %ifend20, %for.entry12
  tail call void @free(ptr nonnull %46)
  br label %common.ret

if.entry18:                                       ; preds = %for.body14
  %55 = add nuw i64 %51, 1
  %56 = icmp slt i64 %memberidx1.i.promoted, %55
  br i1 %56, label %while.body.i.i49, label %Array_Expression____sl__.exit50

while.body.i.i49:                                 ; preds = %if.entry18, %while.body.i.i49
  %57 = phi ptr [ %61, %while.body.i.i49 ], [ %.promoted, %if.entry18 ]
  %58 = phi i64 [ %59, %while.body.i.i49 ], [ %memberidx1.i.promoted, %if.entry18 ]
  %59 = shl nuw i64 %58, 1
  %60 = shl i64 %58, 4
  %61 = tail call ptr @realloc(ptr %57, i64 %60)
  %62 = icmp slt i64 %59, %55
  br i1 %62, label %while.body.i.i49, label %while.entry.i.i48.Array_Expression____sl__.exit50_crit_edge

while.entry.i.i48.Array_Expression____sl__.exit50_crit_edge: ; preds = %while.body.i.i49
  store ptr %61, ptr %4, align 8
  br label %Array_Expression____sl__.exit50

Array_Expression____sl__.exit50:                  ; preds = %while.entry.i.i48.Array_Expression____sl__.exit50_crit_edge, %if.entry18
  %63 = phi ptr [ %61, %while.entry.i.i48.Array_Expression____sl__.exit50_crit_edge ], [ %50, %if.entry18 ]
  %.lcssa = phi i64 [ %59, %while.entry.i.i48.Array_Expression____sl__.exit50_crit_edge ], [ %memberidx1.i.promoted, %if.entry18 ]
  store i64 %.lcssa, ptr %memberidx1.i, align 4
  store i64 %55, ptr %memberidx.i, align 4
  %64 = getelementptr inbounds ptr, ptr %63, i64 %51
  store ptr %54, ptr %64, align 8
  br label %ifend20

ifend20:                                          ; preds = %for.body14, %Array_Expression____sl__.exit50
  %65 = phi ptr [ %50, %for.body14 ], [ %63, %Array_Expression____sl__.exit50 ]
  %.promoted83 = phi ptr [ %.promoted, %for.body14 ], [ %63, %Array_Expression____sl__.exit50 ]
  %memberidx1.i.promoted80 = phi i64 [ %memberidx1.i.promoted, %for.body14 ], [ %.lcssa, %Array_Expression____sl__.exit50 ]
  %66 = phi i64 [ %51, %for.body14 ], [ %55, %Array_Expression____sl__.exit50 ]
  %67 = add nuw nsw i64 %52, 1
  %68 = getelementptr inbounds ptr, ptr %47, i64 %52
  %.not86 = icmp slt i64 %52, %48
  br i1 %.not86, label %for.body14, label %for.end15
}

define internal fastcc void @TypeChecker_add_inherited_props_to_class(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 20
  br i1 %6, label %if.entry.i103, label %is_object.exit

if.entry.i103:                                    ; preds = %3, %if.entry.i103
  %.tr5.i = phi ptr [ %7, %if.entry.i103 ], [ %4, %3 ]
  %memberidx1.i102 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1.i102, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 20
  br i1 %9, label %if.entry.i103, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i103, %3
  %.lcssa.i = phi i64 [ %5, %3 ], [ %8, %if.entry.i103 ]
  %10 = icmp eq i64 %.lcssa.i, 11
  br i1 %10, label %ifend, label %if.entry

if.entry:                                         ; preds = %is_object.exit
  %11 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %4)
  %memberidx.i = getelementptr inbounds %String, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = trunc i64 %12 to i32
  %14 = add i32 %13, 1
  %15 = tail call ptr @malloc(i32 %14)
  %16 = load ptr, ptr %11, align 8
  %17 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %16, i64 %17, i1 false)
  %18 = getelementptr inbounds i8, ptr %15, i64 %17
  store i8 0, ptr %18, align 1
  %19 = alloca ptr, align 8
  %20 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %19, ptr nonnull @154, ptr %15)
  %21 = load ptr, ptr %19, align 8
  %22 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %22, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i, align 4
  tail call void @free(ptr %15)
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 2
  %23 = load ptr, ptr %memberidx1, align 8
  %24 = load ptr, ptr %23, align 8
  %memberidx.i54 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i54, align 8
  %memberidx1.i55 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i55, align 8
  %27 = call ptr @malloc(i32 24)
  store i64 5, ptr %27, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %27, i64 0, i32 2
  store ptr %24, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %27, i64 0, i32 1
  store ptr %22, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %28 = load i64, ptr %memberidx.i.i, align 4
  %29 = add i64 %28, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i.i, align 4
  %31 = icmp slt i64 %30, %29
  %.pre = load ptr, ptr %26, align 8
  br i1 %31, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %32 = phi ptr [ %36, %while.body.i.i.i ], [ %.pre, %if.entry ]
  %33 = phi i64 [ %37, %while.body.i.i.i ], [ %30, %if.entry ]
  %34 = shl nuw i64 %33, 1
  store i64 %34, ptr %memberidx.i.i.i, align 4
  %35 = shl i64 %33, 4
  %36 = call ptr @realloc(ptr %32, i64 %35)
  store ptr %36, ptr %26, align 8
  %37 = load i64, ptr %memberidx.i.i.i, align 4
  %38 = icmp slt i64 %37, %29
  br i1 %38, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre131 = load i64, ptr %memberidx.i.i, align 4
  %.pre141 = add nsw i64 %.pre131, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre141, %TypeChecker_error.exit.loopexit ], [ %29, %if.entry ]
  %39 = phi ptr [ %36, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %40 = phi i64 [ %.pre131, %TypeChecker_error.exit.loopexit ], [ %28, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %41 = getelementptr inbounds ptr, ptr %39, i64 %40
  store ptr %27, ptr %41, align 8
  %.pre133 = load i64, ptr %4, align 4
  br label %ifend

ifend:                                            ; preds = %is_object.exit, %TypeChecker_error.exit
  %42 = phi i64 [ %5, %is_object.exit ], [ %.pre133, %TypeChecker_error.exit ]
  %43 = load ptr, ptr %0, align 8
  %switch123 = icmp eq i64 %42, 20
  br i1 %switch123, label %if.entry.i107, label %if.entry3.i

if.entry.i107:                                    ; preds = %ifend, %if.entry.i107
  %.tr11.i124 = phi ptr [ %44, %if.entry.i107 ], [ %4, %ifend ]
  %memberidx1.i106 = getelementptr inbounds %GenericType, ptr %.tr11.i124, i64 0, i32 3
  %44 = load ptr, ptr %memberidx1.i106, align 8
  %45 = load i64, ptr %44, align 4
  %switch = icmp eq i64 %45, 20
  br i1 %switch, label %if.entry.i107, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i107, %ifend
  %.tr11.i.lcssa = phi ptr [ %4, %ifend ], [ %44, %if.entry.i107 ]
  %memberidx6.i108 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %46 = load ptr, ptr %memberidx6.i108, align 8
  %47 = load ptr, ptr %43, align 8
  %48 = load i64, ptr %46, align 4
  %49 = load ptr, ptr %47, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  %51 = load ptr, ptr %50, align 8
  %memberidx2.i.i109 = getelementptr inbounds %Module, ptr %51, i64 0, i32 3
  %52 = load ptr, ptr %memberidx2.i.i109, align 8
  %memberidx3.i.i110 = getelementptr inbounds %TypeId, ptr %46, i64 0, i32 2
  %53 = load i64, ptr %memberidx3.i.i110, align 4
  %54 = load ptr, ptr %52, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  %memberidx4 = getelementptr inbounds %Class, ptr %56, i64 0, i32 6
  %57 = load ptr, ptr %memberidx4, align 8
  %58 = call ptr @malloc(i32 25)
  %59 = load ptr, ptr %57, align 8
  %memberidx1.i56 = getelementptr inbounds %Map_String_PropId_, ptr %57, i64 0, i32 1
  %60 = load i64, ptr %memberidx1.i56, align 4
  %memberidx2.i57 = getelementptr inbounds %Map_String_PropId_, ptr %57, i64 0, i32 2
  %61 = load i64, ptr %memberidx2.i57, align 4
  store i1 false, ptr %58, align 1
  %memberidx1.i.i58 = getelementptr inbounds %MapIterator_String_PropId_, ptr %58, i64 0, i32 1
  store ptr %59, ptr %memberidx1.i.i58, align 8
  %memberidx2.i.i59 = getelementptr inbounds %MapIterator_String_PropId_, ptr %58, i64 0, i32 2
  store i64 %60, ptr %memberidx2.i.i59, align 4
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %58, i64 0, i32 3
  store i64 %61, ptr %memberidx3.i.i, align 4
  %memberidx9 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx25 = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %memberidx31 = getelementptr inbounds %Class, ptr %1, i64 0, i32 8
  br label %for.next

for.next:                                         ; preds = %for.next.backedge, %if.entry3.i
  %62 = phi ptr [ %59, %if.entry3.i ], [ %70, %for.next.backedge ]
  %63 = phi i64 [ %61, %if.entry3.i ], [ %71, %for.next.backedge ]
  %.lcssa115120 = phi i64 [ %60, %if.entry3.i ], [ %.lcssa, %for.next.backedge ]
  %smin = call i64 @llvm.smin.i64(i64 %.lcssa115120, i64 0)
  %64 = add i64 %smin, -1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.body.i, %for.next
  %65 = phi ptr [ %incdec.ptr.i, %while.body.i ], [ %62, %for.next ]
  %66 = phi i64 [ %68, %while.body.i ], [ %.lcssa115120, %for.next ]
  %67 = icmp sgt i64 %66, 0
  br i1 %67, label %while.body.i, label %MapIterator_String_PropId__next.exit

while.body.i:                                     ; preds = %while.entry.i
  %68 = add nsw i64 %66, -1
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %65, i64 1
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i58, align 8
  %69 = load ptr, ptr %65, align 8
  %.not.i = icmp eq ptr %69, null
  br i1 %.not.i, label %while.entry.i, label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %while.entry.i, %while.body.i
  %70 = phi ptr [ %65, %while.entry.i ], [ %incdec.ptr.i, %while.body.i ]
  %.lcssa = phi i64 [ %64, %while.entry.i ], [ %68, %while.body.i ]
  %71 = add nsw i64 %63, -1
  %72 = icmp slt i64 %63, 1
  br i1 %72, label %for.end, label %for.body

for.body:                                         ; preds = %MapIterator_String_PropId__next.exit
  %73 = getelementptr inbounds ptr, ptr %70, i64 -1
  %74 = load ptr, ptr %73, align 8
  %75 = load ptr, ptr %74, align 8
  %memberidx7 = getelementptr inbounds %MapEntry_String_PropId_, ptr %74, i64 0, i32 1
  %76 = load ptr, ptr %memberidx7, align 8
  %77 = load ptr, ptr %0, align 8
  %memberidx.i.i62 = getelementptr inbounds %PropId, ptr %76, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i.i62, align 8
  %79 = load ptr, ptr %77, align 8
  %80 = load i64, ptr %78, align 4
  %81 = load ptr, ptr %79, align 8
  %82 = getelementptr inbounds ptr, ptr %81, i64 %80
  %83 = load ptr, ptr %82, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %83, i64 0, i32 3
  %84 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %78, i64 0, i32 2
  %85 = load i64, ptr %memberidx3.i.i.i, align 4
  %86 = load ptr, ptr %84, align 8
  %87 = getelementptr inbounds ptr, ptr %86, i64 %85
  %88 = load ptr, ptr %87, align 8
  %89 = load i64, ptr %76, align 4
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i63 = getelementptr inbounds %Class, ptr %88, i64 0, i32 5
  %91 = load ptr, ptr %memberidx1.i63, align 8
  %memberidx2.i64 = getelementptr inbounds %PropId, ptr %76, i64 0, i32 2
  %92 = load i64, ptr %memberidx2.i64, align 4
  %93 = load ptr, ptr %91, align 8
  %94 = getelementptr inbounds ptr, ptr %93, i64 %92
  %95 = load ptr, ptr %94, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %95, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %88, i64 0, i32 4
  %96 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %76, i64 0, i32 2
  %97 = load i64, ptr %memberidx5.i, align 4
  %98 = load ptr, ptr %96, align 8
  %99 = getelementptr inbounds ptr, ptr %98, i64 %97
  %100 = load ptr, ptr %99, align 8
  %memberidx6.i65 = getelementptr inbounds %ClassField, ptr %100, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i65, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %101 = load ptr, ptr %memberidx9, align 8
  %102 = call fastcc i64 @Map_String_PropId__hash_fnc(ptr %75)
  %memberidx.i92 = getelementptr inbounds %Map_String_PropId_, ptr %101, i64 0, i32 1
  %103 = load i64, ptr %memberidx.i92, align 4
  %104 = urem i64 %102, %103
  %105 = load ptr, ptr %101, align 8
  %106 = getelementptr inbounds ptr, ptr %105, i64 %104
  %107 = load ptr, ptr %106, align 8
  %.not.i93116 = icmp eq ptr %107, null
  br i1 %.not.i93116, label %Map_String_PropId____getitem__.exit, label %while.body.i97.lr.ph

while.body.i97.lr.ph:                             ; preds = %get_class_prop_type.exit
  %memberidx1.i.i96 = getelementptr inbounds %String, ptr %75, i64 0, i32 1
  br label %while.body.i97

while.end.i:                                      ; preds = %ifend.i.i
  %.pre136.pre = load ptr, ptr %101, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre136.pre, i64 %hash.0.i117
  %.pre137.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre137.pre, null
  br i1 %.not22.i, label %Map_String_PropId____getitem__.exit, label %if.entry6.i

while.body.i97:                                   ; preds = %while.body.i97.lr.ph, %else.i
  %108 = phi ptr [ %105, %while.body.i97.lr.ph ], [ %118, %else.i ]
  %109 = phi i64 [ %103, %while.body.i97.lr.ph ], [ %119, %else.i ]
  %110 = phi ptr [ %107, %while.body.i97.lr.ph ], [ %123, %else.i ]
  %hash.0.i117 = phi i64 [ %104, %while.body.i97.lr.ph ], [ %121, %else.i ]
  %111 = load ptr, ptr %110, align 8
  %memberidx.i.i95 = getelementptr inbounds %String, ptr %111, i64 0, i32 1
  %112 = load i64, ptr %memberidx.i.i95, align 4
  %113 = load i64, ptr %memberidx1.i.i96, align 4
  %.not.i.i = icmp eq i64 %112, %113
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i97
  %114 = load ptr, ptr %111, align 8
  %115 = load ptr, ptr %75, align 8
  %116 = call i64 @memcmp(ptr %114, ptr %115, i64 %112)
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre134 = load i64, ptr %memberidx.i92, align 4
  %.pre135 = load ptr, ptr %101, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i97
  %118 = phi ptr [ %.pre135, %ifend.i.i.else.i_crit_edge ], [ %108, %while.body.i97 ]
  %119 = phi i64 [ %.pre134, %ifend.i.i.else.i_crit_edge ], [ %109, %while.body.i97 ]
  %120 = add nuw i64 %hash.0.i117, 1
  %121 = urem i64 %120, %119
  %122 = getelementptr inbounds ptr, ptr %118, i64 %121
  %123 = load ptr, ptr %122, align 8
  %.not.i93 = icmp eq ptr %123, null
  br i1 %.not.i93, label %Map_String_PropId____getitem__.exit, label %while.body.i97

if.entry6.i:                                      ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre137.pre, i64 0, i32 1
  %124 = load ptr, ptr %memberidx10.i, align 8
  br label %Map_String_PropId____getitem__.exit

Map_String_PropId____getitem__.exit:              ; preds = %else.i, %get_class_prop_type.exit, %while.end.i, %if.entry6.i
  %common.ret.op.i98 = phi ptr [ %124, %if.entry6.i ], [ null, %while.end.i ], [ null, %get_class_prop_type.exit ], [ null, %else.i ]
  %125 = load ptr, ptr %0, align 8
  %126 = load ptr, ptr %memberidx.i.i62, align 8
  %127 = load ptr, ptr %125, align 8
  %128 = load i64, ptr %126, align 4
  %129 = load ptr, ptr %127, align 8
  %130 = getelementptr inbounds ptr, ptr %129, i64 %128
  %131 = load ptr, ptr %130, align 8
  %memberidx2.i.i.i80 = getelementptr inbounds %Module, ptr %131, i64 0, i32 3
  %132 = load ptr, ptr %memberidx2.i.i.i80, align 8
  %memberidx3.i.i.i81 = getelementptr inbounds %TypeId, ptr %126, i64 0, i32 2
  %133 = load i64, ptr %memberidx3.i.i.i81, align 4
  %134 = load ptr, ptr %132, align 8
  %135 = getelementptr inbounds ptr, ptr %134, i64 %133
  %136 = load ptr, ptr %135, align 8
  %137 = load i64, ptr %76, align 4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %if.entry.i74, label %ifend.i78

if.entry.i74:                                     ; preds = %Map_String_PropId____getitem__.exit
  %memberidx1.i84 = getelementptr inbounds %Class, ptr %136, i64 0, i32 5
  %139 = load ptr, ptr %memberidx1.i84, align 8
  %memberidx2.i85 = getelementptr inbounds %PropId, ptr %76, i64 0, i32 2
  %140 = load i64, ptr %memberidx2.i85, align 4
  %141 = load ptr, ptr %139, align 8
  %142 = getelementptr inbounds ptr, ptr %141, i64 %140
  %143 = load ptr, ptr %142, align 8
  %memberidx3.i86 = getelementptr inbounds %ClassMethod, ptr %143, i64 0, i32 2
  %memberidx3.i73 = getelementptr inbounds %ClassMethod, ptr %143, i64 0, i32 1
  br label %is_class_prop_static.exit

ifend.i78:                                        ; preds = %Map_String_PropId____getitem__.exit
  %memberidx4.i88 = getelementptr inbounds %Class, ptr %136, i64 0, i32 4
  %144 = load ptr, ptr %memberidx4.i88, align 8
  %memberidx5.i89 = getelementptr inbounds %PropId, ptr %76, i64 0, i32 2
  %145 = load i64, ptr %memberidx5.i89, align 4
  %146 = load ptr, ptr %144, align 8
  %147 = getelementptr inbounds ptr, ptr %146, i64 %145
  %148 = load ptr, ptr %147, align 8
  %memberidx6.i90 = getelementptr inbounds %ClassField, ptr %148, i64 0, i32 2
  %memberidx6.i77 = getelementptr inbounds %ClassField, ptr %148, i64 0, i32 1
  br label %is_class_prop_static.exit

is_class_prop_static.exit:                        ; preds = %if.entry.i74, %ifend.i78
  %common.ret.op.i83113.in = phi ptr [ %memberidx3.i86, %if.entry.i74 ], [ %memberidx6.i90, %ifend.i78 ]
  %common.ret.op.in.i69 = phi ptr [ %memberidx3.i73, %if.entry.i74 ], [ %memberidx6.i77, %ifend.i78 ]
  %common.ret.op.i70 = load i1, ptr %common.ret.op.in.i69, align 1
  br i1 %common.ret.op.i70, label %for.next.backedge, label %ifend14

for.end:                                          ; preds = %MapIterator_String_PropId__next.exit
  tail call void @free(ptr nonnull %58)
  ret void

ifend14:                                          ; preds = %is_class_prop_static.exit
  %common.ret.op.i83113 = load i64, ptr %common.ret.op.i83113.in, align 4
  %149 = icmp ne i64 %common.ret.op.i83113, 1
  %150 = load i64, ptr %common.ret.op.i, align 4
  %151 = icmp ne i64 %150, 16
  %.not = or i1 %149, %151
  %152 = icmp eq ptr %common.ret.op.i98, null
  %or.cond = select i1 %.not, i1 %152, i1 false
  br i1 %or.cond, label %if.entry18, label %for.next.backedge

if.entry18:                                       ; preds = %ifend14
  %153 = icmp eq i64 %137, 1
  br i1 %153, label %if.entry22, label %ifend24

if.entry22:                                       ; preds = %if.entry18
  %154 = load i64, ptr %memberidx25, align 4
  %155 = add nsw i64 %154, 1
  store i64 %155, ptr %memberidx25, align 4
  %.pre138 = load i64, ptr %76, align 4
  br label %ifend24

ifend24:                                          ; preds = %if.entry18, %if.entry22
  %156 = phi i64 [ %137, %if.entry18 ], [ %.pre138, %if.entry22 ]
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend24
  %158 = load i64, ptr %memberidx31, align 4
  %159 = add nsw i64 %158, 1
  store i64 %159, ptr %memberidx31, align 4
  br label %ifend30

ifend30:                                          ; preds = %ifend24, %if.entry28
  %160 = load ptr, ptr %memberidx9, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %160, ptr %75, ptr nonnull %76)
  br label %for.next.backedge

for.next.backedge:                                ; preds = %ifend30, %is_class_prop_static.exit, %ifend14
  br label %for.next
}

define internal fastcc ptr @TypeChecker_check_match_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca %Type, align 8
  store i64 21, ptr %3, align 8
  %memberidx = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend13, %else12, %if.entry11, %2, %TypeChecker_error.exit237, %ifend72, %TypeChecker_error.exit224, %TypeChecker_error.exit213, %TypeChecker_error.exit196, %TypeChecker_error.exit183, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit183 ], [ null, %TypeChecker_error.exit196 ], [ null, %TypeChecker_error.exit213 ], [ null, %TypeChecker_error.exit224 ], [ %40, %ifend72 ], [ null, %TypeChecker_error.exit237 ], [ null, %2 ], [ null, %if.entry11 ], [ null, %else12 ], [ null, %ifend13 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx.i140 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %memberidx.i140, align 4
  %11 = icmp eq i64 %10, 5
  br i1 %11, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %12 = call ptr @malloc(i32 31)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %12, ptr noundef nonnull align 8 dereferenceable(31) @223, i64 31, i1 false)
  %13 = call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  store i64 31, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 2
  store i64 31, ptr %memberidx2.i.i, align 4
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i142 = getelementptr inbounds %Compiler, ptr %16, i64 0, i32 5
  %17 = load ptr, ptr %memberidx1.i142, align 8
  %18 = call ptr @malloc(i32 24)
  store i64 5, ptr %18, align 4
  %memberidx1.i.i143 = getelementptr inbounds %FloError, ptr %18, i64 0, i32 2
  store ptr %15, ptr %memberidx1.i.i143, align 8
  %memberidx2.i.i144 = getelementptr inbounds %FloError, ptr %18, i64 0, i32 1
  store ptr %13, ptr %memberidx2.i.i144, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i.i, align 4
  %20 = add i64 %19, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 2
  %21 = load i64, ptr %memberidx.i.i.i, align 4
  %22 = icmp slt i64 %21, %20
  %.pre37 = load ptr, ptr %17, align 8
  br i1 %22, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry3, %while.body.i.i.i
  %23 = phi ptr [ %27, %while.body.i.i.i ], [ %.pre37, %if.entry3 ]
  %24 = phi i64 [ %28, %while.body.i.i.i ], [ %21, %if.entry3 ]
  %25 = shl nuw i64 %24, 1
  store i64 %25, ptr %memberidx.i.i.i, align 4
  %26 = shl i64 %24, 4
  %27 = call ptr @realloc(ptr %23, i64 %26)
  store ptr %27, ptr %17, align 8
  %28 = load i64, ptr %memberidx.i.i.i, align 4
  %29 = icmp slt i64 %28, %20
  br i1 %29, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre38 = load i64, ptr %memberidx.i.i, align 4
  %.pre40 = add nsw i64 %.pre38, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry3, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre40, %TypeChecker_error.exit.loopexit ], [ %20, %if.entry3 ]
  %30 = phi ptr [ %27, %TypeChecker_error.exit.loopexit ], [ %.pre37, %if.entry3 ]
  %31 = phi i64 [ %.pre38, %TypeChecker_error.exit.loopexit ], [ %19, %if.entry3 ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %32 = getelementptr inbounds ptr, ptr %30, i64 %31
  store ptr %18, ptr %32, align 8
  br label %common.ret

ifend5:                                           ; preds = %ifend
  %memberidx8 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %33 = load ptr, ptr %memberidx8, align 8
  %34 = load i64, ptr %33, align 4
  %35 = icmp eq i64 %34, 20
  br i1 %35, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend5, %if.entry.i
  %.tr5.i = phi ptr [ %36, %if.entry.i ], [ %33, %ifend5 ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %36 = load ptr, ptr %memberidx1.i1, align 8
  %37 = load i64, ptr %36, align 4
  %38 = icmp eq i64 %37, 20
  br i1 %38, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend5
  %.lcssa.i = phi i64 [ %34, %ifend5 ], [ %37, %if.entry.i ]
  %39 = icmp eq i64 %.lcssa.i, 11
  %40 = tail call ptr @malloc(i32 50)
  store i64 8, ptr %40, align 4
  %memberidx.i.i145 = getelementptr inbounds %Expression, ptr %40, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i145, align 4
  %memberidx1.i.i146 = getelementptr inbounds %Expression, ptr %40, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i146, align 1
  %memberidx.i147 = getelementptr inbounds %MatchExpression, ptr %40, i64 0, i32 4
  store ptr %5, ptr %memberidx.i147, align 8
  %memberidx1.i148 = getelementptr inbounds %MatchExpression, ptr %40, i64 0, i32 7
  store i1 %39, ptr %memberidx1.i148, align 1
  %memberidx2.i149 = getelementptr inbounds %MatchExpression, ptr %40, i64 0, i32 5
  %41 = call ptr @malloc(i32 24)
  %memberidx.i9.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %41, i64 0, i32 1
  store i64 0, ptr %memberidx.i9.i, align 4
  %memberidx1.i10.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %41, i64 0, i32 2
  store i64 8, ptr %memberidx1.i10.i, align 4
  %42 = call ptr @malloc(i32 64)
  store ptr %42, ptr %41, align 8
  store i64 0, ptr %memberidx.i9.i, align 4
  store ptr %41, ptr %memberidx2.i149, align 8
  %memberidx5.i = getelementptr inbounds %MatchExpression, ptr %40, i64 0, i32 6
  store ptr null, ptr %memberidx5.i, align 8
  %memberidx9 = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 4
  %43 = load ptr, ptr %memberidx9, align 8
  %44 = call ptr @malloc(i32 25)
  %45 = load ptr, ptr %43, align 8
  %memberidx1.i150 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %43, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i150, align 4
  %memberidx1.i.i151 = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %44, i64 0, i32 1
  %memberidx2.i.i152 = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %44, i64 0, i32 3
  store ptr %45, ptr %memberidx2.i.i152, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %44, i64 0, i32 2
  store i64 %46, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i151, align 4
  %47 = load ptr, ptr %45, align 8
  %48 = icmp slt i64 %46, 1
  store i1 %48, ptr %44, align 1
  br i1 %48, label %for.end, label %for.body

for.body:                                         ; preds = %is_object.exit, %Array_MatchExpressionCase____sl__.exit
  %49 = phi i64 [ %181, %Array_MatchExpressionCase____sl__.exit ], [ 1, %is_object.exit ]
  %50 = phi ptr [ %183, %Array_MatchExpressionCase____sl__.exit ], [ %47, %is_object.exit ]
  %result_type.010 = phi ptr [ %result_type.1, %Array_MatchExpressionCase____sl__.exit ], [ %3, %is_object.exit ]
  br i1 %39, label %if.entry11, label %else12

for.end:                                          ; preds = %Array_MatchExpressionCase____sl__.exit, %is_object.exit
  %result_type.0.lcssa = phi ptr [ %3, %is_object.exit ], [ %result_type.1, %Array_MatchExpressionCase____sl__.exit ]
  tail call void @free(ptr nonnull %44)
  %memberidx57 = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 5
  %51 = load ptr, ptr %memberidx57, align 8
  %52 = icmp eq ptr %51, null
  br i1 %52, label %if.entry58, label %else59

if.entry11:                                       ; preds = %for.body
  %53 = alloca %BinaryExpressionNode, align 8
  %54 = load ptr, ptr %memberidx, align 8
  %55 = load ptr, ptr %50, align 8
  %56 = load ptr, ptr %54, align 8
  %57 = load ptr, ptr %55, align 8
  %58 = call ptr @malloc(i32 32)
  %59 = load i64, ptr %56, align 4
  %memberidx1.i.i156 = getelementptr inbounds %FloRange, ptr %57, i64 0, i32 1
  %60 = load i64, ptr %memberidx1.i.i156, align 4
  %memberidx2.i.i157 = getelementptr inbounds %FloRange, ptr %56, i64 0, i32 2
  %61 = load i64, ptr %memberidx2.i.i157, align 4
  %memberidx3.i.i158 = getelementptr inbounds %FloRange, ptr %57, i64 0, i32 3
  %62 = load i64, ptr %memberidx3.i.i158, align 4
  store i64 %59, ptr %58, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %58, i64 0, i32 1
  store i64 %60, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %58, i64 0, i32 2
  store i64 %61, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %58, i64 0, i32 3
  store i64 %62, ptr %memberidx3.i.i.i, align 4
  store ptr %58, ptr %53, align 8
  %memberidx.i.i.i159 = getelementptr inbounds %StatementNode, ptr %53, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i159, align 8
  %memberidx.i.i160 = getelementptr inbounds %ExpressionNode, ptr %53, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i160, align 8
  %memberidx2.i161 = getelementptr inbounds %BinaryExpressionNode, ptr %53, i64 0, i32 3
  store ptr %54, ptr %memberidx2.i161, align 8
  %memberidx3.i = getelementptr inbounds %BinaryExpressionNode, ptr %53, i64 0, i32 4
  store i64 11, ptr %memberidx3.i, align 8
  %memberidx4.i162 = getelementptr inbounds %BinaryExpressionNode, ptr %53, i64 0, i32 5
  store ptr %55, ptr %memberidx4.i162, align 8
  %63 = call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %5, ptr nonnull %53, ptr null)
  %64 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i164 = getelementptr inbounds %Compiler, ptr %64, i64 0, i32 5
  %65 = load ptr, ptr %memberidx1.i164, align 8
  %memberidx2.i165 = getelementptr inbounds %Array_FloError_, ptr %65, i64 0, i32 1
  %66 = load i64, ptr %memberidx2.i165, align 4
  %67 = icmp sgt i64 %66, 0
  br i1 %67, label %common.ret, label %ifend18

else12:                                           ; preds = %for.body
  %68 = load ptr, ptr %memberidx8, align 8
  %69 = load ptr, ptr %50, align 8
  %70 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %68, ptr %69)
  %71 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i167 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 5
  %72 = load ptr, ptr %memberidx1.i167, align 8
  %memberidx2.i168 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %73 = load i64, ptr %memberidx2.i168, align 4
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %common.ret, label %ifend30

ifend13:                                          ; preds = %ifend30, %ifend18
  %expression.0 = phi ptr [ %63, %ifend18 ], [ %70, %ifend30 ]
  %match_case_kind.0 = phi i64 [ 0, %ifend18 ], [ 1, %ifend30 ]
  %memberidx40 = getelementptr inbounds %MatchExpressionCaseNode, ptr %50, i64 0, i32 1
  %75 = load ptr, ptr %memberidx40, align 8
  %76 = call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %75, ptr null, i1 true)
  %77 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i170 = getelementptr inbounds %Compiler, ptr %77, i64 0, i32 5
  %78 = load ptr, ptr %memberidx1.i170, align 8
  %memberidx2.i171 = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 1
  %79 = load i64, ptr %memberidx2.i171, align 4
  %80 = icmp sgt i64 %79, 0
  br i1 %80, label %common.ret, label %ifend43

ifend18:                                          ; preds = %if.entry11
  %memberidx19 = getelementptr inbounds %Expression, ptr %63, i64 0, i32 3
  %81 = load ptr, ptr %memberidx19, align 8
  %82 = load i64, ptr %81, align 4
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %ifend13, label %if.entry20

if.entry20:                                       ; preds = %ifend18
  %84 = load ptr, ptr %memberidx8, align 8
  %85 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %84)
  %memberidx.i172 = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  %86 = load i64, ptr %memberidx.i172, align 4
  %87 = trunc i64 %86 to i32
  %88 = add i32 %87, 1
  %89 = call ptr @malloc(i32 %88)
  %90 = load ptr, ptr %85, align 8
  %91 = load i64, ptr %memberidx.i172, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %89, ptr align 8 %90, i64 %91, i1 false)
  %92 = getelementptr inbounds i8, ptr %89, i64 %91
  store i8 0, ptr %92, align 1
  %93 = alloca ptr, align 8
  %94 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %93, ptr nonnull @224, ptr %89)
  %95 = load ptr, ptr %93, align 8
  %96 = tail call ptr @malloc(i32 24)
  store ptr %95, ptr %96, align 8
  %memberidx1.i173 = getelementptr inbounds %String, ptr %96, i64 0, i32 1
  store i64 %94, ptr %memberidx1.i173, align 4
  %memberidx2.i174 = getelementptr inbounds %String, ptr %96, i64 0, i32 2
  store i64 %94, ptr %memberidx2.i174, align 4
  tail call void @free(ptr %89)
  %97 = load ptr, ptr %50, align 8
  %98 = load ptr, ptr %97, align 8
  %99 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i176 = getelementptr inbounds %Compiler, ptr %99, i64 0, i32 5
  %100 = load ptr, ptr %memberidx1.i176, align 8
  %101 = call ptr @malloc(i32 24)
  store i64 5, ptr %101, align 4
  %memberidx1.i.i177 = getelementptr inbounds %FloError, ptr %101, i64 0, i32 2
  store ptr %98, ptr %memberidx1.i.i177, align 8
  %memberidx2.i.i178 = getelementptr inbounds %FloError, ptr %101, i64 0, i32 1
  store ptr %96, ptr %memberidx2.i.i178, align 8
  %memberidx.i.i179 = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 1
  %102 = load i64, ptr %memberidx.i.i179, align 4
  %103 = add i64 %102, 1
  %memberidx.i.i.i180 = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 2
  %104 = load i64, ptr %memberidx.i.i.i180, align 4
  %105 = icmp slt i64 %104, %103
  %.pre22 = load ptr, ptr %100, align 8
  br i1 %105, label %while.body.i.i.i182, label %TypeChecker_error.exit183

while.body.i.i.i182:                              ; preds = %if.entry20, %while.body.i.i.i182
  %106 = phi ptr [ %110, %while.body.i.i.i182 ], [ %.pre22, %if.entry20 ]
  %107 = phi i64 [ %111, %while.body.i.i.i182 ], [ %104, %if.entry20 ]
  %108 = shl nuw i64 %107, 1
  store i64 %108, ptr %memberidx.i.i.i180, align 4
  %109 = shl i64 %107, 4
  %110 = call ptr @realloc(ptr %106, i64 %109)
  store ptr %110, ptr %100, align 8
  %111 = load i64, ptr %memberidx.i.i.i180, align 4
  %112 = icmp slt i64 %111, %103
  br i1 %112, label %while.body.i.i.i182, label %TypeChecker_error.exit183.loopexit

TypeChecker_error.exit183.loopexit:               ; preds = %while.body.i.i.i182
  %.pre23 = load i64, ptr %memberidx.i.i179, align 4
  %.pre49 = add nsw i64 %.pre23, 1
  br label %TypeChecker_error.exit183

TypeChecker_error.exit183:                        ; preds = %if.entry20, %TypeChecker_error.exit183.loopexit
  %.pre-phi50 = phi i64 [ %.pre49, %TypeChecker_error.exit183.loopexit ], [ %103, %if.entry20 ]
  %113 = phi ptr [ %110, %TypeChecker_error.exit183.loopexit ], [ %.pre22, %if.entry20 ]
  %114 = phi i64 [ %.pre23, %TypeChecker_error.exit183.loopexit ], [ %102, %if.entry20 ]
  store i64 %.pre-phi50, ptr %memberidx.i.i179, align 4
  %115 = getelementptr inbounds ptr, ptr %113, i64 %114
  store ptr %101, ptr %115, align 8
  br label %common.ret

ifend30:                                          ; preds = %else12
  %116 = load ptr, ptr %memberidx8, align 8
  %memberidx32 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 3
  %117 = load ptr, ptr %memberidx32, align 8
  %118 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %116, ptr %117)
  br i1 %118, label %ifend13, label %if.entry33

if.entry33:                                       ; preds = %ifend30
  %119 = load ptr, ptr %memberidx8, align 8
  %120 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %119)
  %memberidx.i184 = getelementptr inbounds %String, ptr %120, i64 0, i32 1
  %121 = load i64, ptr %memberidx.i184, align 4
  %122 = trunc i64 %121 to i32
  %123 = add i32 %122, 1
  %124 = call ptr @malloc(i32 %123)
  %125 = load ptr, ptr %120, align 8
  %126 = load i64, ptr %memberidx.i184, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %124, ptr align 8 %125, i64 %126, i1 false)
  %127 = getelementptr inbounds i8, ptr %124, i64 %126
  store i8 0, ptr %127, align 1
  %128 = load ptr, ptr %memberidx32, align 8
  %129 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %128)
  %memberidx.i185 = getelementptr inbounds %String, ptr %129, i64 0, i32 1
  %130 = load i64, ptr %memberidx.i185, align 4
  %131 = trunc i64 %130 to i32
  %132 = add i32 %131, 1
  %133 = call ptr @malloc(i32 %132)
  %134 = load ptr, ptr %129, align 8
  %135 = load i64, ptr %memberidx.i185, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %133, ptr align 8 %134, i64 %135, i1 false)
  %136 = getelementptr inbounds i8, ptr %133, i64 %135
  store i8 0, ptr %136, align 1
  %137 = alloca ptr, align 8
  %138 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %137, ptr nonnull @225, ptr %124, ptr %133)
  %139 = load ptr, ptr %137, align 8
  %140 = tail call ptr @malloc(i32 24)
  store ptr %139, ptr %140, align 8
  %memberidx1.i186 = getelementptr inbounds %String, ptr %140, i64 0, i32 1
  store i64 %138, ptr %memberidx1.i186, align 4
  %memberidx2.i187 = getelementptr inbounds %String, ptr %140, i64 0, i32 2
  store i64 %138, ptr %memberidx2.i187, align 4
  tail call void @free(ptr %124)
  tail call void @free(ptr %133)
  %141 = load ptr, ptr %50, align 8
  %142 = load ptr, ptr %141, align 8
  %143 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i189 = getelementptr inbounds %Compiler, ptr %143, i64 0, i32 5
  %144 = load ptr, ptr %memberidx1.i189, align 8
  %145 = call ptr @malloc(i32 24)
  store i64 5, ptr %145, align 4
  %memberidx1.i.i190 = getelementptr inbounds %FloError, ptr %145, i64 0, i32 2
  store ptr %142, ptr %memberidx1.i.i190, align 8
  %memberidx2.i.i191 = getelementptr inbounds %FloError, ptr %145, i64 0, i32 1
  store ptr %140, ptr %memberidx2.i.i191, align 8
  %memberidx.i.i192 = getelementptr inbounds %Array_FloError_, ptr %144, i64 0, i32 1
  %146 = load i64, ptr %memberidx.i.i192, align 4
  %147 = add i64 %146, 1
  %memberidx.i.i.i193 = getelementptr inbounds %Array_FloError_, ptr %144, i64 0, i32 2
  %148 = load i64, ptr %memberidx.i.i.i193, align 4
  %149 = icmp slt i64 %148, %147
  %.pre = load ptr, ptr %144, align 8
  br i1 %149, label %while.body.i.i.i195, label %TypeChecker_error.exit196

while.body.i.i.i195:                              ; preds = %if.entry33, %while.body.i.i.i195
  %150 = phi ptr [ %154, %while.body.i.i.i195 ], [ %.pre, %if.entry33 ]
  %151 = phi i64 [ %155, %while.body.i.i.i195 ], [ %148, %if.entry33 ]
  %152 = shl nuw i64 %151, 1
  store i64 %152, ptr %memberidx.i.i.i193, align 4
  %153 = shl i64 %151, 4
  %154 = call ptr @realloc(ptr %150, i64 %153)
  store ptr %154, ptr %144, align 8
  %155 = load i64, ptr %memberidx.i.i.i193, align 4
  %156 = icmp slt i64 %155, %147
  br i1 %156, label %while.body.i.i.i195, label %TypeChecker_error.exit196.loopexit

TypeChecker_error.exit196.loopexit:               ; preds = %while.body.i.i.i195
  %.pre20 = load i64, ptr %memberidx.i.i192, align 4
  %.pre51 = add nsw i64 %.pre20, 1
  br label %TypeChecker_error.exit196

TypeChecker_error.exit196:                        ; preds = %if.entry33, %TypeChecker_error.exit196.loopexit
  %.pre-phi52 = phi i64 [ %.pre51, %TypeChecker_error.exit196.loopexit ], [ %147, %if.entry33 ]
  %157 = phi ptr [ %154, %TypeChecker_error.exit196.loopexit ], [ %.pre, %if.entry33 ]
  %158 = phi i64 [ %.pre20, %TypeChecker_error.exit196.loopexit ], [ %146, %if.entry33 ]
  store i64 %.pre-phi52, ptr %memberidx.i.i192, align 4
  %159 = getelementptr inbounds ptr, ptr %157, i64 %158
  store ptr %145, ptr %159, align 8
  br label %common.ret

ifend43:                                          ; preds = %ifend13
  %memberidx44 = getelementptr inbounds %Block, ptr %76, i64 0, i32 4
  %160 = load ptr, ptr %memberidx44, align 8
  %.not = icmp eq ptr %160, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend43
  %memberidx46 = getelementptr inbounds %Expression, ptr %160, i64 0, i32 3
  %161 = load ptr, ptr %memberidx46, align 8
  br label %end

false_block:                                      ; preds = %ifend43
  %162 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %162, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %161, %true_block ], [ %162, %false_block ]
  %163 = load i64, ptr %result_type.010, align 4
  %164 = icmp eq i64 %163, 21
  br i1 %164, label %ifend50, label %else49

else49:                                           ; preds = %end
  %165 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %result_type.010, ptr %ternary)
  br i1 %165, label %ifend50, label %if.entry51

ifend50:                                          ; preds = %end, %else49
  %result_type.1 = phi ptr [ %result_type.010, %else49 ], [ %ternary, %end ]
  %166 = tail call ptr @malloc(i32 24)
  store i64 %match_case_kind.0, ptr %166, align 4
  %memberidx1.i197 = getelementptr inbounds %MatchExpressionCase, ptr %166, i64 0, i32 1
  store ptr %expression.0, ptr %memberidx1.i197, align 8
  %memberidx2.i198 = getelementptr inbounds %MatchExpressionCase, ptr %166, i64 0, i32 2
  store ptr %76, ptr %memberidx2.i198, align 8
  %167 = load i64, ptr %memberidx.i9.i, align 4
  %168 = add i64 %167, 1
  %169 = load i64, ptr %memberidx1.i10.i, align 4
  %170 = icmp slt i64 %169, %168
  %.pre28 = load ptr, ptr %41, align 8
  br i1 %170, label %while.body.i.i, label %Array_MatchExpressionCase____sl__.exit

while.body.i.i:                                   ; preds = %ifend50, %while.body.i.i
  %171 = phi ptr [ %175, %while.body.i.i ], [ %.pre28, %ifend50 ]
  %172 = phi i64 [ %176, %while.body.i.i ], [ %169, %ifend50 ]
  %173 = shl nuw i64 %172, 1
  store i64 %173, ptr %memberidx1.i10.i, align 4
  %174 = shl i64 %172, 4
  %175 = call ptr @realloc(ptr %171, i64 %174)
  store ptr %175, ptr %41, align 8
  %176 = load i64, ptr %memberidx1.i10.i, align 4
  %177 = icmp slt i64 %176, %168
  br i1 %177, label %while.body.i.i, label %Array_MatchExpressionCase____sl__.exit.loopexit

Array_MatchExpressionCase____sl__.exit.loopexit:  ; preds = %while.body.i.i
  %.pre29 = load i64, ptr %memberidx.i9.i, align 4
  %.pre45 = add nsw i64 %.pre29, 1
  br label %Array_MatchExpressionCase____sl__.exit

Array_MatchExpressionCase____sl__.exit:           ; preds = %ifend50, %Array_MatchExpressionCase____sl__.exit.loopexit
  %.pre-phi46 = phi i64 [ %.pre45, %Array_MatchExpressionCase____sl__.exit.loopexit ], [ %168, %ifend50 ]
  %178 = phi ptr [ %175, %Array_MatchExpressionCase____sl__.exit.loopexit ], [ %.pre28, %ifend50 ]
  %179 = phi i64 [ %.pre29, %Array_MatchExpressionCase____sl__.exit.loopexit ], [ %167, %ifend50 ]
  store i64 %.pre-phi46, ptr %memberidx.i9.i, align 4
  %180 = getelementptr inbounds ptr, ptr %178, i64 %179
  store ptr %166, ptr %180, align 8
  %181 = add nuw nsw i64 %49, 1
  store i64 %181, ptr %memberidx1.i.i151, align 4
  %182 = getelementptr inbounds ptr, ptr %45, i64 %49
  %183 = load ptr, ptr %182, align 8
  %184 = icmp sge i64 %49, %46
  store i1 %184, ptr %44, align 1
  br i1 %184, label %for.end, label %for.body

if.entry51:                                       ; preds = %else49
  %185 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %result_type.010)
  %memberidx.i201 = getelementptr inbounds %String, ptr %185, i64 0, i32 1
  %186 = load i64, ptr %memberidx.i201, align 4
  %187 = trunc i64 %186 to i32
  %188 = add i32 %187, 1
  %189 = call ptr @malloc(i32 %188)
  %190 = load ptr, ptr %185, align 8
  %191 = load i64, ptr %memberidx.i201, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %189, ptr align 8 %190, i64 %191, i1 false)
  %192 = getelementptr inbounds i8, ptr %189, i64 %191
  store i8 0, ptr %192, align 1
  %193 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %ternary)
  %memberidx.i202 = getelementptr inbounds %String, ptr %193, i64 0, i32 1
  %194 = load i64, ptr %memberidx.i202, align 4
  %195 = trunc i64 %194 to i32
  %196 = add i32 %195, 1
  %197 = call ptr @malloc(i32 %196)
  %198 = load ptr, ptr %193, align 8
  %199 = load i64, ptr %memberidx.i202, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %197, ptr align 8 %198, i64 %199, i1 false)
  %200 = getelementptr inbounds i8, ptr %197, i64 %199
  store i8 0, ptr %200, align 1
  %201 = alloca ptr, align 8
  %202 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %201, ptr nonnull @226, ptr %189, ptr %197)
  %203 = load ptr, ptr %201, align 8
  %204 = tail call ptr @malloc(i32 24)
  store ptr %203, ptr %204, align 8
  %memberidx1.i203 = getelementptr inbounds %String, ptr %204, i64 0, i32 1
  store i64 %202, ptr %memberidx1.i203, align 4
  %memberidx2.i204 = getelementptr inbounds %String, ptr %204, i64 0, i32 2
  store i64 %202, ptr %memberidx2.i204, align 4
  tail call void @free(ptr %189)
  tail call void @free(ptr %197)
  %205 = load ptr, ptr %50, align 8
  %206 = load ptr, ptr %205, align 8
  %207 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i206 = getelementptr inbounds %Compiler, ptr %207, i64 0, i32 5
  %208 = load ptr, ptr %memberidx1.i206, align 8
  %209 = call ptr @malloc(i32 24)
  store i64 5, ptr %209, align 4
  %memberidx1.i.i207 = getelementptr inbounds %FloError, ptr %209, i64 0, i32 2
  store ptr %206, ptr %memberidx1.i.i207, align 8
  %memberidx2.i.i208 = getelementptr inbounds %FloError, ptr %209, i64 0, i32 1
  store ptr %204, ptr %memberidx2.i.i208, align 8
  %memberidx.i.i209 = getelementptr inbounds %Array_FloError_, ptr %208, i64 0, i32 1
  %210 = load i64, ptr %memberidx.i.i209, align 4
  %211 = add i64 %210, 1
  %memberidx.i.i.i210 = getelementptr inbounds %Array_FloError_, ptr %208, i64 0, i32 2
  %212 = load i64, ptr %memberidx.i.i.i210, align 4
  %213 = icmp slt i64 %212, %211
  %.pre25 = load ptr, ptr %208, align 8
  br i1 %213, label %while.body.i.i.i212, label %TypeChecker_error.exit213

while.body.i.i.i212:                              ; preds = %if.entry51, %while.body.i.i.i212
  %214 = phi ptr [ %218, %while.body.i.i.i212 ], [ %.pre25, %if.entry51 ]
  %215 = phi i64 [ %219, %while.body.i.i.i212 ], [ %212, %if.entry51 ]
  %216 = shl nuw i64 %215, 1
  store i64 %216, ptr %memberidx.i.i.i210, align 4
  %217 = shl i64 %215, 4
  %218 = call ptr @realloc(ptr %214, i64 %217)
  store ptr %218, ptr %208, align 8
  %219 = load i64, ptr %memberidx.i.i.i210, align 4
  %220 = icmp slt i64 %219, %211
  br i1 %220, label %while.body.i.i.i212, label %TypeChecker_error.exit213.loopexit

TypeChecker_error.exit213.loopexit:               ; preds = %while.body.i.i.i212
  %.pre26 = load i64, ptr %memberidx.i.i209, align 4
  %.pre47 = add nsw i64 %.pre26, 1
  br label %TypeChecker_error.exit213

TypeChecker_error.exit213:                        ; preds = %if.entry51, %TypeChecker_error.exit213.loopexit
  %.pre-phi48 = phi i64 [ %.pre47, %TypeChecker_error.exit213.loopexit ], [ %211, %if.entry51 ]
  %221 = phi ptr [ %218, %TypeChecker_error.exit213.loopexit ], [ %.pre25, %if.entry51 ]
  %222 = phi i64 [ %.pre26, %TypeChecker_error.exit213.loopexit ], [ %210, %if.entry51 ]
  store i64 %.pre-phi48, ptr %memberidx.i.i209, align 4
  %223 = getelementptr inbounds ptr, ptr %221, i64 %222
  store ptr %209, ptr %223, align 8
  br label %common.ret

if.entry58:                                       ; preds = %for.end
  %224 = call ptr @malloc(i32 55)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(55) %224, ptr noundef nonnull align 8 dereferenceable(55) @227, i64 55, i1 false)
  %225 = call ptr @malloc(i32 24)
  store ptr %224, ptr %225, align 8
  %memberidx1.i.i214 = getelementptr inbounds %String, ptr %225, i64 0, i32 1
  store i64 55, ptr %memberidx1.i.i214, align 4
  %memberidx2.i.i215 = getelementptr inbounds %String, ptr %225, i64 0, i32 2
  store i64 55, ptr %memberidx2.i.i215, align 4
  %226 = load ptr, ptr %1, align 8
  %227 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i217 = getelementptr inbounds %Compiler, ptr %227, i64 0, i32 5
  %228 = load ptr, ptr %memberidx1.i217, align 8
  %229 = call ptr @malloc(i32 24)
  store i64 4, ptr %229, align 4
  %memberidx1.i.i218 = getelementptr inbounds %FloError, ptr %229, i64 0, i32 2
  store ptr %226, ptr %memberidx1.i.i218, align 8
  %memberidx2.i.i219 = getelementptr inbounds %FloError, ptr %229, i64 0, i32 1
  store ptr %225, ptr %memberidx2.i.i219, align 8
  %memberidx.i.i220 = getelementptr inbounds %Array_FloError_, ptr %228, i64 0, i32 1
  %230 = load i64, ptr %memberidx.i.i220, align 4
  %231 = add i64 %230, 1
  %memberidx.i.i.i221 = getelementptr inbounds %Array_FloError_, ptr %228, i64 0, i32 2
  %232 = load i64, ptr %memberidx.i.i.i221, align 4
  %233 = icmp slt i64 %232, %231
  %.pre34 = load ptr, ptr %228, align 8
  br i1 %233, label %while.body.i.i.i223, label %TypeChecker_error.exit224

while.body.i.i.i223:                              ; preds = %if.entry58, %while.body.i.i.i223
  %234 = phi ptr [ %238, %while.body.i.i.i223 ], [ %.pre34, %if.entry58 ]
  %235 = phi i64 [ %239, %while.body.i.i.i223 ], [ %232, %if.entry58 ]
  %236 = shl nuw i64 %235, 1
  store i64 %236, ptr %memberidx.i.i.i221, align 4
  %237 = shl i64 %235, 4
  %238 = call ptr @realloc(ptr %234, i64 %237)
  store ptr %238, ptr %228, align 8
  %239 = load i64, ptr %memberidx.i.i.i221, align 4
  %240 = icmp slt i64 %239, %231
  br i1 %240, label %while.body.i.i.i223, label %TypeChecker_error.exit224.loopexit

TypeChecker_error.exit224.loopexit:               ; preds = %while.body.i.i.i223
  %.pre35 = load i64, ptr %memberidx.i.i220, align 4
  %.pre41 = add nsw i64 %.pre35, 1
  br label %TypeChecker_error.exit224

TypeChecker_error.exit224:                        ; preds = %if.entry58, %TypeChecker_error.exit224.loopexit
  %.pre-phi42 = phi i64 [ %.pre41, %TypeChecker_error.exit224.loopexit ], [ %231, %if.entry58 ]
  %241 = phi ptr [ %238, %TypeChecker_error.exit224.loopexit ], [ %.pre34, %if.entry58 ]
  %242 = phi i64 [ %.pre35, %TypeChecker_error.exit224.loopexit ], [ %230, %if.entry58 ]
  store i64 %.pre-phi42, ptr %memberidx.i.i220, align 4
  %243 = getelementptr inbounds ptr, ptr %241, i64 %242
  store ptr %229, ptr %243, align 8
  br label %common.ret

else59:                                           ; preds = %for.end
  %244 = call fastcc ptr @TypeChecker_check_block(ptr %0, ptr nonnull %51, ptr null, i1 true)
  %memberidx66 = getelementptr inbounds %Block, ptr %244, i64 0, i32 4
  %245 = load ptr, ptr %memberidx66, align 8
  %.not139 = icmp eq ptr %245, null
  br i1 %.not139, label %false_block64, label %true_block63

true_block63:                                     ; preds = %else59
  %memberidx68 = getelementptr inbounds %Expression, ptr %245, i64 0, i32 3
  %246 = load ptr, ptr %memberidx68, align 8
  br label %end65

false_block64:                                    ; preds = %else59
  %247 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %247, align 4
  br label %end65

end65:                                            ; preds = %false_block64, %true_block63
  %ternary69 = phi ptr [ %246, %true_block63 ], [ %247, %false_block64 ]
  %248 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %result_type.0.lcssa, ptr %ternary69)
  br i1 %248, label %ifend72, label %if.entry70

if.entry70:                                       ; preds = %end65
  %249 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %result_type.0.lcssa)
  %memberidx.i225 = getelementptr inbounds %String, ptr %249, i64 0, i32 1
  %250 = load i64, ptr %memberidx.i225, align 4
  %251 = trunc i64 %250 to i32
  %252 = add i32 %251, 1
  %253 = call ptr @malloc(i32 %252)
  %254 = load ptr, ptr %249, align 8
  %255 = load i64, ptr %memberidx.i225, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %253, ptr align 8 %254, i64 %255, i1 false)
  %256 = getelementptr inbounds i8, ptr %253, i64 %255
  store i8 0, ptr %256, align 1
  %257 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %ternary69)
  %memberidx.i226 = getelementptr inbounds %String, ptr %257, i64 0, i32 1
  %258 = load i64, ptr %memberidx.i226, align 4
  %259 = trunc i64 %258 to i32
  %260 = add i32 %259, 1
  %261 = call ptr @malloc(i32 %260)
  %262 = load ptr, ptr %257, align 8
  %263 = load i64, ptr %memberidx.i226, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %261, ptr align 8 %262, i64 %263, i1 false)
  %264 = getelementptr inbounds i8, ptr %261, i64 %263
  store i8 0, ptr %264, align 1
  %265 = alloca ptr, align 8
  %266 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %265, ptr nonnull @228, ptr %253, ptr %261)
  %267 = load ptr, ptr %265, align 8
  %268 = tail call ptr @malloc(i32 24)
  store ptr %267, ptr %268, align 8
  %memberidx1.i227 = getelementptr inbounds %String, ptr %268, i64 0, i32 1
  store i64 %266, ptr %memberidx1.i227, align 4
  %memberidx2.i228 = getelementptr inbounds %String, ptr %268, i64 0, i32 2
  store i64 %266, ptr %memberidx2.i228, align 4
  tail call void @free(ptr %253)
  tail call void @free(ptr %261)
  %269 = load ptr, ptr %1, align 8
  %270 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i230 = getelementptr inbounds %Compiler, ptr %270, i64 0, i32 5
  %271 = load ptr, ptr %memberidx1.i230, align 8
  %272 = call ptr @malloc(i32 24)
  store i64 5, ptr %272, align 4
  %memberidx1.i.i231 = getelementptr inbounds %FloError, ptr %272, i64 0, i32 2
  store ptr %269, ptr %memberidx1.i.i231, align 8
  %memberidx2.i.i232 = getelementptr inbounds %FloError, ptr %272, i64 0, i32 1
  store ptr %268, ptr %memberidx2.i.i232, align 8
  %memberidx.i.i233 = getelementptr inbounds %Array_FloError_, ptr %271, i64 0, i32 1
  %273 = load i64, ptr %memberidx.i.i233, align 4
  %274 = add i64 %273, 1
  %memberidx.i.i.i234 = getelementptr inbounds %Array_FloError_, ptr %271, i64 0, i32 2
  %275 = load i64, ptr %memberidx.i.i.i234, align 4
  %276 = icmp slt i64 %275, %274
  %.pre31 = load ptr, ptr %271, align 8
  br i1 %276, label %while.body.i.i.i236, label %TypeChecker_error.exit237

while.body.i.i.i236:                              ; preds = %if.entry70, %while.body.i.i.i236
  %277 = phi ptr [ %281, %while.body.i.i.i236 ], [ %.pre31, %if.entry70 ]
  %278 = phi i64 [ %282, %while.body.i.i.i236 ], [ %275, %if.entry70 ]
  %279 = shl nuw i64 %278, 1
  store i64 %279, ptr %memberidx.i.i.i234, align 4
  %280 = shl i64 %278, 4
  %281 = call ptr @realloc(ptr %277, i64 %280)
  store ptr %281, ptr %271, align 8
  %282 = load i64, ptr %memberidx.i.i.i234, align 4
  %283 = icmp slt i64 %282, %274
  br i1 %283, label %while.body.i.i.i236, label %TypeChecker_error.exit237.loopexit

TypeChecker_error.exit237.loopexit:               ; preds = %while.body.i.i.i236
  %.pre32 = load i64, ptr %memberidx.i.i233, align 4
  %.pre43 = add nsw i64 %.pre32, 1
  br label %TypeChecker_error.exit237

TypeChecker_error.exit237:                        ; preds = %if.entry70, %TypeChecker_error.exit237.loopexit
  %.pre-phi44 = phi i64 [ %.pre43, %TypeChecker_error.exit237.loopexit ], [ %274, %if.entry70 ]
  %284 = phi ptr [ %281, %TypeChecker_error.exit237.loopexit ], [ %.pre31, %if.entry70 ]
  %285 = phi i64 [ %.pre32, %TypeChecker_error.exit237.loopexit ], [ %273, %if.entry70 ]
  store i64 %.pre-phi44, ptr %memberidx.i.i233, align 4
  %286 = getelementptr inbounds ptr, ptr %284, i64 %285
  store ptr %272, ptr %286, align 8
  br label %common.ret

ifend72:                                          ; preds = %end65
  store ptr %244, ptr %memberidx5.i, align 8
  %memberidx75 = getelementptr inbounds %Expression, ptr %40, i64 0, i32 3
  store ptr %result_type.0.lcssa, ptr %memberidx75, align 8
  br label %common.ret
}

define internal fastcc noalias ptr @TypeChecker_check_member_access(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx.i = getelementptr inbounds %PropId, ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 3
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %4, i64 0, i32 2
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %15 = tail call ptr @malloc(i32 0)
  %16 = tail call ptr @malloc(i32 24)
  store ptr %15, ptr %16, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %16, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %17 = load i64, ptr %1, align 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %if.entry, label %else

if.entry:                                         ; preds = %2
  %memberidx2 = getelementptr inbounds %Class, ptr %14, i64 0, i32 5
  %19 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %20 = load i64, ptr %memberidx3, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 2
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 3
  br label %ifend

else:                                             ; preds = %2
  %memberidx6 = getelementptr inbounds %Class, ptr %14, i64 0, i32 4
  %24 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %25 = load i64, ptr %memberidx7, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx8 = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 2
  %memberidx9 = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 3
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %visibility.0.in = phi ptr [ %memberidx4, %if.entry ], [ %memberidx8, %else ]
  %member_name.0.in = phi ptr [ %memberidx5, %if.entry ], [ %memberidx9, %else ]
  %member_name.0 = load ptr, ptr %member_name.0.in, align 8
  %visibility.0 = load i64, ptr %visibility.0.in, align 4
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %29 = load ptr, ptr %memberidx10, align 8
  %.not = icmp eq ptr %29, null
  br i1 %.not, label %else12, label %if.entry11

if.entry11:                                       ; preds = %ifend
  %30 = load i64, ptr %29, align 4
  %31 = load ptr, ptr %14, align 8
  %32 = load i64, ptr %31, align 4
  %33 = icmp ne i64 %30, %32
  %memberidx19 = getelementptr inbounds %TypeId, ptr %31, i64 0, i32 2
  %34 = load i64, ptr %memberidx19, align 4
  %memberidx21 = getelementptr inbounds %TypeId, ptr %29, i64 0, i32 2
  %35 = load i64, ptr %memberidx21, align 4
  %36 = icmp ne i64 %34, %35
  %37 = or i1 %33, %36
  %38 = icmp eq i64 %visibility.0, 1
  %or.cond = select i1 %37, i1 %38, i1 false
  br i1 %or.cond, label %if.entry25, label %common.ret

else12:                                           ; preds = %ifend
  %.not50 = icmp eq i64 %visibility.0, 2
  br i1 %.not50, label %common.ret, label %if.entry29

common.ret.sink.split:                            ; preds = %if.entry25, %dump_access.exit
  %.sink61 = phi ptr [ %70, %dump_access.exit ], [ %42, %if.entry25 ]
  %.sink = phi ptr [ %78, %dump_access.exit ], [ %50, %if.entry25 ]
  %common.ret.op.ph = phi ptr [ %85, %dump_access.exit ], [ %57, %if.entry25 ]
  tail call void @free(ptr %.sink61)
  tail call void @free(ptr %.sink)
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %else12, %if.entry11
  %common.ret.op = phi ptr [ null, %if.entry11 ], [ null, %else12 ], [ %common.ret.op.ph, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry25:                                       ; preds = %if.entry11
  %memberidx.i54 = getelementptr inbounds %String, ptr %member_name.0, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i54, align 4
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, 1
  %42 = tail call ptr @malloc(i32 %41)
  %43 = load ptr, ptr %member_name.0, align 8
  %44 = load i64, ptr %memberidx.i54, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %43, i64 %44, i1 false)
  %45 = getelementptr inbounds i8, ptr %42, i64 %44
  store i8 0, ptr %45, align 1
  %memberidx28 = getelementptr inbounds %Class, ptr %14, i64 0, i32 1
  %46 = load ptr, ptr %memberidx28, align 8
  %memberidx.i55 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx.i55, align 4
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, 1
  %50 = tail call ptr @malloc(i32 %49)
  %51 = load ptr, ptr %46, align 8
  %52 = load i64, ptr %memberidx.i55, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %50, ptr align 8 %51, i64 %52, i1 false)
  %53 = getelementptr inbounds i8, ptr %50, i64 %52
  store i8 0, ptr %53, align 1
  %54 = alloca ptr, align 8
  %55 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %54, ptr nonnull @194, ptr %42, ptr %50)
  %56 = load ptr, ptr %54, align 8
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  %memberidx1.i56 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  store i64 %55, ptr %memberidx1.i56, align 4
  %memberidx2.i57 = getelementptr inbounds %String, ptr %57, i64 0, i32 2
  store i64 %55, ptr %memberidx2.i57, align 4
  br label %common.ret.sink.split

if.entry29:                                       ; preds = %else12
  %memberidx.i58 = getelementptr inbounds %String, ptr %member_name.0, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i58, align 4
  %59 = trunc i64 %58 to i32
  %60 = add i32 %59, 1
  %61 = tail call ptr @malloc(i32 %60)
  %62 = load ptr, ptr %member_name.0, align 8
  %63 = load i64, ptr %memberidx.i58, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %62, i64 %63, i1 false)
  %64 = getelementptr inbounds i8, ptr %61, i64 %63
  store i8 0, ptr %64, align 1
  %65 = icmp eq i64 %visibility.0, 1
  br i1 %65, label %if.entry.i, label %ifend3.i

if.entry.i:                                       ; preds = %if.entry29
  %66 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %66, ptr noundef nonnull align 8 dereferenceable(7) @51, i64 7, i1 false)
  %67 = tail call ptr @malloc(i32 24)
  store ptr %66, ptr %67, align 8
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry29
  %68 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %68, ptr noundef nonnull align 8 dereferenceable(9) @53, i64 9, i1 false)
  %69 = tail call ptr @malloc(i32 24)
  store ptr %68, ptr %69, align 8
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i, %ifend3.i
  %.sink65 = phi ptr [ %67, %if.entry.i ], [ %69, %ifend3.i ]
  %.sink64 = phi i64 [ 7, %if.entry.i ], [ 9, %ifend3.i ]
  %.off0 = phi i32 [ 8, %if.entry.i ], [ 10, %ifend3.i ]
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %.sink65, i64 0, i32 1
  store i64 %.sink64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %.sink65, i64 0, i32 2
  store i64 %.sink64, ptr %memberidx2.i.i.i, align 4
  %memberidx.i53 = getelementptr inbounds %String, ptr %.sink65, i64 0, i32 1
  %70 = tail call ptr @malloc(i32 %.off0)
  %71 = load ptr, ptr %.sink65, align 8
  %72 = load i64, ptr %memberidx.i53, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %70, ptr align 8 %71, i64 %72, i1 false)
  %73 = getelementptr inbounds i8, ptr %70, i64 %72
  store i8 0, ptr %73, align 1
  %memberidx32 = getelementptr inbounds %Class, ptr %14, i64 0, i32 1
  %74 = load ptr, ptr %memberidx32, align 8
  %memberidx.i51 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i51, align 4
  %76 = trunc i64 %75 to i32
  %77 = add i32 %76, 1
  %78 = tail call ptr @malloc(i32 %77)
  %79 = load ptr, ptr %74, align 8
  %80 = load i64, ptr %memberidx.i51, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %78, ptr align 8 %79, i64 %80, i1 false)
  %81 = getelementptr inbounds i8, ptr %78, i64 %80
  store i8 0, ptr %81, align 1
  %82 = alloca ptr, align 8
  %83 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %82, ptr nonnull @195, ptr nonnull %61, ptr %70, ptr %78)
  %84 = load ptr, ptr %82, align 8
  %85 = tail call ptr @malloc(i32 24)
  store ptr %84, ptr %85, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  store i64 %83, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %85, i64 0, i32 2
  store i64 %83, ptr %memberidx2.i, align 4
  tail call void @free(ptr nonnull %61)
  br label %common.ret.sink.split
}

define internal fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ReturnStatementNode, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %4, null
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %5 = load ptr, ptr %0, align 8
  %memberidx.i.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i.i, align 8
  %7 = load ptr, ptr %5, align 8
  %8 = load i64, ptr %6, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %17 = load i64, ptr %4, align 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %if.entry.i
  %memberidx1.i.i = getelementptr inbounds %Class, ptr %16, i64 0, i32 5
  %19 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i.i, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i.i:                                        ; preds = %if.entry.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %16, i64 0, i32 4
  %24 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %25 = load i64, ptr %memberidx5.i.i, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i:                                          ; preds = %2
  %memberidx.i.i7.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %29 = load ptr, ptr %memberidx.i.i7.i, align 8
  %30 = load i64, ptr %29, align 4
  %31 = load ptr, ptr %0, align 8
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 %30
  %35 = load ptr, ptr %34, align 8
  %memberidx.i.i = getelementptr inbounds %Module, ptr %35, i64 0, i32 4
  %36 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i8.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %37 = load ptr, ptr %memberidx1.i8.i, align 8
  %memberidx2.i9.i = getelementptr inbounds %VarId, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i9.i, align 4
  %39 = load ptr, ptr %36, align 8
  %40 = getelementptr inbounds ptr, ptr %39, i64 %38
  %41 = load ptr, ptr %40, align 8
  %memberidx3.i = getelementptr inbounds %Function, ptr %41, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

TypeChecker_get_current_function_type.exit:       ; preds = %if.entry.i.i, %ifend.i.i, %ifend.i
  %common.ret.op.i.in = phi ptr [ %memberidx3.i, %ifend.i ], [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.i.in, align 8
  %memberidx1 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 2
  %42 = load ptr, ptr %memberidx1, align 8
  %43 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %43, align 4
  %memberidx.i34 = getelementptr inbounds %ReturnStatement, ptr %43, i64 0, i32 1
  store ptr null, ptr %memberidx.i34, align 8
  %.not = icmp eq ptr %3, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %TypeChecker_get_current_function_type.exit
  %44 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %42, ptr nonnull %3)
  %memberidx.i35 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %45 = load ptr, ptr %memberidx.i35, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %45, i64 0, i32 5
  %46 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx2.i, align 4
  %48 = icmp sgt i64 %47, 0
  br i1 %48, label %common.ret, label %ifend4

else:                                             ; preds = %TypeChecker_get_current_function_type.exit
  %49 = load i64, ptr %42, align 4
  %.not33 = icmp eq i64 %49, 10
  br i1 %.not33, label %common.ret, label %if.entry13

common.ret:                                       ; preds = %ifend8, %else, %if.entry, %TypeChecker_error.exit56, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit56 ], [ null, %if.entry ], [ %43, %else ], [ %43, %ifend8 ]
  ret ptr %common.ret.op

ifend4:                                           ; preds = %if.entry
  %memberidx5 = getelementptr inbounds %Expression, ptr %44, i64 0, i32 3
  %50 = load ptr, ptr %memberidx5, align 8
  %51 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %42, ptr %50)
  br i1 %51, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %ifend4
  %52 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %42)
  %memberidx.i36 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  %53 = load i64, ptr %memberidx.i36, align 4
  %54 = trunc i64 %53 to i32
  %55 = add i32 %54, 1
  %56 = tail call ptr @malloc(i32 %55)
  %57 = load ptr, ptr %52, align 8
  %58 = load i64, ptr %memberidx.i36, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %56, ptr align 8 %57, i64 %58, i1 false)
  %59 = getelementptr inbounds i8, ptr %56, i64 %58
  store i8 0, ptr %59, align 1
  %60 = load ptr, ptr %memberidx5, align 8
  %61 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %60)
  %memberidx.i37 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i37, align 4
  %63 = trunc i64 %62 to i32
  %64 = add i32 %63, 1
  %65 = tail call ptr @malloc(i32 %64)
  %66 = load ptr, ptr %61, align 8
  %67 = load i64, ptr %memberidx.i37, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %65, ptr align 8 %66, i64 %67, i1 false)
  %68 = getelementptr inbounds i8, ptr %65, i64 %67
  store i8 0, ptr %68, align 1
  %69 = alloca ptr, align 8
  %70 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %69, ptr nonnull @241, ptr %56, ptr %65)
  %71 = load ptr, ptr %69, align 8
  %72 = tail call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i38 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 %70, ptr %memberidx1.i38, align 4
  %memberidx2.i39 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 %70, ptr %memberidx2.i39, align 4
  tail call void @free(ptr %56)
  tail call void @free(ptr %65)
  %73 = load ptr, ptr %3, align 8
  %74 = load ptr, ptr %memberidx.i35, align 8
  %memberidx1.i41 = getelementptr inbounds %Compiler, ptr %74, i64 0, i32 5
  %75 = load ptr, ptr %memberidx1.i41, align 8
  %76 = call ptr @malloc(i32 24)
  store i64 5, ptr %76, align 4
  %memberidx1.i.i42 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 2
  store ptr %73, ptr %memberidx1.i.i42, align 8
  %memberidx2.i.i43 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 1
  store ptr %72, ptr %memberidx2.i.i43, align 8
  %memberidx.i.i44 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 1
  %77 = load i64, ptr %memberidx.i.i44, align 4
  %78 = add i64 %77, 1
  %memberidx.i.i.i45 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 2
  %79 = load i64, ptr %memberidx.i.i.i45, align 4
  %80 = icmp slt i64 %79, %78
  %.pre = load ptr, ptr %75, align 8
  br i1 %80, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry6, %while.body.i.i.i
  %81 = phi ptr [ %85, %while.body.i.i.i ], [ %.pre, %if.entry6 ]
  %82 = phi i64 [ %86, %while.body.i.i.i ], [ %79, %if.entry6 ]
  %83 = shl nuw i64 %82, 1
  store i64 %83, ptr %memberidx.i.i.i45, align 4
  %84 = shl i64 %82, 4
  %85 = call ptr @realloc(ptr %81, i64 %84)
  store ptr %85, ptr %75, align 8
  %86 = load i64, ptr %memberidx.i.i.i45, align 4
  %87 = icmp slt i64 %86, %78
  br i1 %87, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre60 = load i64, ptr %memberidx.i.i44, align 4
  %.pre66 = add nsw i64 %.pre60, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry6, %TypeChecker_error.exit.loopexit
  %.pre-phi67 = phi i64 [ %.pre66, %TypeChecker_error.exit.loopexit ], [ %78, %if.entry6 ]
  %88 = phi ptr [ %85, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry6 ]
  %89 = phi i64 [ %.pre60, %TypeChecker_error.exit.loopexit ], [ %77, %if.entry6 ]
  store i64 %.pre-phi67, ptr %memberidx.i.i44, align 4
  %90 = getelementptr inbounds ptr, ptr %88, i64 %89
  store ptr %76, ptr %90, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend4
  store ptr %44, ptr %memberidx.i34, align 8
  br label %common.ret

if.entry13:                                       ; preds = %else
  %91 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %91, ptr noundef nonnull align 8 dereferenceable(32) @242, i64 32, i1 false)
  %92 = tail call ptr @malloc(i32 24)
  store ptr %91, ptr %92, align 8
  %memberidx1.i.i46 = getelementptr inbounds %String, ptr %92, i64 0, i32 1
  store i64 32, ptr %memberidx1.i.i46, align 4
  %memberidx2.i.i47 = getelementptr inbounds %String, ptr %92, i64 0, i32 2
  store i64 32, ptr %memberidx2.i.i47, align 4
  %93 = load ptr, ptr %1, align 8
  %memberidx.i48 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %94 = load ptr, ptr %memberidx.i48, align 8
  %memberidx1.i49 = getelementptr inbounds %Compiler, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx1.i49, align 8
  %96 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %96, align 4
  %memberidx1.i.i50 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 2
  store ptr %93, ptr %memberidx1.i.i50, align 8
  %memberidx2.i.i51 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 1
  store ptr %92, ptr %memberidx2.i.i51, align 8
  %memberidx.i.i52 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i.i52, align 4
  %98 = add i64 %97, 1
  %memberidx.i.i.i53 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 2
  %99 = load i64, ptr %memberidx.i.i.i53, align 4
  %100 = icmp slt i64 %99, %98
  %.pre62 = load ptr, ptr %95, align 8
  br i1 %100, label %while.body.i.i.i55, label %TypeChecker_error.exit56

while.body.i.i.i55:                               ; preds = %if.entry13, %while.body.i.i.i55
  %101 = phi ptr [ %105, %while.body.i.i.i55 ], [ %.pre62, %if.entry13 ]
  %102 = phi i64 [ %106, %while.body.i.i.i55 ], [ %99, %if.entry13 ]
  %103 = shl nuw i64 %102, 1
  store i64 %103, ptr %memberidx.i.i.i53, align 4
  %104 = shl i64 %102, 4
  %105 = tail call ptr @realloc(ptr %101, i64 %104)
  store ptr %105, ptr %95, align 8
  %106 = load i64, ptr %memberidx.i.i.i53, align 4
  %107 = icmp slt i64 %106, %98
  br i1 %107, label %while.body.i.i.i55, label %TypeChecker_error.exit56.loopexit

TypeChecker_error.exit56.loopexit:                ; preds = %while.body.i.i.i55
  %.pre63 = load i64, ptr %memberidx.i.i52, align 4
  %.pre65 = add nsw i64 %.pre63, 1
  br label %TypeChecker_error.exit56

TypeChecker_error.exit56:                         ; preds = %if.entry13, %TypeChecker_error.exit56.loopexit
  %.pre-phi = phi i64 [ %.pre65, %TypeChecker_error.exit56.loopexit ], [ %98, %if.entry13 ]
  %108 = phi ptr [ %105, %TypeChecker_error.exit56.loopexit ], [ %.pre62, %if.entry13 ]
  %109 = phi i64 [ %.pre63, %TypeChecker_error.exit56.loopexit ], [ %97, %if.entry13 ]
  store i64 %.pre-phi, ptr %memberidx.i.i52, align 4
  %110 = getelementptr inbounds ptr, ptr %108, i64 %109
  store ptr %96, ptr %110, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %4)
  %.not.i = icmp eq ptr %5, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 2
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %end18, %end, %ifend54, %TypeChecker_error.exit181, %TypeChecker_error.exit169, %TypeChecker_error.exit158, %TypeChecker_error.exit145, %TypeChecker_error.exit126, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit126 ], [ null, %TypeChecker_error.exit145 ], [ null, %TypeChecker_error.exit158 ], [ null, %TypeChecker_error.exit169 ], [ null, %TypeChecker_error.exit181 ], [ %243, %ifend54 ], [ null, %end ], [ null, %end18 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %if.entry.i
  %memberidx.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i, align 4
  %9 = trunc i64 %8 to i32
  %10 = add i32 %9, 1
  %11 = tail call ptr @malloc(i32 %10)
  %12 = load ptr, ptr %4, align 8
  %13 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %12, i64 %13, i1 false)
  %14 = getelementptr inbounds i8, ptr %11, i64 %13
  store i8 0, ptr %14, align 1
  %15 = alloca ptr, align 8
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %15, ptr nonnull @109, ptr %11)
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  store i64 %16, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx2.i, align 4
  tail call void @free(ptr %11)
  %19 = load ptr, ptr %memberidx, align 8
  %memberidx3 = getelementptr inbounds %Token, ptr %19, i64 0, i32 1
  %20 = load ptr, ptr %memberidx3, align 8
  %memberidx.i108 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %21 = load ptr, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %Compiler, ptr %21, i64 0, i32 5
  %22 = load ptr, ptr %memberidx1.i109, align 8
  %23 = call ptr @malloc(i32 24)
  store i64 1, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 2
  store ptr %20, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 1
  store ptr %18, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i.i, align 4
  %25 = add i64 %24, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 2
  %26 = load i64, ptr %memberidx.i.i.i, align 4
  %27 = icmp slt i64 %26, %25
  %.pre = load ptr, ptr %22, align 8
  br i1 %27, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %28 = phi ptr [ %32, %while.body.i.i.i ], [ %.pre, %if.entry ]
  %29 = phi i64 [ %33, %while.body.i.i.i ], [ %26, %if.entry ]
  %30 = shl nuw i64 %29, 1
  store i64 %30, ptr %memberidx.i.i.i, align 4
  %31 = shl i64 %29, 4
  %32 = call ptr @realloc(ptr %28, i64 %31)
  store ptr %32, ptr %22, align 8
  %33 = load i64, ptr %memberidx.i.i.i, align 4
  %34 = icmp slt i64 %33, %25
  br i1 %34, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre199 = load i64, ptr %memberidx.i.i, align 4
  %.pre234 = add nsw i64 %.pre199, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi235 = phi i64 [ %.pre234, %TypeChecker_error.exit.loopexit ], [ %25, %if.entry ]
  %35 = phi ptr [ %32, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %36 = phi i64 [ %.pre199, %TypeChecker_error.exit.loopexit ], [ %24, %if.entry ]
  store i64 %.pre-phi235, ptr %memberidx.i.i, align 4
  %37 = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %23, ptr %37, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %38 = load ptr, ptr %0, align 8
  %memberidx1.i110 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %39 = load ptr, ptr %memberidx1.i110, align 8
  %40 = load ptr, ptr %38, align 8
  %41 = load i64, ptr %39, align 4
  %42 = load ptr, ptr %40, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %memberidx2.i.i111 = getelementptr inbounds %Module, ptr %44, i64 0, i32 7
  %45 = load ptr, ptr %memberidx2.i.i111, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %39, i64 0, i32 1
  %46 = load i64, ptr %memberidx3.i.i, align 4
  %47 = load ptr, ptr %45, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  %memberidx4 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 3
  %50 = load ptr, ptr %memberidx4, align 8
  %.not = icmp eq ptr %50, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %51 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %50)
  br label %end

false_block:                                      ; preds = %ifend
  %52 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %52, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %51, %true_block ], [ %52, %false_block ]
  %memberidx.i112 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %53 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i113 = getelementptr inbounds %Compiler, ptr %53, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1.i113, align 8
  %memberidx2.i114 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx2.i114, align 4
  %56 = icmp sgt i64 %55, 0
  br i1 %56, label %common.ret, label %ifend8

ifend8:                                           ; preds = %end
  %memberidx9 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 4
  %57 = load ptr, ptr %memberidx9, align 8
  %58 = icmp eq ptr %57, null
  %59 = load i64, ptr %ternary, align 4
  %60 = icmp eq i64 %59, 21
  %61 = and i1 %58, %60
  br i1 %61, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %ifend8
  %memberidx.i115 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i115, align 4
  %63 = trunc i64 %62 to i32
  %64 = add i32 %63, 1
  %65 = tail call ptr @malloc(i32 %64)
  %66 = load ptr, ptr %4, align 8
  %67 = load i64, ptr %memberidx.i115, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %65, ptr align 8 %66, i64 %67, i1 false)
  %68 = getelementptr inbounds i8, ptr %65, i64 %67
  store i8 0, ptr %68, align 1
  %69 = alloca ptr, align 8
  %70 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %69, ptr nonnull @229, ptr %65)
  %71 = load ptr, ptr %69, align 8
  %72 = tail call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i116 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 %70, ptr %memberidx1.i116, align 4
  %memberidx2.i117 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 %70, ptr %memberidx2.i117, align 4
  tail call void @free(ptr %65)
  %73 = load ptr, ptr %memberidx, align 8
  %memberidx15 = getelementptr inbounds %Token, ptr %73, i64 0, i32 1
  %74 = load ptr, ptr %memberidx15, align 8
  %75 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i119 = getelementptr inbounds %Compiler, ptr %75, i64 0, i32 5
  %76 = load ptr, ptr %memberidx1.i119, align 8
  %77 = call ptr @malloc(i32 24)
  store i64 4, ptr %77, align 4
  %memberidx1.i.i120 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 2
  store ptr %74, ptr %memberidx1.i.i120, align 8
  %memberidx2.i.i121 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 1
  store ptr %72, ptr %memberidx2.i.i121, align 8
  %memberidx.i.i122 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %78 = load i64, ptr %memberidx.i.i122, align 4
  %79 = add i64 %78, 1
  %memberidx.i.i.i123 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 2
  %80 = load i64, ptr %memberidx.i.i.i123, align 4
  %81 = icmp slt i64 %80, %79
  %.pre220 = load ptr, ptr %76, align 8
  br i1 %81, label %while.body.i.i.i125, label %TypeChecker_error.exit126

while.body.i.i.i125:                              ; preds = %if.entry11, %while.body.i.i.i125
  %82 = phi ptr [ %86, %while.body.i.i.i125 ], [ %.pre220, %if.entry11 ]
  %83 = phi i64 [ %87, %while.body.i.i.i125 ], [ %80, %if.entry11 ]
  %84 = shl nuw i64 %83, 1
  store i64 %84, ptr %memberidx.i.i.i123, align 4
  %85 = shl i64 %83, 4
  %86 = call ptr @realloc(ptr %82, i64 %85)
  store ptr %86, ptr %76, align 8
  %87 = load i64, ptr %memberidx.i.i.i123, align 4
  %88 = icmp slt i64 %87, %79
  br i1 %88, label %while.body.i.i.i125, label %TypeChecker_error.exit126.loopexit

TypeChecker_error.exit126.loopexit:               ; preds = %while.body.i.i.i125
  %.pre221 = load i64, ptr %memberidx.i.i122, align 4
  %.pre225 = add nsw i64 %.pre221, 1
  br label %TypeChecker_error.exit126

TypeChecker_error.exit126:                        ; preds = %if.entry11, %TypeChecker_error.exit126.loopexit
  %.pre-phi = phi i64 [ %.pre225, %TypeChecker_error.exit126.loopexit ], [ %79, %if.entry11 ]
  %89 = phi ptr [ %86, %TypeChecker_error.exit126.loopexit ], [ %.pre220, %if.entry11 ]
  %90 = phi i64 [ %.pre221, %TypeChecker_error.exit126.loopexit ], [ %78, %if.entry11 ]
  store i64 %.pre-phi, ptr %memberidx.i.i122, align 4
  %91 = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %77, ptr %91, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend8
  br i1 %58, label %ifend27, label %end18

end18:                                            ; preds = %ifend13
  %92 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %57)
  %.pre201 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i128.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre201, i64 0, i32 5
  %.pre202 = load ptr, ptr %memberidx1.i128.phi.trans.insert, align 8
  %memberidx2.i129.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre202, i64 0, i32 1
  %.pre203 = load i64, ptr %memberidx2.i129.phi.trans.insert, align 4
  %93 = icmp sgt i64 %.pre203, 0
  br i1 %93, label %common.ret, label %ifend24

ifend24:                                          ; preds = %end18
  %.not104 = icmp eq ptr %92, null
  br i1 %.not104, label %ifend27, label %if.entry25

if.entry25:                                       ; preds = %ifend24
  %memberidx.i130 = getelementptr inbounds %Expression, ptr %92, i64 0, i32 2
  %94 = load i64, ptr %memberidx.i130, align 4
  %95 = icmp eq i64 %94, 5
  %memberidx28 = getelementptr inbounds %Expression, ptr %92, i64 0, i32 3
  %96 = load ptr, ptr %memberidx28, align 8
  %97 = load i64, ptr %96, align 4
  %98 = icmp eq i64 %97, 21
  %99 = and i1 %95, %98
  br i1 %99, label %if.entry30, label %ifend32

ifend27:                                          ; preds = %ifend13, %ifend44, %ifend24
  %ternary21237240 = phi ptr [ %92, %ifend44 ], [ null, %ifend24 ], [ null, %ifend13 ]
  %var_type.0 = phi ptr [ %var_type.1, %ifend44 ], [ %ternary, %ifend24 ], [ %ternary, %ifend13 ]
  %memberidx51 = getelementptr inbounds %Scope, ptr %49, i64 0, i32 1
  %100 = load ptr, ptr %memberidx51, align 8
  %101 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %4)
  %memberidx.i131 = getelementptr inbounds %Map_String_VarId_, ptr %100, i64 0, i32 1
  %102 = load i64, ptr %memberidx.i131, align 4
  %103 = urem i64 %101, %102
  %104 = load ptr, ptr %100, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %103
  %106 = load ptr, ptr %105, align 8
  %.not.i132196 = icmp eq ptr %106, null
  br i1 %.not.i132196, label %ifend54, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %ifend27
  %memberidx1.i.i134 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre215.pre = load ptr, ptr %100, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre215.pre, i64 %hash.0.i197
  %.pre216.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre216.pre, null
  br i1 %.not22.i, label %ifend54, label %if.entry6.i

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %107 = phi ptr [ %104, %while.body.i.lr.ph ], [ %117, %else.i ]
  %108 = phi i64 [ %102, %while.body.i.lr.ph ], [ %118, %else.i ]
  %109 = phi ptr [ %106, %while.body.i.lr.ph ], [ %122, %else.i ]
  %hash.0.i197 = phi i64 [ %103, %while.body.i.lr.ph ], [ %120, %else.i ]
  %110 = load ptr, ptr %109, align 8
  %memberidx.i.i133 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  %111 = load i64, ptr %memberidx.i.i133, align 4
  %112 = load i64, ptr %memberidx1.i.i134, align 4
  %.not.i.i = icmp eq i64 %111, %112
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %113 = load ptr, ptr %110, align 8
  %114 = load ptr, ptr %4, align 8
  %115 = tail call i64 @memcmp(ptr %113, ptr %114, i64 %111)
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre213 = load i64, ptr %memberidx.i131, align 4
  %.pre214 = load ptr, ptr %100, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %117 = phi ptr [ %.pre214, %ifend.i.i.else.i_crit_edge ], [ %107, %while.body.i ]
  %118 = phi i64 [ %.pre213, %ifend.i.i.else.i_crit_edge ], [ %108, %while.body.i ]
  %119 = add nuw i64 %hash.0.i197, 1
  %120 = urem i64 %119, %118
  %121 = getelementptr inbounds ptr, ptr %117, i64 %120
  %122 = load ptr, ptr %121, align 8
  %.not.i132 = icmp eq ptr %122, null
  br i1 %.not.i132, label %ifend54, label %while.body.i

if.entry6.i:                                      ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre216.pre, i64 0, i32 1
  %123 = load ptr, ptr %memberidx10.i, align 8
  %phi.cmp = icmp eq ptr %123, null
  br i1 %phi.cmp, label %ifend54, label %if.entry52

if.entry30:                                       ; preds = %if.entry25
  %124 = tail call ptr @malloc(i32 69)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %124, ptr noundef nonnull align 8 dereferenceable(69) @230, i64 69, i1 false)
  %125 = tail call ptr @malloc(i32 24)
  store ptr %124, ptr %125, align 8
  %memberidx1.i.i135 = getelementptr inbounds %String, ptr %125, i64 0, i32 1
  store i64 69, ptr %memberidx1.i.i135, align 4
  %memberidx2.i.i136 = getelementptr inbounds %String, ptr %125, i64 0, i32 2
  store i64 69, ptr %memberidx2.i.i136, align 4
  %126 = load ptr, ptr %1, align 8
  %127 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i138 = getelementptr inbounds %Compiler, ptr %127, i64 0, i32 5
  %128 = load ptr, ptr %memberidx1.i138, align 8
  %129 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %129, align 4
  %memberidx1.i.i139 = getelementptr inbounds %FloError, ptr %129, i64 0, i32 2
  store ptr %126, ptr %memberidx1.i.i139, align 8
  %memberidx2.i.i140 = getelementptr inbounds %FloError, ptr %129, i64 0, i32 1
  store ptr %125, ptr %memberidx2.i.i140, align 8
  %memberidx.i.i141 = getelementptr inbounds %Array_FloError_, ptr %128, i64 0, i32 1
  %130 = load i64, ptr %memberidx.i.i141, align 4
  %131 = add i64 %130, 1
  %memberidx.i.i.i142 = getelementptr inbounds %Array_FloError_, ptr %128, i64 0, i32 2
  %132 = load i64, ptr %memberidx.i.i.i142, align 4
  %133 = icmp slt i64 %132, %131
  %.pre210 = load ptr, ptr %128, align 8
  br i1 %133, label %while.body.i.i.i144, label %TypeChecker_error.exit145

while.body.i.i.i144:                              ; preds = %if.entry30, %while.body.i.i.i144
  %134 = phi ptr [ %138, %while.body.i.i.i144 ], [ %.pre210, %if.entry30 ]
  %135 = phi i64 [ %139, %while.body.i.i.i144 ], [ %132, %if.entry30 ]
  %136 = shl nuw i64 %135, 1
  store i64 %136, ptr %memberidx.i.i.i142, align 4
  %137 = shl i64 %135, 4
  %138 = tail call ptr @realloc(ptr %134, i64 %137)
  store ptr %138, ptr %128, align 8
  %139 = load i64, ptr %memberidx.i.i.i142, align 4
  %140 = icmp slt i64 %139, %131
  br i1 %140, label %while.body.i.i.i144, label %TypeChecker_error.exit145.loopexit

TypeChecker_error.exit145.loopexit:               ; preds = %while.body.i.i.i144
  %.pre211 = load i64, ptr %memberidx.i.i141, align 4
  %.pre228 = add nsw i64 %.pre211, 1
  br label %TypeChecker_error.exit145

TypeChecker_error.exit145:                        ; preds = %if.entry30, %TypeChecker_error.exit145.loopexit
  %.pre-phi229 = phi i64 [ %.pre228, %TypeChecker_error.exit145.loopexit ], [ %131, %if.entry30 ]
  %141 = phi ptr [ %138, %TypeChecker_error.exit145.loopexit ], [ %.pre210, %if.entry30 ]
  %142 = phi i64 [ %.pre211, %TypeChecker_error.exit145.loopexit ], [ %130, %if.entry30 ]
  store i64 %.pre-phi229, ptr %memberidx.i.i141, align 4
  %143 = getelementptr inbounds ptr, ptr %141, i64 %142
  store ptr %129, ptr %143, align 8
  br label %common.ret

ifend32:                                          ; preds = %if.entry25
  %144 = load i64, ptr %ternary, align 4
  %145 = icmp eq i64 %144, 21
  %146 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %96)
  %147 = or i1 %146, %145
  br i1 %147, label %ifend38, label %if.entry36

if.entry36:                                       ; preds = %ifend32
  %148 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %memberidx.i146 = getelementptr inbounds %String, ptr %148, i64 0, i32 1
  %149 = load i64, ptr %memberidx.i146, align 4
  %150 = trunc i64 %149 to i32
  %151 = add i32 %150, 1
  %152 = tail call ptr @malloc(i32 %151)
  %153 = load ptr, ptr %148, align 8
  %154 = load i64, ptr %memberidx.i146, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %152, ptr align 8 %153, i64 %154, i1 false)
  %155 = getelementptr inbounds i8, ptr %152, i64 %154
  store i8 0, ptr %155, align 1
  %156 = load ptr, ptr %memberidx28, align 8
  %157 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %156)
  %memberidx.i147 = getelementptr inbounds %String, ptr %157, i64 0, i32 1
  %158 = load i64, ptr %memberidx.i147, align 4
  %159 = trunc i64 %158 to i32
  %160 = add i32 %159, 1
  %161 = tail call ptr @malloc(i32 %160)
  %162 = load ptr, ptr %157, align 8
  %163 = load i64, ptr %memberidx.i147, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %161, ptr align 8 %162, i64 %163, i1 false)
  %164 = getelementptr inbounds i8, ptr %161, i64 %163
  store i8 0, ptr %164, align 1
  %165 = alloca ptr, align 8
  %166 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %165, ptr nonnull @231, ptr %152, ptr %161)
  %167 = load ptr, ptr %165, align 8
  %168 = tail call ptr @malloc(i32 24)
  store ptr %167, ptr %168, align 8
  %memberidx1.i148 = getelementptr inbounds %String, ptr %168, i64 0, i32 1
  store i64 %166, ptr %memberidx1.i148, align 4
  %memberidx2.i149 = getelementptr inbounds %String, ptr %168, i64 0, i32 2
  store i64 %166, ptr %memberidx2.i149, align 4
  tail call void @free(ptr %152)
  tail call void @free(ptr %161)
  %169 = load ptr, ptr %1, align 8
  %170 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i151 = getelementptr inbounds %Compiler, ptr %170, i64 0, i32 5
  %171 = load ptr, ptr %memberidx1.i151, align 8
  %172 = call ptr @malloc(i32 24)
  store i64 5, ptr %172, align 4
  %memberidx1.i.i152 = getelementptr inbounds %FloError, ptr %172, i64 0, i32 2
  store ptr %169, ptr %memberidx1.i.i152, align 8
  %memberidx2.i.i153 = getelementptr inbounds %FloError, ptr %172, i64 0, i32 1
  store ptr %168, ptr %memberidx2.i.i153, align 8
  %memberidx.i.i154 = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 1
  %173 = load i64, ptr %memberidx.i.i154, align 4
  %174 = add i64 %173, 1
  %memberidx.i.i.i155 = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 2
  %175 = load i64, ptr %memberidx.i.i.i155, align 4
  %176 = icmp slt i64 %175, %174
  %.pre204 = load ptr, ptr %171, align 8
  br i1 %176, label %while.body.i.i.i157, label %TypeChecker_error.exit158

while.body.i.i.i157:                              ; preds = %if.entry36, %while.body.i.i.i157
  %177 = phi ptr [ %181, %while.body.i.i.i157 ], [ %.pre204, %if.entry36 ]
  %178 = phi i64 [ %182, %while.body.i.i.i157 ], [ %175, %if.entry36 ]
  %179 = shl nuw i64 %178, 1
  store i64 %179, ptr %memberidx.i.i.i155, align 4
  %180 = shl i64 %178, 4
  %181 = call ptr @realloc(ptr %177, i64 %180)
  store ptr %181, ptr %171, align 8
  %182 = load i64, ptr %memberidx.i.i.i155, align 4
  %183 = icmp slt i64 %182, %174
  br i1 %183, label %while.body.i.i.i157, label %TypeChecker_error.exit158.loopexit

TypeChecker_error.exit158.loopexit:               ; preds = %while.body.i.i.i157
  %.pre205 = load i64, ptr %memberidx.i.i154, align 4
  %.pre232 = add nsw i64 %.pre205, 1
  br label %TypeChecker_error.exit158

TypeChecker_error.exit158:                        ; preds = %if.entry36, %TypeChecker_error.exit158.loopexit
  %.pre-phi233 = phi i64 [ %.pre232, %TypeChecker_error.exit158.loopexit ], [ %174, %if.entry36 ]
  %184 = phi ptr [ %181, %TypeChecker_error.exit158.loopexit ], [ %.pre204, %if.entry36 ]
  %185 = phi i64 [ %.pre205, %TypeChecker_error.exit158.loopexit ], [ %173, %if.entry36 ]
  store i64 %.pre-phi233, ptr %memberidx.i.i154, align 4
  %186 = getelementptr inbounds ptr, ptr %184, i64 %185
  store ptr %172, ptr %186, align 8
  br label %common.ret

ifend38:                                          ; preds = %ifend32
  %187 = load i64, ptr %ternary, align 4
  %188 = icmp eq i64 %187, 21
  br i1 %188, label %if.entry42, label %ifend44

if.entry42:                                       ; preds = %ifend38
  %189 = load ptr, ptr %memberidx28, align 8
  %.pr = load i64, ptr %189, align 4
  br label %ifend44

ifend44:                                          ; preds = %ifend38, %if.entry42
  %190 = phi i64 [ %187, %ifend38 ], [ %.pr, %if.entry42 ]
  %var_type.1 = phi ptr [ %ternary, %ifend38 ], [ %189, %if.entry42 ]
  %191 = icmp eq i64 %190, 10
  br i1 %191, label %if.entry47, label %ifend27

if.entry47:                                       ; preds = %ifend44
  %192 = tail call ptr @malloc(i32 38)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(38) %192, ptr noundef nonnull align 8 dereferenceable(38) @232, i64 38, i1 false)
  %193 = tail call ptr @malloc(i32 24)
  store ptr %192, ptr %193, align 8
  %memberidx1.i.i159 = getelementptr inbounds %String, ptr %193, i64 0, i32 1
  store i64 38, ptr %memberidx1.i.i159, align 4
  %memberidx2.i.i160 = getelementptr inbounds %String, ptr %193, i64 0, i32 2
  store i64 38, ptr %memberidx2.i.i160, align 4
  %194 = load ptr, ptr %1, align 8
  %195 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i162 = getelementptr inbounds %Compiler, ptr %195, i64 0, i32 5
  %196 = load ptr, ptr %memberidx1.i162, align 8
  %197 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %197, align 4
  %memberidx1.i.i163 = getelementptr inbounds %FloError, ptr %197, i64 0, i32 2
  store ptr %194, ptr %memberidx1.i.i163, align 8
  %memberidx2.i.i164 = getelementptr inbounds %FloError, ptr %197, i64 0, i32 1
  store ptr %193, ptr %memberidx2.i.i164, align 8
  %memberidx.i.i165 = getelementptr inbounds %Array_FloError_, ptr %196, i64 0, i32 1
  %198 = load i64, ptr %memberidx.i.i165, align 4
  %199 = add i64 %198, 1
  %memberidx.i.i.i166 = getelementptr inbounds %Array_FloError_, ptr %196, i64 0, i32 2
  %200 = load i64, ptr %memberidx.i.i.i166, align 4
  %201 = icmp slt i64 %200, %199
  %.pre207 = load ptr, ptr %196, align 8
  br i1 %201, label %while.body.i.i.i168, label %TypeChecker_error.exit169

while.body.i.i.i168:                              ; preds = %if.entry47, %while.body.i.i.i168
  %202 = phi ptr [ %206, %while.body.i.i.i168 ], [ %.pre207, %if.entry47 ]
  %203 = phi i64 [ %207, %while.body.i.i.i168 ], [ %200, %if.entry47 ]
  %204 = shl nuw i64 %203, 1
  store i64 %204, ptr %memberidx.i.i.i166, align 4
  %205 = shl i64 %203, 4
  %206 = tail call ptr @realloc(ptr %202, i64 %205)
  store ptr %206, ptr %196, align 8
  %207 = load i64, ptr %memberidx.i.i.i166, align 4
  %208 = icmp slt i64 %207, %199
  br i1 %208, label %while.body.i.i.i168, label %TypeChecker_error.exit169.loopexit

TypeChecker_error.exit169.loopexit:               ; preds = %while.body.i.i.i168
  %.pre208 = load i64, ptr %memberidx.i.i165, align 4
  %.pre230 = add nsw i64 %.pre208, 1
  br label %TypeChecker_error.exit169

TypeChecker_error.exit169:                        ; preds = %if.entry47, %TypeChecker_error.exit169.loopexit
  %.pre-phi231 = phi i64 [ %.pre230, %TypeChecker_error.exit169.loopexit ], [ %199, %if.entry47 ]
  %209 = phi ptr [ %206, %TypeChecker_error.exit169.loopexit ], [ %.pre207, %if.entry47 ]
  %210 = phi i64 [ %.pre208, %TypeChecker_error.exit169.loopexit ], [ %198, %if.entry47 ]
  store i64 %.pre-phi231, ptr %memberidx.i.i165, align 4
  %211 = getelementptr inbounds ptr, ptr %209, i64 %210
  store ptr %197, ptr %211, align 8
  br label %common.ret

if.entry52:                                       ; preds = %if.entry6.i
  %memberidx.i170 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %212 = load i64, ptr %memberidx.i170, align 4
  %213 = trunc i64 %212 to i32
  %214 = add i32 %213, 1
  %215 = tail call ptr @malloc(i32 %214)
  %216 = load ptr, ptr %4, align 8
  %217 = load i64, ptr %memberidx.i170, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %215, ptr align 8 %216, i64 %217, i1 false)
  %218 = getelementptr inbounds i8, ptr %215, i64 %217
  store i8 0, ptr %218, align 1
  %219 = alloca ptr, align 8
  %220 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %219, ptr nonnull @233, ptr %215)
  %221 = load ptr, ptr %219, align 8
  %222 = tail call ptr @malloc(i32 24)
  store ptr %221, ptr %222, align 8
  %memberidx1.i171 = getelementptr inbounds %String, ptr %222, i64 0, i32 1
  store i64 %220, ptr %memberidx1.i171, align 4
  %memberidx2.i172 = getelementptr inbounds %String, ptr %222, i64 0, i32 2
  store i64 %220, ptr %memberidx2.i172, align 4
  tail call void @free(ptr %215)
  %223 = load ptr, ptr %memberidx, align 8
  %memberidx56 = getelementptr inbounds %Token, ptr %223, i64 0, i32 1
  %224 = load ptr, ptr %memberidx56, align 8
  %225 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i174 = getelementptr inbounds %Compiler, ptr %225, i64 0, i32 5
  %226 = load ptr, ptr %memberidx1.i174, align 8
  %227 = call ptr @malloc(i32 24)
  store i64 1, ptr %227, align 4
  %memberidx1.i.i175 = getelementptr inbounds %FloError, ptr %227, i64 0, i32 2
  store ptr %224, ptr %memberidx1.i.i175, align 8
  %memberidx2.i.i176 = getelementptr inbounds %FloError, ptr %227, i64 0, i32 1
  store ptr %222, ptr %memberidx2.i.i176, align 8
  %memberidx.i.i177 = getelementptr inbounds %Array_FloError_, ptr %226, i64 0, i32 1
  %228 = load i64, ptr %memberidx.i.i177, align 4
  %229 = add i64 %228, 1
  %memberidx.i.i.i178 = getelementptr inbounds %Array_FloError_, ptr %226, i64 0, i32 2
  %230 = load i64, ptr %memberidx.i.i.i178, align 4
  %231 = icmp slt i64 %230, %229
  %.pre217 = load ptr, ptr %226, align 8
  br i1 %231, label %while.body.i.i.i180, label %TypeChecker_error.exit181

while.body.i.i.i180:                              ; preds = %if.entry52, %while.body.i.i.i180
  %232 = phi ptr [ %236, %while.body.i.i.i180 ], [ %.pre217, %if.entry52 ]
  %233 = phi i64 [ %237, %while.body.i.i.i180 ], [ %230, %if.entry52 ]
  %234 = shl nuw i64 %233, 1
  store i64 %234, ptr %memberidx.i.i.i178, align 4
  %235 = shl i64 %233, 4
  %236 = call ptr @realloc(ptr %232, i64 %235)
  store ptr %236, ptr %226, align 8
  %237 = load i64, ptr %memberidx.i.i.i178, align 4
  %238 = icmp slt i64 %237, %229
  br i1 %238, label %while.body.i.i.i180, label %TypeChecker_error.exit181.loopexit

TypeChecker_error.exit181.loopexit:               ; preds = %while.body.i.i.i180
  %.pre218 = load i64, ptr %memberidx.i.i177, align 4
  %.pre226 = add nsw i64 %.pre218, 1
  br label %TypeChecker_error.exit181

TypeChecker_error.exit181:                        ; preds = %if.entry52, %TypeChecker_error.exit181.loopexit
  %.pre-phi227 = phi i64 [ %.pre226, %TypeChecker_error.exit181.loopexit ], [ %229, %if.entry52 ]
  %239 = phi ptr [ %236, %TypeChecker_error.exit181.loopexit ], [ %.pre217, %if.entry52 ]
  %240 = phi i64 [ %.pre218, %TypeChecker_error.exit181.loopexit ], [ %228, %if.entry52 ]
  store i64 %.pre-phi227, ptr %memberidx.i.i177, align 4
  %241 = getelementptr inbounds ptr, ptr %239, i64 %240
  store ptr %227, ptr %241, align 8
  br label %common.ret

ifend54:                                          ; preds = %else.i, %ifend27, %while.end.i, %if.entry6.i
  %242 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %4, ptr %ternary21237240, ptr nonnull %var_type.0)
  %243 = tail call ptr @malloc(i32 25)
  %memberidx57 = getelementptr inbounds %Var, ptr %242, i64 0, i32 1
  %244 = load ptr, ptr %memberidx57, align 8
  store i64 1, ptr %243, align 4
  %memberidx.i182 = getelementptr inbounds %VarDeclaration, ptr %243, i64 0, i32 2
  store ptr %244, ptr %memberidx.i182, align 8
  %memberidx1.i183 = getelementptr inbounds %VarDeclaration, ptr %243, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i183, align 8
  %memberidx2.i184 = getelementptr inbounds %VarDeclaration, ptr %243, i64 0, i32 3
  store i1 false, ptr %memberidx2.i184, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1.i, align 8
  %7 = load ptr, ptr %5, align 8
  %8 = load i64, ptr %6, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 7
  %12 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %17 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %4)
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %TypeChecker_is_constant_in_scope.exit, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %18 = load i64, ptr %17, align 4
  %19 = icmp eq i64 %18, 2
  br label %TypeChecker_is_constant_in_scope.exit

TypeChecker_is_constant_in_scope.exit:            ; preds = %2, %if.entry.i
  %is_constant.0.i = phi i1 [ %19, %if.entry.i ], [ false, %2 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2, align 8
  %21 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_String_VarId_, ptr %20, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i, align 4
  %23 = urem i64 %21, %22
  %24 = load ptr, ptr %20, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  %.not.i83156 = icmp eq ptr %26, null
  br i1 %.not.i83156, label %Map_String_VarId____getitem__.exit, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %TypeChecker_is_constant_in_scope.exit
  %memberidx1.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre160.pre = load ptr, ptr %20, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre160.pre, i64 %hash.0.i157
  %.pre161.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre161.pre, null
  br i1 %.not22.i, label %Map_String_VarId____getitem__.exit, label %if.entry6.i

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %27 = phi ptr [ %24, %while.body.i.lr.ph ], [ %37, %else.i ]
  %28 = phi i64 [ %22, %while.body.i.lr.ph ], [ %38, %else.i ]
  %29 = phi ptr [ %26, %while.body.i.lr.ph ], [ %42, %else.i ]
  %hash.0.i157 = phi i64 [ %23, %while.body.i.lr.ph ], [ %40, %else.i ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %32 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %31, %32
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %33 = load ptr, ptr %30, align 8
  %34 = load ptr, ptr %4, align 8
  %35 = tail call i64 @memcmp(ptr %33, ptr %34, i64 %31)
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre159 = load ptr, ptr %20, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %37 = phi ptr [ %.pre159, %ifend.i.i.else.i_crit_edge ], [ %27, %while.body.i ]
  %38 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.body.i ]
  %39 = add nuw i64 %hash.0.i157, 1
  %40 = urem i64 %39, %38
  %41 = getelementptr inbounds ptr, ptr %37, i64 %40
  %42 = load ptr, ptr %41, align 8
  %.not.i83 = icmp eq ptr %42, null
  br i1 %.not.i83, label %Map_String_VarId____getitem__.exit, label %while.body.i

if.entry6.i:                                      ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre161.pre, i64 0, i32 1
  %43 = load ptr, ptr %memberidx10.i, align 8
  %phi.cmp = icmp ne ptr %43, null
  br label %Map_String_VarId____getitem__.exit

Map_String_VarId____getitem__.exit:               ; preds = %else.i, %TypeChecker_is_constant_in_scope.exit, %while.end.i, %if.entry6.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry6.i ], [ false, %while.end.i ], [ false, %TypeChecker_is_constant_in_scope.exit ], [ false, %else.i ]
  %44 = or i1 %is_constant.0.i, %common.ret.op.i
  br i1 %44, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend9, %end, %ifend40, %TypeChecker_error.exit143, %TypeChecker_error.exit132, %TypeChecker_error.exit119, %TypeChecker_error.exit107, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit107 ], [ null, %TypeChecker_error.exit119 ], [ null, %TypeChecker_error.exit132 ], [ null, %TypeChecker_error.exit143 ], [ %203, %ifend40 ], [ null, %end ], [ null, %ifend9 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %Map_String_VarId____getitem__.exit
  %memberidx.i84 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i84, align 4
  %46 = trunc i64 %45 to i32
  %47 = add i32 %46, 1
  %48 = tail call ptr @malloc(i32 %47)
  %49 = load ptr, ptr %4, align 8
  %50 = load i64, ptr %memberidx.i84, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %48, ptr align 8 %49, i64 %50, i1 false)
  %51 = getelementptr inbounds i8, ptr %48, i64 %50
  store i8 0, ptr %51, align 1
  %52 = alloca ptr, align 8
  %53 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %52, ptr nonnull @109, ptr %48)
  %54 = load ptr, ptr %52, align 8
  %55 = tail call ptr @malloc(i32 24)
  store ptr %54, ptr %55, align 8
  %memberidx1.i85 = getelementptr inbounds %String, ptr %55, i64 0, i32 1
  store i64 %53, ptr %memberidx1.i85, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %55, i64 0, i32 2
  store i64 %53, ptr %memberidx2.i, align 4
  tail call void @free(ptr %48)
  %56 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %56, i64 0, i32 1
  %57 = load ptr, ptr %memberidx4, align 8
  %memberidx.i86 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %58 = load ptr, ptr %memberidx.i86, align 8
  %memberidx1.i87 = getelementptr inbounds %Compiler, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx1.i87, align 8
  %60 = call ptr @malloc(i32 24)
  store i64 1, ptr %60, align 4
  %memberidx1.i.i88 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 2
  store ptr %57, ptr %memberidx1.i.i88, align 8
  %memberidx2.i.i89 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 1
  store ptr %55, ptr %memberidx2.i.i89, align 8
  %memberidx.i.i90 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %61 = load i64, ptr %memberidx.i.i90, align 4
  %62 = add i64 %61, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i.i, align 4
  %64 = icmp slt i64 %63, %62
  %.pre174 = load ptr, ptr %59, align 8
  br i1 %64, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %65 = phi ptr [ %69, %while.body.i.i.i ], [ %.pre174, %if.entry ]
  %66 = phi i64 [ %70, %while.body.i.i.i ], [ %63, %if.entry ]
  %67 = shl nuw i64 %66, 1
  store i64 %67, ptr %memberidx.i.i.i, align 4
  %68 = shl i64 %66, 4
  %69 = call ptr @realloc(ptr %65, i64 %68)
  store ptr %69, ptr %59, align 8
  %70 = load i64, ptr %memberidx.i.i.i, align 4
  %71 = icmp slt i64 %70, %62
  br i1 %71, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre175 = load i64, ptr %memberidx.i.i90, align 4
  %.pre179 = add nsw i64 %.pre175, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre179, %TypeChecker_error.exit.loopexit ], [ %62, %if.entry ]
  %72 = phi ptr [ %69, %TypeChecker_error.exit.loopexit ], [ %.pre174, %if.entry ]
  %73 = phi i64 [ %.pre175, %TypeChecker_error.exit.loopexit ], [ %61, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i90, align 4
  %74 = getelementptr inbounds ptr, ptr %72, i64 %73
  store ptr %60, ptr %74, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_VarId____getitem__.exit
  %memberidx5 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 3
  %75 = load ptr, ptr %memberidx5, align 8
  %.not = icmp eq ptr %75, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %76 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %75)
  br label %end

false_block:                                      ; preds = %ifend
  %77 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %77, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %76, %true_block ], [ %77, %false_block ]
  %memberidx.i91 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %78 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i92 = getelementptr inbounds %Compiler, ptr %78, i64 0, i32 5
  %79 = load ptr, ptr %memberidx1.i92, align 8
  %memberidx2.i93 = getelementptr inbounds %Array_FloError_, ptr %79, i64 0, i32 1
  %80 = load i64, ptr %memberidx2.i93, align 4
  %81 = icmp sgt i64 %80, 0
  br i1 %81, label %common.ret, label %ifend9

ifend9:                                           ; preds = %end
  %memberidx10 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 4
  %82 = load ptr, ptr %memberidx10, align 8
  %83 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %ternary, ptr %82)
  %84 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i95 = getelementptr inbounds %Compiler, ptr %84, i64 0, i32 5
  %85 = load ptr, ptr %memberidx1.i95, align 8
  %memberidx2.i96 = getelementptr inbounds %Array_FloError_, ptr %85, i64 0, i32 1
  %86 = load i64, ptr %memberidx2.i96, align 4
  %87 = icmp sgt i64 %86, 0
  br i1 %87, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend9
  %memberidx14 = getelementptr inbounds %Expression, ptr %83, i64 0, i32 1
  %88 = load i1, ptr %memberidx14, align 1
  br i1 %88, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %89 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %89, ptr noundef nonnull align 8 dereferenceable(48) @234, i64 48, i1 false)
  %90 = tail call ptr @malloc(i32 24)
  store ptr %89, ptr %90, align 8
  %memberidx1.i.i97 = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  store i64 48, ptr %memberidx1.i.i97, align 4
  %memberidx2.i.i98 = getelementptr inbounds %String, ptr %90, i64 0, i32 2
  store i64 48, ptr %memberidx2.i.i98, align 4
  %91 = load ptr, ptr %memberidx10, align 8
  %92 = load ptr, ptr %91, align 8
  %93 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i100 = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx1.i100, align 8
  %95 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %95, align 4
  %memberidx1.i.i101 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 2
  store ptr %92, ptr %memberidx1.i.i101, align 8
  %memberidx2.i.i102 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i102, align 8
  %memberidx.i.i103 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i.i103, align 4
  %97 = add i64 %96, 1
  %memberidx.i.i.i104 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 2
  %98 = load i64, ptr %memberidx.i.i.i104, align 4
  %99 = icmp slt i64 %98, %97
  %.pre162 = load ptr, ptr %94, align 8
  br i1 %99, label %while.body.i.i.i106, label %TypeChecker_error.exit107

while.body.i.i.i106:                              ; preds = %if.entry15, %while.body.i.i.i106
  %100 = phi ptr [ %104, %while.body.i.i.i106 ], [ %.pre162, %if.entry15 ]
  %101 = phi i64 [ %105, %while.body.i.i.i106 ], [ %98, %if.entry15 ]
  %102 = shl nuw i64 %101, 1
  store i64 %102, ptr %memberidx.i.i.i104, align 4
  %103 = shl i64 %101, 4
  %104 = tail call ptr @realloc(ptr %100, i64 %103)
  store ptr %104, ptr %94, align 8
  %105 = load i64, ptr %memberidx.i.i.i104, align 4
  %106 = icmp slt i64 %105, %97
  br i1 %106, label %while.body.i.i.i106, label %TypeChecker_error.exit107.loopexit

TypeChecker_error.exit107.loopexit:               ; preds = %while.body.i.i.i106
  %.pre163 = load i64, ptr %memberidx.i.i103, align 4
  %.pre186 = add nsw i64 %.pre163, 1
  br label %TypeChecker_error.exit107

TypeChecker_error.exit107:                        ; preds = %if.entry15, %TypeChecker_error.exit107.loopexit
  %.pre-phi187 = phi i64 [ %.pre186, %TypeChecker_error.exit107.loopexit ], [ %97, %if.entry15 ]
  %107 = phi ptr [ %104, %TypeChecker_error.exit107.loopexit ], [ %.pre162, %if.entry15 ]
  %108 = phi i64 [ %.pre163, %TypeChecker_error.exit107.loopexit ], [ %96, %if.entry15 ]
  store i64 %.pre-phi187, ptr %memberidx.i.i103, align 4
  %109 = getelementptr inbounds ptr, ptr %107, i64 %108
  store ptr %95, ptr %109, align 8
  br label %common.ret

ifend17:                                          ; preds = %ifend13
  %memberidx.i108 = getelementptr inbounds %Expression, ptr %83, i64 0, i32 2
  %110 = load i64, ptr %memberidx.i108, align 4
  %111 = icmp eq i64 %110, 5
  %112 = load i64, ptr %ternary, align 4
  %113 = icmp eq i64 %112, 21
  %114 = and i1 %111, %113
  br i1 %114, label %if.entry21, label %ifend23

if.entry21:                                       ; preds = %ifend17
  %115 = tail call ptr @malloc(i32 69)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %115, ptr noundef nonnull align 8 dereferenceable(69) @230, i64 69, i1 false)
  %116 = tail call ptr @malloc(i32 24)
  store ptr %115, ptr %116, align 8
  %memberidx1.i.i109 = getelementptr inbounds %String, ptr %116, i64 0, i32 1
  store i64 69, ptr %memberidx1.i.i109, align 4
  %memberidx2.i.i110 = getelementptr inbounds %String, ptr %116, i64 0, i32 2
  store i64 69, ptr %memberidx2.i.i110, align 4
  %117 = load ptr, ptr %1, align 8
  %118 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i112 = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 5
  %119 = load ptr, ptr %memberidx1.i112, align 8
  %120 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %120, align 4
  %memberidx1.i.i113 = getelementptr inbounds %FloError, ptr %120, i64 0, i32 2
  store ptr %117, ptr %memberidx1.i.i113, align 8
  %memberidx2.i.i114 = getelementptr inbounds %FloError, ptr %120, i64 0, i32 1
  store ptr %116, ptr %memberidx2.i.i114, align 8
  %memberidx.i.i115 = getelementptr inbounds %Array_FloError_, ptr %119, i64 0, i32 1
  %121 = load i64, ptr %memberidx.i.i115, align 4
  %122 = add i64 %121, 1
  %memberidx.i.i.i116 = getelementptr inbounds %Array_FloError_, ptr %119, i64 0, i32 2
  %123 = load i64, ptr %memberidx.i.i.i116, align 4
  %124 = icmp slt i64 %123, %122
  %.pre171 = load ptr, ptr %119, align 8
  br i1 %124, label %while.body.i.i.i118, label %TypeChecker_error.exit119

while.body.i.i.i118:                              ; preds = %if.entry21, %while.body.i.i.i118
  %125 = phi ptr [ %129, %while.body.i.i.i118 ], [ %.pre171, %if.entry21 ]
  %126 = phi i64 [ %130, %while.body.i.i.i118 ], [ %123, %if.entry21 ]
  %127 = shl nuw i64 %126, 1
  store i64 %127, ptr %memberidx.i.i.i116, align 4
  %128 = shl i64 %126, 4
  %129 = tail call ptr @realloc(ptr %125, i64 %128)
  store ptr %129, ptr %119, align 8
  %130 = load i64, ptr %memberidx.i.i.i116, align 4
  %131 = icmp slt i64 %130, %122
  br i1 %131, label %while.body.i.i.i118, label %TypeChecker_error.exit119.loopexit

TypeChecker_error.exit119.loopexit:               ; preds = %while.body.i.i.i118
  %.pre172 = load i64, ptr %memberidx.i.i115, align 4
  %.pre180 = add nsw i64 %.pre172, 1
  br label %TypeChecker_error.exit119

TypeChecker_error.exit119:                        ; preds = %if.entry21, %TypeChecker_error.exit119.loopexit
  %.pre-phi181 = phi i64 [ %.pre180, %TypeChecker_error.exit119.loopexit ], [ %122, %if.entry21 ]
  %132 = phi ptr [ %129, %TypeChecker_error.exit119.loopexit ], [ %.pre171, %if.entry21 ]
  %133 = phi i64 [ %.pre172, %TypeChecker_error.exit119.loopexit ], [ %121, %if.entry21 ]
  store i64 %.pre-phi181, ptr %memberidx.i.i115, align 4
  %134 = getelementptr inbounds ptr, ptr %132, i64 %133
  store ptr %120, ptr %134, align 8
  br label %common.ret

ifend23:                                          ; preds = %ifend17
  %memberidx26 = getelementptr inbounds %Expression, ptr %83, i64 0, i32 3
  %135 = load ptr, ptr %memberidx26, align 8
  %136 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr %135)
  %137 = or i1 %113, %136
  br i1 %137, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend23
  %138 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %memberidx.i120 = getelementptr inbounds %String, ptr %138, i64 0, i32 1
  %139 = load i64, ptr %memberidx.i120, align 4
  %140 = trunc i64 %139 to i32
  %141 = add i32 %140, 1
  %142 = tail call ptr @malloc(i32 %141)
  %143 = load ptr, ptr %138, align 8
  %144 = load i64, ptr %memberidx.i120, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %142, ptr align 8 %143, i64 %144, i1 false)
  %145 = getelementptr inbounds i8, ptr %142, i64 %144
  store i8 0, ptr %145, align 1
  %146 = load ptr, ptr %memberidx26, align 8
  %147 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %146)
  %memberidx.i121 = getelementptr inbounds %String, ptr %147, i64 0, i32 1
  %148 = load i64, ptr %memberidx.i121, align 4
  %149 = trunc i64 %148 to i32
  %150 = add i32 %149, 1
  %151 = tail call ptr @malloc(i32 %150)
  %152 = load ptr, ptr %147, align 8
  %153 = load i64, ptr %memberidx.i121, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %151, ptr align 8 %152, i64 %153, i1 false)
  %154 = getelementptr inbounds i8, ptr %151, i64 %153
  store i8 0, ptr %154, align 1
  %155 = alloca ptr, align 8
  %156 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %155, ptr nonnull @235, ptr %142, ptr %151)
  %157 = load ptr, ptr %155, align 8
  %158 = tail call ptr @malloc(i32 24)
  store ptr %157, ptr %158, align 8
  %memberidx1.i122 = getelementptr inbounds %String, ptr %158, i64 0, i32 1
  store i64 %156, ptr %memberidx1.i122, align 4
  %memberidx2.i123 = getelementptr inbounds %String, ptr %158, i64 0, i32 2
  store i64 %156, ptr %memberidx2.i123, align 4
  tail call void @free(ptr %142)
  tail call void @free(ptr %151)
  %159 = load ptr, ptr %1, align 8
  %160 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i125 = getelementptr inbounds %Compiler, ptr %160, i64 0, i32 5
  %161 = load ptr, ptr %memberidx1.i125, align 8
  %162 = call ptr @malloc(i32 24)
  store i64 5, ptr %162, align 4
  %memberidx1.i.i126 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 2
  store ptr %159, ptr %memberidx1.i.i126, align 8
  %memberidx2.i.i127 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 1
  store ptr %158, ptr %memberidx2.i.i127, align 8
  %memberidx.i.i128 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 1
  %163 = load i64, ptr %memberidx.i.i128, align 4
  %164 = add i64 %163, 1
  %memberidx.i.i.i129 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 2
  %165 = load i64, ptr %memberidx.i.i.i129, align 4
  %166 = icmp slt i64 %165, %164
  %.pre165 = load ptr, ptr %161, align 8
  br i1 %166, label %while.body.i.i.i131, label %TypeChecker_error.exit132

while.body.i.i.i131:                              ; preds = %if.entry27, %while.body.i.i.i131
  %167 = phi ptr [ %171, %while.body.i.i.i131 ], [ %.pre165, %if.entry27 ]
  %168 = phi i64 [ %172, %while.body.i.i.i131 ], [ %165, %if.entry27 ]
  %169 = shl nuw i64 %168, 1
  store i64 %169, ptr %memberidx.i.i.i129, align 4
  %170 = shl i64 %168, 4
  %171 = call ptr @realloc(ptr %167, i64 %170)
  store ptr %171, ptr %161, align 8
  %172 = load i64, ptr %memberidx.i.i.i129, align 4
  %173 = icmp slt i64 %172, %164
  br i1 %173, label %while.body.i.i.i131, label %TypeChecker_error.exit132.loopexit

TypeChecker_error.exit132.loopexit:               ; preds = %while.body.i.i.i131
  %.pre166 = load i64, ptr %memberidx.i.i128, align 4
  %.pre184 = add nsw i64 %.pre166, 1
  br label %TypeChecker_error.exit132

TypeChecker_error.exit132:                        ; preds = %if.entry27, %TypeChecker_error.exit132.loopexit
  %.pre-phi185 = phi i64 [ %.pre184, %TypeChecker_error.exit132.loopexit ], [ %164, %if.entry27 ]
  %174 = phi ptr [ %171, %TypeChecker_error.exit132.loopexit ], [ %.pre165, %if.entry27 ]
  %175 = phi i64 [ %.pre166, %TypeChecker_error.exit132.loopexit ], [ %163, %if.entry27 ]
  store i64 %.pre-phi185, ptr %memberidx.i.i128, align 4
  %176 = getelementptr inbounds ptr, ptr %174, i64 %175
  store ptr %162, ptr %176, align 8
  br label %common.ret

ifend29:                                          ; preds = %ifend23
  %177 = load i64, ptr %ternary, align 4
  %178 = icmp eq i64 %177, 21
  br i1 %178, label %if.entry33, label %ifend35

if.entry33:                                       ; preds = %ifend29
  %179 = load ptr, ptr %memberidx26, align 8
  %.pr = load i64, ptr %179, align 4
  br label %ifend35

ifend35:                                          ; preds = %ifend29, %if.entry33
  %180 = phi i64 [ %177, %ifend29 ], [ %.pr, %if.entry33 ]
  %const_type.0 = phi ptr [ %ternary, %ifend29 ], [ %179, %if.entry33 ]
  %181 = icmp eq i64 %180, 10
  br i1 %181, label %if.entry38, label %ifend40

if.entry38:                                       ; preds = %ifend35
  %182 = tail call ptr @malloc(i32 35)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %182, ptr noundef nonnull align 8 dereferenceable(35) @236, i64 35, i1 false)
  %183 = tail call ptr @malloc(i32 24)
  store ptr %182, ptr %183, align 8
  %memberidx1.i.i133 = getelementptr inbounds %String, ptr %183, i64 0, i32 1
  store i64 35, ptr %memberidx1.i.i133, align 4
  %memberidx2.i.i134 = getelementptr inbounds %String, ptr %183, i64 0, i32 2
  store i64 35, ptr %memberidx2.i.i134, align 4
  %184 = load ptr, ptr %1, align 8
  %185 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i136 = getelementptr inbounds %Compiler, ptr %185, i64 0, i32 5
  %186 = load ptr, ptr %memberidx1.i136, align 8
  %187 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %187, align 4
  %memberidx1.i.i137 = getelementptr inbounds %FloError, ptr %187, i64 0, i32 2
  store ptr %184, ptr %memberidx1.i.i137, align 8
  %memberidx2.i.i138 = getelementptr inbounds %FloError, ptr %187, i64 0, i32 1
  store ptr %183, ptr %memberidx2.i.i138, align 8
  %memberidx.i.i139 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 1
  %188 = load i64, ptr %memberidx.i.i139, align 4
  %189 = add i64 %188, 1
  %memberidx.i.i.i140 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 2
  %190 = load i64, ptr %memberidx.i.i.i140, align 4
  %191 = icmp slt i64 %190, %189
  %.pre168 = load ptr, ptr %186, align 8
  br i1 %191, label %while.body.i.i.i142, label %TypeChecker_error.exit143

while.body.i.i.i142:                              ; preds = %if.entry38, %while.body.i.i.i142
  %192 = phi ptr [ %196, %while.body.i.i.i142 ], [ %.pre168, %if.entry38 ]
  %193 = phi i64 [ %197, %while.body.i.i.i142 ], [ %190, %if.entry38 ]
  %194 = shl nuw i64 %193, 1
  store i64 %194, ptr %memberidx.i.i.i140, align 4
  %195 = shl i64 %193, 4
  %196 = tail call ptr @realloc(ptr %192, i64 %195)
  store ptr %196, ptr %186, align 8
  %197 = load i64, ptr %memberidx.i.i.i140, align 4
  %198 = icmp slt i64 %197, %189
  br i1 %198, label %while.body.i.i.i142, label %TypeChecker_error.exit143.loopexit

TypeChecker_error.exit143.loopexit:               ; preds = %while.body.i.i.i142
  %.pre169 = load i64, ptr %memberidx.i.i139, align 4
  %.pre182 = add nsw i64 %.pre169, 1
  br label %TypeChecker_error.exit143

TypeChecker_error.exit143:                        ; preds = %if.entry38, %TypeChecker_error.exit143.loopexit
  %.pre-phi183 = phi i64 [ %.pre182, %TypeChecker_error.exit143.loopexit ], [ %189, %if.entry38 ]
  %199 = phi ptr [ %196, %TypeChecker_error.exit143.loopexit ], [ %.pre168, %if.entry38 ]
  %200 = phi i64 [ %.pre169, %TypeChecker_error.exit143.loopexit ], [ %188, %if.entry38 ]
  store i64 %.pre-phi183, ptr %memberidx.i.i139, align 4
  %201 = getelementptr inbounds ptr, ptr %199, i64 %200
  store ptr %187, ptr %201, align 8
  br label %common.ret

ifend40:                                          ; preds = %ifend35
  %202 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr %4, ptr nonnull %83, ptr nonnull %const_type.0)
  %203 = tail call ptr @malloc(i32 25)
  %memberidx42 = getelementptr inbounds %Const, ptr %202, i64 0, i32 1
  %204 = load ptr, ptr %memberidx42, align 8
  store i64 2, ptr %203, align 4
  %memberidx.i144 = getelementptr inbounds %ConstDeclaration, ptr %203, i64 0, i32 2
  store ptr %204, ptr %memberidx.i144, align 8
  %memberidx1.i145 = getelementptr inbounds %ConstDeclaration, ptr %203, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i145, align 8
  %memberidx2.i146 = getelementptr inbounds %ConstDeclaration, ptr %203, i64 0, i32 3
  store i1 false, ptr %memberidx2.i146, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1.i, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %memberidx1.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend5, %2
  %current_scope.0.in = phi ptr [ %13, %2 ], [ %81, %ifend5 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 1
  %14 = load ptr, ptr %memberidx, align 8
  %15 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_String_VarId_, ptr %14, i64 0, i32 1
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = urem i64 %15, %16
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %.not.i133 = icmp eq ptr %20, null
  br i1 %.not.i133, label %if.entry, label %while.body.i

while.end:                                        ; preds = %ifend
  %21 = icmp eq ptr %value.2, null
  %22 = load ptr, ptr %memberidx1.i, align 8
  %23 = load i64, ptr %22, align 4
  %24 = icmp ne i64 %23, 0
  %25 = and i1 %21, %24
  br i1 %25, label %if.entry10, label %ifend12

while.end.i:                                      ; preds = %ifend.i.i
  %.pre141.pre = load ptr, ptr %14, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre141.pre, i64 %hash.0.i134
  %.pre142.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre142.pre, null
  br i1 %.not22.i, label %if.entry, label %Map_String_VarId____getitem__.exit

while.body.i:                                     ; preds = %while.entry, %else.i
  %26 = phi ptr [ %36, %else.i ], [ %18, %while.entry ]
  %27 = phi i64 [ %37, %else.i ], [ %16, %while.entry ]
  %28 = phi ptr [ %41, %else.i ], [ %20, %while.entry ]
  %hash.0.i134 = phi i64 [ %39, %else.i ], [ %17, %while.entry ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i.i, align 4
  %31 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %30, %31
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %32 = load ptr, ptr %29, align 8
  %33 = load ptr, ptr %1, align 8
  %34 = tail call i64 @memcmp(ptr %32, ptr %33, i64 %30)
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre140 = load ptr, ptr %14, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %36 = phi ptr [ %.pre140, %ifend.i.i.else.i_crit_edge ], [ %26, %while.body.i ]
  %37 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %27, %while.body.i ]
  %38 = add nuw i64 %hash.0.i134, 1
  %39 = urem i64 %38, %37
  %40 = getelementptr inbounds ptr, ptr %36, i64 %39
  %41 = load ptr, ptr %40, align 8
  %.not.i = icmp eq ptr %41, null
  br i1 %.not.i, label %if.entry, label %while.body.i

Map_String_VarId____getitem__.exit:               ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre142.pre, i64 0, i32 1
  %42 = load ptr, ptr %memberidx10.i, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %if.entry, label %ifend12

if.entry:                                         ; preds = %else.i, %while.entry, %while.end.i, %Map_String_VarId____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 3
  %44 = load ptr, ptr %memberidx1, align 8
  %45 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %1)
  %memberidx.i73 = getelementptr inbounds %Map_String_VarId_, ptr %44, i64 0, i32 1
  %46 = load i64, ptr %memberidx.i73, align 4
  %47 = urem i64 %45, %46
  %48 = load ptr, ptr %44, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %.not.i75136 = icmp eq ptr %50, null
  br i1 %.not.i75136, label %ifend, label %while.body.i82

while.end.i78:                                    ; preds = %ifend.i.i83
  %.pre145.pre = load ptr, ptr %44, align 8
  %.phi.trans.insert146.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre145.pre, i64 %hash.0.i74137
  %.pre147.pre = load ptr, ptr %.phi.trans.insert146.phi.trans.insert, align 8
  %.not22.i77 = icmp eq ptr %.pre147.pre, null
  br i1 %.not22.i77, label %ifend, label %if.entry6.i89

while.body.i82:                                   ; preds = %if.entry, %else.i86
  %51 = phi ptr [ %61, %else.i86 ], [ %48, %if.entry ]
  %52 = phi i64 [ %62, %else.i86 ], [ %46, %if.entry ]
  %53 = phi ptr [ %66, %else.i86 ], [ %50, %if.entry ]
  %hash.0.i74137 = phi i64 [ %64, %else.i86 ], [ %47, %if.entry ]
  %54 = load ptr, ptr %53, align 8
  %memberidx.i.i79 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i.i79, align 4
  %56 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i81 = icmp eq i64 %55, %56
  br i1 %.not.i.i81, label %ifend.i.i83, label %else.i86

ifend.i.i83:                                      ; preds = %while.body.i82
  %57 = load ptr, ptr %54, align 8
  %58 = load ptr, ptr %1, align 8
  %59 = tail call i64 @memcmp(ptr %57, ptr %58, i64 %55)
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %while.end.i78, label %ifend.i.i83.else.i86_crit_edge

ifend.i.i83.else.i86_crit_edge:                   ; preds = %ifend.i.i83
  %.pre143 = load i64, ptr %memberidx.i73, align 4
  %.pre144 = load ptr, ptr %44, align 8
  br label %else.i86

else.i86:                                         ; preds = %ifend.i.i83.else.i86_crit_edge, %while.body.i82
  %61 = phi ptr [ %.pre144, %ifend.i.i83.else.i86_crit_edge ], [ %51, %while.body.i82 ]
  %62 = phi i64 [ %.pre143, %ifend.i.i83.else.i86_crit_edge ], [ %52, %while.body.i82 ]
  %63 = add nuw i64 %hash.0.i74137, 1
  %64 = urem i64 %63, %62
  %65 = getelementptr inbounds ptr, ptr %61, i64 %64
  %66 = load ptr, ptr %65, align 8
  %.not.i75 = icmp eq ptr %66, null
  br i1 %.not.i75, label %ifend, label %while.body.i82

if.entry6.i89:                                    ; preds = %while.end.i78
  %memberidx10.i88 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre147.pre, i64 0, i32 1
  %67 = load ptr, ptr %memberidx10.i88, align 8
  br label %ifend

ifend:                                            ; preds = %else.i86, %if.entry, %if.entry6.i89, %while.end.i78
  %value.2 = phi ptr [ %67, %if.entry6.i89 ], [ null, %while.end.i78 ], [ null, %if.entry ], [ null, %else.i86 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %68 = load ptr, ptr %memberidx2, align 8
  %69 = icmp eq ptr %68, null
  %70 = icmp ne ptr %value.2, null
  %71 = or i1 %70, %69
  br i1 %71, label %while.end, label %ifend5

ifend5:                                           ; preds = %ifend
  %72 = load ptr, ptr %0, align 8
  %73 = load ptr, ptr %72, align 8
  %74 = load i64, ptr %68, align 4
  %75 = load ptr, ptr %73, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %74
  %77 = load ptr, ptr %76, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %77, i64 0, i32 7
  %78 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %68, i64 0, i32 1
  %79 = load i64, ptr %memberidx3.i, align 4
  %80 = load ptr, ptr %78, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %79
  br label %while.entry

if.entry10:                                       ; preds = %while.end
  %82 = load ptr, ptr %0, align 8
  %83 = load ptr, ptr %82, align 8
  %84 = load ptr, ptr %83, align 8
  %85 = load ptr, ptr %84, align 8
  %memberidx17 = getelementptr inbounds %Module, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx17, align 8
  store ptr %86, ptr %memberidx1.i, align 8
  %87 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %1)
  store ptr %22, ptr %memberidx1.i, align 8
  %.not = icmp eq ptr %87, null
  br i1 %.not, label %ifend12, label %if.entry19

ifend12:                                          ; preds = %Map_String_VarId____getitem__.exit, %if.entry36, %ifend34, %if.entry10, %while.end
  %value.3 = phi ptr [ %87, %if.entry36 ], [ %87, %ifend34 ], [ null, %if.entry10 ], [ %value.2, %while.end ], [ %42, %Map_String_VarId____getitem__.exit ]
  ret ptr %value.3

if.entry19:                                       ; preds = %if.entry10
  %88 = load i64, ptr %87, align 4
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %if.entry19
  %90 = load ptr, ptr %0, align 8
  %91 = load i64, ptr %22, align 4
  %92 = load ptr, ptr %90, align 8
  %93 = load ptr, ptr %92, align 8
  %94 = getelementptr inbounds ptr, ptr %93, i64 %91
  %95 = load ptr, ptr %94, align 8
  %memberidx1.i.i95 = getelementptr inbounds %Module, ptr %95, i64 0, i32 5
  %96 = load ptr, ptr %memberidx1.i.i95, align 8
  %97 = load i64, ptr %96, align 4
  %98 = getelementptr inbounds ptr, ptr %93, i64 %97
  %99 = load ptr, ptr %98, align 8
  %memberidx2.i.i.i96 = getelementptr inbounds %Module, ptr %99, i64 0, i32 7
  %100 = load ptr, ptr %memberidx2.i.i.i96, align 8
  %memberidx3.i.i.i97 = getelementptr inbounds %ScopeId, ptr %96, i64 0, i32 1
  %101 = load i64, ptr %memberidx3.i.i.i97, align 4
  %102 = load ptr, ptr %100, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8
  %memberidx.i98 = getelementptr inbounds %Scope, ptr %104, i64 0, i32 3
  %105 = load ptr, ptr %memberidx.i98, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %105, ptr %1, ptr nonnull %87)
  %.pre148 = load i64, ptr %87, align 4
  br label %ifend25

ifend25:                                          ; preds = %if.entry19, %if.entry23
  %106 = phi i64 [ %88, %if.entry19 ], [ %.pre148, %if.entry23 ]
  %107 = add i64 %106, -1
  %108 = icmp ult i64 %107, 2
  br i1 %108, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend25
  %109 = load ptr, ptr %0, align 8
  %110 = load ptr, ptr %memberidx1.i, align 8
  %111 = load i64, ptr %110, align 4
  %112 = load ptr, ptr %109, align 8
  %113 = load ptr, ptr %112, align 8
  %114 = getelementptr inbounds ptr, ptr %113, i64 %111
  %115 = load ptr, ptr %114, align 8
  %memberidx1.i.i100 = getelementptr inbounds %Module, ptr %115, i64 0, i32 5
  %116 = load ptr, ptr %memberidx1.i.i100, align 8
  %117 = load i64, ptr %116, align 4
  %118 = getelementptr inbounds ptr, ptr %113, i64 %117
  %119 = load ptr, ptr %118, align 8
  %memberidx2.i.i.i101 = getelementptr inbounds %Module, ptr %119, i64 0, i32 7
  %120 = load ptr, ptr %memberidx2.i.i.i101, align 8
  %memberidx3.i.i.i102 = getelementptr inbounds %ScopeId, ptr %116, i64 0, i32 1
  %121 = load i64, ptr %memberidx3.i.i.i102, align 4
  %122 = load ptr, ptr %120, align 8
  %123 = getelementptr inbounds ptr, ptr %122, i64 %121
  %124 = load ptr, ptr %123, align 8
  %memberidx.i103 = getelementptr inbounds %Scope, ptr %124, i64 0, i32 1
  %125 = load ptr, ptr %memberidx.i103, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %125, ptr %1, ptr nonnull %87)
  %.pr = load i64, ptr %87, align 4
  br label %ifend30

ifend30:                                          ; preds = %ifend25, %if.entry28
  %126 = phi i64 [ %106, %ifend25 ], [ %.pr, %if.entry28 ]
  %127 = icmp eq i64 %126, 3
  br i1 %127, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend30
  %128 = tail call ptr @malloc(i32 24)
  %memberidx.i104 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 1
  %129 = load i64, ptr %memberidx.i104, align 4
  %memberidx1.i105 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 2
  %130 = load i64, ptr %memberidx1.i105, align 4
  store i64 %129, ptr %128, align 4
  %memberidx1.i.i.i106 = getelementptr inbounds %TypeId, ptr %128, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i106, align 4
  %memberidx2.i.i.i107 = getelementptr inbounds %TypeId, ptr %128, i64 0, i32 2
  store i64 %130, ptr %memberidx2.i.i.i107, align 4
  %131 = load ptr, ptr %0, align 8
  %132 = load ptr, ptr %memberidx1.i, align 8
  %133 = load i64, ptr %132, align 4
  %134 = load ptr, ptr %131, align 8
  %135 = load ptr, ptr %134, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %133
  %137 = load ptr, ptr %136, align 8
  %memberidx1.i.i109 = getelementptr inbounds %Module, ptr %137, i64 0, i32 5
  %138 = load ptr, ptr %memberidx1.i.i109, align 8
  %139 = load i64, ptr %138, align 4
  %140 = getelementptr inbounds ptr, ptr %135, i64 %139
  %141 = load ptr, ptr %140, align 8
  %memberidx2.i.i.i110 = getelementptr inbounds %Module, ptr %141, i64 0, i32 7
  %142 = load ptr, ptr %memberidx2.i.i.i110, align 8
  %memberidx3.i.i.i111 = getelementptr inbounds %ScopeId, ptr %138, i64 0, i32 1
  %143 = load i64, ptr %memberidx3.i.i.i111, align 4
  %144 = load ptr, ptr %142, align 8
  %145 = getelementptr inbounds ptr, ptr %144, i64 %143
  %146 = load ptr, ptr %145, align 8
  %memberidx.i112 = getelementptr inbounds %Scope, ptr %146, i64 0, i32 2
  %147 = load ptr, ptr %memberidx.i112, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %147, ptr %1, ptr nonnull %128)
  %memberidx1.i113 = getelementptr inbounds %Scope, ptr %146, i64 0, i32 1
  %148 = load ptr, ptr %memberidx1.i113, align 8
  %149 = tail call ptr @malloc(i32 24)
  %150 = load i64, ptr %128, align 4
  %151 = load i64, ptr %memberidx2.i.i.i107, align 4
  store i64 3, ptr %149, align 4
  %memberidx1.i.i.i115 = getelementptr inbounds %VarId, ptr %149, i64 0, i32 1
  store i64 %150, ptr %memberidx1.i.i.i115, align 4
  %memberidx2.i.i6.i116 = getelementptr inbounds %VarId, ptr %149, i64 0, i32 2
  store i64 %151, ptr %memberidx2.i.i6.i116, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %148, ptr %1, ptr nonnull %149)
  %.pre149 = load i64, ptr %87, align 4
  br label %ifend34

ifend34:                                          ; preds = %ifend30, %if.entry32
  %152 = phi i64 [ %126, %ifend30 ], [ %.pre149, %if.entry32 ]
  %153 = icmp eq i64 %152, 4
  br i1 %153, label %if.entry36, label %ifend12

if.entry36:                                       ; preds = %ifend34
  %154 = tail call ptr @malloc(i32 24)
  %memberidx.i117 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 1
  %155 = load i64, ptr %memberidx.i117, align 4
  %memberidx1.i118 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 2
  %156 = load i64, ptr %memberidx1.i118, align 4
  store i64 %155, ptr %154, align 4
  %memberidx1.i.i.i119 = getelementptr inbounds %TypeId, ptr %154, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i119, align 4
  %memberidx2.i.i.i120 = getelementptr inbounds %TypeId, ptr %154, i64 0, i32 2
  store i64 %156, ptr %memberidx2.i.i.i120, align 4
  %157 = load ptr, ptr %0, align 8
  %158 = load ptr, ptr %memberidx1.i, align 8
  %159 = load i64, ptr %158, align 4
  %160 = load ptr, ptr %157, align 8
  %161 = load ptr, ptr %160, align 8
  %162 = getelementptr inbounds ptr, ptr %161, i64 %159
  %163 = load ptr, ptr %162, align 8
  %memberidx1.i.i91 = getelementptr inbounds %Module, ptr %163, i64 0, i32 5
  %164 = load ptr, ptr %memberidx1.i.i91, align 8
  %165 = load i64, ptr %164, align 4
  %166 = getelementptr inbounds ptr, ptr %161, i64 %165
  %167 = load ptr, ptr %166, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %167, i64 0, i32 7
  %168 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %164, i64 0, i32 1
  %169 = load i64, ptr %memberidx3.i.i.i, align 4
  %170 = load ptr, ptr %168, align 8
  %171 = getelementptr inbounds ptr, ptr %170, i64 %169
  %172 = load ptr, ptr %171, align 8
  %memberidx.i92 = getelementptr inbounds %Scope, ptr %172, i64 0, i32 4
  %173 = load ptr, ptr %memberidx.i92, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %173, ptr %1, ptr nonnull %154)
  %memberidx1.i93 = getelementptr inbounds %Scope, ptr %172, i64 0, i32 1
  %174 = load ptr, ptr %memberidx1.i93, align 8
  %175 = tail call ptr @malloc(i32 24)
  %176 = load i64, ptr %154, align 4
  %177 = load i64, ptr %memberidx2.i.i.i120, align 4
  store i64 4, ptr %175, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %175, i64 0, i32 1
  store i64 %176, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %175, i64 0, i32 2
  store i64 %177, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %174, ptr %1, ptr nonnull %175)
  br label %ifend12
}

define internal fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1.i, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %memberidx1.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend12, %2
  %current_scope.0.in = phi ptr [ %13, %2 ], [ %103, %ifend12 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 6
  %14 = load ptr, ptr %memberidx, align 8
  %15 = tail call fastcc i64 @Map_String_Type__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_String_Type_, ptr %14, i64 0, i32 1
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = urem i64 %15, %16
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %.not.i131 = icmp eq ptr %20, null
  br i1 %.not.i131, label %ifend, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre145.pre = load ptr, ptr %14, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre145.pre, i64 %hash.0.i132
  %.pre146.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre146.pre, null
  br i1 %.not22.i, label %ifend, label %Map_String_Type____getitem__.exit

while.body.i:                                     ; preds = %while.entry, %else.i
  %21 = phi ptr [ %31, %else.i ], [ %18, %while.entry ]
  %22 = phi i64 [ %32, %else.i ], [ %16, %while.entry ]
  %23 = phi ptr [ %36, %else.i ], [ %20, %while.entry ]
  %hash.0.i132 = phi i64 [ %34, %else.i ], [ %17, %while.entry ]
  %24 = load ptr, ptr %23, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx.i.i, align 4
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %25, %26
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %27 = load ptr, ptr %24, align 8
  %28 = load ptr, ptr %1, align 8
  %29 = tail call i64 @memcmp(ptr %27, ptr %28, i64 %25)
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre144 = load ptr, ptr %14, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %31 = phi ptr [ %.pre144, %ifend.i.i.else.i_crit_edge ], [ %21, %while.body.i ]
  %32 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %22, %while.body.i ]
  %33 = add nuw i64 %hash.0.i132, 1
  %34 = urem i64 %33, %32
  %35 = getelementptr inbounds ptr, ptr %31, i64 %34
  %36 = load ptr, ptr %35, align 8
  %.not.i = icmp eq ptr %36, null
  br i1 %.not.i, label %ifend, label %while.body.i

Map_String_Type____getitem__.exit:                ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_Type_, ptr %.pre146.pre, i64 0, i32 1
  %37 = load ptr, ptr %memberidx10.i, align 8
  %.not = icmp eq ptr %37, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_String_Type____getitem__.exit, %ifend28, %ifend19, %if.entry6, %if.entry2
  %common.ret.op = phi ptr [ %62, %if.entry2 ], [ %87, %if.entry6 ], [ %112, %ifend19 ], [ %110, %ifend28 ], [ %37, %Map_String_Type____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %while.entry, %while.end.i, %Map_String_Type____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 2
  %38 = load ptr, ptr %memberidx1, align 8
  %39 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr %1)
  %memberidx.i64 = getelementptr inbounds %Map_String_ClassId_, ptr %38, i64 0, i32 1
  %40 = load i64, ptr %memberidx.i64, align 4
  %41 = urem i64 %39, %40
  %42 = load ptr, ptr %38, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %.not.i66134 = icmp eq ptr %44, null
  br i1 %.not.i66134, label %ifend4, label %while.body.i73

while.end.i69:                                    ; preds = %ifend.i.i74
  %.pre149.pre = load ptr, ptr %38, align 8
  %.phi.trans.insert150.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre149.pre, i64 %hash.0.i65135
  %.pre151.pre = load ptr, ptr %.phi.trans.insert150.phi.trans.insert, align 8
  %.not22.i68 = icmp eq ptr %.pre151.pre, null
  br i1 %.not22.i68, label %ifend4, label %Map_String_ClassId____getitem__.exit

while.body.i73:                                   ; preds = %ifend, %else.i77
  %45 = phi ptr [ %55, %else.i77 ], [ %42, %ifend ]
  %46 = phi i64 [ %56, %else.i77 ], [ %40, %ifend ]
  %47 = phi ptr [ %60, %else.i77 ], [ %44, %ifend ]
  %hash.0.i65135 = phi i64 [ %58, %else.i77 ], [ %41, %ifend ]
  %48 = load ptr, ptr %47, align 8
  %memberidx.i.i70 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  %49 = load i64, ptr %memberidx.i.i70, align 4
  %50 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i72 = icmp eq i64 %49, %50
  br i1 %.not.i.i72, label %ifend.i.i74, label %else.i77

ifend.i.i74:                                      ; preds = %while.body.i73
  %51 = load ptr, ptr %48, align 8
  %52 = load ptr, ptr %1, align 8
  %53 = tail call i64 @memcmp(ptr %51, ptr %52, i64 %49)
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %while.end.i69, label %ifend.i.i74.else.i77_crit_edge

ifend.i.i74.else.i77_crit_edge:                   ; preds = %ifend.i.i74
  %.pre147 = load i64, ptr %memberidx.i64, align 4
  %.pre148 = load ptr, ptr %38, align 8
  br label %else.i77

else.i77:                                         ; preds = %ifend.i.i74.else.i77_crit_edge, %while.body.i73
  %55 = phi ptr [ %.pre148, %ifend.i.i74.else.i77_crit_edge ], [ %45, %while.body.i73 ]
  %56 = phi i64 [ %.pre147, %ifend.i.i74.else.i77_crit_edge ], [ %46, %while.body.i73 ]
  %57 = add nuw i64 %hash.0.i65135, 1
  %58 = urem i64 %57, %56
  %59 = getelementptr inbounds ptr, ptr %55, i64 %58
  %60 = load ptr, ptr %59, align 8
  %.not.i66 = icmp eq ptr %60, null
  br i1 %.not.i66, label %ifend4, label %while.body.i73

Map_String_ClassId____getitem__.exit:             ; preds = %while.end.i69
  %memberidx10.i79 = getelementptr inbounds %MapEntry_String_ClassId_, ptr %.pre151.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx10.i79, align 8
  %.not61 = icmp eq ptr %61, null
  br i1 %.not61, label %ifend4, label %if.entry2

if.entry2:                                        ; preds = %Map_String_ClassId____getitem__.exit
  %62 = tail call ptr @malloc(i32 16)
  store i64 11, ptr %62, align 4
  %memberidx.i81 = getelementptr inbounds %ObjectType, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i81, align 8
  br label %common.ret

ifend4:                                           ; preds = %else.i77, %ifend, %while.end.i69, %Map_String_ClassId____getitem__.exit
  %memberidx5 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 4
  %63 = load ptr, ptr %memberidx5, align 8
  %64 = tail call fastcc i64 @Map_String_EnumId__hash_fnc(ptr %1)
  %memberidx.i82 = getelementptr inbounds %Map_String_EnumId_, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i82, align 4
  %66 = urem i64 %64, %65
  %67 = load ptr, ptr %63, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %.not.i84138 = icmp eq ptr %69, null
  br i1 %.not.i84138, label %ifend8, label %while.body.i91

while.end.i87:                                    ; preds = %ifend.i.i92
  %.pre154.pre = load ptr, ptr %63, align 8
  %.phi.trans.insert155.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre154.pre, i64 %hash.0.i83139
  %.pre156.pre = load ptr, ptr %.phi.trans.insert155.phi.trans.insert, align 8
  %.not22.i86 = icmp eq ptr %.pre156.pre, null
  br i1 %.not22.i86, label %ifend8, label %Map_String_EnumId____getitem__.exit

while.body.i91:                                   ; preds = %ifend4, %else.i95
  %70 = phi ptr [ %80, %else.i95 ], [ %67, %ifend4 ]
  %71 = phi i64 [ %81, %else.i95 ], [ %65, %ifend4 ]
  %72 = phi ptr [ %85, %else.i95 ], [ %69, %ifend4 ]
  %hash.0.i83139 = phi i64 [ %83, %else.i95 ], [ %66, %ifend4 ]
  %73 = load ptr, ptr %72, align 8
  %memberidx.i.i88 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i.i88, align 4
  %75 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i90 = icmp eq i64 %74, %75
  br i1 %.not.i.i90, label %ifend.i.i92, label %else.i95

ifend.i.i92:                                      ; preds = %while.body.i91
  %76 = load ptr, ptr %73, align 8
  %77 = load ptr, ptr %1, align 8
  %78 = tail call i64 @memcmp(ptr %76, ptr %77, i64 %74)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %while.end.i87, label %ifend.i.i92.else.i95_crit_edge

ifend.i.i92.else.i95_crit_edge:                   ; preds = %ifend.i.i92
  %.pre152 = load i64, ptr %memberidx.i82, align 4
  %.pre153 = load ptr, ptr %63, align 8
  br label %else.i95

else.i95:                                         ; preds = %ifend.i.i92.else.i95_crit_edge, %while.body.i91
  %80 = phi ptr [ %.pre153, %ifend.i.i92.else.i95_crit_edge ], [ %70, %while.body.i91 ]
  %81 = phi i64 [ %.pre152, %ifend.i.i92.else.i95_crit_edge ], [ %71, %while.body.i91 ]
  %82 = add nuw i64 %hash.0.i83139, 1
  %83 = urem i64 %82, %81
  %84 = getelementptr inbounds ptr, ptr %80, i64 %83
  %85 = load ptr, ptr %84, align 8
  %.not.i84 = icmp eq ptr %85, null
  br i1 %.not.i84, label %ifend8, label %while.body.i91

Map_String_EnumId____getitem__.exit:              ; preds = %while.end.i87
  %memberidx10.i97 = getelementptr inbounds %MapEntry_String_EnumId_, ptr %.pre156.pre, i64 0, i32 1
  %86 = load ptr, ptr %memberidx10.i97, align 8
  %.not62 = icmp eq ptr %86, null
  br i1 %.not62, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %Map_String_EnumId____getitem__.exit
  %87 = tail call ptr @malloc(i32 16)
  store i64 12, ptr %87, align 4
  %memberidx.i99 = getelementptr inbounds %EnumType, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i99, align 8
  br label %common.ret

ifend8:                                           ; preds = %else.i95, %ifend4, %while.end.i87, %Map_String_EnumId____getitem__.exit
  %memberidx9 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %88 = load ptr, ptr %memberidx9, align 8
  %89 = icmp eq ptr %88, null
  br i1 %89, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %90 = load ptr, ptr %memberidx1.i, align 8
  %91 = load i64, ptr %90, align 4
  %92 = load i64, ptr @BUILTIN_MODULE_ID, align 8
  %93 = icmp sgt i64 %91, %92
  br i1 %93, label %if.entry17, label %ifend19

ifend12:                                          ; preds = %ifend8
  %94 = load ptr, ptr %0, align 8
  %95 = load ptr, ptr %94, align 8
  %96 = load i64, ptr %88, align 4
  %97 = load ptr, ptr %95, align 8
  %98 = getelementptr inbounds ptr, ptr %97, i64 %96
  %99 = load ptr, ptr %98, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %99, i64 0, i32 7
  %100 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %88, i64 0, i32 1
  %101 = load i64, ptr %memberidx3.i, align 4
  %102 = load ptr, ptr %100, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  br label %while.entry

if.entry17:                                       ; preds = %if.entry10
  %104 = load ptr, ptr %0, align 8
  %105 = load ptr, ptr %104, align 8
  %106 = load ptr, ptr %105, align 8
  %107 = getelementptr inbounds ptr, ptr %106, i64 %92
  %108 = load ptr, ptr %107, align 8
  %memberidx24 = getelementptr inbounds %Module, ptr %108, i64 0, i32 5
  %109 = load ptr, ptr %memberidx24, align 8
  store ptr %109, ptr %memberidx1.i, align 8
  %110 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %1)
  %111 = load i64, ptr %110, align 4
  switch i64 %111, label %else31 [
    i64 21, label %ifend28
    i64 11, label %if.entry30
  ]

ifend19:                                          ; preds = %if.entry10
  %112 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %112, align 4
  br label %common.ret

ifend28:                                          ; preds = %if.entry17, %if.entry30, %else31
  store ptr %90, ptr %memberidx1.i, align 8
  br label %common.ret

if.entry30:                                       ; preds = %if.entry17
  %memberidx33 = getelementptr inbounds %ObjectType, ptr %110, i64 0, i32 1
  %113 = load ptr, ptr %memberidx33, align 8
  %114 = load ptr, ptr %0, align 8
  %115 = load ptr, ptr %memberidx1.i, align 8
  %116 = load i64, ptr %115, align 4
  %117 = load ptr, ptr %114, align 8
  %118 = load ptr, ptr %117, align 8
  %119 = getelementptr inbounds ptr, ptr %118, i64 %116
  %120 = load ptr, ptr %119, align 8
  %memberidx1.i.i100 = getelementptr inbounds %Module, ptr %120, i64 0, i32 5
  %121 = load ptr, ptr %memberidx1.i.i100, align 8
  %122 = load i64, ptr %121, align 4
  %123 = getelementptr inbounds ptr, ptr %118, i64 %122
  %124 = load ptr, ptr %123, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %124, i64 0, i32 7
  %125 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %121, i64 0, i32 1
  %126 = load i64, ptr %memberidx3.i.i.i, align 4
  %127 = load ptr, ptr %125, align 8
  %128 = getelementptr inbounds ptr, ptr %127, i64 %126
  %129 = load ptr, ptr %128, align 8
  %memberidx.i101 = getelementptr inbounds %Scope, ptr %129, i64 0, i32 2
  %130 = load ptr, ptr %memberidx.i101, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %130, ptr %1, ptr %113)
  %memberidx1.i102 = getelementptr inbounds %Scope, ptr %129, i64 0, i32 1
  %131 = load ptr, ptr %memberidx1.i102, align 8
  %132 = tail call ptr @malloc(i32 24)
  %133 = load i64, ptr %113, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %113, i64 0, i32 2
  %134 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 3, ptr %132, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %132, i64 0, i32 1
  store i64 %133, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %132, i64 0, i32 2
  store i64 %134, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %131, ptr %1, ptr nonnull %132)
  br label %ifend28

else31:                                           ; preds = %if.entry17
  %memberidx34 = getelementptr inbounds %EnumType, ptr %110, i64 0, i32 1
  %135 = load ptr, ptr %memberidx34, align 8
  %136 = load ptr, ptr %0, align 8
  %137 = load ptr, ptr %memberidx1.i, align 8
  %138 = load i64, ptr %137, align 4
  %139 = load ptr, ptr %136, align 8
  %140 = load ptr, ptr %139, align 8
  %141 = getelementptr inbounds ptr, ptr %140, i64 %138
  %142 = load ptr, ptr %141, align 8
  %memberidx1.i.i104 = getelementptr inbounds %Module, ptr %142, i64 0, i32 5
  %143 = load ptr, ptr %memberidx1.i.i104, align 8
  %144 = load i64, ptr %143, align 4
  %145 = getelementptr inbounds ptr, ptr %140, i64 %144
  %146 = load ptr, ptr %145, align 8
  %memberidx2.i.i.i105 = getelementptr inbounds %Module, ptr %146, i64 0, i32 7
  %147 = load ptr, ptr %memberidx2.i.i.i105, align 8
  %memberidx3.i.i.i106 = getelementptr inbounds %ScopeId, ptr %143, i64 0, i32 1
  %148 = load i64, ptr %memberidx3.i.i.i106, align 4
  %149 = load ptr, ptr %147, align 8
  %150 = getelementptr inbounds ptr, ptr %149, i64 %148
  %151 = load ptr, ptr %150, align 8
  %memberidx.i107 = getelementptr inbounds %Scope, ptr %151, i64 0, i32 4
  %152 = load ptr, ptr %memberidx.i107, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %152, ptr %1, ptr %135)
  %memberidx1.i108 = getelementptr inbounds %Scope, ptr %151, i64 0, i32 1
  %153 = load ptr, ptr %memberidx1.i108, align 8
  %154 = tail call ptr @malloc(i32 24)
  %155 = load i64, ptr %135, align 4
  %memberidx1.i5.i109 = getelementptr inbounds %TypeId, ptr %135, i64 0, i32 2
  %156 = load i64, ptr %memberidx1.i5.i109, align 4
  store i64 4, ptr %154, align 4
  %memberidx1.i.i.i110 = getelementptr inbounds %VarId, ptr %154, i64 0, i32 1
  store i64 %155, ptr %memberidx1.i.i.i110, align 4
  %memberidx2.i.i6.i111 = getelementptr inbounds %VarId, ptr %154, i64 0, i32 2
  store i64 %156, ptr %memberidx2.i.i6.i111, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %153, ptr %1, ptr nonnull %154)
  br label %ifend28
}

define internal fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Var, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx.i13, align 8
  %7 = load i64, ptr %6, align 4
  %8 = load ptr, ptr %0, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %7
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 7
  %13 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = load ptr, ptr %memberidx.i13, align 8
  %20 = load i64, ptr %19, align 4
  %memberidx2 = getelementptr inbounds %Module, ptr %12, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Var_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx3, align 4
  store i64 1, ptr %18, align 4
  %memberidx1.i15 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i15, align 4
  %memberidx2.i = getelementptr inbounds %VarId, ptr %18, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i, align 4
  %memberidx4 = getelementptr inbounds %Var, ptr %5, i64 0, i32 1
  store ptr %18, ptr %memberidx4, align 8
  %23 = load ptr, ptr %memberidx2, align 8
  %memberidx.i14 = getelementptr inbounds %Array_Var_, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i14, align 4
  %25 = add i64 %24, 1
  %memberidx.i.i = getelementptr inbounds %Array_Var_, ptr %23, i64 0, i32 2
  %26 = load i64, ptr %memberidx.i.i, align 4
  %27 = icmp slt i64 %26, %25
  %.pre = load ptr, ptr %23, align 8
  br i1 %27, label %while.body.i.i, label %Array_Var____sl__.exit

while.body.i.i:                                   ; preds = %4, %while.body.i.i
  %28 = phi ptr [ %32, %while.body.i.i ], [ %.pre, %4 ]
  %29 = phi i64 [ %33, %while.body.i.i ], [ %26, %4 ]
  %30 = shl nuw i64 %29, 1
  store i64 %30, ptr %memberidx.i.i, align 4
  %31 = shl i64 %29, 4
  %32 = tail call ptr @realloc(ptr %28, i64 %31)
  store ptr %32, ptr %23, align 8
  %33 = load i64, ptr %memberidx.i.i, align 4
  %34 = icmp slt i64 %33, %25
  br i1 %34, label %while.body.i.i, label %Array_Var____sl__.exit.loopexit

Array_Var____sl__.exit.loopexit:                  ; preds = %while.body.i.i
  %.pre16 = load i64, ptr %memberidx.i14, align 4
  %.pre18 = add nsw i64 %.pre16, 1
  br label %Array_Var____sl__.exit

Array_Var____sl__.exit:                           ; preds = %4, %Array_Var____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre18, %Array_Var____sl__.exit.loopexit ], [ %25, %4 ]
  %35 = phi ptr [ %32, %Array_Var____sl__.exit.loopexit ], [ %.pre, %4 ]
  %36 = phi i64 [ %.pre16, %Array_Var____sl__.exit.loopexit ], [ %24, %4 ]
  store i64 %.pre-phi, ptr %memberidx.i14, align 4
  %37 = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %5, ptr %37, align 8
  %memberidx6 = getelementptr inbounds %Scope, ptr %17, i64 0, i32 1
  %38 = load ptr, ptr %memberidx6, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %38, ptr %1, ptr nonnull %18)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Const, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx.i13, align 8
  %7 = load i64, ptr %6, align 4
  %8 = load ptr, ptr %0, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %7
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 7
  %13 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = load ptr, ptr %memberidx.i13, align 8
  %20 = load i64, ptr %19, align 4
  %memberidx2 = getelementptr inbounds %Module, ptr %12, i64 0, i32 2
  %21 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Const_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx3, align 4
  store i64 2, ptr %18, align 4
  %memberidx1.i.i = getelementptr inbounds %VarId, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i15 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i15, align 4
  %memberidx4 = getelementptr inbounds %Const, ptr %5, i64 0, i32 1
  store ptr %18, ptr %memberidx4, align 8
  %23 = load ptr, ptr %memberidx2, align 8
  %memberidx.i14 = getelementptr inbounds %Array_Const_, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i14, align 4
  %25 = add i64 %24, 1
  %memberidx.i.i = getelementptr inbounds %Array_Const_, ptr %23, i64 0, i32 2
  %26 = load i64, ptr %memberidx.i.i, align 4
  %27 = icmp slt i64 %26, %25
  %.pre = load ptr, ptr %23, align 8
  br i1 %27, label %while.body.i.i, label %Array_Const____sl__.exit

while.body.i.i:                                   ; preds = %4, %while.body.i.i
  %28 = phi ptr [ %32, %while.body.i.i ], [ %.pre, %4 ]
  %29 = phi i64 [ %33, %while.body.i.i ], [ %26, %4 ]
  %30 = shl nuw i64 %29, 1
  store i64 %30, ptr %memberidx.i.i, align 4
  %31 = shl i64 %29, 4
  %32 = tail call ptr @realloc(ptr %28, i64 %31)
  store ptr %32, ptr %23, align 8
  %33 = load i64, ptr %memberidx.i.i, align 4
  %34 = icmp slt i64 %33, %25
  br i1 %34, label %while.body.i.i, label %Array_Const____sl__.exit.loopexit

Array_Const____sl__.exit.loopexit:                ; preds = %while.body.i.i
  %.pre16 = load i64, ptr %memberidx.i14, align 4
  %.pre18 = add nsw i64 %.pre16, 1
  br label %Array_Const____sl__.exit

Array_Const____sl__.exit:                         ; preds = %4, %Array_Const____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre18, %Array_Const____sl__.exit.loopexit ], [ %25, %4 ]
  %35 = phi ptr [ %32, %Array_Const____sl__.exit.loopexit ], [ %.pre, %4 ]
  %36 = phi i64 [ %.pre16, %Array_Const____sl__.exit.loopexit ], [ %24, %4 ]
  store i64 %.pre-phi, ptr %memberidx.i14, align 4
  %37 = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %5, ptr %37, align 8
  %memberidx6 = getelementptr inbounds %Scope, ptr %17, i64 0, i32 1
  %38 = load ptr, ptr %memberidx6, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %38, ptr %1, ptr nonnull %18)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i136, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i135, %if.entry.i136 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %6 = load i64, ptr %.tr11.i, align 4
  switch i64 %6, label %get_class_from_type.exit [
    i64 20, label %if.entry.i136
    i64 11, label %if.entry3.i
  ]

if.entry.i136:                                    ; preds = %tailrecurse.i
  %memberidx1.i135 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i137 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %7 = load ptr, ptr %memberidx6.i137, align 8
  %8 = load ptr, ptr %5, align 8
  %9 = load i64, ptr %7, align 4
  %10 = load ptr, ptr %8, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i138 = getelementptr inbounds %Module, ptr %12, i64 0, i32 3
  %13 = load ptr, ptr %memberidx2.i.i138, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %7, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i134 = phi ptr [ %17, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i134, i64 0, i32 6
  %18 = load ptr, ptr %memberidx3, align 8
  %19 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %19, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i, align 4
  %21 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %20)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %18, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i, align 4
  %23 = urem i64 %21, %22
  %24 = load ptr, ptr %18, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  %.not.i141 = icmp eq ptr %26, null
  br i1 %.not.i141, label %if.entry, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre146.pre = load ptr, ptr %18, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre146.pre, i64 %hash.0.i142
  %.pre147.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre147.pre, null
  br i1 %.not22.i, label %if.entry, label %Map_String_PropId____getitem__.exit

while.body.i:                                     ; preds = %get_class_from_type.exit, %else.i
  %27 = phi ptr [ %35, %else.i ], [ %24, %get_class_from_type.exit ]
  %28 = phi i64 [ %36, %else.i ], [ %22, %get_class_from_type.exit ]
  %29 = phi ptr [ %40, %else.i ], [ %26, %get_class_from_type.exit ]
  %hash.0.i142 = phi i64 [ %38, %else.i ], [ %23, %get_class_from_type.exit ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %31, 11
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i64 @memcmp(ptr %32, ptr %19, i64 11)
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre145 = load ptr, ptr %18, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %35 = phi ptr [ %.pre145, %ifend.i.i.else.i_crit_edge ], [ %27, %while.body.i ]
  %36 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.body.i ]
  %37 = add nuw i64 %hash.0.i142, 1
  %38 = urem i64 %37, %36
  %39 = getelementptr inbounds ptr, ptr %35, i64 %38
  %40 = load ptr, ptr %39, align 8
  %.not.i = icmp eq ptr %40, null
  br i1 %.not.i, label %if.entry, label %while.body.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre147.pre, i64 0, i32 1
  %41 = load ptr, ptr %memberidx10.i, align 8
  %42 = icmp eq ptr %41, null
  br i1 %42, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend19, %ifend11, %get_class_prop_type.exit, %ifend30, %TypeChecker_error.exit116, %TypeChecker_error.exit100, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit100 ], [ null, %TypeChecker_error.exit116 ], [ %206, %ifend30 ], [ null, %get_class_prop_type.exit ], [ null, %ifend11 ], [ null, %ifend19 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_String_PropId____getitem__.exit
  %memberidx4 = getelementptr inbounds %Class, ptr %common.ret.op.i134, i64 0, i32 1
  %43 = load ptr, ptr %memberidx4, align 8
  %memberidx.i72 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i72, align 4
  %45 = trunc i64 %44 to i32
  %46 = add i32 %45, 1
  %47 = tail call ptr @malloc(i32 %46)
  %48 = load ptr, ptr %43, align 8
  %49 = load i64, ptr %memberidx.i72, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %48, i64 %49, i1 false)
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  store i8 0, ptr %50, align 1
  %51 = alloca ptr, align 8
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %51, ptr nonnull @180, ptr %47)
  %53 = load ptr, ptr %51, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %52, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx2.i, align 4
  tail call void @free(ptr %47)
  %55 = load ptr, ptr %4, align 8
  %memberidx.i73 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %56 = load ptr, ptr %memberidx.i73, align 8
  %memberidx1.i74 = getelementptr inbounds %Compiler, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx1.i74, align 8
  %58 = call ptr @malloc(i32 24)
  store i64 4, ptr %58, align 4
  %memberidx1.i.i75 = getelementptr inbounds %FloError, ptr %58, i64 0, i32 2
  store ptr %55, ptr %memberidx1.i.i75, align 8
  %memberidx2.i.i76 = getelementptr inbounds %FloError, ptr %58, i64 0, i32 1
  store ptr %54, ptr %memberidx2.i.i76, align 8
  %memberidx.i.i77 = getelementptr inbounds %Array_FloError_, ptr %57, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i.i77, align 4
  %60 = add i64 %59, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %57, i64 0, i32 2
  %61 = load i64, ptr %memberidx.i.i.i, align 4
  %62 = icmp slt i64 %61, %60
  %.pre154 = load ptr, ptr %57, align 8
  br i1 %62, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %63 = phi ptr [ %67, %while.body.i.i.i ], [ %.pre154, %if.entry ]
  %64 = phi i64 [ %68, %while.body.i.i.i ], [ %61, %if.entry ]
  %65 = shl nuw i64 %64, 1
  store i64 %65, ptr %memberidx.i.i.i, align 4
  %66 = shl i64 %64, 4
  %67 = call ptr @realloc(ptr %63, i64 %66)
  store ptr %67, ptr %57, align 8
  %68 = load i64, ptr %memberidx.i.i.i, align 4
  %69 = icmp slt i64 %68, %60
  br i1 %69, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre155 = load i64, ptr %memberidx.i.i77, align 4
  %.pre159 = add nsw i64 %.pre155, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre159, %TypeChecker_error.exit.loopexit ], [ %60, %if.entry ]
  %70 = phi ptr [ %67, %TypeChecker_error.exit.loopexit ], [ %.pre154, %if.entry ]
  %71 = phi i64 [ %.pre155, %TypeChecker_error.exit.loopexit ], [ %59, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i77, align 4
  %72 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %58, ptr %72, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %73 = load ptr, ptr %0, align 8
  %memberidx.i.i78 = getelementptr inbounds %PropId, ptr %41, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i.i78, align 8
  %75 = load ptr, ptr %73, align 8
  %76 = load i64, ptr %74, align 4
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %79, i64 0, i32 3
  %80 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %74, i64 0, i32 2
  %81 = load i64, ptr %memberidx3.i.i.i, align 4
  %82 = load ptr, ptr %80, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %85 = load i64, ptr %41, align 4
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i80 = getelementptr inbounds %Class, ptr %84, i64 0, i32 5
  %87 = load ptr, ptr %memberidx1.i80, align 8
  %memberidx2.i81 = getelementptr inbounds %PropId, ptr %41, i64 0, i32 2
  %88 = load i64, ptr %memberidx2.i81, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %91, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %84, i64 0, i32 4
  %92 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %41, i64 0, i32 2
  %93 = load i64, ptr %memberidx5.i, align 4
  %94 = load ptr, ptr %92, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %96, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i79 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx7 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i79, i64 0, i32 1
  %97 = load ptr, ptr %memberidx7, align 8
  %98 = load ptr, ptr %97, align 8
  %99 = load ptr, ptr %98, align 8
  %100 = getelementptr inbounds ptr, ptr %98, i64 1
  %101 = load ptr, ptr %100, align 8
  %memberidx.i82 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %102 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i83 = getelementptr inbounds %Compiler, ptr %102, i64 0, i32 5
  %103 = load ptr, ptr %memberidx1.i83, align 8
  %memberidx2.i84 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 1
  %104 = load i64, ptr %memberidx2.i84, align 4
  %105 = icmp sgt i64 %104, 0
  br i1 %105, label %common.ret, label %ifend11

ifend11:                                          ; preds = %get_class_prop_type.exit
  %memberidx12 = getelementptr inbounds %ExpressionIndexNode, ptr %4, i64 0, i32 4
  %106 = load ptr, ptr %memberidx12, align 8
  %107 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %99, ptr %106)
  %108 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i86 = getelementptr inbounds %Compiler, ptr %108, i64 0, i32 5
  %109 = load ptr, ptr %memberidx1.i86, align 8
  %memberidx2.i87 = getelementptr inbounds %Array_FloError_, ptr %109, i64 0, i32 1
  %110 = load i64, ptr %memberidx2.i87, align 4
  %111 = icmp sgt i64 %110, 0
  br i1 %111, label %common.ret, label %ifend15

ifend15:                                          ; preds = %ifend11
  %memberidx16 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 3
  %112 = load ptr, ptr %memberidx16, align 8
  %113 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %99, ptr %112)
  br i1 %113, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend15
  %114 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %99)
  %memberidx.i88 = getelementptr inbounds %String, ptr %114, i64 0, i32 1
  %115 = load i64, ptr %memberidx.i88, align 4
  %116 = trunc i64 %115 to i32
  %117 = add i32 %116, 1
  %118 = tail call ptr @malloc(i32 %117)
  %119 = load ptr, ptr %114, align 8
  %120 = load i64, ptr %memberidx.i88, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %118, ptr align 8 %119, i64 %120, i1 false)
  %121 = getelementptr inbounds i8, ptr %118, i64 %120
  store i8 0, ptr %121, align 1
  %122 = load ptr, ptr %memberidx16, align 8
  %123 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %122)
  %memberidx.i89 = getelementptr inbounds %String, ptr %123, i64 0, i32 1
  %124 = load i64, ptr %memberidx.i89, align 4
  %125 = trunc i64 %124 to i32
  %126 = add i32 %125, 1
  %127 = tail call ptr @malloc(i32 %126)
  %128 = load ptr, ptr %123, align 8
  %129 = load i64, ptr %memberidx.i89, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %127, ptr align 8 %128, i64 %129, i1 false)
  %130 = getelementptr inbounds i8, ptr %127, i64 %129
  store i8 0, ptr %130, align 1
  %131 = alloca ptr, align 8
  %132 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %131, ptr nonnull @177, ptr %118, ptr %127)
  %133 = load ptr, ptr %131, align 8
  %134 = tail call ptr @malloc(i32 24)
  store ptr %133, ptr %134, align 8
  %memberidx1.i90 = getelementptr inbounds %String, ptr %134, i64 0, i32 1
  store i64 %132, ptr %memberidx1.i90, align 4
  %memberidx2.i91 = getelementptr inbounds %String, ptr %134, i64 0, i32 2
  store i64 %132, ptr %memberidx2.i91, align 4
  tail call void @free(ptr %118)
  tail call void @free(ptr %127)
  %135 = load ptr, ptr %memberidx12, align 8
  %136 = load ptr, ptr %135, align 8
  %137 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i93 = getelementptr inbounds %Compiler, ptr %137, i64 0, i32 5
  %138 = load ptr, ptr %memberidx1.i93, align 8
  %139 = call ptr @malloc(i32 24)
  store i64 5, ptr %139, align 4
  %memberidx1.i.i94 = getelementptr inbounds %FloError, ptr %139, i64 0, i32 2
  store ptr %136, ptr %memberidx1.i.i94, align 8
  %memberidx2.i.i95 = getelementptr inbounds %FloError, ptr %139, i64 0, i32 1
  store ptr %134, ptr %memberidx2.i.i95, align 8
  %memberidx.i.i96 = getelementptr inbounds %Array_FloError_, ptr %138, i64 0, i32 1
  %140 = load i64, ptr %memberidx.i.i96, align 4
  %141 = add i64 %140, 1
  %memberidx.i.i.i97 = getelementptr inbounds %Array_FloError_, ptr %138, i64 0, i32 2
  %142 = load i64, ptr %memberidx.i.i.i97, align 4
  %143 = icmp slt i64 %142, %141
  %.pre148 = load ptr, ptr %138, align 8
  br i1 %143, label %while.body.i.i.i99, label %TypeChecker_error.exit100

while.body.i.i.i99:                               ; preds = %if.entry17, %while.body.i.i.i99
  %144 = phi ptr [ %148, %while.body.i.i.i99 ], [ %.pre148, %if.entry17 ]
  %145 = phi i64 [ %149, %while.body.i.i.i99 ], [ %142, %if.entry17 ]
  %146 = shl nuw i64 %145, 1
  store i64 %146, ptr %memberidx.i.i.i97, align 4
  %147 = shl i64 %145, 4
  %148 = call ptr @realloc(ptr %144, i64 %147)
  store ptr %148, ptr %138, align 8
  %149 = load i64, ptr %memberidx.i.i.i97, align 4
  %150 = icmp slt i64 %149, %141
  br i1 %150, label %while.body.i.i.i99, label %TypeChecker_error.exit100.loopexit

TypeChecker_error.exit100.loopexit:               ; preds = %while.body.i.i.i99
  %.pre149 = load i64, ptr %memberidx.i.i96, align 4
  %.pre162 = add nsw i64 %.pre149, 1
  br label %TypeChecker_error.exit100

TypeChecker_error.exit100:                        ; preds = %if.entry17, %TypeChecker_error.exit100.loopexit
  %.pre-phi163 = phi i64 [ %.pre162, %TypeChecker_error.exit100.loopexit ], [ %141, %if.entry17 ]
  %151 = phi ptr [ %148, %TypeChecker_error.exit100.loopexit ], [ %.pre148, %if.entry17 ]
  %152 = phi i64 [ %.pre149, %TypeChecker_error.exit100.loopexit ], [ %140, %if.entry17 ]
  store i64 %.pre-phi163, ptr %memberidx.i.i96, align 4
  %153 = getelementptr inbounds ptr, ptr %151, i64 %152
  store ptr %139, ptr %153, align 8
  br label %common.ret

ifend19:                                          ; preds = %ifend15
  %memberidx23 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %154 = load ptr, ptr %memberidx23, align 8
  %155 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %101, ptr %154)
  %156 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i102 = getelementptr inbounds %Compiler, ptr %156, i64 0, i32 5
  %157 = load ptr, ptr %memberidx1.i102, align 8
  %memberidx2.i103 = getelementptr inbounds %Array_FloError_, ptr %157, i64 0, i32 1
  %158 = load i64, ptr %memberidx2.i103, align 4
  %159 = icmp sgt i64 %158, 0
  br i1 %159, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend19
  %160 = load ptr, ptr %memberidx16, align 8
  %161 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %99, ptr %160)
  br i1 %161, label %ifend30, label %if.entry28

if.entry28:                                       ; preds = %ifend26
  %162 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %101)
  %memberidx.i104 = getelementptr inbounds %String, ptr %162, i64 0, i32 1
  %163 = load i64, ptr %memberidx.i104, align 4
  %164 = trunc i64 %163 to i32
  %165 = add i32 %164, 1
  %166 = tail call ptr @malloc(i32 %165)
  %167 = load ptr, ptr %162, align 8
  %168 = load i64, ptr %memberidx.i104, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %166, ptr align 8 %167, i64 %168, i1 false)
  %169 = getelementptr inbounds i8, ptr %166, i64 %168
  store i8 0, ptr %169, align 1
  %memberidx31 = getelementptr inbounds %Expression, ptr %155, i64 0, i32 3
  %170 = load ptr, ptr %memberidx31, align 8
  %171 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %170)
  %memberidx.i105 = getelementptr inbounds %String, ptr %171, i64 0, i32 1
  %172 = load i64, ptr %memberidx.i105, align 4
  %173 = trunc i64 %172 to i32
  %174 = add i32 %173, 1
  %175 = tail call ptr @malloc(i32 %174)
  %176 = load ptr, ptr %171, align 8
  %177 = load i64, ptr %memberidx.i105, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %175, ptr align 8 %176, i64 %177, i1 false)
  %178 = getelementptr inbounds i8, ptr %175, i64 %177
  store i8 0, ptr %178, align 1
  %179 = alloca ptr, align 8
  %180 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %179, ptr nonnull @177, ptr %166, ptr %175)
  %181 = load ptr, ptr %179, align 8
  %182 = tail call ptr @malloc(i32 24)
  store ptr %181, ptr %182, align 8
  %memberidx1.i106 = getelementptr inbounds %String, ptr %182, i64 0, i32 1
  store i64 %180, ptr %memberidx1.i106, align 4
  %memberidx2.i107 = getelementptr inbounds %String, ptr %182, i64 0, i32 2
  store i64 %180, ptr %memberidx2.i107, align 4
  tail call void @free(ptr %166)
  tail call void @free(ptr %175)
  %183 = load ptr, ptr %memberidx23, align 8
  %184 = load ptr, ptr %183, align 8
  %185 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i109 = getelementptr inbounds %Compiler, ptr %185, i64 0, i32 5
  %186 = load ptr, ptr %memberidx1.i109, align 8
  %187 = call ptr @malloc(i32 24)
  store i64 5, ptr %187, align 4
  %memberidx1.i.i110 = getelementptr inbounds %FloError, ptr %187, i64 0, i32 2
  store ptr %184, ptr %memberidx1.i.i110, align 8
  %memberidx2.i.i111 = getelementptr inbounds %FloError, ptr %187, i64 0, i32 1
  store ptr %182, ptr %memberidx2.i.i111, align 8
  %memberidx.i.i112 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 1
  %188 = load i64, ptr %memberidx.i.i112, align 4
  %189 = add i64 %188, 1
  %memberidx.i.i.i113 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 2
  %190 = load i64, ptr %memberidx.i.i.i113, align 4
  %191 = icmp slt i64 %190, %189
  %.pre151 = load ptr, ptr %186, align 8
  br i1 %191, label %while.body.i.i.i115, label %TypeChecker_error.exit116

while.body.i.i.i115:                              ; preds = %if.entry28, %while.body.i.i.i115
  %192 = phi ptr [ %196, %while.body.i.i.i115 ], [ %.pre151, %if.entry28 ]
  %193 = phi i64 [ %197, %while.body.i.i.i115 ], [ %190, %if.entry28 ]
  %194 = shl nuw i64 %193, 1
  store i64 %194, ptr %memberidx.i.i.i113, align 4
  %195 = shl i64 %193, 4
  %196 = call ptr @realloc(ptr %192, i64 %195)
  store ptr %196, ptr %186, align 8
  %197 = load i64, ptr %memberidx.i.i.i113, align 4
  %198 = icmp slt i64 %197, %189
  br i1 %198, label %while.body.i.i.i115, label %TypeChecker_error.exit116.loopexit

TypeChecker_error.exit116.loopexit:               ; preds = %while.body.i.i.i115
  %.pre152 = load i64, ptr %memberidx.i.i112, align 4
  %.pre160 = add nsw i64 %.pre152, 1
  br label %TypeChecker_error.exit116

TypeChecker_error.exit116:                        ; preds = %if.entry28, %TypeChecker_error.exit116.loopexit
  %.pre-phi161 = phi i64 [ %.pre160, %TypeChecker_error.exit116.loopexit ], [ %189, %if.entry28 ]
  %199 = phi ptr [ %196, %TypeChecker_error.exit116.loopexit ], [ %.pre151, %if.entry28 ]
  %200 = phi i64 [ %.pre152, %TypeChecker_error.exit116.loopexit ], [ %188, %if.entry28 ]
  store i64 %.pre-phi161, ptr %memberidx.i.i112, align 4
  %201 = getelementptr inbounds ptr, ptr %199, i64 %200
  store ptr %187, ptr %201, align 8
  br label %common.ret

ifend30:                                          ; preds = %ifend26
  %202 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %202, align 4
  %memberidx.i.i117 = getelementptr inbounds %Expression, ptr %202, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i117, align 4
  %memberidx1.i.i118 = getelementptr inbounds %Expression, ptr %202, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i118, align 1
  %memberidx.i119 = getelementptr inbounds %MemberExpression, ptr %202, i64 0, i32 4
  store ptr %1, ptr %memberidx.i119, align 8
  %memberidx1.i120 = getelementptr inbounds %MemberExpression, ptr %202, i64 0, i32 5
  store ptr %41, ptr %memberidx1.i120, align 8
  %memberidx2.i121 = getelementptr inbounds %Expression, ptr %202, i64 0, i32 3
  store ptr %common.ret.op.i79, ptr %memberidx2.i121, align 8
  %203 = tail call ptr @malloc(i32 24)
  %memberidx.i122 = getelementptr inbounds %Array_Expression_, ptr %203, i64 0, i32 1
  store i64 0, ptr %memberidx.i122, align 4
  %memberidx1.i123 = getelementptr inbounds %Array_Expression_, ptr %203, i64 0, i32 2
  store i64 16, ptr %memberidx1.i123, align 4
  %204 = tail call ptr @malloc(i32 128)
  store ptr %204, ptr %203, align 8
  store ptr %107, ptr %204, align 8
  %205 = getelementptr inbounds ptr, ptr %204, i64 1
  store ptr %155, ptr %205, align 8
  store i64 2, ptr %memberidx.i122, align 4
  %206 = tail call ptr @malloc(i32 41)
  %memberidx36 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i79, i64 0, i32 2
  %207 = load ptr, ptr %memberidx36, align 8
  store i64 8, ptr %206, align 4
  %memberidx.i.i124 = getelementptr inbounds %Expression, ptr %206, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i124, align 4
  %memberidx1.i.i125 = getelementptr inbounds %Expression, ptr %206, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i125, align 1
  %memberidx.i126 = getelementptr inbounds %CallExpression, ptr %206, i64 0, i32 4
  store ptr %202, ptr %memberidx.i126, align 8
  %memberidx1.i127 = getelementptr inbounds %CallExpression, ptr %206, i64 0, i32 5
  store ptr %203, ptr %memberidx1.i127, align 8
  %memberidx2.i128 = getelementptr inbounds %Expression, ptr %206, i64 0, i32 3
  store ptr %207, ptr %memberidx2.i128, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %left = alloca ptr, align 8
  %right = alloca ptr, align 8
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = add i64 %4, -19
  %6 = icmp ult i64 %5, 12
  %7 = icmp eq i64 %4, 19
  %memberidx1 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ExpressionNode, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2, align 4
  %10 = icmp eq i64 %9, 14
  %11 = and i1 %7, %10
  br i1 %11, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %12 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %12, align 4
  %13 = load ptr, ptr %memberidx1, align 8
  %memberidx4 = getelementptr inbounds %ExpressionIndexNode, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx4, align 8
  %15 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %12, ptr %14)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %16 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %16, i64 0, i32 5
  %17 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx2.i, align 4
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %common.ret, label %ifend7

ifend:                                            ; preds = %is_object.exit.ifend_crit_edge, %3
  %20 = phi ptr [ %.pre, %is_object.exit.ifend_crit_edge ], [ %8, %3 ]
  %21 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %20)
  store ptr %21, ptr %left, align 8
  %memberidx.i160 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %22 = load ptr, ptr %memberidx.i160, align 8
  %memberidx1.i161 = getelementptr inbounds %Compiler, ptr %22, i64 0, i32 5
  %23 = load ptr, ptr %memberidx1.i161, align 8
  %memberidx2.i162 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx2.i162, align 4
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %common.ret, label %ifend15

common.ret:                                       ; preds = %ifend19, %ifend, %if.entry, %TypeChecker_error.exit, %if.entry102, %ifend98, %if.entry87, %ifend80, %ifend69, %ifend61, %if.entry32, %if.entry26, %if.entry17, %if.entry9
  %common.ret.op = phi ptr [ %33, %if.entry9 ], [ %45, %if.entry17 ], [ %61, %if.entry26 ], [ %62, %if.entry32 ], [ %99, %ifend61 ], [ %107, %ifend69 ], [ %120, %ifend80 ], [ %124, %if.entry87 ], [ %135, %ifend98 ], [ %136, %if.entry102 ], [ null, %TypeChecker_error.exit ], [ null, %if.entry ], [ null, %ifend ], [ null, %ifend19 ]
  ret ptr %common.ret.op

ifend7:                                           ; preds = %if.entry
  %memberidx8 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  %26 = load ptr, ptr %memberidx8, align 8
  %27 = load i64, ptr %26, align 4
  %28 = icmp eq i64 %27, 20
  br i1 %28, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend7, %if.entry.i
  %.tr5.i = phi ptr [ %29, %if.entry.i ], [ %26, %ifend7 ]
  %memberidx1.i242 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %29 = load ptr, ptr %memberidx1.i242, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 20
  br i1 %31, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend7
  %.lcssa.i = phi i64 [ %27, %ifend7 ], [ %30, %if.entry.i ]
  %32 = icmp eq i64 %.lcssa.i, 11
  br i1 %32, label %if.entry9, label %is_object.exit.ifend_crit_edge

is_object.exit.ifend_crit_edge:                   ; preds = %is_object.exit
  %.pre = load ptr, ptr %memberidx1, align 8
  br label %ifend

if.entry9:                                        ; preds = %is_object.exit
  %33 = tail call fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %15, ptr %2)
  br label %common.ret

ifend15:                                          ; preds = %ifend
  %memberidx16 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  %34 = load ptr, ptr %memberidx16, align 8
  %35 = load i64, ptr %34, align 4
  %36 = icmp eq i64 %35, 20
  br i1 %36, label %if.entry.i245, label %is_object.exit247

if.entry.i245:                                    ; preds = %ifend15, %if.entry.i245
  %.tr5.i243 = phi ptr [ %37, %if.entry.i245 ], [ %34, %ifend15 ]
  %memberidx1.i244 = getelementptr inbounds %GenericType, ptr %.tr5.i243, i64 0, i32 3
  %37 = load ptr, ptr %memberidx1.i244, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 20
  br i1 %39, label %if.entry.i245, label %is_object.exit247

is_object.exit247:                                ; preds = %if.entry.i245, %ifend15
  %.lcssa.i246 = phi i64 [ %35, %ifend15 ], [ %38, %if.entry.i245 ]
  %40 = icmp eq i64 %.lcssa.i246, 11
  %41 = xor i1 %6, true
  %42 = and i1 %40, %41
  %43 = icmp ne i64 %4, 18
  %44 = and i1 %43, %42
  br i1 %44, label %if.entry17, label %ifend19

if.entry17:                                       ; preds = %is_object.exit247
  %45 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %21, ptr %2, ptr null)
  br label %common.ret

ifend19:                                          ; preds = %is_object.exit247
  %memberidx21 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %46 = load ptr, ptr %memberidx21, align 8
  %47 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %34, ptr %46)
  store ptr %47, ptr %right, align 8
  %48 = load ptr, ptr %memberidx.i160, align 8
  %memberidx1.i164 = getelementptr inbounds %Compiler, ptr %48, i64 0, i32 5
  %49 = load ptr, ptr %memberidx1.i164, align 8
  %memberidx2.i165 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %50 = load i64, ptr %memberidx2.i165, align 4
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend19
  %memberidx25 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 3
  %52 = load ptr, ptr %memberidx25, align 8
  %53 = load i64, ptr %52, align 4
  %54 = icmp eq i64 %53, 20
  br i1 %54, label %if.entry.i250, label %is_object.exit252

if.entry.i250:                                    ; preds = %ifend24, %if.entry.i250
  %.tr5.i248 = phi ptr [ %55, %if.entry.i250 ], [ %52, %ifend24 ]
  %memberidx1.i249 = getelementptr inbounds %GenericType, ptr %.tr5.i248, i64 0, i32 3
  %55 = load ptr, ptr %memberidx1.i249, align 8
  %56 = load i64, ptr %55, align 4
  %57 = icmp eq i64 %56, 20
  br i1 %57, label %if.entry.i250, label %is_object.exit252

is_object.exit252:                                ; preds = %if.entry.i250, %ifend24
  %.lcssa.i251 = phi i64 [ %53, %ifend24 ], [ %56, %if.entry.i250 ]
  %58 = icmp eq i64 %.lcssa.i251, 11
  %59 = icmp eq i64 %4, 18
  %60 = and i1 %59, %58
  br i1 %60, label %if.entry26, label %ifend31

if.entry26:                                       ; preds = %is_object.exit252
  %61 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %47, ptr %2, ptr %21)
  br label %common.ret

ifend31:                                          ; preds = %is_object.exit252
  br i1 %6, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend31
  %62 = tail call fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr %21, ptr %47, ptr %2)
  br label %common.ret

ifend34:                                          ; preds = %ifend31
  %memberidx35 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %63 = load i1, ptr %memberidx35, align 1
  %memberidx36 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 1
  %64 = load i1, ptr %memberidx36, align 1
  %65 = and i1 %63, %64
  %66 = load ptr, ptr %memberidx16, align 8
  %67 = load i64, ptr %66, align 4
  %68 = icmp eq i64 %67, 21
  %69 = icmp ne i64 %53, 21
  %70 = and i1 %69, %68
  br i1 %70, label %if.entry41, label %ifend43

if.entry41:                                       ; preds = %ifend34
  store ptr %52, ptr %memberidx16, align 8
  %.pre257 = load i64, ptr %52, align 4
  %.pre258 = load ptr, ptr %memberidx25, align 8
  %.pre259 = load i64, ptr %.pre258, align 4
  br label %ifend43

ifend43:                                          ; preds = %ifend34, %if.entry41
  %71 = phi i64 [ %53, %ifend34 ], [ %.pre259, %if.entry41 ]
  %72 = phi i64 [ %67, %ifend34 ], [ %.pre257, %if.entry41 ]
  %73 = add i64 %72, -1
  %74 = icmp ult i64 %73, 9
  %75 = add i64 %71, -1
  %76 = icmp ult i64 %75, 9
  %77 = and i1 %74, %76
  br i1 %77, label %if.entry48, label %else49

if.entry48:                                       ; preds = %ifend43
  %78 = icmp eq i64 %4, 6
  br i1 %78, label %if.entry51, label %ifend53

else49:                                           ; preds = %ifend43
  %79 = or i64 %71, %72
  %80 = icmp eq i64 %79, 0
  %81 = add i64 %4, -15
  %82 = icmp ult i64 %81, 2
  %or.cond = select i1 %80, i1 %82, i1 false
  br i1 %or.cond, label %if.entry87, label %ifend50.thread

ifend50:                                          ; preds = %ifend65
  %83 = add i64 %4, -7
  %84 = icmp ult i64 %83, 6
  br i1 %84, label %if.entry96, label %ifend104

ifend50.thread:                                   ; preds = %else49
  %85 = add i64 %4, -7
  %86 = icmp ult i64 %85, 6
  br i1 %86, label %ifend98, label %ifend93

if.entry51:                                       ; preds = %if.entry48
  %87 = icmp ult i64 %73, 7
  br i1 %87, label %if.entry55, label %ifend57

ifend53:                                          ; preds = %if.entry48
  %88 = add i64 %4, -1
  %89 = icmp ult i64 %88, 10
  br i1 %89, label %if.entry63, label %ifend65

if.entry55:                                       ; preds = %if.entry51
  %90 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %90, align 4
  %91 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %91, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %91, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %91, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %91, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %91, i64 0, i32 3
  store ptr %90, ptr %memberidx1.i.i, align 8
  %92 = load i1, ptr %memberidx35, align 1
  store i1 %92, ptr %memberidx1.i.i.i, align 1
  store ptr %91, ptr %left, align 8
  %.pre267 = load ptr, ptr %memberidx25, align 8
  %.pre268 = load i64, ptr %.pre267, align 4
  %.pre269 = add i64 %.pre268, -1
  br label %ifend57

ifend57:                                          ; preds = %if.entry51, %if.entry55
  %.pre-phi = phi i64 [ %75, %if.entry51 ], [ %.pre269, %if.entry55 ]
  %93 = phi ptr [ %21, %if.entry51 ], [ %91, %if.entry55 ]
  %94 = icmp ult i64 %.pre-phi, 7
  br i1 %94, label %if.entry59, label %ifend61

if.entry59:                                       ; preds = %ifend57
  %95 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %95, align 4
  %96 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %96, align 4
  %memberidx.i.i.i169 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i169, align 4
  %memberidx1.i.i.i170 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 1
  %memberidx.i.i171 = getelementptr inbounds %TypeCastExpression, ptr %96, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i171, align 8
  %memberidx1.i.i172 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 3
  store ptr %95, ptr %memberidx1.i.i172, align 8
  %97 = load i1, ptr %memberidx36, align 1
  store i1 %97, ptr %memberidx1.i.i.i170, align 1
  store ptr %96, ptr %right, align 8
  br label %ifend61

ifend61:                                          ; preds = %ifend57, %if.entry59
  %98 = phi ptr [ %47, %ifend57 ], [ %96, %if.entry59 ]
  %99 = tail call ptr @malloc(i32 49)
  %memberidx62 = getelementptr inbounds %Expression, ptr %93, i64 0, i32 3
  %100 = load ptr, ptr %memberidx62, align 8
  store i64 8, ptr %99, align 4
  %memberidx.i.i175 = getelementptr inbounds %Expression, ptr %99, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i175, align 4
  %memberidx1.i.i176 = getelementptr inbounds %Expression, ptr %99, i64 0, i32 1
  %memberidx.i177 = getelementptr inbounds %BinaryExpression, ptr %99, i64 0, i32 4
  store ptr %93, ptr %memberidx.i177, align 8
  %memberidx1.i178 = getelementptr inbounds %BinaryExpression, ptr %99, i64 0, i32 5
  store i64 6, ptr %memberidx1.i178, align 4
  %memberidx2.i179 = getelementptr inbounds %BinaryExpression, ptr %99, i64 0, i32 6
  store ptr %98, ptr %memberidx2.i179, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %99, i64 0, i32 3
  store ptr %100, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i176, align 1
  br label %common.ret

if.entry63:                                       ; preds = %ifend53
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %101 = load ptr, ptr %left, align 8
  %memberidx66 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 3
  %102 = load ptr, ptr %memberidx66, align 8
  %103 = icmp ugt i64 %4, 6
  br i1 %103, label %if.entry67, label %ifend69

ifend65:                                          ; preds = %ifend53
  %104 = add i64 %4, -13
  %105 = icmp ult i64 %104, 5
  br i1 %105, label %if.entry70, label %ifend50

if.entry67:                                       ; preds = %if.entry63
  %106 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %106, align 4
  br label %ifend69

ifend69:                                          ; preds = %if.entry63, %if.entry67
  %exp_type.0 = phi ptr [ %106, %if.entry67 ], [ %102, %if.entry63 ]
  %107 = tail call ptr @malloc(i32 49)
  %108 = load ptr, ptr %right, align 8
  store i64 8, ptr %107, align 4
  %memberidx.i.i180 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i180, align 4
  %memberidx1.i.i181 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 1
  %memberidx.i182 = getelementptr inbounds %BinaryExpression, ptr %107, i64 0, i32 4
  store ptr %101, ptr %memberidx.i182, align 8
  %memberidx1.i183 = getelementptr inbounds %BinaryExpression, ptr %107, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i183, align 4
  %memberidx2.i184 = getelementptr inbounds %BinaryExpression, ptr %107, i64 0, i32 6
  store ptr %108, ptr %memberidx2.i184, align 8
  %memberidx3.i185 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 3
  store ptr %exp_type.0, ptr %memberidx3.i185, align 8
  store i1 %65, ptr %memberidx1.i.i181, align 1
  br label %common.ret

if.entry70:                                       ; preds = %ifend65
  %109 = and i64 %72, -2
  %110 = icmp eq i64 %109, 8
  br i1 %110, label %if.entry74, label %ifend76

if.entry74:                                       ; preds = %if.entry70
  %111 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %111, align 4
  %memberidx.i187 = getelementptr inbounds %IntType, ptr %111, i64 0, i32 1
  store i1 true, ptr %memberidx.i187, align 1
  %112 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %112, align 4
  %memberidx.i.i.i188 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i188, align 4
  %memberidx1.i.i.i189 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 1
  %memberidx.i.i190 = getelementptr inbounds %TypeCastExpression, ptr %112, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i190, align 8
  %memberidx1.i.i191 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 3
  store ptr %111, ptr %memberidx1.i.i191, align 8
  %113 = load i1, ptr %memberidx35, align 1
  store i1 %113, ptr %memberidx1.i.i.i189, align 1
  store ptr %112, ptr %left, align 8
  %.pre265 = load ptr, ptr %memberidx25, align 8
  %.pre266 = load i64, ptr %.pre265, align 4
  br label %ifend76

ifend76:                                          ; preds = %if.entry70, %if.entry74
  %114 = phi i64 [ %71, %if.entry70 ], [ %.pre266, %if.entry74 ]
  %115 = and i64 %114, -2
  %116 = icmp eq i64 %115, 8
  br i1 %116, label %if.entry78, label %ifend80

if.entry78:                                       ; preds = %ifend76
  %117 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %117, align 4
  %memberidx.i194 = getelementptr inbounds %IntType, ptr %117, i64 0, i32 1
  store i1 true, ptr %memberidx.i194, align 1
  %118 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %118, align 4
  %memberidx.i.i.i195 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i195, align 4
  %memberidx1.i.i.i196 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 1
  %memberidx.i.i197 = getelementptr inbounds %TypeCastExpression, ptr %118, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i197, align 8
  %memberidx1.i.i198 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 3
  store ptr %117, ptr %memberidx1.i.i198, align 8
  %119 = load i1, ptr %memberidx36, align 1
  store i1 %119, ptr %memberidx1.i.i.i196, align 1
  store ptr %118, ptr %right, align 8
  br label %ifend80

ifend80:                                          ; preds = %ifend76, %if.entry78
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %120 = tail call ptr @malloc(i32 49)
  %121 = load ptr, ptr %left, align 8
  %122 = load ptr, ptr %right, align 8
  %memberidx81 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 3
  %123 = load ptr, ptr %memberidx81, align 8
  store i64 8, ptr %120, align 4
  %memberidx.i.i201 = getelementptr inbounds %Expression, ptr %120, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i201, align 4
  %memberidx1.i.i202 = getelementptr inbounds %Expression, ptr %120, i64 0, i32 1
  %memberidx.i203 = getelementptr inbounds %BinaryExpression, ptr %120, i64 0, i32 4
  store ptr %121, ptr %memberidx.i203, align 8
  %memberidx1.i204 = getelementptr inbounds %BinaryExpression, ptr %120, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i204, align 4
  %memberidx2.i205 = getelementptr inbounds %BinaryExpression, ptr %120, i64 0, i32 6
  store ptr %122, ptr %memberidx2.i205, align 8
  %memberidx3.i206 = getelementptr inbounds %Expression, ptr %120, i64 0, i32 3
  store ptr %123, ptr %memberidx3.i206, align 8
  store i1 %65, ptr %memberidx1.i.i202, align 1
  br label %common.ret

if.entry87:                                       ; preds = %else49
  %124 = tail call ptr @malloc(i32 49)
  %125 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %124, align 4
  %memberidx.i.i208 = getelementptr inbounds %Expression, ptr %124, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i208, align 4
  %memberidx1.i.i209 = getelementptr inbounds %Expression, ptr %124, i64 0, i32 1
  %memberidx.i210 = getelementptr inbounds %BinaryExpression, ptr %124, i64 0, i32 4
  store ptr %21, ptr %memberidx.i210, align 8
  %memberidx1.i211 = getelementptr inbounds %BinaryExpression, ptr %124, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i211, align 4
  %memberidx2.i212 = getelementptr inbounds %BinaryExpression, ptr %124, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i212, align 8
  %memberidx3.i213 = getelementptr inbounds %Expression, ptr %124, i64 0, i32 3
  store ptr %125, ptr %memberidx3.i213, align 8
  store i1 %65, ptr %memberidx1.i.i209, align 1
  br label %common.ret

ifend93:                                          ; preds = %ifend50.thread
  %126 = add i64 %4, -1
  %127 = icmp ult i64 %126, 2
  %128 = icmp eq i64 %72, 13
  %129 = and i1 %127, %128
  %130 = icmp eq i64 %71, 6
  %131 = and i1 %129, %130
  br i1 %131, label %if.entry102, label %ifend104

if.entry96:                                       ; preds = %ifend50
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %.pre263 = load ptr, ptr %left, align 8
  %.pre264 = load ptr, ptr %right, align 8
  br label %ifend98

ifend98:                                          ; preds = %ifend50.thread, %if.entry96
  %132 = phi ptr [ %47, %ifend50.thread ], [ %.pre264, %if.entry96 ]
  %133 = phi ptr [ %21, %ifend50.thread ], [ %.pre263, %if.entry96 ]
  %134 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %134, align 4
  %135 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %135, align 4
  %memberidx.i.i215 = getelementptr inbounds %Expression, ptr %135, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i215, align 4
  %memberidx1.i.i216 = getelementptr inbounds %Expression, ptr %135, i64 0, i32 1
  %memberidx.i217 = getelementptr inbounds %BinaryExpression, ptr %135, i64 0, i32 4
  store ptr %133, ptr %memberidx.i217, align 8
  %memberidx1.i218 = getelementptr inbounds %BinaryExpression, ptr %135, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i218, align 4
  %memberidx2.i219 = getelementptr inbounds %BinaryExpression, ptr %135, i64 0, i32 6
  store ptr %132, ptr %memberidx2.i219, align 8
  %memberidx3.i220 = getelementptr inbounds %Expression, ptr %135, i64 0, i32 3
  store ptr %134, ptr %memberidx3.i220, align 8
  store i1 %65, ptr %memberidx1.i.i216, align 1
  br label %common.ret

if.entry102:                                      ; preds = %ifend93
  %136 = tail call ptr @malloc(i32 49)
  %137 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %136, align 4
  %memberidx.i.i222 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i222, align 4
  %memberidx1.i.i223 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 1
  %memberidx.i224 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 4
  store ptr %21, ptr %memberidx.i224, align 8
  %memberidx1.i225 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i225, align 4
  %memberidx2.i226 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i226, align 8
  %memberidx3.i227 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 3
  store ptr %137, ptr %memberidx3.i227, align 8
  store i1 false, ptr %memberidx1.i.i223, align 1
  br label %common.ret

ifend104:                                         ; preds = %ifend50, %ifend93
  %138 = tail call fastcc ptr @dump_bin_op(i64 %4)
  %memberidx.i229 = getelementptr inbounds %String, ptr %138, i64 0, i32 1
  %139 = load i64, ptr %memberidx.i229, align 4
  %140 = trunc i64 %139 to i32
  %141 = add i32 %140, 1
  %142 = tail call ptr @malloc(i32 %141)
  %143 = load ptr, ptr %138, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %142, ptr align 8 %143, i64 %139, i1 false)
  %144 = getelementptr inbounds i8, ptr %142, i64 %139
  store i8 0, ptr %144, align 1
  %145 = load ptr, ptr %memberidx16, align 8
  %146 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %145)
  %memberidx.i230 = getelementptr inbounds %String, ptr %146, i64 0, i32 1
  %147 = load i64, ptr %memberidx.i230, align 4
  %148 = trunc i64 %147 to i32
  %149 = add i32 %148, 1
  %150 = tail call ptr @malloc(i32 %149)
  %151 = load ptr, ptr %146, align 8
  %152 = load i64, ptr %memberidx.i230, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %150, ptr align 8 %151, i64 %152, i1 false)
  %153 = getelementptr inbounds i8, ptr %150, i64 %152
  store i8 0, ptr %153, align 1
  %154 = load ptr, ptr %memberidx25, align 8
  %155 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %154)
  %memberidx.i231 = getelementptr inbounds %String, ptr %155, i64 0, i32 1
  %156 = load i64, ptr %memberidx.i231, align 4
  %157 = trunc i64 %156 to i32
  %158 = add i32 %157, 1
  %159 = tail call ptr @malloc(i32 %158)
  %160 = load ptr, ptr %155, align 8
  %161 = load i64, ptr %memberidx.i231, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %159, ptr align 8 %160, i64 %161, i1 false)
  %162 = getelementptr inbounds i8, ptr %159, i64 %161
  store i8 0, ptr %162, align 1
  %163 = alloca ptr, align 8
  %164 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %163, ptr nonnull @181, ptr %142, ptr %150, ptr %159)
  %165 = load ptr, ptr %163, align 8
  %166 = tail call ptr @malloc(i32 24)
  store ptr %165, ptr %166, align 8
  %memberidx1.i232 = getelementptr inbounds %String, ptr %166, i64 0, i32 1
  store i64 %164, ptr %memberidx1.i232, align 4
  %memberidx2.i233 = getelementptr inbounds %String, ptr %166, i64 0, i32 2
  store i64 %164, ptr %memberidx2.i233, align 4
  tail call void @free(ptr %142)
  tail call void @free(ptr %150)
  tail call void @free(ptr %159)
  %167 = load ptr, ptr %2, align 8
  %168 = load ptr, ptr %memberidx.i160, align 8
  %memberidx1.i235 = getelementptr inbounds %Compiler, ptr %168, i64 0, i32 5
  %169 = load ptr, ptr %memberidx1.i235, align 8
  %170 = call ptr @malloc(i32 24)
  store i64 5, ptr %170, align 4
  %memberidx1.i.i236 = getelementptr inbounds %FloError, ptr %170, i64 0, i32 2
  store ptr %167, ptr %memberidx1.i.i236, align 8
  %memberidx2.i.i237 = getelementptr inbounds %FloError, ptr %170, i64 0, i32 1
  store ptr %166, ptr %memberidx2.i.i237, align 8
  %memberidx.i.i238 = getelementptr inbounds %Array_FloError_, ptr %169, i64 0, i32 1
  %171 = load i64, ptr %memberidx.i.i238, align 4
  %172 = add i64 %171, 1
  %memberidx.i.i.i239 = getelementptr inbounds %Array_FloError_, ptr %169, i64 0, i32 2
  %173 = load i64, ptr %memberidx.i.i.i239, align 4
  %174 = icmp slt i64 %173, %172
  %.pre260 = load ptr, ptr %169, align 8
  br i1 %174, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %ifend104, %while.body.i.i.i
  %175 = phi ptr [ %179, %while.body.i.i.i ], [ %.pre260, %ifend104 ]
  %176 = phi i64 [ %180, %while.body.i.i.i ], [ %173, %ifend104 ]
  %177 = shl nuw i64 %176, 1
  store i64 %177, ptr %memberidx.i.i.i239, align 4
  %178 = shl i64 %176, 4
  %179 = call ptr @realloc(ptr %175, i64 %178)
  store ptr %179, ptr %169, align 8
  %180 = load i64, ptr %memberidx.i.i.i239, align 4
  %181 = icmp slt i64 %180, %172
  br i1 %181, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre261 = load i64, ptr %memberidx.i.i238, align 4
  %.pre270 = add nsw i64 %.pre261, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %ifend104, %TypeChecker_error.exit.loopexit
  %.pre-phi271 = phi i64 [ %.pre270, %TypeChecker_error.exit.loopexit ], [ %172, %ifend104 ]
  %182 = phi ptr [ %179, %TypeChecker_error.exit.loopexit ], [ %.pre260, %ifend104 ]
  %183 = phi i64 [ %.pre261, %TypeChecker_error.exit.loopexit ], [ %171, %ifend104 ]
  store i64 %.pre-phi271, ptr %memberidx.i.i238, align 4
  %184 = getelementptr inbounds ptr, ptr %182, i64 %183
  store ptr %170, ptr %184, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %TypeChecker_error.exit99, %TypeChecker_error.exit112, %TypeChecker_get_func_args_from_expression.exit, %2, %TypeChecker_check_function_call_args_match.exit.thread9, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %16, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %103, %TypeChecker_check_function_call_args_match.exit.thread9 ], [ null, %2 ], [ null, %TypeChecker_get_func_args_from_expression.exit ], [ null, %TypeChecker_error.exit112 ], [ null, %TypeChecker_error.exit99 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %memberidx1, align 4
  %11 = icmp eq i64 %10, 19
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = load i64, ptr %12, align 4
  %14 = icmp eq i64 %13, 21
  %15 = and i1 %11, %14
  br i1 %15, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %ifend
  %16 = tail call fastcc ptr @TypeChecker_check_intrinsic_call(ptr nonnull %0, ptr nonnull %5, ptr nonnull %1)
  br label %common.ret

ifend6:                                           ; preds = %ifend
  %.not = icmp eq i64 %13, 16
  br i1 %.not, label %ifend11, label %if.entry9

if.entry9:                                        ; preds = %ifend6
  %17 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %12)
  %memberidx.i70 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i70, align 4
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, 1
  %21 = tail call ptr @malloc(i32 %20)
  %22 = load ptr, ptr %17, align 8
  %23 = load i64, ptr %memberidx.i70, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, ptr %21, i64 %23
  store i8 0, ptr %24, align 1
  %25 = alloca ptr, align 8
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %25, ptr nonnull @213, ptr %21)
  %27 = load ptr, ptr %25, align 8
  %28 = tail call ptr @malloc(i32 24)
  store ptr %27, ptr %28, align 8
  %memberidx1.i71 = getelementptr inbounds %String, ptr %28, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i71, align 4
  %memberidx2.i72 = getelementptr inbounds %String, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx2.i72, align 4
  tail call void @free(ptr %21)
  %29 = load ptr, ptr %memberidx, align 8
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i74 = getelementptr inbounds %Compiler, ptr %31, i64 0, i32 5
  %32 = load ptr, ptr %memberidx1.i74, align 8
  %33 = call ptr @malloc(i32 24)
  store i64 5, ptr %33, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %33, i64 0, i32 2
  store ptr %30, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %33, i64 0, i32 1
  store ptr %28, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i.i, align 4
  %35 = add i64 %34, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 2
  %36 = load i64, ptr %memberidx.i.i.i, align 4
  %37 = icmp slt i64 %36, %35
  %.pre = load ptr, ptr %32, align 8
  br i1 %37, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry9, %while.body.i.i.i
  %38 = phi ptr [ %42, %while.body.i.i.i ], [ %.pre, %if.entry9 ]
  %39 = phi i64 [ %43, %while.body.i.i.i ], [ %36, %if.entry9 ]
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx.i.i.i, align 4
  %41 = shl i64 %39, 4
  %42 = call ptr @realloc(ptr %38, i64 %41)
  store ptr %42, ptr %32, align 8
  %43 = load i64, ptr %memberidx.i.i.i, align 4
  %44 = icmp slt i64 %43, %35
  br i1 %44, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre16 = load i64, ptr %memberidx.i.i, align 4
  %.pre27 = add nsw i64 %.pre16, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry9, %TypeChecker_error.exit.loopexit
  %.pre-phi28 = phi i64 [ %.pre27, %TypeChecker_error.exit.loopexit ], [ %35, %if.entry9 ]
  %45 = phi ptr [ %42, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry9 ]
  %46 = phi i64 [ %.pre16, %TypeChecker_error.exit.loopexit ], [ %34, %if.entry9 ]
  store i64 %.pre-phi28, ptr %memberidx.i.i, align 4
  %47 = getelementptr inbounds ptr, ptr %45, i64 %46
  store ptr %33, ptr %47, align 8
  br label %common.ret

ifend11:                                          ; preds = %ifend6
  switch i64 %10, label %TypeChecker_get_func_args_from_expression.exit [
    i64 8, label %if.entry.i
    i64 13, label %if.entry9.i
  ]

if.entry.i:                                       ; preds = %ifend11
  %memberidx1.i76 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %48 = load ptr, ptr %memberidx1.i76, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %if.entry3.i, label %TypeChecker_get_func_args_from_expression.exit

if.entry3.i:                                      ; preds = %if.entry.i
  %51 = load ptr, ptr %0, align 8
  %52 = load ptr, ptr %51, align 8
  %memberidx1.i.i77 = getelementptr inbounds %VarId, ptr %48, i64 0, i32 1
  %53 = load i64, ptr %memberidx1.i.i77, align 4
  %54 = load ptr, ptr %52, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  %memberidx2.i.i78 = getelementptr inbounds %Module, ptr %56, i64 0, i32 4
  %57 = load ptr, ptr %memberidx2.i.i78, align 8
  %memberidx3.i.i = getelementptr inbounds %VarId, ptr %48, i64 0, i32 2
  %58 = load i64, ptr %memberidx3.i.i, align 4
  %59 = load ptr, ptr %57, align 8
  %60 = getelementptr inbounds ptr, ptr %59, i64 %58
  %61 = load ptr, ptr %60, align 8
  %memberidx7.i = getelementptr inbounds %Function, ptr %61, i64 0, i32 2
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

if.entry9.i:                                      ; preds = %ifend11
  %memberidx12.i = getelementptr inbounds %MemberExpression, ptr %5, i64 0, i32 5
  %62 = load ptr, ptr %memberidx12.i, align 8
  %63 = load ptr, ptr %0, align 8
  %memberidx.i.i.i79 = getelementptr inbounds %PropId, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i.i.i79, align 8
  %65 = load ptr, ptr %63, align 8
  %66 = load i64, ptr %64, align 4
  %67 = load ptr, ptr %65, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %69, i64 0, i32 3
  %70 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %64, i64 0, i32 2
  %71 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %72 = load ptr, ptr %70, align 8
  %73 = getelementptr inbounds ptr, ptr %72, i64 %71
  %74 = load ptr, ptr %73, align 8
  %memberidx.i.i80 = getelementptr inbounds %Class, ptr %74, i64 0, i32 5
  %75 = load ptr, ptr %memberidx.i.i80, align 8
  %memberidx1.i20.i = getelementptr inbounds %PropId, ptr %62, i64 0, i32 2
  %76 = load i64, ptr %memberidx1.i20.i, align 4
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx14.i = getelementptr inbounds %ClassMethod, ptr %79, i64 0, i32 6
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

TypeChecker_get_func_args_from_expression.exit.sink.split: ; preds = %if.entry9.i, %if.entry3.i
  %memberidx7.i.sink = phi ptr [ %memberidx7.i, %if.entry3.i ], [ %memberidx14.i, %if.entry9.i ]
  %80 = load ptr, ptr %memberidx7.i.sink, align 8
  br label %TypeChecker_get_func_args_from_expression.exit

TypeChecker_get_func_args_from_expression.exit:   ; preds = %TypeChecker_get_func_args_from_expression.exit.sink.split, %ifend11, %if.entry.i
  %common.ret.op.i = phi ptr [ null, %if.entry.i ], [ null, %ifend11 ], [ %80, %TypeChecker_get_func_args_from_expression.exit.sink.split ]
  %memberidx16 = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 4
  %81 = load ptr, ptr %memberidx16, align 8
  %82 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr nonnull %12, ptr %common.ret.op.i, ptr %81)
  %83 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i82 = getelementptr inbounds %Compiler, ptr %83, i64 0, i32 5
  %84 = load ptr, ptr %memberidx1.i82, align 8
  %memberidx2.i83 = getelementptr inbounds %Array_FloError_, ptr %84, i64 0, i32 1
  %85 = load i64, ptr %memberidx2.i83, align 4
  %86 = icmp sgt i64 %85, 0
  br i1 %86, label %common.ret, label %ifend19

ifend19:                                          ; preds = %TypeChecker_get_func_args_from_expression.exit
  %memberidx.i1 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i1, align 8
  %memberidx1.i2 = getelementptr inbounds %Array_Type_, ptr %87, i64 0, i32 1
  %88 = load i64, ptr %memberidx1.i2, align 4
  %memberidx2.i3 = getelementptr inbounds %Array_Expression_, ptr %82, i64 0, i32 1
  %89 = load i64, ptr %memberidx2.i3, align 4
  %.not.i = icmp eq i64 %88, %89
  br i1 %.not.i, label %for.entry.i, label %if.entry23

for.entry.i:                                      ; preds = %ifend19
  %90 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %90, align 4
  %memberidx1.i.i5 = getelementptr inbounds %Range, ptr %90, i64 0, i32 1
  store i64 %88, ptr %memberidx1.i.i5, align 4
  %91 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i6 = getelementptr inbounds %RangeIterator, ptr %91, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i6, align 4
  %memberidx1.i.i.i = getelementptr inbounds %RangeIterator, ptr %91, i64 0, i32 2
  store i64 %88, ptr %memberidx1.i.i.i, align 4
  br label %for.next.i

for.next.i:                                       ; preds = %for.body.i, %for.entry.i
  %92 = phi i64 [ %93, %for.body.i ], [ 0, %for.entry.i ]
  %.not26.i = icmp slt i64 %92, %88
  br i1 %.not26.i, label %for.body.i, label %TypeChecker_check_function_call_args_match.exit.thread9

for.body.i:                                       ; preds = %for.next.i
  %93 = add nuw nsw i64 %92, 1
  %94 = load ptr, ptr %memberidx.i1, align 8
  %95 = load ptr, ptr %94, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %92
  %97 = load ptr, ptr %96, align 8
  %98 = load ptr, ptr %82, align 8
  %99 = getelementptr inbounds ptr, ptr %98, i64 %92
  %100 = load ptr, ptr %99, align 8
  %memberidx6.i = getelementptr inbounds %Expression, ptr %100, i64 0, i32 3
  %101 = load ptr, ptr %memberidx6.i, align 8
  %102 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %97, ptr %101)
  br i1 %102, label %for.next.i, label %TypeChecker_check_function_call_args_match.exit

TypeChecker_check_function_call_args_match.exit.thread9: ; preds = %for.next.i
  tail call void @free(ptr nonnull %91)
  %103 = tail call ptr @malloc(i32 41)
  %memberidx34 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 2
  %104 = load ptr, ptr %memberidx34, align 8
  store i64 8, ptr %103, align 4
  %memberidx.i.i84 = getelementptr inbounds %Expression, ptr %103, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i84, align 4
  %memberidx1.i.i85 = getelementptr inbounds %Expression, ptr %103, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i85, align 1
  %memberidx.i86 = getelementptr inbounds %CallExpression, ptr %103, i64 0, i32 4
  store ptr %5, ptr %memberidx.i86, align 8
  %memberidx1.i87 = getelementptr inbounds %CallExpression, ptr %103, i64 0, i32 5
  store ptr %82, ptr %memberidx1.i87, align 8
  %memberidx2.i88 = getelementptr inbounds %Expression, ptr %103, i64 0, i32 3
  store ptr %104, ptr %memberidx2.i88, align 8
  br label %common.ret

TypeChecker_check_function_call_args_match.exit:  ; preds = %for.body.i
  store i64 %93, ptr %memberidx.i.i.i6, align 4
  store i1 false, ptr %91, align 1
  %105 = load ptr, ptr %memberidx.i1, align 8
  %106 = load ptr, ptr %105, align 8
  %107 = getelementptr inbounds ptr, ptr %106, i64 %92
  %108 = load ptr, ptr %107, align 8
  %109 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %108)
  %memberidx.i100 = getelementptr inbounds %String, ptr %109, i64 0, i32 1
  %110 = load i64, ptr %memberidx.i100, align 4
  %111 = trunc i64 %110 to i32
  %112 = add i32 %111, 1
  %113 = tail call ptr @malloc(i32 %112)
  %114 = load ptr, ptr %109, align 8
  %115 = load i64, ptr %memberidx.i100, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %113, ptr align 8 %114, i64 %115, i1 false)
  %116 = getelementptr inbounds i8, ptr %113, i64 %115
  store i8 0, ptr %116, align 1
  %117 = load ptr, ptr %82, align 8
  %118 = getelementptr inbounds ptr, ptr %117, i64 %92
  %119 = load ptr, ptr %118, align 8
  %memberidx31 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  %120 = load ptr, ptr %memberidx31, align 8
  %121 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %120)
  %memberidx.i101 = getelementptr inbounds %String, ptr %121, i64 0, i32 1
  %122 = load i64, ptr %memberidx.i101, align 4
  %123 = trunc i64 %122 to i32
  %124 = add i32 %123, 1
  %125 = tail call ptr @malloc(i32 %124)
  %126 = load ptr, ptr %121, align 8
  %127 = load i64, ptr %memberidx.i101, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %125, ptr align 8 %126, i64 %127, i1 false)
  %128 = getelementptr inbounds i8, ptr %125, i64 %127
  store i8 0, ptr %128, align 1
  %129 = alloca ptr, align 8
  %130 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %129, ptr nonnull @215, ptr %113, ptr %125)
  %131 = load ptr, ptr %129, align 8
  %132 = tail call ptr @malloc(i32 24)
  store ptr %131, ptr %132, align 8
  %memberidx1.i102 = getelementptr inbounds %String, ptr %132, i64 0, i32 1
  store i64 %130, ptr %memberidx1.i102, align 4
  %memberidx2.i103 = getelementptr inbounds %String, ptr %132, i64 0, i32 2
  store i64 %130, ptr %memberidx2.i103, align 4
  tail call void @free(ptr %113)
  tail call void @free(ptr %125)
  %133 = load ptr, ptr %memberidx16, align 8
  %134 = load ptr, ptr %133, align 8
  %135 = getelementptr inbounds ptr, ptr %134, i64 %92
  %136 = load ptr, ptr %135, align 8
  %137 = load ptr, ptr %136, align 8
  %138 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i105 = getelementptr inbounds %Compiler, ptr %138, i64 0, i32 5
  %139 = load ptr, ptr %memberidx1.i105, align 8
  %140 = call ptr @malloc(i32 24)
  store i64 5, ptr %140, align 4
  %memberidx1.i.i106 = getelementptr inbounds %FloError, ptr %140, i64 0, i32 2
  store ptr %137, ptr %memberidx1.i.i106, align 8
  %memberidx2.i.i107 = getelementptr inbounds %FloError, ptr %140, i64 0, i32 1
  store ptr %132, ptr %memberidx2.i.i107, align 8
  %memberidx.i.i108 = getelementptr inbounds %Array_FloError_, ptr %139, i64 0, i32 1
  %141 = load i64, ptr %memberidx.i.i108, align 4
  %142 = add i64 %141, 1
  %memberidx.i.i.i109 = getelementptr inbounds %Array_FloError_, ptr %139, i64 0, i32 2
  %143 = load i64, ptr %memberidx.i.i.i109, align 4
  %144 = icmp slt i64 %143, %142
  %.pre21 = load ptr, ptr %139, align 8
  br i1 %144, label %while.body.i.i.i111, label %TypeChecker_error.exit112

if.entry23:                                       ; preds = %ifend19
  %145 = alloca ptr, align 8
  %146 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %145, ptr nonnull @214, i64 %88, i64 %89)
  %147 = load ptr, ptr %145, align 8
  %148 = tail call ptr @malloc(i32 24)
  store ptr %147, ptr %148, align 8
  %memberidx1.i89 = getelementptr inbounds %String, ptr %148, i64 0, i32 1
  store i64 %146, ptr %memberidx1.i89, align 4
  %memberidx2.i90 = getelementptr inbounds %String, ptr %148, i64 0, i32 2
  store i64 %146, ptr %memberidx2.i90, align 4
  %149 = load ptr, ptr %1, align 8
  %150 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i92 = getelementptr inbounds %Compiler, ptr %150, i64 0, i32 5
  %151 = load ptr, ptr %memberidx1.i92, align 8
  %152 = call ptr @malloc(i32 24)
  store i64 4, ptr %152, align 4
  %memberidx1.i.i93 = getelementptr inbounds %FloError, ptr %152, i64 0, i32 2
  store ptr %149, ptr %memberidx1.i.i93, align 8
  %memberidx2.i.i94 = getelementptr inbounds %FloError, ptr %152, i64 0, i32 1
  store ptr %148, ptr %memberidx2.i.i94, align 8
  %memberidx.i.i95 = getelementptr inbounds %Array_FloError_, ptr %151, i64 0, i32 1
  %153 = load i64, ptr %memberidx.i.i95, align 4
  %154 = add i64 %153, 1
  %memberidx.i.i.i96 = getelementptr inbounds %Array_FloError_, ptr %151, i64 0, i32 2
  %155 = load i64, ptr %memberidx.i.i.i96, align 4
  %156 = icmp slt i64 %155, %154
  %.pre18 = load ptr, ptr %151, align 8
  br i1 %156, label %while.body.i.i.i98, label %TypeChecker_error.exit99

while.body.i.i.i98:                               ; preds = %if.entry23, %while.body.i.i.i98
  %157 = phi ptr [ %161, %while.body.i.i.i98 ], [ %.pre18, %if.entry23 ]
  %158 = phi i64 [ %162, %while.body.i.i.i98 ], [ %155, %if.entry23 ]
  %159 = shl nuw i64 %158, 1
  store i64 %159, ptr %memberidx.i.i.i96, align 4
  %160 = shl i64 %158, 4
  %161 = call ptr @realloc(ptr %157, i64 %160)
  store ptr %161, ptr %151, align 8
  %162 = load i64, ptr %memberidx.i.i.i96, align 4
  %163 = icmp slt i64 %162, %154
  br i1 %163, label %while.body.i.i.i98, label %TypeChecker_error.exit99.loopexit

TypeChecker_error.exit99.loopexit:                ; preds = %while.body.i.i.i98
  %.pre19 = load i64, ptr %memberidx.i.i95, align 4
  %.pre25 = add nsw i64 %.pre19, 1
  br label %TypeChecker_error.exit99

TypeChecker_error.exit99:                         ; preds = %if.entry23, %TypeChecker_error.exit99.loopexit
  %.pre-phi26 = phi i64 [ %.pre25, %TypeChecker_error.exit99.loopexit ], [ %154, %if.entry23 ]
  %164 = phi ptr [ %161, %TypeChecker_error.exit99.loopexit ], [ %.pre18, %if.entry23 ]
  %165 = phi i64 [ %.pre19, %TypeChecker_error.exit99.loopexit ], [ %153, %if.entry23 ]
  store i64 %.pre-phi26, ptr %memberidx.i.i95, align 4
  %166 = getelementptr inbounds ptr, ptr %164, i64 %165
  store ptr %152, ptr %166, align 8
  br label %common.ret

while.body.i.i.i111:                              ; preds = %TypeChecker_check_function_call_args_match.exit, %while.body.i.i.i111
  %167 = phi ptr [ %171, %while.body.i.i.i111 ], [ %.pre21, %TypeChecker_check_function_call_args_match.exit ]
  %168 = phi i64 [ %172, %while.body.i.i.i111 ], [ %143, %TypeChecker_check_function_call_args_match.exit ]
  %169 = shl nuw i64 %168, 1
  store i64 %169, ptr %memberidx.i.i.i109, align 4
  %170 = shl i64 %168, 4
  %171 = call ptr @realloc(ptr %167, i64 %170)
  store ptr %171, ptr %139, align 8
  %172 = load i64, ptr %memberidx.i.i.i109, align 4
  %173 = icmp slt i64 %172, %142
  br i1 %173, label %while.body.i.i.i111, label %TypeChecker_error.exit112.loopexit

TypeChecker_error.exit112.loopexit:               ; preds = %while.body.i.i.i111
  %.pre22 = load i64, ptr %memberidx.i.i108, align 4
  %.pre24 = add nsw i64 %.pre22, 1
  br label %TypeChecker_error.exit112

TypeChecker_error.exit112:                        ; preds = %TypeChecker_check_function_call_args_match.exit, %TypeChecker_error.exit112.loopexit
  %.pre-phi = phi i64 [ %.pre24, %TypeChecker_error.exit112.loopexit ], [ %142, %TypeChecker_check_function_call_args_match.exit ]
  %174 = phi ptr [ %171, %TypeChecker_error.exit112.loopexit ], [ %.pre21, %TypeChecker_check_function_call_args_match.exit ]
  %175 = phi i64 [ %.pre22, %TypeChecker_error.exit112.loopexit ], [ %141, %TypeChecker_check_function_call_args_match.exit ]
  store i64 %.pre-phi, ptr %memberidx.i.i108, align 4
  %176 = getelementptr inbounds ptr, ptr %174, i64 %175
  store ptr %140, ptr %176, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_type(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %ifend62 [
    i64 13, label %if.entry
    i64 14, label %if.entry5
    i64 16, label %if.entry40
    i64 15, label %if.entry49
    i64 17, label %if.entry60
  ]

common.ret:                                       ; preds = %ifend125, %ifend138, %for.end129, %TypeChecker_error.exit, %if.entry118, %if.entry115, %if.entry112, %if.entry109, %if.entry106, %if.entry103, %if.entry100, %if.entry97, %if.entry94, %if.entry91, %if.entry88, %if.entry85, %if.entry82, %if.entry79, %if.entry76, %if.entry73, %if.entry70, %if.entry67, %ifend62, %for.end55, %for.end, %ifend35, %TypeChecker_error.exit434, %TypeChecker_error.exit470, %TypeChecker_error.exit459, %TypeChecker_error.exit448, %if.entry9, %if.entry
  %common.ret.op = phi ptr [ %4, %if.entry ], [ %14, %if.entry9 ], [ null, %TypeChecker_error.exit448 ], [ null, %TypeChecker_error.exit459 ], [ null, %TypeChecker_error.exit470 ], [ null, %TypeChecker_error.exit434 ], [ %112, %ifend35 ], [ %141, %for.end ], [ %142, %for.end55 ], [ %179, %ifend62 ], [ %180, %if.entry67 ], [ %187, %if.entry70 ], [ %194, %if.entry73 ], [ %201, %if.entry76 ], [ %208, %if.entry79 ], [ %215, %if.entry82 ], [ %222, %if.entry85 ], [ %229, %if.entry88 ], [ %236, %if.entry91 ], [ %243, %if.entry94 ], [ %250, %if.entry97 ], [ %257, %if.entry100 ], [ %264, %if.entry103 ], [ %271, %if.entry106 ], [ %278, %if.entry109 ], [ %285, %if.entry112 ], [ %292, %if.entry115 ], [ %299, %if.entry118 ], [ null, %TypeChecker_error.exit ], [ null, %for.end129 ], [ %335, %ifend138 ], [ %304, %ifend125 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 16)
  %memberidx3 = getelementptr inbounds %PointerTypeNode, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %memberidx3, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %5)
  store i64 13, ptr %4, align 4
  %memberidx.i424 = getelementptr inbounds %PointerType, ptr %4, i64 0, i32 1
  store ptr %6, ptr %memberidx.i424, align 8
  br label %common.ret

if.entry5:                                        ; preds = %2
  %7 = alloca %IntType, align 8
  store i64 6, ptr %7, align 8
  %memberidx.i425 = getelementptr inbounds %IntType, ptr %7, i64 0, i32 1
  store i1 false, ptr %memberidx.i425, align 8
  %memberidx8 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %memberidx8, align 8
  %9 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %7, ptr %8)
  %memberidx.i435 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %10 = load ptr, ptr %memberidx.i435, align 8
  %memberidx1.i436 = getelementptr inbounds %Compiler, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx1.i436, align 8
  %memberidx2.i437 = getelementptr inbounds %Array_FloError_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx2.i437, align 4
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %if.entry5
  %14 = call ptr @malloc(i32 8)
  store i64 21, ptr %14, align 4
  br label %common.ret

ifend11:                                          ; preds = %if.entry5
  %memberidx12 = getelementptr inbounds %Expression, ptr %9, i64 0, i32 3
  %15 = load ptr, ptr %memberidx12, align 8
  %16 = load i64, ptr %15, align 4
  %17 = add i64 %16, -1
  %18 = icmp ult i64 %17, 7
  br i1 %18, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend11
  %19 = call ptr @malloc(i32 23)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(23) %19, ptr noundef nonnull align 8 dereferenceable(23) @158, i64 23, i1 false)
  %20 = call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i.i438 = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 23, ptr %memberidx1.i.i438, align 4
  %memberidx2.i.i439 = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 23, ptr %memberidx2.i.i439, align 4
  %21 = load ptr, ptr %memberidx8, align 8
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %memberidx.i435, align 8
  %memberidx1.i441 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx1.i441, align 8
  %25 = call ptr @malloc(i32 24)
  store i64 4, ptr %25, align 4
  %memberidx1.i.i442 = getelementptr inbounds %FloError, ptr %25, i64 0, i32 2
  store ptr %22, ptr %memberidx1.i.i442, align 8
  %memberidx2.i.i443 = getelementptr inbounds %FloError, ptr %25, i64 0, i32 1
  store ptr %20, ptr %memberidx2.i.i443, align 8
  %memberidx.i.i444 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i.i444, align 4
  %27 = add i64 %26, 1
  %memberidx.i.i.i445 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i.i445, align 4
  %29 = icmp slt i64 %28, %27
  %.pre530 = load ptr, ptr %24, align 8
  br i1 %29, label %while.body.i.i.i447, label %TypeChecker_error.exit448

while.body.i.i.i447:                              ; preds = %if.entry13, %while.body.i.i.i447
  %30 = phi ptr [ %34, %while.body.i.i.i447 ], [ %.pre530, %if.entry13 ]
  %31 = phi i64 [ %35, %while.body.i.i.i447 ], [ %28, %if.entry13 ]
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx.i.i.i445, align 4
  %33 = shl i64 %31, 4
  %34 = call ptr @realloc(ptr %30, i64 %33)
  store ptr %34, ptr %24, align 8
  %35 = load i64, ptr %memberidx.i.i.i445, align 4
  %36 = icmp slt i64 %35, %27
  br i1 %36, label %while.body.i.i.i447, label %TypeChecker_error.exit448.loopexit

TypeChecker_error.exit448.loopexit:               ; preds = %while.body.i.i.i447
  %.pre531 = load i64, ptr %memberidx.i.i444, align 4
  %.pre547 = add nsw i64 %.pre531, 1
  br label %TypeChecker_error.exit448

TypeChecker_error.exit448:                        ; preds = %if.entry13, %TypeChecker_error.exit448.loopexit
  %.pre-phi548 = phi i64 [ %.pre547, %TypeChecker_error.exit448.loopexit ], [ %27, %if.entry13 ]
  %37 = phi ptr [ %34, %TypeChecker_error.exit448.loopexit ], [ %.pre530, %if.entry13 ]
  %38 = phi i64 [ %.pre531, %TypeChecker_error.exit448.loopexit ], [ %26, %if.entry13 ]
  store i64 %.pre-phi548, ptr %memberidx.i.i444, align 4
  %39 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %25, ptr %39, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend11
  %memberidx19 = getelementptr inbounds %IntType, ptr %15, i64 0, i32 1
  %40 = load i1, ptr %memberidx19, align 1
  %41 = icmp ne i64 %16, 6
  %42 = or i1 %41, %40
  br i1 %42, label %if.entry21, label %ifend23

if.entry21:                                       ; preds = %ifend15
  %43 = call ptr @malloc(i32 23)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(23) %43, ptr noundef nonnull align 8 dereferenceable(23) @159, i64 23, i1 false)
  %44 = call ptr @malloc(i32 24)
  store ptr %43, ptr %44, align 8
  %memberidx1.i.i449 = getelementptr inbounds %String, ptr %44, i64 0, i32 1
  store i64 23, ptr %memberidx1.i.i449, align 4
  %memberidx2.i.i450 = getelementptr inbounds %String, ptr %44, i64 0, i32 2
  store i64 23, ptr %memberidx2.i.i450, align 4
  %45 = load ptr, ptr %memberidx8, align 8
  %46 = load ptr, ptr %45, align 8
  %47 = load ptr, ptr %memberidx.i435, align 8
  %memberidx1.i452 = getelementptr inbounds %Compiler, ptr %47, i64 0, i32 5
  %48 = load ptr, ptr %memberidx1.i452, align 8
  %49 = call ptr @malloc(i32 24)
  store i64 4, ptr %49, align 4
  %memberidx1.i.i453 = getelementptr inbounds %FloError, ptr %49, i64 0, i32 2
  store ptr %46, ptr %memberidx1.i.i453, align 8
  %memberidx2.i.i454 = getelementptr inbounds %FloError, ptr %49, i64 0, i32 1
  store ptr %44, ptr %memberidx2.i.i454, align 8
  %memberidx.i.i455 = getelementptr inbounds %Array_FloError_, ptr %48, i64 0, i32 1
  %50 = load i64, ptr %memberidx.i.i455, align 4
  %51 = add i64 %50, 1
  %memberidx.i.i.i456 = getelementptr inbounds %Array_FloError_, ptr %48, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i.i.i456, align 4
  %53 = icmp slt i64 %52, %51
  %.pre539 = load ptr, ptr %48, align 8
  br i1 %53, label %while.body.i.i.i458, label %TypeChecker_error.exit459

while.body.i.i.i458:                              ; preds = %if.entry21, %while.body.i.i.i458
  %54 = phi ptr [ %58, %while.body.i.i.i458 ], [ %.pre539, %if.entry21 ]
  %55 = phi i64 [ %59, %while.body.i.i.i458 ], [ %52, %if.entry21 ]
  %56 = shl nuw i64 %55, 1
  store i64 %56, ptr %memberidx.i.i.i456, align 4
  %57 = shl i64 %55, 4
  %58 = call ptr @realloc(ptr %54, i64 %57)
  store ptr %58, ptr %48, align 8
  %59 = load i64, ptr %memberidx.i.i.i456, align 4
  %60 = icmp slt i64 %59, %51
  br i1 %60, label %while.body.i.i.i458, label %TypeChecker_error.exit459.loopexit

TypeChecker_error.exit459.loopexit:               ; preds = %while.body.i.i.i458
  %.pre540 = load i64, ptr %memberidx.i.i455, align 4
  %.pre542 = add nsw i64 %.pre540, 1
  br label %TypeChecker_error.exit459

TypeChecker_error.exit459:                        ; preds = %if.entry21, %TypeChecker_error.exit459.loopexit
  %.pre-phi = phi i64 [ %.pre542, %TypeChecker_error.exit459.loopexit ], [ %51, %if.entry21 ]
  %61 = phi ptr [ %58, %TypeChecker_error.exit459.loopexit ], [ %.pre539, %if.entry21 ]
  %62 = phi i64 [ %.pre540, %TypeChecker_error.exit459.loopexit ], [ %50, %if.entry21 ]
  store i64 %.pre-phi, ptr %memberidx.i.i455, align 4
  %63 = getelementptr inbounds ptr, ptr %61, i64 %62
  store ptr %49, ptr %63, align 8
  br label %common.ret

ifend23:                                          ; preds = %ifend15
  %memberidx26 = getelementptr inbounds %Expression, ptr %9, i64 0, i32 1
  %64 = load i1, ptr %memberidx26, align 1
  br i1 %64, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend23
  %65 = call ptr @malloc(i32 30)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(30) %65, ptr noundef nonnull align 8 dereferenceable(30) @160, i64 30, i1 false)
  %66 = call ptr @malloc(i32 24)
  store ptr %65, ptr %66, align 8
  %memberidx1.i.i460 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  store i64 30, ptr %memberidx1.i.i460, align 4
  %memberidx2.i.i461 = getelementptr inbounds %String, ptr %66, i64 0, i32 2
  store i64 30, ptr %memberidx2.i.i461, align 4
  %67 = load ptr, ptr %memberidx8, align 8
  %68 = load ptr, ptr %67, align 8
  %69 = load ptr, ptr %memberidx.i435, align 8
  %memberidx1.i463 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 5
  %70 = load ptr, ptr %memberidx1.i463, align 8
  %71 = call ptr @malloc(i32 24)
  store i64 4, ptr %71, align 4
  %memberidx1.i.i464 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 2
  store ptr %68, ptr %memberidx1.i.i464, align 8
  %memberidx2.i.i465 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 1
  store ptr %66, ptr %memberidx2.i.i465, align 8
  %memberidx.i.i466 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i.i466, align 4
  %73 = add i64 %72, 1
  %memberidx.i.i.i467 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i.i467, align 4
  %75 = icmp slt i64 %74, %73
  %.pre533 = load ptr, ptr %70, align 8
  br i1 %75, label %while.body.i.i.i469, label %TypeChecker_error.exit470

while.body.i.i.i469:                              ; preds = %if.entry27, %while.body.i.i.i469
  %76 = phi ptr [ %80, %while.body.i.i.i469 ], [ %.pre533, %if.entry27 ]
  %77 = phi i64 [ %81, %while.body.i.i.i469 ], [ %74, %if.entry27 ]
  %78 = shl nuw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i.i467, align 4
  %79 = shl i64 %77, 4
  %80 = call ptr @realloc(ptr %76, i64 %79)
  store ptr %80, ptr %70, align 8
  %81 = load i64, ptr %memberidx.i.i.i467, align 4
  %82 = icmp slt i64 %81, %73
  br i1 %82, label %while.body.i.i.i469, label %TypeChecker_error.exit470.loopexit

TypeChecker_error.exit470.loopexit:               ; preds = %while.body.i.i.i469
  %.pre534 = load i64, ptr %memberidx.i.i466, align 4
  %.pre545 = add nsw i64 %.pre534, 1
  br label %TypeChecker_error.exit470

TypeChecker_error.exit470:                        ; preds = %if.entry27, %TypeChecker_error.exit470.loopexit
  %.pre-phi546 = phi i64 [ %.pre545, %TypeChecker_error.exit470.loopexit ], [ %73, %if.entry27 ]
  %83 = phi ptr [ %80, %TypeChecker_error.exit470.loopexit ], [ %.pre533, %if.entry27 ]
  %84 = phi i64 [ %.pre534, %TypeChecker_error.exit470.loopexit ], [ %72, %if.entry27 ]
  store i64 %.pre-phi546, ptr %memberidx.i.i466, align 4
  %85 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %71, ptr %85, align 8
  br label %common.ret

ifend29:                                          ; preds = %ifend23
  %86 = load ptr, ptr %0, align 8
  %87 = call fastcc i64 @evaluate_const_int_expression(ptr %86, ptr nonnull %9)
  %88 = icmp slt i64 %87, 0
  br i1 %88, label %if.entry33, label %ifend35

if.entry33:                                       ; preds = %ifend29
  %89 = call ptr @malloc(i32 28)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %89, ptr noundef nonnull align 8 dereferenceable(28) @161, i64 28, i1 false)
  %90 = call ptr @malloc(i32 24)
  store ptr %89, ptr %90, align 8
  %memberidx1.i.i471 = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  store i64 28, ptr %memberidx1.i.i471, align 4
  %memberidx2.i.i472 = getelementptr inbounds %String, ptr %90, i64 0, i32 2
  store i64 28, ptr %memberidx2.i.i472, align 4
  %91 = load ptr, ptr %memberidx8, align 8
  %92 = load ptr, ptr %91, align 8
  %93 = load ptr, ptr %memberidx.i435, align 8
  %memberidx1.i427 = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx1.i427, align 8
  %95 = call ptr @malloc(i32 24)
  store i64 4, ptr %95, align 4
  %memberidx1.i.i428 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 2
  store ptr %92, ptr %memberidx1.i.i428, align 8
  %memberidx2.i.i429 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i429, align 8
  %memberidx.i.i430 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i.i430, align 4
  %97 = add i64 %96, 1
  %memberidx.i.i.i431 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 2
  %98 = load i64, ptr %memberidx.i.i.i431, align 4
  %99 = icmp slt i64 %98, %97
  %.pre536 = load ptr, ptr %94, align 8
  br i1 %99, label %while.body.i.i.i433, label %TypeChecker_error.exit434

while.body.i.i.i433:                              ; preds = %if.entry33, %while.body.i.i.i433
  %100 = phi ptr [ %104, %while.body.i.i.i433 ], [ %.pre536, %if.entry33 ]
  %101 = phi i64 [ %105, %while.body.i.i.i433 ], [ %98, %if.entry33 ]
  %102 = shl nuw i64 %101, 1
  store i64 %102, ptr %memberidx.i.i.i431, align 4
  %103 = shl i64 %101, 4
  %104 = call ptr @realloc(ptr %100, i64 %103)
  store ptr %104, ptr %94, align 8
  %105 = load i64, ptr %memberidx.i.i.i431, align 4
  %106 = icmp slt i64 %105, %97
  br i1 %106, label %while.body.i.i.i433, label %TypeChecker_error.exit434.loopexit

TypeChecker_error.exit434.loopexit:               ; preds = %while.body.i.i.i433
  %.pre537 = load i64, ptr %memberidx.i.i430, align 4
  %.pre543 = add nsw i64 %.pre537, 1
  br label %TypeChecker_error.exit434

TypeChecker_error.exit434:                        ; preds = %if.entry33, %TypeChecker_error.exit434.loopexit
  %.pre-phi544 = phi i64 [ %.pre543, %TypeChecker_error.exit434.loopexit ], [ %97, %if.entry33 ]
  %107 = phi ptr [ %104, %TypeChecker_error.exit434.loopexit ], [ %.pre536, %if.entry33 ]
  %108 = phi i64 [ %.pre537, %TypeChecker_error.exit434.loopexit ], [ %96, %if.entry33 ]
  store i64 %.pre-phi544, ptr %memberidx.i.i430, align 4
  %109 = getelementptr inbounds ptr, ptr %107, i64 %108
  store ptr %95, ptr %109, align 8
  br label %common.ret

ifend35:                                          ; preds = %ifend29
  %memberidx38 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 2
  %110 = load ptr, ptr %memberidx38, align 8
  %111 = call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %110)
  %112 = tail call ptr @malloc(i32 24)
  store i64 14, ptr %112, align 4
  %memberidx.i422 = getelementptr inbounds %ArrayType, ptr %112, i64 0, i32 1
  store ptr %111, ptr %memberidx.i422, align 8
  %memberidx1.i423 = getelementptr inbounds %ArrayType, ptr %112, i64 0, i32 2
  store i64 %87, ptr %memberidx1.i423, align 4
  br label %common.ret

if.entry40:                                       ; preds = %2
  %113 = tail call ptr @malloc(i32 24)
  %memberidx.i420 = getelementptr inbounds %Array_Type_, ptr %113, i64 0, i32 1
  store i64 0, ptr %memberidx.i420, align 4
  %memberidx1.i421 = getelementptr inbounds %Array_Type_, ptr %113, i64 0, i32 2
  store i64 8, ptr %memberidx1.i421, align 4
  %114 = tail call ptr @malloc(i32 64)
  store ptr %114, ptr %113, align 8
  store i64 0, ptr %memberidx.i420, align 4
  %memberidx45 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 2
  %115 = load ptr, ptr %memberidx45, align 8
  %116 = tail call ptr @malloc(i32 25)
  %117 = load ptr, ptr %115, align 8
  %memberidx1.i416 = getelementptr inbounds %Array_TypeNode_, ptr %115, i64 0, i32 1
  %118 = load i64, ptr %memberidx1.i416, align 4
  store i1 false, ptr %116, align 1
  %memberidx1.i.i417 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %116, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i417, align 4
  %memberidx2.i.i418 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %116, i64 0, i32 3
  store ptr %117, ptr %memberidx2.i.i418, align 8
  %memberidx3.i.i419 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %116, i64 0, i32 2
  store i64 %118, ptr %memberidx3.i.i419, align 4
  %119 = icmp slt i64 %118, 1
  br i1 %119, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry40, %Array_Type____sl__.exit412
  %.in512 = phi ptr [ %138, %Array_Type____sl__.exit412 ], [ %117, %if.entry40 ]
  %120 = phi i64 [ %137, %Array_Type____sl__.exit412 ], [ 1, %if.entry40 ]
  %121 = load ptr, ptr %.in512, align 8
  %122 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %121)
  %123 = load i64, ptr %memberidx.i420, align 4
  %124 = add i64 %123, 1
  %125 = load i64, ptr %memberidx1.i421, align 4
  %126 = icmp slt i64 %125, %124
  %.pre527 = load ptr, ptr %113, align 8
  br i1 %126, label %while.body.i.i411, label %Array_Type____sl__.exit412

while.body.i.i411:                                ; preds = %for.body, %while.body.i.i411
  %127 = phi ptr [ %131, %while.body.i.i411 ], [ %.pre527, %for.body ]
  %128 = phi i64 [ %132, %while.body.i.i411 ], [ %125, %for.body ]
  %129 = shl nuw i64 %128, 1
  store i64 %129, ptr %memberidx1.i421, align 4
  %130 = shl i64 %128, 4
  %131 = tail call ptr @realloc(ptr %127, i64 %130)
  store ptr %131, ptr %113, align 8
  %132 = load i64, ptr %memberidx1.i421, align 4
  %133 = icmp slt i64 %132, %124
  br i1 %133, label %while.body.i.i411, label %Array_Type____sl__.exit412.loopexit

Array_Type____sl__.exit412.loopexit:              ; preds = %while.body.i.i411
  %.pre528 = load i64, ptr %memberidx.i420, align 4
  %.pre549 = add nsw i64 %.pre528, 1
  br label %Array_Type____sl__.exit412

Array_Type____sl__.exit412:                       ; preds = %for.body, %Array_Type____sl__.exit412.loopexit
  %.pre-phi550 = phi i64 [ %.pre549, %Array_Type____sl__.exit412.loopexit ], [ %124, %for.body ]
  %134 = phi ptr [ %131, %Array_Type____sl__.exit412.loopexit ], [ %.pre527, %for.body ]
  %135 = phi i64 [ %.pre528, %Array_Type____sl__.exit412.loopexit ], [ %123, %for.body ]
  store i64 %.pre-phi550, ptr %memberidx.i420, align 4
  %136 = getelementptr inbounds ptr, ptr %134, i64 %135
  store ptr %122, ptr %136, align 8
  %137 = add nuw nsw i64 %120, 1
  %138 = getelementptr inbounds ptr, ptr %117, i64 %120
  %.not559 = icmp slt i64 %120, %118
  br i1 %.not559, label %for.body, label %for.end

for.end:                                          ; preds = %Array_Type____sl__.exit412, %if.entry40
  tail call void @free(ptr nonnull %116)
  %memberidx47 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 3
  %139 = load ptr, ptr %memberidx47, align 8
  %140 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %139)
  %141 = tail call ptr @malloc(i32 25)
  store i64 16, ptr %141, align 4
  %memberidx.i406 = getelementptr inbounds %FunctionType, ptr %141, i64 0, i32 1
  store ptr %113, ptr %memberidx.i406, align 8
  %memberidx1.i407 = getelementptr inbounds %FunctionType, ptr %141, i64 0, i32 2
  store ptr %140, ptr %memberidx1.i407, align 8
  br label %common.ret

if.entry49:                                       ; preds = %2
  %142 = tail call ptr @malloc(i32 16)
  store i64 15, ptr %142, align 4
  %memberidx.i402 = getelementptr inbounds %TupleType, ptr %142, i64 0, i32 1
  %143 = tail call ptr @malloc(i32 24)
  %memberidx.i.i403 = getelementptr inbounds %Array_Type_, ptr %143, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i403, align 4
  %memberidx1.i.i404 = getelementptr inbounds %Array_Type_, ptr %143, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i404, align 4
  %144 = tail call ptr @malloc(i32 64)
  store ptr %144, ptr %143, align 8
  store i64 0, ptr %memberidx.i.i403, align 4
  store ptr %143, ptr %memberidx.i402, align 8
  %memberidx56 = getelementptr inbounds %TupleTypeNode, ptr %1, i64 0, i32 2
  %145 = load ptr, ptr %memberidx56, align 8
  %146 = tail call ptr @malloc(i32 25)
  %147 = load ptr, ptr %145, align 8
  %memberidx1.i398 = getelementptr inbounds %Array_TypeNode_, ptr %145, i64 0, i32 1
  %148 = load i64, ptr %memberidx1.i398, align 4
  store i1 false, ptr %146, align 1
  %memberidx1.i.i399 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %146, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i399, align 4
  %memberidx2.i.i400 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %146, i64 0, i32 3
  store ptr %147, ptr %memberidx2.i.i400, align 8
  %memberidx3.i.i401 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %146, i64 0, i32 2
  store i64 %148, ptr %memberidx3.i.i401, align 4
  %149 = icmp slt i64 %148, 1
  br i1 %149, label %for.end55, label %for.body54

for.body54:                                       ; preds = %if.entry49, %Array_Type____sl__.exit394
  %.in511 = phi ptr [ %168, %Array_Type____sl__.exit394 ], [ %147, %if.entry49 ]
  %150 = phi i64 [ %167, %Array_Type____sl__.exit394 ], [ 1, %if.entry49 ]
  %151 = load ptr, ptr %.in511, align 8
  %152 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %151)
  %153 = load i64, ptr %memberidx.i.i403, align 4
  %154 = add i64 %153, 1
  %155 = load i64, ptr %memberidx1.i.i404, align 4
  %156 = icmp slt i64 %155, %154
  %.pre524 = load ptr, ptr %143, align 8
  br i1 %156, label %while.body.i.i393, label %Array_Type____sl__.exit394

while.body.i.i393:                                ; preds = %for.body54, %while.body.i.i393
  %157 = phi ptr [ %161, %while.body.i.i393 ], [ %.pre524, %for.body54 ]
  %158 = phi i64 [ %162, %while.body.i.i393 ], [ %155, %for.body54 ]
  %159 = shl nuw i64 %158, 1
  store i64 %159, ptr %memberidx1.i.i404, align 4
  %160 = shl i64 %158, 4
  %161 = tail call ptr @realloc(ptr %157, i64 %160)
  store ptr %161, ptr %143, align 8
  %162 = load i64, ptr %memberidx1.i.i404, align 4
  %163 = icmp slt i64 %162, %154
  br i1 %163, label %while.body.i.i393, label %Array_Type____sl__.exit394.loopexit

Array_Type____sl__.exit394.loopexit:              ; preds = %while.body.i.i393
  %.pre525 = load i64, ptr %memberidx.i.i403, align 4
  %.pre551 = add nsw i64 %.pre525, 1
  br label %Array_Type____sl__.exit394

Array_Type____sl__.exit394:                       ; preds = %for.body54, %Array_Type____sl__.exit394.loopexit
  %.pre-phi552 = phi i64 [ %.pre551, %Array_Type____sl__.exit394.loopexit ], [ %154, %for.body54 ]
  %164 = phi ptr [ %161, %Array_Type____sl__.exit394.loopexit ], [ %.pre524, %for.body54 ]
  %165 = phi i64 [ %.pre525, %Array_Type____sl__.exit394.loopexit ], [ %153, %for.body54 ]
  store i64 %.pre-phi552, ptr %memberidx.i.i403, align 4
  %166 = getelementptr inbounds ptr, ptr %164, i64 %165
  store ptr %152, ptr %166, align 8
  %167 = add nuw nsw i64 %150, 1
  %168 = getelementptr inbounds ptr, ptr %147, i64 %150
  %.not558 = icmp slt i64 %150, %148
  br i1 %.not558, label %for.body54, label %for.end55

for.end55:                                        ; preds = %Array_Type____sl__.exit394, %if.entry49
  tail call void @free(ptr nonnull %146)
  br label %common.ret

if.entry60:                                       ; preds = %2
  %169 = tail call ptr @malloc(i32 24)
  %memberidx.i388 = getelementptr inbounds %Array_Type_, ptr %169, i64 0, i32 1
  store i64 0, ptr %memberidx.i388, align 4
  %memberidx1.i389 = getelementptr inbounds %Array_Type_, ptr %169, i64 0, i32 2
  store i64 8, ptr %memberidx1.i389, align 4
  %170 = tail call ptr @malloc(i32 64)
  store ptr %170, ptr %169, align 8
  store i64 0, ptr %memberidx.i388, align 4
  %memberidx65 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 2
  %171 = load ptr, ptr %memberidx65, align 8
  %memberidx66 = getelementptr inbounds %IdentifierToken, ptr %171, i64 0, i32 2
  %172 = load ptr, ptr %memberidx66, align 8
  %173 = tail call ptr @malloc(i32 4)
  store i32 1819242338, ptr %173, align 8
  %174 = tail call ptr @malloc(i32 24)
  store ptr %173, ptr %174, align 8
  %memberidx1.i.i386 = getelementptr inbounds %String, ptr %174, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i386, align 4
  %memberidx2.i.i387 = getelementptr inbounds %String, ptr %174, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i387, align 4
  %memberidx.i380 = getelementptr inbounds %String, ptr %172, i64 0, i32 1
  %175 = load i64, ptr %memberidx.i380, align 4
  %.not.i382 = icmp eq i64 %175, 4
  br i1 %.not.i382, label %ifend.i384, label %ifend69

ifend.i384:                                       ; preds = %if.entry60
  %176 = load ptr, ptr %172, align 8
  %177 = tail call i64 @memcmp(ptr %176, ptr nonnull %173, i64 4)
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %if.entry67, label %ifend69

ifend62:                                          ; preds = %2
  %179 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %179, align 4
  br label %common.ret

if.entry67:                                       ; preds = %ifend.i384
  %180 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %180, align 4
  br label %common.ret

ifend69:                                          ; preds = %if.entry60, %ifend.i384
  %181 = tail call ptr @malloc(i32 2)
  store i16 13429, ptr %181, align 8
  %182 = tail call ptr @malloc(i32 24)
  store ptr %181, ptr %182, align 8
  %memberidx1.i.i378 = getelementptr inbounds %String, ptr %182, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i378, align 4
  %memberidx2.i.i379 = getelementptr inbounds %String, ptr %182, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i379, align 4
  %183 = load i64, ptr %memberidx.i380, align 4
  %.not.i374 = icmp eq i64 %183, 2
  br i1 %.not.i374, label %ifend.i376, label %ifend72

ifend.i376:                                       ; preds = %ifend69
  %184 = load ptr, ptr %172, align 8
  %185 = tail call i64 @memcmp(ptr %184, ptr nonnull %181, i64 2)
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %if.entry70, label %ifend72

if.entry70:                                       ; preds = %ifend.i376
  %187 = tail call ptr @malloc(i32 9)
  store i64 1, ptr %187, align 4
  %memberidx.i371 = getelementptr inbounds %IntType, ptr %187, i64 0, i32 1
  store i1 false, ptr %memberidx.i371, align 1
  br label %common.ret

ifend72:                                          ; preds = %ifend69, %ifend.i376
  %188 = tail call ptr @malloc(i32 2)
  store i16 14453, ptr %188, align 8
  %189 = tail call ptr @malloc(i32 24)
  store ptr %188, ptr %189, align 8
  %memberidx1.i.i369 = getelementptr inbounds %String, ptr %189, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i369, align 4
  %memberidx2.i.i370 = getelementptr inbounds %String, ptr %189, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i370, align 4
  %190 = load i64, ptr %memberidx.i380, align 4
  %.not.i365 = icmp eq i64 %190, 2
  br i1 %.not.i365, label %ifend.i367, label %ifend75

ifend.i367:                                       ; preds = %ifend72
  %191 = load ptr, ptr %172, align 8
  %192 = tail call i64 @memcmp(ptr %191, ptr nonnull %188, i64 2)
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %if.entry73, label %ifend75

if.entry73:                                       ; preds = %ifend.i367
  %194 = tail call ptr @malloc(i32 9)
  store i64 2, ptr %194, align 4
  %memberidx.i362 = getelementptr inbounds %IntType, ptr %194, i64 0, i32 1
  store i1 false, ptr %memberidx.i362, align 1
  br label %common.ret

ifend75:                                          ; preds = %ifend72, %ifend.i367
  %195 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %195, ptr noundef nonnull align 8 dereferenceable(3) @162, i64 3, i1 false)
  %196 = tail call ptr @malloc(i32 24)
  store ptr %195, ptr %196, align 8
  %memberidx1.i.i360 = getelementptr inbounds %String, ptr %196, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i360, align 4
  %memberidx2.i.i361 = getelementptr inbounds %String, ptr %196, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i361, align 4
  %197 = load i64, ptr %memberidx.i380, align 4
  %.not.i356 = icmp eq i64 %197, 3
  br i1 %.not.i356, label %ifend.i358, label %ifend78

ifend.i358:                                       ; preds = %ifend75
  %198 = load ptr, ptr %172, align 8
  %199 = tail call i64 @memcmp(ptr %198, ptr nonnull %195, i64 3)
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %if.entry76, label %ifend78

if.entry76:                                       ; preds = %ifend.i358
  %201 = tail call ptr @malloc(i32 9)
  store i64 3, ptr %201, align 4
  %memberidx.i353 = getelementptr inbounds %IntType, ptr %201, i64 0, i32 1
  store i1 false, ptr %memberidx.i353, align 1
  br label %common.ret

ifend78:                                          ; preds = %ifend75, %ifend.i358
  %202 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %202, ptr noundef nonnull align 8 dereferenceable(3) @163, i64 3, i1 false)
  %203 = tail call ptr @malloc(i32 24)
  store ptr %202, ptr %203, align 8
  %memberidx1.i.i351 = getelementptr inbounds %String, ptr %203, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i351, align 4
  %memberidx2.i.i352 = getelementptr inbounds %String, ptr %203, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i352, align 4
  %204 = load i64, ptr %memberidx.i380, align 4
  %.not.i347 = icmp eq i64 %204, 3
  br i1 %.not.i347, label %ifend.i349, label %ifend81

ifend.i349:                                       ; preds = %ifend78
  %205 = load ptr, ptr %172, align 8
  %206 = tail call i64 @memcmp(ptr %205, ptr nonnull %202, i64 3)
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %if.entry79, label %ifend81

if.entry79:                                       ; preds = %ifend.i349
  %208 = tail call ptr @malloc(i32 9)
  store i64 4, ptr %208, align 4
  %memberidx.i344 = getelementptr inbounds %IntType, ptr %208, i64 0, i32 1
  store i1 false, ptr %memberidx.i344, align 1
  br label %common.ret

ifend81:                                          ; preds = %ifend78, %ifend.i349
  %209 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %209, ptr noundef nonnull align 8 dereferenceable(3) @164, i64 3, i1 false)
  %210 = tail call ptr @malloc(i32 24)
  store ptr %209, ptr %210, align 8
  %memberidx1.i.i342 = getelementptr inbounds %String, ptr %210, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i342, align 4
  %memberidx2.i.i343 = getelementptr inbounds %String, ptr %210, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i343, align 4
  %211 = load i64, ptr %memberidx.i380, align 4
  %.not.i338 = icmp eq i64 %211, 3
  br i1 %.not.i338, label %ifend.i340, label %ifend84

ifend.i340:                                       ; preds = %ifend81
  %212 = load ptr, ptr %172, align 8
  %213 = tail call i64 @memcmp(ptr %212, ptr nonnull %209, i64 3)
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %if.entry82, label %ifend84

if.entry82:                                       ; preds = %ifend.i340
  %215 = tail call ptr @malloc(i32 9)
  store i64 5, ptr %215, align 4
  %memberidx.i335 = getelementptr inbounds %IntType, ptr %215, i64 0, i32 1
  store i1 false, ptr %memberidx.i335, align 1
  br label %common.ret

ifend84:                                          ; preds = %ifend81, %ifend.i340
  %216 = tail call ptr @malloc(i32 4)
  store i32 942813557, ptr %216, align 8
  %217 = tail call ptr @malloc(i32 24)
  store ptr %216, ptr %217, align 8
  %memberidx1.i.i333 = getelementptr inbounds %String, ptr %217, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i333, align 4
  %memberidx2.i.i334 = getelementptr inbounds %String, ptr %217, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i334, align 4
  %218 = load i64, ptr %memberidx.i380, align 4
  %.not.i329 = icmp eq i64 %218, 4
  br i1 %.not.i329, label %ifend.i331, label %ifend87

ifend.i331:                                       ; preds = %ifend84
  %219 = load ptr, ptr %172, align 8
  %220 = tail call i64 @memcmp(ptr %219, ptr nonnull %216, i64 4)
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %if.entry85, label %ifend87

if.entry85:                                       ; preds = %ifend.i331
  %222 = tail call ptr @malloc(i32 9)
  store i64 7, ptr %222, align 4
  %memberidx.i326 = getelementptr inbounds %IntType, ptr %222, i64 0, i32 1
  store i1 false, ptr %memberidx.i326, align 1
  br label %common.ret

ifend87:                                          ; preds = %ifend84, %ifend.i331
  %223 = tail call ptr @malloc(i32 4)
  store i32 1953393013, ptr %223, align 8
  %224 = tail call ptr @malloc(i32 24)
  store ptr %223, ptr %224, align 8
  %memberidx1.i.i324 = getelementptr inbounds %String, ptr %224, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i324, align 4
  %memberidx2.i.i325 = getelementptr inbounds %String, ptr %224, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i325, align 4
  %225 = load i64, ptr %memberidx.i380, align 4
  %.not.i320 = icmp eq i64 %225, 4
  br i1 %.not.i320, label %ifend.i322, label %ifend90

ifend.i322:                                       ; preds = %ifend87
  %226 = load ptr, ptr %172, align 8
  %227 = tail call i64 @memcmp(ptr %226, ptr nonnull %223, i64 4)
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %if.entry88, label %ifend90

if.entry88:                                       ; preds = %ifend.i322
  %229 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %229, align 4
  %memberidx.i317 = getelementptr inbounds %IntType, ptr %229, i64 0, i32 1
  store i1 false, ptr %memberidx.i317, align 1
  br label %common.ret

ifend90:                                          ; preds = %ifend87, %ifend.i322
  %230 = tail call ptr @malloc(i32 2)
  store i16 13417, ptr %230, align 8
  %231 = tail call ptr @malloc(i32 24)
  store ptr %230, ptr %231, align 8
  %memberidx1.i.i315 = getelementptr inbounds %String, ptr %231, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i315, align 4
  %memberidx2.i.i316 = getelementptr inbounds %String, ptr %231, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i316, align 4
  %232 = load i64, ptr %memberidx.i380, align 4
  %.not.i311 = icmp eq i64 %232, 2
  br i1 %.not.i311, label %ifend.i313, label %ifend93

ifend.i313:                                       ; preds = %ifend90
  %233 = load ptr, ptr %172, align 8
  %234 = tail call i64 @memcmp(ptr %233, ptr nonnull %230, i64 2)
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %if.entry91, label %ifend93

if.entry91:                                       ; preds = %ifend.i313
  %236 = tail call ptr @malloc(i32 9)
  store i64 1, ptr %236, align 4
  %memberidx.i308 = getelementptr inbounds %IntType, ptr %236, i64 0, i32 1
  store i1 true, ptr %memberidx.i308, align 1
  br label %common.ret

ifend93:                                          ; preds = %ifend90, %ifend.i313
  %237 = tail call ptr @malloc(i32 2)
  store i16 14441, ptr %237, align 8
  %238 = tail call ptr @malloc(i32 24)
  store ptr %237, ptr %238, align 8
  %memberidx1.i.i306 = getelementptr inbounds %String, ptr %238, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i306, align 4
  %memberidx2.i.i307 = getelementptr inbounds %String, ptr %238, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i307, align 4
  %239 = load i64, ptr %memberidx.i380, align 4
  %.not.i302 = icmp eq i64 %239, 2
  br i1 %.not.i302, label %ifend.i304, label %ifend96

ifend.i304:                                       ; preds = %ifend93
  %240 = load ptr, ptr %172, align 8
  %241 = tail call i64 @memcmp(ptr %240, ptr nonnull %237, i64 2)
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %if.entry94, label %ifend96

if.entry94:                                       ; preds = %ifend.i304
  %243 = tail call ptr @malloc(i32 9)
  store i64 2, ptr %243, align 4
  %memberidx.i299 = getelementptr inbounds %IntType, ptr %243, i64 0, i32 1
  store i1 true, ptr %memberidx.i299, align 1
  br label %common.ret

ifend96:                                          ; preds = %ifend93, %ifend.i304
  %244 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %244, ptr noundef nonnull align 8 dereferenceable(3) @165, i64 3, i1 false)
  %245 = tail call ptr @malloc(i32 24)
  store ptr %244, ptr %245, align 8
  %memberidx1.i.i297 = getelementptr inbounds %String, ptr %245, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i297, align 4
  %memberidx2.i.i298 = getelementptr inbounds %String, ptr %245, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i298, align 4
  %246 = load i64, ptr %memberidx.i380, align 4
  %.not.i293 = icmp eq i64 %246, 3
  br i1 %.not.i293, label %ifend.i295, label %ifend99

ifend.i295:                                       ; preds = %ifend96
  %247 = load ptr, ptr %172, align 8
  %248 = tail call i64 @memcmp(ptr %247, ptr nonnull %244, i64 3)
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %if.entry97, label %ifend99

if.entry97:                                       ; preds = %ifend.i295
  %250 = tail call ptr @malloc(i32 9)
  store i64 3, ptr %250, align 4
  %memberidx.i290 = getelementptr inbounds %IntType, ptr %250, i64 0, i32 1
  store i1 true, ptr %memberidx.i290, align 1
  br label %common.ret

ifend99:                                          ; preds = %ifend96, %ifend.i295
  %251 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %251, ptr noundef nonnull align 8 dereferenceable(3) @166, i64 3, i1 false)
  %252 = tail call ptr @malloc(i32 24)
  store ptr %251, ptr %252, align 8
  %memberidx1.i.i288 = getelementptr inbounds %String, ptr %252, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i288, align 4
  %memberidx2.i.i289 = getelementptr inbounds %String, ptr %252, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i289, align 4
  %253 = load i64, ptr %memberidx.i380, align 4
  %.not.i284 = icmp eq i64 %253, 3
  br i1 %.not.i284, label %ifend.i286, label %ifend102

ifend.i286:                                       ; preds = %ifend99
  %254 = load ptr, ptr %172, align 8
  %255 = tail call i64 @memcmp(ptr %254, ptr nonnull %251, i64 3)
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %if.entry100, label %ifend102

if.entry100:                                      ; preds = %ifend.i286
  %257 = tail call ptr @malloc(i32 9)
  store i64 4, ptr %257, align 4
  %memberidx.i281 = getelementptr inbounds %IntType, ptr %257, i64 0, i32 1
  store i1 true, ptr %memberidx.i281, align 1
  br label %common.ret

ifend102:                                         ; preds = %ifend99, %ifend.i286
  %258 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %258, ptr noundef nonnull align 8 dereferenceable(3) @167, i64 3, i1 false)
  %259 = tail call ptr @malloc(i32 24)
  store ptr %258, ptr %259, align 8
  %memberidx1.i.i279 = getelementptr inbounds %String, ptr %259, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i279, align 4
  %memberidx2.i.i280 = getelementptr inbounds %String, ptr %259, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i280, align 4
  %260 = load i64, ptr %memberidx.i380, align 4
  %.not.i275 = icmp eq i64 %260, 3
  br i1 %.not.i275, label %ifend.i277, label %ifend105

ifend.i277:                                       ; preds = %ifend102
  %261 = load ptr, ptr %172, align 8
  %262 = tail call i64 @memcmp(ptr %261, ptr nonnull %258, i64 3)
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %if.entry103, label %ifend105

if.entry103:                                      ; preds = %ifend.i277
  %264 = tail call ptr @malloc(i32 9)
  store i64 5, ptr %264, align 4
  %memberidx.i272 = getelementptr inbounds %IntType, ptr %264, i64 0, i32 1
  store i1 true, ptr %memberidx.i272, align 1
  br label %common.ret

ifend105:                                         ; preds = %ifend102, %ifend.i277
  %265 = tail call ptr @malloc(i32 4)
  store i32 942813545, ptr %265, align 8
  %266 = tail call ptr @malloc(i32 24)
  store ptr %265, ptr %266, align 8
  %memberidx1.i.i270 = getelementptr inbounds %String, ptr %266, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i270, align 4
  %memberidx2.i.i271 = getelementptr inbounds %String, ptr %266, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i271, align 4
  %267 = load i64, ptr %memberidx.i380, align 4
  %.not.i266 = icmp eq i64 %267, 4
  br i1 %.not.i266, label %ifend.i268, label %ifend108

ifend.i268:                                       ; preds = %ifend105
  %268 = load ptr, ptr %172, align 8
  %269 = tail call i64 @memcmp(ptr %268, ptr nonnull %265, i64 4)
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %if.entry106, label %ifend108

if.entry106:                                      ; preds = %ifend.i268
  %271 = tail call ptr @malloc(i32 9)
  store i64 7, ptr %271, align 4
  %memberidx.i263 = getelementptr inbounds %IntType, ptr %271, i64 0, i32 1
  store i1 true, ptr %memberidx.i263, align 1
  br label %common.ret

ifend108:                                         ; preds = %ifend105, %ifend.i268
  %272 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %272, ptr noundef nonnull align 8 dereferenceable(3) @88, i64 3, i1 false)
  %273 = tail call ptr @malloc(i32 24)
  store ptr %272, ptr %273, align 8
  %memberidx1.i.i261 = getelementptr inbounds %String, ptr %273, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i261, align 4
  %memberidx2.i.i262 = getelementptr inbounds %String, ptr %273, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i262, align 4
  %274 = load i64, ptr %memberidx.i380, align 4
  %.not.i257 = icmp eq i64 %274, 3
  br i1 %.not.i257, label %ifend.i259, label %ifend111

ifend.i259:                                       ; preds = %ifend108
  %275 = load ptr, ptr %172, align 8
  %276 = tail call i64 @memcmp(ptr %275, ptr nonnull %272, i64 3)
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %if.entry109, label %ifend111

if.entry109:                                      ; preds = %ifend.i259
  %278 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %278, align 4
  %memberidx.i254 = getelementptr inbounds %IntType, ptr %278, i64 0, i32 1
  store i1 true, ptr %memberidx.i254, align 1
  br label %common.ret

ifend111:                                         ; preds = %ifend108, %ifend.i259
  %279 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %279, ptr noundef nonnull align 8 dereferenceable(3) @95, i64 3, i1 false)
  %280 = tail call ptr @malloc(i32 24)
  store ptr %279, ptr %280, align 8
  %memberidx1.i.i252 = getelementptr inbounds %String, ptr %280, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i252, align 4
  %memberidx2.i.i253 = getelementptr inbounds %String, ptr %280, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i253, align 4
  %281 = load i64, ptr %memberidx.i380, align 4
  %.not.i248 = icmp eq i64 %281, 3
  br i1 %.not.i248, label %ifend.i250, label %ifend114

ifend.i250:                                       ; preds = %ifend111
  %282 = load ptr, ptr %172, align 8
  %283 = tail call i64 @memcmp(ptr %282, ptr nonnull %279, i64 3)
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %if.entry112, label %ifend114

if.entry112:                                      ; preds = %ifend.i250
  %285 = tail call ptr @malloc(i32 8)
  store i64 8, ptr %285, align 4
  br label %common.ret

ifend114:                                         ; preds = %ifend111, %ifend.i250
  %286 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %286, ptr noundef nonnull align 8 dereferenceable(3) @96, i64 3, i1 false)
  %287 = tail call ptr @malloc(i32 24)
  store ptr %286, ptr %287, align 8
  %memberidx1.i.i244 = getelementptr inbounds %String, ptr %287, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i244, align 4
  %memberidx2.i.i245 = getelementptr inbounds %String, ptr %287, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i245, align 4
  %288 = load i64, ptr %memberidx.i380, align 4
  %.not.i240 = icmp eq i64 %288, 3
  br i1 %.not.i240, label %ifend.i242, label %ifend117

ifend.i242:                                       ; preds = %ifend114
  %289 = load ptr, ptr %172, align 8
  %290 = tail call i64 @memcmp(ptr %289, ptr nonnull %286, i64 3)
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %if.entry115, label %ifend117

if.entry115:                                      ; preds = %ifend.i242
  %292 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %292, align 4
  br label %common.ret

ifend117:                                         ; preds = %ifend114, %ifend.i242
  %293 = tail call ptr @malloc(i32 4)
  store i32 1684631414, ptr %293, align 8
  %294 = tail call ptr @malloc(i32 24)
  store ptr %293, ptr %294, align 8
  %memberidx1.i.i236 = getelementptr inbounds %String, ptr %294, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i236, align 4
  %memberidx2.i.i237 = getelementptr inbounds %String, ptr %294, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i237, align 4
  %295 = load i64, ptr %memberidx.i380, align 4
  %.not.i = icmp eq i64 %295, 4
  br i1 %.not.i, label %ifend.i, label %ifend120

ifend.i:                                          ; preds = %ifend117
  %296 = load ptr, ptr %172, align 8
  %297 = tail call i64 @memcmp(ptr %296, ptr nonnull %293, i64 4)
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %if.entry118, label %ifend120

if.entry118:                                      ; preds = %ifend.i
  %299 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %299, align 4
  br label %common.ret

ifend120:                                         ; preds = %ifend117, %ifend.i
  %memberidx121 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 3
  %300 = load ptr, ptr %memberidx121, align 8
  %memberidx122 = getelementptr inbounds %Array_TypeNode_, ptr %300, i64 0, i32 1
  %301 = load i64, ptr %memberidx122, align 4
  %302 = icmp sgt i64 %301, 0
  br i1 %302, label %for.entry126, label %ifend125

ifend125:                                         ; preds = %ifend138, %ifend120
  %303 = load ptr, ptr %memberidx66, align 8
  %304 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %303)
  %305 = load i64, ptr %304, align 4
  %306 = icmp eq i64 %305, 21
  br i1 %306, label %if.entry148, label %common.ret

for.entry126:                                     ; preds = %ifend120
  %307 = tail call ptr @malloc(i32 25)
  %308 = load ptr, ptr %300, align 8
  %309 = load i64, ptr %memberidx122, align 4
  store i1 false, ptr %307, align 1
  %memberidx1.i.i232 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %307, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i232, align 4
  %memberidx2.i.i233 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %307, i64 0, i32 3
  store ptr %308, ptr %memberidx2.i.i233, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %307, i64 0, i32 2
  store i64 %309, ptr %memberidx3.i.i, align 4
  %310 = icmp slt i64 %309, 1
  br i1 %310, label %for.end129, label %for.body128

for.body128:                                      ; preds = %for.entry126, %Array_Type____sl__.exit
  %.in = phi ptr [ %329, %Array_Type____sl__.exit ], [ %308, %for.entry126 ]
  %311 = phi i64 [ %328, %Array_Type____sl__.exit ], [ 1, %for.entry126 ]
  %312 = load ptr, ptr %.in, align 8
  %313 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %312)
  %314 = load i64, ptr %memberidx.i388, align 4
  %315 = add i64 %314, 1
  %316 = load i64, ptr %memberidx1.i389, align 4
  %317 = icmp slt i64 %316, %315
  %.pre = load ptr, ptr %169, align 8
  br i1 %317, label %while.body.i.i, label %Array_Type____sl__.exit

while.body.i.i:                                   ; preds = %for.body128, %while.body.i.i
  %318 = phi ptr [ %322, %while.body.i.i ], [ %.pre, %for.body128 ]
  %319 = phi i64 [ %323, %while.body.i.i ], [ %316, %for.body128 ]
  %320 = shl nuw i64 %319, 1
  store i64 %320, ptr %memberidx1.i389, align 4
  %321 = shl i64 %319, 4
  %322 = tail call ptr @realloc(ptr %318, i64 %321)
  store ptr %322, ptr %169, align 8
  %323 = load i64, ptr %memberidx1.i389, align 4
  %324 = icmp slt i64 %323, %315
  br i1 %324, label %while.body.i.i, label %Array_Type____sl__.exit.loopexit

Array_Type____sl__.exit.loopexit:                 ; preds = %while.body.i.i
  %.pre519 = load i64, ptr %memberidx.i388, align 4
  %.pre555 = add nsw i64 %.pre519, 1
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %for.body128, %Array_Type____sl__.exit.loopexit
  %.pre-phi556 = phi i64 [ %.pre555, %Array_Type____sl__.exit.loopexit ], [ %315, %for.body128 ]
  %325 = phi ptr [ %322, %Array_Type____sl__.exit.loopexit ], [ %.pre, %for.body128 ]
  %326 = phi i64 [ %.pre519, %Array_Type____sl__.exit.loopexit ], [ %314, %for.body128 ]
  store i64 %.pre-phi556, ptr %memberidx.i388, align 4
  %327 = getelementptr inbounds ptr, ptr %325, i64 %326
  store ptr %313, ptr %327, align 8
  %328 = add nuw nsw i64 %311, 1
  %329 = getelementptr inbounds ptr, ptr %308, i64 %311
  %.not557 = icmp slt i64 %311, %309
  br i1 %.not557, label %for.body128, label %for.end129

for.end129:                                       ; preds = %Array_Type____sl__.exit, %for.entry126
  tail call void @free(ptr nonnull %307)
  %memberidx.i224 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %330 = load ptr, ptr %memberidx.i224, align 8
  %memberidx1.i225 = getelementptr inbounds %Compiler, ptr %330, i64 0, i32 5
  %331 = load ptr, ptr %memberidx1.i225, align 8
  %memberidx2.i226 = getelementptr inbounds %Array_FloError_, ptr %331, i64 0, i32 1
  %332 = load i64, ptr %memberidx2.i226, align 4
  %333 = icmp sgt i64 %332, 0
  br i1 %333, label %common.ret, label %ifend134

ifend134:                                         ; preds = %for.end129
  %334 = load ptr, ptr %memberidx66, align 8
  %335 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr nonnull %0, ptr %334, ptr nonnull %169)
  %336 = load ptr, ptr %memberidx.i224, align 8
  %memberidx1.i222 = getelementptr inbounds %Compiler, ptr %336, i64 0, i32 5
  %337 = load ptr, ptr %memberidx1.i222, align 8
  %memberidx2.i223 = getelementptr inbounds %Array_FloError_, ptr %337, i64 0, i32 1
  %338 = load i64, ptr %memberidx2.i223, align 4
  %339 = icmp sgt i64 %338, 0
  br i1 %339, label %if.entry136, label %ifend138

if.entry136:                                      ; preds = %ifend134
  %340 = load ptr, ptr %337, align 8
  %341 = load ptr, ptr %340, align 8
  %memberidx141 = getelementptr inbounds %FloError, ptr %341, i64 0, i32 2
  %342 = load ptr, ptr %1, align 8
  store ptr %342, ptr %memberidx141, align 8
  br label %ifend138

ifend138:                                         ; preds = %ifend134, %if.entry136
  %.not = icmp eq ptr %335, null
  br i1 %.not, label %ifend125, label %common.ret

if.entry148:                                      ; preds = %ifend125
  %343 = load i64, ptr %memberidx.i380, align 4
  %344 = trunc i64 %343 to i32
  %345 = add i32 %344, 1
  %346 = tail call ptr @malloc(i32 %345)
  %347 = load ptr, ptr %172, align 8
  %348 = load i64, ptr %memberidx.i380, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %346, ptr align 8 %347, i64 %348, i1 false)
  %349 = getelementptr inbounds i8, ptr %346, i64 %348
  store i8 0, ptr %349, align 1
  %350 = alloca ptr, align 8
  %351 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %350, ptr nonnull @168, ptr %346)
  %352 = load ptr, ptr %350, align 8
  %353 = tail call ptr @malloc(i32 24)
  store ptr %352, ptr %353, align 8
  %memberidx1.i219 = getelementptr inbounds %String, ptr %353, i64 0, i32 1
  store i64 %351, ptr %memberidx1.i219, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %353, i64 0, i32 2
  store i64 %351, ptr %memberidx2.i, align 4
  tail call void @free(ptr %346)
  %memberidx151 = getelementptr inbounds %Token, ptr %171, i64 0, i32 1
  %354 = load ptr, ptr %memberidx151, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %355 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %355, i64 0, i32 5
  %356 = load ptr, ptr %memberidx1.i, align 8
  %357 = call ptr @malloc(i32 24)
  store i64 5, ptr %357, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %357, i64 0, i32 2
  store ptr %354, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %357, i64 0, i32 1
  store ptr %353, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %356, i64 0, i32 1
  %358 = load i64, ptr %memberidx.i.i, align 4
  %359 = add i64 %358, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %356, i64 0, i32 2
  %360 = load i64, ptr %memberidx.i.i.i, align 4
  %361 = icmp slt i64 %360, %359
  %.pre521 = load ptr, ptr %356, align 8
  br i1 %361, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry148, %while.body.i.i.i
  %362 = phi ptr [ %366, %while.body.i.i.i ], [ %.pre521, %if.entry148 ]
  %363 = phi i64 [ %367, %while.body.i.i.i ], [ %360, %if.entry148 ]
  %364 = shl nuw i64 %363, 1
  store i64 %364, ptr %memberidx.i.i.i, align 4
  %365 = shl i64 %363, 4
  %366 = call ptr @realloc(ptr %362, i64 %365)
  store ptr %366, ptr %356, align 8
  %367 = load i64, ptr %memberidx.i.i.i, align 4
  %368 = icmp slt i64 %367, %359
  br i1 %368, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre522 = load i64, ptr %memberidx.i.i, align 4
  %.pre553 = add nsw i64 %.pre522, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry148, %TypeChecker_error.exit.loopexit
  %.pre-phi554 = phi i64 [ %.pre553, %TypeChecker_error.exit.loopexit ], [ %359, %if.entry148 ]
  %369 = phi ptr [ %366, %TypeChecker_error.exit.loopexit ], [ %.pre521, %if.entry148 ]
  %370 = phi i64 [ %.pre522, %TypeChecker_error.exit.loopexit ], [ %358, %if.entry148 ]
  store i64 %.pre-phi554, ptr %memberidx.i.i, align 4
  %371 = getelementptr inbounds ptr, ptr %369, i64 %370
  store ptr %357, ptr %371, align 8
  br label %common.ret
}

define internal fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry30, %3
  %accumulator.tr.ph = phi i1 [ %38, %if.entry30 ], [ true, %3 ]
  %.tr210.ph = phi ptr [ %36, %if.entry30 ], [ %1, %3 ]
  %.tr211.ph = phi ptr [ %37, %if.entry30 ], [ %2, %3 ]
  br label %tailrecurse.outer215

tailrecurse.outer215:                             ; preds = %tailrecurse.outer, %if.entry59
  %.tr210.ph216 = phi ptr [ %.tr210.ph, %tailrecurse.outer ], [ %59, %if.entry59 ]
  %.tr211.ph217 = phi ptr [ %.tr211.ph, %tailrecurse.outer ], [ %60, %if.entry59 ]
  %memberidx9 = getelementptr inbounds %FunctionType, ptr %.tr210.ph216, i64 0, i32 1
  %memberidx17 = getelementptr inbounds %FunctionType, ptr %.tr210.ph216, i64 0, i32 2
  %.pre = load i64, ptr %.tr210.ph216, align 4
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer215, %ifend78
  %4 = phi i64 [ %43, %ifend78 ], [ %.pre, %tailrecurse.outer215 ]
  %5 = phi i64 [ 11, %ifend78 ], [ %.pre, %tailrecurse.outer215 ]
  %.tr211 = phi ptr [ %83, %ifend78 ], [ %.tr211.ph217, %tailrecurse.outer215 ]
  %6 = load i64, ptr %.tr211, align 4
  %.not = icmp eq i64 %5, %6
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %ifend78, %if.entry65, %if.entry38, %ifend15, %if.entry6, %tailrecurse, %for.body, %for.body50, %for.body109, %if.entry92, %if.entry119, %ifend94, %ifend99, %ifend.i.i, %if.entry86
  %common.ret.op = phi i1 [ %86, %if.entry86 ], [ false, %ifend.i.i ], [ false, %ifend99 ], [ true, %ifend94 ], [ %not., %if.entry119 ], [ false, %if.entry92 ], [ false, %for.body109 ], [ false, %for.body50 ], [ false, %for.body ], [ false, %tailrecurse ], [ false, %if.entry6 ], [ false, %ifend15 ], [ false, %if.entry38 ], [ true, %if.entry65 ], [ false, %ifend78 ]
  %accumulator.ret.tr = and i1 %accumulator.tr.ph, %common.ret.op
  ret i1 %accumulator.ret.tr

ifend:                                            ; preds = %tailrecurse
  %7 = icmp eq i64 %5, 16
  br i1 %7, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend
  %8 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Type_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx10, align 4
  %memberidx11 = getelementptr inbounds %FunctionType, ptr %.tr211, i64 0, i32 1
  %10 = load ptr, ptr %memberidx11, align 8
  %memberidx12 = getelementptr inbounds %Array_Type_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx12, align 4
  %.not186 = icmp eq i64 %9, %11
  br i1 %.not186, label %ifend15, label %common.ret

ifend8:                                           ; preds = %ifend, %for.end
  %12 = phi i64 [ %4, %ifend ], [ %.pr, %for.end ]
  %13 = phi i64 [ %5, %ifend ], [ %.pr, %for.end ]
  switch i64 %13, label %ifend40 [
    i64 14, label %if.entry30
    i64 15, label %if.entry38
  ]

ifend15:                                          ; preds = %if.entry6
  %memberidx16 = getelementptr inbounds %FunctionType, ptr %.tr211, i64 0, i32 2
  %14 = load ptr, ptr %memberidx16, align 8
  %15 = load ptr, ptr %memberidx17, align 8
  %16 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %14, ptr %15)
  br i1 %16, label %for.entry, label %common.ret

for.entry:                                        ; preds = %ifend15
  %17 = load ptr, ptr %memberidx9, align 8
  %memberidx22 = getelementptr inbounds %Array_Type_, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx22, align 4
  %19 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %19, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %19, i64 0, i32 1
  store i64 %18, ptr %memberidx1.i, align 4
  %20 = tail call ptr @malloc(i32 17)
  %memberidx.i.i = getelementptr inbounds %RangeIterator, ptr %20, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %RangeIterator, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i, align 4
  br label %for.next

for.next:                                         ; preds = %for.body, %for.entry
  %21 = phi i64 [ %23, %for.body ], [ 0, %for.entry ]
  %22 = icmp sge i64 %21, %18
  store i1 %22, ptr %20, align 1
  %23 = add nuw nsw i64 %21, 1
  store i64 %23, ptr %memberidx.i.i, align 4
  br i1 %22, label %for.end, label %for.body

for.body:                                         ; preds = %for.next
  %24 = load ptr, ptr %memberidx9, align 8
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %21
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr %memberidx11, align 8
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds ptr, ptr %29, i64 %21
  %31 = load ptr, ptr %30, align 8
  %32 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %27, ptr %31)
  br i1 %32, label %for.next, label %common.ret

for.end:                                          ; preds = %for.next
  tail call void @free(ptr nonnull %20)
  %.pr = load i64, ptr %.tr210.ph216, align 4
  br label %ifend8

if.entry30:                                       ; preds = %ifend8
  %33 = load i64, ptr %memberidx17, align 4
  %memberidx34 = getelementptr inbounds %ArrayType, ptr %.tr211, i64 0, i32 2
  %34 = load i64, ptr %memberidx34, align 4
  %35 = icmp eq i64 %33, %34
  %36 = load ptr, ptr %memberidx9, align 8
  %memberidx36 = getelementptr inbounds %ArrayType, ptr %.tr211, i64 0, i32 1
  %37 = load ptr, ptr %memberidx36, align 8
  %38 = and i1 %accumulator.tr.ph, %35
  br label %tailrecurse.outer

if.entry38:                                       ; preds = %ifend8
  %39 = load ptr, ptr %memberidx9, align 8
  %memberidx42 = getelementptr inbounds %Array_Type_, ptr %39, i64 0, i32 1
  %40 = load i64, ptr %memberidx42, align 4
  %memberidx43 = getelementptr inbounds %TupleType, ptr %.tr211, i64 0, i32 1
  %41 = load ptr, ptr %memberidx43, align 8
  %memberidx44 = getelementptr inbounds %Array_Type_, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx44, align 4
  %.not185 = icmp eq i64 %40, %42
  br i1 %.not185, label %for.entry48, label %common.ret

ifend40:                                          ; preds = %ifend8, %for.end51
  %43 = phi i64 [ %12, %ifend8 ], [ %.pre265, %for.end51 ]
  %44 = phi i64 [ %13, %ifend8 ], [ %.pre265, %for.end51 ]
  switch i64 %44, label %ifend94 [
    i64 13, label %if.entry59
    i64 11, label %if.entry65
    i64 12, label %if.entry86
    i64 20, label %if.entry92
  ]

for.entry48:                                      ; preds = %if.entry38
  %45 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %45, align 4
  %memberidx1.i193 = getelementptr inbounds %Range, ptr %45, i64 0, i32 1
  store i64 %40, ptr %memberidx1.i193, align 4
  %46 = tail call ptr @malloc(i32 17)
  %memberidx.i.i200 = getelementptr inbounds %RangeIterator, ptr %46, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i200, align 4
  %memberidx1.i.i201 = getelementptr inbounds %RangeIterator, ptr %46, i64 0, i32 2
  store i64 %40, ptr %memberidx1.i.i201, align 4
  br label %for.next49

for.next49:                                       ; preds = %for.body50, %for.entry48
  %47 = phi i64 [ %49, %for.body50 ], [ 0, %for.entry48 ]
  %48 = icmp sge i64 %47, %40
  store i1 %48, ptr %46, align 1
  %49 = add nuw nsw i64 %47, 1
  store i64 %49, ptr %memberidx.i.i200, align 4
  br i1 %48, label %for.end51, label %for.body50

for.body50:                                       ; preds = %for.next49
  %50 = load ptr, ptr %memberidx9, align 8
  %51 = load ptr, ptr %50, align 8
  %52 = getelementptr inbounds ptr, ptr %51, i64 %47
  %53 = load ptr, ptr %52, align 8
  %54 = load ptr, ptr %memberidx43, align 8
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 %47
  %57 = load ptr, ptr %56, align 8
  %58 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %53, ptr %57)
  br i1 %58, label %for.next49, label %common.ret

for.end51:                                        ; preds = %for.next49
  tail call void @free(ptr nonnull %46)
  %.pre265 = load i64, ptr %.tr210.ph216, align 4
  br label %ifend40

if.entry59:                                       ; preds = %ifend40
  %59 = load ptr, ptr %memberidx9, align 8
  %memberidx63 = getelementptr inbounds %PointerType, ptr %.tr211, i64 0, i32 1
  %60 = load ptr, ptr %memberidx63, align 8
  br label %tailrecurse.outer215

if.entry65:                                       ; preds = %ifend40
  %61 = load ptr, ptr %memberidx9, align 8
  %memberidx69 = getelementptr inbounds %ObjectType, ptr %.tr211, i64 0, i32 1
  %62 = load ptr, ptr %memberidx69, align 8
  %memberidx70 = getelementptr inbounds %TypeId, ptr %61, i64 0, i32 1
  %63 = load i64, ptr %memberidx70, align 4
  %memberidx71 = getelementptr inbounds %TypeId, ptr %62, i64 0, i32 1
  %64 = load i64, ptr %memberidx71, align 4
  %65 = icmp eq i64 %63, %64
  %66 = load i64, ptr %61, align 4
  %67 = load i64, ptr %62, align 4
  %68 = icmp eq i64 %66, %67
  %69 = and i1 %65, %68
  %memberidx74 = getelementptr inbounds %TypeId, ptr %61, i64 0, i32 2
  %70 = load i64, ptr %memberidx74, align 4
  %memberidx75 = getelementptr inbounds %TypeId, ptr %62, i64 0, i32 2
  %71 = load i64, ptr %memberidx75, align 4
  %72 = icmp eq i64 %70, %71
  %73 = and i1 %69, %72
  br i1 %73, label %common.ret, label %ifend78

ifend78:                                          ; preds = %if.entry65
  %74 = load ptr, ptr %0, align 8
  %75 = load ptr, ptr %74, align 8
  %76 = load ptr, ptr %75, align 8
  %77 = getelementptr inbounds ptr, ptr %76, i64 %67
  %78 = load ptr, ptr %77, align 8
  %memberidx2.i194 = getelementptr inbounds %Module, ptr %78, i64 0, i32 3
  %79 = load ptr, ptr %memberidx2.i194, align 8
  %80 = load ptr, ptr %79, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %71
  %82 = load ptr, ptr %81, align 8
  %memberidx80 = getelementptr inbounds %Class, ptr %82, i64 0, i32 2
  %83 = load ptr, ptr %memberidx80, align 8
  %.not184 = icmp eq ptr %83, null
  br i1 %.not184, label %common.ret, label %tailrecurse

if.entry86:                                       ; preds = %ifend40
  %84 = load ptr, ptr %memberidx9, align 8
  %memberidx90 = getelementptr inbounds %EnumType, ptr %.tr211, i64 0, i32 1
  %85 = load ptr, ptr %memberidx90, align 8
  %86 = icmp eq ptr %84, %85
  br label %common.ret

if.entry92:                                       ; preds = %ifend40
  %87 = load ptr, ptr %memberidx9, align 8
  %memberidx96 = getelementptr inbounds %GenericType, ptr %.tr211, i64 0, i32 1
  %88 = load ptr, ptr %memberidx96, align 8
  %memberidx.i.i191 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  %89 = load i64, ptr %memberidx.i.i191, align 4
  %memberidx1.i.i192 = getelementptr inbounds %String, ptr %88, i64 0, i32 1
  %90 = load i64, ptr %memberidx1.i.i192, align 4
  %.not.i.i = icmp eq i64 %89, %90
  br i1 %.not.i.i, label %ifend.i.i, label %common.ret

ifend.i.i:                                        ; preds = %if.entry92
  %91 = load ptr, ptr %87, align 8
  %92 = load ptr, ptr %88, align 8
  %93 = tail call i64 @memcmp(ptr %91, ptr %92, i64 %89)
  %.not209 = icmp eq i64 %93, 0
  br i1 %.not209, label %ifend99, label %common.ret

ifend94:                                          ; preds = %ifend40, %for.end110
  %94 = phi i64 [ %.pre266, %for.end110 ], [ %43, %ifend40 ]
  %95 = add i64 %94, -1
  %96 = icmp ult i64 %95, 7
  br i1 %96, label %if.entry119, label %common.ret

ifend99:                                          ; preds = %ifend.i.i
  %97 = load ptr, ptr %memberidx17, align 8
  %memberidx101 = getelementptr inbounds %Array_Type_, ptr %97, i64 0, i32 1
  %98 = load i64, ptr %memberidx101, align 4
  %memberidx102 = getelementptr inbounds %GenericType, ptr %.tr211, i64 0, i32 2
  %99 = load ptr, ptr %memberidx102, align 8
  %memberidx103 = getelementptr inbounds %Array_Type_, ptr %99, i64 0, i32 1
  %100 = load i64, ptr %memberidx103, align 4
  %.not183 = icmp eq i64 %98, %100
  br i1 %.not183, label %for.entry107, label %common.ret

for.entry107:                                     ; preds = %ifend99
  %101 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %101, align 4
  %memberidx1.i195 = getelementptr inbounds %Range, ptr %101, i64 0, i32 1
  store i64 %98, ptr %memberidx1.i195, align 4
  %102 = tail call ptr @malloc(i32 17)
  %memberidx.i.i197 = getelementptr inbounds %RangeIterator, ptr %102, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i197, align 4
  %memberidx1.i.i198 = getelementptr inbounds %RangeIterator, ptr %102, i64 0, i32 2
  store i64 %98, ptr %memberidx1.i.i198, align 4
  br label %for.next108

for.next108:                                      ; preds = %for.body109, %for.entry107
  %103 = phi i64 [ %105, %for.body109 ], [ 0, %for.entry107 ]
  %104 = icmp sge i64 %103, %98
  store i1 %104, ptr %102, align 1
  %105 = add nuw nsw i64 %103, 1
  store i64 %105, ptr %memberidx.i.i197, align 4
  br i1 %104, label %for.end110, label %for.body109

for.body109:                                      ; preds = %for.next108
  %106 = load ptr, ptr %memberidx17, align 8
  %107 = load ptr, ptr %106, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %103
  %109 = load ptr, ptr %108, align 8
  %110 = load ptr, ptr %memberidx102, align 8
  %111 = load ptr, ptr %110, align 8
  %112 = getelementptr inbounds ptr, ptr %111, i64 %103
  %113 = load ptr, ptr %112, align 8
  %114 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %109, ptr %113)
  br i1 %114, label %for.next108, label %common.ret

for.end110:                                       ; preds = %for.next108
  tail call void @free(ptr nonnull %102)
  %.pre266 = load i64, ptr %.tr210.ph216, align 4
  br label %ifend94

if.entry119:                                      ; preds = %ifend94
  %115 = load i1, ptr %memberidx9, align 1
  %memberidx123 = getelementptr inbounds %IntType, ptr %.tr211, i64 0, i32 1
  %116 = load i1, ptr %memberidx123, align 1
  %117 = xor i1 %115, %116
  %not. = xor i1 %117, true
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_scope(ptr nocapture readonly %0, i64 %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i64 %1
  %7 = load ptr, ptr %6, align 8
  %8 = tail call ptr @malloc(i32 64)
  %memberidx = getelementptr inbounds %Module, ptr %7, i64 0, i32 7
  %9 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx1, align 4
  %11 = tail call ptr @malloc(i32 16)
  store i64 %1, ptr %11, align 4
  %memberidx1.i.i = getelementptr inbounds %ScopeId, ptr %11, i64 0, i32 1
  store i64 %10, ptr %memberidx1.i.i, align 4
  store ptr %11, ptr %8, align 8
  %12 = tail call ptr @malloc(i32 24)
  %13 = tail call ptr @malloc(i32 2048)
  store ptr %13, ptr %12, align 8
  %14 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %14, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Range, ptr %14, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i.i, align 4
  %15 = tail call ptr @malloc(i32 17)
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %16 = phi i64 [ 1, %2 ], [ %21, %for.body.i.i ]
  %17 = phi i64 [ 0, %2 ], [ %16, %for.body.i.i ]
  %18 = load ptr, ptr %12, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  store ptr null, ptr %19, align 8
  %20 = icmp ugt i64 %16, 255
  %21 = add nuw nsw i64 %16, 1
  br i1 %20, label %for.body.i25.i.lr.ph, label %for.body.i.i

for.body.i25.i.lr.ph:                             ; preds = %for.body.i.i
  %memberidx1.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 1
  tail call void @free(ptr nonnull %15)
  %memberidx3.i.i = getelementptr inbounds %Map_String_VarId_, ptr %12, i64 0, i32 1
  store i64 256, ptr %memberidx3.i.i, align 4
  %memberidx4.i.i = getelementptr inbounds %Map_String_VarId_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx4.i.i, align 4
  store ptr %12, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 2
  %22 = tail call ptr @malloc(i32 24)
  %23 = tail call ptr @malloc(i32 2048)
  store ptr %23, ptr %22, align 8
  %24 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %24, align 4
  %memberidx1.i.i18.i = getelementptr inbounds %Range, ptr %24, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i18.i, align 4
  %25 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i20.i = getelementptr inbounds %RangeIterator, ptr %25, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i20.i, align 4
  %memberidx1.i.i.i21.i = getelementptr inbounds %RangeIterator, ptr %25, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i21.i, align 4
  br label %for.body.i25.i

for.body.i25.i:                                   ; preds = %for.body.i25.i.lr.ph, %for.body.i25.i
  %26 = phi i64 [ 1, %for.body.i25.i.lr.ph ], [ %31, %for.body.i25.i ]
  %27 = phi i64 [ 0, %for.body.i25.i.lr.ph ], [ %26, %for.body.i25.i ]
  %28 = load ptr, ptr %22, align 8
  %29 = getelementptr inbounds ptr, ptr %28, i64 %27
  store ptr null, ptr %29, align 8
  %30 = icmp ugt i64 %26, 255
  %31 = add nuw nsw i64 %26, 1
  br i1 %30, label %for.body.i35.i.lr.ph, label %for.body.i25.i

for.body.i35.i.lr.ph:                             ; preds = %for.body.i25.i
  tail call void @free(ptr nonnull %25)
  %memberidx3.i26.i = getelementptr inbounds %Map_String_ClassId_, ptr %22, i64 0, i32 1
  store i64 256, ptr %memberidx3.i26.i, align 4
  %memberidx4.i27.i = getelementptr inbounds %Map_String_ClassId_, ptr %22, i64 0, i32 2
  store i64 0, ptr %memberidx4.i27.i, align 4
  store ptr %22, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 3
  %32 = tail call ptr @malloc(i32 24)
  %33 = tail call ptr @malloc(i32 2048)
  store ptr %33, ptr %32, align 8
  %34 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %34, align 4
  %memberidx1.i.i28.i = getelementptr inbounds %Range, ptr %34, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i28.i, align 4
  %35 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i30.i = getelementptr inbounds %RangeIterator, ptr %35, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i30.i, align 4
  %memberidx1.i.i.i31.i = getelementptr inbounds %RangeIterator, ptr %35, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i31.i, align 4
  br label %for.body.i35.i

for.body.i35.i:                                   ; preds = %for.body.i35.i.lr.ph, %for.body.i35.i
  %36 = phi i64 [ 1, %for.body.i35.i.lr.ph ], [ %41, %for.body.i35.i ]
  %37 = phi i64 [ 0, %for.body.i35.i.lr.ph ], [ %36, %for.body.i35.i ]
  %38 = load ptr, ptr %32, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  store ptr null, ptr %39, align 8
  %40 = icmp ugt i64 %36, 255
  %41 = add nuw nsw i64 %36, 1
  br i1 %40, label %for.body.i46.i.lr.ph, label %for.body.i35.i

for.body.i46.i.lr.ph:                             ; preds = %for.body.i35.i
  tail call void @free(ptr nonnull %35)
  %memberidx3.i36.i = getelementptr inbounds %Map_String_VarId_, ptr %32, i64 0, i32 1
  store i64 256, ptr %memberidx3.i36.i, align 4
  %memberidx4.i37.i = getelementptr inbounds %Map_String_VarId_, ptr %32, i64 0, i32 2
  store i64 0, ptr %memberidx4.i37.i, align 4
  store ptr %32, ptr %memberidx3.i, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 4
  %42 = tail call ptr @malloc(i32 24)
  %43 = tail call ptr @malloc(i32 2048)
  store ptr %43, ptr %42, align 8
  %44 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %44, align 4
  %memberidx1.i.i39.i = getelementptr inbounds %Range, ptr %44, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i39.i, align 4
  %45 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i41.i = getelementptr inbounds %RangeIterator, ptr %45, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i41.i, align 4
  %memberidx1.i.i.i42.i = getelementptr inbounds %RangeIterator, ptr %45, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i42.i, align 4
  br label %for.body.i46.i

for.body.i46.i:                                   ; preds = %for.body.i46.i.lr.ph, %for.body.i46.i
  %46 = phi i64 [ 1, %for.body.i46.i.lr.ph ], [ %51, %for.body.i46.i ]
  %47 = phi i64 [ 0, %for.body.i46.i.lr.ph ], [ %46, %for.body.i46.i ]
  %48 = load ptr, ptr %42, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  store ptr null, ptr %49, align 8
  %50 = icmp ugt i64 %46, 255
  %51 = add nuw nsw i64 %46, 1
  br i1 %50, label %for.body.i56.i.lr.ph, label %for.body.i46.i

for.body.i56.i.lr.ph:                             ; preds = %for.body.i46.i
  tail call void @free(ptr nonnull %45)
  %memberidx3.i47.i = getelementptr inbounds %Map_String_EnumId_, ptr %42, i64 0, i32 1
  store i64 256, ptr %memberidx3.i47.i, align 4
  %memberidx4.i48.i = getelementptr inbounds %Map_String_EnumId_, ptr %42, i64 0, i32 2
  store i64 0, ptr %memberidx4.i48.i, align 4
  store ptr %42, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 6
  %52 = tail call ptr @malloc(i32 24)
  %53 = tail call ptr @malloc(i32 2048)
  store ptr %53, ptr %52, align 8
  %54 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %54, align 4
  %memberidx1.i.i49.i = getelementptr inbounds %Range, ptr %54, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i49.i, align 4
  %55 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i51.i = getelementptr inbounds %RangeIterator, ptr %55, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i51.i, align 4
  %memberidx1.i.i.i52.i = getelementptr inbounds %RangeIterator, ptr %55, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i52.i, align 4
  br label %for.body.i56.i

for.body.i56.i:                                   ; preds = %for.body.i56.i.lr.ph, %for.body.i56.i
  %56 = phi i64 [ 1, %for.body.i56.i.lr.ph ], [ %61, %for.body.i56.i ]
  %57 = phi i64 [ 0, %for.body.i56.i.lr.ph ], [ %56, %for.body.i56.i ]
  %58 = load ptr, ptr %52, align 8
  %59 = getelementptr inbounds ptr, ptr %58, i64 %57
  store ptr null, ptr %59, align 8
  %60 = icmp ugt i64 %56, 255
  %61 = add nuw nsw i64 %56, 1
  br i1 %60, label %Scope_constructor.exit, label %for.body.i56.i

Scope_constructor.exit:                           ; preds = %for.body.i56.i
  tail call void @free(ptr nonnull %55)
  %memberidx3.i57.i = getelementptr inbounds %Map_String_Type_, ptr %52, i64 0, i32 1
  store i64 256, ptr %memberidx3.i57.i, align 4
  %memberidx4.i58.i = getelementptr inbounds %Map_String_Type_, ptr %52, i64 0, i32 2
  store i64 0, ptr %memberidx4.i58.i, align 4
  store ptr %52, ptr %memberidx5.i, align 8
  %memberidx6.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 5
  store ptr null, ptr %memberidx6.i, align 8
  %memberidx7.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 7
  %62 = tail call ptr @malloc(i32 24)
  %memberidx.i.i6 = getelementptr inbounds %Array_ScopeId_, ptr %62, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i6, align 4
  %memberidx1.i17.i = getelementptr inbounds %Array_ScopeId_, ptr %62, i64 0, i32 2
  store i64 8, ptr %memberidx1.i17.i, align 4
  %63 = tail call ptr @malloc(i32 64)
  store ptr %63, ptr %62, align 8
  store i64 0, ptr %memberidx.i.i6, align 4
  store ptr %62, ptr %memberidx7.i, align 8
  %64 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %Array_Scope_, ptr %64, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i, align 4
  %66 = add i64 %65, 1
  %memberidx.i.i = getelementptr inbounds %Array_Scope_, ptr %64, i64 0, i32 2
  %67 = load i64, ptr %memberidx.i.i, align 4
  %68 = icmp slt i64 %67, %66
  %.pre = load ptr, ptr %64, align 8
  br i1 %68, label %while.body.i.i, label %Array_Scope____sl__.exit

while.body.i.i:                                   ; preds = %Scope_constructor.exit, %while.body.i.i
  %69 = phi ptr [ %73, %while.body.i.i ], [ %.pre, %Scope_constructor.exit ]
  %70 = phi i64 [ %74, %while.body.i.i ], [ %67, %Scope_constructor.exit ]
  %71 = shl nuw i64 %70, 1
  store i64 %71, ptr %memberidx.i.i, align 4
  %72 = shl i64 %70, 4
  %73 = tail call ptr @realloc(ptr %69, i64 %72)
  store ptr %73, ptr %64, align 8
  %74 = load i64, ptr %memberidx.i.i, align 4
  %75 = icmp slt i64 %74, %66
  br i1 %75, label %while.body.i.i, label %Array_Scope____sl__.exit.loopexit

Array_Scope____sl__.exit.loopexit:                ; preds = %while.body.i.i
  %.pre33 = load i64, ptr %memberidx.i, align 4
  %.pre35 = add nsw i64 %.pre33, 1
  br label %Array_Scope____sl__.exit

Array_Scope____sl__.exit:                         ; preds = %Scope_constructor.exit, %Array_Scope____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre35, %Array_Scope____sl__.exit.loopexit ], [ %66, %Scope_constructor.exit ]
  %76 = phi ptr [ %73, %Array_Scope____sl__.exit.loopexit ], [ %.pre, %Scope_constructor.exit ]
  %77 = phi i64 [ %.pre33, %Array_Scope____sl__.exit.loopexit ], [ %65, %Scope_constructor.exit ]
  store i64 %.pre-phi, ptr %memberidx.i, align 4
  %78 = getelementptr inbounds ptr, ptr %76, i64 %77
  store ptr %8, ptr %78, align 8
  ret ptr %8
}

define internal fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %6 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %5)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend19, %ifend38, %TypeChecker_error.exit149, %if.entry24, %TypeChecker_error.exit121, %if.entry8, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %105, %if.entry8 ], [ null, %TypeChecker_error.exit121 ], [ %164, %if.entry24 ], [ null, %TypeChecker_error.exit149 ], [ %223, %ifend38 ], [ null, %ifend19 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %8 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %memberidx.i = getelementptr inbounds %String, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx.i, align 4
  %10 = trunc i64 %9 to i32
  %11 = add i32 %10, 1
  %12 = tail call ptr @malloc(i32 %11)
  %13 = load ptr, ptr %8, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %13, i64 %9, i1 false)
  %14 = getelementptr inbounds i8, ptr %12, i64 %9
  store i8 0, ptr %14, align 1
  %15 = alloca ptr, align 8
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %15, ptr nonnull @178, ptr %12)
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  store i64 %16, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx2.i, align 4
  tail call void @free(ptr %12)
  %19 = load ptr, ptr %2, align 8
  %memberidx.i92 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %20 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx1.i93, align 8
  %22 = call ptr @malloc(i32 24)
  store i64 4, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %22, i64 0, i32 2
  store ptr %19, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %22, i64 0, i32 1
  store ptr %18, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i.i, align 4
  %24 = add i64 %23, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 2
  %25 = load i64, ptr %memberidx.i.i.i, align 4
  %26 = icmp slt i64 %25, %24
  %.pre191 = load ptr, ptr %21, align 8
  br i1 %26, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %27 = phi ptr [ %31, %while.body.i.i.i ], [ %.pre191, %if.entry ]
  %28 = phi i64 [ %32, %while.body.i.i.i ], [ %25, %if.entry ]
  %29 = shl nuw i64 %28, 1
  store i64 %29, ptr %memberidx.i.i.i, align 4
  %30 = shl i64 %28, 4
  %31 = call ptr @realloc(ptr %27, i64 %30)
  store ptr %31, ptr %21, align 8
  %32 = load i64, ptr %memberidx.i.i.i, align 4
  %33 = icmp slt i64 %32, %24
  br i1 %33, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre192 = load i64, ptr %memberidx.i.i, align 4
  %.pre196 = add nsw i64 %.pre192, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre196, %TypeChecker_error.exit.loopexit ], [ %24, %if.entry ]
  %34 = phi ptr [ %31, %TypeChecker_error.exit.loopexit ], [ %.pre191, %if.entry ]
  %35 = phi i64 [ %.pre192, %TypeChecker_error.exit.loopexit ], [ %23, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %36 = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %22, ptr %36, align 8
  br label %common.ret

ifend:                                            ; preds = %4
  %37 = load ptr, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i171, %ifend
  %.tr11.i.in = phi ptr [ %memberidx3, %ifend ], [ %memberidx1.i170, %if.entry.i171 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %38 = load i64, ptr %.tr11.i, align 4
  switch i64 %38, label %get_class_from_type.exit [
    i64 20, label %if.entry.i171
    i64 11, label %if.entry3.i
  ]

if.entry.i171:                                    ; preds = %tailrecurse.i
  %memberidx1.i170 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i172 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %39 = load ptr, ptr %memberidx6.i172, align 8
  %40 = load ptr, ptr %37, align 8
  %41 = load i64, ptr %39, align 4
  %42 = load ptr, ptr %40, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %memberidx2.i.i173 = getelementptr inbounds %Module, ptr %44, i64 0, i32 3
  %45 = load ptr, ptr %memberidx2.i.i173, align 8
  %memberidx3.i.i174 = getelementptr inbounds %TypeId, ptr %39, i64 0, i32 2
  %46 = load i64, ptr %memberidx3.i.i174, align 4
  %47 = load ptr, ptr %45, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i169 = phi ptr [ %49, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx4 = getelementptr inbounds %Class, ptr %common.ret.op.i169, i64 0, i32 6
  %50 = load ptr, ptr %memberidx4, align 8
  %51 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %6)
  %memberidx.i94 = getelementptr inbounds %Map_String_PropId_, ptr %50, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i94, align 4
  %53 = urem i64 %51, %52
  %54 = load ptr, ptr %50, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  %.not.i177 = icmp eq ptr %56, null
  br i1 %.not.i177, label %if.entry5, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %get_class_from_type.exit
  %memberidx1.i.i96 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %57 = load i64, ptr %memberidx1.i.i96, align 4
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre182.pre = load ptr, ptr %50, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre182.pre, i64 %hash.0.i178
  %.pre183.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre183.pre, null
  br i1 %.not22.i, label %if.entry5, label %Map_String_PropId____getitem__.exit

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %58 = phi ptr [ %54, %while.body.i.lr.ph ], [ %67, %else.i ]
  %59 = phi i64 [ %52, %while.body.i.lr.ph ], [ %68, %else.i ]
  %60 = phi ptr [ %56, %while.body.i.lr.ph ], [ %72, %else.i ]
  %hash.0.i178 = phi i64 [ %53, %while.body.i.lr.ph ], [ %70, %else.i ]
  %61 = load ptr, ptr %60, align 8
  %memberidx.i.i95 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i.i95, align 4
  %.not.i.i = icmp eq i64 %62, %57
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %63 = load ptr, ptr %61, align 8
  %64 = load ptr, ptr %6, align 8
  %65 = tail call i64 @memcmp(ptr %63, ptr %64, i64 %57)
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i94, align 4
  %.pre181 = load ptr, ptr %50, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %67 = phi ptr [ %.pre181, %ifend.i.i.else.i_crit_edge ], [ %58, %while.body.i ]
  %68 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %59, %while.body.i ]
  %69 = add nuw i64 %hash.0.i178, 1
  %70 = urem i64 %69, %68
  %71 = getelementptr inbounds ptr, ptr %67, i64 %70
  %72 = load ptr, ptr %71, align 8
  %.not.i = icmp eq ptr %72, null
  br i1 %.not.i, label %if.entry5, label %while.body.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre183.pre, i64 0, i32 1
  %73 = load ptr, ptr %memberidx10.i, align 8
  %74 = icmp eq ptr %73, null
  br i1 %74, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_String_PropId____getitem__.exit
  %75 = add i64 %5, -11
  %76 = icmp ult i64 %75, 2
  br i1 %76, label %if.entry8, label %ifend10

ifend7:                                           ; preds = %Map_String_PropId____getitem__.exit
  %77 = load ptr, ptr %0, align 8
  %memberidx.i.i97 = getelementptr inbounds %PropId, ptr %73, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i.i97, align 8
  %79 = load ptr, ptr %77, align 8
  %80 = load i64, ptr %78, align 4
  %81 = load ptr, ptr %79, align 8
  %82 = getelementptr inbounds ptr, ptr %81, i64 %80
  %83 = load ptr, ptr %82, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %83, i64 0, i32 3
  %84 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %78, i64 0, i32 2
  %85 = load i64, ptr %memberidx3.i.i.i, align 4
  %86 = load ptr, ptr %84, align 8
  %87 = getelementptr inbounds ptr, ptr %86, i64 %85
  %88 = load ptr, ptr %87, align 8
  %89 = load i64, ptr %73, align 4
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend7
  %memberidx1.i99 = getelementptr inbounds %Class, ptr %88, i64 0, i32 5
  %91 = load ptr, ptr %memberidx1.i99, align 8
  %memberidx2.i100 = getelementptr inbounds %PropId, ptr %73, i64 0, i32 2
  %92 = load i64, ptr %memberidx2.i100, align 4
  %93 = load ptr, ptr %91, align 8
  %94 = getelementptr inbounds ptr, ptr %93, i64 %92
  %95 = load ptr, ptr %94, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %95, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend7
  %memberidx4.i = getelementptr inbounds %Class, ptr %88, i64 0, i32 4
  %96 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %73, i64 0, i32 2
  %97 = load i64, ptr %memberidx5.i, align 4
  %98 = load ptr, ptr %96, align 8
  %99 = getelementptr inbounds ptr, ptr %98, i64 %97
  %100 = load ptr, ptr %99, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %100, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i98 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx16 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i98, i64 0, i32 1
  %101 = load ptr, ptr %memberidx16, align 8
  %102 = load ptr, ptr %101, align 8
  %103 = load ptr, ptr %102, align 8
  %104 = icmp eq ptr %3, null
  br i1 %104, label %if.entry17, label %ifend19

if.entry8:                                        ; preds = %if.entry5
  %105 = tail call ptr @malloc(i32 49)
  %106 = load ptr, ptr %memberidx3, align 8
  %memberidx12 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %107 = load ptr, ptr %memberidx12, align 8
  %108 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %106, ptr %107)
  %109 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %109, align 4
  store i64 8, ptr %105, align 4
  %memberidx.i.i101 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i101, align 4
  %memberidx1.i.i102 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 1
  %memberidx.i103 = getelementptr inbounds %BinaryExpression, ptr %105, i64 0, i32 4
  store ptr %1, ptr %memberidx.i103, align 8
  %memberidx1.i104 = getelementptr inbounds %BinaryExpression, ptr %105, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i104, align 4
  %memberidx2.i105 = getelementptr inbounds %BinaryExpression, ptr %105, i64 0, i32 6
  store ptr %108, ptr %memberidx2.i105, align 8
  %memberidx3.i106 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 3
  store ptr %109, ptr %memberidx3.i106, align 8
  store i1 false, ptr %memberidx1.i.i102, align 1
  br label %common.ret

ifend10:                                          ; preds = %if.entry5
  %110 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %memberidx.i108 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  %111 = load i64, ptr %memberidx.i108, align 4
  %112 = trunc i64 %111 to i32
  %113 = add i32 %112, 1
  %114 = tail call ptr @malloc(i32 %113)
  %115 = load ptr, ptr %110, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %114, ptr align 8 %115, i64 %111, i1 false)
  %116 = getelementptr inbounds i8, ptr %114, i64 %111
  store i8 0, ptr %116, align 1
  %memberidx13 = getelementptr inbounds %Class, ptr %common.ret.op.i169, i64 0, i32 1
  %117 = load ptr, ptr %memberidx13, align 8
  %memberidx.i109 = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  %118 = load i64, ptr %memberidx.i109, align 4
  %119 = trunc i64 %118 to i32
  %120 = add i32 %119, 1
  %121 = tail call ptr @malloc(i32 %120)
  %122 = load ptr, ptr %117, align 8
  %123 = load i64, ptr %memberidx.i109, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %121, ptr align 8 %122, i64 %123, i1 false)
  %124 = getelementptr inbounds i8, ptr %121, i64 %123
  store i8 0, ptr %124, align 1
  %memberidx.i110 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %125 = load i64, ptr %memberidx.i110, align 4
  %126 = trunc i64 %125 to i32
  %127 = add i32 %126, 1
  %128 = tail call ptr @malloc(i32 %127)
  %129 = load ptr, ptr %6, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %128, ptr align 8 %129, i64 %125, i1 false)
  %130 = getelementptr inbounds i8, ptr %128, i64 %125
  store i8 0, ptr %130, align 1
  %131 = alloca ptr, align 8
  %132 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %131, ptr nonnull @179, ptr %114, ptr %121, ptr %128)
  %133 = load ptr, ptr %131, align 8
  %134 = tail call ptr @malloc(i32 24)
  store ptr %133, ptr %134, align 8
  %memberidx1.i111 = getelementptr inbounds %String, ptr %134, i64 0, i32 1
  store i64 %132, ptr %memberidx1.i111, align 4
  %memberidx2.i112 = getelementptr inbounds %String, ptr %134, i64 0, i32 2
  store i64 %132, ptr %memberidx2.i112, align 4
  tail call void @free(ptr %114)
  tail call void @free(ptr %121)
  tail call void @free(ptr %128)
  %135 = load ptr, ptr %2, align 8
  %memberidx.i113 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %136 = load ptr, ptr %memberidx.i113, align 8
  %memberidx1.i114 = getelementptr inbounds %Compiler, ptr %136, i64 0, i32 5
  %137 = load ptr, ptr %memberidx1.i114, align 8
  %138 = call ptr @malloc(i32 24)
  store i64 1, ptr %138, align 4
  %memberidx1.i.i115 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 2
  store ptr %135, ptr %memberidx1.i.i115, align 8
  %memberidx2.i.i116 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 1
  store ptr %134, ptr %memberidx2.i.i116, align 8
  %memberidx.i.i117 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %139 = load i64, ptr %memberidx.i.i117, align 4
  %140 = add i64 %139, 1
  %memberidx.i.i.i118 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 2
  %141 = load i64, ptr %memberidx.i.i.i118, align 4
  %142 = icmp slt i64 %141, %140
  %.pre188 = load ptr, ptr %137, align 8
  br i1 %142, label %while.body.i.i.i120, label %TypeChecker_error.exit121

while.body.i.i.i120:                              ; preds = %ifend10, %while.body.i.i.i120
  %143 = phi ptr [ %147, %while.body.i.i.i120 ], [ %.pre188, %ifend10 ]
  %144 = phi i64 [ %148, %while.body.i.i.i120 ], [ %141, %ifend10 ]
  %145 = shl nuw i64 %144, 1
  store i64 %145, ptr %memberidx.i.i.i118, align 4
  %146 = shl i64 %144, 4
  %147 = call ptr @realloc(ptr %143, i64 %146)
  store ptr %147, ptr %137, align 8
  %148 = load i64, ptr %memberidx.i.i.i118, align 4
  %149 = icmp slt i64 %148, %140
  br i1 %149, label %while.body.i.i.i120, label %TypeChecker_error.exit121.loopexit

TypeChecker_error.exit121.loopexit:               ; preds = %while.body.i.i.i120
  %.pre189 = load i64, ptr %memberidx.i.i117, align 4
  %.pre197 = add nsw i64 %.pre189, 1
  br label %TypeChecker_error.exit121

TypeChecker_error.exit121:                        ; preds = %ifend10, %TypeChecker_error.exit121.loopexit
  %.pre-phi198 = phi i64 [ %.pre197, %TypeChecker_error.exit121.loopexit ], [ %140, %ifend10 ]
  %150 = phi ptr [ %147, %TypeChecker_error.exit121.loopexit ], [ %.pre188, %ifend10 ]
  %151 = phi i64 [ %.pre189, %TypeChecker_error.exit121.loopexit ], [ %139, %ifend10 ]
  store i64 %.pre-phi198, ptr %memberidx.i.i117, align 4
  %152 = getelementptr inbounds ptr, ptr %150, i64 %151
  store ptr %138, ptr %152, align 8
  br label %common.ret

if.entry17:                                       ; preds = %get_class_prop_type.exit
  %memberidx20 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %153 = load ptr, ptr %memberidx20, align 8
  %154 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %103, ptr %153)
  br label %ifend19

ifend19:                                          ; preds = %get_class_prop_type.exit, %if.entry17
  %right.0 = phi ptr [ %154, %if.entry17 ], [ %3, %get_class_prop_type.exit ]
  %memberidx.i122 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %155 = load ptr, ptr %memberidx.i122, align 8
  %memberidx1.i123 = getelementptr inbounds %Compiler, ptr %155, i64 0, i32 5
  %156 = load ptr, ptr %memberidx1.i123, align 8
  %memberidx2.i124 = getelementptr inbounds %Array_FloError_, ptr %156, i64 0, i32 1
  %157 = load i64, ptr %memberidx2.i124, align 4
  %158 = icmp sgt i64 %157, 0
  br i1 %158, label %common.ret, label %ifend23

ifend23:                                          ; preds = %ifend19
  %memberidx.i125 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 2
  %159 = load i64, ptr %memberidx.i125, align 4
  %160 = icmp eq i64 %159, 5
  %161 = add i64 %5, -11
  %162 = icmp ult i64 %161, 2
  %163 = and i1 %162, %160
  br i1 %163, label %if.entry24, label %ifend26

if.entry24:                                       ; preds = %ifend23
  %164 = tail call ptr @malloc(i32 49)
  %165 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %165, align 4
  store i64 8, ptr %164, align 4
  %memberidx.i.i126 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i126, align 4
  %memberidx1.i.i127 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 1
  %memberidx.i128 = getelementptr inbounds %BinaryExpression, ptr %164, i64 0, i32 4
  store ptr %1, ptr %memberidx.i128, align 8
  %memberidx1.i129 = getelementptr inbounds %BinaryExpression, ptr %164, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i129, align 4
  %memberidx2.i130 = getelementptr inbounds %BinaryExpression, ptr %164, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i130, align 8
  %memberidx3.i131 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 3
  store ptr %165, ptr %memberidx3.i131, align 8
  store i1 false, ptr %memberidx1.i.i127, align 1
  br label %common.ret

ifend26:                                          ; preds = %ifend23
  %166 = icmp eq i64 %5, 18
  %memberidx30 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %167 = load ptr, ptr %memberidx30, align 8
  br i1 %166, label %if.entry27, label %ifend29

if.entry27:                                       ; preds = %ifend26
  %168 = load i64, ptr %167, align 4
  %169 = add i64 %168, -1
  %170 = icmp ult i64 %169, 7
  %171 = load i64, ptr %103, align 4
  %172 = add i64 %171, -1
  %173 = icmp ult i64 %172, 7
  %174 = and i1 %170, %173
  br i1 %174, label %if.entry31, label %ifend29

ifend29:                                          ; preds = %ifend26, %if.entry31, %if.entry27
  %175 = phi ptr [ %ternary.i, %if.entry31 ], [ %167, %if.entry27 ], [ %167, %ifend26 ]
  %right.1 = phi ptr [ %178, %if.entry31 ], [ %right.0, %if.entry27 ], [ %right.0, %ifend26 ]
  %176 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %103, ptr %175)
  br i1 %176, label %ifend38, label %if.entry36

if.entry31:                                       ; preds = %if.entry27
  %177 = icmp ugt i64 %168, %171
  %ternary.i = select i1 %177, ptr %167, ptr %103
  %178 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %178, align 4
  %memberidx.i.i.i133 = getelementptr inbounds %Expression, ptr %178, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i133, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %178, i64 0, i32 1
  %memberidx.i.i134 = getelementptr inbounds %TypeCastExpression, ptr %178, i64 0, i32 4
  store ptr %right.0, ptr %memberidx.i.i134, align 8
  %memberidx1.i.i135 = getelementptr inbounds %Expression, ptr %178, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i135, align 8
  %memberidx3.i.i = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 1
  %179 = load i1, ptr %memberidx3.i.i, align 1
  store i1 %179, ptr %memberidx1.i.i.i, align 1
  br label %ifend29

if.entry36:                                       ; preds = %ifend29
  %memberidx35 = getelementptr inbounds %Expression, ptr %right.1, i64 0, i32 3
  %180 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %103)
  %memberidx.i137 = getelementptr inbounds %String, ptr %180, i64 0, i32 1
  %181 = load i64, ptr %memberidx.i137, align 4
  %182 = trunc i64 %181 to i32
  %183 = add i32 %182, 1
  %184 = tail call ptr @malloc(i32 %183)
  %185 = load ptr, ptr %180, align 8
  %186 = load i64, ptr %memberidx.i137, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %184, ptr align 8 %185, i64 %186, i1 false)
  %187 = getelementptr inbounds i8, ptr %184, i64 %186
  store i8 0, ptr %187, align 1
  %188 = load ptr, ptr %memberidx35, align 8
  %189 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %188)
  %memberidx.i138 = getelementptr inbounds %String, ptr %189, i64 0, i32 1
  %190 = load i64, ptr %memberidx.i138, align 4
  %191 = trunc i64 %190 to i32
  %192 = add i32 %191, 1
  %193 = tail call ptr @malloc(i32 %192)
  %194 = load ptr, ptr %189, align 8
  %195 = load i64, ptr %memberidx.i138, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %193, ptr align 8 %194, i64 %195, i1 false)
  %196 = getelementptr inbounds i8, ptr %193, i64 %195
  store i8 0, ptr %196, align 1
  %197 = alloca ptr, align 8
  %198 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %197, ptr nonnull @177, ptr %184, ptr %193)
  %199 = load ptr, ptr %197, align 8
  %200 = tail call ptr @malloc(i32 24)
  store ptr %199, ptr %200, align 8
  %memberidx1.i139 = getelementptr inbounds %String, ptr %200, i64 0, i32 1
  store i64 %198, ptr %memberidx1.i139, align 4
  %memberidx2.i140 = getelementptr inbounds %String, ptr %200, i64 0, i32 2
  store i64 %198, ptr %memberidx2.i140, align 4
  tail call void @free(ptr %184)
  tail call void @free(ptr %193)
  %memberidx40 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %201 = load ptr, ptr %memberidx40, align 8
  %202 = load ptr, ptr %201, align 8
  %203 = load ptr, ptr %memberidx.i122, align 8
  %memberidx1.i142 = getelementptr inbounds %Compiler, ptr %203, i64 0, i32 5
  %204 = load ptr, ptr %memberidx1.i142, align 8
  %205 = call ptr @malloc(i32 24)
  store i64 5, ptr %205, align 4
  %memberidx1.i.i143 = getelementptr inbounds %FloError, ptr %205, i64 0, i32 2
  store ptr %202, ptr %memberidx1.i.i143, align 8
  %memberidx2.i.i144 = getelementptr inbounds %FloError, ptr %205, i64 0, i32 1
  store ptr %200, ptr %memberidx2.i.i144, align 8
  %memberidx.i.i145 = getelementptr inbounds %Array_FloError_, ptr %204, i64 0, i32 1
  %206 = load i64, ptr %memberidx.i.i145, align 4
  %207 = add i64 %206, 1
  %memberidx.i.i.i146 = getelementptr inbounds %Array_FloError_, ptr %204, i64 0, i32 2
  %208 = load i64, ptr %memberidx.i.i.i146, align 4
  %209 = icmp slt i64 %208, %207
  %.pre185 = load ptr, ptr %204, align 8
  br i1 %209, label %while.body.i.i.i148, label %TypeChecker_error.exit149

while.body.i.i.i148:                              ; preds = %if.entry36, %while.body.i.i.i148
  %210 = phi ptr [ %214, %while.body.i.i.i148 ], [ %.pre185, %if.entry36 ]
  %211 = phi i64 [ %215, %while.body.i.i.i148 ], [ %208, %if.entry36 ]
  %212 = shl nuw i64 %211, 1
  store i64 %212, ptr %memberidx.i.i.i146, align 4
  %213 = shl i64 %211, 4
  %214 = call ptr @realloc(ptr %210, i64 %213)
  store ptr %214, ptr %204, align 8
  %215 = load i64, ptr %memberidx.i.i.i146, align 4
  %216 = icmp slt i64 %215, %207
  br i1 %216, label %while.body.i.i.i148, label %TypeChecker_error.exit149.loopexit

TypeChecker_error.exit149.loopexit:               ; preds = %while.body.i.i.i148
  %.pre186 = load i64, ptr %memberidx.i.i145, align 4
  %.pre199 = add nsw i64 %.pre186, 1
  br label %TypeChecker_error.exit149

TypeChecker_error.exit149:                        ; preds = %if.entry36, %TypeChecker_error.exit149.loopexit
  %.pre-phi200 = phi i64 [ %.pre199, %TypeChecker_error.exit149.loopexit ], [ %207, %if.entry36 ]
  %217 = phi ptr [ %214, %TypeChecker_error.exit149.loopexit ], [ %.pre185, %if.entry36 ]
  %218 = phi i64 [ %.pre186, %TypeChecker_error.exit149.loopexit ], [ %206, %if.entry36 ]
  store i64 %.pre-phi200, ptr %memberidx.i.i145, align 4
  %219 = getelementptr inbounds ptr, ptr %217, i64 %218
  store ptr %205, ptr %219, align 8
  br label %common.ret

ifend38:                                          ; preds = %ifend29
  %220 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %220, align 4
  %memberidx.i.i150 = getelementptr inbounds %Expression, ptr %220, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i150, align 4
  %memberidx1.i.i151 = getelementptr inbounds %Expression, ptr %220, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i151, align 1
  %memberidx.i152 = getelementptr inbounds %MemberExpression, ptr %220, i64 0, i32 4
  store ptr %1, ptr %memberidx.i152, align 8
  %memberidx1.i153 = getelementptr inbounds %MemberExpression, ptr %220, i64 0, i32 5
  store ptr %73, ptr %memberidx1.i153, align 8
  %memberidx2.i154 = getelementptr inbounds %Expression, ptr %220, i64 0, i32 3
  store ptr %common.ret.op.i98, ptr %memberidx2.i154, align 8
  %221 = tail call ptr @malloc(i32 24)
  %memberidx.i155 = getelementptr inbounds %Array_Expression_, ptr %221, i64 0, i32 1
  store i64 0, ptr %memberidx.i155, align 4
  %memberidx1.i156 = getelementptr inbounds %Array_Expression_, ptr %221, i64 0, i32 2
  store i64 8, ptr %memberidx1.i156, align 4
  %222 = tail call ptr @malloc(i32 64)
  store ptr %222, ptr %221, align 8
  store ptr %right.1, ptr %222, align 8
  store i64 1, ptr %memberidx.i155, align 4
  %223 = tail call ptr @malloc(i32 41)
  %memberidx44 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i98, i64 0, i32 2
  %224 = load ptr, ptr %memberidx44, align 8
  store i64 8, ptr %223, align 4
  %memberidx.i.i157 = getelementptr inbounds %Expression, ptr %223, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i157, align 4
  %memberidx1.i.i158 = getelementptr inbounds %Expression, ptr %223, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i158, align 1
  %memberidx.i159 = getelementptr inbounds %CallExpression, ptr %223, i64 0, i32 4
  store ptr %220, ptr %memberidx.i159, align 8
  %memberidx1.i160 = getelementptr inbounds %CallExpression, ptr %223, i64 0, i32 5
  store ptr %221, ptr %memberidx1.i160, align 8
  %memberidx2.i161 = getelementptr inbounds %Expression, ptr %223, i64 0, i32 3
  store ptr %224, ptr %memberidx2.i161, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %5)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %if.entry41, %TypeChecker_error.exit141, %if.entry34, %ifend28, %TypeChecker_error.exit, %if.entry17, %ifend12
  %common.ret.op = phi ptr [ %17, %ifend12 ], [ %22, %if.entry17 ], [ null, %TypeChecker_error.exit ], [ %68, %ifend28 ], [ %80, %if.entry34 ], [ null, %TypeChecker_error.exit141 ], [ %127, %if.entry41 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %memberidx2 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %12 = load i1, ptr %memberidx3, align 1
  switch i64 %4, label %ifend16 [
    i64 6, label %if.entry4
    i64 7, label %if.entry14
  ]

if.entry4:                                        ; preds = %ifend
  %13 = load i64, ptr %11, align 4
  %14 = add i64 %13, -1
  %15 = icmp ult i64 %14, 9
  br i1 %15, label %if.entry7, label %ifend33.split

if.entry7:                                        ; preds = %if.entry4
  %16 = icmp ult i64 %14, 7
  br i1 %16, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %if.entry7
  %memberidx13 = getelementptr inbounds %IntType, ptr %11, i64 0, i32 1
  store i1 true, ptr %memberidx13, align 1
  br label %ifend12

ifend12:                                          ; preds = %if.entry7, %if.entry10
  %17 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %17, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 1
  %memberidx.i86 = getelementptr inbounds %UnaryExpression, ptr %17, i64 0, i32 4
  store i64 6, ptr %memberidx.i86, align 4
  %memberidx1.i87 = getelementptr inbounds %UnaryExpression, ptr %17, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i87, align 8
  %memberidx2.i88 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i88, align 8
  store i1 %12, ptr %memberidx1.i.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %ifend
  %18 = load i64, ptr %11, align 4
  %19 = icmp ult i64 %18, 10
  br i1 %19, label %if.entry17, label %ifend33.split

ifend16:                                          ; preds = %ifend
  %20 = add i64 %4, -2
  %21 = icmp ult i64 %20, 4
  br i1 %21, label %if.entry20, label %ifend22

if.entry17:                                       ; preds = %if.entry14
  %22 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %22, align 4
  %memberidx.i.i89 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i89, align 4
  %memberidx1.i.i90 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 1
  %memberidx.i91 = getelementptr inbounds %UnaryExpression, ptr %22, i64 0, i32 4
  store i64 7, ptr %memberidx.i91, align 4
  %memberidx1.i92 = getelementptr inbounds %UnaryExpression, ptr %22, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i92, align 8
  %memberidx2.i93 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i93, align 8
  store i1 %12, ptr %memberidx1.i.i90, align 1
  br label %common.ret

if.entry20:                                       ; preds = %ifend16
  %23 = load i64, ptr %11, align 4
  %24 = add i64 %23, -1
  %25 = icmp ult i64 %24, 9
  %26 = icmp eq i64 %23, 13
  %27 = or i1 %26, %25
  br i1 %27, label %if.entry23, label %ifend22

ifend22:                                          ; preds = %if.entry20, %ifend16
  switch i64 %4, label %ifend33.split [
    i64 8, label %if.entry31
    i64 1, label %if.entry38
  ]

if.entry23:                                       ; preds = %if.entry20
  %memberidx.i95 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i95, align 4
  switch i64 %28, label %if.entry26 [
    i64 8, label %if.entry.i
    i64 13, label %if.entry4.i
    i64 14, label %check_is_var.exit
  ]

if.entry.i:                                       ; preds = %if.entry23
  %memberidx1.i96 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %29 = load ptr, ptr %memberidx1.i96, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %ifend28, label %if.entry26

if.entry4.i:                                      ; preds = %if.entry23
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %32 = load ptr, ptr %memberidx7.i, align 8
  %33 = load i64, ptr %32, align 4
  %34 = icmp eq i64 %33, 1
  br i1 %34, label %ifend28, label %if.entry26

check_is_var.exit:                                ; preds = %if.entry23
  %memberidx13.i = getelementptr inbounds %IndexExpression, ptr %6, i64 0, i32 4
  %35 = load ptr, ptr %memberidx13.i, align 8
  %memberidx14.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %36 = load ptr, ptr %memberidx14.i, align 8
  %37 = load i64, ptr %36, align 4
  %.not154 = icmp eq i64 %37, 15
  br i1 %.not154, label %if.entry26, label %ifend28

if.entry26:                                       ; preds = %if.entry4.i, %if.entry.i, %if.entry23, %check_is_var.exit
  %38 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %memberidx.i97 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i97, align 4
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, 1
  %42 = tail call ptr @malloc(i32 %41)
  %43 = load ptr, ptr %38, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %43, i64 %39, i1 false)
  %44 = getelementptr inbounds i8, ptr %42, i64 %39
  store i8 0, ptr %44, align 1
  %45 = alloca ptr, align 8
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %45, ptr nonnull @184, ptr %42)
  %47 = load ptr, ptr %45, align 8
  %48 = tail call ptr @malloc(i32 24)
  store ptr %47, ptr %48, align 8
  %memberidx1.i98 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i98, align 4
  %memberidx2.i99 = getelementptr inbounds %String, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx2.i99, align 4
  tail call void @free(ptr %42)
  %49 = load ptr, ptr %memberidx1, align 8
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i101 = getelementptr inbounds %Compiler, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i101, align 8
  %53 = call ptr @malloc(i32 24)
  store i64 4, ptr %53, align 4
  %memberidx1.i.i102 = getelementptr inbounds %FloError, ptr %53, i64 0, i32 2
  store ptr %50, ptr %memberidx1.i.i102, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %53, i64 0, i32 1
  store ptr %48, ptr %memberidx2.i.i, align 8
  %memberidx.i.i103 = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i.i103, align 4
  %55 = add i64 %54, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 2
  %56 = load i64, ptr %memberidx.i.i.i, align 4
  %57 = icmp slt i64 %56, %55
  %.pre158 = load ptr, ptr %52, align 8
  br i1 %57, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry26, %while.body.i.i.i
  %58 = phi ptr [ %62, %while.body.i.i.i ], [ %.pre158, %if.entry26 ]
  %59 = phi i64 [ %63, %while.body.i.i.i ], [ %56, %if.entry26 ]
  %60 = shl nuw i64 %59, 1
  store i64 %60, ptr %memberidx.i.i.i, align 4
  %61 = shl i64 %59, 4
  %62 = call ptr @realloc(ptr %58, i64 %61)
  store ptr %62, ptr %52, align 8
  %63 = load i64, ptr %memberidx.i.i.i, align 4
  %64 = icmp slt i64 %63, %55
  br i1 %64, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre159 = load i64, ptr %memberidx.i.i103, align 4
  %.pre161 = add nsw i64 %.pre159, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry26, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre161, %TypeChecker_error.exit.loopexit ], [ %55, %if.entry26 ]
  %65 = phi ptr [ %62, %TypeChecker_error.exit.loopexit ], [ %.pre158, %if.entry26 ]
  %66 = phi i64 [ %.pre159, %TypeChecker_error.exit.loopexit ], [ %54, %if.entry26 ]
  store i64 %.pre-phi, ptr %memberidx.i.i103, align 4
  %67 = getelementptr inbounds ptr, ptr %65, i64 %66
  store ptr %53, ptr %67, align 8
  br label %common.ret

ifend28:                                          ; preds = %if.entry4.i, %if.entry.i, %check_is_var.exit
  %68 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %68, align 4
  %memberidx.i.i104 = getelementptr inbounds %Expression, ptr %68, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i104, align 4
  %memberidx1.i.i105 = getelementptr inbounds %Expression, ptr %68, i64 0, i32 1
  %memberidx.i106 = getelementptr inbounds %UnaryExpression, ptr %68, i64 0, i32 4
  store i64 %4, ptr %memberidx.i106, align 4
  %memberidx1.i107 = getelementptr inbounds %UnaryExpression, ptr %68, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i107, align 8
  %memberidx2.i108 = getelementptr inbounds %Expression, ptr %68, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i108, align 8
  store i1 false, ptr %memberidx1.i.i105, align 1
  br label %common.ret

if.entry31:                                       ; preds = %ifend22
  %memberidx.i110 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %69 = load i64, ptr %memberidx.i110, align 4
  switch i64 %69, label %ifend33.split [
    i64 8, label %if.entry.i113
    i64 13, label %if.entry4.i116
    i64 14, label %check_is_var.exit121
  ]

if.entry.i113:                                    ; preds = %if.entry31
  %memberidx1.i112 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %70 = load ptr, ptr %memberidx1.i112, align 8
  %71 = load i64, ptr %70, align 4
  %72 = icmp eq i64 %71, 1
  br i1 %72, label %if.entry34, label %ifend33.split

if.entry4.i116:                                   ; preds = %if.entry31
  %memberidx7.i115 = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %73 = load ptr, ptr %memberidx7.i115, align 8
  %74 = load i64, ptr %73, align 4
  %75 = icmp eq i64 %74, 1
  br i1 %75, label %if.entry34, label %ifend33.split

check_is_var.exit121:                             ; preds = %if.entry31
  %memberidx13.i118 = getelementptr inbounds %IndexExpression, ptr %6, i64 0, i32 4
  %76 = load ptr, ptr %memberidx13.i118, align 8
  %memberidx14.i119 = getelementptr inbounds %Expression, ptr %76, i64 0, i32 3
  %77 = load ptr, ptr %memberidx14.i119, align 8
  %78 = load i64, ptr %77, align 4
  %.not = icmp eq i64 %78, 15
  br i1 %.not, label %ifend33.split, label %if.entry34

ifend33.split:                                    ; preds = %if.entry4, %if.entry14, %check_is_var.exit121, %if.entry31, %if.entry.i113, %if.entry4.i116, %ifend22
  %79 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %memberidx.i129.phi.trans.insert = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  %.pre = load i64, ptr %memberidx.i129.phi.trans.insert, align 4
  %extract.t = trunc i64 %.pre to i32
  %phi.bo = add i32 %extract.t, 1
  br label %ifend40

if.entry34:                                       ; preds = %if.entry4.i116, %if.entry.i113, %check_is_var.exit121
  %80 = tail call ptr @malloc(i32 41)
  %81 = tail call ptr @malloc(i32 16)
  %82 = load ptr, ptr %memberidx2, align 8
  store i64 13, ptr %81, align 4
  %memberidx.i122 = getelementptr inbounds %PointerType, ptr %81, i64 0, i32 1
  store ptr %82, ptr %memberidx.i122, align 8
  store i64 8, ptr %80, align 4
  %memberidx.i.i123 = getelementptr inbounds %Expression, ptr %80, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i123, align 4
  %memberidx1.i.i124 = getelementptr inbounds %Expression, ptr %80, i64 0, i32 1
  %memberidx.i125 = getelementptr inbounds %UnaryExpression, ptr %80, i64 0, i32 4
  store i64 8, ptr %memberidx.i125, align 4
  %memberidx1.i126 = getelementptr inbounds %UnaryExpression, ptr %80, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i126, align 8
  %memberidx2.i127 = getelementptr inbounds %Expression, ptr %80, i64 0, i32 3
  store ptr %81, ptr %memberidx2.i127, align 8
  store i1 false, ptr %memberidx1.i.i124, align 1
  br label %common.ret

if.entry38:                                       ; preds = %ifend22
  %83 = load i64, ptr %11, align 4
  %84 = icmp eq i64 %83, 20
  br i1 %84, label %if.entry.i153, label %is_object.exit

if.entry.i153:                                    ; preds = %if.entry38, %if.entry.i153
  %.tr5.i = phi ptr [ %85, %if.entry.i153 ], [ %11, %if.entry38 ]
  %memberidx1.i152 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %85 = load ptr, ptr %memberidx1.i152, align 8
  %86 = load i64, ptr %85, align 4
  %87 = icmp eq i64 %86, 20
  br i1 %87, label %if.entry.i153, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i153, %if.entry38
  %.lcssa.i = phi i64 [ %83, %if.entry38 ], [ %86, %if.entry.i153 ]
  %88 = icmp eq i64 %.lcssa.i, 11
  %89 = icmp eq i64 %83, 13
  %90 = or i1 %89, %88
  br i1 %90, label %if.entry41, label %if.entry38.split

if.entry38.split:                                 ; preds = %is_object.exit
  %91 = tail call ptr @malloc(i32 1)
  store i8 38, ptr %91, align 8
  %92 = tail call ptr @malloc(i32 24)
  store ptr %91, ptr %92, align 8
  %memberidx1.i.i31.i = getelementptr inbounds %String, ptr %92, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i31.i, align 4
  %memberidx2.i.i32.i = getelementptr inbounds %String, ptr %92, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i32.i, align 4
  br label %ifend40

ifend40:                                          ; preds = %if.entry38.split, %ifend33.split
  %.off0 = phi i32 [ %phi.bo, %ifend33.split ], [ 2, %if.entry38.split ]
  %phi.call = phi ptr [ %79, %ifend33.split ], [ %92, %if.entry38.split ]
  %memberidx.i129 = getelementptr inbounds %String, ptr %phi.call, i64 0, i32 1
  %93 = tail call ptr @malloc(i32 %.off0)
  %94 = load ptr, ptr %phi.call, align 8
  %95 = load i64, ptr %memberidx.i129, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %93, ptr align 8 %94, i64 %95, i1 false)
  %96 = getelementptr inbounds i8, ptr %93, i64 %95
  store i8 0, ptr %96, align 1
  %97 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %11)
  %memberidx.i130 = getelementptr inbounds %String, ptr %97, i64 0, i32 1
  %98 = load i64, ptr %memberidx.i130, align 4
  %99 = trunc i64 %98 to i32
  %100 = add i32 %99, 1
  %101 = tail call ptr @malloc(i32 %100)
  %102 = load ptr, ptr %97, align 8
  %103 = load i64, ptr %memberidx.i130, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %101, ptr align 8 %102, i64 %103, i1 false)
  %104 = getelementptr inbounds i8, ptr %101, i64 %103
  store i8 0, ptr %104, align 1
  %105 = alloca ptr, align 8
  %106 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %105, ptr nonnull @185, ptr %93, ptr %101)
  %107 = load ptr, ptr %105, align 8
  %108 = tail call ptr @malloc(i32 24)
  store ptr %107, ptr %108, align 8
  %memberidx1.i131 = getelementptr inbounds %String, ptr %108, i64 0, i32 1
  store i64 %106, ptr %memberidx1.i131, align 4
  %memberidx2.i132 = getelementptr inbounds %String, ptr %108, i64 0, i32 2
  store i64 %106, ptr %memberidx2.i132, align 4
  tail call void @free(ptr %93)
  tail call void @free(ptr %101)
  %109 = load ptr, ptr %2, align 8
  %110 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i134 = getelementptr inbounds %Compiler, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx1.i134, align 8
  %112 = call ptr @malloc(i32 24)
  store i64 5, ptr %112, align 4
  %memberidx1.i.i135 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 2
  store ptr %109, ptr %memberidx1.i.i135, align 8
  %memberidx2.i.i136 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 1
  store ptr %108, ptr %memberidx2.i.i136, align 8
  %memberidx.i.i137 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 1
  %113 = load i64, ptr %memberidx.i.i137, align 4
  %114 = add i64 %113, 1
  %memberidx.i.i.i138 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 2
  %115 = load i64, ptr %memberidx.i.i.i138, align 4
  %116 = icmp slt i64 %115, %114
  %.pre155 = load ptr, ptr %111, align 8
  br i1 %116, label %while.body.i.i.i140, label %TypeChecker_error.exit141

while.body.i.i.i140:                              ; preds = %ifend40, %while.body.i.i.i140
  %117 = phi ptr [ %121, %while.body.i.i.i140 ], [ %.pre155, %ifend40 ]
  %118 = phi i64 [ %122, %while.body.i.i.i140 ], [ %115, %ifend40 ]
  %119 = shl nuw i64 %118, 1
  store i64 %119, ptr %memberidx.i.i.i138, align 4
  %120 = shl i64 %118, 4
  %121 = call ptr @realloc(ptr %117, i64 %120)
  store ptr %121, ptr %111, align 8
  %122 = load i64, ptr %memberidx.i.i.i138, align 4
  %123 = icmp slt i64 %122, %114
  br i1 %123, label %while.body.i.i.i140, label %TypeChecker_error.exit141.loopexit

TypeChecker_error.exit141.loopexit:               ; preds = %while.body.i.i.i140
  %.pre156 = load i64, ptr %memberidx.i.i137, align 4
  %.pre162 = add nsw i64 %.pre156, 1
  br label %TypeChecker_error.exit141

TypeChecker_error.exit141:                        ; preds = %ifend40, %TypeChecker_error.exit141.loopexit
  %.pre-phi163 = phi i64 [ %.pre162, %TypeChecker_error.exit141.loopexit ], [ %114, %ifend40 ]
  %124 = phi ptr [ %121, %TypeChecker_error.exit141.loopexit ], [ %.pre155, %ifend40 ]
  %125 = phi i64 [ %.pre156, %TypeChecker_error.exit141.loopexit ], [ %113, %ifend40 ]
  store i64 %.pre-phi163, ptr %memberidx.i.i137, align 4
  %126 = getelementptr inbounds ptr, ptr %124, i64 %125
  store ptr %112, ptr %126, align 8
  br label %common.ret

if.entry41:                                       ; preds = %is_object.exit
  %127 = tail call ptr @malloc(i32 41)
  %128 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %128, align 4
  store i64 8, ptr %127, align 4
  %memberidx.i.i142 = getelementptr inbounds %Expression, ptr %127, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i142, align 4
  %memberidx1.i.i143 = getelementptr inbounds %Expression, ptr %127, i64 0, i32 1
  %memberidx.i144 = getelementptr inbounds %UnaryExpression, ptr %127, i64 0, i32 4
  store i64 1, ptr %memberidx.i144, align 4
  %memberidx1.i145 = getelementptr inbounds %UnaryExpression, ptr %127, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i145, align 8
  %memberidx2.i146 = getelementptr inbounds %Expression, ptr %127, i64 0, i32 3
  store ptr %128, ptr %memberidx2.i146, align 8
  store i1 false, ptr %memberidx1.i.i143, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %args = alloca ptr, align 8
  %memberidx = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 3
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %3)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %5, i64 0, i32 5
  %6 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend27, %2, %TypeChecker_error.exit127, %TypeChecker_error.exit110, %TypeChecker_error.exit99, %TypeChecker_error.exit, %ifend10
  %common.ret.op = phi ptr [ %39, %ifend10 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit99 ], [ null, %TypeChecker_error.exit110 ], [ null, %TypeChecker_error.exit127 ], [ null, %2 ], [ null, %ifend27 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %9 = load i64, ptr %4, align 4
  %10 = icmp eq i64 %9, 20
  br i1 %10, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx5 = getelementptr inbounds %GenericType, ptr %4, i64 0, i32 3
  %11 = load ptr, ptr %memberidx5, align 8
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %memory_type.0 = phi ptr [ %11, %if.entry2 ], [ %4, %ifend ]
  %12 = tail call ptr @malloc(i32 24)
  %memberidx.i79 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 1
  store i64 0, ptr %memberidx.i79, align 4
  %memberidx1.i80 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 2
  store i64 8, ptr %memberidx1.i80, align 4
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %12, align 8
  store i64 0, ptr %memberidx.i79, align 4
  store ptr %12, ptr %args, align 8
  %14 = load i64, ptr %memory_type.0, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i, label %is_object.exit.thread

if.entry.i:                                       ; preds = %ifend4, %if.entry.i
  %.tr5.i = phi ptr [ %16, %if.entry.i ], [ %memory_type.0, %ifend4 ]
  %memberidx1.i136 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i136, align 8
  %17 = load i64, ptr %16, align 4
  switch i64 %17, label %else9 [
    i64 20, label %if.entry.i
    i64 11, label %if.entry8
  ]

is_object.exit.thread:                            ; preds = %ifend4
  switch i64 %14, label %else20 [
    i64 11, label %if.entry8.thread
    i64 13, label %if.entry19
  ]

if.entry8.thread:                                 ; preds = %is_object.exit.thread
  %18 = load ptr, ptr %0, align 8
  br label %if.entry3.i

if.entry8:                                        ; preds = %if.entry.i
  %19 = load ptr, ptr %0, align 8
  br i1 %15, label %if.entry.i138, label %if.entry3.i

if.entry.i138:                                    ; preds = %if.entry8, %if.entry.i138
  %.tr11.i141 = phi ptr [ %20, %if.entry.i138 ], [ %memory_type.0, %if.entry8 ]
  %memberidx1.i137 = getelementptr inbounds %GenericType, ptr %.tr11.i141, i64 0, i32 3
  %20 = load ptr, ptr %memberidx1.i137, align 8
  %21 = load i64, ptr %20, align 4
  %switch = icmp eq i64 %21, 20
  br i1 %switch, label %if.entry.i138, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i138, %if.entry8.thread, %if.entry8
  %22 = phi ptr [ %19, %if.entry8 ], [ %18, %if.entry8.thread ], [ %19, %if.entry.i138 ]
  %.tr11.i.lcssa = phi ptr [ %memory_type.0, %if.entry8 ], [ %memory_type.0, %if.entry8.thread ], [ %20, %if.entry.i138 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = load i64, ptr %23, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx2.i.i139 = getelementptr inbounds %Module, ptr %28, i64 0, i32 3
  %29 = load ptr, ptr %memberidx2.i.i139, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %30 = load i64, ptr %memberidx3.i.i, align 4
  %31 = load ptr, ptr %29, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 %30
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %33, align 8
  %memberidx13 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %35 = load ptr, ptr %memberidx13, align 8
  %36 = call fastcc ptr @TypeChecker_check_constructor_call(ptr nonnull %0, ptr %34, ptr %35, ptr nonnull %args)
  %.not78 = icmp eq ptr %36, null
  br i1 %.not78, label %if.entry3.i.ifend10_crit_edge, label %if.entry14

if.entry3.i.ifend10_crit_edge:                    ; preds = %if.entry3.i
  %.pre157 = load ptr, ptr %args, align 8
  br label %ifend10

else9:                                            ; preds = %if.entry.i
  %37 = icmp eq i64 %14, 13
  br i1 %37, label %if.entry19, label %else20

ifend10:                                          ; preds = %if.entry3.i.ifend10_crit_edge, %Array_Expression____sl__.exit
  %38 = phi ptr [ %.pre157, %if.entry3.i.ifend10_crit_edge ], [ %12, %Array_Expression____sl__.exit ]
  %memory_type.1 = phi ptr [ %memory_type.0, %if.entry3.i.ifend10_crit_edge ], [ %59, %Array_Expression____sl__.exit ]
  %39 = tail call ptr @malloc(i32 42)
  %memberidx41 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 4
  %40 = load i1, ptr %memberidx41, align 1
  store i64 8, ptr %39, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i81 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 6
  store ptr %memory_type.1, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 5
  store i1 %40, ptr %memberidx1.i82, align 1
  %memberidx2.i83 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 4
  store ptr %38, ptr %memberidx2.i83, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 3
  store ptr %4, ptr %memberidx3.i, align 8
  br label %common.ret

if.entry14:                                       ; preds = %if.entry3.i
  %41 = load ptr, ptr %1, align 8
  %42 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 5
  %43 = load ptr, ptr %memberidx1.i85, align 8
  %44 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %44, align 4
  %memberidx1.i.i86 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i86, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %44, i64 0, i32 1
  store ptr %36, ptr %memberidx2.i.i, align 8
  %memberidx.i.i87 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i.i87, align 4
  %46 = add i64 %45, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %47 = load i64, ptr %memberidx.i.i.i, align 4
  %48 = icmp slt i64 %47, %46
  %.pre154 = load ptr, ptr %43, align 8
  br i1 %48, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry14, %while.body.i.i.i
  %49 = phi ptr [ %53, %while.body.i.i.i ], [ %.pre154, %if.entry14 ]
  %50 = phi i64 [ %54, %while.body.i.i.i ], [ %47, %if.entry14 ]
  %51 = shl nuw i64 %50, 1
  store i64 %51, ptr %memberidx.i.i.i, align 4
  %52 = shl i64 %50, 4
  %53 = tail call ptr @realloc(ptr %49, i64 %52)
  store ptr %53, ptr %43, align 8
  %54 = load i64, ptr %memberidx.i.i.i, align 4
  %55 = icmp slt i64 %54, %46
  br i1 %55, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre155 = load i64, ptr %memberidx.i.i87, align 4
  %.pre158 = add nsw i64 %.pre155, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry14, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre158, %TypeChecker_error.exit.loopexit ], [ %46, %if.entry14 ]
  %56 = phi ptr [ %53, %TypeChecker_error.exit.loopexit ], [ %.pre154, %if.entry14 ]
  %57 = phi i64 [ %.pre155, %TypeChecker_error.exit.loopexit ], [ %45, %if.entry14 ]
  store i64 %.pre-phi, ptr %memberidx.i.i87, align 4
  %58 = getelementptr inbounds ptr, ptr %56, i64 %57
  store ptr %44, ptr %58, align 8
  br label %common.ret

if.entry19:                                       ; preds = %is_object.exit.thread, %else9
  %memberidx22 = getelementptr inbounds %PointerType, ptr %memory_type.0, i64 0, i32 1
  %59 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %60 = load ptr, ptr %memberidx23, align 8
  %memberidx24 = getelementptr inbounds %Array_ExpressionNode_, ptr %60, i64 0, i32 1
  %61 = load i64, ptr %memberidx24, align 4
  %.not = icmp eq i64 %61, 1
  br i1 %.not, label %ifend27, label %if.entry25

else20:                                           ; preds = %is_object.exit.thread, %else9
  %62 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %memory_type.0)
  %memberidx.i88 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  %63 = load i64, ptr %memberidx.i88, align 4
  %64 = trunc i64 %63 to i32
  %65 = add i32 %64, 1
  %66 = tail call ptr @malloc(i32 %65)
  %67 = load ptr, ptr %62, align 8
  %68 = load i64, ptr %memberidx.i88, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %66, ptr align 8 %67, i64 %68, i1 false)
  %69 = getelementptr inbounds i8, ptr %66, i64 %68
  store i8 0, ptr %69, align 1
  %70 = alloca ptr, align 8
  %71 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %70, ptr nonnull @193, ptr %66)
  %72 = load ptr, ptr %70, align 8
  %73 = tail call ptr @malloc(i32 24)
  store ptr %72, ptr %73, align 8
  %memberidx1.i89 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  store i64 %71, ptr %memberidx1.i89, align 4
  %memberidx2.i90 = getelementptr inbounds %String, ptr %73, i64 0, i32 2
  store i64 %71, ptr %memberidx2.i90, align 4
  tail call void @free(ptr %66)
  %74 = load ptr, ptr %1, align 8
  %75 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i92 = getelementptr inbounds %Compiler, ptr %75, i64 0, i32 5
  %76 = load ptr, ptr %memberidx1.i92, align 8
  %77 = call ptr @malloc(i32 24)
  store i64 5, ptr %77, align 4
  %memberidx1.i.i93 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 2
  store ptr %74, ptr %memberidx1.i.i93, align 8
  %memberidx2.i.i94 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 1
  store ptr %73, ptr %memberidx2.i.i94, align 8
  %memberidx.i.i95 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %78 = load i64, ptr %memberidx.i.i95, align 4
  %79 = add i64 %78, 1
  %memberidx.i.i.i96 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 2
  %80 = load i64, ptr %memberidx.i.i.i96, align 4
  %81 = icmp slt i64 %80, %79
  %.pre = load ptr, ptr %76, align 8
  br i1 %81, label %while.body.i.i.i98, label %TypeChecker_error.exit99

while.body.i.i.i98:                               ; preds = %else20, %while.body.i.i.i98
  %82 = phi ptr [ %86, %while.body.i.i.i98 ], [ %.pre, %else20 ]
  %83 = phi i64 [ %87, %while.body.i.i.i98 ], [ %80, %else20 ]
  %84 = shl nuw i64 %83, 1
  store i64 %84, ptr %memberidx.i.i.i96, align 4
  %85 = shl i64 %83, 4
  %86 = call ptr @realloc(ptr %82, i64 %85)
  store ptr %86, ptr %76, align 8
  %87 = load i64, ptr %memberidx.i.i.i96, align 4
  %88 = icmp slt i64 %87, %79
  br i1 %88, label %while.body.i.i.i98, label %TypeChecker_error.exit99.loopexit

TypeChecker_error.exit99.loopexit:                ; preds = %while.body.i.i.i98
  %.pre143 = load i64, ptr %memberidx.i.i95, align 4
  %.pre165 = add nsw i64 %.pre143, 1
  br label %TypeChecker_error.exit99

TypeChecker_error.exit99:                         ; preds = %else20, %TypeChecker_error.exit99.loopexit
  %.pre-phi166 = phi i64 [ %.pre165, %TypeChecker_error.exit99.loopexit ], [ %79, %else20 ]
  %89 = phi ptr [ %86, %TypeChecker_error.exit99.loopexit ], [ %.pre, %else20 ]
  %90 = phi i64 [ %.pre143, %TypeChecker_error.exit99.loopexit ], [ %78, %else20 ]
  store i64 %.pre-phi166, ptr %memberidx.i.i95, align 4
  %91 = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %77, ptr %91, align 8
  br label %common.ret

if.entry25:                                       ; preds = %if.entry19
  %92 = alloca ptr, align 8
  %93 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %92, ptr nonnull @191, i64 %61)
  %94 = load ptr, ptr %92, align 8
  %95 = tail call ptr @malloc(i32 24)
  store ptr %94, ptr %95, align 8
  %memberidx1.i100 = getelementptr inbounds %String, ptr %95, i64 0, i32 1
  store i64 %93, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %String, ptr %95, i64 0, i32 2
  store i64 %93, ptr %memberidx2.i101, align 4
  %96 = load ptr, ptr %1, align 8
  %97 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i103 = getelementptr inbounds %Compiler, ptr %97, i64 0, i32 5
  %98 = load ptr, ptr %memberidx1.i103, align 8
  %99 = call ptr @malloc(i32 24)
  store i64 4, ptr %99, align 4
  %memberidx1.i.i104 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 2
  store ptr %96, ptr %memberidx1.i.i104, align 8
  %memberidx2.i.i105 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 1
  store ptr %95, ptr %memberidx2.i.i105, align 8
  %memberidx.i.i106 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %100 = load i64, ptr %memberidx.i.i106, align 4
  %101 = add i64 %100, 1
  %memberidx.i.i.i107 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 2
  %102 = load i64, ptr %memberidx.i.i.i107, align 4
  %103 = icmp slt i64 %102, %101
  %.pre145 = load ptr, ptr %98, align 8
  br i1 %103, label %while.body.i.i.i109, label %TypeChecker_error.exit110

while.body.i.i.i109:                              ; preds = %if.entry25, %while.body.i.i.i109
  %104 = phi ptr [ %108, %while.body.i.i.i109 ], [ %.pre145, %if.entry25 ]
  %105 = phi i64 [ %109, %while.body.i.i.i109 ], [ %102, %if.entry25 ]
  %106 = shl nuw i64 %105, 1
  store i64 %106, ptr %memberidx.i.i.i107, align 4
  %107 = shl i64 %105, 4
  %108 = call ptr @realloc(ptr %104, i64 %107)
  store ptr %108, ptr %98, align 8
  %109 = load i64, ptr %memberidx.i.i.i107, align 4
  %110 = icmp slt i64 %109, %101
  br i1 %110, label %while.body.i.i.i109, label %TypeChecker_error.exit110.loopexit

TypeChecker_error.exit110.loopexit:               ; preds = %while.body.i.i.i109
  %.pre146 = load i64, ptr %memberidx.i.i106, align 4
  %.pre163 = add nsw i64 %.pre146, 1
  br label %TypeChecker_error.exit110

TypeChecker_error.exit110:                        ; preds = %if.entry25, %TypeChecker_error.exit110.loopexit
  %.pre-phi164 = phi i64 [ %.pre163, %TypeChecker_error.exit110.loopexit ], [ %101, %if.entry25 ]
  %111 = phi ptr [ %108, %TypeChecker_error.exit110.loopexit ], [ %.pre145, %if.entry25 ]
  %112 = phi i64 [ %.pre146, %TypeChecker_error.exit110.loopexit ], [ %100, %if.entry25 ]
  store i64 %.pre-phi164, ptr %memberidx.i.i106, align 4
  %113 = getelementptr inbounds ptr, ptr %111, i64 %112
  store ptr %99, ptr %113, align 8
  br label %common.ret

ifend27:                                          ; preds = %if.entry19
  %114 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %114, align 4
  %memberidx.i111 = getelementptr inbounds %IntType, ptr %114, i64 0, i32 1
  store i1 false, ptr %memberidx.i111, align 1
  %115 = load ptr, ptr %memberidx23, align 8
  %116 = load ptr, ptr %115, align 8
  %117 = load ptr, ptr %116, align 8
  %118 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %114, ptr %117)
  %119 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i113 = getelementptr inbounds %Compiler, ptr %119, i64 0, i32 5
  %120 = load ptr, ptr %memberidx1.i113, align 8
  %memberidx2.i114 = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 1
  %121 = load i64, ptr %memberidx2.i114, align 4
  %122 = icmp sgt i64 %121, 0
  br i1 %122, label %common.ret, label %ifend32

ifend32:                                          ; preds = %ifend27
  %memberidx33 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 3
  %123 = load ptr, ptr %memberidx33, align 8
  %124 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %114, ptr %123)
  br i1 %124, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %ifend32
  %125 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %114)
  %memberidx.i115 = getelementptr inbounds %String, ptr %125, i64 0, i32 1
  %126 = load i64, ptr %memberidx.i115, align 4
  %127 = trunc i64 %126 to i32
  %128 = add i32 %127, 1
  %129 = tail call ptr @malloc(i32 %128)
  %130 = load ptr, ptr %125, align 8
  %131 = load i64, ptr %memberidx.i115, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %129, ptr align 8 %130, i64 %131, i1 false)
  %132 = getelementptr inbounds i8, ptr %129, i64 %131
  store i8 0, ptr %132, align 1
  %133 = load ptr, ptr %memberidx33, align 8
  %134 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %133)
  %memberidx.i116 = getelementptr inbounds %String, ptr %134, i64 0, i32 1
  %135 = load i64, ptr %memberidx.i116, align 4
  %136 = trunc i64 %135 to i32
  %137 = add i32 %136, 1
  %138 = tail call ptr @malloc(i32 %137)
  %139 = load ptr, ptr %134, align 8
  %140 = load i64, ptr %memberidx.i116, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %138, ptr align 8 %139, i64 %140, i1 false)
  %141 = getelementptr inbounds i8, ptr %138, i64 %140
  store i8 0, ptr %141, align 1
  %142 = alloca ptr, align 8
  %143 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %142, ptr nonnull @192, ptr %129, ptr %138)
  %144 = load ptr, ptr %142, align 8
  %145 = tail call ptr @malloc(i32 24)
  store ptr %144, ptr %145, align 8
  %memberidx1.i117 = getelementptr inbounds %String, ptr %145, i64 0, i32 1
  store i64 %143, ptr %memberidx1.i117, align 4
  %memberidx2.i118 = getelementptr inbounds %String, ptr %145, i64 0, i32 2
  store i64 %143, ptr %memberidx2.i118, align 4
  tail call void @free(ptr %129)
  tail call void @free(ptr %138)
  %146 = load ptr, ptr %memberidx23, align 8
  %147 = load ptr, ptr %146, align 8
  %148 = load ptr, ptr %147, align 8
  %149 = load ptr, ptr %148, align 8
  %150 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i120 = getelementptr inbounds %Compiler, ptr %150, i64 0, i32 5
  %151 = load ptr, ptr %memberidx1.i120, align 8
  %152 = call ptr @malloc(i32 24)
  store i64 4, ptr %152, align 4
  %memberidx1.i.i121 = getelementptr inbounds %FloError, ptr %152, i64 0, i32 2
  store ptr %149, ptr %memberidx1.i.i121, align 8
  %memberidx2.i.i122 = getelementptr inbounds %FloError, ptr %152, i64 0, i32 1
  store ptr %145, ptr %memberidx2.i.i122, align 8
  %memberidx.i.i123 = getelementptr inbounds %Array_FloError_, ptr %151, i64 0, i32 1
  %153 = load i64, ptr %memberidx.i.i123, align 4
  %154 = add i64 %153, 1
  %memberidx.i.i.i124 = getelementptr inbounds %Array_FloError_, ptr %151, i64 0, i32 2
  %155 = load i64, ptr %memberidx.i.i.i124, align 4
  %156 = icmp slt i64 %155, %154
  %.pre148 = load ptr, ptr %151, align 8
  br i1 %156, label %while.body.i.i.i126, label %TypeChecker_error.exit127

while.body.i.i.i126:                              ; preds = %if.entry34, %while.body.i.i.i126
  %157 = phi ptr [ %161, %while.body.i.i.i126 ], [ %.pre148, %if.entry34 ]
  %158 = phi i64 [ %162, %while.body.i.i.i126 ], [ %155, %if.entry34 ]
  %159 = shl nuw i64 %158, 1
  store i64 %159, ptr %memberidx.i.i.i124, align 4
  %160 = shl i64 %158, 4
  %161 = call ptr @realloc(ptr %157, i64 %160)
  store ptr %161, ptr %151, align 8
  %162 = load i64, ptr %memberidx.i.i.i124, align 4
  %163 = icmp slt i64 %162, %154
  br i1 %163, label %while.body.i.i.i126, label %TypeChecker_error.exit127.loopexit

TypeChecker_error.exit127.loopexit:               ; preds = %while.body.i.i.i126
  %.pre149 = load i64, ptr %memberidx.i.i123, align 4
  %.pre161 = add nsw i64 %.pre149, 1
  br label %TypeChecker_error.exit127

TypeChecker_error.exit127:                        ; preds = %if.entry34, %TypeChecker_error.exit127.loopexit
  %.pre-phi162 = phi i64 [ %.pre161, %TypeChecker_error.exit127.loopexit ], [ %154, %if.entry34 ]
  %164 = phi ptr [ %161, %TypeChecker_error.exit127.loopexit ], [ %.pre148, %if.entry34 ]
  %165 = phi i64 [ %.pre149, %TypeChecker_error.exit127.loopexit ], [ %153, %if.entry34 ]
  store i64 %.pre-phi162, ptr %memberidx.i.i123, align 4
  %166 = getelementptr inbounds ptr, ptr %164, i64 %165
  store ptr %152, ptr %166, align 8
  tail call void @free(ptr %114)
  br label %common.ret

ifend36:                                          ; preds = %ifend32
  %167 = load i64, ptr %memberidx.i79, align 4
  %168 = add i64 %167, 1
  %169 = load i64, ptr %memberidx1.i80, align 4
  %170 = icmp slt i64 %169, %168
  %.pre151 = load ptr, ptr %12, align 8
  br i1 %170, label %while.body.i.i, label %Array_Expression____sl__.exit

while.body.i.i:                                   ; preds = %ifend36, %while.body.i.i
  %171 = phi ptr [ %175, %while.body.i.i ], [ %.pre151, %ifend36 ]
  %172 = phi i64 [ %176, %while.body.i.i ], [ %169, %ifend36 ]
  %173 = shl nuw i64 %172, 1
  store i64 %173, ptr %memberidx1.i80, align 4
  %174 = shl i64 %172, 4
  %175 = tail call ptr @realloc(ptr %171, i64 %174)
  store ptr %175, ptr %12, align 8
  %176 = load i64, ptr %memberidx1.i80, align 4
  %177 = icmp slt i64 %176, %168
  br i1 %177, label %while.body.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.body.i.i
  %.pre152 = load i64, ptr %memberidx.i79, align 4
  %.pre159 = add nsw i64 %.pre152, 1
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend36, %Array_Expression____sl__.exit.loopexit
  %.pre-phi160 = phi i64 [ %.pre159, %Array_Expression____sl__.exit.loopexit ], [ %168, %ifend36 ]
  %178 = phi ptr [ %175, %Array_Expression____sl__.exit.loopexit ], [ %.pre151, %ifend36 ]
  %179 = phi i64 [ %.pre152, %Array_Expression____sl__.exit.loopexit ], [ %167, %ifend36 ]
  store i64 %.pre-phi160, ptr %memberidx.i79, align 4
  %180 = getelementptr inbounds ptr, ptr %178, i64 %179
  store ptr %118, ptr %180, align 8
  br label %ifend10
}

define internal fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i49 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i.i50 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx1.i.i50, align 8
  %memberidx2.i.i51 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i.i51, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend.i

ifend.i:                                          ; preds = %3
  %memberidx.i52 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i52, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %ifend, label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i53 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i53, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i, align 1
  %.pre = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre, i64 0, i32 5
  %.pre54 = load ptr, ptr %memberidx1.i.phi.trans.insert, align 8
  %memberidx2.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre54, i64 0, i32 1
  %.pre55 = load i64, ptr %memberidx2.i.phi.trans.insert, align 4
  %17 = icmp sgt i64 %.pre55, 0
  br i1 %17, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %ifend4, %ifend, %TypeChecker_check_condition.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %71, %ifend13 ], [ null, %TypeChecker_check_condition.exit ], [ null, %ifend ], [ null, %ifend4 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %ifend.i, %TypeChecker_check_condition.exit
  %common.ret.op.i63 = phi ptr [ %15, %TypeChecker_check_condition.exit ], [ %6, %ifend.i ]
  %memberidx1 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 4
  %18 = load ptr, ptr %memberidx1, align 8
  %19 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %1, ptr %18)
  %20 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i33 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx1.i33, align 8
  %memberidx2.i34 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx2.i34, align 4
  %23 = icmp sgt i64 %22, 0
  br i1 %23, label %common.ret, label %ifend4

ifend4:                                           ; preds = %ifend
  %memberidx5 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %24 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 5
  %25 = load ptr, ptr %memberidx6, align 8
  %26 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %24, ptr %25)
  %27 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i36 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 5
  %28 = load ptr, ptr %memberidx1.i36, align 8
  %memberidx2.i37 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx2.i37, align 4
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend4
  %memberidx10 = getelementptr inbounds %Expression, ptr %26, i64 0, i32 3
  %31 = load ptr, ptr %memberidx10, align 8
  %32 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %24, ptr %31)
  br i1 %32, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %33 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %24)
  %memberidx.i38 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i38, align 4
  %35 = trunc i64 %34 to i32
  %36 = add i32 %35, 1
  %37 = tail call ptr @malloc(i32 %36)
  %38 = load ptr, ptr %33, align 8
  %39 = load i64, ptr %memberidx.i38, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %38, i64 %39, i1 false)
  %40 = getelementptr inbounds i8, ptr %37, i64 %39
  store i8 0, ptr %40, align 1
  %41 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %31)
  %memberidx.i39 = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i39, align 4
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, 1
  %45 = tail call ptr @malloc(i32 %44)
  %46 = load ptr, ptr %41, align 8
  %47 = load i64, ptr %memberidx.i39, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %45, ptr align 8 %46, i64 %47, i1 false)
  %48 = getelementptr inbounds i8, ptr %45, i64 %47
  store i8 0, ptr %48, align 1
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @206, ptr %37, ptr %45)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i40 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 %50, ptr %memberidx1.i40, align 4
  %memberidx2.i41 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i41, align 4
  tail call void @free(ptr %37)
  tail call void @free(ptr %45)
  %53 = load ptr, ptr %2, align 8
  %54 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i43 = getelementptr inbounds %Compiler, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx1.i43, align 8
  %56 = call ptr @malloc(i32 24)
  store i64 5, ptr %56, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 2
  store ptr %53, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 1
  store ptr %52, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %57 = load i64, ptr %memberidx.i.i, align 4
  %58 = add i64 %57, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %59 = load i64, ptr %memberidx.i.i.i, align 4
  %60 = icmp slt i64 %59, %58
  %.pre56 = load ptr, ptr %55, align 8
  br i1 %60, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry11, %while.body.i.i.i
  %61 = phi ptr [ %65, %while.body.i.i.i ], [ %.pre56, %if.entry11 ]
  %62 = phi i64 [ %66, %while.body.i.i.i ], [ %59, %if.entry11 ]
  %63 = shl nuw i64 %62, 1
  store i64 %63, ptr %memberidx.i.i.i, align 4
  %64 = shl i64 %62, 4
  %65 = call ptr @realloc(ptr %61, i64 %64)
  store ptr %65, ptr %55, align 8
  %66 = load i64, ptr %memberidx.i.i.i, align 4
  %67 = icmp slt i64 %66, %58
  br i1 %67, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre57 = load i64, ptr %memberidx.i.i, align 4
  %.pre59 = add nsw i64 %.pre57, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre59, %TypeChecker_error.exit.loopexit ], [ %58, %if.entry11 ]
  %68 = phi ptr [ %65, %TypeChecker_error.exit.loopexit ], [ %.pre56, %if.entry11 ]
  %69 = phi i64 [ %.pre57, %TypeChecker_error.exit.loopexit ], [ %57, %if.entry11 ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %70 = getelementptr inbounds ptr, ptr %68, i64 %69
  store ptr %56, ptr %70, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %71 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %71, align 4
  %memberidx.i.i44 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i44, align 4
  %memberidx1.i.i45 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i45, align 1
  %memberidx.i46 = getelementptr inbounds %TernaryExpression, ptr %71, i64 0, i32 4
  store ptr %common.ret.op.i63, ptr %memberidx.i46, align 8
  %memberidx1.i47 = getelementptr inbounds %TernaryExpression, ptr %71, i64 0, i32 5
  store ptr %19, ptr %memberidx1.i47, align 8
  %memberidx2.i48 = getelementptr inbounds %TernaryExpression, ptr %71, i64 0, i32 6
  store ptr %26, ptr %memberidx2.i48, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %71, i64 0, i32 3
  %72 = load ptr, ptr %memberidx5, align 8
  store ptr %72, ptr %memberidx3.i, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load i64, ptr %1, align 4
  switch i64 %3, label %ifend56 [
    i64 16, label %if.entry
    i64 13, label %if.entry5
    i64 11, label %if.entry10
    i64 12, label %if.entry16
    i64 14, label %if.entry23
    i64 15, label %if.entry29
    i64 20, label %if.entry39
    i64 18, label %if.entry50
    i64 17, label %if.entry54
  ]

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 0)
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 2
  %memberidx = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %6 = load ptr, ptr %memberidx, align 8
  %7 = tail call ptr @malloc(i32 25)
  %8 = load ptr, ptr %6, align 8
  %memberidx1.i = getelementptr inbounds %Array_Type_, ptr %6, i64 0, i32 1
  %9 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %7, align 1
  %memberidx1.i.i85 = getelementptr inbounds %ArrayIterator_Type_, ptr %7, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i85, align 4
  %memberidx2.i.i86 = getelementptr inbounds %ArrayIterator_Type_, ptr %7, i64 0, i32 3
  store ptr %8, ptr %memberidx2.i.i86, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Type_, ptr %7, i64 0, i32 2
  store i64 %9, ptr %memberidx3.i.i, align 4
  %10 = icmp slt i64 %9, 1
  br i1 %10, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry, %String___adda__.exit
  %11 = phi ptr [ %32, %String___adda__.exit ], [ %4, %if.entry ]
  %12 = phi i64 [ %33, %String___adda__.exit ], [ 0, %if.entry ]
  %13 = phi i64 [ %.pre-phi, %String___adda__.exit ], [ 0, %if.entry ]
  %.in167 = phi ptr [ %37, %String___adda__.exit ], [ %8, %if.entry ]
  %14 = phi i64 [ %35, %String___adda__.exit ], [ 1, %if.entry ]
  %15 = load ptr, ptr %.in167, align 8
  %16 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %15)
  %memberidx.i87 = getelementptr inbounds %String, ptr %16, i64 0, i32 1
  %17 = load i64, ptr %memberidx.i87, align 4
  %18 = trunc i64 %17 to i32
  %19 = add i32 %18, 1
  %20 = call ptr @malloc(i32 %19)
  %21 = load ptr, ptr %16, align 8
  %22 = load i64, ptr %memberidx.i87, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %21, i64 %22, i1 false)
  %23 = getelementptr inbounds i8, ptr %20, i64 %22
  store i8 0, ptr %23, align 1
  %24 = alloca ptr, align 8
  %25 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %24, ptr nonnull @79, ptr %20)
  %26 = load ptr, ptr %24, align 8
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i88 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i88, align 4
  %memberidx2.i89 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 %25, ptr %memberidx2.i89, align 4
  tail call void @free(ptr %20)
  %28 = add nuw i64 %13, %25
  %29 = icmp slt i64 %12, %28
  br i1 %29, label %if.entry.i.i.i, label %String___adda__.exit

if.entry.i.i.i:                                   ; preds = %for.body
  %30 = call ptr @realloc(ptr %11, i64 %28)
  store ptr %30, ptr %5, align 8
  store i64 %28, ptr %memberidx2.i.i, align 4
  %.pre175 = load i64, ptr %memberidx1.i.i, align 4
  %.pre176 = add nuw i64 %.pre175, %25
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %for.body, %if.entry.i.i.i
  %.pre-phi = phi i64 [ %28, %for.body ], [ %.pre176, %if.entry.i.i.i ]
  %31 = phi i64 [ %13, %for.body ], [ %.pre175, %if.entry.i.i.i ]
  %32 = phi ptr [ %11, %for.body ], [ %30, %if.entry.i.i.i ]
  %33 = phi i64 [ %12, %for.body ], [ %28, %if.entry.i.i.i ]
  %34 = getelementptr inbounds i8, ptr %32, i64 %31
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %34, ptr align 8 %26, i64 %25, i1 false)
  store i64 %.pre-phi, ptr %memberidx1.i.i, align 4
  %35 = add nuw nsw i64 %14, 1
  %36 = load ptr, ptr %memberidx2.i.i86, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %14
  %38 = load i64, ptr %memberidx3.i.i, align 4
  %.not182 = icmp slt i64 %14, %38
  br i1 %.not182, label %for.body, label %for.end

common.ret:                                       ; preds = %ifend56, %if.entry54, %if.entry50, %for.end46, %for.end35, %if.entry23, %if.entry16, %if.entry10, %if.entry5, %for.end
  %common.ret.op = phi ptr [ %57, %for.end ], [ %70, %if.entry5 ], [ %83, %if.entry10 ], [ %96, %if.entry16 ], [ %110, %if.entry23 ], [ %142, %for.end35 ], [ %188, %for.end46 ], [ %190, %if.entry50 ], [ %192, %if.entry54 ], [ %193, %ifend56 ]
  ret ptr %common.ret.op

for.end:                                          ; preds = %String___adda__.exit, %if.entry
  %39 = phi ptr [ %4, %if.entry ], [ %32, %String___adda__.exit ]
  %40 = phi i64 [ 0, %if.entry ], [ %.pre-phi, %String___adda__.exit ]
  tail call void @free(ptr nonnull %7)
  %41 = trunc i64 %40 to i32
  %42 = add i32 %41, 1
  %43 = call ptr @malloc(i32 %42)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %43, ptr align 8 %39, i64 %40, i1 false)
  %44 = getelementptr inbounds i8, ptr %43, i64 %40
  store i8 0, ptr %44, align 1
  %memberidx3 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 2
  %45 = load ptr, ptr %memberidx3, align 8
  %46 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %45)
  %memberidx.i94 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx.i94, align 4
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, 1
  %50 = call ptr @malloc(i32 %49)
  %51 = load ptr, ptr %46, align 8
  %52 = load i64, ptr %memberidx.i94, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %50, ptr align 8 %51, i64 %52, i1 false)
  %53 = getelementptr inbounds i8, ptr %50, i64 %52
  store i8 0, ptr %53, align 1
  %54 = alloca ptr, align 8
  %55 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %54, ptr nonnull @80, ptr %43, ptr %50)
  %56 = load ptr, ptr %54, align 8
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  %memberidx1.i95 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  store i64 %55, ptr %memberidx1.i95, align 4
  %memberidx2.i96 = getelementptr inbounds %String, ptr %57, i64 0, i32 2
  store i64 %55, ptr %memberidx2.i96, align 4
  tail call void @free(ptr %43)
  tail call void @free(ptr %50)
  br label %common.ret

if.entry5:                                        ; preds = %2
  %memberidx8 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %58 = load ptr, ptr %memberidx8, align 8
  %59 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %58)
  %memberidx.i99 = getelementptr inbounds %String, ptr %59, i64 0, i32 1
  %60 = load i64, ptr %memberidx.i99, align 4
  %61 = trunc i64 %60 to i32
  %62 = add i32 %61, 1
  %63 = tail call ptr @malloc(i32 %62)
  %64 = load ptr, ptr %59, align 8
  %65 = load i64, ptr %memberidx.i99, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %63, ptr align 8 %64, i64 %65, i1 false)
  %66 = getelementptr inbounds i8, ptr %63, i64 %65
  store i8 0, ptr %66, align 1
  %67 = alloca ptr, align 8
  %68 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %67, ptr nonnull @81, ptr %63)
  %69 = load ptr, ptr %67, align 8
  %70 = tail call ptr @malloc(i32 24)
  store ptr %69, ptr %70, align 8
  %memberidx1.i100 = getelementptr inbounds %String, ptr %70, i64 0, i32 1
  store i64 %68, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %String, ptr %70, i64 0, i32 2
  store i64 %68, ptr %memberidx2.i101, align 4
  tail call void @free(ptr %63)
  br label %common.ret

if.entry10:                                       ; preds = %2
  %71 = load ptr, ptr %0, align 8
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %1, i64 0, i32 1
  %72 = load ptr, ptr %memberidx6.i, align 8
  %73 = load ptr, ptr %71, align 8
  %74 = load i64, ptr %72, align 4
  %75 = load ptr, ptr %73, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %74
  %77 = load ptr, ptr %76, align 8
  %memberidx2.i.i153 = getelementptr inbounds %Module, ptr %77, i64 0, i32 3
  %78 = load ptr, ptr %memberidx2.i.i153, align 8
  %memberidx3.i.i154 = getelementptr inbounds %TypeId, ptr %72, i64 0, i32 2
  %79 = load i64, ptr %memberidx3.i.i154, align 4
  %80 = load ptr, ptr %78, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %79
  %82 = load ptr, ptr %81, align 8
  %memberidx14 = getelementptr inbounds %Class, ptr %82, i64 0, i32 1
  %83 = load ptr, ptr %memberidx14, align 8
  br label %common.ret

if.entry16:                                       ; preds = %2
  %84 = load ptr, ptr %0, align 8
  %memberidx20 = getelementptr inbounds %EnumType, ptr %1, i64 0, i32 1
  %85 = load ptr, ptr %memberidx20, align 8
  %86 = load ptr, ptr %84, align 8
  %87 = load i64, ptr %85, align 4
  %88 = load ptr, ptr %86, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  %memberidx2.i102 = getelementptr inbounds %Module, ptr %90, i64 0, i32 6
  %91 = load ptr, ptr %memberidx2.i102, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %85, i64 0, i32 2
  %92 = load i64, ptr %memberidx3.i, align 4
  %93 = load ptr, ptr %91, align 8
  %94 = getelementptr inbounds ptr, ptr %93, i64 %92
  %95 = load ptr, ptr %94, align 8
  %memberidx21 = getelementptr inbounds %Enum, ptr %95, i64 0, i32 1
  %96 = load ptr, ptr %memberidx21, align 8
  br label %common.ret

if.entry23:                                       ; preds = %2
  %memberidx26 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %97 = load ptr, ptr %memberidx26, align 8
  %98 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %97)
  %memberidx.i107 = getelementptr inbounds %String, ptr %98, i64 0, i32 1
  %99 = load i64, ptr %memberidx.i107, align 4
  %100 = trunc i64 %99 to i32
  %101 = add i32 %100, 1
  %102 = tail call ptr @malloc(i32 %101)
  %103 = load ptr, ptr %98, align 8
  %104 = load i64, ptr %memberidx.i107, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %102, ptr align 8 %103, i64 %104, i1 false)
  %105 = getelementptr inbounds i8, ptr %102, i64 %104
  store i8 0, ptr %105, align 1
  %memberidx27 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %106 = load i64, ptr %memberidx27, align 4
  %107 = alloca ptr, align 8
  %108 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %107, ptr nonnull @82, ptr %102, i64 %106)
  %109 = load ptr, ptr %107, align 8
  %110 = tail call ptr @malloc(i32 24)
  store ptr %109, ptr %110, align 8
  %memberidx1.i108 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  store i64 %108, ptr %memberidx1.i108, align 4
  %memberidx2.i109 = getelementptr inbounds %String, ptr %110, i64 0, i32 2
  store i64 %108, ptr %memberidx2.i109, align 4
  tail call void @free(ptr %102)
  br label %common.ret

if.entry29:                                       ; preds = %2
  %111 = tail call ptr @malloc(i32 0)
  %112 = tail call ptr @malloc(i32 24)
  store ptr %111, ptr %112, align 8
  %memberidx1.i.i110 = getelementptr inbounds %String, ptr %112, i64 0, i32 1
  %memberidx2.i.i111 = getelementptr inbounds %String, ptr %112, i64 0, i32 2
  %memberidx36 = getelementptr inbounds %TupleType, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i110, i8 0, i64 16, i1 false)
  %113 = load ptr, ptr %memberidx36, align 8
  %114 = tail call ptr @malloc(i32 25)
  %115 = load ptr, ptr %113, align 8
  %memberidx1.i112 = getelementptr inbounds %Array_Type_, ptr %113, i64 0, i32 1
  %116 = load i64, ptr %memberidx1.i112, align 4
  store i1 false, ptr %114, align 1
  %memberidx1.i.i113 = getelementptr inbounds %ArrayIterator_Type_, ptr %114, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i113, align 4
  %memberidx2.i.i114 = getelementptr inbounds %ArrayIterator_Type_, ptr %114, i64 0, i32 3
  store ptr %115, ptr %memberidx2.i.i114, align 8
  %memberidx3.i.i115 = getelementptr inbounds %ArrayIterator_Type_, ptr %114, i64 0, i32 2
  store i64 %116, ptr %memberidx3.i.i115, align 4
  %117 = icmp slt i64 %116, 1
  br i1 %117, label %for.end35, label %for.body34

for.body34:                                       ; preds = %if.entry29, %String___adda__.exit125
  %118 = phi ptr [ %128, %String___adda__.exit125 ], [ %111, %if.entry29 ]
  %119 = phi i64 [ %129, %String___adda__.exit125 ], [ 0, %if.entry29 ]
  %120 = phi i64 [ %.pre-phi178, %String___adda__.exit125 ], [ 0, %if.entry29 ]
  %121 = phi i64 [ %131, %String___adda__.exit125 ], [ 1, %if.entry29 ]
  %122 = tail call ptr @malloc(i32 25)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(25) %122, ptr noundef nonnull align 8 dereferenceable(25) @83, i64 25, i1 false)
  %123 = tail call ptr @malloc(i32 24)
  store ptr %122, ptr %123, align 8
  %memberidx1.i.i119 = getelementptr inbounds %String, ptr %123, i64 0, i32 1
  store i64 25, ptr %memberidx1.i.i119, align 4
  %memberidx2.i.i120 = getelementptr inbounds %String, ptr %123, i64 0, i32 2
  store i64 25, ptr %memberidx2.i.i120, align 4
  %124 = add nuw i64 %120, 25
  %125 = icmp slt i64 %119, %124
  br i1 %125, label %if.entry.i.i.i124, label %String___adda__.exit125

if.entry.i.i.i124:                                ; preds = %for.body34
  %126 = tail call ptr @realloc(ptr %118, i64 %124)
  store ptr %126, ptr %112, align 8
  store i64 %124, ptr %memberidx2.i.i111, align 4
  %.pre174 = load i64, ptr %memberidx1.i.i110, align 4
  %.pre177 = add nuw i64 %.pre174, 25
  br label %String___adda__.exit125

String___adda__.exit125:                          ; preds = %for.body34, %if.entry.i.i.i124
  %.pre-phi178 = phi i64 [ %124, %for.body34 ], [ %.pre177, %if.entry.i.i.i124 ]
  %127 = phi i64 [ %120, %for.body34 ], [ %.pre174, %if.entry.i.i.i124 ]
  %128 = phi ptr [ %118, %for.body34 ], [ %126, %if.entry.i.i.i124 ]
  %129 = phi i64 [ %119, %for.body34 ], [ %124, %if.entry.i.i.i124 ]
  %130 = getelementptr inbounds i8, ptr %128, i64 %127
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 536870912 dereferenceable(25) %130, ptr noundef nonnull align 8 dereferenceable(25) %122, i64 25, i1 false)
  store i64 %.pre-phi178, ptr %memberidx1.i.i110, align 4
  %131 = add nuw nsw i64 %121, 1
  %132 = load i64, ptr %memberidx3.i.i115, align 4
  %.not181 = icmp slt i64 %121, %132
  br i1 %.not181, label %for.body34, label %for.end35

for.end35:                                        ; preds = %String___adda__.exit125, %if.entry29
  %133 = phi ptr [ %111, %if.entry29 ], [ %128, %String___adda__.exit125 ]
  %134 = phi i64 [ 0, %if.entry29 ], [ %.pre-phi178, %String___adda__.exit125 ]
  tail call void @free(ptr nonnull %114)
  %135 = trunc i64 %134 to i32
  %136 = add i32 %135, 1
  %137 = tail call ptr @malloc(i32 %136)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %137, ptr align 8 %133, i64 %134, i1 false)
  %138 = getelementptr inbounds i8, ptr %137, i64 %134
  store i8 0, ptr %138, align 1
  %139 = alloca ptr, align 8
  %140 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %139, ptr nonnull @84, ptr %137)
  %141 = load ptr, ptr %139, align 8
  %142 = tail call ptr @malloc(i32 24)
  store ptr %141, ptr %142, align 8
  %memberidx1.i127 = getelementptr inbounds %String, ptr %142, i64 0, i32 1
  store i64 %140, ptr %memberidx1.i127, align 4
  %memberidx2.i128 = getelementptr inbounds %String, ptr %142, i64 0, i32 2
  store i64 %140, ptr %memberidx2.i128, align 4
  tail call void @free(ptr %137)
  br label %common.ret

if.entry39:                                       ; preds = %2
  %memberidx42 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %143 = load ptr, ptr %memberidx42, align 8
  %144 = tail call ptr @malloc(i32 1)
  store i8 60, ptr %144, align 8
  %145 = tail call ptr @malloc(i32 24)
  store ptr %144, ptr %145, align 8
  %memberidx1.i.i129 = getelementptr inbounds %String, ptr %145, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i129, align 4
  %memberidx2.i.i130 = getelementptr inbounds %String, ptr %145, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i130, align 4
  %memberidx.i131 = getelementptr inbounds %String, ptr %143, i64 0, i32 1
  %146 = load i64, ptr %memberidx.i131, align 4
  %147 = add nuw i64 %146, 1
  %148 = trunc i64 %147 to i32
  %149 = tail call ptr @malloc(i32 %148)
  %150 = load ptr, ptr %143, align 8
  %151 = load i64, ptr %memberidx.i131, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %149, ptr align 8 %150, i64 %151, i1 false)
  %152 = getelementptr inbounds i8, ptr %149, i64 %151
  %153 = load i8, ptr %144, align 8
  store i8 %153, ptr %152, align 8
  %154 = tail call ptr @malloc(i32 24)
  store ptr %149, ptr %154, align 8
  %memberidx1.i.i133 = getelementptr inbounds %String, ptr %154, i64 0, i32 1
  store i64 %147, ptr %memberidx1.i.i133, align 4
  %memberidx2.i.i134 = getelementptr inbounds %String, ptr %154, i64 0, i32 2
  store i64 %147, ptr %memberidx2.i.i134, align 4
  %memberidx47 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %155 = load ptr, ptr %memberidx47, align 8
  %156 = tail call ptr @malloc(i32 25)
  %157 = load ptr, ptr %155, align 8
  %memberidx1.i135 = getelementptr inbounds %Array_Type_, ptr %155, i64 0, i32 1
  %158 = load i64, ptr %memberidx1.i135, align 4
  store i1 false, ptr %156, align 1
  %memberidx1.i.i136 = getelementptr inbounds %ArrayIterator_Type_, ptr %156, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i136, align 4
  %memberidx2.i.i137 = getelementptr inbounds %ArrayIterator_Type_, ptr %156, i64 0, i32 3
  store ptr %157, ptr %memberidx2.i.i137, align 8
  %memberidx3.i.i138 = getelementptr inbounds %ArrayIterator_Type_, ptr %156, i64 0, i32 2
  store i64 %158, ptr %memberidx3.i.i138, align 4
  %159 = icmp slt i64 %158, 1
  br i1 %159, label %for.end46, label %for.body45

for.body45:                                       ; preds = %if.entry39, %String___adda__.exit148
  %160 = phi ptr [ %172, %String___adda__.exit148 ], [ %149, %if.entry39 ]
  %161 = phi i64 [ %173, %String___adda__.exit148 ], [ %147, %if.entry39 ]
  %162 = phi i64 [ %.pre-phi180, %String___adda__.exit148 ], [ %147, %if.entry39 ]
  %.in = phi ptr [ %177, %String___adda__.exit148 ], [ %157, %if.entry39 ]
  %163 = phi i64 [ %175, %String___adda__.exit148 ], [ 1, %if.entry39 ]
  %164 = load ptr, ptr %.in, align 8
  %165 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %164)
  %166 = load ptr, ptr %165, align 8
  %memberidx.i144 = getelementptr inbounds %String, ptr %165, i64 0, i32 1
  %167 = load i64, ptr %memberidx.i144, align 4
  %168 = add nuw i64 %162, %167
  %169 = icmp slt i64 %161, %168
  br i1 %169, label %if.entry.i.i.i147, label %String___adda__.exit148

if.entry.i.i.i147:                                ; preds = %for.body45
  %170 = tail call ptr @realloc(ptr %160, i64 %168)
  store ptr %170, ptr %154, align 8
  store i64 %168, ptr %memberidx2.i.i134, align 4
  %.pre = load i64, ptr %memberidx1.i.i133, align 4
  %.pre179 = add nuw i64 %.pre, %167
  br label %String___adda__.exit148

String___adda__.exit148:                          ; preds = %for.body45, %if.entry.i.i.i147
  %.pre-phi180 = phi i64 [ %168, %for.body45 ], [ %.pre179, %if.entry.i.i.i147 ]
  %171 = phi i64 [ %162, %for.body45 ], [ %.pre, %if.entry.i.i.i147 ]
  %172 = phi ptr [ %160, %for.body45 ], [ %170, %if.entry.i.i.i147 ]
  %173 = phi i64 [ %161, %for.body45 ], [ %168, %if.entry.i.i.i147 ]
  %174 = getelementptr inbounds i8, ptr %172, i64 %171
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %174, ptr align 8 %166, i64 %167, i1 false)
  store i64 %.pre-phi180, ptr %memberidx1.i.i133, align 4
  %175 = add nuw nsw i64 %163, 1
  %176 = load ptr, ptr %memberidx2.i.i137, align 8
  %177 = getelementptr inbounds ptr, ptr %176, i64 %163
  %178 = load i64, ptr %memberidx3.i.i138, align 4
  %.not = icmp slt i64 %163, %178
  br i1 %.not, label %for.body45, label %for.end46

for.end46:                                        ; preds = %String___adda__.exit148, %if.entry39
  %179 = phi ptr [ %149, %if.entry39 ], [ %172, %String___adda__.exit148 ]
  %180 = phi i64 [ %147, %if.entry39 ], [ %.pre-phi180, %String___adda__.exit148 ]
  tail call void @free(ptr nonnull %156)
  %181 = tail call ptr @malloc(i32 1)
  store i8 62, ptr %181, align 8
  %182 = tail call ptr @malloc(i32 24)
  store ptr %181, ptr %182, align 8
  %memberidx1.i.i142 = getelementptr inbounds %String, ptr %182, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i142, align 4
  %memberidx2.i.i143 = getelementptr inbounds %String, ptr %182, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i143, align 4
  %183 = add nuw i64 %180, 1
  %184 = trunc i64 %183 to i32
  %185 = tail call ptr @malloc(i32 %184)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %185, ptr align 8 %179, i64 %180, i1 false)
  %186 = getelementptr inbounds i8, ptr %185, i64 %180
  %187 = load i8, ptr %181, align 8
  store i8 %187, ptr %186, align 8
  %188 = tail call ptr @malloc(i32 24)
  store ptr %185, ptr %188, align 8
  %memberidx1.i.i105 = getelementptr inbounds %String, ptr %188, i64 0, i32 1
  store i64 %183, ptr %memberidx1.i.i105, align 4
  %memberidx2.i.i106 = getelementptr inbounds %String, ptr %188, i64 0, i32 2
  store i64 %183, ptr %memberidx2.i.i106, align 4
  br label %common.ret

if.entry50:                                       ; preds = %2
  %189 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %189, ptr noundef nonnull align 8 dereferenceable(9) @85, i64 9, i1 false)
  %190 = tail call ptr @malloc(i32 24)
  store ptr %189, ptr %190, align 8
  %memberidx1.i.i97 = getelementptr inbounds %String, ptr %190, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i97, align 4
  %memberidx2.i.i98 = getelementptr inbounds %String, ptr %190, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i98, align 4
  br label %common.ret

if.entry54:                                       ; preds = %2
  %191 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %191, ptr noundef nonnull align 8 dereferenceable(6) @86, i64 6, i1 false)
  %192 = tail call ptr @malloc(i32 24)
  store ptr %191, ptr %192, align 8
  %memberidx1.i.i92 = getelementptr inbounds %String, ptr %192, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i92, align 4
  %memberidx2.i.i93 = getelementptr inbounds %String, ptr %192, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i93, align 4
  br label %common.ret

ifend56:                                          ; preds = %2
  %193 = tail call fastcc ptr @dump_type(ptr nonnull %1, i1 false)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_String_Generic_, ptr %4, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = urem i64 %5, %6
  %8 = load ptr, ptr %4, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %7
  %10 = load ptr, ptr %9, align 8
  %.not.i129 = icmp eq ptr %10, null
  br i1 %.not.i129, label %common.ret, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %3
  %memberidx1.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre136.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre136.pre, i64 %hash.0.i130
  %.pre137.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre137.pre, null
  br i1 %.not22.i, label %common.ret, label %Map_String_Generic____getitem__.exit

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %11 = phi ptr [ %8, %while.body.i.lr.ph ], [ %21, %else.i ]
  %12 = phi i64 [ %6, %while.body.i.lr.ph ], [ %22, %else.i ]
  %13 = phi ptr [ %10, %while.body.i.lr.ph ], [ %26, %else.i ]
  %hash.0.i130 = phi i64 [ %7, %while.body.i.lr.ph ], [ %24, %else.i ]
  %14 = load ptr, ptr %13, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i.i, align 4
  %16 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %15, %16
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %17 = load ptr, ptr %14, align 8
  %18 = load ptr, ptr %1, align 8
  %19 = tail call i64 @memcmp(ptr %17, ptr %18, i64 %15)
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre135 = load ptr, ptr %4, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %21 = phi ptr [ %.pre135, %ifend.i.i.else.i_crit_edge ], [ %11, %while.body.i ]
  %22 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %12, %while.body.i ]
  %23 = add nuw i64 %hash.0.i130, 1
  %24 = urem i64 %23, %22
  %25 = getelementptr inbounds ptr, ptr %21, i64 %24
  %26 = load ptr, ptr %25, align 8
  %.not.i = icmp eq ptr %26, null
  br i1 %.not.i, label %common.ret, label %while.body.i

Map_String_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_Generic_, ptr %.pre137.pre, i64 0, i32 1
  %27 = load ptr, ptr %memberidx10.i, align 8
  %28 = icmp eq ptr %27, null
  br i1 %28, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %3, %while.end.i, %Map_String_Generic____getitem__.exit, %ifend21, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %178, %ifend21 ], [ null, %Map_String_Generic____getitem__.exit ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_Generic____getitem__.exit
  %memberidx1 = getelementptr inbounds %Generic, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ClassDeclarationNode, ptr %29, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_GenericParameterNode_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx3, align 4
  %memberidx4 = getelementptr inbounds %Array_Type_, ptr %2, i64 0, i32 1
  %32 = load i64, ptr %memberidx4, align 4
  %.not = icmp eq i64 %31, %32
  br i1 %.not, label %ifend7, label %if.entry5

if.entry5:                                        ; preds = %ifend
  %33 = alloca ptr, align 8
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %33, ptr nonnull @102, i64 %31, i64 %32)
  %35 = load ptr, ptr %33, align 8
  %36 = tail call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i, align 4
  %memberidx.i78 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %37 = load ptr, ptr %memberidx.i78, align 8
  %memberidx1.i79 = getelementptr inbounds %Compiler, ptr %37, i64 0, i32 5
  %38 = load ptr, ptr %memberidx1.i79, align 8
  %39 = call ptr @malloc(i32 24)
  store i64 5, ptr %39, align 4
  %memberidx1.i.i80 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 2
  store ptr null, ptr %memberidx1.i.i80, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %39, i64 0, i32 1
  store ptr %36, ptr %memberidx2.i.i, align 8
  %memberidx.i.i81 = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 1
  %40 = load i64, ptr %memberidx.i.i81, align 4
  %41 = add i64 %40, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 2
  %42 = load i64, ptr %memberidx.i.i.i, align 4
  %43 = icmp slt i64 %42, %41
  %.pre138 = load ptr, ptr %38, align 8
  br i1 %43, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry5, %while.body.i.i.i
  %44 = phi ptr [ %48, %while.body.i.i.i ], [ %.pre138, %if.entry5 ]
  %45 = phi i64 [ %49, %while.body.i.i.i ], [ %42, %if.entry5 ]
  %46 = shl nuw i64 %45, 1
  store i64 %46, ptr %memberidx.i.i.i, align 4
  %47 = shl i64 %45, 4
  %48 = call ptr @realloc(ptr %44, i64 %47)
  store ptr %48, ptr %38, align 8
  %49 = load i64, ptr %memberidx.i.i.i, align 4
  %50 = icmp slt i64 %49, %41
  br i1 %50, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre139 = load i64, ptr %memberidx.i.i81, align 4
  %.pre150 = add nsw i64 %.pre139, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry5, %TypeChecker_error.exit.loopexit
  %.pre-phi151 = phi i64 [ %.pre150, %TypeChecker_error.exit.loopexit ], [ %41, %if.entry5 ]
  %51 = phi ptr [ %48, %TypeChecker_error.exit.loopexit ], [ %.pre138, %if.entry5 ]
  %52 = phi i64 [ %.pre139, %TypeChecker_error.exit.loopexit ], [ %40, %if.entry5 ]
  store i64 %.pre-phi151, ptr %memberidx.i.i81, align 4
  %53 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %39, ptr %53, align 8
  br label %common.ret

ifend7:                                           ; preds = %ifend
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %54 = load ptr, ptr %memberidx10, align 8
  %55 = load i64, ptr @GENERIC_MODULE_ID, align 8
  %56 = load ptr, ptr %0, align 8
  %57 = load ptr, ptr %56, align 8
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds ptr, ptr %58, i64 %55
  %60 = load ptr, ptr %59, align 8
  %memberidx1.i83 = getelementptr inbounds %Module, ptr %60, i64 0, i32 5
  %61 = load ptr, ptr %memberidx1.i83, align 8
  store ptr %61, ptr %memberidx10, align 8
  %62 = load i64, ptr %61, align 4
  %63 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %62)
  %memberidx2.i85 = getelementptr inbounds %Scope, ptr %63, i64 0, i32 5
  %64 = load ptr, ptr %memberidx10, align 8
  store ptr %64, ptr %memberidx2.i85, align 8
  %65 = load ptr, ptr %0, align 8
  %66 = load ptr, ptr %memberidx10, align 8
  %67 = load ptr, ptr %65, align 8
  %68 = load i64, ptr %66, align 4
  %69 = load ptr, ptr %67, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %71, i64 0, i32 7
  %72 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %66, i64 0, i32 1
  %73 = load i64, ptr %memberidx3.i.i.i, align 4
  %74 = load ptr, ptr %72, align 8
  %75 = getelementptr inbounds ptr, ptr %74, i64 %73
  %76 = load ptr, ptr %75, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %76, i64 0, i32 7
  %77 = load ptr, ptr %memberidx4.i, align 8
  %78 = load ptr, ptr %63, align 8
  %memberidx.i.i87 = getelementptr inbounds %Array_ScopeId_, ptr %77, i64 0, i32 1
  %79 = load i64, ptr %memberidx.i.i87, align 4
  %80 = add i64 %79, 1
  %memberidx.i.i.i88 = getelementptr inbounds %Array_ScopeId_, ptr %77, i64 0, i32 2
  %81 = load i64, ptr %memberidx.i.i.i88, align 4
  %82 = icmp slt i64 %81, %80
  %.pre141 = load ptr, ptr %77, align 8
  br i1 %82, label %while.body.i.i.i90, label %TypeChecker_create_child_scope_within_current_scope.exit

while.body.i.i.i90:                               ; preds = %ifend7, %while.body.i.i.i90
  %83 = phi ptr [ %87, %while.body.i.i.i90 ], [ %.pre141, %ifend7 ]
  %84 = phi i64 [ %88, %while.body.i.i.i90 ], [ %81, %ifend7 ]
  %85 = shl nuw i64 %84, 1
  store i64 %85, ptr %memberidx.i.i.i88, align 4
  %86 = shl i64 %84, 4
  %87 = tail call ptr @realloc(ptr %83, i64 %86)
  store ptr %87, ptr %77, align 8
  %88 = load i64, ptr %memberidx.i.i.i88, align 4
  %89 = icmp slt i64 %88, %80
  br i1 %89, label %while.body.i.i.i90, label %TypeChecker_create_child_scope_within_current_scope.exit.loopexit

TypeChecker_create_child_scope_within_current_scope.exit.loopexit: ; preds = %while.body.i.i.i90
  %.pre142 = load i64, ptr %memberidx.i.i87, align 4
  %.pre147 = add nsw i64 %.pre142, 1
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %ifend7, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit
  %.pre-phi = phi i64 [ %.pre147, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %80, %ifend7 ]
  %90 = phi ptr [ %87, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %.pre141, %ifend7 ]
  %91 = phi i64 [ %.pre142, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %79, %ifend7 ]
  store i64 %.pre-phi, ptr %memberidx.i.i87, align 4
  %92 = getelementptr inbounds ptr, ptr %90, i64 %91
  store ptr %78, ptr %92, align 8
  %93 = tail call ptr @malloc(i32 0)
  %94 = tail call ptr @malloc(i32 24)
  store ptr %93, ptr %94, align 8
  %memberidx1.i.i91 = getelementptr inbounds %String, ptr %94, i64 0, i32 1
  %memberidx2.i.i92 = getelementptr inbounds %String, ptr %94, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i91, i8 0, i64 16, i1 false)
  %95 = load i64, ptr %memberidx3, align 4
  %96 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %96, align 4
  %memberidx1.i93 = getelementptr inbounds %Range, ptr %96, i64 0, i32 1
  store i64 %95, ptr %memberidx1.i93, align 4
  %97 = tail call ptr @malloc(i32 17)
  %memberidx.i.i95 = getelementptr inbounds %RangeIterator, ptr %97, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i95, align 4
  %memberidx1.i.i96 = getelementptr inbounds %RangeIterator, ptr %97, i64 0, i32 2
  store i64 %95, ptr %memberidx1.i.i96, align 4
  %98 = icmp slt i64 %95, 1
  br i1 %98, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx17 = getelementptr inbounds %Scope, ptr %63, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %String___adda__.exit
  %99 = phi ptr [ %93, %for.body.lr.ph ], [ %150, %String___adda__.exit ]
  %100 = phi i64 [ 0, %for.body.lr.ph ], [ %151, %String___adda__.exit ]
  %101 = phi i64 [ 0, %for.body.lr.ph ], [ %.pre-phi149, %String___adda__.exit ]
  %102 = phi i64 [ 1, %for.body.lr.ph ], [ %158, %String___adda__.exit ]
  %103 = phi i64 [ 0, %for.body.lr.ph ], [ %102, %String___adda__.exit ]
  %104 = load ptr, ptr %30, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %103
  %106 = load ptr, ptr %105, align 8
  %107 = load ptr, ptr %106, align 8
  %memberidx14 = getelementptr inbounds %IdentifierToken, ptr %107, i64 0, i32 2
  %108 = load ptr, ptr %memberidx14, align 8
  %109 = load ptr, ptr %2, align 8
  %110 = getelementptr inbounds ptr, ptr %109, i64 %103
  %111 = load ptr, ptr %110, align 8
  %112 = load i64, ptr %111, align 4
  %113 = icmp eq i64 %112, 20
  %memberidx16 = getelementptr inbounds %GenericType, ptr %111, i64 0, i32 3
  %spec.select = select i1 %113, ptr %memberidx16, ptr %110
  %ternary = load ptr, ptr %spec.select, align 8
  %114 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %ternary)
  %memberidx.i103 = getelementptr inbounds %String, ptr %114, i64 0, i32 1
  %115 = load i64, ptr %memberidx.i103, align 4
  %116 = trunc i64 %115 to i32
  %117 = add i32 %116, 1
  %118 = call ptr @malloc(i32 %117)
  %119 = load ptr, ptr %114, align 8
  %120 = load i64, ptr %memberidx.i103, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %118, ptr align 8 %119, i64 %120, i1 false)
  %121 = getelementptr inbounds i8, ptr %118, i64 %120
  store i8 0, ptr %121, align 1
  %122 = alloca ptr, align 8
  %123 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %122, ptr nonnull @103, ptr %118)
  %124 = load ptr, ptr %122, align 8
  %125 = tail call ptr @malloc(i32 24)
  store ptr %124, ptr %125, align 8
  %memberidx1.i104 = getelementptr inbounds %String, ptr %125, i64 0, i32 1
  store i64 %123, ptr %memberidx1.i104, align 4
  %memberidx2.i105 = getelementptr inbounds %String, ptr %125, i64 0, i32 2
  store i64 %123, ptr %memberidx2.i105, align 4
  tail call void @free(ptr %118)
  %126 = add nuw i64 %101, %123
  %127 = icmp slt i64 %100, %126
  br i1 %127, label %if.entry.i.i.i, label %String___adda__.exit

for.end:                                          ; preds = %String___adda__.exit, %TypeChecker_create_child_scope_within_current_scope.exit
  %128 = phi ptr [ %93, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %150, %String___adda__.exit ]
  %129 = phi i64 [ 0, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %.pre-phi149, %String___adda__.exit ]
  tail call void @free(ptr nonnull %97)
  %memberidx.i99 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %130 = load i64, ptr %memberidx.i99, align 4
  %131 = trunc i64 %130 to i32
  %132 = add i32 %131, 1
  %133 = call ptr @malloc(i32 %132)
  %134 = load ptr, ptr %1, align 8
  %135 = load i64, ptr %memberidx.i99, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %133, ptr align 8 %134, i64 %135, i1 false)
  %136 = getelementptr inbounds i8, ptr %133, i64 %135
  store i8 0, ptr %136, align 1
  %137 = trunc i64 %129 to i32
  %138 = add i32 %137, 1
  %139 = call ptr @malloc(i32 %138)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %139, ptr align 8 %128, i64 %129, i1 false)
  %140 = getelementptr inbounds i8, ptr %139, i64 %129
  store i8 0, ptr %140, align 1
  %141 = alloca ptr, align 8
  %142 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %141, ptr nonnull @104, ptr %133, ptr %139)
  %143 = load ptr, ptr %141, align 8
  %144 = tail call ptr @malloc(i32 24)
  store ptr %143, ptr %144, align 8
  %memberidx1.i101 = getelementptr inbounds %String, ptr %144, i64 0, i32 1
  store i64 %142, ptr %memberidx1.i101, align 4
  %memberidx2.i102 = getelementptr inbounds %String, ptr %144, i64 0, i32 2
  store i64 %142, ptr %memberidx2.i102, align 4
  tail call void @free(ptr %133)
  tail call void @free(ptr %139)
  %145 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %144)
  %146 = load i64, ptr %145, align 4
  %147 = icmp eq i64 %146, 21
  br i1 %147, label %if.entry19, label %ifend21

if.entry.i.i.i:                                   ; preds = %for.body
  %148 = call ptr @realloc(ptr %99, i64 %126)
  store ptr %148, ptr %94, align 8
  store i64 %126, ptr %memberidx2.i.i92, align 4
  %.pre144 = load i64, ptr %memberidx1.i.i91, align 4
  %.pre148 = add nuw i64 %.pre144, %123
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %for.body, %if.entry.i.i.i
  %.pre-phi149 = phi i64 [ %126, %for.body ], [ %.pre148, %if.entry.i.i.i ]
  %149 = phi i64 [ %101, %for.body ], [ %.pre144, %if.entry.i.i.i ]
  %150 = phi ptr [ %99, %for.body ], [ %148, %if.entry.i.i.i ]
  %151 = phi i64 [ %100, %for.body ], [ %126, %if.entry.i.i.i ]
  %152 = getelementptr inbounds i8, ptr %150, i64 %149
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %152, ptr align 8 %124, i64 %123, i1 false)
  store i64 %.pre-phi149, ptr %memberidx1.i.i91, align 4
  %153 = load ptr, ptr %memberidx17, align 8
  %154 = load ptr, ptr %2, align 8
  %155 = getelementptr inbounds ptr, ptr %154, i64 %103
  %156 = load ptr, ptr %155, align 8
  call fastcc void @Map_String_Type____setitem__(ptr %153, ptr %108, ptr %156)
  %157 = load i64, ptr %memberidx1.i.i96, align 4
  %.not152 = icmp slt i64 %102, %157
  %158 = add nuw nsw i64 %102, 1
  br i1 %.not152, label %for.body, label %for.end

if.entry19:                                       ; preds = %for.end
  %159 = alloca %IdentifierToken, align 8
  %160 = load ptr, ptr %memberidx1, align 8
  %161 = load ptr, ptr %160, align 8
  %memberidx24 = getelementptr inbounds %Token, ptr %161, i64 0, i32 1
  %162 = load ptr, ptr %memberidx24, align 8
  store i64 53, ptr %159, align 8
  %memberidx1.i.i109 = getelementptr inbounds %Token, ptr %159, i64 0, i32 1
  store ptr %162, ptr %memberidx1.i.i109, align 8
  %memberidx.i110 = getelementptr inbounds %IdentifierToken, ptr %159, i64 0, i32 2
  store ptr %144, ptr %memberidx.i110, align 8
  %163 = alloca %ClassDeclarationNode, align 8
  store ptr %159, ptr %163, align 8
  %memberidx1.i111 = getelementptr inbounds %ClassDeclarationNode, ptr %163, i64 0, i32 3
  %164 = call ptr @malloc(i32 24)
  %memberidx.i.i112 = getelementptr inbounds %Array_FieldNode_, ptr %164, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i112, align 4
  %memberidx1.i.i113 = getelementptr inbounds %Array_FieldNode_, ptr %164, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i113, align 4
  %165 = call ptr @malloc(i32 64)
  store ptr %165, ptr %164, align 8
  store i64 0, ptr %memberidx.i.i112, align 4
  %memberidx4.i114 = getelementptr inbounds %ClassDeclarationNode, ptr %163, i64 0, i32 4
  %166 = call ptr @malloc(i32 24)
  %memberidx.i15.i = getelementptr inbounds %Array_MethodNode_, ptr %166, i64 0, i32 1
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx1.i16.i = getelementptr inbounds %Array_MethodNode_, ptr %166, i64 0, i32 2
  store i64 8, ptr %memberidx1.i16.i, align 4
  %167 = call ptr @malloc(i32 64)
  store ptr %167, ptr %166, align 8
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx7.i = getelementptr inbounds %ClassDeclarationNode, ptr %163, i64 0, i32 1
  %168 = call ptr @malloc(i32 24)
  %memberidx.i17.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %168, i64 0, i32 1
  store i64 0, ptr %memberidx.i17.i, align 4
  %memberidx1.i18.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %168, i64 0, i32 2
  store i64 8, ptr %memberidx1.i18.i, align 4
  %169 = call ptr @malloc(i32 64)
  store ptr %169, ptr %168, align 8
  store i64 0, ptr %memberidx.i17.i, align 4
  store ptr %168, ptr %memberidx7.i, align 8
  %memberidx10.i115 = getelementptr inbounds %ClassDeclarationNode, ptr %163, i64 0, i32 2
  %170 = load ptr, ptr %memberidx1, align 8
  %memberidx27 = getelementptr inbounds %ClassDeclarationNode, ptr %170, i64 0, i32 2
  %171 = load ptr, ptr %memberidx27, align 8
  store ptr %171, ptr %memberidx10.i115, align 8
  %172 = load ptr, ptr %memberidx1, align 8
  %memberidx30 = getelementptr inbounds %ClassDeclarationNode, ptr %172, i64 0, i32 3
  %173 = load ptr, ptr %memberidx30, align 8
  store ptr %173, ptr %memberidx1.i111, align 8
  %174 = load ptr, ptr %memberidx1, align 8
  %memberidx33 = getelementptr inbounds %ClassDeclarationNode, ptr %174, i64 0, i32 4
  %175 = load ptr, ptr %memberidx33, align 8
  store ptr %175, ptr %memberidx4.i114, align 8
  %176 = load ptr, ptr %63, align 8
  store ptr %176, ptr %memberidx10, align 8
  call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr nonnull %163)
  call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr nonnull %163)
  %177 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %144)
  br label %ifend21

ifend21:                                          ; preds = %for.end, %if.entry19
  %possible_type.0 = phi ptr [ %177, %if.entry19 ], [ %145, %for.end ]
  store ptr %54, ptr %memberidx10, align 8
  call fastcc void @Scope___del__(ptr nonnull %63)
  tail call void @free(ptr %63)
  %178 = tail call ptr @malloc(i32 32)
  store i64 20, ptr %178, align 4
  %memberidx.i116 = getelementptr inbounds %GenericType, ptr %178, i64 0, i32 1
  store ptr %1, ptr %memberidx.i116, align 8
  %memberidx1.i117 = getelementptr inbounds %GenericType, ptr %178, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i117, align 8
  %memberidx2.i118 = getelementptr inbounds %GenericType, ptr %178, i64 0, i32 3
  store ptr %possible_type.0, ptr %memberidx2.i118, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_enum_within_module(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 32)
  %memberidx.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 2
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %4, ptr %memberidx.i, align 8
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 2048)
  store ptr %7, ptr %6, align 8
  %8 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %8, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Range, ptr %8, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i.i, align 4
  %9 = tail call ptr @malloc(i32 17)
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %10 = phi i64 [ 1, %2 ], [ %15, %for.body.i.i ]
  %11 = phi i64 [ 0, %2 ], [ %10, %for.body.i.i ]
  %12 = load ptr, ptr %6, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  store ptr null, ptr %13, align 8
  %14 = icmp ugt i64 %10, 255
  %15 = add nuw nsw i64 %10, 1
  br i1 %14, label %Enum_constructor.exit, label %for.body.i.i

Enum_constructor.exit:                            ; preds = %for.body.i.i
  %memberidx3.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 3
  tail call void @free(ptr nonnull %9)
  %memberidx3.i.i = getelementptr inbounds %Map_String_PropId_, ptr %6, i64 0, i32 1
  store i64 256, ptr %memberidx3.i.i, align 4
  %memberidx4.i.i = getelementptr inbounds %Map_String_PropId_, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx4.i.i, align 4
  store ptr %6, ptr %memberidx3.i, align 8
  %16 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %16, i64 0, i32 2
  %17 = load ptr, ptr %memberidx1, align 8
  %18 = load ptr, ptr %0, align 8
  %memberidx.i.i33 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %19 = load ptr, ptr %memberidx.i.i33, align 8
  %20 = load i64, ptr %19, align 4
  %21 = load ptr, ptr %18, align 8
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %20
  %24 = load ptr, ptr %23, align 8
  %memberidx1.i = getelementptr inbounds %Module, ptr %24, i64 0, i32 5
  %25 = load ptr, ptr %memberidx1.i, align 8
  %26 = load i64, ptr %25, align 4
  %27 = getelementptr inbounds ptr, ptr %22, i64 %26
  %28 = load ptr, ptr %27, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %28, i64 0, i32 7
  %29 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i34 = getelementptr inbounds %ScopeId, ptr %25, i64 0, i32 1
  %30 = load i64, ptr %memberidx3.i.i34, align 4
  %31 = load ptr, ptr %29, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 %30
  %33 = load ptr, ptr %32, align 8
  %memberidx2 = getelementptr inbounds %Enum, ptr %3, i64 0, i32 1
  store ptr %17, ptr %memberidx2, align 8
  %34 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %17)
  %35 = load i64, ptr %34, align 4
  %.not = icmp eq i64 %35, 21
  br i1 %.not, label %ifend, label %if.entry

common.ret:                                       ; preds = %Array_Enum____sl__.exit, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Enum_constructor.exit
  %memberidx.i35 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %36 = load i64, ptr %memberidx.i35, align 4
  %37 = trunc i64 %36 to i32
  %38 = add i32 %37, 1
  %39 = tail call ptr @malloc(i32 %38)
  %40 = load ptr, ptr %17, align 8
  %41 = load i64, ptr %memberidx.i35, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %40, i64 %41, i1 false)
  %42 = getelementptr inbounds i8, ptr %39, i64 %41
  store i8 0, ptr %42, align 1
  %43 = alloca ptr, align 8
  %44 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %43, ptr nonnull @101, ptr %39)
  %45 = load ptr, ptr %43, align 8
  %46 = tail call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i36 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 %44, ptr %memberidx1.i36, align 4
  %memberidx2.i37 = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 %44, ptr %memberidx2.i37, align 4
  tail call void @free(ptr %39)
  %47 = load ptr, ptr %1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %47, i64 0, i32 1
  %48 = load ptr, ptr %memberidx5, align 8
  %memberidx.i38 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %49 = load ptr, ptr %memberidx.i38, align 8
  %memberidx1.i39 = getelementptr inbounds %Compiler, ptr %49, i64 0, i32 5
  %50 = load ptr, ptr %memberidx1.i39, align 8
  %51 = call ptr @malloc(i32 24)
  store i64 1, ptr %51, align 4
  %memberidx1.i.i40 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 2
  store ptr %48, ptr %memberidx1.i.i40, align 8
  %memberidx2.i.i41 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 1
  store ptr %46, ptr %memberidx2.i.i41, align 8
  %memberidx.i.i42 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i.i42, align 4
  %53 = add i64 %52, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 2
  %54 = load i64, ptr %memberidx.i.i.i, align 4
  %55 = icmp slt i64 %54, %53
  %.pre = load ptr, ptr %50, align 8
  br i1 %55, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %56 = phi ptr [ %60, %while.body.i.i.i ], [ %.pre, %if.entry ]
  %57 = phi i64 [ %61, %while.body.i.i.i ], [ %54, %if.entry ]
  %58 = shl nuw i64 %57, 1
  store i64 %58, ptr %memberidx.i.i.i, align 4
  %59 = shl i64 %57, 4
  %60 = call ptr @realloc(ptr %56, i64 %59)
  store ptr %60, ptr %50, align 8
  %61 = load i64, ptr %memberidx.i.i.i, align 4
  %62 = icmp slt i64 %61, %53
  br i1 %62, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre55 = load i64, ptr %memberidx.i.i42, align 4
  %.pre61 = add nsw i64 %.pre55, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi62 = phi i64 [ %.pre61, %TypeChecker_error.exit.loopexit ], [ %53, %if.entry ]
  %63 = phi ptr [ %60, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %64 = phi i64 [ %.pre55, %TypeChecker_error.exit.loopexit ], [ %52, %if.entry ]
  store i64 %.pre-phi62, ptr %memberidx.i.i42, align 4
  %65 = getelementptr inbounds ptr, ptr %63, i64 %64
  store ptr %51, ptr %65, align 8
  br label %common.ret

ifend:                                            ; preds = %Enum_constructor.exit
  %66 = tail call ptr @malloc(i32 24)
  %67 = load ptr, ptr %memberidx.i.i33, align 8
  %68 = load i64, ptr %67, align 4
  %69 = load ptr, ptr %0, align 8
  %70 = load ptr, ptr %69, align 8
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 %68
  %73 = load ptr, ptr %72, align 8
  %memberidx9 = getelementptr inbounds %Module, ptr %73, i64 0, i32 6
  %74 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Enum_, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx10, align 4
  store i64 %68, ptr %66, align 4
  %memberidx1.i.i44 = getelementptr inbounds %TypeId, ptr %66, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i44, align 4
  %memberidx2.i.i45 = getelementptr inbounds %TypeId, ptr %66, i64 0, i32 2
  store i64 %75, ptr %memberidx2.i.i45, align 4
  store ptr %66, ptr %3, align 8
  %76 = load i64, ptr %67, align 4
  %77 = load ptr, ptr %69, align 8
  %78 = load ptr, ptr %77, align 8
  %79 = getelementptr inbounds ptr, ptr %78, i64 %76
  %80 = load ptr, ptr %79, align 8
  %memberidx11 = getelementptr inbounds %Module, ptr %80, i64 0, i32 6
  %81 = load ptr, ptr %memberidx11, align 8
  %memberidx.i47 = getelementptr inbounds %Array_Enum_, ptr %81, i64 0, i32 1
  %82 = load i64, ptr %memberidx.i47, align 4
  %83 = add i64 %82, 1
  %memberidx.i.i48 = getelementptr inbounds %Array_Enum_, ptr %81, i64 0, i32 2
  %84 = load i64, ptr %memberidx.i.i48, align 4
  %85 = icmp slt i64 %84, %83
  %.pre57 = load ptr, ptr %81, align 8
  br i1 %85, label %while.body.i.i, label %Array_Enum____sl__.exit

while.body.i.i:                                   ; preds = %ifend, %while.body.i.i
  %86 = phi ptr [ %90, %while.body.i.i ], [ %.pre57, %ifend ]
  %87 = phi i64 [ %91, %while.body.i.i ], [ %84, %ifend ]
  %88 = shl nuw i64 %87, 1
  store i64 %88, ptr %memberidx.i.i48, align 4
  %89 = shl i64 %87, 4
  %90 = tail call ptr @realloc(ptr %86, i64 %89)
  store ptr %90, ptr %81, align 8
  %91 = load i64, ptr %memberidx.i.i48, align 4
  %92 = icmp slt i64 %91, %83
  br i1 %92, label %while.body.i.i, label %Array_Enum____sl__.exit.loopexit

Array_Enum____sl__.exit.loopexit:                 ; preds = %while.body.i.i
  %.pre58 = load i64, ptr %memberidx.i47, align 4
  %.pre60 = add nsw i64 %.pre58, 1
  br label %Array_Enum____sl__.exit

Array_Enum____sl__.exit:                          ; preds = %ifend, %Array_Enum____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre60, %Array_Enum____sl__.exit.loopexit ], [ %83, %ifend ]
  %93 = phi ptr [ %90, %Array_Enum____sl__.exit.loopexit ], [ %.pre57, %ifend ]
  %94 = phi i64 [ %.pre58, %Array_Enum____sl__.exit.loopexit ], [ %82, %ifend ]
  store i64 %.pre-phi, ptr %memberidx.i47, align 4
  %95 = getelementptr inbounds ptr, ptr %93, i64 %94
  store ptr %3, ptr %95, align 8
  %memberidx12 = getelementptr inbounds %Scope, ptr %33, i64 0, i32 4
  %96 = load ptr, ptr %memberidx12, align 8
  %97 = load ptr, ptr %memberidx2, align 8
  %98 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %96, ptr %97, ptr %98)
  %memberidx15 = getelementptr inbounds %Scope, ptr %33, i64 0, i32 1
  %99 = load ptr, ptr %memberidx15, align 8
  %100 = load ptr, ptr %memberidx2, align 8
  %101 = tail call ptr @malloc(i32 24)
  %102 = load ptr, ptr %3, align 8
  %103 = load i64, ptr %102, align 4
  %memberidx1.i49 = getelementptr inbounds %TypeId, ptr %102, i64 0, i32 2
  %104 = load i64, ptr %memberidx1.i49, align 4
  store i64 4, ptr %101, align 4
  %memberidx1.i.i50 = getelementptr inbounds %VarId, ptr %101, i64 0, i32 1
  store i64 %103, ptr %memberidx1.i.i50, align 4
  %memberidx2.i.i51 = getelementptr inbounds %VarId, ptr %101, i64 0, i32 2
  store i64 %104, ptr %memberidx2.i.i51, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %99, ptr %100, ptr nonnull %101)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_within_module(ptr %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp ne i64 %6, 21
  %memberidx3 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %4)
  %memberidx.i89 = getelementptr inbounds %Map_String_Generic_, ptr %8, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i89, align 4
  %11 = urem i64 %9, %10
  %12 = load ptr, ptr %8, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %.not.i104 = icmp eq ptr %14, null
  br i1 %.not.i104, label %Map_String_Generic____getitem__.exit, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %2
  %memberidx1.i.i91 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre113.pre = load ptr, ptr %8, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre113.pre, i64 %hash.0.i105
  %.pre114.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre114.pre, null
  br i1 %.not22.i, label %Map_String_Generic____getitem__.exit, label %if.entry6.i

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %15 = phi ptr [ %12, %while.body.i.lr.ph ], [ %25, %else.i ]
  %16 = phi i64 [ %10, %while.body.i.lr.ph ], [ %26, %else.i ]
  %17 = phi ptr [ %14, %while.body.i.lr.ph ], [ %30, %else.i ]
  %hash.0.i105 = phi i64 [ %11, %while.body.i.lr.ph ], [ %28, %else.i ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i.i90 = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i.i90, align 4
  %20 = load i64, ptr %memberidx1.i.i91, align 4
  %.not.i.i = icmp eq i64 %19, %20
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %21 = load ptr, ptr %18, align 8
  %22 = load ptr, ptr %4, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i89, align 4
  %.pre112 = load ptr, ptr %8, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %25 = phi ptr [ %.pre112, %ifend.i.i.else.i_crit_edge ], [ %15, %while.body.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %16, %while.body.i ]
  %27 = add nuw i64 %hash.0.i105, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not.i = icmp eq ptr %30, null
  br i1 %.not.i, label %Map_String_Generic____getitem__.exit, label %while.body.i

if.entry6.i:                                      ; preds = %while.end.i
  %memberidx10.i92 = getelementptr inbounds %MapEntry_String_Generic_, ptr %.pre114.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx10.i92, align 8
  %phi.cmp = icmp ne ptr %31, null
  br label %Map_String_Generic____getitem__.exit

Map_String_Generic____getitem__.exit:             ; preds = %else.i, %2, %while.end.i, %if.entry6.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry6.i ], [ false, %while.end.i ], [ false, %2 ], [ false, %else.i ]
  %32 = or i1 %7, %common.ret.op.i
  br i1 %32, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry16, %Array_Class____sl__.exit, %if.entry8, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Map_String_Generic____getitem__.exit
  %memberidx.i88 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i88, align 4
  %34 = trunc i64 %33 to i32
  %35 = add i32 %34, 1
  %36 = tail call ptr @malloc(i32 %35)
  %37 = load ptr, ptr %4, align 8
  %38 = load i64, ptr %memberidx.i88, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr align 8 %37, i64 %38, i1 false)
  %39 = getelementptr inbounds i8, ptr %36, i64 %38
  store i8 0, ptr %39, align 1
  %40 = alloca ptr, align 8
  %41 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %40, ptr nonnull @101, ptr %36)
  %42 = load ptr, ptr %40, align 8
  %43 = tail call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i86 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 %41, ptr %memberidx1.i86, align 4
  %memberidx2.i87 = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 %41, ptr %memberidx2.i87, align 4
  tail call void @free(ptr %36)
  %44 = load ptr, ptr %1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %44, i64 0, i32 1
  %45 = load ptr, ptr %memberidx5, align 8
  %memberidx.i81 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %46 = load ptr, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %Compiler, ptr %46, i64 0, i32 5
  %47 = load ptr, ptr %memberidx1.i82, align 8
  %48 = call ptr @malloc(i32 24)
  store i64 1, ptr %48, align 4
  %memberidx1.i.i83 = getelementptr inbounds %FloError, ptr %48, i64 0, i32 2
  store ptr %45, ptr %memberidx1.i.i83, align 8
  %memberidx2.i.i84 = getelementptr inbounds %FloError, ptr %48, i64 0, i32 1
  store ptr %43, ptr %memberidx2.i.i84, align 8
  %memberidx.i.i85 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %49 = load i64, ptr %memberidx.i.i85, align 4
  %50 = add i64 %49, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %51 = load i64, ptr %memberidx.i.i.i, align 4
  %52 = icmp slt i64 %51, %50
  %.pre118 = load ptr, ptr %47, align 8
  br i1 %52, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %53 = phi ptr [ %57, %while.body.i.i.i ], [ %.pre118, %if.entry ]
  %54 = phi i64 [ %58, %while.body.i.i.i ], [ %51, %if.entry ]
  %55 = shl nuw i64 %54, 1
  store i64 %55, ptr %memberidx.i.i.i, align 4
  %56 = shl i64 %54, 4
  %57 = call ptr @realloc(ptr %53, i64 %56)
  store ptr %57, ptr %47, align 8
  %58 = load i64, ptr %memberidx.i.i.i, align 4
  %59 = icmp slt i64 %58, %50
  br i1 %59, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre119 = load i64, ptr %memberidx.i.i85, align 4
  %.pre123 = add nsw i64 %.pre119, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre123, %TypeChecker_error.exit.loopexit ], [ %50, %if.entry ]
  %60 = phi ptr [ %57, %TypeChecker_error.exit.loopexit ], [ %.pre118, %if.entry ]
  %61 = phi i64 [ %.pre119, %TypeChecker_error.exit.loopexit ], [ %49, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i85, align 4
  %62 = getelementptr inbounds ptr, ptr %60, i64 %61
  store ptr %48, ptr %62, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_Generic____getitem__.exit
  %memberidx6 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 1
  %63 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Array_GenericParameterNode_, ptr %63, i64 0, i32 1
  %64 = load i64, ptr %memberidx7, align 4
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %if.entry8, label %for.body.i.i.lr.ph

if.entry8:                                        ; preds = %ifend
  %memberidx11 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  store i1 true, ptr %memberidx11, align 1
  %66 = load ptr, ptr %memberidx3, align 8
  %67 = tail call ptr @malloc(i32 16)
  %memberidx13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %68 = load ptr, ptr %memberidx13, align 8
  %69 = load i64, ptr %68, align 4
  store i64 %69, ptr %67, align 4
  %memberidx1.i80 = getelementptr inbounds %Generic, ptr %67, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i80, align 8
  tail call fastcc void @Map_String_Generic____setitem__(ptr %66, ptr %4, ptr nonnull %67)
  br label %common.ret

for.body.i.i.lr.ph:                               ; preds = %ifend
  %70 = tail call ptr @malloc(i32 81)
  %memberidx.i74 = getelementptr inbounds %Class, ptr %70, i64 0, i32 3
  store ptr null, ptr %memberidx.i74, align 8
  %memberidx2.i76 = getelementptr inbounds %Class, ptr %70, i64 0, i32 8
  %memberidx3.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx2.i76, i8 0, i64 16, i1 false)
  %71 = tail call ptr @malloc(i32 24)
  %memberidx.i.i77 = getelementptr inbounds %Array_ClassField_, ptr %71, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i77, align 4
  %memberidx1.i.i78 = getelementptr inbounds %Array_ClassField_, ptr %71, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i78, align 4
  %72 = tail call ptr @malloc(i32 64)
  store ptr %72, ptr %71, align 8
  store i64 0, ptr %memberidx.i.i77, align 4
  store ptr %71, ptr %memberidx3.i, align 8
  %memberidx6.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 5
  %73 = tail call ptr @malloc(i32 24)
  %memberidx.i19.i = getelementptr inbounds %Array_ClassMethod_, ptr %73, i64 0, i32 1
  store i64 0, ptr %memberidx.i19.i, align 4
  %memberidx1.i20.i = getelementptr inbounds %Array_ClassMethod_, ptr %73, i64 0, i32 2
  store i64 8, ptr %memberidx1.i20.i, align 4
  %74 = tail call ptr @malloc(i32 64)
  store ptr %74, ptr %73, align 8
  store i64 0, ptr %memberidx.i19.i, align 4
  store ptr %73, ptr %memberidx6.i, align 8
  %memberidx9.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 6
  %75 = tail call ptr @malloc(i32 24)
  %76 = tail call ptr @malloc(i32 2048)
  store ptr %76, ptr %75, align 8
  %77 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %77, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Range, ptr %77, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i.i, align 4
  %78 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i.i = getelementptr inbounds %RangeIterator, ptr %78, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %RangeIterator, ptr %78, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i.i, align 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.lr.ph, %for.body.i.i
  %79 = phi i64 [ 1, %for.body.i.i.lr.ph ], [ %84, %for.body.i.i ]
  %80 = phi i64 [ 0, %for.body.i.i.lr.ph ], [ %79, %for.body.i.i ]
  %81 = load ptr, ptr %75, align 8
  %82 = getelementptr inbounds ptr, ptr %81, i64 %80
  store ptr null, ptr %82, align 8
  %83 = icmp ugt i64 %79, 255
  %84 = add nuw nsw i64 %79, 1
  br i1 %83, label %for.body.i28.i.lr.ph, label %for.body.i.i

for.body.i28.i.lr.ph:                             ; preds = %for.body.i.i
  tail call void @free(ptr nonnull %78)
  %memberidx3.i.i79 = getelementptr inbounds %Map_String_PropId_, ptr %75, i64 0, i32 1
  store i64 256, ptr %memberidx3.i.i79, align 4
  %memberidx4.i.i = getelementptr inbounds %Map_String_PropId_, ptr %75, i64 0, i32 2
  store i64 0, ptr %memberidx4.i.i, align 4
  store ptr %75, ptr %memberidx9.i, align 8
  %memberidx10.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 7
  %85 = tail call ptr @malloc(i32 24)
  %86 = tail call ptr @malloc(i32 2048)
  store ptr %86, ptr %85, align 8
  %87 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %87, align 4
  %memberidx1.i.i21.i = getelementptr inbounds %Range, ptr %87, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i21.i, align 4
  %88 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i23.i = getelementptr inbounds %RangeIterator, ptr %88, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i23.i, align 4
  %memberidx1.i.i.i24.i = getelementptr inbounds %RangeIterator, ptr %88, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i24.i, align 4
  br label %for.body.i28.i

for.body.i28.i:                                   ; preds = %for.body.i28.i.lr.ph, %for.body.i28.i
  %89 = phi i64 [ 1, %for.body.i28.i.lr.ph ], [ %94, %for.body.i28.i ]
  %90 = phi i64 [ 0, %for.body.i28.i.lr.ph ], [ %89, %for.body.i28.i ]
  %91 = load ptr, ptr %85, align 8
  %92 = getelementptr inbounds ptr, ptr %91, i64 %90
  store ptr null, ptr %92, align 8
  %93 = icmp ugt i64 %89, 255
  %94 = add nuw nsw i64 %89, 1
  br i1 %93, label %Class_constructor.exit, label %for.body.i28.i

Class_constructor.exit:                           ; preds = %for.body.i28.i
  tail call void @free(ptr nonnull %88)
  %memberidx3.i29.i = getelementptr inbounds %Map_String_PropId_, ptr %85, i64 0, i32 1
  store i64 256, ptr %memberidx3.i29.i, align 4
  %memberidx4.i30.i = getelementptr inbounds %Map_String_PropId_, ptr %85, i64 0, i32 2
  store i64 0, ptr %memberidx4.i30.i, align 4
  store ptr %85, ptr %memberidx10.i, align 8
  %memberidx11.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 10
  store i1 false, ptr %memberidx11.i, align 1
  %95 = load ptr, ptr %0, align 8
  %memberidx.i.i71 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %96 = load ptr, ptr %memberidx.i.i71, align 8
  %97 = load i64, ptr %96, align 4
  %98 = load ptr, ptr %95, align 8
  %99 = load ptr, ptr %98, align 8
  %100 = getelementptr inbounds ptr, ptr %99, i64 %97
  %101 = load ptr, ptr %100, align 8
  %memberidx1.i72 = getelementptr inbounds %Module, ptr %101, i64 0, i32 5
  %102 = load ptr, ptr %memberidx1.i72, align 8
  %103 = load i64, ptr %102, align 4
  %104 = getelementptr inbounds ptr, ptr %99, i64 %103
  %105 = load ptr, ptr %104, align 8
  %memberidx2.i.i73 = getelementptr inbounds %Module, ptr %105, i64 0, i32 7
  %106 = load ptr, ptr %memberidx2.i.i73, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %102, i64 0, i32 1
  %107 = load i64, ptr %memberidx3.i.i, align 4
  %108 = load ptr, ptr %106, align 8
  %109 = getelementptr inbounds ptr, ptr %108, i64 %107
  %110 = load ptr, ptr %109, align 8
  %memberidx15 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 2
  %111 = load ptr, ptr %memberidx15, align 8
  %.not = icmp eq ptr %111, null
  %memberidx24 = getelementptr inbounds %Class, ptr %70, i64 0, i32 2
  br i1 %.not, label %else17, label %if.entry16

if.entry16:                                       ; preds = %Class_constructor.exit
  %112 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %111)
  store ptr %112, ptr %memberidx24, align 8
  %memberidx.i69 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %113 = load ptr, ptr %memberidx.i69, align 8
  %memberidx1.i70 = getelementptr inbounds %Compiler, ptr %113, i64 0, i32 5
  %114 = load ptr, ptr %memberidx1.i70, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 1
  %115 = load i64, ptr %memberidx2.i, align 4
  %116 = icmp sgt i64 %115, 0
  br i1 %116, label %common.ret, label %ifend18

else17:                                           ; preds = %Class_constructor.exit
  store ptr null, ptr %memberidx24, align 8
  br label %ifend18

ifend18:                                          ; preds = %if.entry16, %else17
  %memberidx25 = getelementptr inbounds %Class, ptr %70, i64 0, i32 1
  store ptr %4, ptr %memberidx25, align 8
  %117 = tail call ptr @malloc(i32 24)
  %118 = load ptr, ptr %memberidx.i.i71, align 8
  %119 = load i64, ptr %118, align 4
  %120 = load ptr, ptr %0, align 8
  %121 = load ptr, ptr %120, align 8
  %122 = load ptr, ptr %121, align 8
  %123 = getelementptr inbounds ptr, ptr %122, i64 %119
  %124 = load ptr, ptr %123, align 8
  %memberidx29 = getelementptr inbounds %Module, ptr %124, i64 0, i32 3
  %125 = load ptr, ptr %memberidx29, align 8
  %memberidx30 = getelementptr inbounds %Array_Class_, ptr %125, i64 0, i32 1
  %126 = load i64, ptr %memberidx30, align 4
  store i64 %119, ptr %117, align 4
  %memberidx1.i.i66 = getelementptr inbounds %TypeId, ptr %117, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i66, align 4
  %memberidx2.i.i67 = getelementptr inbounds %TypeId, ptr %117, i64 0, i32 2
  store i64 %126, ptr %memberidx2.i.i67, align 4
  store ptr %117, ptr %70, align 8
  %127 = load i64, ptr %118, align 4
  %128 = load ptr, ptr %120, align 8
  %129 = load ptr, ptr %128, align 8
  %130 = getelementptr inbounds ptr, ptr %129, i64 %127
  %131 = load ptr, ptr %130, align 8
  %memberidx31 = getelementptr inbounds %Module, ptr %131, i64 0, i32 3
  %132 = load ptr, ptr %memberidx31, align 8
  %memberidx.i = getelementptr inbounds %Array_Class_, ptr %132, i64 0, i32 1
  %133 = load i64, ptr %memberidx.i, align 4
  %134 = add i64 %133, 1
  %memberidx.i.i = getelementptr inbounds %Array_Class_, ptr %132, i64 0, i32 2
  %135 = load i64, ptr %memberidx.i.i, align 4
  %136 = icmp slt i64 %135, %134
  %.pre115 = load ptr, ptr %132, align 8
  br i1 %136, label %while.body.i.i, label %Array_Class____sl__.exit

while.body.i.i:                                   ; preds = %ifend18, %while.body.i.i
  %137 = phi ptr [ %141, %while.body.i.i ], [ %.pre115, %ifend18 ]
  %138 = phi i64 [ %142, %while.body.i.i ], [ %135, %ifend18 ]
  %139 = shl nuw i64 %138, 1
  store i64 %139, ptr %memberidx.i.i, align 4
  %140 = shl i64 %138, 4
  %141 = tail call ptr @realloc(ptr %137, i64 %140)
  store ptr %141, ptr %132, align 8
  %142 = load i64, ptr %memberidx.i.i, align 4
  %143 = icmp slt i64 %142, %134
  br i1 %143, label %while.body.i.i, label %Array_Class____sl__.exit.loopexit

Array_Class____sl__.exit.loopexit:                ; preds = %while.body.i.i
  %.pre116 = load i64, ptr %memberidx.i, align 4
  %.pre124 = add nsw i64 %.pre116, 1
  br label %Array_Class____sl__.exit

Array_Class____sl__.exit:                         ; preds = %ifend18, %Array_Class____sl__.exit.loopexit
  %.pre-phi125 = phi i64 [ %.pre124, %Array_Class____sl__.exit.loopexit ], [ %134, %ifend18 ]
  %144 = phi ptr [ %141, %Array_Class____sl__.exit.loopexit ], [ %.pre115, %ifend18 ]
  %145 = phi i64 [ %.pre116, %Array_Class____sl__.exit.loopexit ], [ %133, %ifend18 ]
  store i64 %.pre-phi125, ptr %memberidx.i, align 4
  %146 = getelementptr inbounds ptr, ptr %144, i64 %145
  store ptr %70, ptr %146, align 8
  %memberidx32 = getelementptr inbounds %Scope, ptr %110, i64 0, i32 2
  %147 = load ptr, ptr %memberidx32, align 8
  %148 = load ptr, ptr %70, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %147, ptr %4, ptr %148)
  %memberidx34 = getelementptr inbounds %Scope, ptr %110, i64 0, i32 1
  %149 = load ptr, ptr %memberidx34, align 8
  %150 = tail call ptr @malloc(i32 24)
  %151 = load ptr, ptr %70, align 8
  %152 = load i64, ptr %151, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %151, i64 0, i32 2
  %153 = load i64, ptr %memberidx1.i, align 4
  store i64 3, ptr %150, align 4
  %memberidx1.i.i = getelementptr inbounds %VarId, ptr %150, i64 0, i32 1
  store i64 %152, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %150, i64 0, i32 2
  store i64 %153, ptr %memberidx2.i.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %149, ptr %4, ptr nonnull %150)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_function_within_module(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 49)
  %memberidx.i = getelementptr inbounds %Function, ptr %3, i64 0, i32 6
  %memberidx1 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 4
  %4 = load i1, ptr %memberidx1, align 1
  store i1 %4, ptr %memberidx.i, align 1
  %5 = load ptr, ptr %1, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %5, i64 0, i32 2
  %6 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Function, ptr %3, i64 0, i32 1
  store ptr %6, ptr %memberidx4, align 8
  %7 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %6)
  %.not.i = icmp eq ptr %7, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 2
  br i1 %9, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_create_child_scope_within_current_scope.exit, %Array_Function____sl__.exit, %TypeChecker_error.exit88, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %if.entry.i
  %memberidx.i72 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i72, align 4
  %11 = trunc i64 %10 to i32
  %12 = add i32 %11, 1
  %13 = tail call ptr @malloc(i32 %12)
  %14 = load ptr, ptr %6, align 8
  %15 = load i64, ptr %memberidx.i72, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %14, i64 %15, i1 false)
  %16 = getelementptr inbounds i8, ptr %13, i64 %15
  store i8 0, ptr %16, align 1
  %17 = alloca ptr, align 8
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %17, ptr nonnull @109, ptr %13)
  %19 = load ptr, ptr %17, align 8
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 %18, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx2.i, align 4
  tail call void @free(ptr %13)
  %21 = load ptr, ptr %1, align 8
  %memberidx6 = getelementptr inbounds %Token, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx6, align 8
  %memberidx.i74 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %23 = load ptr, ptr %memberidx.i74, align 8
  %memberidx1.i75 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx1.i75, align 8
  %25 = call ptr @malloc(i32 24)
  store i64 1, ptr %25, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %25, i64 0, i32 2
  store ptr %22, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %25, i64 0, i32 1
  store ptr %20, ptr %memberidx2.i.i, align 8
  %memberidx.i.i76 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i.i76, align 4
  %27 = add i64 %26, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i.i, align 4
  %29 = icmp slt i64 %28, %27
  %.pre = load ptr, ptr %24, align 8
  br i1 %29, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %30 = phi ptr [ %34, %while.body.i.i.i ], [ %.pre, %if.entry ]
  %31 = phi i64 [ %35, %while.body.i.i.i ], [ %28, %if.entry ]
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx.i.i.i, align 4
  %33 = shl i64 %31, 4
  %34 = call ptr @realloc(ptr %30, i64 %33)
  store ptr %34, ptr %24, align 8
  %35 = load i64, ptr %memberidx.i.i.i, align 4
  %36 = icmp slt i64 %35, %27
  br i1 %36, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre112 = load i64, ptr %memberidx.i.i76, align 4
  %.pre128 = add nsw i64 %.pre112, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi129 = phi i64 [ %.pre128, %TypeChecker_error.exit.loopexit ], [ %27, %if.entry ]
  %37 = phi ptr [ %34, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %38 = phi i64 [ %.pre112, %TypeChecker_error.exit.loopexit ], [ %26, %if.entry ]
  store i64 %.pre-phi129, ptr %memberidx.i.i76, align 4
  %39 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %25, ptr %39, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %40 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %6)
  %41 = load i64, ptr %40, align 4
  %.not = icmp eq i64 %41, 21
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %ifend
  %memberidx.i77 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i77, align 4
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, 1
  %45 = tail call ptr @malloc(i32 %44)
  %46 = load ptr, ptr %6, align 8
  %47 = load i64, ptr %memberidx.i77, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %45, ptr align 8 %46, i64 %47, i1 false)
  %48 = getelementptr inbounds i8, ptr %45, i64 %47
  store i8 0, ptr %48, align 1
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @110, ptr %45)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i78 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 %50, ptr %memberidx1.i78, align 4
  %memberidx2.i79 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i79, align 4
  tail call void @free(ptr %45)
  %53 = load ptr, ptr %1, align 8
  %memberidx12 = getelementptr inbounds %Token, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx12, align 8
  %memberidx.i80 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %55 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i81 = getelementptr inbounds %Compiler, ptr %55, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1.i81, align 8
  %57 = call ptr @malloc(i32 24)
  store i64 1, ptr %57, align 4
  %memberidx1.i.i82 = getelementptr inbounds %FloError, ptr %57, i64 0, i32 2
  store ptr %54, ptr %memberidx1.i.i82, align 8
  %memberidx2.i.i83 = getelementptr inbounds %FloError, ptr %57, i64 0, i32 1
  store ptr %52, ptr %memberidx2.i.i83, align 8
  %memberidx.i.i84 = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i.i84, align 4
  %59 = add i64 %58, 1
  %memberidx.i.i.i85 = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 2
  %60 = load i64, ptr %memberidx.i.i.i85, align 4
  %61 = icmp slt i64 %60, %59
  %.pre114 = load ptr, ptr %56, align 8
  br i1 %61, label %while.body.i.i.i87, label %TypeChecker_error.exit88

while.body.i.i.i87:                               ; preds = %if.entry8, %while.body.i.i.i87
  %62 = phi ptr [ %66, %while.body.i.i.i87 ], [ %.pre114, %if.entry8 ]
  %63 = phi i64 [ %67, %while.body.i.i.i87 ], [ %60, %if.entry8 ]
  %64 = shl nuw i64 %63, 1
  store i64 %64, ptr %memberidx.i.i.i85, align 4
  %65 = shl i64 %63, 4
  %66 = call ptr @realloc(ptr %62, i64 %65)
  store ptr %66, ptr %56, align 8
  %67 = load i64, ptr %memberidx.i.i.i85, align 4
  %68 = icmp slt i64 %67, %59
  br i1 %68, label %while.body.i.i.i87, label %TypeChecker_error.exit88.loopexit

TypeChecker_error.exit88.loopexit:                ; preds = %while.body.i.i.i87
  %.pre115 = load i64, ptr %memberidx.i.i84, align 4
  %.pre126 = add nsw i64 %.pre115, 1
  br label %TypeChecker_error.exit88

TypeChecker_error.exit88:                         ; preds = %if.entry8, %TypeChecker_error.exit88.loopexit
  %.pre-phi127 = phi i64 [ %.pre126, %TypeChecker_error.exit88.loopexit ], [ %59, %if.entry8 ]
  %69 = phi ptr [ %66, %TypeChecker_error.exit88.loopexit ], [ %.pre114, %if.entry8 ]
  %70 = phi i64 [ %.pre115, %TypeChecker_error.exit88.loopexit ], [ %58, %if.entry8 ]
  store i64 %.pre-phi127, ptr %memberidx.i.i84, align 4
  %71 = getelementptr inbounds ptr, ptr %69, i64 %70
  store ptr %57, ptr %71, align 8
  br label %common.ret

ifend10:                                          ; preds = %ifend
  %memberidx13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %72 = load ptr, ptr %memberidx13, align 8
  %73 = load i64, ptr %72, align 4
  %74 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %73)
  %memberidx2.i90 = getelementptr inbounds %Scope, ptr %74, i64 0, i32 5
  %75 = load ptr, ptr %memberidx13, align 8
  store ptr %75, ptr %memberidx2.i90, align 8
  %76 = load ptr, ptr %0, align 8
  %77 = load ptr, ptr %memberidx13, align 8
  %78 = load ptr, ptr %76, align 8
  %79 = load i64, ptr %77, align 4
  %80 = load ptr, ptr %78, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %79
  %82 = load ptr, ptr %81, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %82, i64 0, i32 7
  %83 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %77, i64 0, i32 1
  %84 = load i64, ptr %memberidx3.i.i.i, align 4
  %85 = load ptr, ptr %83, align 8
  %86 = getelementptr inbounds ptr, ptr %85, i64 %84
  %87 = load ptr, ptr %86, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %87, i64 0, i32 7
  %88 = load ptr, ptr %memberidx4.i, align 8
  %89 = load ptr, ptr %74, align 8
  %memberidx.i.i92 = getelementptr inbounds %Array_ScopeId_, ptr %88, i64 0, i32 1
  %90 = load i64, ptr %memberidx.i.i92, align 4
  %91 = add i64 %90, 1
  %memberidx.i.i.i93 = getelementptr inbounds %Array_ScopeId_, ptr %88, i64 0, i32 2
  %92 = load i64, ptr %memberidx.i.i.i93, align 4
  %93 = icmp slt i64 %92, %91
  %.pre117 = load ptr, ptr %88, align 8
  br i1 %93, label %while.body.i.i.i95, label %TypeChecker_create_child_scope_within_current_scope.exit

while.body.i.i.i95:                               ; preds = %ifend10, %while.body.i.i.i95
  %94 = phi ptr [ %98, %while.body.i.i.i95 ], [ %.pre117, %ifend10 ]
  %95 = phi i64 [ %99, %while.body.i.i.i95 ], [ %92, %ifend10 ]
  %96 = shl nuw i64 %95, 1
  store i64 %96, ptr %memberidx.i.i.i93, align 4
  %97 = shl i64 %95, 4
  %98 = tail call ptr @realloc(ptr %94, i64 %97)
  store ptr %98, ptr %88, align 8
  %99 = load i64, ptr %memberidx.i.i.i93, align 4
  %100 = icmp slt i64 %99, %91
  br i1 %100, label %while.body.i.i.i95, label %TypeChecker_create_child_scope_within_current_scope.exit.loopexit

TypeChecker_create_child_scope_within_current_scope.exit.loopexit: ; preds = %while.body.i.i.i95
  %.pre118 = load i64, ptr %memberidx.i.i92, align 4
  %.pre123 = add nsw i64 %.pre118, 1
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %ifend10, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit
  %.pre-phi = phi i64 [ %.pre123, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %91, %ifend10 ]
  %101 = phi ptr [ %98, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %.pre117, %ifend10 ]
  %102 = phi i64 [ %.pre118, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %90, %ifend10 ]
  store i64 %.pre-phi, ptr %memberidx.i.i92, align 4
  %103 = getelementptr inbounds ptr, ptr %101, i64 %102
  store ptr %89, ptr %103, align 8
  %104 = load ptr, ptr %74, align 8
  store ptr %104, ptr %memberidx13, align 8
  %memberidx16 = getelementptr inbounds %Function, ptr %3, i64 0, i32 2
  %105 = tail call ptr @malloc(i32 24)
  %memberidx.i96 = getelementptr inbounds %Array_FunctionArg_, ptr %105, i64 0, i32 1
  store i64 0, ptr %memberidx.i96, align 4
  %memberidx1.i97 = getelementptr inbounds %Array_FunctionArg_, ptr %105, i64 0, i32 2
  store i64 8, ptr %memberidx1.i97, align 4
  %106 = tail call ptr @malloc(i32 64)
  store ptr %106, ptr %105, align 8
  store i64 0, ptr %memberidx.i96, align 4
  store ptr %105, ptr %memberidx16, align 8
  %memberidx19 = getelementptr inbounds %Function, ptr %3, i64 0, i32 4
  %memberidx20 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 1
  %107 = load ptr, ptr %memberidx20, align 8
  %memberidx21 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 3
  %108 = load ptr, ptr %memberidx21, align 8
  %109 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %107, ptr %108, ptr nonnull %105)
  store ptr %109, ptr %memberidx19, align 8
  %memberidx.i98 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %110 = load ptr, ptr %memberidx.i98, align 8
  %memberidx1.i99 = getelementptr inbounds %Compiler, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx1.i99, align 8
  %memberidx2.i100 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 1
  %112 = load i64, ptr %memberidx2.i100, align 4
  %113 = icmp sgt i64 %112, 0
  br i1 %113, label %common.ret, label %ifend25

ifend25:                                          ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %114 = tail call ptr @malloc(i32 24)
  %115 = load ptr, ptr %memberidx13, align 8
  %116 = load i64, ptr %115, align 4
  %117 = load ptr, ptr %0, align 8
  %118 = load ptr, ptr %117, align 8
  %119 = load ptr, ptr %118, align 8
  %120 = getelementptr inbounds ptr, ptr %119, i64 %116
  %121 = load ptr, ptr %120, align 8
  %memberidx29 = getelementptr inbounds %Module, ptr %121, i64 0, i32 4
  %122 = load ptr, ptr %memberidx29, align 8
  %memberidx30 = getelementptr inbounds %Array_Function_, ptr %122, i64 0, i32 1
  %123 = load i64, ptr %memberidx30, align 4
  store i64 0, ptr %114, align 4
  %memberidx1.i102 = getelementptr inbounds %VarId, ptr %114, i64 0, i32 1
  store i64 %116, ptr %memberidx1.i102, align 4
  %memberidx2.i103 = getelementptr inbounds %VarId, ptr %114, i64 0, i32 2
  store i64 %123, ptr %memberidx2.i103, align 4
  store ptr %114, ptr %3, align 8
  %124 = load ptr, ptr %memberidx2.i90, align 8
  store ptr %124, ptr %memberidx13, align 8
  %memberidx33 = getelementptr inbounds %Function, ptr %3, i64 0, i32 5
  %125 = load ptr, ptr %74, align 8
  store ptr %125, ptr %memberidx33, align 8
  %126 = load i64, ptr %124, align 4
  %127 = load ptr, ptr %117, align 8
  %128 = load ptr, ptr %127, align 8
  %129 = getelementptr inbounds ptr, ptr %128, i64 %126
  %130 = load ptr, ptr %129, align 8
  %memberidx1.i106 = getelementptr inbounds %Module, ptr %130, i64 0, i32 5
  %131 = load ptr, ptr %memberidx1.i106, align 8
  %132 = load i64, ptr %131, align 4
  %133 = getelementptr inbounds ptr, ptr %128, i64 %132
  %134 = load ptr, ptr %133, align 8
  %memberidx2.i.i107 = getelementptr inbounds %Module, ptr %134, i64 0, i32 7
  %135 = load ptr, ptr %memberidx2.i.i107, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %131, i64 0, i32 1
  %136 = load i64, ptr %memberidx3.i.i, align 4
  %137 = load ptr, ptr %135, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %136
  %139 = load ptr, ptr %138, align 8
  %memberidx35 = getelementptr inbounds %Module, ptr %130, i64 0, i32 4
  %140 = load ptr, ptr %memberidx35, align 8
  %memberidx.i73 = getelementptr inbounds %Array_Function_, ptr %140, i64 0, i32 1
  %141 = load i64, ptr %memberidx.i73, align 4
  %142 = add i64 %141, 1
  %memberidx.i.i = getelementptr inbounds %Array_Function_, ptr %140, i64 0, i32 2
  %143 = load i64, ptr %memberidx.i.i, align 4
  %144 = icmp slt i64 %143, %142
  %.pre120 = load ptr, ptr %140, align 8
  br i1 %144, label %while.body.i.i, label %Array_Function____sl__.exit

while.body.i.i:                                   ; preds = %ifend25, %while.body.i.i
  %145 = phi ptr [ %149, %while.body.i.i ], [ %.pre120, %ifend25 ]
  %146 = phi i64 [ %150, %while.body.i.i ], [ %143, %ifend25 ]
  %147 = shl nuw i64 %146, 1
  store i64 %147, ptr %memberidx.i.i, align 4
  %148 = shl i64 %146, 4
  %149 = tail call ptr @realloc(ptr %145, i64 %148)
  store ptr %149, ptr %140, align 8
  %150 = load i64, ptr %memberidx.i.i, align 4
  %151 = icmp slt i64 %150, %142
  br i1 %151, label %while.body.i.i, label %Array_Function____sl__.exit.loopexit

Array_Function____sl__.exit.loopexit:             ; preds = %while.body.i.i
  %.pre121 = load i64, ptr %memberidx.i73, align 4
  %.pre124 = add nsw i64 %.pre121, 1
  br label %Array_Function____sl__.exit

Array_Function____sl__.exit:                      ; preds = %ifend25, %Array_Function____sl__.exit.loopexit
  %.pre-phi125 = phi i64 [ %.pre124, %Array_Function____sl__.exit.loopexit ], [ %142, %ifend25 ]
  %152 = phi ptr [ %149, %Array_Function____sl__.exit.loopexit ], [ %.pre120, %ifend25 ]
  %153 = phi i64 [ %.pre121, %Array_Function____sl__.exit.loopexit ], [ %141, %ifend25 ]
  store i64 %.pre-phi125, ptr %memberidx.i73, align 4
  %154 = getelementptr inbounds ptr, ptr %152, i64 %153
  store ptr %3, ptr %154, align 8
  %memberidx36 = getelementptr inbounds %Scope, ptr %139, i64 0, i32 3
  %155 = load ptr, ptr %memberidx36, align 8
  %156 = load ptr, ptr %memberidx4, align 8
  %157 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %155, ptr %156, ptr %157)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %4)
  %6 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %tailrecurse.i, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i67, %tailrecurse.i ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %7 = load i64, ptr %.tr11.i, align 4
  %switch = icmp eq i64 %7, 20
  %memberidx1.i67 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br i1 %switch, label %tailrecurse.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i69 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %8 = load ptr, ptr %memberidx6.i69, align 8
  %9 = load ptr, ptr %6, align 8
  %10 = load i64, ptr %8, align 4
  %11 = load ptr, ptr %9, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx2.i.i70 = getelementptr inbounds %Module, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx2.i.i70, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %15 = load i64, ptr %memberidx3.i.i, align 4
  %16 = load ptr, ptr %14, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8
  %memberidx3 = getelementptr inbounds %Class, ptr %18, i64 0, i32 6
  %19 = load ptr, ptr %memberidx3, align 8
  %20 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %5)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %19, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %19, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i72 = icmp eq ptr %25, null
  br i1 %.not.i72, label %common.ret, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre76.pre = load ptr, ptr %19, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre76.pre, i64 %hash.0.i73
  %.pre77.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre77.pre, null
  br i1 %.not22.i, label %common.ret, label %Map_String_PropId____getitem__.exit

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %27 = phi ptr [ %23, %while.body.i.lr.ph ], [ %36, %else.i ]
  %28 = phi i64 [ %21, %while.body.i.lr.ph ], [ %37, %else.i ]
  %29 = phi ptr [ %25, %while.body.i.lr.ph ], [ %41, %else.i ]
  %hash.0.i73 = phi i64 [ %22, %while.body.i.lr.ph ], [ %39, %else.i ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %31, %26
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %32 = load ptr, ptr %30, align 8
  %33 = load ptr, ptr %5, align 8
  %34 = tail call i64 @memcmp(ptr %32, ptr %33, i64 %26)
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre75 = load ptr, ptr %19, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %36 = phi ptr [ %.pre75, %ifend.i.i.else.i_crit_edge ], [ %27, %while.body.i ]
  %37 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.body.i ]
  %38 = add nuw i64 %hash.0.i73, 1
  %39 = urem i64 %38, %37
  %40 = getelementptr inbounds ptr, ptr %36, i64 %39
  %41 = load ptr, ptr %40, align 8
  %.not.i = icmp eq ptr %41, null
  br i1 %.not.i, label %common.ret, label %while.body.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre77.pre, i64 0, i32 1
  %42 = load ptr, ptr %memberidx10.i, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %get_class_prop_type.exit, %Map_String_PropId____getitem__.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %122, %ifend13 ], [ null, %Map_String_PropId____getitem__.exit ], [ null, %get_class_prop_type.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %44 = load ptr, ptr %0, align 8
  %memberidx.i.i38 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i38, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = load i64, ptr %45, align 4
  %48 = load ptr, ptr %46, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %50, i64 0, i32 3
  %51 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %45, i64 0, i32 2
  %52 = load i64, ptr %memberidx3.i.i.i, align 4
  %53 = load ptr, ptr %51, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 %52
  %55 = load ptr, ptr %54, align 8
  %56 = load i64, ptr %42, align 4
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 5
  %58 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %59 = load i64, ptr %memberidx2.i, align 4
  %60 = load ptr, ptr %58, align 8
  %61 = getelementptr inbounds ptr, ptr %60, i64 %59
  %62 = load ptr, ptr %61, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %62, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 4
  %63 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %64 = load i64, ptr %memberidx5.i, align 4
  %65 = load ptr, ptr %63, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %67, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i39 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx5 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i39, i64 0, i32 1
  %68 = load ptr, ptr %memberidx5, align 8
  %69 = load ptr, ptr %68, align 8
  %70 = load ptr, ptr %69, align 8
  %memberidx6 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %71 = load ptr, ptr %memberidx6, align 8
  %72 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %70, ptr %71)
  %memberidx.i40 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %73 = load ptr, ptr %memberidx.i40, align 8
  %memberidx1.i41 = getelementptr inbounds %Compiler, ptr %73, i64 0, i32 5
  %74 = load ptr, ptr %memberidx1.i41, align 8
  %memberidx2.i42 = getelementptr inbounds %Array_FloError_, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx2.i42, align 4
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %common.ret, label %ifend9

ifend9:                                           ; preds = %get_class_prop_type.exit
  %memberidx10 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  %77 = load ptr, ptr %memberidx10, align 8
  %78 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %70, ptr %77)
  br i1 %78, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %79 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %70)
  %memberidx.i43 = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  %80 = load i64, ptr %memberidx.i43, align 4
  %81 = trunc i64 %80 to i32
  %82 = add i32 %81, 1
  %83 = tail call ptr @malloc(i32 %82)
  %84 = load ptr, ptr %79, align 8
  %85 = load i64, ptr %memberidx.i43, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %83, ptr align 8 %84, i64 %85, i1 false)
  %86 = getelementptr inbounds i8, ptr %83, i64 %85
  store i8 0, ptr %86, align 1
  %87 = load ptr, ptr %memberidx10, align 8
  %88 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %87)
  %memberidx.i44 = getelementptr inbounds %String, ptr %88, i64 0, i32 1
  %89 = load i64, ptr %memberidx.i44, align 4
  %90 = trunc i64 %89 to i32
  %91 = add i32 %90, 1
  %92 = tail call ptr @malloc(i32 %91)
  %93 = load ptr, ptr %88, align 8
  %94 = load i64, ptr %memberidx.i44, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %92, ptr align 8 %93, i64 %94, i1 false)
  %95 = getelementptr inbounds i8, ptr %92, i64 %94
  store i8 0, ptr %95, align 1
  %96 = alloca ptr, align 8
  %97 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %96, ptr nonnull @177, ptr %83, ptr %92)
  %98 = load ptr, ptr %96, align 8
  %99 = tail call ptr @malloc(i32 24)
  store ptr %98, ptr %99, align 8
  %memberidx1.i45 = getelementptr inbounds %String, ptr %99, i64 0, i32 1
  store i64 %97, ptr %memberidx1.i45, align 4
  %memberidx2.i46 = getelementptr inbounds %String, ptr %99, i64 0, i32 2
  store i64 %97, ptr %memberidx2.i46, align 4
  tail call void @free(ptr %83)
  tail call void @free(ptr %92)
  %100 = load ptr, ptr %memberidx6, align 8
  %101 = load ptr, ptr %100, align 8
  %102 = load ptr, ptr %memberidx.i40, align 8
  %memberidx1.i48 = getelementptr inbounds %Compiler, ptr %102, i64 0, i32 5
  %103 = load ptr, ptr %memberidx1.i48, align 8
  %104 = call ptr @malloc(i32 24)
  store i64 5, ptr %104, align 4
  %memberidx1.i.i49 = getelementptr inbounds %FloError, ptr %104, i64 0, i32 2
  store ptr %101, ptr %memberidx1.i.i49, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %104, i64 0, i32 1
  store ptr %99, ptr %memberidx2.i.i, align 8
  %memberidx.i.i50 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 1
  %105 = load i64, ptr %memberidx.i.i50, align 4
  %106 = add i64 %105, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 2
  %107 = load i64, ptr %memberidx.i.i.i, align 4
  %108 = icmp slt i64 %107, %106
  %.pre78 = load ptr, ptr %103, align 8
  br i1 %108, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry11, %while.body.i.i.i
  %109 = phi ptr [ %113, %while.body.i.i.i ], [ %.pre78, %if.entry11 ]
  %110 = phi i64 [ %114, %while.body.i.i.i ], [ %107, %if.entry11 ]
  %111 = shl nuw i64 %110, 1
  store i64 %111, ptr %memberidx.i.i.i, align 4
  %112 = shl i64 %110, 4
  %113 = call ptr @realloc(ptr %109, i64 %112)
  store ptr %113, ptr %103, align 8
  %114 = load i64, ptr %memberidx.i.i.i, align 4
  %115 = icmp slt i64 %114, %106
  br i1 %115, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre79 = load i64, ptr %memberidx.i.i50, align 4
  %.pre83 = add nsw i64 %.pre79, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre83, %TypeChecker_error.exit.loopexit ], [ %106, %if.entry11 ]
  %116 = phi ptr [ %113, %TypeChecker_error.exit.loopexit ], [ %.pre78, %if.entry11 ]
  %117 = phi i64 [ %.pre79, %TypeChecker_error.exit.loopexit ], [ %105, %if.entry11 ]
  store i64 %.pre-phi, ptr %memberidx.i.i50, align 4
  %118 = getelementptr inbounds ptr, ptr %116, i64 %117
  store ptr %104, ptr %118, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %119 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %119, align 4
  %memberidx.i.i51 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i51, align 4
  %memberidx1.i.i52 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i52, align 1
  %memberidx.i53 = getelementptr inbounds %MemberExpression, ptr %119, i64 0, i32 4
  store ptr %1, ptr %memberidx.i53, align 8
  %memberidx1.i54 = getelementptr inbounds %MemberExpression, ptr %119, i64 0, i32 5
  store ptr %42, ptr %memberidx1.i54, align 8
  %memberidx2.i55 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  store ptr %common.ret.op.i39, ptr %memberidx2.i55, align 8
  %120 = tail call ptr @malloc(i32 24)
  %memberidx.i56 = getelementptr inbounds %Array_Expression_, ptr %120, i64 0, i32 1
  store i64 0, ptr %memberidx.i56, align 4
  %memberidx1.i57 = getelementptr inbounds %Array_Expression_, ptr %120, i64 0, i32 2
  store i64 8, ptr %memberidx1.i57, align 4
  %121 = tail call ptr @malloc(i32 64)
  store ptr %121, ptr %120, align 8
  store ptr %72, ptr %121, align 8
  store i64 1, ptr %memberidx.i56, align 4
  %122 = tail call ptr @malloc(i32 41)
  %memberidx19 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i39, i64 0, i32 2
  %123 = load ptr, ptr %memberidx19, align 8
  store i64 8, ptr %122, align 4
  %memberidx.i.i58 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i58, align 4
  %memberidx1.i.i59 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i59, align 1
  %memberidx.i60 = getelementptr inbounds %CallExpression, ptr %122, i64 0, i32 4
  store ptr %119, ptr %memberidx.i60, align 8
  %memberidx1.i61 = getelementptr inbounds %CallExpression, ptr %122, i64 0, i32 5
  store ptr %120, ptr %memberidx1.i61, align 8
  %memberidx2.i62 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  store ptr %123, ptr %memberidx2.i62, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = load ptr, ptr %0, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i86, %3
  %.tr11.i.in = phi ptr [ %memberidx1, %3 ], [ %memberidx1.i85, %if.entry.i86 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %5 = load i64, ptr %.tr11.i, align 4
  switch i64 %5, label %get_class_from_type.exit [
    i64 20, label %if.entry.i86
    i64 11, label %if.entry3.i
  ]

if.entry.i86:                                     ; preds = %tailrecurse.i
  %memberidx1.i85 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i87 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %6 = load ptr, ptr %memberidx6.i87, align 8
  %7 = load ptr, ptr %4, align 8
  %8 = load i64, ptr %6, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i88 = getelementptr inbounds %Module, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2.i.i88, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i84 = phi ptr [ %16, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx2 = getelementptr inbounds %Class, ptr %common.ret.op.i84, i64 0, i32 6
  %17 = load ptr, ptr %memberidx2, align 8
  %18 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %18, ptr noundef nonnull align 8 dereferenceable(11) @121, i64 11, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i, align 4
  %20 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %19)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %17, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %17, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i91 = icmp eq ptr %25, null
  br i1 %.not.i91, label %if.entry, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre96.pre = load ptr, ptr %17, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre96.pre, i64 %hash.0.i92
  %.pre97.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre97.pre, null
  br i1 %.not22.i, label %if.entry, label %Map_String_PropId____getitem__.exit

while.body.i:                                     ; preds = %get_class_from_type.exit, %else.i
  %26 = phi ptr [ %34, %else.i ], [ %23, %get_class_from_type.exit ]
  %27 = phi i64 [ %35, %else.i ], [ %21, %get_class_from_type.exit ]
  %28 = phi ptr [ %39, %else.i ], [ %25, %get_class_from_type.exit ]
  %hash.0.i92 = phi i64 [ %37, %else.i ], [ %22, %get_class_from_type.exit ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %30, 11
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i64 @memcmp(ptr %31, ptr %18, i64 11)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre95 = load ptr, ptr %17, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %34 = phi ptr [ %.pre95, %ifend.i.i.else.i_crit_edge ], [ %26, %while.body.i ]
  %35 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %27, %while.body.i ]
  %36 = add nuw i64 %hash.0.i92, 1
  %37 = urem i64 %36, %35
  %38 = getelementptr inbounds ptr, ptr %34, i64 %37
  %39 = load ptr, ptr %38, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %if.entry, label %while.body.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre97.pre, i64 0, i32 1
  %40 = load ptr, ptr %memberidx10.i, align 8
  %41 = icmp eq ptr %40, null
  br i1 %41, label %if.entry, label %ifend

common.ret:                                       ; preds = %get_class_prop_type.exit, %ifend14, %TypeChecker_error.exit67, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit67 ], [ %148, %ifend14 ], [ null, %get_class_prop_type.exit ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_String_PropId____getitem__.exit
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i84, i64 0, i32 1
  %42 = load ptr, ptr %memberidx3, align 8
  %memberidx.i42 = getelementptr inbounds %String, ptr %42, i64 0, i32 1
  %43 = load i64, ptr %memberidx.i42, align 4
  %44 = trunc i64 %43 to i32
  %45 = add i32 %44, 1
  %46 = tail call ptr @malloc(i32 %45)
  %47 = load ptr, ptr %42, align 8
  %48 = load i64, ptr %memberidx.i42, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %46, ptr align 8 %47, i64 %48, i1 false)
  %49 = getelementptr inbounds i8, ptr %46, i64 %48
  store i8 0, ptr %49, align 1
  %50 = alloca ptr, align 8
  %51 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %50, ptr nonnull @207, ptr %46)
  %52 = load ptr, ptr %50, align 8
  %53 = tail call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  store i64 %51, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %53, i64 0, i32 2
  store i64 %51, ptr %memberidx2.i, align 4
  tail call void @free(ptr %46)
  %54 = load ptr, ptr %2, align 8
  %memberidx.i43 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %55 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i44 = getelementptr inbounds %Compiler, ptr %55, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1.i44, align 8
  %57 = call ptr @malloc(i32 24)
  store i64 4, ptr %57, align 4
  %memberidx1.i.i45 = getelementptr inbounds %FloError, ptr %57, i64 0, i32 2
  store ptr %54, ptr %memberidx1.i.i45, align 8
  %memberidx2.i.i46 = getelementptr inbounds %FloError, ptr %57, i64 0, i32 1
  store ptr %53, ptr %memberidx2.i.i46, align 8
  %memberidx.i.i47 = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i.i47, align 4
  %59 = add i64 %58, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 2
  %60 = load i64, ptr %memberidx.i.i.i, align 4
  %61 = icmp slt i64 %60, %59
  %.pre101 = load ptr, ptr %56, align 8
  br i1 %61, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %62 = phi ptr [ %66, %while.body.i.i.i ], [ %.pre101, %if.entry ]
  %63 = phi i64 [ %67, %while.body.i.i.i ], [ %60, %if.entry ]
  %64 = shl nuw i64 %63, 1
  store i64 %64, ptr %memberidx.i.i.i, align 4
  %65 = shl i64 %63, 4
  %66 = call ptr @realloc(ptr %62, i64 %65)
  store ptr %66, ptr %56, align 8
  %67 = load i64, ptr %memberidx.i.i.i, align 4
  %68 = icmp slt i64 %67, %59
  br i1 %68, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre102 = load i64, ptr %memberidx.i.i47, align 4
  %.pre106 = add nsw i64 %.pre102, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre106, %TypeChecker_error.exit.loopexit ], [ %59, %if.entry ]
  %69 = phi ptr [ %66, %TypeChecker_error.exit.loopexit ], [ %.pre101, %if.entry ]
  %70 = phi i64 [ %.pre102, %TypeChecker_error.exit.loopexit ], [ %58, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i47, align 4
  %71 = getelementptr inbounds ptr, ptr %69, i64 %70
  store ptr %57, ptr %71, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %72 = load ptr, ptr %0, align 8
  %memberidx.i.i48 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i.i48, align 8
  %74 = load ptr, ptr %72, align 8
  %75 = load i64, ptr %73, align 4
  %76 = load ptr, ptr %74, align 8
  %77 = getelementptr inbounds ptr, ptr %76, i64 %75
  %78 = load ptr, ptr %77, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %78, i64 0, i32 3
  %79 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %73, i64 0, i32 2
  %80 = load i64, ptr %memberidx3.i.i.i, align 4
  %81 = load ptr, ptr %79, align 8
  %82 = getelementptr inbounds ptr, ptr %81, i64 %80
  %83 = load ptr, ptr %82, align 8
  %84 = load i64, ptr %40, align 4
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i50 = getelementptr inbounds %Class, ptr %83, i64 0, i32 5
  %86 = load ptr, ptr %memberidx1.i50, align 8
  %memberidx2.i51 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %87 = load i64, ptr %memberidx2.i51, align 4
  %88 = load ptr, ptr %86, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %90, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %83, i64 0, i32 4
  %91 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %92 = load i64, ptr %memberidx5.i, align 4
  %93 = load ptr, ptr %91, align 8
  %94 = getelementptr inbounds ptr, ptr %93, i64 %92
  %95 = load ptr, ptr %94, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %95, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i49 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx6 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i49, i64 0, i32 1
  %96 = load ptr, ptr %memberidx6, align 8
  %97 = load ptr, ptr %96, align 8
  %98 = load ptr, ptr %97, align 8
  %memberidx7 = getelementptr inbounds %ExpressionIndexNode, ptr %2, i64 0, i32 4
  %99 = load ptr, ptr %memberidx7, align 8
  %100 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %98, ptr %99)
  %memberidx.i52 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %101 = load ptr, ptr %memberidx.i52, align 8
  %memberidx1.i53 = getelementptr inbounds %Compiler, ptr %101, i64 0, i32 5
  %102 = load ptr, ptr %memberidx1.i53, align 8
  %memberidx2.i54 = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 1
  %103 = load i64, ptr %memberidx2.i54, align 4
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %common.ret, label %ifend10

ifend10:                                          ; preds = %get_class_prop_type.exit
  %memberidx11 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 3
  %105 = load ptr, ptr %memberidx11, align 8
  %106 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %98, ptr %105)
  br i1 %106, label %ifend14, label %if.entry12

if.entry12:                                       ; preds = %ifend10
  %107 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %98)
  %memberidx.i55 = getelementptr inbounds %String, ptr %107, i64 0, i32 1
  %108 = load i64, ptr %memberidx.i55, align 4
  %109 = trunc i64 %108 to i32
  %110 = add i32 %109, 1
  %111 = tail call ptr @malloc(i32 %110)
  %112 = load ptr, ptr %107, align 8
  %113 = load i64, ptr %memberidx.i55, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %111, ptr align 8 %112, i64 %113, i1 false)
  %114 = getelementptr inbounds i8, ptr %111, i64 %113
  store i8 0, ptr %114, align 1
  %115 = load ptr, ptr %memberidx11, align 8
  %116 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %115)
  %memberidx.i56 = getelementptr inbounds %String, ptr %116, i64 0, i32 1
  %117 = load i64, ptr %memberidx.i56, align 4
  %118 = trunc i64 %117 to i32
  %119 = add i32 %118, 1
  %120 = tail call ptr @malloc(i32 %119)
  %121 = load ptr, ptr %116, align 8
  %122 = load i64, ptr %memberidx.i56, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %120, ptr align 8 %121, i64 %122, i1 false)
  %123 = getelementptr inbounds i8, ptr %120, i64 %122
  store i8 0, ptr %123, align 1
  %124 = alloca ptr, align 8
  %125 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %124, ptr nonnull @177, ptr %111, ptr %120)
  %126 = load ptr, ptr %124, align 8
  %127 = tail call ptr @malloc(i32 24)
  store ptr %126, ptr %127, align 8
  %memberidx1.i57 = getelementptr inbounds %String, ptr %127, i64 0, i32 1
  store i64 %125, ptr %memberidx1.i57, align 4
  %memberidx2.i58 = getelementptr inbounds %String, ptr %127, i64 0, i32 2
  store i64 %125, ptr %memberidx2.i58, align 4
  tail call void @free(ptr %111)
  tail call void @free(ptr %120)
  %128 = load ptr, ptr %memberidx7, align 8
  %129 = load ptr, ptr %128, align 8
  %130 = load ptr, ptr %memberidx.i52, align 8
  %memberidx1.i60 = getelementptr inbounds %Compiler, ptr %130, i64 0, i32 5
  %131 = load ptr, ptr %memberidx1.i60, align 8
  %132 = call ptr @malloc(i32 24)
  store i64 5, ptr %132, align 4
  %memberidx1.i.i61 = getelementptr inbounds %FloError, ptr %132, i64 0, i32 2
  store ptr %129, ptr %memberidx1.i.i61, align 8
  %memberidx2.i.i62 = getelementptr inbounds %FloError, ptr %132, i64 0, i32 1
  store ptr %127, ptr %memberidx2.i.i62, align 8
  %memberidx.i.i63 = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 1
  %133 = load i64, ptr %memberidx.i.i63, align 4
  %134 = add i64 %133, 1
  %memberidx.i.i.i64 = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 2
  %135 = load i64, ptr %memberidx.i.i.i64, align 4
  %136 = icmp slt i64 %135, %134
  %.pre98 = load ptr, ptr %131, align 8
  br i1 %136, label %while.body.i.i.i66, label %TypeChecker_error.exit67

while.body.i.i.i66:                               ; preds = %if.entry12, %while.body.i.i.i66
  %137 = phi ptr [ %141, %while.body.i.i.i66 ], [ %.pre98, %if.entry12 ]
  %138 = phi i64 [ %142, %while.body.i.i.i66 ], [ %135, %if.entry12 ]
  %139 = shl nuw i64 %138, 1
  store i64 %139, ptr %memberidx.i.i.i64, align 4
  %140 = shl i64 %138, 4
  %141 = call ptr @realloc(ptr %137, i64 %140)
  store ptr %141, ptr %131, align 8
  %142 = load i64, ptr %memberidx.i.i.i64, align 4
  %143 = icmp slt i64 %142, %134
  br i1 %143, label %while.body.i.i.i66, label %TypeChecker_error.exit67.loopexit

TypeChecker_error.exit67.loopexit:                ; preds = %while.body.i.i.i66
  %.pre99 = load i64, ptr %memberidx.i.i63, align 4
  %.pre107 = add nsw i64 %.pre99, 1
  br label %TypeChecker_error.exit67

TypeChecker_error.exit67:                         ; preds = %if.entry12, %TypeChecker_error.exit67.loopexit
  %.pre-phi108 = phi i64 [ %.pre107, %TypeChecker_error.exit67.loopexit ], [ %134, %if.entry12 ]
  %144 = phi ptr [ %141, %TypeChecker_error.exit67.loopexit ], [ %.pre98, %if.entry12 ]
  %145 = phi i64 [ %.pre99, %TypeChecker_error.exit67.loopexit ], [ %133, %if.entry12 ]
  store i64 %.pre-phi108, ptr %memberidx.i.i63, align 4
  %146 = getelementptr inbounds ptr, ptr %144, i64 %145
  store ptr %132, ptr %146, align 8
  br label %common.ret

ifend14:                                          ; preds = %ifend10
  %147 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %147, align 4
  %memberidx.i.i68 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i68, align 4
  %memberidx1.i.i69 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i69, align 1
  %memberidx.i70 = getelementptr inbounds %MemberExpression, ptr %147, i64 0, i32 4
  store ptr %1, ptr %memberidx.i70, align 8
  %memberidx1.i71 = getelementptr inbounds %MemberExpression, ptr %147, i64 0, i32 5
  store ptr %40, ptr %memberidx1.i71, align 8
  %memberidx2.i72 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 3
  store ptr %common.ret.op.i49, ptr %memberidx2.i72, align 8
  %148 = tail call ptr @malloc(i32 41)
  %149 = tail call ptr @malloc(i32 24)
  %memberidx.i73 = getelementptr inbounds %Array_Expression_, ptr %149, i64 0, i32 1
  store i64 0, ptr %memberidx.i73, align 4
  %memberidx1.i74 = getelementptr inbounds %Array_Expression_, ptr %149, i64 0, i32 2
  store i64 8, ptr %memberidx1.i74, align 4
  %150 = tail call ptr @malloc(i32 64)
  store ptr %150, ptr %149, align 8
  store ptr %100, ptr %150, align 8
  store i64 1, ptr %memberidx.i73, align 4
  %memberidx20 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i49, i64 0, i32 2
  %151 = load ptr, ptr %memberidx20, align 8
  store i64 8, ptr %148, align 4
  %memberidx.i.i75 = getelementptr inbounds %Expression, ptr %148, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i75, align 4
  %memberidx1.i.i76 = getelementptr inbounds %Expression, ptr %148, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i76, align 1
  %memberidx.i77 = getelementptr inbounds %CallExpression, ptr %148, i64 0, i32 4
  store ptr %147, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %CallExpression, ptr %148, i64 0, i32 5
  store ptr %149, ptr %memberidx1.i78, align 8
  %memberidx2.i79 = getelementptr inbounds %Expression, ptr %148, i64 0, i32 3
  store ptr %151, ptr %memberidx2.i79, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_tuple_index_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca %IntType, align 8
  store i64 6, ptr %4, align 8
  %memberidx.i = getelementptr inbounds %IntType, ptr %4, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 8
  %memberidx = getelementptr inbounds %ExpressionIndexNode, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx, align 8
  %6 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %4, ptr %5)
  %memberidx1 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load i64, ptr %7, align 4
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %ifend, label %if.entry

common.ret:                                       ; preds = %ifend24, %TypeChecker_error.exit86, %TypeChecker_error.exit74, %TypeChecker_error.exit63, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit63 ], [ null, %TypeChecker_error.exit74 ], [ null, %TypeChecker_error.exit86 ], [ %128, %ifend24 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %11 = call ptr @malloc(i32 34)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(34) %11, ptr noundef nonnull align 8 dereferenceable(34) @208, i64 34, i1 false)
  %12 = call ptr @malloc(i32 24)
  store ptr %11, ptr %12, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  store i64 34, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %12, i64 0, i32 2
  store i64 34, ptr %memberidx2.i.i, align 4
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load ptr, ptr %13, align 8
  %memberidx.i50 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %15 = load ptr, ptr %memberidx.i50, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx1.i, align 8
  %17 = call ptr @malloc(i32 24)
  store i64 5, ptr %17, align 4
  %memberidx1.i.i51 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 2
  store ptr %14, ptr %memberidx1.i.i51, align 8
  %memberidx2.i.i52 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 1
  store ptr %12, ptr %memberidx2.i.i52, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i.i, align 4
  %19 = add i64 %18, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i.i, align 4
  %21 = icmp slt i64 %20, %19
  %.pre = load ptr, ptr %16, align 8
  br i1 %21, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %22 = phi ptr [ %26, %while.body.i.i.i ], [ %.pre, %if.entry ]
  %23 = phi i64 [ %27, %while.body.i.i.i ], [ %20, %if.entry ]
  %24 = shl nuw i64 %23, 1
  store i64 %24, ptr %memberidx.i.i.i, align 4
  %25 = shl i64 %23, 4
  %26 = call ptr @realloc(ptr %22, i64 %25)
  store ptr %26, ptr %16, align 8
  %27 = load i64, ptr %memberidx.i.i.i, align 4
  %28 = icmp slt i64 %27, %19
  br i1 %28, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre101 = load i64, ptr %memberidx.i.i, align 4
  %.pre117 = add nsw i64 %.pre101, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi118 = phi i64 [ %.pre117, %TypeChecker_error.exit.loopexit ], [ %19, %if.entry ]
  %29 = phi ptr [ %26, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %30 = phi i64 [ %.pre101, %TypeChecker_error.exit.loopexit ], [ %18, %if.entry ]
  store i64 %.pre-phi118, ptr %memberidx.i.i, align 4
  %31 = getelementptr inbounds ptr, ptr %29, i64 %30
  store ptr %17, ptr %31, align 8
  br label %common.ret

ifend:                                            ; preds = %3
  %memberidx5 = getelementptr inbounds %IntType, ptr %7, i64 0, i32 1
  %32 = load i1, ptr %memberidx5, align 1
  br i1 %32, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend
  %33 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %7)
  %memberidx.i53 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i53, align 4
  %35 = trunc i64 %34 to i32
  %36 = add i32 %35, 1
  %37 = call ptr @malloc(i32 %36)
  %38 = load ptr, ptr %33, align 8
  %39 = load i64, ptr %memberidx.i53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %38, i64 %39, i1 false)
  %40 = getelementptr inbounds i8, ptr %37, i64 %39
  store i8 0, ptr %40, align 1
  %41 = alloca ptr, align 8
  %42 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %41, ptr nonnull @209, ptr %37)
  %43 = load ptr, ptr %41, align 8
  %44 = tail call ptr @malloc(i32 24)
  store ptr %43, ptr %44, align 8
  %memberidx1.i54 = getelementptr inbounds %String, ptr %44, i64 0, i32 1
  store i64 %42, ptr %memberidx1.i54, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %44, i64 0, i32 2
  store i64 %42, ptr %memberidx2.i, align 4
  tail call void @free(ptr %37)
  %45 = load ptr, ptr %memberidx, align 8
  %46 = load ptr, ptr %45, align 8
  %memberidx.i55 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %47 = load ptr, ptr %memberidx.i55, align 8
  %memberidx1.i56 = getelementptr inbounds %Compiler, ptr %47, i64 0, i32 5
  %48 = load ptr, ptr %memberidx1.i56, align 8
  %49 = call ptr @malloc(i32 24)
  store i64 5, ptr %49, align 4
  %memberidx1.i.i57 = getelementptr inbounds %FloError, ptr %49, i64 0, i32 2
  store ptr %46, ptr %memberidx1.i.i57, align 8
  %memberidx2.i.i58 = getelementptr inbounds %FloError, ptr %49, i64 0, i32 1
  store ptr %44, ptr %memberidx2.i.i58, align 8
  %memberidx.i.i59 = getelementptr inbounds %Array_FloError_, ptr %48, i64 0, i32 1
  %50 = load i64, ptr %memberidx.i.i59, align 4
  %51 = add i64 %50, 1
  %memberidx.i.i.i60 = getelementptr inbounds %Array_FloError_, ptr %48, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i.i.i60, align 4
  %53 = icmp slt i64 %52, %51
  %.pre109 = load ptr, ptr %48, align 8
  br i1 %53, label %while.body.i.i.i62, label %TypeChecker_error.exit63

while.body.i.i.i62:                               ; preds = %if.entry6, %while.body.i.i.i62
  %54 = phi ptr [ %58, %while.body.i.i.i62 ], [ %.pre109, %if.entry6 ]
  %55 = phi i64 [ %59, %while.body.i.i.i62 ], [ %52, %if.entry6 ]
  %56 = shl nuw i64 %55, 1
  store i64 %56, ptr %memberidx.i.i.i60, align 4
  %57 = shl i64 %55, 4
  %58 = call ptr @realloc(ptr %54, i64 %57)
  store ptr %58, ptr %48, align 8
  %59 = load i64, ptr %memberidx.i.i.i60, align 4
  %60 = icmp slt i64 %59, %51
  br i1 %60, label %while.body.i.i.i62, label %TypeChecker_error.exit63.loopexit

TypeChecker_error.exit63.loopexit:                ; preds = %while.body.i.i.i62
  %.pre110 = load i64, ptr %memberidx.i.i59, align 4
  %.pre112 = add nsw i64 %.pre110, 1
  br label %TypeChecker_error.exit63

TypeChecker_error.exit63:                         ; preds = %if.entry6, %TypeChecker_error.exit63.loopexit
  %.pre-phi = phi i64 [ %.pre112, %TypeChecker_error.exit63.loopexit ], [ %51, %if.entry6 ]
  %61 = phi ptr [ %58, %TypeChecker_error.exit63.loopexit ], [ %.pre109, %if.entry6 ]
  %62 = phi i64 [ %.pre110, %TypeChecker_error.exit63.loopexit ], [ %50, %if.entry6 ]
  store i64 %.pre-phi, ptr %memberidx.i.i59, align 4
  %63 = getelementptr inbounds ptr, ptr %61, i64 %62
  store ptr %49, ptr %63, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend
  %memberidx12 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %64 = load i1, ptr %memberidx12, align 1
  br i1 %64, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend8
  %65 = call ptr @malloc(i32 40)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %65, ptr noundef nonnull align 8 dereferenceable(40) @210, i64 40, i1 false)
  %66 = call ptr @malloc(i32 24)
  store ptr %65, ptr %66, align 8
  %memberidx1.i.i64 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  store i64 40, ptr %memberidx1.i.i64, align 4
  %memberidx2.i.i65 = getelementptr inbounds %String, ptr %66, i64 0, i32 2
  store i64 40, ptr %memberidx2.i.i65, align 4
  %67 = load ptr, ptr %memberidx, align 8
  %68 = load ptr, ptr %67, align 8
  %memberidx.i66 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %69 = load ptr, ptr %memberidx.i66, align 8
  %memberidx1.i67 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 5
  %70 = load ptr, ptr %memberidx1.i67, align 8
  %71 = call ptr @malloc(i32 24)
  store i64 5, ptr %71, align 4
  %memberidx1.i.i68 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 2
  store ptr %68, ptr %memberidx1.i.i68, align 8
  %memberidx2.i.i69 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 1
  store ptr %66, ptr %memberidx2.i.i69, align 8
  %memberidx.i.i70 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i.i70, align 4
  %73 = add i64 %72, 1
  %memberidx.i.i.i71 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i.i71, align 4
  %75 = icmp slt i64 %74, %73
  %.pre103 = load ptr, ptr %70, align 8
  br i1 %75, label %while.body.i.i.i73, label %TypeChecker_error.exit74

while.body.i.i.i73:                               ; preds = %if.entry13, %while.body.i.i.i73
  %76 = phi ptr [ %80, %while.body.i.i.i73 ], [ %.pre103, %if.entry13 ]
  %77 = phi i64 [ %81, %while.body.i.i.i73 ], [ %74, %if.entry13 ]
  %78 = shl nuw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i.i71, align 4
  %79 = shl i64 %77, 4
  %80 = call ptr @realloc(ptr %76, i64 %79)
  store ptr %80, ptr %70, align 8
  %81 = load i64, ptr %memberidx.i.i.i71, align 4
  %82 = icmp slt i64 %81, %73
  br i1 %82, label %while.body.i.i.i73, label %TypeChecker_error.exit74.loopexit

TypeChecker_error.exit74.loopexit:                ; preds = %while.body.i.i.i73
  %.pre104 = load i64, ptr %memberidx.i.i70, align 4
  %.pre115 = add nsw i64 %.pre104, 1
  br label %TypeChecker_error.exit74

TypeChecker_error.exit74:                         ; preds = %if.entry13, %TypeChecker_error.exit74.loopexit
  %.pre-phi116 = phi i64 [ %.pre115, %TypeChecker_error.exit74.loopexit ], [ %73, %if.entry13 ]
  %83 = phi ptr [ %80, %TypeChecker_error.exit74.loopexit ], [ %.pre103, %if.entry13 ]
  %84 = phi i64 [ %.pre104, %TypeChecker_error.exit74.loopexit ], [ %72, %if.entry13 ]
  store i64 %.pre-phi116, ptr %memberidx.i.i70, align 4
  %85 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %71, ptr %85, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend8
  %86 = load ptr, ptr %0, align 8
  %87 = call fastcc i64 @evaluate_const_int_expression(ptr %86, ptr nonnull %6)
  %memberidx19 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %88 = load ptr, ptr %memberidx19, align 8
  %89 = icmp slt i64 %87, 0
  %memberidx20 = getelementptr inbounds %TupleType, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %memberidx20, align 8
  %memberidx21 = getelementptr inbounds %Array_Type_, ptr %90, i64 0, i32 1
  %91 = load i64, ptr %memberidx21, align 4
  %92 = icmp sge i64 %87, %91
  %93 = or i1 %89, %92
  br i1 %93, label %if.entry22, label %ifend24

if.entry22:                                       ; preds = %ifend15
  %94 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %88)
  %memberidx.i75 = getelementptr inbounds %String, ptr %94, i64 0, i32 1
  %95 = load i64, ptr %memberidx.i75, align 4
  %96 = trunc i64 %95 to i32
  %97 = add i32 %96, 1
  %98 = call ptr @malloc(i32 %97)
  %99 = load ptr, ptr %94, align 8
  %100 = load i64, ptr %memberidx.i75, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %98, ptr align 8 %99, i64 %100, i1 false)
  %101 = getelementptr inbounds i8, ptr %98, i64 %100
  store i8 0, ptr %101, align 1
  %102 = alloca ptr, align 8
  %103 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %102, ptr nonnull @211, ptr %98)
  %104 = load ptr, ptr %102, align 8
  %105 = tail call ptr @malloc(i32 24)
  store ptr %104, ptr %105, align 8
  %memberidx1.i76 = getelementptr inbounds %String, ptr %105, i64 0, i32 1
  store i64 %103, ptr %memberidx1.i76, align 4
  %memberidx2.i77 = getelementptr inbounds %String, ptr %105, i64 0, i32 2
  store i64 %103, ptr %memberidx2.i77, align 4
  tail call void @free(ptr %98)
  %106 = load ptr, ptr %memberidx, align 8
  %107 = load ptr, ptr %106, align 8
  %memberidx.i78 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %108 = load ptr, ptr %memberidx.i78, align 8
  %memberidx1.i79 = getelementptr inbounds %Compiler, ptr %108, i64 0, i32 5
  %109 = load ptr, ptr %memberidx1.i79, align 8
  %110 = call ptr @malloc(i32 24)
  store i64 5, ptr %110, align 4
  %memberidx1.i.i80 = getelementptr inbounds %FloError, ptr %110, i64 0, i32 2
  store ptr %107, ptr %memberidx1.i.i80, align 8
  %memberidx2.i.i81 = getelementptr inbounds %FloError, ptr %110, i64 0, i32 1
  store ptr %105, ptr %memberidx2.i.i81, align 8
  %memberidx.i.i82 = getelementptr inbounds %Array_FloError_, ptr %109, i64 0, i32 1
  %111 = load i64, ptr %memberidx.i.i82, align 4
  %112 = add i64 %111, 1
  %memberidx.i.i.i83 = getelementptr inbounds %Array_FloError_, ptr %109, i64 0, i32 2
  %113 = load i64, ptr %memberidx.i.i.i83, align 4
  %114 = icmp slt i64 %113, %112
  %.pre106 = load ptr, ptr %109, align 8
  br i1 %114, label %while.body.i.i.i85, label %TypeChecker_error.exit86

while.body.i.i.i85:                               ; preds = %if.entry22, %while.body.i.i.i85
  %115 = phi ptr [ %119, %while.body.i.i.i85 ], [ %.pre106, %if.entry22 ]
  %116 = phi i64 [ %120, %while.body.i.i.i85 ], [ %113, %if.entry22 ]
  %117 = shl nuw i64 %116, 1
  store i64 %117, ptr %memberidx.i.i.i83, align 4
  %118 = shl i64 %116, 4
  %119 = call ptr @realloc(ptr %115, i64 %118)
  store ptr %119, ptr %109, align 8
  %120 = load i64, ptr %memberidx.i.i.i83, align 4
  %121 = icmp slt i64 %120, %112
  br i1 %121, label %while.body.i.i.i85, label %TypeChecker_error.exit86.loopexit

TypeChecker_error.exit86.loopexit:                ; preds = %while.body.i.i.i85
  %.pre107 = load i64, ptr %memberidx.i.i82, align 4
  %.pre113 = add nsw i64 %.pre107, 1
  br label %TypeChecker_error.exit86

TypeChecker_error.exit86:                         ; preds = %if.entry22, %TypeChecker_error.exit86.loopexit
  %.pre-phi114 = phi i64 [ %.pre113, %TypeChecker_error.exit86.loopexit ], [ %112, %if.entry22 ]
  %122 = phi ptr [ %119, %TypeChecker_error.exit86.loopexit ], [ %.pre106, %if.entry22 ]
  %123 = phi i64 [ %.pre107, %TypeChecker_error.exit86.loopexit ], [ %111, %if.entry22 ]
  store i64 %.pre-phi114, ptr %memberidx.i.i82, align 4
  %124 = getelementptr inbounds ptr, ptr %122, i64 %123
  store ptr %110, ptr %124, align 8
  br label %common.ret

ifend24:                                          ; preds = %ifend15
  %125 = load ptr, ptr %90, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %87
  %127 = load ptr, ptr %126, align 8
  tail call void @free(ptr nonnull %6)
  %128 = tail call ptr @malloc(i32 41)
  %129 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %129, align 4
  %memberidx.i.i87 = getelementptr inbounds %Expression, ptr %129, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i87, align 4
  %memberidx1.i.i88 = getelementptr inbounds %Expression, ptr %129, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i88, align 1
  %memberidx.i89 = getelementptr inbounds %Expression, ptr %129, i64 0, i32 3
  %130 = call ptr @malloc(i32 9)
  store i64 6, ptr %130, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %130, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  store ptr %130, ptr %memberidx.i89, align 8
  %memberidx1.i90 = getelementptr inbounds %IntExpression, ptr %129, i64 0, i32 4
  store i64 %87, ptr %memberidx1.i90, align 4
  store i1 true, ptr %memberidx1.i.i88, align 1
  store i64 8, ptr %128, align 4
  %memberidx.i.i92 = getelementptr inbounds %Expression, ptr %128, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i92, align 4
  %memberidx1.i.i93 = getelementptr inbounds %Expression, ptr %128, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i93, align 1
  %memberidx.i94 = getelementptr inbounds %IndexExpression, ptr %128, i64 0, i32 4
  store ptr %1, ptr %memberidx.i94, align 8
  %memberidx1.i95 = getelementptr inbounds %IndexExpression, ptr %128, i64 0, i32 5
  store ptr %129, ptr %memberidx1.i95, align 8
  %memberidx2.i96 = getelementptr inbounds %Expression, ptr %128, i64 0, i32 3
  store ptr %127, ptr %memberidx2.i96, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend9, %2, %TypeChecker_error.exit79, %ifend24, %TypeChecker_error.exit, %if.entry7, %if.entry2
  %common.ret.op = phi ptr [ %17, %if.entry2 ], [ %19, %if.entry7 ], [ null, %TypeChecker_error.exit ], [ %55, %ifend24 ], [ null, %TypeChecker_error.exit79 ], [ null, %2 ], [ null, %ifend9 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = load i64, ptr %10, align 4
  %12 = icmp eq i64 %11, 20
  br i1 %12, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %13, %if.entry.i ], [ %10, %ifend ]
  %memberidx1.i82 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %13 = load ptr, ptr %memberidx1.i82, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend
  %.lcssa.i = phi i64 [ %11, %ifend ], [ %14, %if.entry.i ]
  %16 = icmp eq i64 %.lcssa.i, 11
  br i1 %16, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit
  %17 = tail call fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %5, ptr %1)
  br label %common.ret

ifend4:                                           ; preds = %is_object.exit
  %18 = icmp eq i64 %11, 15
  br i1 %18, label %if.entry7, label %ifend9

if.entry7:                                        ; preds = %ifend4
  %19 = tail call fastcc ptr @TypeChecker_check_tuple_index_expr(ptr %0, ptr %5, ptr %1)
  br label %common.ret

ifend9:                                           ; preds = %ifend4
  %20 = alloca %IntType, align 8
  store i64 6, ptr %20, align 8
  %memberidx.i55 = getelementptr inbounds %IntType, ptr %20, i64 0, i32 1
  store i1 false, ptr %memberidx.i55, align 8
  %memberidx10 = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 4
  %21 = load ptr, ptr %memberidx10, align 8
  %22 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %20, ptr %21)
  %23 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i57 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx1.i57, align 8
  %memberidx2.i58 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx2.i58, align 4
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend9
  %memberidx14 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 3
  %27 = load ptr, ptr %memberidx14, align 8
  %28 = load i64, ptr %27, align 4
  %29 = add i64 %28, -1
  %30 = icmp ult i64 %29, 7
  br i1 %30, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %31 = call ptr @malloc(i32 34)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(34) %31, ptr noundef nonnull align 8 dereferenceable(34) @208, i64 34, i1 false)
  %32 = call ptr @malloc(i32 24)
  store ptr %31, ptr %32, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  store i64 34, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 2
  store i64 34, ptr %memberidx2.i.i, align 4
  %33 = load ptr, ptr %memberidx10, align 8
  %34 = load ptr, ptr %33, align 8
  %35 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i60 = getelementptr inbounds %Compiler, ptr %35, i64 0, i32 5
  %36 = load ptr, ptr %memberidx1.i60, align 8
  %37 = call ptr @malloc(i32 24)
  store i64 5, ptr %37, align 4
  %memberidx1.i.i61 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 2
  store ptr %34, ptr %memberidx1.i.i61, align 8
  %memberidx2.i.i62 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 1
  store ptr %32, ptr %memberidx2.i.i62, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i.i, align 4
  %39 = add i64 %38, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 2
  %40 = load i64, ptr %memberidx.i.i.i, align 4
  %41 = icmp slt i64 %40, %39
  %.pre = load ptr, ptr %36, align 8
  br i1 %41, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry15, %while.body.i.i.i
  %42 = phi ptr [ %46, %while.body.i.i.i ], [ %.pre, %if.entry15 ]
  %43 = phi i64 [ %47, %while.body.i.i.i ], [ %40, %if.entry15 ]
  %44 = shl nuw i64 %43, 1
  store i64 %44, ptr %memberidx.i.i.i, align 4
  %45 = shl i64 %43, 4
  %46 = call ptr @realloc(ptr %42, i64 %45)
  store ptr %46, ptr %36, align 8
  %47 = load i64, ptr %memberidx.i.i.i, align 4
  %48 = icmp slt i64 %47, %39
  br i1 %48, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre83 = load i64, ptr %memberidx.i.i, align 4
  %.pre89 = add nsw i64 %.pre83, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry15, %TypeChecker_error.exit.loopexit
  %.pre-phi90 = phi i64 [ %.pre89, %TypeChecker_error.exit.loopexit ], [ %39, %if.entry15 ]
  %49 = phi ptr [ %46, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry15 ]
  %50 = phi i64 [ %.pre83, %TypeChecker_error.exit.loopexit ], [ %38, %if.entry15 ]
  store i64 %.pre-phi90, ptr %memberidx.i.i, align 4
  %51 = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %37, ptr %51, align 8
  br label %common.ret

ifend17:                                          ; preds = %ifend13
  %52 = call ptr @malloc(i32 8)
  store i64 21, ptr %52, align 4
  %53 = load ptr, ptr %memberidx1, align 8
  %54 = load i64, ptr %53, align 4
  switch i64 %54, label %else28 [
    i64 13, label %if.entry22
    i64 14, label %if.entry27
  ]

if.entry22:                                       ; preds = %ifend17
  %memberidx25 = getelementptr inbounds %PointerType, ptr %53, i64 0, i32 1
  br label %ifend24

ifend24:                                          ; preds = %if.entry27, %if.entry22
  %value_type.0.in = phi ptr [ %memberidx25, %if.entry22 ], [ %memberidx30, %if.entry27 ]
  %value_type.0 = load ptr, ptr %value_type.0.in, align 8
  %55 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %55, align 4
  %memberidx.i.i63 = getelementptr inbounds %Expression, ptr %55, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i63, align 4
  %memberidx1.i.i64 = getelementptr inbounds %Expression, ptr %55, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i64, align 1
  %memberidx.i65 = getelementptr inbounds %IndexExpression, ptr %55, i64 0, i32 4
  store ptr %5, ptr %memberidx.i65, align 8
  %memberidx1.i66 = getelementptr inbounds %IndexExpression, ptr %55, i64 0, i32 5
  store ptr %22, ptr %memberidx1.i66, align 8
  %memberidx2.i67 = getelementptr inbounds %Expression, ptr %55, i64 0, i32 3
  store ptr %value_type.0, ptr %memberidx2.i67, align 8
  br label %common.ret

if.entry27:                                       ; preds = %ifend17
  %memberidx30 = getelementptr inbounds %ArrayType, ptr %53, i64 0, i32 1
  br label %ifend24

else28:                                           ; preds = %ifend17
  %56 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %53)
  %memberidx.i68 = getelementptr inbounds %String, ptr %56, i64 0, i32 1
  %57 = load i64, ptr %memberidx.i68, align 4
  %58 = trunc i64 %57 to i32
  %59 = add i32 %58, 1
  %60 = call ptr @malloc(i32 %59)
  %61 = load ptr, ptr %56, align 8
  %62 = load i64, ptr %memberidx.i68, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %60, ptr align 8 %61, i64 %62, i1 false)
  %63 = getelementptr inbounds i8, ptr %60, i64 %62
  store i8 0, ptr %63, align 1
  %64 = alloca ptr, align 8
  %65 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %64, ptr nonnull @212, ptr %60)
  %66 = load ptr, ptr %64, align 8
  %67 = tail call ptr @malloc(i32 24)
  store ptr %66, ptr %67, align 8
  %memberidx1.i69 = getelementptr inbounds %String, ptr %67, i64 0, i32 1
  store i64 %65, ptr %memberidx1.i69, align 4
  %memberidx2.i70 = getelementptr inbounds %String, ptr %67, i64 0, i32 2
  store i64 %65, ptr %memberidx2.i70, align 4
  tail call void @free(ptr %60)
  %68 = load ptr, ptr %1, align 8
  %69 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i72 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 5
  %70 = load ptr, ptr %memberidx1.i72, align 8
  %71 = call ptr @malloc(i32 24)
  store i64 5, ptr %71, align 4
  %memberidx1.i.i73 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 2
  store ptr %68, ptr %memberidx1.i.i73, align 8
  %memberidx2.i.i74 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 1
  store ptr %67, ptr %memberidx2.i.i74, align 8
  %memberidx.i.i75 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i.i75, align 4
  %73 = add i64 %72, 1
  %memberidx.i.i.i76 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i.i76, align 4
  %75 = icmp slt i64 %74, %73
  %.pre85 = load ptr, ptr %70, align 8
  br i1 %75, label %while.body.i.i.i78, label %TypeChecker_error.exit79

while.body.i.i.i78:                               ; preds = %else28, %while.body.i.i.i78
  %76 = phi ptr [ %80, %while.body.i.i.i78 ], [ %.pre85, %else28 ]
  %77 = phi i64 [ %81, %while.body.i.i.i78 ], [ %74, %else28 ]
  %78 = shl nuw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i.i76, align 4
  %79 = shl i64 %77, 4
  %80 = call ptr @realloc(ptr %76, i64 %79)
  store ptr %80, ptr %70, align 8
  %81 = load i64, ptr %memberidx.i.i.i76, align 4
  %82 = icmp slt i64 %81, %73
  br i1 %82, label %while.body.i.i.i78, label %TypeChecker_error.exit79.loopexit

TypeChecker_error.exit79.loopexit:                ; preds = %while.body.i.i.i78
  %.pre86 = load i64, ptr %memberidx.i.i75, align 4
  %.pre88 = add nsw i64 %.pre86, 1
  br label %TypeChecker_error.exit79

TypeChecker_error.exit79:                         ; preds = %else28, %TypeChecker_error.exit79.loopexit
  %.pre-phi = phi i64 [ %.pre88, %TypeChecker_error.exit79.loopexit ], [ %73, %else28 ]
  %83 = phi ptr [ %80, %TypeChecker_error.exit79.loopexit ], [ %.pre85, %else28 ]
  %84 = phi i64 [ %.pre86, %TypeChecker_error.exit79.loopexit ], [ %72, %else28 ]
  store i64 %.pre-phi, ptr %memberidx.i.i75, align 4
  %85 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %71, ptr %85, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_block(ptr %0, ptr nocapture readonly %1, ptr readonly %2, i1 %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 19)
  %6 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_Statement_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Statement_, ptr %6, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %6, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %6, ptr %5, align 8
  %memberidx3.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 1
  %memberidx4.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 2
  %memberidx5.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 3
  %memberidx6.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 4
  %.not = icmp eq ptr %2, null
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(11) %memberidx3.i, i8 0, i64 11, i1 false)
  br i1 %.not, label %false_block, label %end

false_block:                                      ; preds = %4
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %memberidx.i, align 8
  %9 = load i64, ptr %8, align 4
  %10 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %9)
  %memberidx2.i73 = getelementptr inbounds %Scope, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx.i, align 8
  store ptr %11, ptr %memberidx2.i73, align 8
  %12 = load ptr, ptr %0, align 8
  %13 = load ptr, ptr %memberidx.i, align 8
  %14 = load ptr, ptr %12, align 8
  %15 = load i64, ptr %13, align 4
  %16 = load ptr, ptr %14, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %18, i64 0, i32 7
  %19 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %13, i64 0, i32 1
  %20 = load i64, ptr %memberidx3.i.i.i, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx4.i75 = getelementptr inbounds %Scope, ptr %23, i64 0, i32 7
  %24 = load ptr, ptr %memberidx4.i75, align 8
  %25 = load ptr, ptr %10, align 8
  %memberidx.i.i76 = getelementptr inbounds %Array_ScopeId_, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i.i76, align 4
  %27 = add i64 %26, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_ScopeId_, ptr %24, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i.i, align 4
  %29 = icmp slt i64 %28, %27
  %.pre = load ptr, ptr %24, align 8
  br i1 %29, label %while.body.i.i.i, label %TypeChecker_create_child_scope_within_current_scope.exit

while.body.i.i.i:                                 ; preds = %false_block, %while.body.i.i.i
  %30 = phi ptr [ %34, %while.body.i.i.i ], [ %.pre, %false_block ]
  %31 = phi i64 [ %35, %while.body.i.i.i ], [ %28, %false_block ]
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx.i.i.i, align 4
  %33 = shl i64 %31, 4
  %34 = tail call ptr @realloc(ptr %30, i64 %33)
  store ptr %34, ptr %24, align 8
  %35 = load i64, ptr %memberidx.i.i.i, align 4
  %36 = icmp slt i64 %35, %27
  br i1 %36, label %while.body.i.i.i, label %TypeChecker_create_child_scope_within_current_scope.exit.loopexit

TypeChecker_create_child_scope_within_current_scope.exit.loopexit: ; preds = %while.body.i.i.i
  %.pre188 = load i64, ptr %memberidx.i.i76, align 4
  %.pre222 = add nsw i64 %.pre188, 1
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %false_block, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit
  %.pre-phi = phi i64 [ %.pre222, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %27, %false_block ]
  %37 = phi ptr [ %34, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %.pre, %false_block ]
  %38 = phi i64 [ %.pre188, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %26, %false_block ]
  store i64 %.pre-phi, ptr %memberidx.i.i76, align 4
  %39 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %25, ptr %39, align 8
  br label %end

end:                                              ; preds = %4, %TypeChecker_create_child_scope_within_current_scope.exit
  %ternary = phi ptr [ %10, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %2, %4 ]
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %40 = load ptr, ptr %ternary, align 8
  store ptr %40, ptr %memberidx, align 8
  %memberidx2 = getelementptr inbounds %BlockNode, ptr %1, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2, align 8
  %42 = tail call ptr @malloc(i32 25)
  %43 = load ptr, ptr %41, align 8
  %memberidx1.i = getelementptr inbounds %Array_StatementNode_, ptr %41, i64 0, i32 1
  %44 = load i64, ptr %memberidx1.i, align 4
  %memberidx1.i.i77 = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %42, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %42, i64 0, i32 3
  store ptr %43, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %42, i64 0, i32 2
  store i64 %44, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i77, align 4
  %45 = load ptr, ptr %43, align 8
  %46 = icmp slt i64 %44, 1
  store i1 %46, ptr %42, align 1
  br i1 %46, label %for.end.thread238, label %for.body.lr.ph

for.end.thread238:                                ; preds = %end
  tail call void @free(ptr nonnull %42)
  br label %ifend38

for.body.lr.ph:                                   ; preds = %end
  %memberidx.i58.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %memberidx.i.i62.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.next.backedge
  %47 = phi i64 [ 1, %for.body.lr.ph ], [ %379, %for.next.backedge ]
  %48 = phi ptr [ %45, %for.body.lr.ph ], [ %381, %for.next.backedge ]
  %memberidx.i87 = getelementptr inbounds %StatementNode, ptr %48, i64 0, i32 1
  %49 = load i64, ptr %memberidx.i87, align 4
  switch i64 %49, label %TypeChecker_check_statement.exit [
    i64 0, label %if.entry.i
    i64 1, label %if.entry2.i
    i64 2, label %if.entry6.i
    i64 3, label %if.entry10.i
    i64 4, label %if.entry14.i
    i64 5, label %if.entry18.i
    i64 6, label %if.entry22.i
    i64 7, label %if.entry26.i
    i64 8, label %if.entry30.i
  ]

if.entry.i:                                       ; preds = %for.body
  %memberidx.i90 = getelementptr inbounds %IfStatementNode, ptr %48, i64 0, i32 2
  %50 = load ptr, ptr %memberidx.i90, align 8
  %51 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %51, align 4
  %52 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %51, ptr %50)
  %53 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx1.i.i.i92 = getelementptr inbounds %Compiler, ptr %53, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1.i.i.i92, align 8
  %memberidx2.i.i.i93 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx2.i.i.i93, align 4
  %56 = icmp sgt i64 %55, 0
  br i1 %56, label %TypeChecker_check_condition.exit.i, label %ifend.i.i94

ifend.i.i94:                                      ; preds = %if.entry.i
  %memberidx.i9.i = getelementptr inbounds %Expression, ptr %52, i64 0, i32 3
  %57 = load ptr, ptr %memberidx.i9.i, align 8
  %58 = load i64, ptr %57, align 4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %TypeChecker_check_condition.exit.i, label %true_block.i.i

true_block.i.i:                                   ; preds = %ifend.i.i94
  %60 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %60, align 4
  %61 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %61, align 4
  %memberidx.i.i.i.i.i95 = getelementptr inbounds %Expression, ptr %61, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i.i95, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %Expression, ptr %61, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i.i.i.i, align 1
  %memberidx.i.i.i.i96 = getelementptr inbounds %TypeCastExpression, ptr %61, i64 0, i32 4
  store ptr %52, ptr %memberidx.i.i.i.i96, align 8
  %memberidx1.i.i.i.i97 = getelementptr inbounds %Expression, ptr %61, i64 0, i32 3
  store ptr %60, ptr %memberidx1.i.i.i.i97, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %Expression, ptr %52, i64 0, i32 1
  %62 = load i1, ptr %memberidx3.i.i.i.i, align 1
  store i1 %62, ptr %memberidx1.i.i.i.i.i, align 1
  br label %TypeChecker_check_condition.exit.i

TypeChecker_check_condition.exit.i:               ; preds = %ifend.i.i94, %true_block.i.i, %if.entry.i
  %common.ret.op.i.i99 = phi ptr [ null, %if.entry.i ], [ %61, %true_block.i.i ], [ %52, %ifend.i.i94 ]
  %memberidx1.i100 = getelementptr inbounds %IfStatementNode, ptr %48, i64 0, i32 3
  %63 = load ptr, ptr %memberidx1.i100, align 8
  %64 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %63, ptr null, i1 false)
  %memberidx2.i101 = getelementptr inbounds %IfStatementNode, ptr %48, i64 0, i32 4
  %65 = load ptr, ptr %memberidx2.i101, align 8
  %.not.i = icmp eq ptr %65, null
  br i1 %.not.i, label %TypeChecker_check_if_stamement.exit, label %true_block.i

true_block.i:                                     ; preds = %TypeChecker_check_condition.exit.i
  %66 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr nonnull %65, ptr null, i1 false)
  br label %TypeChecker_check_if_stamement.exit

TypeChecker_check_if_stamement.exit:              ; preds = %TypeChecker_check_condition.exit.i, %true_block.i
  %ternary.i = phi ptr [ %66, %true_block.i ], [ null, %TypeChecker_check_condition.exit.i ]
  %67 = tail call ptr @malloc(i32 32)
  store i64 0, ptr %67, align 4
  %memberidx.i.i102 = getelementptr inbounds %IfStatement, ptr %67, i64 0, i32 1
  store ptr %common.ret.op.i.i99, ptr %memberidx.i.i102, align 8
  %memberidx1.i.i103 = getelementptr inbounds %IfStatement, ptr %67, i64 0, i32 2
  store ptr %64, ptr %memberidx1.i.i103, align 8
  %memberidx2.i.i104 = getelementptr inbounds %IfStatement, ptr %67, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx2.i.i104, align 8
  br label %TypeChecker_check_statement.exit

if.entry2.i:                                      ; preds = %for.body
  %68 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nonnull %48)
  br label %TypeChecker_check_statement.exit

if.entry6.i:                                      ; preds = %for.body
  %69 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nonnull %48)
  br label %TypeChecker_check_statement.exit

if.entry10.i:                                     ; preds = %for.body
  %70 = load ptr, ptr %memberidx, align 8
  %71 = load i64, ptr %70, align 4
  %72 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %71)
  %memberidx2.i.i134 = getelementptr inbounds %Scope, ptr %72, i64 0, i32 5
  %73 = load ptr, ptr %memberidx, align 8
  store ptr %73, ptr %memberidx2.i.i134, align 8
  %74 = load ptr, ptr %0, align 8
  %75 = load ptr, ptr %memberidx, align 8
  %76 = load ptr, ptr %74, align 8
  %77 = load i64, ptr %75, align 4
  %78 = load ptr, ptr %76, align 8
  %79 = getelementptr inbounds ptr, ptr %78, i64 %77
  %80 = load ptr, ptr %79, align 8
  %memberidx2.i.i.i.i136 = getelementptr inbounds %Module, ptr %80, i64 0, i32 7
  %81 = load ptr, ptr %memberidx2.i.i.i.i136, align 8
  %memberidx3.i.i.i.i137 = getelementptr inbounds %ScopeId, ptr %75, i64 0, i32 1
  %82 = load i64, ptr %memberidx3.i.i.i.i137, align 4
  %83 = load ptr, ptr %81, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  %memberidx4.i.i = getelementptr inbounds %Scope, ptr %85, i64 0, i32 7
  %86 = load ptr, ptr %memberidx4.i.i, align 8
  %87 = load ptr, ptr %72, align 8
  %memberidx.i.i.i138 = getelementptr inbounds %Array_ScopeId_, ptr %86, i64 0, i32 1
  %88 = load i64, ptr %memberidx.i.i.i138, align 4
  %89 = add i64 %88, 1
  %memberidx.i.i.i.i139 = getelementptr inbounds %Array_ScopeId_, ptr %86, i64 0, i32 2
  %90 = load i64, ptr %memberidx.i.i.i.i139, align 4
  %91 = icmp slt i64 %90, %89
  %.pre196 = load ptr, ptr %86, align 8
  br i1 %91, label %while.body.i.i.i.i, label %TypeChecker_create_child_scope_within_current_scope.exit.i

while.body.i.i.i.i:                               ; preds = %if.entry10.i, %while.body.i.i.i.i
  %92 = phi ptr [ %96, %while.body.i.i.i.i ], [ %.pre196, %if.entry10.i ]
  %93 = phi i64 [ %97, %while.body.i.i.i.i ], [ %90, %if.entry10.i ]
  %94 = shl nuw i64 %93, 1
  store i64 %94, ptr %memberidx.i.i.i.i139, align 4
  %95 = shl i64 %93, 4
  %96 = tail call ptr @realloc(ptr %92, i64 %95)
  store ptr %96, ptr %86, align 8
  %97 = load i64, ptr %memberidx.i.i.i.i139, align 4
  %98 = icmp slt i64 %97, %89
  br i1 %98, label %while.body.i.i.i.i, label %TypeChecker_create_child_scope_within_current_scope.exit.i.loopexit

TypeChecker_create_child_scope_within_current_scope.exit.i.loopexit: ; preds = %while.body.i.i.i.i
  %.pre197 = load i64, ptr %memberidx.i.i.i138, align 4
  %.pre225 = add nsw i64 %.pre197, 1
  br label %TypeChecker_create_child_scope_within_current_scope.exit.i

TypeChecker_create_child_scope_within_current_scope.exit.i: ; preds = %if.entry10.i, %TypeChecker_create_child_scope_within_current_scope.exit.i.loopexit
  %.pre-phi226 = phi i64 [ %.pre225, %TypeChecker_create_child_scope_within_current_scope.exit.i.loopexit ], [ %89, %if.entry10.i ]
  %99 = phi ptr [ %96, %TypeChecker_create_child_scope_within_current_scope.exit.i.loopexit ], [ %.pre196, %if.entry10.i ]
  %100 = phi i64 [ %.pre197, %TypeChecker_create_child_scope_within_current_scope.exit.i.loopexit ], [ %88, %if.entry10.i ]
  store i64 %.pre-phi226, ptr %memberidx.i.i.i138, align 4
  %101 = getelementptr inbounds ptr, ptr %99, i64 %100
  store ptr %87, ptr %101, align 8
  %102 = load ptr, ptr %72, align 8
  store ptr %102, ptr %memberidx, align 8
  %103 = load i1, ptr %memberidx.i58.i, align 1
  %104 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %104, align 4
  %memberidx3.i142 = getelementptr inbounds %ForStatementNode, ptr %48, i64 0, i32 3
  %105 = load ptr, ptr %memberidx3.i142, align 8
  %106 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %104, ptr %105)
  %107 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx1.i.i143 = getelementptr inbounds %Compiler, ptr %107, i64 0, i32 5
  %108 = load ptr, ptr %memberidx1.i.i143, align 8
  %memberidx2.i58.i = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 1
  %109 = load i64, ptr %memberidx2.i58.i, align 4
  %110 = icmp sgt i64 %109, 0
  br i1 %110, label %TypeChecker_check_statement.exit, label %ifend.i

ifend.i:                                          ; preds = %TypeChecker_create_child_scope_within_current_scope.exit.i
  %memberidx4.i145 = getelementptr inbounds %Expression, ptr %106, i64 0, i32 3
  %111 = load ptr, ptr %memberidx4.i145, align 8
  %112 = load i64, ptr %111, align 4
  %113 = icmp eq i64 %112, 20
  br i1 %113, label %if.entry.i143.i, label %is_object.exit.i.thread

if.entry.i143.i:                                  ; preds = %ifend.i, %if.entry.i143.i
  %.tr5.i.i = phi ptr [ %114, %if.entry.i143.i ], [ %111, %ifend.i ]
  %memberidx1.i142.i = getelementptr inbounds %GenericType, ptr %.tr5.i.i, i64 0, i32 3
  %114 = load ptr, ptr %memberidx1.i142.i, align 8
  %115 = load i64, ptr %114, align 4
  switch i64 %115, label %if.entry5.i [
    i64 20, label %if.entry.i143.i
    i64 11, label %ifend7.i
  ]

is_object.exit.i.thread:                          ; preds = %ifend.i
  %116 = icmp eq i64 %112, 11
  br i1 %116, label %ifend7.i.thread, label %if.entry5.i

ifend7.i.thread:                                  ; preds = %is_object.exit.i.thread
  %117 = load ptr, ptr %0, align 8
  br label %if.entry3.i.i

if.entry5.i:                                      ; preds = %if.entry.i143.i, %is_object.exit.i.thread
  %118 = tail call ptr @malloc(i32 28)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %118, ptr noundef nonnull align 8 dereferenceable(28) @237, i64 28, i1 false)
  %119 = tail call ptr @malloc(i32 24)
  store ptr %118, ptr %119, align 8
  %memberidx1.i.i59.i = getelementptr inbounds %String, ptr %119, i64 0, i32 1
  store i64 28, ptr %memberidx1.i.i59.i, align 4
  %memberidx2.i.i.i146 = getelementptr inbounds %String, ptr %119, i64 0, i32 2
  store i64 28, ptr %memberidx2.i.i.i146, align 4
  %120 = load ptr, ptr %memberidx3.i142, align 8
  %121 = load ptr, ptr %120, align 8
  %122 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx1.i61.i = getelementptr inbounds %Compiler, ptr %122, i64 0, i32 5
  %123 = load ptr, ptr %memberidx1.i61.i, align 8
  %124 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %124, align 4
  %memberidx1.i.i62.i = getelementptr inbounds %FloError, ptr %124, i64 0, i32 2
  store ptr %121, ptr %memberidx1.i.i62.i, align 8
  %memberidx2.i.i63.i = getelementptr inbounds %FloError, ptr %124, i64 0, i32 1
  store ptr %119, ptr %memberidx2.i.i63.i, align 8
  %memberidx.i.i64.i = getelementptr inbounds %Array_FloError_, ptr %123, i64 0, i32 1
  %125 = load i64, ptr %memberidx.i.i64.i, align 4
  %126 = add i64 %125, 1
  %memberidx.i.i.i65.i = getelementptr inbounds %Array_FloError_, ptr %123, i64 0, i32 2
  %127 = load i64, ptr %memberidx.i.i.i65.i, align 4
  %128 = icmp slt i64 %127, %126
  %.pre199 = load ptr, ptr %123, align 8
  br i1 %128, label %while.body.i.i.i67.i, label %TypeChecker_error.exit.i

while.body.i.i.i67.i:                             ; preds = %if.entry5.i, %while.body.i.i.i67.i
  %129 = phi ptr [ %133, %while.body.i.i.i67.i ], [ %.pre199, %if.entry5.i ]
  %130 = phi i64 [ %134, %while.body.i.i.i67.i ], [ %127, %if.entry5.i ]
  %131 = shl nuw i64 %130, 1
  store i64 %131, ptr %memberidx.i.i.i65.i, align 4
  %132 = shl i64 %130, 4
  %133 = tail call ptr @realloc(ptr %129, i64 %132)
  store ptr %133, ptr %123, align 8
  %134 = load i64, ptr %memberidx.i.i.i65.i, align 4
  %135 = icmp slt i64 %134, %126
  br i1 %135, label %while.body.i.i.i67.i, label %TypeChecker_error.exit.i.loopexit

TypeChecker_error.exit.i.loopexit:                ; preds = %while.body.i.i.i67.i
  %.pre200 = load i64, ptr %memberidx.i.i64.i, align 4
  %.pre229 = add nsw i64 %.pre200, 1
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry5.i, %TypeChecker_error.exit.i.loopexit
  %.pre-phi230 = phi i64 [ %.pre229, %TypeChecker_error.exit.i.loopexit ], [ %126, %if.entry5.i ]
  %136 = phi ptr [ %133, %TypeChecker_error.exit.i.loopexit ], [ %.pre199, %if.entry5.i ]
  %137 = phi i64 [ %.pre200, %TypeChecker_error.exit.i.loopexit ], [ %125, %if.entry5.i ]
  store i64 %.pre-phi230, ptr %memberidx.i.i64.i, align 4
  %138 = getelementptr inbounds ptr, ptr %136, i64 %137
  store ptr %124, ptr %138, align 8
  br label %TypeChecker_check_statement.exit

ifend7.i:                                         ; preds = %if.entry.i143.i
  %139 = load ptr, ptr %0, align 8
  br i1 %113, label %if.entry.i147.i, label %if.entry3.i.i

if.entry.i147.i:                                  ; preds = %ifend7.i, %if.entry.i147.i
  %.tr11.i.i171 = phi ptr [ %140, %if.entry.i147.i ], [ %111, %ifend7.i ]
  %memberidx1.i146.i = getelementptr inbounds %GenericType, ptr %.tr11.i.i171, i64 0, i32 3
  %140 = load ptr, ptr %memberidx1.i146.i, align 8
  %141 = load i64, ptr %140, align 4
  %switch = icmp eq i64 %141, 20
  br i1 %switch, label %if.entry.i147.i, label %if.entry3.i.i

if.entry3.i.i:                                    ; preds = %if.entry.i147.i, %ifend7.i.thread, %ifend7.i
  %142 = phi ptr [ %139, %ifend7.i ], [ %117, %ifend7.i.thread ], [ %139, %if.entry.i147.i ]
  %.tr11.i.i.lcssa = phi ptr [ %111, %ifend7.i ], [ %111, %ifend7.i.thread ], [ %140, %if.entry.i147.i ]
  %memberidx6.i148.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.i.lcssa, i64 0, i32 1
  %143 = load ptr, ptr %memberidx6.i148.i, align 8
  %144 = load ptr, ptr %142, align 8
  %145 = load i64, ptr %143, align 4
  %146 = load ptr, ptr %144, align 8
  %147 = getelementptr inbounds ptr, ptr %146, i64 %145
  %148 = load ptr, ptr %147, align 8
  %memberidx2.i.i149.i = getelementptr inbounds %Module, ptr %148, i64 0, i32 3
  %149 = load ptr, ptr %memberidx2.i.i149.i, align 8
  %memberidx3.i.i.i147 = getelementptr inbounds %TypeId, ptr %143, i64 0, i32 2
  %150 = load i64, ptr %memberidx3.i.i.i147, align 4
  %151 = load ptr, ptr %149, align 8
  %152 = getelementptr inbounds ptr, ptr %151, i64 %150
  %153 = load ptr, ptr %152, align 8
  %memberidx12.i = getelementptr inbounds %Class, ptr %153, i64 0, i32 6
  %154 = load ptr, ptr %memberidx12.i, align 8
  %155 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %155, align 8
  %156 = tail call ptr @malloc(i32 24)
  store ptr %155, ptr %156, align 8
  %memberidx1.i.i68.i = getelementptr inbounds %String, ptr %156, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i68.i, align 4
  %memberidx2.i.i69.i = getelementptr inbounds %String, ptr %156, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i69.i, align 4
  %157 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %156)
  %memberidx.i70.i = getelementptr inbounds %Map_String_PropId_, ptr %154, i64 0, i32 1
  %158 = load i64, ptr %memberidx.i70.i, align 4
  %159 = urem i64 %157, %158
  %160 = load ptr, ptr %154, align 8
  %161 = getelementptr inbounds ptr, ptr %160, i64 %159
  %162 = load ptr, ptr %161, align 8
  %.not.i.i172 = icmp eq ptr %162, null
  br i1 %.not.i.i172, label %if.entry13.i, label %while.body.i.i149

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre204.pre = load ptr, ptr %154, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre204.pre, i64 %hash.0.i.i173
  %.pre205.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i.i = icmp eq ptr %.pre205.pre, null
  br i1 %.not22.i.i, label %if.entry13.i, label %Map_String_PropId____getitem__.exit.i

while.body.i.i149:                                ; preds = %if.entry3.i.i, %else.i.i
  %163 = phi ptr [ %171, %else.i.i ], [ %160, %if.entry3.i.i ]
  %164 = phi i64 [ %172, %else.i.i ], [ %158, %if.entry3.i.i ]
  %165 = phi ptr [ %176, %else.i.i ], [ %162, %if.entry3.i.i ]
  %hash.0.i.i173 = phi i64 [ %174, %else.i.i ], [ %159, %if.entry3.i.i ]
  %166 = load ptr, ptr %165, align 8
  %memberidx.i.i71.i = getelementptr inbounds %String, ptr %166, i64 0, i32 1
  %167 = load i64, ptr %memberidx.i.i71.i, align 4
  %.not.i.i.i = icmp eq i64 %167, 8
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.body.i.i149
  %168 = load ptr, ptr %166, align 8
  %169 = tail call i64 @memcmp(ptr %168, ptr nonnull %155, i64 8)
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre202 = load i64, ptr %memberidx.i70.i, align 4
  %.pre203 = load ptr, ptr %154, align 8
  br label %else.i.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.body.i.i149
  %171 = phi ptr [ %.pre203, %ifend.i.i.i.else.i.i_crit_edge ], [ %163, %while.body.i.i149 ]
  %172 = phi i64 [ %.pre202, %ifend.i.i.i.else.i.i_crit_edge ], [ %164, %while.body.i.i149 ]
  %173 = add nuw i64 %hash.0.i.i173, 1
  %174 = urem i64 %173, %172
  %175 = getelementptr inbounds ptr, ptr %171, i64 %174
  %176 = load ptr, ptr %175, align 8
  %.not.i.i = icmp eq ptr %176, null
  br i1 %.not.i.i, label %if.entry13.i, label %while.body.i.i149

Map_String_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx10.i.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre205.pre, i64 0, i32 1
  %177 = load ptr, ptr %memberidx10.i.i, align 8
  %178 = icmp eq ptr %177, null
  br i1 %178, label %if.entry13.i, label %ifend15.i

if.entry13.i:                                     ; preds = %else.i.i, %if.entry3.i.i, %while.end.i.i, %Map_String_PropId____getitem__.exit.i
  %179 = tail call ptr @malloc(i32 46)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(46) %179, ptr noundef nonnull align 8 dereferenceable(46) @238, i64 46, i1 false)
  %180 = tail call ptr @malloc(i32 24)
  store ptr %179, ptr %180, align 8
  %memberidx1.i.i73.i = getelementptr inbounds %String, ptr %180, i64 0, i32 1
  store i64 46, ptr %memberidx1.i.i73.i, align 4
  %memberidx2.i.i74.i = getelementptr inbounds %String, ptr %180, i64 0, i32 2
  store i64 46, ptr %memberidx2.i.i74.i, align 4
  %181 = load ptr, ptr %memberidx3.i142, align 8
  %182 = load ptr, ptr %181, align 8
  %183 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx1.i76.i = getelementptr inbounds %Compiler, ptr %183, i64 0, i32 5
  %184 = load ptr, ptr %memberidx1.i76.i, align 8
  %185 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %185, align 4
  %memberidx1.i.i77.i = getelementptr inbounds %FloError, ptr %185, i64 0, i32 2
  store ptr %182, ptr %memberidx1.i.i77.i, align 8
  %memberidx2.i.i78.i = getelementptr inbounds %FloError, ptr %185, i64 0, i32 1
  store ptr %180, ptr %memberidx2.i.i78.i, align 8
  %memberidx.i.i79.i = getelementptr inbounds %Array_FloError_, ptr %184, i64 0, i32 1
  %186 = load i64, ptr %memberidx.i.i79.i, align 4
  %187 = add i64 %186, 1
  %memberidx.i.i.i80.i = getelementptr inbounds %Array_FloError_, ptr %184, i64 0, i32 2
  %188 = load i64, ptr %memberidx.i.i.i80.i, align 4
  %189 = icmp slt i64 %188, %187
  %.pre211 = load ptr, ptr %184, align 8
  br i1 %189, label %while.body.i.i.i82.i, label %TypeChecker_error.exit83.i

while.body.i.i.i82.i:                             ; preds = %if.entry13.i, %while.body.i.i.i82.i
  %190 = phi ptr [ %194, %while.body.i.i.i82.i ], [ %.pre211, %if.entry13.i ]
  %191 = phi i64 [ %195, %while.body.i.i.i82.i ], [ %188, %if.entry13.i ]
  %192 = shl nuw i64 %191, 1
  store i64 %192, ptr %memberidx.i.i.i80.i, align 4
  %193 = shl i64 %191, 4
  %194 = tail call ptr @realloc(ptr %190, i64 %193)
  store ptr %194, ptr %184, align 8
  %195 = load i64, ptr %memberidx.i.i.i80.i, align 4
  %196 = icmp slt i64 %195, %187
  br i1 %196, label %while.body.i.i.i82.i, label %TypeChecker_error.exit83.i.loopexit

TypeChecker_error.exit83.i.loopexit:              ; preds = %while.body.i.i.i82.i
  %.pre212 = load i64, ptr %memberidx.i.i79.i, align 4
  %.pre227 = add nsw i64 %.pre212, 1
  br label %TypeChecker_error.exit83.i

TypeChecker_error.exit83.i:                       ; preds = %if.entry13.i, %TypeChecker_error.exit83.i.loopexit
  %.pre-phi228 = phi i64 [ %.pre227, %TypeChecker_error.exit83.i.loopexit ], [ %187, %if.entry13.i ]
  %197 = phi ptr [ %194, %TypeChecker_error.exit83.i.loopexit ], [ %.pre211, %if.entry13.i ]
  %198 = phi i64 [ %.pre212, %TypeChecker_error.exit83.i.loopexit ], [ %186, %if.entry13.i ]
  store i64 %.pre-phi228, ptr %memberidx.i.i79.i, align 4
  %199 = getelementptr inbounds ptr, ptr %197, i64 %198
  store ptr %185, ptr %199, align 8
  br label %TypeChecker_check_statement.exit

ifend15.i:                                        ; preds = %Map_String_PropId____getitem__.exit.i
  %memberidx18.i = getelementptr inbounds %ForStatementNode, ptr %48, i64 0, i32 2
  %200 = load ptr, ptr %memberidx18.i, align 8
  %memberidx19.i = getelementptr inbounds %IdentifierToken, ptr %200, i64 0, i32 2
  %201 = load ptr, ptr %memberidx19.i, align 8
  %202 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx1.i85.i = getelementptr inbounds %Compiler, ptr %202, i64 0, i32 5
  %203 = load ptr, ptr %memberidx1.i85.i, align 8
  %memberidx2.i86.i = getelementptr inbounds %Array_FloError_, ptr %203, i64 0, i32 1
  %204 = load i64, ptr %memberidx2.i86.i, align 4
  %205 = icmp sgt i64 %204, 0
  br i1 %205, label %TypeChecker_check_statement.exit, label %ifend22.i

ifend22.i:                                        ; preds = %ifend15.i
  %206 = load ptr, ptr %0, align 8
  %memberidx.i.i87.i = getelementptr inbounds %PropId, ptr %177, i64 0, i32 1
  %207 = load ptr, ptr %memberidx.i.i87.i, align 8
  %208 = load ptr, ptr %206, align 8
  %209 = load i64, ptr %207, align 4
  %210 = load ptr, ptr %208, align 8
  %211 = getelementptr inbounds ptr, ptr %210, i64 %209
  %212 = load ptr, ptr %211, align 8
  %memberidx2.i.i.i88.i = getelementptr inbounds %Module, ptr %212, i64 0, i32 3
  %213 = load ptr, ptr %memberidx2.i.i.i88.i, align 8
  %memberidx3.i.i.i89.i = getelementptr inbounds %TypeId, ptr %207, i64 0, i32 2
  %214 = load i64, ptr %memberidx3.i.i.i89.i, align 4
  %215 = load ptr, ptr %213, align 8
  %216 = getelementptr inbounds ptr, ptr %215, i64 %214
  %217 = load ptr, ptr %216, align 8
  %218 = load i64, ptr %177, align 4
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %if.entry.i.i151, label %ifend.i.i152

if.entry.i.i151:                                  ; preds = %ifend22.i
  %memberidx1.i91.i = getelementptr inbounds %Class, ptr %217, i64 0, i32 5
  %220 = load ptr, ptr %memberidx1.i91.i, align 8
  %memberidx2.i92.i = getelementptr inbounds %PropId, ptr %177, i64 0, i32 2
  %221 = load i64, ptr %memberidx2.i92.i, align 4
  %222 = load ptr, ptr %220, align 8
  %223 = getelementptr inbounds ptr, ptr %222, i64 %221
  %224 = load ptr, ptr %223, align 8
  %memberidx3.i.i150 = getelementptr inbounds %ClassMethod, ptr %224, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i152:                                     ; preds = %ifend22.i
  %memberidx4.i93.i = getelementptr inbounds %Class, ptr %217, i64 0, i32 4
  %225 = load ptr, ptr %memberidx4.i93.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %177, i64 0, i32 2
  %226 = load i64, ptr %memberidx5.i.i, align 4
  %227 = load ptr, ptr %225, align 8
  %228 = getelementptr inbounds ptr, ptr %227, i64 %226
  %229 = load ptr, ptr %228, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %229, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i152, %if.entry.i.i151
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i150, %if.entry.i.i151 ], [ %memberidx6.i.i, %ifend.i.i152 ]
  %common.ret.op.i90.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %memberidx24.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i90.i, i64 0, i32 2
  br label %tailrecurse.i151.i

tailrecurse.i151.i:                               ; preds = %tailrecurse.i151.i, %get_class_prop_type.exit.i
  %.tr11.i150.i.in = phi ptr [ %memberidx24.i, %get_class_prop_type.exit.i ], [ %memberidx1.i153.i, %tailrecurse.i151.i ]
  %.tr11.i150.i = load ptr, ptr %.tr11.i150.i.in, align 8
  %230 = load i64, ptr %.tr11.i150.i, align 4
  %switch159 = icmp eq i64 %230, 20
  %memberidx1.i153.i = getelementptr inbounds %GenericType, ptr %.tr11.i150.i, i64 0, i32 3
  br i1 %switch159, label %tailrecurse.i151.i, label %if.entry3.i158.i

if.entry3.i158.i:                                 ; preds = %tailrecurse.i151.i
  %memberidx6.i155.i = getelementptr inbounds %ObjectType, ptr %.tr11.i150.i, i64 0, i32 1
  %231 = load ptr, ptr %memberidx6.i155.i, align 8
  %232 = load i64, ptr %231, align 4
  %233 = getelementptr inbounds ptr, ptr %210, i64 %232
  %234 = load ptr, ptr %233, align 8
  %memberidx2.i.i156.i = getelementptr inbounds %Module, ptr %234, i64 0, i32 3
  %235 = load ptr, ptr %memberidx2.i.i156.i, align 8
  %memberidx3.i.i157.i = getelementptr inbounds %TypeId, ptr %231, i64 0, i32 2
  %236 = load i64, ptr %memberidx3.i.i157.i, align 4
  %237 = load ptr, ptr %235, align 8
  %238 = getelementptr inbounds ptr, ptr %237, i64 %236
  %239 = load ptr, ptr %238, align 8
  %memberidx26.i = getelementptr inbounds %Class, ptr %239, i64 0, i32 6
  %240 = load ptr, ptr %memberidx26.i, align 8
  %241 = tail call ptr @malloc(i32 4)
  store i32 1954047342, ptr %241, align 8
  %242 = tail call ptr @malloc(i32 24)
  store ptr %241, ptr %242, align 8
  %memberidx1.i.i94.i = getelementptr inbounds %String, ptr %242, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i94.i, align 4
  %memberidx2.i.i95.i = getelementptr inbounds %String, ptr %242, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i95.i, align 4
  %243 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %242)
  %memberidx.i96.i = getelementptr inbounds %Map_String_PropId_, ptr %240, i64 0, i32 1
  %244 = load i64, ptr %memberidx.i96.i, align 4
  %245 = urem i64 %243, %244
  %246 = load ptr, ptr %240, align 8
  %247 = getelementptr inbounds ptr, ptr %246, i64 %245
  %248 = load ptr, ptr %247, align 8
  %.not.i98.i176 = icmp eq ptr %248, null
  br i1 %.not.i98.i176, label %Map_String_PropId____getitem__.exit113.i, label %while.body.i105.i

while.end.i101.i:                                 ; preds = %ifend.i.i106.i
  %.pre208.pre = load ptr, ptr %240, align 8
  %.phi.trans.insert209.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre208.pre, i64 %hash.0.i97.i177
  %.pre210.pre = load ptr, ptr %.phi.trans.insert209.phi.trans.insert, align 8
  %.not22.i100.i = icmp eq ptr %.pre210.pre, null
  br i1 %.not22.i100.i, label %Map_String_PropId____getitem__.exit113.i, label %if.entry6.i112.i

while.body.i105.i:                                ; preds = %if.entry3.i158.i, %else.i109.i
  %249 = phi ptr [ %257, %else.i109.i ], [ %246, %if.entry3.i158.i ]
  %250 = phi i64 [ %258, %else.i109.i ], [ %244, %if.entry3.i158.i ]
  %251 = phi ptr [ %262, %else.i109.i ], [ %248, %if.entry3.i158.i ]
  %hash.0.i97.i177 = phi i64 [ %260, %else.i109.i ], [ %245, %if.entry3.i158.i ]
  %252 = load ptr, ptr %251, align 8
  %memberidx.i.i102.i = getelementptr inbounds %String, ptr %252, i64 0, i32 1
  %253 = load i64, ptr %memberidx.i.i102.i, align 4
  %.not.i.i104.i = icmp eq i64 %253, 4
  br i1 %.not.i.i104.i, label %ifend.i.i106.i, label %else.i109.i

ifend.i.i106.i:                                   ; preds = %while.body.i105.i
  %254 = load ptr, ptr %252, align 8
  %255 = tail call i64 @memcmp(ptr %254, ptr nonnull %241, i64 4)
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %while.end.i101.i, label %ifend.i.i106.i.else.i109.i_crit_edge

ifend.i.i106.i.else.i109.i_crit_edge:             ; preds = %ifend.i.i106.i
  %.pre206 = load i64, ptr %memberidx.i96.i, align 4
  %.pre207 = load ptr, ptr %240, align 8
  br label %else.i109.i

else.i109.i:                                      ; preds = %ifend.i.i106.i.else.i109.i_crit_edge, %while.body.i105.i
  %257 = phi ptr [ %.pre207, %ifend.i.i106.i.else.i109.i_crit_edge ], [ %249, %while.body.i105.i ]
  %258 = phi i64 [ %.pre206, %ifend.i.i106.i.else.i109.i_crit_edge ], [ %250, %while.body.i105.i ]
  %259 = add nuw i64 %hash.0.i97.i177, 1
  %260 = urem i64 %259, %258
  %261 = getelementptr inbounds ptr, ptr %257, i64 %260
  %262 = load ptr, ptr %261, align 8
  %.not.i98.i = icmp eq ptr %262, null
  br i1 %.not.i98.i, label %Map_String_PropId____getitem__.exit113.i, label %while.body.i105.i

if.entry6.i112.i:                                 ; preds = %while.end.i101.i
  %memberidx10.i111.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre210.pre, i64 0, i32 1
  %263 = load ptr, ptr %memberidx10.i111.i, align 8
  br label %Map_String_PropId____getitem__.exit113.i

Map_String_PropId____getitem__.exit113.i:         ; preds = %else.i109.i, %if.entry3.i158.i, %if.entry6.i112.i, %while.end.i101.i
  %common.ret.op.i110.i = phi ptr [ %263, %if.entry6.i112.i ], [ null, %while.end.i101.i ], [ null, %if.entry3.i158.i ], [ null, %else.i109.i ]
  %264 = load ptr, ptr %0, align 8
  %memberidx.i.i114.i = getelementptr inbounds %PropId, ptr %common.ret.op.i110.i, i64 0, i32 1
  %265 = load ptr, ptr %memberidx.i.i114.i, align 8
  %266 = load ptr, ptr %264, align 8
  %267 = load i64, ptr %265, align 4
  %268 = load ptr, ptr %266, align 8
  %269 = getelementptr inbounds ptr, ptr %268, i64 %267
  %270 = load ptr, ptr %269, align 8
  %memberidx2.i.i.i115.i = getelementptr inbounds %Module, ptr %270, i64 0, i32 3
  %271 = load ptr, ptr %memberidx2.i.i.i115.i, align 8
  %memberidx3.i.i.i116.i = getelementptr inbounds %TypeId, ptr %265, i64 0, i32 2
  %272 = load i64, ptr %memberidx3.i.i.i116.i, align 4
  %273 = load ptr, ptr %271, align 8
  %274 = getelementptr inbounds ptr, ptr %273, i64 %272
  %275 = load ptr, ptr %274, align 8
  %276 = load i64, ptr %common.ret.op.i110.i, align 4
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %if.entry.i122.i, label %ifend.i126.i

if.entry.i122.i:                                  ; preds = %Map_String_PropId____getitem__.exit113.i
  %memberidx1.i119.i = getelementptr inbounds %Class, ptr %275, i64 0, i32 5
  %278 = load ptr, ptr %memberidx1.i119.i, align 8
  %memberidx2.i120.i = getelementptr inbounds %PropId, ptr %common.ret.op.i110.i, i64 0, i32 2
  %279 = load i64, ptr %memberidx2.i120.i, align 4
  %280 = load ptr, ptr %278, align 8
  %281 = getelementptr inbounds ptr, ptr %280, i64 %279
  %282 = load ptr, ptr %281, align 8
  %memberidx3.i121.i = getelementptr inbounds %ClassMethod, ptr %282, i64 0, i32 4
  br label %get_class_prop_type.exit127.i

ifend.i126.i:                                     ; preds = %Map_String_PropId____getitem__.exit113.i
  %memberidx4.i123.i = getelementptr inbounds %Class, ptr %275, i64 0, i32 4
  %283 = load ptr, ptr %memberidx4.i123.i, align 8
  %memberidx5.i124.i = getelementptr inbounds %PropId, ptr %common.ret.op.i110.i, i64 0, i32 2
  %284 = load i64, ptr %memberidx5.i124.i, align 4
  %285 = load ptr, ptr %283, align 8
  %286 = getelementptr inbounds ptr, ptr %285, i64 %284
  %287 = load ptr, ptr %286, align 8
  %memberidx6.i125.i = getelementptr inbounds %ClassField, ptr %287, i64 0, i32 4
  br label %get_class_prop_type.exit127.i

get_class_prop_type.exit127.i:                    ; preds = %ifend.i126.i, %if.entry.i122.i
  %common.ret.op.in.i117.i = phi ptr [ %memberidx3.i121.i, %if.entry.i122.i ], [ %memberidx6.i125.i, %ifend.i126.i ]
  %common.ret.op.i118.i = load ptr, ptr %common.ret.op.in.i117.i, align 8
  %memberidx28.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i118.i, i64 0, i32 2
  %288 = load ptr, ptr %memberidx28.i, align 8
  store i1 true, ptr %memberidx.i58.i, align 1
  %289 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %201, ptr null, ptr %288)
  %memberidx30.i = getelementptr inbounds %ForStatementNode, ptr %48, i64 0, i32 4
  %290 = load ptr, ptr %memberidx30.i, align 8
  %291 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %290, ptr nonnull %72, i1 false)
  %292 = tail call ptr @malloc(i32 32)
  %293 = tail call ptr @malloc(i32 25)
  %memberidx31.i = getelementptr inbounds %Var, ptr %289, i64 0, i32 1
  %294 = load ptr, ptr %memberidx31.i, align 8
  store i64 1, ptr %293, align 4
  %memberidx.i128.i = getelementptr inbounds %VarDeclaration, ptr %293, i64 0, i32 2
  store ptr %294, ptr %memberidx.i128.i, align 8
  %memberidx1.i129.i = getelementptr inbounds %VarDeclaration, ptr %293, i64 0, i32 1
  store ptr %201, ptr %memberidx1.i129.i, align 8
  %memberidx2.i130.i = getelementptr inbounds %VarDeclaration, ptr %293, i64 0, i32 3
  store i1 false, ptr %memberidx2.i130.i, align 1
  store i64 3, ptr %292, align 4
  %memberidx.i131.i = getelementptr inbounds %ForStatement, ptr %292, i64 0, i32 1
  store ptr %293, ptr %memberidx.i131.i, align 8
  %memberidx1.i132.i = getelementptr inbounds %ForStatement, ptr %292, i64 0, i32 2
  store ptr %106, ptr %memberidx1.i132.i, align 8
  %memberidx2.i133.i = getelementptr inbounds %ForStatement, ptr %292, i64 0, i32 3
  store ptr %291, ptr %memberidx2.i133.i, align 8
  store i1 %103, ptr %memberidx.i58.i, align 1
  br label %TypeChecker_check_statement.exit

if.entry14.i:                                     ; preds = %for.body
  %memberidx.i105 = getelementptr inbounds %WhileStatementNode, ptr %48, i64 0, i32 2
  %295 = load ptr, ptr %memberidx.i105, align 8
  %296 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %296, align 4
  %297 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %296, ptr %295)
  %298 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx1.i.i.i107 = getelementptr inbounds %Compiler, ptr %298, i64 0, i32 5
  %299 = load ptr, ptr %memberidx1.i.i.i107, align 8
  %memberidx2.i.i.i108 = getelementptr inbounds %Array_FloError_, ptr %299, i64 0, i32 1
  %300 = load i64, ptr %memberidx2.i.i.i108, align 4
  %301 = icmp sgt i64 %300, 0
  br i1 %301, label %TypeChecker_check_while_statment.exit, label %ifend.i.i109

ifend.i.i109:                                     ; preds = %if.entry14.i
  %memberidx.i10.i = getelementptr inbounds %Expression, ptr %297, i64 0, i32 3
  %302 = load ptr, ptr %memberidx.i10.i, align 8
  %303 = load i64, ptr %302, align 4
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %TypeChecker_check_while_statment.exit, label %true_block.i.i116

true_block.i.i116:                                ; preds = %ifend.i.i109
  %305 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %305, align 4
  %306 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %306, align 4
  %memberidx.i.i.i.i.i110 = getelementptr inbounds %Expression, ptr %306, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i.i110, align 4
  %memberidx1.i.i.i.i.i111 = getelementptr inbounds %Expression, ptr %306, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i.i.i.i111, align 1
  %memberidx.i.i.i.i112 = getelementptr inbounds %TypeCastExpression, ptr %306, i64 0, i32 4
  store ptr %297, ptr %memberidx.i.i.i.i112, align 8
  %memberidx1.i.i.i.i113 = getelementptr inbounds %Expression, ptr %306, i64 0, i32 3
  store ptr %305, ptr %memberidx1.i.i.i.i113, align 8
  %memberidx3.i.i.i.i115 = getelementptr inbounds %Expression, ptr %297, i64 0, i32 1
  %307 = load i1, ptr %memberidx3.i.i.i.i115, align 1
  store i1 %307, ptr %memberidx1.i.i.i.i.i111, align 1
  br label %TypeChecker_check_while_statment.exit

TypeChecker_check_while_statment.exit:            ; preds = %ifend.i.i109, %if.entry14.i, %true_block.i.i116
  %common.ret.op.i.i118 = phi ptr [ null, %if.entry14.i ], [ %306, %true_block.i.i116 ], [ %297, %ifend.i.i109 ]
  %308 = load i1, ptr %memberidx.i58.i, align 1
  store i1 true, ptr %memberidx.i58.i, align 1
  %memberidx3.i120 = getelementptr inbounds %WhileStatementNode, ptr %48, i64 0, i32 3
  %309 = load ptr, ptr %memberidx3.i120, align 8
  %310 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %309, ptr null, i1 false)
  store i1 %308, ptr %memberidx.i58.i, align 1
  %311 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %311, align 4
  %memberidx.i.i121 = getelementptr inbounds %WhileStatement, ptr %311, i64 0, i32 1
  store ptr %common.ret.op.i.i118, ptr %memberidx.i.i121, align 8
  %memberidx1.i.i122 = getelementptr inbounds %WhileStatement, ptr %311, i64 0, i32 2
  store ptr %310, ptr %memberidx1.i.i122, align 8
  br label %TypeChecker_check_statement.exit

if.entry18.i:                                     ; preds = %for.body
  %312 = load i1, ptr %memberidx.i58.i, align 1
  br i1 %312, label %ifend.i.i, label %if.entry.i.i

if.entry.i.i:                                     ; preds = %if.entry18.i
  %313 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %313, ptr noundef nonnull align 8 dereferenceable(32) @240, i64 32, i1 false)
  %314 = tail call ptr @malloc(i32 24)
  store ptr %313, ptr %314, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %String, ptr %314, i64 0, i32 1
  store i64 32, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %String, ptr %314, i64 0, i32 2
  store i64 32, ptr %memberidx2.i.i.i.i, align 4
  %315 = load ptr, ptr %48, align 8
  %316 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Compiler, ptr %316, i64 0, i32 5
  %317 = load ptr, ptr %memberidx1.i.i.i, align 8
  %318 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %318, align 4
  %memberidx1.i.i3.i.i = getelementptr inbounds %FloError, ptr %318, i64 0, i32 2
  store ptr %315, ptr %memberidx1.i.i3.i.i, align 8
  %memberidx2.i.i4.i.i = getelementptr inbounds %FloError, ptr %318, i64 0, i32 1
  store ptr %314, ptr %memberidx2.i.i4.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %317, i64 0, i32 1
  %319 = load i64, ptr %memberidx.i.i.i.i, align 4
  %320 = add i64 %319, 1
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %317, i64 0, i32 2
  %321 = load i64, ptr %memberidx.i.i.i.i.i, align 4
  %322 = icmp slt i64 %321, %320
  %.pre193 = load ptr, ptr %317, align 8
  br i1 %322, label %while.body.i.i.i.i.i, label %TypeChecker_error.exit.i.i

while.body.i.i.i.i.i:                             ; preds = %if.entry.i.i, %while.body.i.i.i.i.i
  %323 = phi ptr [ %327, %while.body.i.i.i.i.i ], [ %.pre193, %if.entry.i.i ]
  %324 = phi i64 [ %328, %while.body.i.i.i.i.i ], [ %321, %if.entry.i.i ]
  %325 = shl nuw i64 %324, 1
  store i64 %325, ptr %memberidx.i.i.i.i.i, align 4
  %326 = shl i64 %324, 4
  %327 = tail call ptr @realloc(ptr %323, i64 %326)
  store ptr %327, ptr %317, align 8
  %328 = load i64, ptr %memberidx.i.i.i.i.i, align 4
  %329 = icmp slt i64 %328, %320
  br i1 %329, label %while.body.i.i.i.i.i, label %TypeChecker_error.exit.i.i.loopexit

TypeChecker_error.exit.i.i.loopexit:              ; preds = %while.body.i.i.i.i.i
  %.pre194 = load i64, ptr %memberidx.i.i.i.i, align 4
  %.pre231 = add nsw i64 %.pre194, 1
  br label %TypeChecker_error.exit.i.i

TypeChecker_error.exit.i.i:                       ; preds = %if.entry.i.i, %TypeChecker_error.exit.i.i.loopexit
  %.pre-phi232 = phi i64 [ %.pre231, %TypeChecker_error.exit.i.i.loopexit ], [ %320, %if.entry.i.i ]
  %330 = phi ptr [ %327, %TypeChecker_error.exit.i.i.loopexit ], [ %.pre193, %if.entry.i.i ]
  %331 = phi i64 [ %.pre194, %TypeChecker_error.exit.i.i.loopexit ], [ %319, %if.entry.i.i ]
  store i64 %.pre-phi232, ptr %memberidx.i.i.i.i, align 4
  %332 = getelementptr inbounds ptr, ptr %330, i64 %331
  store ptr %318, ptr %332, align 8
  br label %TypeChecker_check_statement.exit

ifend.i.i:                                        ; preds = %if.entry18.i
  %333 = tail call ptr @malloc(i32 8)
  store i64 5, ptr %333, align 4
  br label %TypeChecker_check_statement.exit

if.entry22.i:                                     ; preds = %for.body
  %334 = load i1, ptr %memberidx.i58.i, align 1
  br i1 %334, label %ifend.i72.i, label %if.entry.i67.i

if.entry.i67.i:                                   ; preds = %if.entry22.i
  %335 = tail call ptr @malloc(i32 29)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %335, ptr noundef nonnull align 8 dereferenceable(29) @239, i64 29, i1 false)
  %336 = tail call ptr @malloc(i32 24)
  store ptr %335, ptr %336, align 8
  %memberidx1.i.i.i60.i = getelementptr inbounds %String, ptr %336, i64 0, i32 1
  store i64 29, ptr %memberidx1.i.i.i60.i, align 4
  %memberidx2.i.i.i61.i = getelementptr inbounds %String, ptr %336, i64 0, i32 2
  store i64 29, ptr %memberidx2.i.i.i61.i, align 4
  %337 = load ptr, ptr %48, align 8
  %338 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx1.i.i63.i = getelementptr inbounds %Compiler, ptr %338, i64 0, i32 5
  %339 = load ptr, ptr %memberidx1.i.i63.i, align 8
  %340 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %340, align 4
  %memberidx1.i.i3.i64.i = getelementptr inbounds %FloError, ptr %340, i64 0, i32 2
  store ptr %337, ptr %memberidx1.i.i3.i64.i, align 8
  %memberidx2.i.i4.i65.i = getelementptr inbounds %FloError, ptr %340, i64 0, i32 1
  store ptr %336, ptr %memberidx2.i.i4.i65.i, align 8
  %memberidx.i.i.i66.i = getelementptr inbounds %Array_FloError_, ptr %339, i64 0, i32 1
  %341 = load i64, ptr %memberidx.i.i.i66.i, align 4
  %342 = add i64 %341, 1
  %memberidx.i.i.i.i68.i = getelementptr inbounds %Array_FloError_, ptr %339, i64 0, i32 2
  %343 = load i64, ptr %memberidx.i.i.i.i68.i, align 4
  %344 = icmp slt i64 %343, %342
  %.pre190 = load ptr, ptr %339, align 8
  br i1 %344, label %while.body.i.i.i.i70.i, label %TypeChecker_error.exit.i71.i

while.body.i.i.i.i70.i:                           ; preds = %if.entry.i67.i, %while.body.i.i.i.i70.i
  %345 = phi ptr [ %349, %while.body.i.i.i.i70.i ], [ %.pre190, %if.entry.i67.i ]
  %346 = phi i64 [ %350, %while.body.i.i.i.i70.i ], [ %343, %if.entry.i67.i ]
  %347 = shl nuw i64 %346, 1
  store i64 %347, ptr %memberidx.i.i.i.i68.i, align 4
  %348 = shl i64 %346, 4
  %349 = tail call ptr @realloc(ptr %345, i64 %348)
  store ptr %349, ptr %339, align 8
  %350 = load i64, ptr %memberidx.i.i.i.i68.i, align 4
  %351 = icmp slt i64 %350, %342
  br i1 %351, label %while.body.i.i.i.i70.i, label %TypeChecker_error.exit.i71.i.loopexit

TypeChecker_error.exit.i71.i.loopexit:            ; preds = %while.body.i.i.i.i70.i
  %.pre191 = load i64, ptr %memberidx.i.i.i66.i, align 4
  %.pre233 = add nsw i64 %.pre191, 1
  br label %TypeChecker_error.exit.i71.i

TypeChecker_error.exit.i71.i:                     ; preds = %if.entry.i67.i, %TypeChecker_error.exit.i71.i.loopexit
  %.pre-phi234 = phi i64 [ %.pre233, %TypeChecker_error.exit.i71.i.loopexit ], [ %342, %if.entry.i67.i ]
  %352 = phi ptr [ %349, %TypeChecker_error.exit.i71.i.loopexit ], [ %.pre190, %if.entry.i67.i ]
  %353 = phi i64 [ %.pre191, %TypeChecker_error.exit.i71.i.loopexit ], [ %341, %if.entry.i67.i ]
  store i64 %.pre-phi234, ptr %memberidx.i.i.i66.i, align 4
  %354 = getelementptr inbounds ptr, ptr %352, i64 %353
  store ptr %340, ptr %354, align 8
  br label %TypeChecker_check_statement.exit

ifend.i72.i:                                      ; preds = %if.entry22.i
  %355 = tail call ptr @malloc(i32 8)
  store i64 6, ptr %355, align 4
  br label %TypeChecker_check_statement.exit

if.entry26.i:                                     ; preds = %for.body
  %356 = tail call fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nonnull %48)
  br label %TypeChecker_check_statement.exit

if.entry30.i:                                     ; preds = %for.body
  %357 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %357, align 4
  %358 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %357, ptr nonnull %48)
  br label %TypeChecker_check_statement.exit

TypeChecker_check_statement.exit:                 ; preds = %get_class_prop_type.exit127.i, %ifend15.i, %TypeChecker_error.exit83.i, %TypeChecker_error.exit.i, %TypeChecker_create_child_scope_within_current_scope.exit.i, %for.body, %TypeChecker_error.exit.i71.i, %ifend.i72.i, %TypeChecker_error.exit.i.i, %ifend.i.i, %TypeChecker_check_if_stamement.exit, %if.entry2.i, %if.entry6.i, %TypeChecker_check_while_statment.exit, %if.entry26.i, %if.entry30.i
  %common.ret.op.i = phi ptr [ %67, %TypeChecker_check_if_stamement.exit ], [ %68, %if.entry2.i ], [ %69, %if.entry6.i ], [ %311, %TypeChecker_check_while_statment.exit ], [ %356, %if.entry26.i ], [ %358, %if.entry30.i ], [ null, %TypeChecker_error.exit.i.i ], [ %333, %ifend.i.i ], [ null, %TypeChecker_error.exit.i71.i ], [ %355, %ifend.i72.i ], [ null, %for.body ], [ null, %TypeChecker_error.exit.i ], [ null, %TypeChecker_error.exit83.i ], [ %292, %get_class_prop_type.exit127.i ], [ null, %TypeChecker_create_child_scope_within_current_scope.exit.i ], [ null, %ifend15.i ]
  %359 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx1.i82 = getelementptr inbounds %Compiler, ptr %359, i64 0, i32 5
  %360 = load ptr, ptr %memberidx1.i82, align 8
  %memberidx2.i83 = getelementptr inbounds %Array_FloError_, ptr %360, i64 0, i32 1
  %361 = load i64, ptr %memberidx2.i83, align 4
  %362 = icmp sgt i64 %361, 0
  br i1 %362, label %common.ret, label %ifend

if.entry36.thread:                                ; preds = %if.entry15, %Array_Statement____sl__.exit, %if.entry32, %if.entry27
  %memberidx5.i.sink = phi ptr [ %memberidx5.i, %if.entry32 ], [ %memberidx4.i, %if.entry27 ], [ %memberidx3.i, %Array_Statement____sl__.exit ], [ %memberidx3.i, %if.entry15 ]
  store i1 true, ptr %memberidx5.i.sink, align 1
  tail call void @free(ptr nonnull %42)
  br label %ifend38

common.ret:                                       ; preds = %TypeChecker_check_statement.exit, %ifend38
  %common.ret.op = phi ptr [ %5, %ifend38 ], [ null, %TypeChecker_check_statement.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %TypeChecker_check_statement.exit
  %363 = load i64, ptr %memberidx.i.i, align 4
  %364 = add i64 %363, 1
  %365 = load i64, ptr %memberidx1.i.i, align 4
  %366 = icmp slt i64 %365, %364
  %.pre214 = load ptr, ptr %6, align 8
  br i1 %366, label %while.body.i.i, label %Array_Statement____sl__.exit

while.body.i.i:                                   ; preds = %ifend, %while.body.i.i
  %367 = phi ptr [ %371, %while.body.i.i ], [ %.pre214, %ifend ]
  %368 = phi i64 [ %372, %while.body.i.i ], [ %365, %ifend ]
  %369 = shl nuw i64 %368, 1
  store i64 %369, ptr %memberidx1.i.i, align 4
  %370 = shl i64 %368, 4
  %371 = tail call ptr @realloc(ptr %367, i64 %370)
  store ptr %371, ptr %6, align 8
  %372 = load i64, ptr %memberidx1.i.i, align 4
  %373 = icmp slt i64 %372, %364
  br i1 %373, label %while.body.i.i, label %Array_Statement____sl__.exit.loopexit

Array_Statement____sl__.exit.loopexit:            ; preds = %while.body.i.i
  %.pre215 = load i64, ptr %memberidx.i.i, align 4
  %.pre223 = add nsw i64 %.pre215, 1
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %ifend, %Array_Statement____sl__.exit.loopexit
  %.pre-phi224 = phi i64 [ %.pre223, %Array_Statement____sl__.exit.loopexit ], [ %364, %ifend ]
  %374 = phi ptr [ %371, %Array_Statement____sl__.exit.loopexit ], [ %.pre214, %ifend ]
  %375 = phi i64 [ %.pre215, %Array_Statement____sl__.exit.loopexit ], [ %363, %ifend ]
  store i64 %.pre-phi224, ptr %memberidx.i.i, align 4
  %376 = getelementptr inbounds ptr, ptr %374, i64 %375
  store ptr %common.ret.op.i, ptr %376, align 8
  %377 = load i64, ptr %common.ret.op.i, align 4
  switch i64 %377, label %for.next.backedge [
    i64 7, label %if.entry36.thread
    i64 0, label %if.entry11
    i64 5, label %if.entry27
    i64 6, label %if.entry32
  ]

if.entry11:                                       ; preds = %Array_Statement____sl__.exit
  %memberidx14 = getelementptr inbounds %IfStatement, ptr %common.ret.op.i, i64 0, i32 3
  %378 = load ptr, ptr %memberidx14, align 8
  %.not72 = icmp eq ptr %378, null
  br i1 %.not72, label %for.next.backedge, label %if.entry15

for.next.backedge:                                ; preds = %if.entry11, %if.entry15, %Array_Statement____sl__.exit
  %379 = add nuw nsw i64 %47, 1
  store i64 %379, ptr %memberidx1.i.i77, align 4
  %380 = getelementptr inbounds ptr, ptr %43, i64 %47
  %381 = load ptr, ptr %380, align 8
  %382 = icmp sge i64 %47, %44
  store i1 %382, ptr %42, align 1
  br i1 %382, label %if.entry36, label %for.body

if.entry15:                                       ; preds = %if.entry11
  %memberidx18 = getelementptr inbounds %IfStatement, ptr %common.ret.op.i, i64 0, i32 2
  %383 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %Block, ptr %383, i64 0, i32 1
  %384 = load i1, ptr %memberidx19, align 1
  %memberidx21 = getelementptr inbounds %Block, ptr %378, i64 0, i32 1
  %385 = load i1, ptr %memberidx21, align 1
  %386 = and i1 %384, %385
  br i1 %386, label %if.entry36.thread, label %for.next.backedge

if.entry27:                                       ; preds = %Array_Statement____sl__.exit
  br label %if.entry36.thread

if.entry32:                                       ; preds = %Array_Statement____sl__.exit
  br label %if.entry36.thread

if.entry36:                                       ; preds = %for.next.backedge
  tail call void @free(ptr nonnull %42)
  %.pre217 = load i64, ptr %common.ret.op.i, align 4
  %387 = icmp eq i64 %.pre217, 8
  %388 = and i1 %387, %3
  br i1 %388, label %if.entry40, label %ifend38

ifend38:                                          ; preds = %if.entry36.thread, %for.end.thread238, %if.entry40, %if.entry36
  %memberidx46 = getelementptr inbounds %Scope, ptr %ternary, i64 0, i32 5
  %389 = load ptr, ptr %memberidx46, align 8
  store ptr %389, ptr %memberidx, align 8
  br label %common.ret

if.entry40:                                       ; preds = %if.entry36
  store ptr %common.ret.op.i, ptr %memberidx6.i, align 8
  %390 = load i64, ptr %memberidx.i.i, align 4
  %391 = add nsw i64 %390, -1
  store i64 %391, ptr %memberidx.i.i, align 4
  br label %ifend38
}

define internal fastcc void @Map_String_Generic__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_Generic_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx21, align 8
  tail call fastcc void @Map_String_Generic____setitem__(ptr nonnull %0, ptr %24, ptr %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_Generic____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_Generic__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_Generic_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_Generic__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @TypeChecker_check_class_body(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 21
  br i1 %7, label %common.ret, label %ifend

common.ret.loopexit:                              ; preds = %ifend54
  store i64 %111, ptr %memberidx.i.i, align 4
  store i1 false, ptr %58, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %ifend13, %ifend10, %2, %TypeChecker_error.exit168, %for.end40, %TypeChecker_error.exit
  ret void

ifend:                                            ; preds = %2
  %8 = load ptr, ptr %0, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i, %ifend
  %9 = phi i64 [ %.pr, %if.entry.i ], [ %6, %ifend ]
  %.tr11.i = phi ptr [ %10, %if.entry.i ], [ %5, %ifend ]
  switch i64 %9, label %get_class_from_type.exit [
    i64 20, label %if.entry.i
    i64 11, label %if.entry3.i
  ]

if.entry.i:                                       ; preds = %tailrecurse.i
  %memberidx1.i171 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1.i171, align 8
  %.pr = load i64, ptr %10, align 4
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i172 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i172, align 8
  %12 = load ptr, ptr %8, align 8
  %13 = load i64, ptr %11, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx2.i.i173 = getelementptr inbounds %Module, ptr %16, i64 0, i32 3
  %17 = load ptr, ptr %memberidx2.i.i173, align 8
  %memberidx3.i.i174 = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %18 = load i64, ptr %memberidx3.i.i174, align 4
  %19 = load ptr, ptr %17, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %18
  %21 = load ptr, ptr %20, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i = phi ptr [ %21, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx4 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %22 = load ptr, ptr %memberidx4, align 8
  %23 = load ptr, ptr %common.ret.op.i, align 8
  store ptr %23, ptr %memberidx4, align 8
  %memberidx7 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 2
  %24 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %24, null
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %get_class_from_type.exit
  tail call fastcc void @TypeChecker_add_inherited_props_to_class(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  br label %ifend10

ifend10:                                          ; preds = %get_class_from_type.exit, %if.entry8
  tail call fastcc void @TypeChecker_declare_class_fields(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i, align 4
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend10
  tail call fastcc void @TypeChecker_declare_class_methods(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %29 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i129 = getelementptr inbounds %Compiler, ptr %29, i64 0, i32 5
  %30 = load ptr, ptr %memberidx1.i129, align 8
  %memberidx2.i130 = getelementptr inbounds %Array_FloError_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx2.i130, align 4
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %common.ret, label %for.entry

for.entry:                                        ; preds = %ifend13
  %memberidx17 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 6
  %33 = load ptr, ptr %memberidx17, align 8
  %34 = tail call ptr @malloc(i32 25)
  %35 = load ptr, ptr %33, align 8
  %memberidx1.i131 = getelementptr inbounds %Map_String_PropId_, ptr %33, i64 0, i32 1
  %36 = load i64, ptr %memberidx1.i131, align 4
  %memberidx2.i132 = getelementptr inbounds %Map_String_PropId_, ptr %33, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i132, align 4
  store i1 false, ptr %34, align 1
  %memberidx1.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %34, i64 0, i32 1
  store ptr %35, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %34, i64 0, i32 2
  store i64 %36, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %34, i64 0, i32 3
  store i64 %37, ptr %memberidx3.i.i, align 4
  %smin209 = call i64 @llvm.smin.i64(i64 %37, i64 0)
  %38 = add i64 %smin209, -1
  br label %for.next

for.next:                                         ; preds = %for.next.backedge, %for.entry
  %39 = phi ptr [ %35, %for.entry ], [ %47, %for.next.backedge ]
  %40 = phi i64 [ %37, %for.entry ], [ %48, %for.next.backedge ]
  %.lcssa184186 = phi i64 [ %36, %for.entry ], [ %.lcssa, %for.next.backedge ]
  %smin = call i64 @llvm.smin.i64(i64 %.lcssa184186, i64 0)
  %41 = add i64 %smin, -1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.body.i, %for.next
  %42 = phi ptr [ %incdec.ptr.i, %while.body.i ], [ %39, %for.next ]
  %43 = phi i64 [ %45, %while.body.i ], [ %.lcssa184186, %for.next ]
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %while.body.i, label %MapIterator_String_PropId__next.exit

while.body.i:                                     ; preds = %while.entry.i
  %45 = add nsw i64 %43, -1
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %42, i64 1
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  %46 = load ptr, ptr %42, align 8
  %.not.i = icmp eq ptr %46, null
  br i1 %.not.i, label %while.entry.i, label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %while.entry.i, %while.body.i
  %47 = phi ptr [ %42, %while.entry.i ], [ %incdec.ptr.i, %while.body.i ]
  %.lcssa = phi i64 [ %41, %while.entry.i ], [ %45, %while.body.i ]
  %48 = add nsw i64 %40, -1
  %49 = icmp slt i64 %40, 1
  br i1 %49, label %for.end.loopexit, label %for.body

for.body:                                         ; preds = %MapIterator_String_PropId__next.exit
  %50 = getelementptr inbounds ptr, ptr %47, i64 -1
  %51 = load ptr, ptr %50, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_PropId_, ptr %51, i64 0, i32 1
  %52 = load ptr, ptr %memberidx19, align 8
  %53 = load i64, ptr %52, align 4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %if.entry22, label %for.next.backedge

for.end.loopexit:                                 ; preds = %MapIterator_String_PropId__next.exit
  store i64 %.lcssa, ptr %memberidx2.i.i, align 4
  store i64 %38, ptr %memberidx3.i.i, align 4
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %ifend33
  %.sink = phi ptr [ %34, %for.end.loopexit ], [ %memberidx36, %ifend33 ]
  store i1 true, ptr %.sink, align 1
  tail call void @free(ptr nonnull %34)
  %memberidx41 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 5
  %55 = load ptr, ptr %memberidx41, align 8
  %memberidx42 = getelementptr inbounds %Array_ClassMethod_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx42, align 4
  %57 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %57, align 4
  %memberidx1.i135 = getelementptr inbounds %Range, ptr %57, i64 0, i32 1
  store i64 %56, ptr %memberidx1.i135, align 4
  %58 = tail call ptr @malloc(i32 17)
  %memberidx.i.i = getelementptr inbounds %RangeIterator, ptr %58, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i137 = getelementptr inbounds %RangeIterator, ptr %58, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i.i137, align 4
  %59 = icmp slt i64 %56, 1
  br i1 %59, label %for.end40, label %for.body39.lr.ph

for.body39.lr.ph:                                 ; preds = %for.end
  %memberidx44 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %memberidx48 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 4
  %memberidx49 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %.pre212 = load ptr, ptr %memberidx44, align 8
  br label %for.body39

if.entry22:                                       ; preds = %for.body
  %60 = load ptr, ptr %51, align 8
  %61 = load ptr, ptr %0, align 8
  %memberidx.i.i138 = getelementptr inbounds %PropId, ptr %52, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i.i138, align 8
  %63 = load ptr, ptr %61, align 8
  %64 = load i64, ptr %62, align 4
  %65 = load ptr, ptr %63, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %67, i64 0, i32 3
  %68 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %62, i64 0, i32 2
  %69 = load i64, ptr %memberidx3.i.i.i, align 4
  %70 = load ptr, ptr %68, align 8
  %71 = getelementptr inbounds ptr, ptr %70, i64 %69
  %72 = load ptr, ptr %71, align 8
  %memberidx.i139 = getelementptr inbounds %Class, ptr %72, i64 0, i32 5
  %73 = load ptr, ptr %memberidx.i139, align 8
  %memberidx1.i140 = getelementptr inbounds %PropId, ptr %52, i64 0, i32 2
  %74 = load i64, ptr %memberidx1.i140, align 4
  %75 = load ptr, ptr %73, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %74
  %77 = load ptr, ptr %76, align 8
  %memberidx26 = getelementptr inbounds %ClassMethod, ptr %77, i64 0, i32 7
  %78 = load i1, ptr %memberidx26, align 1
  br i1 %78, label %if.entry27, label %for.next.backedge

for.next.backedge:                                ; preds = %if.entry22, %for.body
  br label %for.next

if.entry27:                                       ; preds = %if.entry22
  store i64 %.lcssa, ptr %memberidx2.i.i, align 4
  store i64 %48, ptr %memberidx3.i.i, align 4
  store i1 false, ptr %34, align 1
  %memberidx30 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 3
  %79 = load ptr, ptr %memberidx30, align 8
  %.not127 = icmp eq ptr %79, null
  br i1 %.not127, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %if.entry27
  %memberidx.i141 = getelementptr inbounds %String, ptr %60, i64 0, i32 1
  %80 = load i64, ptr %memberidx.i141, align 4
  %81 = trunc i64 %80 to i32
  %82 = add i32 %81, 1
  %83 = tail call ptr @malloc(i32 %82)
  %84 = load ptr, ptr %60, align 8
  %85 = load i64, ptr %memberidx.i141, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %83, ptr align 8 %84, i64 %85, i1 false)
  %86 = getelementptr inbounds i8, ptr %83, i64 %85
  store i8 0, ptr %86, align 1
  %87 = alloca ptr, align 8
  %88 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %87, ptr nonnull @155, ptr %83)
  %89 = load ptr, ptr %87, align 8
  %90 = tail call ptr @malloc(i32 24)
  store ptr %89, ptr %90, align 8
  %memberidx1.i142 = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  store i64 %88, ptr %memberidx1.i142, align 4
  %memberidx2.i143 = getelementptr inbounds %String, ptr %90, i64 0, i32 2
  store i64 %88, ptr %memberidx2.i143, align 4
  tail call void @free(ptr %83)
  %91 = load ptr, ptr %1, align 8
  %memberidx35 = getelementptr inbounds %Token, ptr %91, i64 0, i32 1
  %92 = load ptr, ptr %memberidx35, align 8
  %93 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i145 = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx1.i145, align 8
  %95 = call ptr @malloc(i32 24)
  store i64 4, ptr %95, align 4
  %memberidx1.i.i146 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 2
  store ptr %92, ptr %memberidx1.i.i146, align 8
  %memberidx2.i.i147 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i147, align 8
  %memberidx.i.i148 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i.i148, align 4
  %97 = add i64 %96, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 2
  %98 = load i64, ptr %memberidx.i.i.i, align 4
  %99 = icmp slt i64 %98, %97
  %.pre = load ptr, ptr %94, align 8
  br i1 %99, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry31, %while.body.i.i.i
  %100 = phi ptr [ %104, %while.body.i.i.i ], [ %.pre, %if.entry31 ]
  %101 = phi i64 [ %105, %while.body.i.i.i ], [ %98, %if.entry31 ]
  %102 = shl nuw i64 %101, 1
  store i64 %102, ptr %memberidx.i.i.i, align 4
  %103 = shl i64 %101, 4
  %104 = call ptr @realloc(ptr %100, i64 %103)
  store ptr %104, ptr %94, align 8
  %105 = load i64, ptr %memberidx.i.i.i, align 4
  %106 = icmp slt i64 %105, %97
  br i1 %106, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre210 = load i64, ptr %memberidx.i.i148, align 4
  %.pre222 = add nsw i64 %.pre210, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry31, %TypeChecker_error.exit.loopexit
  %.pre-phi223 = phi i64 [ %.pre222, %TypeChecker_error.exit.loopexit ], [ %97, %if.entry31 ]
  %107 = phi ptr [ %104, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry31 ]
  %108 = phi i64 [ %.pre210, %TypeChecker_error.exit.loopexit ], [ %96, %if.entry31 ]
  store i64 %.pre-phi223, ptr %memberidx.i.i148, align 4
  %109 = getelementptr inbounds ptr, ptr %107, i64 %108
  store ptr %95, ptr %109, align 8
  br label %common.ret

ifend33:                                          ; preds = %if.entry27
  %memberidx36 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 10
  br label %for.end

for.body39:                                       ; preds = %for.body39.lr.ph, %for.next38.backedge
  %110 = phi ptr [ %.pre212, %for.body39.lr.ph ], [ %148, %for.next38.backedge ]
  %111 = phi i64 [ 1, %for.body39.lr.ph ], [ %149, %for.next38.backedge ]
  %112 = phi i64 [ 0, %for.body39.lr.ph ], [ %111, %for.next38.backedge ]
  %113 = load ptr, ptr %memberidx41, align 8
  %114 = load ptr, ptr %113, align 8
  %115 = getelementptr inbounds ptr, ptr %114, i64 %112
  %116 = load ptr, ptr %115, align 8
  %117 = load ptr, ptr %116, align 8
  store ptr %117, ptr %memberidx44, align 8
  %118 = load ptr, ptr %memberidx48, align 8
  %119 = load ptr, ptr %118, align 8
  %120 = getelementptr inbounds ptr, ptr %119, i64 %112
  %121 = load ptr, ptr %120, align 8
  %memberidx50 = getelementptr inbounds %ClassMethod, ptr %116, i64 0, i32 8
  %122 = load ptr, ptr %memberidx50, align 8
  store ptr %122, ptr %memberidx49, align 8
  %memberidx51 = getelementptr inbounds %ClassMethod, ptr %116, i64 0, i32 7
  %123 = load i1, ptr %memberidx51, align 1
  br i1 %123, label %for.next38.backedge, label %ifend54

for.end40:                                        ; preds = %for.next38.backedge, %for.end
  tail call void @free(ptr nonnull %58)
  store ptr %22, ptr %memberidx4, align 8
  br label %common.ret

ifend54:                                          ; preds = %for.body39
  %memberidx55 = getelementptr inbounds %ClassMethod, ptr %116, i64 0, i32 5
  %memberidx56 = getelementptr inbounds %MethodNode, ptr %121, i64 0, i32 2
  %124 = load ptr, ptr %memberidx56, align 8
  %125 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %124, ptr null, i1 false)
  store ptr %125, ptr %memberidx55, align 8
  %126 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i152 = getelementptr inbounds %Compiler, ptr %126, i64 0, i32 5
  %127 = load ptr, ptr %memberidx1.i152, align 8
  %memberidx2.i153 = getelementptr inbounds %Array_FloError_, ptr %127, i64 0, i32 1
  %128 = load i64, ptr %memberidx2.i153, align 4
  %129 = icmp sgt i64 %128, 0
  br i1 %129, label %common.ret.loopexit, label %ifend59

ifend59:                                          ; preds = %ifend54
  %memberidx61 = getelementptr inbounds %Block, ptr %125, i64 0, i32 1
  %130 = load i1, ptr %memberidx61, align 1
  br i1 %130, label %ifend64, label %if.entry62

if.entry62:                                       ; preds = %ifend59
  %memberidx65 = getelementptr inbounds %ClassMethod, ptr %116, i64 0, i32 4
  %131 = load ptr, ptr %memberidx65, align 8
  %memberidx66 = getelementptr inbounds %FunctionType, ptr %131, i64 0, i32 2
  %132 = load ptr, ptr %memberidx66, align 8
  %133 = load i64, ptr %132, align 4
  %134 = icmp eq i64 %133, 10
  br i1 %134, label %if.entry68, label %else69

ifend64:                                          ; preds = %ifend59, %Array_Statement____sl__.exit
  store ptr %110, ptr %memberidx44, align 8
  %135 = load ptr, ptr %0, align 8
  %136 = load ptr, ptr %memberidx50, align 8
  %137 = load ptr, ptr %135, align 8
  %138 = load i64, ptr %136, align 4
  %139 = load ptr, ptr %137, align 8
  %140 = getelementptr inbounds ptr, ptr %139, i64 %138
  %141 = load ptr, ptr %140, align 8
  %memberidx2.i154 = getelementptr inbounds %Module, ptr %141, i64 0, i32 7
  %142 = load ptr, ptr %memberidx2.i154, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %136, i64 0, i32 1
  %143 = load i64, ptr %memberidx3.i, align 4
  %144 = load ptr, ptr %142, align 8
  %145 = getelementptr inbounds ptr, ptr %144, i64 %143
  %146 = load ptr, ptr %145, align 8
  %memberidx79 = getelementptr inbounds %Scope, ptr %146, i64 0, i32 5
  %147 = load ptr, ptr %memberidx79, align 8
  store ptr %147, ptr %memberidx49, align 8
  br label %for.next38.backedge

for.next38.backedge:                              ; preds = %ifend64, %for.body39
  %148 = phi ptr [ %110, %ifend64 ], [ %117, %for.body39 ]
  %.not224 = icmp slt i64 %111, %56
  %149 = add nuw nsw i64 %111, 1
  br i1 %.not224, label %for.body39, label %for.end40

if.entry68:                                       ; preds = %if.entry62
  %150 = load ptr, ptr %125, align 8
  %151 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %151, align 4
  %memberidx.i155 = getelementptr inbounds %ReturnStatement, ptr %151, i64 0, i32 1
  store ptr null, ptr %memberidx.i155, align 8
  %memberidx.i156 = getelementptr inbounds %Array_Statement_, ptr %150, i64 0, i32 1
  %152 = load i64, ptr %memberidx.i156, align 4
  %153 = add i64 %152, 1
  %memberidx.i.i157 = getelementptr inbounds %Array_Statement_, ptr %150, i64 0, i32 2
  %154 = load i64, ptr %memberidx.i.i157, align 4
  %155 = icmp slt i64 %154, %153
  %.pre216 = load ptr, ptr %150, align 8
  br i1 %155, label %while.body.i.i, label %Array_Statement____sl__.exit

while.body.i.i:                                   ; preds = %if.entry68, %while.body.i.i
  %156 = phi ptr [ %160, %while.body.i.i ], [ %.pre216, %if.entry68 ]
  %157 = phi i64 [ %161, %while.body.i.i ], [ %154, %if.entry68 ]
  %158 = shl nuw i64 %157, 1
  store i64 %158, ptr %memberidx.i.i157, align 4
  %159 = shl i64 %157, 4
  %160 = tail call ptr @realloc(ptr %156, i64 %159)
  store ptr %160, ptr %150, align 8
  %161 = load i64, ptr %memberidx.i.i157, align 4
  %162 = icmp slt i64 %161, %153
  br i1 %162, label %while.body.i.i, label %Array_Statement____sl__.exit.loopexit

Array_Statement____sl__.exit.loopexit:            ; preds = %while.body.i.i
  %.pre217 = load i64, ptr %memberidx.i156, align 4
  %.pre219 = add nsw i64 %.pre217, 1
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %if.entry68, %Array_Statement____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre219, %Array_Statement____sl__.exit.loopexit ], [ %153, %if.entry68 ]
  %163 = phi ptr [ %160, %Array_Statement____sl__.exit.loopexit ], [ %.pre216, %if.entry68 ]
  %164 = phi i64 [ %.pre217, %Array_Statement____sl__.exit.loopexit ], [ %152, %if.entry68 ]
  store i64 %.pre-phi, ptr %memberidx.i156, align 4
  %165 = getelementptr inbounds ptr, ptr %163, i64 %164
  store ptr %151, ptr %165, align 8
  br label %ifend64

else69:                                           ; preds = %if.entry62
  store i64 %111, ptr %memberidx.i.i, align 4
  store i1 false, ptr %58, align 1
  %166 = tail call ptr @malloc(i32 38)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(38) %166, ptr noundef nonnull align 8 dereferenceable(38) @156, i64 38, i1 false)
  %167 = tail call ptr @malloc(i32 24)
  store ptr %166, ptr %167, align 8
  %memberidx1.i.i158 = getelementptr inbounds %String, ptr %167, i64 0, i32 1
  store i64 38, ptr %memberidx1.i.i158, align 4
  %memberidx2.i.i159 = getelementptr inbounds %String, ptr %167, i64 0, i32 2
  store i64 38, ptr %memberidx2.i.i159, align 4
  %memberidx73 = getelementptr inbounds %MethodNode, ptr %121, i64 0, i32 4
  %168 = load ptr, ptr %memberidx73, align 8
  %169 = load ptr, ptr %168, align 8
  %170 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i161 = getelementptr inbounds %Compiler, ptr %170, i64 0, i32 5
  %171 = load ptr, ptr %memberidx1.i161, align 8
  %172 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %172, align 4
  %memberidx1.i.i162 = getelementptr inbounds %FloError, ptr %172, i64 0, i32 2
  store ptr %169, ptr %memberidx1.i.i162, align 8
  %memberidx2.i.i163 = getelementptr inbounds %FloError, ptr %172, i64 0, i32 1
  store ptr %167, ptr %memberidx2.i.i163, align 8
  %memberidx.i.i164 = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 1
  %173 = load i64, ptr %memberidx.i.i164, align 4
  %174 = add i64 %173, 1
  %memberidx.i.i.i165 = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 2
  %175 = load i64, ptr %memberidx.i.i.i165, align 4
  %176 = icmp slt i64 %175, %174
  %.pre213 = load ptr, ptr %171, align 8
  br i1 %176, label %while.body.i.i.i167, label %TypeChecker_error.exit168

while.body.i.i.i167:                              ; preds = %else69, %while.body.i.i.i167
  %177 = phi ptr [ %181, %while.body.i.i.i167 ], [ %.pre213, %else69 ]
  %178 = phi i64 [ %182, %while.body.i.i.i167 ], [ %175, %else69 ]
  %179 = shl nuw i64 %178, 1
  store i64 %179, ptr %memberidx.i.i.i165, align 4
  %180 = shl i64 %178, 4
  %181 = tail call ptr @realloc(ptr %177, i64 %180)
  store ptr %181, ptr %171, align 8
  %182 = load i64, ptr %memberidx.i.i.i165, align 4
  %183 = icmp slt i64 %182, %174
  br i1 %183, label %while.body.i.i.i167, label %TypeChecker_error.exit168.loopexit

TypeChecker_error.exit168.loopexit:               ; preds = %while.body.i.i.i167
  %.pre214 = load i64, ptr %memberidx.i.i164, align 4
  %.pre220 = add nsw i64 %.pre214, 1
  br label %TypeChecker_error.exit168

TypeChecker_error.exit168:                        ; preds = %else69, %TypeChecker_error.exit168.loopexit
  %.pre-phi221 = phi i64 [ %.pre220, %TypeChecker_error.exit168.loopexit ], [ %174, %else69 ]
  %184 = phi ptr [ %181, %TypeChecker_error.exit168.loopexit ], [ %.pre213, %else69 ]
  %185 = phi i64 [ %.pre214, %TypeChecker_error.exit168.loopexit ], [ %173, %else69 ]
  store i64 %.pre-phi221, ptr %memberidx.i.i164, align 4
  %186 = getelementptr inbounds ptr, ptr %184, i64 %185
  store ptr %172, ptr %186, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %2, null
  %8 = tail call ptr @malloc(i32 1)
  store i8 64, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %9, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %9, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i, align 4
  %11 = icmp slt i64 %10, 1
  br i1 %11, label %String_starts_with.exit, label %ifend.i

ifend.i:                                          ; preds = %3
  %12 = load ptr, ptr %1, align 8
  %13 = tail call i64 @memcmp(ptr %12, ptr nonnull %8, i64 1)
  %14 = icmp eq i64 %13, 0
  br label %String_starts_with.exit

String_starts_with.exit:                          ; preds = %3, %ifend.i
  %common.ret.op.i = phi i1 [ %14, %ifend.i ], [ false, %3 ]
  %15 = or i1 %7, %common.ret.op.i
  br i1 %15, label %ifend, label %if.entry

if.entry:                                         ; preds = %String_starts_with.exit
  %memberidx.i54 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %16 = load ptr, ptr %memberidx.i54, align 8
  %17 = load i64, ptr %16, align 4
  %18 = load ptr, ptr %0, align 8
  %19 = load ptr, ptr %18, align 8
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 %17
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i.i, align 4
  %25 = trunc i64 %24 to i32
  %26 = add i32 %25, 1
  %27 = tail call ptr @malloc(i32 %26)
  %28 = load ptr, ptr %23, align 8
  %29 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %28, i64 %29, i1 false)
  %30 = getelementptr inbounds i8, ptr %27, i64 %29
  store i8 0, ptr %30, align 1
  %31 = tail call ptr @dirname(ptr %27)
  %32 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %31)
  %33 = trunc i64 %32 to i32
  %34 = tail call ptr @malloc(i32 %33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %31, i64 %32, i1 false)
  %35 = tail call ptr @malloc(i32 24)
  store ptr %34, ptr %35, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %35, i64 0, i32 1
  store i64 %32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %35, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %36 = add i32 %33, 1
  %37 = tail call ptr @malloc(i32 %36)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %34, i64 %32, i1 false)
  %38 = getelementptr inbounds i8, ptr %37, i64 %32
  store i8 0, ptr %38, align 1
  %39 = load i64, ptr %memberidx.i, align 4
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, 1
  %42 = tail call ptr @malloc(i32 %41)
  %43 = load ptr, ptr %1, align 8
  %44 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %43, i64 %44, i1 false)
  %45 = getelementptr inbounds i8, ptr %42, i64 %44
  store i8 0, ptr %45, align 1
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @8, ptr %37, ptr %42)
  %47 = load ptr, ptr %4, align 8
  %48 = call ptr @malloc(i32 24)
  store ptr %47, ptr %48, align 8
  %memberidx1.i.i56 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i56, align 4
  %memberidx2.i.i57 = getelementptr inbounds %String, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx2.i.i57, align 4
  call void @free(ptr %37)
  call void @free(ptr %42)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %ifend

ifend:                                            ; preds = %String_starts_with.exit, %if.entry
  %filepath.0 = phi ptr [ %48, %if.entry ], [ %1, %String_starts_with.exit ]
  %49 = load ptr, ptr %memberidx, align 8
  %50 = call fastcc ptr @Compiler_register_file(ptr %49, ptr nonnull %filepath.0)
  %51 = load i64, ptr %50, align 4
  %52 = load ptr, ptr %0, align 8
  %53 = load ptr, ptr %52, align 8
  %memberidx7 = getelementptr inbounds %Array_Module_, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx7, align 4
  %55 = icmp slt i64 %51, %54
  br i1 %55, label %if.entry8, label %ifend10

common.ret:                                       ; preds = %ifend27, %ifend22, %ifend15, %ifend30, %TypeChecker_error.exit, %if.entry8
  %common.ret.op = phi ptr [ %58, %if.entry8 ], [ null, %TypeChecker_error.exit ], [ %102, %ifend30 ], [ null, %ifend15 ], [ null, %ifend22 ], [ null, %ifend27 ]
  ret ptr %common.ret.op

if.entry8:                                        ; preds = %ifend
  %56 = load ptr, ptr %53, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %51
  %58 = load ptr, ptr %57, align 8
  br label %common.ret

ifend10:                                          ; preds = %ifend
  %59 = load ptr, ptr %memberidx, align 8
  %60 = call fastcc i1 @Compiler_set_current_file(ptr %59, ptr nonnull %50)
  br i1 %60, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend10
  %61 = load i64, ptr %memberidx.i, align 4
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, 1
  %64 = call ptr @malloc(i32 %63)
  %65 = load ptr, ptr %1, align 8
  %66 = load i64, ptr %memberidx.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %64, ptr align 8 %65, i64 %66, i1 false)
  %67 = getelementptr inbounds i8, ptr %64, i64 %66
  store i8 0, ptr %67, align 1
  %68 = alloca ptr, align 8
  %69 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %68, ptr nonnull @39, ptr %64)
  %70 = load ptr, ptr %68, align 8
  %71 = tail call ptr @malloc(i32 24)
  store ptr %70, ptr %71, align 8
  %memberidx1.i59 = getelementptr inbounds %String, ptr %71, i64 0, i32 1
  store i64 %69, ptr %memberidx1.i59, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %71, i64 0, i32 2
  store i64 %69, ptr %memberidx2.i, align 4
  tail call void @free(ptr %64)
  %72 = load ptr, ptr %memberidx, align 8
  %memberidx1.i61 = getelementptr inbounds %Compiler, ptr %72, i64 0, i32 5
  %73 = load ptr, ptr %memberidx1.i61, align 8
  %74 = call ptr @malloc(i32 24)
  store i64 3, ptr %74, align 4
  %memberidx1.i.i62 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i.i62, align 8
  %memberidx2.i.i63 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 1
  store ptr %71, ptr %memberidx2.i.i63, align 8
  %memberidx.i.i64 = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i.i64, align 4
  %76 = add i64 %75, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 2
  %77 = load i64, ptr %memberidx.i.i.i, align 4
  %78 = icmp slt i64 %77, %76
  %.pre = load ptr, ptr %73, align 8
  br i1 %78, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry13, %while.body.i.i.i
  %79 = phi ptr [ %83, %while.body.i.i.i ], [ %.pre, %if.entry13 ]
  %80 = phi i64 [ %84, %while.body.i.i.i ], [ %77, %if.entry13 ]
  %81 = shl nuw i64 %80, 1
  store i64 %81, ptr %memberidx.i.i.i, align 4
  %82 = shl i64 %80, 4
  %83 = call ptr @realloc(ptr %79, i64 %82)
  store ptr %83, ptr %73, align 8
  %84 = load i64, ptr %memberidx.i.i.i, align 4
  %85 = icmp slt i64 %84, %76
  br i1 %85, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre76 = load i64, ptr %memberidx.i.i64, align 4
  %.pre78 = add nsw i64 %.pre76, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry13, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre78, %TypeChecker_error.exit.loopexit ], [ %76, %if.entry13 ]
  %86 = phi ptr [ %83, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry13 ]
  %87 = phi i64 [ %.pre76, %TypeChecker_error.exit.loopexit ], [ %75, %if.entry13 ]
  store i64 %.pre-phi, ptr %memberidx.i.i64, align 4
  %88 = getelementptr inbounds ptr, ptr %86, i64 %87
  store ptr %74, ptr %88, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend10
  %89 = load ptr, ptr %memberidx, align 8
  %memberidx17 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 2
  %90 = load ptr, ptr %memberidx17, align 8
  %memberidx19 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 5
  %91 = load ptr, ptr %memberidx19, align 8
  %92 = call fastcc ptr @Lexer_tokenize(ptr %90, ptr %91)
  %93 = load ptr, ptr %memberidx, align 8
  %memberidx1.i66 = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx1.i66, align 8
  %memberidx2.i67 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %95 = load i64, ptr %memberidx2.i67, align 4
  %96 = icmp sgt i64 %95, 0
  br i1 %96, label %common.ret, label %ifend22

ifend22:                                          ; preds = %ifend15
  %97 = call fastcc ptr @Parser_parse(ptr %92, ptr nonnull %94)
  %98 = load ptr, ptr %memberidx, align 8
  %memberidx1.i69 = getelementptr inbounds %Compiler, ptr %98, i64 0, i32 5
  %99 = load ptr, ptr %memberidx1.i69, align 8
  %memberidx2.i70 = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 1
  %100 = load i64, ptr %memberidx2.i70, align 4
  %101 = icmp sgt i64 %100, 0
  br i1 %101, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend22
  %102 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %0, ptr %97, ptr nonnull %filepath.0)
  %103 = load ptr, ptr %memberidx, align 8
  %memberidx1.i72 = getelementptr inbounds %Compiler, ptr %103, i64 0, i32 5
  %104 = load ptr, ptr %memberidx1.i72, align 8
  %memberidx2.i73 = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 1
  %105 = load i64, ptr %memberidx2.i73, align 4
  %106 = icmp sgt i64 %105, 0
  br i1 %106, label %common.ret, label %ifend30

ifend30:                                          ; preds = %ifend27
  %107 = call fastcc i1 @Compiler_set_current_file(ptr nonnull %103, ptr %6)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_fields(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FieldNode_, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx2, align 4
  %6 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %6, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %6, i64 0, i32 1
  store i64 %5, ptr %memberidx1.i, align 4
  %7 = tail call ptr @malloc(i32 17)
  %memberidx.i.i = getelementptr inbounds %RangeIterator, ptr %7, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %RangeIterator, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i.i, align 4
  %8 = icmp slt i64 %5, 1
  br i1 %8, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i169 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx22 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx83 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx90 = getelementptr inbounds %Class, ptr %1, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassField____sl__.exit
  %9 = phi i64 [ 1, %for.body.lr.ph ], [ %273, %Array_ClassField____sl__.exit ]
  %current_field_offset.0319 = phi i64 [ %3, %for.body.lr.ph ], [ %current_field_offset.1, %Array_ClassField____sl__.exit ]
  %10 = phi i64 [ 0, %for.body.lr.ph ], [ %9, %Array_ClassField____sl__.exit ]
  %11 = load ptr, ptr %memberidx1, align 8
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %10
  %14 = load ptr, ptr %13, align 8
  %15 = tail call ptr @malloc(i32 49)
  %memberidx.i = getelementptr inbounds %ClassField, ptr %15, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 1
  %memberidx5 = getelementptr inbounds %ClassField, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %14, align 8
  %memberidx7 = getelementptr inbounds %IdentifierToken, ptr %16, i64 0, i32 2
  %17 = load ptr, ptr %memberidx7, align 8
  store ptr %17, ptr %memberidx5, align 8
  %18 = call fastcc i1 @is_operator_overload_name(ptr %17)
  br i1 %18, label %if.entry, label %ifend

common.ret.loopexit:                              ; preds = %ifend, %if.entry55
  store i64 %9, ptr %memberidx.i.i, align 4
  store i1 false, ptr %7, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %TypeChecker_error.exit272, %TypeChecker_error.exit243, %TypeChecker_error.exit225, %TypeChecker_error.exit194, %for.end
  ret void

for.end:                                          ; preds = %Array_ClassField____sl__.exit, %for.entry
  tail call void @free(ptr nonnull %7)
  br label %common.ret

if.entry:                                         ; preds = %for.body
  %19 = load ptr, ptr %memberidx5, align 8
  %20 = call ptr @malloc(i32 75)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %20, ptr noundef nonnull align 8 dereferenceable(75) @136, i64 75, i1 false)
  %21 = call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  %memberidx1.i.i164 = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  store i64 75, ptr %memberidx1.i.i164, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %21, i64 0, i32 2
  store i64 75, ptr %memberidx2.i.i, align 4
  %memberidx.i165 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i165, align 4
  %23 = add nuw i64 %22, 75
  %24 = trunc i64 %23 to i32
  %25 = call ptr @malloc(i32 %24)
  %26 = load ptr, ptr %19, align 8
  %27 = load i64, ptr %memberidx.i165, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %26, i64 %27, i1 false)
  %28 = getelementptr inbounds i8, ptr %25, i64 %27
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %28, ptr noundef nonnull align 8 dereferenceable(75) %20, i64 75, i1 false)
  %29 = call ptr @malloc(i32 24)
  store ptr %25, ptr %29, align 8
  %memberidx1.i.i167 = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  store i64 %23, ptr %memberidx1.i.i167, align 4
  %memberidx2.i.i168 = getelementptr inbounds %String, ptr %29, i64 0, i32 2
  store i64 %23, ptr %memberidx2.i.i168, align 4
  %30 = load ptr, ptr %14, align 8
  %memberidx11 = getelementptr inbounds %Token, ptr %30, i64 0, i32 1
  %31 = load ptr, ptr %memberidx11, align 8
  %32 = load ptr, ptr %memberidx.i169, align 8
  %memberidx1.i170 = getelementptr inbounds %Compiler, ptr %32, i64 0, i32 5
  %33 = load ptr, ptr %memberidx1.i170, align 8
  %34 = call ptr @malloc(i32 24)
  store i64 1, ptr %34, align 4
  %memberidx1.i.i171 = getelementptr inbounds %FloError, ptr %34, i64 0, i32 2
  store ptr %31, ptr %memberidx1.i.i171, align 8
  %memberidx2.i.i172 = getelementptr inbounds %FloError, ptr %34, i64 0, i32 1
  store ptr %29, ptr %memberidx2.i.i172, align 8
  %memberidx.i.i173 = getelementptr inbounds %Array_FloError_, ptr %33, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i.i173, align 4
  %36 = add i64 %35, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %33, i64 0, i32 2
  %37 = load i64, ptr %memberidx.i.i.i, align 4
  %38 = icmp slt i64 %37, %36
  %.pre = load ptr, ptr %33, align 8
  br i1 %38, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %39 = phi ptr [ %43, %while.body.i.i.i ], [ %.pre, %if.entry ]
  %40 = phi i64 [ %44, %while.body.i.i.i ], [ %37, %if.entry ]
  %41 = shl nuw i64 %40, 1
  store i64 %41, ptr %memberidx.i.i.i, align 4
  %42 = shl i64 %40, 4
  %43 = call ptr @realloc(ptr %39, i64 %42)
  store ptr %43, ptr %33, align 8
  %44 = load i64, ptr %memberidx.i.i.i, align 4
  %45 = icmp slt i64 %44, %36
  br i1 %45, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre350 = load i64, ptr %memberidx.i.i173, align 4
  %.pre376 = add nsw i64 %.pre350, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre376, %TypeChecker_error.exit.loopexit ], [ %36, %if.entry ]
  %46 = phi ptr [ %43, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %47 = phi i64 [ %.pre350, %TypeChecker_error.exit.loopexit ], [ %35, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i173, align 4
  %48 = getelementptr inbounds ptr, ptr %46, i64 %47
  store ptr %34, ptr %48, align 8
  br label %ifend

ifend:                                            ; preds = %for.body, %TypeChecker_error.exit
  %memberidx12 = getelementptr inbounds %ClassField, ptr %15, i64 0, i32 2
  %memberidx13 = getelementptr inbounds %FieldNode, ptr %14, i64 0, i32 1
  %49 = load i64, ptr %memberidx13, align 4
  store i64 %49, ptr %memberidx12, align 4
  %50 = tail call ptr @malloc(i32 24)
  %51 = load ptr, ptr %1, align 8
  store i64 1, ptr %50, align 4
  %memberidx1.i174 = getelementptr inbounds %PropId, ptr %50, i64 0, i32 1
  store ptr %51, ptr %memberidx1.i174, align 8
  %memberidx2.i175 = getelementptr inbounds %PropId, ptr %50, i64 0, i32 2
  store i64 %10, ptr %memberidx2.i175, align 4
  store ptr %50, ptr %15, align 8
  %memberidx16 = getelementptr inbounds %ClassField, ptr %15, i64 0, i32 4
  %memberidx17 = getelementptr inbounds %FieldNode, ptr %14, i64 0, i32 3
  %52 = load ptr, ptr %memberidx17, align 8
  %53 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %52)
  store ptr %53, ptr %memberidx16, align 8
  %memberidx18 = getelementptr inbounds %ClassField, ptr %15, i64 0, i32 5
  store i64 %current_field_offset.0319, ptr %memberidx18, align 4
  %54 = load ptr, ptr %memberidx.i169, align 8
  %memberidx1.i177 = getelementptr inbounds %Compiler, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx1.i177, align 8
  %memberidx2.i178 = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx2.i178, align 4
  %57 = icmp sgt i64 %56, 0
  br i1 %57, label %common.ret.loopexit, label %ifend21

ifend21:                                          ; preds = %ifend
  %58 = load ptr, ptr %memberidx22, align 8
  %59 = load ptr, ptr %memberidx5, align 8
  %60 = call fastcc i64 @Map_String_PropId__hash_fnc(ptr %59)
  %memberidx.i179 = getelementptr inbounds %Map_String_PropId_, ptr %58, i64 0, i32 1
  %61 = load i64, ptr %memberidx.i179, align 4
  %62 = urem i64 %60, %61
  %63 = load ptr, ptr %58, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %.not.i305 = icmp eq ptr %65, null
  br i1 %.not.i305, label %ifend26, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %ifend21
  %memberidx1.i.i181 = getelementptr inbounds %String, ptr %59, i64 0, i32 1
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre354.pre = load ptr, ptr %58, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre354.pre, i64 %hash.0.i306
  %.pre355.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre355.pre, null
  br i1 %.not22.i, label %ifend26, label %Map_String_PropId____getitem__.exit

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %66 = phi ptr [ %63, %while.body.i.lr.ph ], [ %76, %else.i ]
  %67 = phi i64 [ %61, %while.body.i.lr.ph ], [ %77, %else.i ]
  %68 = phi ptr [ %65, %while.body.i.lr.ph ], [ %81, %else.i ]
  %hash.0.i306 = phi i64 [ %62, %while.body.i.lr.ph ], [ %79, %else.i ]
  %69 = load ptr, ptr %68, align 8
  %memberidx.i.i180 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  %70 = load i64, ptr %memberidx.i.i180, align 4
  %71 = load i64, ptr %memberidx1.i.i181, align 4
  %.not.i.i = icmp eq i64 %70, %71
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %72 = load ptr, ptr %69, align 8
  %73 = load ptr, ptr %59, align 8
  %74 = call i64 @memcmp(ptr %72, ptr %73, i64 %70)
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre352 = load i64, ptr %memberidx.i179, align 4
  %.pre353 = load ptr, ptr %58, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %76 = phi ptr [ %.pre353, %ifend.i.i.else.i_crit_edge ], [ %66, %while.body.i ]
  %77 = phi i64 [ %.pre352, %ifend.i.i.else.i_crit_edge ], [ %67, %while.body.i ]
  %78 = add nuw i64 %hash.0.i306, 1
  %79 = urem i64 %78, %77
  %80 = getelementptr inbounds ptr, ptr %76, i64 %79
  %81 = load ptr, ptr %80, align 8
  %.not.i = icmp eq ptr %81, null
  br i1 %.not.i, label %ifend26, label %while.body.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre355.pre, i64 0, i32 1
  %82 = load ptr, ptr %memberidx10.i, align 8
  %.not = icmp eq ptr %82, null
  br i1 %.not, label %ifend26, label %if.entry24

if.entry24:                                       ; preds = %Map_String_PropId____getitem__.exit
  %memberidx27 = getelementptr inbounds %PropId, ptr %82, i64 0, i32 1
  %83 = load ptr, ptr %memberidx27, align 8
  %84 = load ptr, ptr %1, align 8
  %85 = icmp eq ptr %83, %84
  br i1 %85, label %if.entry29, label %ifend31

ifend26:                                          ; preds = %else.i, %ifend21, %while.end.i, %ifend41, %Map_String_PropId____getitem__.exit
  %memberidx54 = getelementptr inbounds %FieldNode, ptr %14, i64 0, i32 2
  %86 = load ptr, ptr %memberidx54, align 8
  %.not160 = icmp eq ptr %86, null
  br i1 %.not160, label %else56, label %if.entry55

if.entry29:                                       ; preds = %if.entry24
  store i64 %9, ptr %memberidx.i.i, align 4
  store i1 false, ptr %7, align 1
  %87 = load ptr, ptr %memberidx5, align 8
  %memberidx.i182 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  %88 = load i64, ptr %memberidx.i182, align 4
  %89 = trunc i64 %88 to i32
  %90 = add i32 %89, 1
  %91 = call ptr @malloc(i32 %90)
  %92 = load ptr, ptr %87, align 8
  %93 = load i64, ptr %memberidx.i182, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %91, ptr align 8 %92, i64 %93, i1 false)
  %94 = getelementptr inbounds i8, ptr %91, i64 %93
  store i8 0, ptr %94, align 1
  %memberidx33 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %95 = load ptr, ptr %memberidx33, align 8
  %memberidx.i183 = getelementptr inbounds %String, ptr %95, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i183, align 4
  %97 = trunc i64 %96 to i32
  %98 = add i32 %97, 1
  %99 = call ptr @malloc(i32 %98)
  %100 = load ptr, ptr %95, align 8
  %101 = load i64, ptr %memberidx.i183, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %99, ptr align 8 %100, i64 %101, i1 false)
  %102 = getelementptr inbounds i8, ptr %99, i64 %101
  store i8 0, ptr %102, align 1
  %103 = alloca ptr, align 8
  %104 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %103, ptr nonnull @137, ptr %91, ptr %99)
  %105 = load ptr, ptr %103, align 8
  %106 = tail call ptr @malloc(i32 24)
  store ptr %105, ptr %106, align 8
  %memberidx1.i184 = getelementptr inbounds %String, ptr %106, i64 0, i32 1
  store i64 %104, ptr %memberidx1.i184, align 4
  %memberidx2.i185 = getelementptr inbounds %String, ptr %106, i64 0, i32 2
  store i64 %104, ptr %memberidx2.i185, align 4
  tail call void @free(ptr %91)
  tail call void @free(ptr %99)
  %107 = load ptr, ptr %14, align 8
  %memberidx35 = getelementptr inbounds %Token, ptr %107, i64 0, i32 1
  %108 = load ptr, ptr %memberidx35, align 8
  %109 = load ptr, ptr %memberidx.i169, align 8
  %memberidx1.i187 = getelementptr inbounds %Compiler, ptr %109, i64 0, i32 5
  %110 = load ptr, ptr %memberidx1.i187, align 8
  %111 = call ptr @malloc(i32 24)
  store i64 1, ptr %111, align 4
  %memberidx1.i.i188 = getelementptr inbounds %FloError, ptr %111, i64 0, i32 2
  store ptr %108, ptr %memberidx1.i.i188, align 8
  %memberidx2.i.i189 = getelementptr inbounds %FloError, ptr %111, i64 0, i32 1
  store ptr %106, ptr %memberidx2.i.i189, align 8
  %memberidx.i.i190 = getelementptr inbounds %Array_FloError_, ptr %110, i64 0, i32 1
  %112 = load i64, ptr %memberidx.i.i190, align 4
  %113 = add i64 %112, 1
  %memberidx.i.i.i191 = getelementptr inbounds %Array_FloError_, ptr %110, i64 0, i32 2
  %114 = load i64, ptr %memberidx.i.i.i191, align 4
  %115 = icmp slt i64 %114, %113
  %.pre362 = load ptr, ptr %110, align 8
  br i1 %115, label %while.body.i.i.i193, label %TypeChecker_error.exit194

while.body.i.i.i193:                              ; preds = %if.entry29, %while.body.i.i.i193
  %116 = phi ptr [ %120, %while.body.i.i.i193 ], [ %.pre362, %if.entry29 ]
  %117 = phi i64 [ %121, %while.body.i.i.i193 ], [ %114, %if.entry29 ]
  %118 = shl nuw i64 %117, 1
  store i64 %118, ptr %memberidx.i.i.i191, align 4
  %119 = shl i64 %117, 4
  %120 = call ptr @realloc(ptr %116, i64 %119)
  store ptr %120, ptr %110, align 8
  %121 = load i64, ptr %memberidx.i.i.i191, align 4
  %122 = icmp slt i64 %121, %113
  br i1 %122, label %while.body.i.i.i193, label %TypeChecker_error.exit194.loopexit

TypeChecker_error.exit194.loopexit:               ; preds = %while.body.i.i.i193
  %.pre363 = load i64, ptr %memberidx.i.i190, align 4
  %.pre383 = add nsw i64 %.pre363, 1
  br label %TypeChecker_error.exit194

TypeChecker_error.exit194:                        ; preds = %if.entry29, %TypeChecker_error.exit194.loopexit
  %.pre-phi384 = phi i64 [ %.pre383, %TypeChecker_error.exit194.loopexit ], [ %113, %if.entry29 ]
  %123 = phi ptr [ %120, %TypeChecker_error.exit194.loopexit ], [ %.pre362, %if.entry29 ]
  %124 = phi i64 [ %.pre363, %TypeChecker_error.exit194.loopexit ], [ %112, %if.entry29 ]
  store i64 %.pre-phi384, ptr %memberidx.i.i190, align 4
  %125 = getelementptr inbounds ptr, ptr %123, i64 %124
  store ptr %111, ptr %125, align 8
  br label %common.ret

ifend31:                                          ; preds = %if.entry24
  %126 = load ptr, ptr %0, align 8
  %127 = load ptr, ptr %126, align 8
  %128 = load i64, ptr %83, align 4
  %129 = load ptr, ptr %127, align 8
  %130 = getelementptr inbounds ptr, ptr %129, i64 %128
  %131 = load ptr, ptr %130, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %131, i64 0, i32 3
  %132 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %83, i64 0, i32 2
  %133 = load i64, ptr %memberidx3.i.i.i, align 4
  %134 = load ptr, ptr %132, align 8
  %135 = getelementptr inbounds ptr, ptr %134, i64 %133
  %136 = load ptr, ptr %135, align 8
  %137 = load i64, ptr %82, align 4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %if.entry.i207, label %ifend.i211

if.entry.i207:                                    ; preds = %ifend31
  %memberidx1.i197 = getelementptr inbounds %Class, ptr %136, i64 0, i32 5
  %139 = load ptr, ptr %memberidx1.i197, align 8
  %memberidx2.i198 = getelementptr inbounds %PropId, ptr %82, i64 0, i32 2
  %140 = load i64, ptr %memberidx2.i198, align 4
  %141 = load ptr, ptr %139, align 8
  %142 = getelementptr inbounds ptr, ptr %141, i64 %140
  %143 = load ptr, ptr %142, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %143, i64 0, i32 4
  %memberidx3.i206 = getelementptr inbounds %ClassMethod, ptr %143, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i211:                                       ; preds = %ifend31
  %memberidx4.i = getelementptr inbounds %Class, ptr %136, i64 0, i32 4
  %144 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %82, i64 0, i32 2
  %145 = load i64, ptr %memberidx5.i, align 4
  %146 = load ptr, ptr %144, align 8
  %147 = getelementptr inbounds ptr, ptr %146, i64 %145
  %148 = load ptr, ptr %147, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %148, i64 0, i32 4
  %memberidx6.i210 = getelementptr inbounds %ClassField, ptr %148, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i207, %ifend.i211
  %common.ret.op.i196289.in = phi ptr [ %memberidx3.i, %if.entry.i207 ], [ %memberidx6.i, %ifend.i211 ]
  %common.ret.op.in.i202 = phi ptr [ %memberidx3.i206, %if.entry.i207 ], [ %memberidx6.i210, %ifend.i211 ]
  %common.ret.op.i196289 = load ptr, ptr %common.ret.op.i196289.in, align 8
  %common.ret.op.i203 = load i64, ptr %common.ret.op.in.i202, align 4
  %149 = load ptr, ptr %memberidx16, align 8
  %150 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i196289, ptr %149)
  br i1 %150, label %ifend41, label %if.entry39

if.entry39:                                       ; preds = %get_class_prop_visibility.exit
  store i64 %9, ptr %memberidx.i.i, align 4
  store i1 false, ptr %7, align 1
  %151 = load ptr, ptr %memberidx5, align 8
  %memberidx.i212 = getelementptr inbounds %String, ptr %151, i64 0, i32 1
  %152 = load i64, ptr %memberidx.i212, align 4
  %153 = trunc i64 %152 to i32
  %154 = add i32 %153, 1
  %155 = call ptr @malloc(i32 %154)
  %156 = load ptr, ptr %151, align 8
  %157 = load i64, ptr %memberidx.i212, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %155, ptr align 8 %156, i64 %157, i1 false)
  %158 = getelementptr inbounds i8, ptr %155, i64 %157
  store i8 0, ptr %158, align 1
  %memberidx43 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %159 = load ptr, ptr %memberidx43, align 8
  %memberidx.i213 = getelementptr inbounds %String, ptr %159, i64 0, i32 1
  %160 = load i64, ptr %memberidx.i213, align 4
  %161 = trunc i64 %160 to i32
  %162 = add i32 %161, 1
  %163 = call ptr @malloc(i32 %162)
  %164 = load ptr, ptr %159, align 8
  %165 = load i64, ptr %memberidx.i213, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %163, ptr align 8 %164, i64 %165, i1 false)
  %166 = getelementptr inbounds i8, ptr %163, i64 %165
  store i8 0, ptr %166, align 1
  %167 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i196289)
  %memberidx.i214 = getelementptr inbounds %String, ptr %167, i64 0, i32 1
  %168 = load i64, ptr %memberidx.i214, align 4
  %169 = trunc i64 %168 to i32
  %170 = add i32 %169, 1
  %171 = call ptr @malloc(i32 %170)
  %172 = load ptr, ptr %167, align 8
  %173 = load i64, ptr %memberidx.i214, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %171, ptr align 8 %172, i64 %173, i1 false)
  %174 = getelementptr inbounds i8, ptr %171, i64 %173
  store i8 0, ptr %174, align 1
  %175 = alloca ptr, align 8
  %176 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %175, ptr nonnull @138, ptr %155, ptr %163, ptr %171)
  %177 = load ptr, ptr %175, align 8
  %178 = tail call ptr @malloc(i32 24)
  store ptr %177, ptr %178, align 8
  %memberidx1.i215 = getelementptr inbounds %String, ptr %178, i64 0, i32 1
  store i64 %176, ptr %memberidx1.i215, align 4
  %memberidx2.i216 = getelementptr inbounds %String, ptr %178, i64 0, i32 2
  store i64 %176, ptr %memberidx2.i216, align 4
  tail call void @free(ptr %155)
  tail call void @free(ptr %163)
  tail call void @free(ptr %171)
  %179 = load ptr, ptr %14, align 8
  %memberidx45 = getelementptr inbounds %Token, ptr %179, i64 0, i32 1
  %180 = load ptr, ptr %memberidx45, align 8
  %181 = load ptr, ptr %memberidx.i169, align 8
  %memberidx1.i218 = getelementptr inbounds %Compiler, ptr %181, i64 0, i32 5
  %182 = load ptr, ptr %memberidx1.i218, align 8
  %183 = call ptr @malloc(i32 24)
  store i64 5, ptr %183, align 4
  %memberidx1.i.i219 = getelementptr inbounds %FloError, ptr %183, i64 0, i32 2
  store ptr %180, ptr %memberidx1.i.i219, align 8
  %memberidx2.i.i220 = getelementptr inbounds %FloError, ptr %183, i64 0, i32 1
  store ptr %178, ptr %memberidx2.i.i220, align 8
  %memberidx.i.i221 = getelementptr inbounds %Array_FloError_, ptr %182, i64 0, i32 1
  %184 = load i64, ptr %memberidx.i.i221, align 4
  %185 = add i64 %184, 1
  %memberidx.i.i.i222 = getelementptr inbounds %Array_FloError_, ptr %182, i64 0, i32 2
  %186 = load i64, ptr %memberidx.i.i.i222, align 4
  %187 = icmp slt i64 %186, %185
  %.pre356 = load ptr, ptr %182, align 8
  br i1 %187, label %while.body.i.i.i224, label %TypeChecker_error.exit225

while.body.i.i.i224:                              ; preds = %if.entry39, %while.body.i.i.i224
  %188 = phi ptr [ %192, %while.body.i.i.i224 ], [ %.pre356, %if.entry39 ]
  %189 = phi i64 [ %193, %while.body.i.i.i224 ], [ %186, %if.entry39 ]
  %190 = shl nuw i64 %189, 1
  store i64 %190, ptr %memberidx.i.i.i222, align 4
  %191 = shl i64 %189, 4
  %192 = call ptr @realloc(ptr %188, i64 %191)
  store ptr %192, ptr %182, align 8
  %193 = load i64, ptr %memberidx.i.i.i222, align 4
  %194 = icmp slt i64 %193, %185
  br i1 %194, label %while.body.i.i.i224, label %TypeChecker_error.exit225.loopexit

TypeChecker_error.exit225.loopexit:               ; preds = %while.body.i.i.i224
  %.pre357 = load i64, ptr %memberidx.i.i221, align 4
  %.pre387 = add nsw i64 %.pre357, 1
  br label %TypeChecker_error.exit225

TypeChecker_error.exit225:                        ; preds = %if.entry39, %TypeChecker_error.exit225.loopexit
  %.pre-phi388 = phi i64 [ %.pre387, %TypeChecker_error.exit225.loopexit ], [ %185, %if.entry39 ]
  %195 = phi ptr [ %192, %TypeChecker_error.exit225.loopexit ], [ %.pre356, %if.entry39 ]
  %196 = phi i64 [ %.pre357, %TypeChecker_error.exit225.loopexit ], [ %184, %if.entry39 ]
  store i64 %.pre-phi388, ptr %memberidx.i.i221, align 4
  %197 = getelementptr inbounds ptr, ptr %195, i64 %196
  store ptr %183, ptr %197, align 8
  br label %common.ret

ifend41:                                          ; preds = %get_class_prop_visibility.exit
  %198 = load i64, ptr %memberidx12, align 4
  %.not161 = icmp eq i64 %198, %common.ret.op.i203
  br i1 %.not161, label %ifend26, label %if.entry47

if.entry47:                                       ; preds = %ifend41
  store i64 %9, ptr %memberidx.i.i, align 4
  store i1 false, ptr %7, align 1
  %199 = load ptr, ptr %memberidx5, align 8
  %memberidx.i226 = getelementptr inbounds %String, ptr %199, i64 0, i32 1
  %200 = load i64, ptr %memberidx.i226, align 4
  %201 = trunc i64 %200 to i32
  %202 = add i32 %201, 1
  %203 = call ptr @malloc(i32 %202)
  %204 = load ptr, ptr %199, align 8
  %205 = load i64, ptr %memberidx.i226, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %203, ptr align 8 %204, i64 %205, i1 false)
  %206 = getelementptr inbounds i8, ptr %203, i64 %205
  store i8 0, ptr %206, align 1
  %memberidx51 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %207 = load ptr, ptr %memberidx51, align 8
  %memberidx.i227 = getelementptr inbounds %String, ptr %207, i64 0, i32 1
  %208 = load i64, ptr %memberidx.i227, align 4
  %209 = trunc i64 %208 to i32
  %210 = add i32 %209, 1
  %211 = call ptr @malloc(i32 %210)
  %212 = load ptr, ptr %207, align 8
  %213 = load i64, ptr %memberidx.i227, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %211, ptr align 8 %212, i64 %213, i1 false)
  %214 = getelementptr inbounds i8, ptr %211, i64 %213
  store i8 0, ptr %214, align 1
  switch i64 %common.ret.op.i203, label %ifend3.i [
    i64 1, label %if.entry.i230
    i64 2, label %if.entry1.i
  ]

if.entry.i230:                                    ; preds = %if.entry47
  %215 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %215, ptr noundef nonnull align 8 dereferenceable(7) @51, i64 7, i1 false)
  %216 = call ptr @malloc(i32 24)
  store ptr %215, ptr %216, align 8
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry47
  %217 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %217, ptr noundef nonnull align 8 dereferenceable(6) @52, i64 6, i1 false)
  %218 = call ptr @malloc(i32 24)
  store ptr %217, ptr %218, align 8
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry47
  %219 = call ptr @malloc(i32 9)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %219, ptr noundef nonnull align 8 dereferenceable(9) @53, i64 9, i1 false)
  %220 = call ptr @malloc(i32 24)
  store ptr %219, ptr %220, align 8
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i230, %if.entry1.i, %ifend3.i
  %.sink420 = phi ptr [ %216, %if.entry.i230 ], [ %218, %if.entry1.i ], [ %220, %ifend3.i ]
  %.sink419 = phi i64 [ 7, %if.entry.i230 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %.off0 = phi i32 [ 8, %if.entry.i230 ], [ 7, %if.entry1.i ], [ 10, %ifend3.i ]
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %.sink420, i64 0, i32 1
  store i64 %.sink419, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i229 = getelementptr inbounds %String, ptr %.sink420, i64 0, i32 2
  store i64 %.sink419, ptr %memberidx2.i.i.i229, align 4
  %memberidx.i232 = getelementptr inbounds %String, ptr %.sink420, i64 0, i32 1
  %221 = call ptr @malloc(i32 %.off0)
  %222 = load ptr, ptr %.sink420, align 8
  %223 = load i64, ptr %memberidx.i232, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %221, ptr align 8 %222, i64 %223, i1 false)
  %224 = getelementptr inbounds i8, ptr %221, i64 %223
  store i8 0, ptr %224, align 1
  %225 = alloca ptr, align 8
  %226 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %225, ptr nonnull @139, ptr nonnull %203, ptr nonnull %211, ptr %221)
  %227 = load ptr, ptr %225, align 8
  %228 = tail call ptr @malloc(i32 24)
  store ptr %227, ptr %228, align 8
  %memberidx1.i233 = getelementptr inbounds %String, ptr %228, i64 0, i32 1
  store i64 %226, ptr %memberidx1.i233, align 4
  %memberidx2.i234 = getelementptr inbounds %String, ptr %228, i64 0, i32 2
  store i64 %226, ptr %memberidx2.i234, align 4
  tail call void @free(ptr nonnull %203)
  tail call void @free(ptr nonnull %211)
  tail call void @free(ptr %221)
  %229 = load ptr, ptr %14, align 8
  %memberidx53 = getelementptr inbounds %Token, ptr %229, i64 0, i32 1
  %230 = load ptr, ptr %memberidx53, align 8
  %231 = load ptr, ptr %memberidx.i169, align 8
  %memberidx1.i236 = getelementptr inbounds %Compiler, ptr %231, i64 0, i32 5
  %232 = load ptr, ptr %memberidx1.i236, align 8
  %233 = call ptr @malloc(i32 24)
  store i64 4, ptr %233, align 4
  %memberidx1.i.i237 = getelementptr inbounds %FloError, ptr %233, i64 0, i32 2
  store ptr %230, ptr %memberidx1.i.i237, align 8
  %memberidx2.i.i238 = getelementptr inbounds %FloError, ptr %233, i64 0, i32 1
  store ptr %228, ptr %memberidx2.i.i238, align 8
  %memberidx.i.i239 = getelementptr inbounds %Array_FloError_, ptr %232, i64 0, i32 1
  %234 = load i64, ptr %memberidx.i.i239, align 4
  %235 = add i64 %234, 1
  %memberidx.i.i.i240 = getelementptr inbounds %Array_FloError_, ptr %232, i64 0, i32 2
  %236 = load i64, ptr %memberidx.i.i.i240, align 4
  %237 = icmp slt i64 %236, %235
  %.pre359 = load ptr, ptr %232, align 8
  br i1 %237, label %while.body.i.i.i242, label %TypeChecker_error.exit243

while.body.i.i.i242:                              ; preds = %dump_access.exit, %while.body.i.i.i242
  %238 = phi ptr [ %242, %while.body.i.i.i242 ], [ %.pre359, %dump_access.exit ]
  %239 = phi i64 [ %243, %while.body.i.i.i242 ], [ %236, %dump_access.exit ]
  %240 = shl nuw i64 %239, 1
  store i64 %240, ptr %memberidx.i.i.i240, align 4
  %241 = shl i64 %239, 4
  %242 = call ptr @realloc(ptr %238, i64 %241)
  store ptr %242, ptr %232, align 8
  %243 = load i64, ptr %memberidx.i.i.i240, align 4
  %244 = icmp slt i64 %243, %235
  br i1 %244, label %while.body.i.i.i242, label %TypeChecker_error.exit243.loopexit

TypeChecker_error.exit243.loopexit:               ; preds = %while.body.i.i.i242
  %.pre360 = load i64, ptr %memberidx.i.i239, align 4
  %.pre385 = add nsw i64 %.pre360, 1
  br label %TypeChecker_error.exit243

TypeChecker_error.exit243:                        ; preds = %dump_access.exit, %TypeChecker_error.exit243.loopexit
  %.pre-phi386 = phi i64 [ %.pre385, %TypeChecker_error.exit243.loopexit ], [ %235, %dump_access.exit ]
  %245 = phi ptr [ %242, %TypeChecker_error.exit243.loopexit ], [ %.pre359, %dump_access.exit ]
  %246 = phi i64 [ %.pre360, %TypeChecker_error.exit243.loopexit ], [ %234, %dump_access.exit ]
  store i64 %.pre-phi386, ptr %memberidx.i.i239, align 4
  %247 = getelementptr inbounds ptr, ptr %245, i64 %246
  store ptr %233, ptr %247, align 8
  br label %common.ret

if.entry55:                                       ; preds = %ifend26
  %memberidx58 = getelementptr inbounds %ClassField, ptr %15, i64 0, i32 6
  %248 = load ptr, ptr %memberidx16, align 8
  %249 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %248, ptr nonnull %86)
  store ptr %249, ptr %memberidx58, align 8
  %250 = load ptr, ptr %memberidx.i169, align 8
  %memberidx1.i245 = getelementptr inbounds %Compiler, ptr %250, i64 0, i32 5
  %251 = load ptr, ptr %memberidx1.i245, align 8
  %memberidx2.i246 = getelementptr inbounds %Array_FloError_, ptr %251, i64 0, i32 1
  %252 = load i64, ptr %memberidx2.i246, align 4
  %253 = icmp sgt i64 %252, 0
  br i1 %253, label %common.ret.loopexit, label %ifend63

else56:                                           ; preds = %ifend26
  store i1 false, ptr %memberidx.i, align 1
  %254 = load ptr, ptr %memberidx22, align 8
  %255 = load ptr, ptr %memberidx5, align 8
  %256 = load ptr, ptr %15, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %254, ptr %255, ptr %256)
  %257 = add nsw i64 %current_field_offset.0319, 1
  br label %ifend57

ifend57:                                          ; preds = %else56, %ifend79
  %current_field_offset.1 = phi i64 [ %current_field_offset.0319, %ifend79 ], [ %257, %else56 ]
  %258 = load ptr, ptr %memberidx90, align 8
  %memberidx.i247 = getelementptr inbounds %Array_ClassField_, ptr %258, i64 0, i32 1
  %259 = load i64, ptr %memberidx.i247, align 4
  %260 = add i64 %259, 1
  %memberidx.i.i248 = getelementptr inbounds %Array_ClassField_, ptr %258, i64 0, i32 2
  %261 = load i64, ptr %memberidx.i.i248, align 4
  %262 = icmp slt i64 %261, %260
  %.pre371 = load ptr, ptr %258, align 8
  br i1 %262, label %while.body.i.i, label %Array_ClassField____sl__.exit

while.body.i.i:                                   ; preds = %ifend57, %while.body.i.i
  %263 = phi ptr [ %267, %while.body.i.i ], [ %.pre371, %ifend57 ]
  %264 = phi i64 [ %268, %while.body.i.i ], [ %261, %ifend57 ]
  %265 = shl nuw i64 %264, 1
  store i64 %265, ptr %memberidx.i.i248, align 4
  %266 = shl i64 %264, 4
  %267 = call ptr @realloc(ptr %263, i64 %266)
  store ptr %267, ptr %258, align 8
  %268 = load i64, ptr %memberidx.i.i248, align 4
  %269 = icmp slt i64 %268, %260
  br i1 %269, label %while.body.i.i, label %Array_ClassField____sl__.exit.loopexit

Array_ClassField____sl__.exit.loopexit:           ; preds = %while.body.i.i
  %.pre372 = load i64, ptr %memberidx.i247, align 4
  %.pre377 = add nsw i64 %.pre372, 1
  br label %Array_ClassField____sl__.exit

Array_ClassField____sl__.exit:                    ; preds = %ifend57, %Array_ClassField____sl__.exit.loopexit
  %.pre-phi378 = phi i64 [ %.pre377, %Array_ClassField____sl__.exit.loopexit ], [ %260, %ifend57 ]
  %270 = phi ptr [ %267, %Array_ClassField____sl__.exit.loopexit ], [ %.pre371, %ifend57 ]
  %271 = phi i64 [ %.pre372, %Array_ClassField____sl__.exit.loopexit ], [ %259, %ifend57 ]
  store i64 %.pre-phi378, ptr %memberidx.i247, align 4
  %272 = getelementptr inbounds ptr, ptr %270, i64 %271
  store ptr %15, ptr %272, align 8
  %.not389 = icmp slt i64 %9, %5
  %273 = add nuw nsw i64 %9, 1
  br i1 %.not389, label %for.body, label %for.end

ifend63:                                          ; preds = %if.entry55
  %274 = load ptr, ptr %memberidx16, align 8
  %memberidx66 = getelementptr inbounds %Expression, ptr %249, i64 0, i32 3
  %275 = load ptr, ptr %memberidx66, align 8
  %276 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %274, ptr %275)
  br i1 %276, label %ifend69, label %if.entry67

if.entry67:                                       ; preds = %ifend63
  %277 = load ptr, ptr %memberidx16, align 8
  %278 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %277)
  %memberidx.i249 = getelementptr inbounds %String, ptr %278, i64 0, i32 1
  %279 = load i64, ptr %memberidx.i249, align 4
  %280 = trunc i64 %279 to i32
  %281 = add i32 %280, 1
  %282 = call ptr @malloc(i32 %281)
  %283 = load ptr, ptr %278, align 8
  %284 = load i64, ptr %memberidx.i249, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %282, ptr align 8 %283, i64 %284, i1 false)
  %285 = getelementptr inbounds i8, ptr %282, i64 %284
  store i8 0, ptr %285, align 1
  %286 = load ptr, ptr %memberidx58, align 8
  %memberidx72 = getelementptr inbounds %Expression, ptr %286, i64 0, i32 3
  %287 = load ptr, ptr %memberidx72, align 8
  %288 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %287)
  %memberidx.i250 = getelementptr inbounds %String, ptr %288, i64 0, i32 1
  %289 = load i64, ptr %memberidx.i250, align 4
  %290 = trunc i64 %289 to i32
  %291 = add i32 %290, 1
  %292 = call ptr @malloc(i32 %291)
  %293 = load ptr, ptr %288, align 8
  %294 = load i64, ptr %memberidx.i250, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %292, ptr align 8 %293, i64 %294, i1 false)
  %295 = getelementptr inbounds i8, ptr %292, i64 %294
  store i8 0, ptr %295, align 1
  %296 = alloca ptr, align 8
  %297 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %296, ptr nonnull @140, ptr %282, ptr %292)
  %298 = load ptr, ptr %296, align 8
  %299 = tail call ptr @malloc(i32 24)
  store ptr %298, ptr %299, align 8
  %memberidx1.i251 = getelementptr inbounds %String, ptr %299, i64 0, i32 1
  store i64 %297, ptr %memberidx1.i251, align 4
  %memberidx2.i252 = getelementptr inbounds %String, ptr %299, i64 0, i32 2
  store i64 %297, ptr %memberidx2.i252, align 4
  tail call void @free(ptr %282)
  tail call void @free(ptr %292)
  %300 = load ptr, ptr %memberidx54, align 8
  %301 = load ptr, ptr %300, align 8
  %302 = load ptr, ptr %memberidx.i169, align 8
  %memberidx1.i254 = getelementptr inbounds %Compiler, ptr %302, i64 0, i32 5
  %303 = load ptr, ptr %memberidx1.i254, align 8
  %304 = call ptr @malloc(i32 24)
  store i64 5, ptr %304, align 4
  %memberidx1.i.i255 = getelementptr inbounds %FloError, ptr %304, i64 0, i32 2
  store ptr %301, ptr %memberidx1.i.i255, align 8
  %memberidx2.i.i256 = getelementptr inbounds %FloError, ptr %304, i64 0, i32 1
  store ptr %299, ptr %memberidx2.i.i256, align 8
  %memberidx.i.i257 = getelementptr inbounds %Array_FloError_, ptr %303, i64 0, i32 1
  %305 = load i64, ptr %memberidx.i.i257, align 4
  %306 = add i64 %305, 1
  %memberidx.i.i.i258 = getelementptr inbounds %Array_FloError_, ptr %303, i64 0, i32 2
  %307 = load i64, ptr %memberidx.i.i.i258, align 4
  %308 = icmp slt i64 %307, %306
  %.pre365 = load ptr, ptr %303, align 8
  br i1 %308, label %while.body.i.i.i260, label %TypeChecker_error.exit261

while.body.i.i.i260:                              ; preds = %if.entry67, %while.body.i.i.i260
  %309 = phi ptr [ %313, %while.body.i.i.i260 ], [ %.pre365, %if.entry67 ]
  %310 = phi i64 [ %314, %while.body.i.i.i260 ], [ %307, %if.entry67 ]
  %311 = shl nuw i64 %310, 1
  store i64 %311, ptr %memberidx.i.i.i258, align 4
  %312 = shl i64 %310, 4
  %313 = call ptr @realloc(ptr %309, i64 %312)
  store ptr %313, ptr %303, align 8
  %314 = load i64, ptr %memberidx.i.i.i258, align 4
  %315 = icmp slt i64 %314, %306
  br i1 %315, label %while.body.i.i.i260, label %TypeChecker_error.exit261.loopexit

TypeChecker_error.exit261.loopexit:               ; preds = %while.body.i.i.i260
  %.pre366 = load i64, ptr %memberidx.i.i257, align 4
  %.pre381 = add nsw i64 %.pre366, 1
  br label %TypeChecker_error.exit261

TypeChecker_error.exit261:                        ; preds = %if.entry67, %TypeChecker_error.exit261.loopexit
  %.pre-phi382 = phi i64 [ %.pre381, %TypeChecker_error.exit261.loopexit ], [ %306, %if.entry67 ]
  %316 = phi ptr [ %313, %TypeChecker_error.exit261.loopexit ], [ %.pre365, %if.entry67 ]
  %317 = phi i64 [ %.pre366, %TypeChecker_error.exit261.loopexit ], [ %305, %if.entry67 ]
  store i64 %.pre-phi382, ptr %memberidx.i.i257, align 4
  %318 = getelementptr inbounds ptr, ptr %316, i64 %317
  store ptr %304, ptr %318, align 8
  br label %ifend69

ifend69:                                          ; preds = %ifend63, %TypeChecker_error.exit261
  %319 = load ptr, ptr %memberidx58, align 8
  %memberidx76 = getelementptr inbounds %Expression, ptr %319, i64 0, i32 1
  %320 = load i1, ptr %memberidx76, align 1
  br i1 %320, label %ifend79, label %if.entry77

if.entry77:                                       ; preds = %ifend69
  store i64 %9, ptr %memberidx.i.i, align 4
  store i1 false, ptr %7, align 1
  %321 = call ptr @malloc(i32 45)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %321, ptr noundef nonnull align 8 dereferenceable(45) @141, i64 45, i1 false)
  %322 = call ptr @malloc(i32 24)
  store ptr %321, ptr %322, align 8
  %memberidx1.i.i262 = getelementptr inbounds %String, ptr %322, i64 0, i32 1
  store i64 45, ptr %memberidx1.i.i262, align 4
  %memberidx2.i.i263 = getelementptr inbounds %String, ptr %322, i64 0, i32 2
  store i64 45, ptr %memberidx2.i.i263, align 4
  %323 = load ptr, ptr %memberidx54, align 8
  %324 = load ptr, ptr %323, align 8
  %325 = load ptr, ptr %memberidx.i169, align 8
  %memberidx1.i265 = getelementptr inbounds %Compiler, ptr %325, i64 0, i32 5
  %326 = load ptr, ptr %memberidx1.i265, align 8
  %327 = call ptr @malloc(i32 24)
  store i64 4, ptr %327, align 4
  %memberidx1.i.i266 = getelementptr inbounds %FloError, ptr %327, i64 0, i32 2
  store ptr %324, ptr %memberidx1.i.i266, align 8
  %memberidx2.i.i267 = getelementptr inbounds %FloError, ptr %327, i64 0, i32 1
  store ptr %322, ptr %memberidx2.i.i267, align 8
  %memberidx.i.i268 = getelementptr inbounds %Array_FloError_, ptr %326, i64 0, i32 1
  %328 = load i64, ptr %memberidx.i.i268, align 4
  %329 = add i64 %328, 1
  %memberidx.i.i.i269 = getelementptr inbounds %Array_FloError_, ptr %326, i64 0, i32 2
  %330 = load i64, ptr %memberidx.i.i.i269, align 4
  %331 = icmp slt i64 %330, %329
  %.pre368 = load ptr, ptr %326, align 8
  br i1 %331, label %while.body.i.i.i271, label %TypeChecker_error.exit272

while.body.i.i.i271:                              ; preds = %if.entry77, %while.body.i.i.i271
  %332 = phi ptr [ %336, %while.body.i.i.i271 ], [ %.pre368, %if.entry77 ]
  %333 = phi i64 [ %337, %while.body.i.i.i271 ], [ %330, %if.entry77 ]
  %334 = shl nuw i64 %333, 1
  store i64 %334, ptr %memberidx.i.i.i269, align 4
  %335 = shl i64 %333, 4
  %336 = call ptr @realloc(ptr %332, i64 %335)
  store ptr %336, ptr %326, align 8
  %337 = load i64, ptr %memberidx.i.i.i269, align 4
  %338 = icmp slt i64 %337, %329
  br i1 %338, label %while.body.i.i.i271, label %TypeChecker_error.exit272.loopexit

TypeChecker_error.exit272.loopexit:               ; preds = %while.body.i.i.i271
  %.pre369 = load i64, ptr %memberidx.i.i268, align 4
  %.pre379 = add nsw i64 %.pre369, 1
  br label %TypeChecker_error.exit272

TypeChecker_error.exit272:                        ; preds = %if.entry77, %TypeChecker_error.exit272.loopexit
  %.pre-phi380 = phi i64 [ %.pre379, %TypeChecker_error.exit272.loopexit ], [ %329, %if.entry77 ]
  %339 = phi ptr [ %336, %TypeChecker_error.exit272.loopexit ], [ %.pre368, %if.entry77 ]
  %340 = phi i64 [ %.pre369, %TypeChecker_error.exit272.loopexit ], [ %328, %if.entry77 ]
  store i64 %.pre-phi380, ptr %memberidx.i.i268, align 4
  %341 = getelementptr inbounds ptr, ptr %339, i64 %340
  store ptr %327, ptr %341, align 8
  br label %common.ret

ifend79:                                          ; preds = %ifend69
  store i1 true, ptr %memberidx.i, align 1
  %342 = load ptr, ptr %memberidx83, align 8
  %343 = load ptr, ptr %memberidx5, align 8
  %344 = load ptr, ptr %15, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %342, ptr %343, ptr %344)
  br label %ifend57
}

define internal fastcc ptr @TypeChecker_check_range_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %RangeExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx1 = getelementptr inbounds %RangeExpressionNode, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %6)
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %8 = load ptr, ptr %memberidx2, align 8
  %9 = load i64, ptr %8, align 4
  %10 = icmp eq i64 %9, 6
  %memberidx4 = getelementptr inbounds %Expression, ptr %7, i64 0, i32 3
  %11 = load ptr, ptr %memberidx4, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 6
  %14 = and i1 %10, %13
  br i1 %14, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_error.exit, %if.entry
  %common.ret.op = phi ptr [ %15, %if.entry ], [ %5, %TypeChecker_error.exit ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %15 = tail call ptr @malloc(i32 41)
  %16 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %16, ptr noundef nonnull align 8 dereferenceable(5) @221, i64 5, i1 false)
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %17, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i, align 4
  %18 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %17)
  store i64 8, ptr %15, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 17, ptr %memberidx.i.i, align 4
  %memberidx1.i.i26 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i26, align 1
  %memberidx.i = getelementptr inbounds %RangeExpression, ptr %15, i64 0, i32 4
  store ptr %5, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %RangeExpression, ptr %15, i64 0, i32 5
  store ptr %7, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %18, ptr %memberidx2.i, align 8
  br label %common.ret

ifend:                                            ; preds = %2
  %19 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %8)
  %memberidx.i27 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i27, align 4
  %21 = trunc i64 %20 to i32
  %22 = add i32 %21, 1
  %23 = tail call ptr @malloc(i32 %22)
  %24 = load ptr, ptr %19, align 8
  %25 = load i64, ptr %memberidx.i27, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 8 %24, i64 %25, i1 false)
  %26 = getelementptr inbounds i8, ptr %23, i64 %25
  store i8 0, ptr %26, align 1
  %27 = load ptr, ptr %memberidx4, align 8
  %28 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %27)
  %memberidx.i28 = getelementptr inbounds %String, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx.i28, align 4
  %30 = trunc i64 %29 to i32
  %31 = add i32 %30, 1
  %32 = tail call ptr @malloc(i32 %31)
  %33 = load ptr, ptr %28, align 8
  %34 = load i64, ptr %memberidx.i28, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %32, ptr align 8 %33, i64 %34, i1 false)
  %35 = getelementptr inbounds i8, ptr %32, i64 %34
  store i8 0, ptr %35, align 1
  %36 = alloca ptr, align 8
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %36, ptr nonnull @222, ptr %23, ptr %32)
  %38 = load ptr, ptr %36, align 8
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i29 = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i29, align 4
  %memberidx2.i30 = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i30, align 4
  tail call void @free(ptr %23)
  tail call void @free(ptr %32)
  %40 = load ptr, ptr %memberidx, align 8
  %41 = load ptr, ptr %40, align 8
  %42 = load ptr, ptr %memberidx1, align 8
  %43 = load ptr, ptr %42, align 8
  %44 = call ptr @malloc(i32 32)
  %45 = load i64, ptr %41, align 4
  %memberidx1.i31 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i31, align 4
  %memberidx2.i32 = getelementptr inbounds %FloRange, ptr %41, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i32, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 3
  %48 = load i64, ptr %memberidx3.i, align 4
  store i64 %45, ptr %44, align 4
  %memberidx1.i.i33 = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i33, align 4
  %memberidx2.i.i34 = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %47, ptr %memberidx2.i.i34, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %48, ptr %memberidx3.i.i, align 4
  %memberidx.i35 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %49 = load ptr, ptr %memberidx.i35, align 8
  %memberidx1.i36 = getelementptr inbounds %Compiler, ptr %49, i64 0, i32 5
  %50 = load ptr, ptr %memberidx1.i36, align 8
  %51 = call ptr @malloc(i32 24)
  store i64 5, ptr %51, align 4
  %memberidx1.i.i37 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 2
  store ptr %44, ptr %memberidx1.i.i37, align 8
  %memberidx2.i.i38 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 1
  store ptr %39, ptr %memberidx2.i.i38, align 8
  %memberidx.i.i39 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i.i39, align 4
  %53 = add i64 %52, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 2
  %54 = load i64, ptr %memberidx.i.i.i, align 4
  %55 = icmp slt i64 %54, %53
  %.pre = load ptr, ptr %50, align 8
  br i1 %55, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %ifend, %while.body.i.i.i
  %56 = phi ptr [ %60, %while.body.i.i.i ], [ %.pre, %ifend ]
  %57 = phi i64 [ %61, %while.body.i.i.i ], [ %54, %ifend ]
  %58 = shl nuw i64 %57, 1
  store i64 %58, ptr %memberidx.i.i.i, align 4
  %59 = shl i64 %57, 4
  %60 = call ptr @realloc(ptr %56, i64 %59)
  store ptr %60, ptr %50, align 8
  %61 = load i64, ptr %memberidx.i.i.i, align 4
  %62 = icmp slt i64 %61, %53
  br i1 %62, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre1 = load i64, ptr %memberidx.i.i39, align 4
  %.pre3 = add nsw i64 %.pre1, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %ifend, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre3, %TypeChecker_error.exit.loopexit ], [ %53, %ifend ]
  %63 = phi ptr [ %60, %TypeChecker_error.exit.loopexit ], [ %.pre, %ifend ]
  %64 = phi i64 [ %.pre1, %TypeChecker_error.exit.loopexit ], [ %52, %ifend ]
  store i64 %.pre-phi, ptr %memberidx.i.i39, align 4
  %65 = getelementptr inbounds ptr, ptr %63, i64 %64
  store ptr %51, ptr %65, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_check_module_import(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Array_Token__, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx2, align 4
  %6 = icmp sgt i64 %5, 0
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry53, %else54, %for.end, %ifend, %TypeChecker_error.exit251, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %2
  %7 = tail call ptr @malloc(i32 49)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(49) %7, ptr noundef nonnull align 8 dereferenceable(49) @107, i64 49, i1 false)
  %8 = tail call ptr @malloc(i32 24)
  store ptr %7, ptr %8, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %8, i64 0, i32 1
  store i64 49, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %8, i64 0, i32 2
  store i64 49, ptr %memberidx2.i.i, align 4
  %9 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %11 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %11, i64 0, i32 5
  %12 = load ptr, ptr %memberidx1.i, align 8
  %13 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %13, align 4
  %memberidx1.i.i112 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 2
  store ptr %10, ptr %memberidx1.i.i112, align 8
  %memberidx2.i.i113 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 1
  store ptr %8, ptr %memberidx2.i.i113, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %14 = load i64, ptr %memberidx.i.i, align 4
  %15 = add i64 %14, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 2
  %16 = load i64, ptr %memberidx.i.i.i, align 4
  %17 = icmp slt i64 %16, %15
  %.pre351 = load ptr, ptr %12, align 8
  br i1 %17, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry, %while.body.i.i.i
  %18 = phi ptr [ %22, %while.body.i.i.i ], [ %.pre351, %if.entry ]
  %19 = phi i64 [ %23, %while.body.i.i.i ], [ %16, %if.entry ]
  %20 = shl nuw i64 %19, 1
  store i64 %20, ptr %memberidx.i.i.i, align 4
  %21 = shl i64 %19, 4
  %22 = tail call ptr @realloc(ptr %18, i64 %21)
  store ptr %22, ptr %12, align 8
  %23 = load i64, ptr %memberidx.i.i.i, align 4
  %24 = icmp slt i64 %23, %15
  br i1 %24, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre352 = load i64, ptr %memberidx.i.i, align 4
  %.pre366 = add nsw i64 %.pre352, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre366, %TypeChecker_error.exit.loopexit ], [ %15, %if.entry ]
  %25 = phi ptr [ %22, %TypeChecker_error.exit.loopexit ], [ %.pre351, %if.entry ]
  %26 = phi i64 [ %.pre352, %TypeChecker_error.exit.loopexit ], [ %14, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %27 = getelementptr inbounds ptr, ptr %25, i64 %26
  store ptr %13, ptr %27, align 8
  br label %common.ret

ifend:                                            ; preds = %2
  %memberidx6 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 2
  %28 = load ptr, ptr %memberidx6, align 8
  %memberidx8 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %29 = load ptr, ptr %memberidx8, align 8
  %30 = tail call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %28, ptr %29)
  %memberidx.i114 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %31 = load ptr, ptr %memberidx.i114, align 8
  %memberidx1.i115 = getelementptr inbounds %Compiler, ptr %31, i64 0, i32 5
  %32 = load ptr, ptr %memberidx1.i115, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i, align 4
  %34 = icmp sgt i64 %33, 0
  br i1 %34, label %common.ret, label %ifend11

ifend11:                                          ; preds = %ifend
  %35 = load ptr, ptr %0, align 8
  %memberidx13 = getelementptr inbounds %Module, ptr %30, i64 0, i32 5
  %36 = load ptr, ptr %memberidx13, align 8
  %37 = load ptr, ptr %35, align 8
  %38 = load i64, ptr %36, align 4
  %39 = load ptr, ptr %37, align 8
  %40 = getelementptr inbounds ptr, ptr %39, i64 %38
  %41 = load ptr, ptr %40, align 8
  %memberidx2.i116 = getelementptr inbounds %Module, ptr %41, i64 0, i32 7
  %42 = load ptr, ptr %memberidx2.i116, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %36, i64 0, i32 1
  %43 = load i64, ptr %memberidx3.i, align 4
  %44 = load ptr, ptr %42, align 8
  %45 = getelementptr inbounds ptr, ptr %44, i64 %43
  %46 = load ptr, ptr %45, align 8
  %47 = load ptr, ptr %1, align 8
  %memberidx15 = getelementptr inbounds %Array_ImportClause_, ptr %47, i64 0, i32 1
  %48 = load i64, ptr %memberidx15, align 4
  %49 = icmp sgt i64 %48, 0
  br i1 %49, label %for.entry, label %else17

else17:                                           ; preds = %ifend11
  %memberidx52 = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 2
  %50 = load ptr, ptr %memberidx52, align 8
  %.not = icmp eq ptr %50, null
  br i1 %.not, label %else54, label %if.entry53

for.entry:                                        ; preds = %ifend11
  %51 = tail call ptr @malloc(i32 25)
  %52 = load ptr, ptr %47, align 8
  %53 = load i64, ptr %memberidx15, align 4
  store i1 false, ptr %51, align 1
  %memberidx1.i.i118 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %51, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i118, align 4
  %memberidx2.i.i119 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %51, i64 0, i32 3
  store ptr %52, ptr %memberidx2.i.i119, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %51, i64 0, i32 2
  store i64 %53, ptr %memberidx3.i.i, align 4
  br label %for.next

for.next:                                         ; preds = %for.entry, %for.next.backedge, %if.entry53
  %54 = load i64, ptr %memberidx1.i.i118, align 4
  %55 = add nsw i64 %54, 1
  store i64 %55, ptr %memberidx1.i.i118, align 4
  %56 = load ptr, ptr %memberidx2.i.i119, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %54
  %58 = load ptr, ptr %57, align 8
  %59 = load i64, ptr %memberidx3.i.i, align 4
  %60 = icmp sge i64 %54, %59
  store i1 %60, ptr %51, align 1
  br i1 %60, label %for.end, label %for.body

for.body:                                         ; preds = %for.next
  %61 = load ptr, ptr %58, align 8
  %memberidx22 = getelementptr inbounds %IdentifierToken, ptr %61, i64 0, i32 2
  %62 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %ImportClause, ptr %58, i64 0, i32 1
  %63 = load ptr, ptr %memberidx23, align 8
  %.not105 = icmp eq ptr %63, null
  br i1 %.not105, label %end, label %true_block

for.end:                                          ; preds = %for.next
  tail call void @free(ptr nonnull %51)
  br label %common.ret

true_block:                                       ; preds = %for.body
  %memberidx25 = getelementptr inbounds %IdentifierToken, ptr %63, i64 0, i32 2
  %64 = load ptr, ptr %memberidx25, align 8
  br label %end

end:                                              ; preds = %for.body, %true_block
  %ternary = phi ptr [ %64, %true_block ], [ %62, %for.body ]
  %memberidx26 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %65 = load ptr, ptr %memberidx26, align 8
  %66 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %62)
  %memberidx.i122 = getelementptr inbounds %Map_String_Generic_, ptr %65, i64 0, i32 1
  %67 = load i64, ptr %memberidx.i122, align 4
  %68 = urem i64 %66, %67
  %69 = load ptr, ptr %65, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %.not.i295 = icmp eq ptr %71, null
  br i1 %.not.i295, label %ifend29, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %end
  %memberidx1.i.i124 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre321.pre = load ptr, ptr %65, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre321.pre, i64 %hash.0.i296
  %.pre322.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre322.pre, null
  br i1 %.not22.i, label %ifend29, label %Map_String_Generic____getitem__.exit

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %72 = phi ptr [ %69, %while.body.i.lr.ph ], [ %82, %else.i ]
  %73 = phi i64 [ %67, %while.body.i.lr.ph ], [ %83, %else.i ]
  %74 = phi ptr [ %71, %while.body.i.lr.ph ], [ %87, %else.i ]
  %hash.0.i296 = phi i64 [ %68, %while.body.i.lr.ph ], [ %85, %else.i ]
  %75 = load ptr, ptr %74, align 8
  %memberidx.i.i123 = getelementptr inbounds %String, ptr %75, i64 0, i32 1
  %76 = load i64, ptr %memberidx.i.i123, align 4
  %77 = load i64, ptr %memberidx1.i.i124, align 4
  %.not.i.i = icmp eq i64 %76, %77
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %78 = load ptr, ptr %75, align 8
  %79 = load ptr, ptr %62, align 8
  %80 = tail call i64 @memcmp(ptr %78, ptr %79, i64 %76)
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i122, align 4
  %.pre320 = load ptr, ptr %65, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %82 = phi ptr [ %.pre320, %ifend.i.i.else.i_crit_edge ], [ %72, %while.body.i ]
  %83 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %73, %while.body.i ]
  %84 = add nuw i64 %hash.0.i296, 1
  %85 = urem i64 %84, %83
  %86 = getelementptr inbounds ptr, ptr %82, i64 %85
  %87 = load ptr, ptr %86, align 8
  %.not.i = icmp eq ptr %87, null
  br i1 %.not.i, label %ifend29, label %while.body.i

Map_String_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_Generic_, ptr %.pre322.pre, i64 0, i32 1
  %88 = load ptr, ptr %memberidx10.i, align 8
  %.not106 = icmp eq ptr %88, null
  br i1 %.not106, label %ifend29, label %for.next.backedge

ifend29:                                          ; preds = %else.i, %end, %while.end.i, %Map_String_Generic____getitem__.exit
  %memberidx30 = getelementptr inbounds %Scope, ptr %46, i64 0, i32 2
  %89 = load ptr, ptr %memberidx30, align 8
  %90 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr %62)
  %memberidx.i125 = getelementptr inbounds %Map_String_ClassId_, ptr %89, i64 0, i32 1
  %91 = load i64, ptr %memberidx.i125, align 4
  %92 = urem i64 %90, %91
  %93 = load ptr, ptr %89, align 8
  %94 = getelementptr inbounds ptr, ptr %93, i64 %92
  %95 = load ptr, ptr %94, align 8
  %.not.i127298 = icmp eq ptr %95, null
  br i1 %.not.i127298, label %ifend33, label %while.body.i134.lr.ph

while.body.i134.lr.ph:                            ; preds = %ifend29
  %memberidx1.i.i132 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  br label %while.body.i134

while.end.i130:                                   ; preds = %ifend.i.i135
  %.pre325.pre = load ptr, ptr %89, align 8
  %.phi.trans.insert326.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre325.pre, i64 %hash.0.i126299
  %.pre327.pre = load ptr, ptr %.phi.trans.insert326.phi.trans.insert, align 8
  %.not22.i129 = icmp eq ptr %.pre327.pre, null
  br i1 %.not22.i129, label %ifend33, label %Map_String_ClassId____getitem__.exit

while.body.i134:                                  ; preds = %while.body.i134.lr.ph, %else.i138
  %96 = phi ptr [ %93, %while.body.i134.lr.ph ], [ %106, %else.i138 ]
  %97 = phi i64 [ %91, %while.body.i134.lr.ph ], [ %107, %else.i138 ]
  %98 = phi ptr [ %95, %while.body.i134.lr.ph ], [ %111, %else.i138 ]
  %hash.0.i126299 = phi i64 [ %92, %while.body.i134.lr.ph ], [ %109, %else.i138 ]
  %99 = load ptr, ptr %98, align 8
  %memberidx.i.i131 = getelementptr inbounds %String, ptr %99, i64 0, i32 1
  %100 = load i64, ptr %memberidx.i.i131, align 4
  %101 = load i64, ptr %memberidx1.i.i132, align 4
  %.not.i.i133 = icmp eq i64 %100, %101
  br i1 %.not.i.i133, label %ifend.i.i135, label %else.i138

ifend.i.i135:                                     ; preds = %while.body.i134
  %102 = load ptr, ptr %99, align 8
  %103 = load ptr, ptr %62, align 8
  %104 = tail call i64 @memcmp(ptr %102, ptr %103, i64 %100)
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %while.end.i130, label %ifend.i.i135.else.i138_crit_edge

ifend.i.i135.else.i138_crit_edge:                 ; preds = %ifend.i.i135
  %.pre323 = load i64, ptr %memberidx.i125, align 4
  %.pre324 = load ptr, ptr %89, align 8
  br label %else.i138

else.i138:                                        ; preds = %ifend.i.i135.else.i138_crit_edge, %while.body.i134
  %106 = phi ptr [ %.pre324, %ifend.i.i135.else.i138_crit_edge ], [ %96, %while.body.i134 ]
  %107 = phi i64 [ %.pre323, %ifend.i.i135.else.i138_crit_edge ], [ %97, %while.body.i134 ]
  %108 = add nuw i64 %hash.0.i126299, 1
  %109 = urem i64 %108, %107
  %110 = getelementptr inbounds ptr, ptr %106, i64 %109
  %111 = load ptr, ptr %110, align 8
  %.not.i127 = icmp eq ptr %111, null
  br i1 %.not.i127, label %ifend33, label %while.body.i134

Map_String_ClassId____getitem__.exit:             ; preds = %while.end.i130
  %memberidx10.i140 = getelementptr inbounds %MapEntry_String_ClassId_, ptr %.pre327.pre, i64 0, i32 1
  %112 = load ptr, ptr %memberidx10.i140, align 8
  %.not107 = icmp eq ptr %112, null
  br i1 %.not107, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %Map_String_ClassId____getitem__.exit
  %113 = load ptr, ptr %0, align 8
  %memberidx.i.i.i142 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %114 = load ptr, ptr %memberidx.i.i.i142, align 8
  %115 = load i64, ptr %114, align 4
  %116 = load ptr, ptr %113, align 8
  %117 = load ptr, ptr %116, align 8
  %118 = getelementptr inbounds ptr, ptr %117, i64 %115
  %119 = load ptr, ptr %118, align 8
  %memberidx1.i.i143 = getelementptr inbounds %Module, ptr %119, i64 0, i32 5
  %120 = load ptr, ptr %memberidx1.i.i143, align 8
  %121 = load i64, ptr %120, align 4
  %122 = getelementptr inbounds ptr, ptr %117, i64 %121
  %123 = load ptr, ptr %122, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %123, i64 0, i32 7
  %124 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %120, i64 0, i32 1
  %125 = load i64, ptr %memberidx3.i.i.i, align 4
  %126 = load ptr, ptr %124, align 8
  %127 = getelementptr inbounds ptr, ptr %126, i64 %125
  %128 = load ptr, ptr %127, align 8
  %memberidx.i144 = getelementptr inbounds %Scope, ptr %128, i64 0, i32 2
  %129 = load ptr, ptr %memberidx.i144, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %129, ptr %ternary, ptr nonnull %112)
  %memberidx1.i145 = getelementptr inbounds %Scope, ptr %128, i64 0, i32 1
  %130 = load ptr, ptr %memberidx1.i145, align 8
  %131 = tail call ptr @malloc(i32 24)
  %132 = load i64, ptr %112, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %112, i64 0, i32 2
  %133 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 3, ptr %131, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %131, i64 0, i32 1
  store i64 %132, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %131, i64 0, i32 2
  store i64 %133, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %130, ptr %ternary, ptr nonnull %131)
  br label %for.next.backedge

ifend33:                                          ; preds = %else.i138, %ifend29, %while.end.i130, %Map_String_ClassId____getitem__.exit
  %memberidx34 = getelementptr inbounds %Scope, ptr %46, i64 0, i32 4
  %134 = load ptr, ptr %memberidx34, align 8
  %135 = tail call fastcc i64 @Map_String_EnumId__hash_fnc(ptr %62)
  %memberidx.i146 = getelementptr inbounds %Map_String_EnumId_, ptr %134, i64 0, i32 1
  %136 = load i64, ptr %memberidx.i146, align 4
  %137 = urem i64 %135, %136
  %138 = load ptr, ptr %134, align 8
  %139 = getelementptr inbounds ptr, ptr %138, i64 %137
  %140 = load ptr, ptr %139, align 8
  %.not.i148302 = icmp eq ptr %140, null
  br i1 %.not.i148302, label %ifend37, label %while.body.i155.lr.ph

while.body.i155.lr.ph:                            ; preds = %ifend33
  %memberidx1.i.i153 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  br label %while.body.i155

while.end.i151:                                   ; preds = %ifend.i.i156
  %.pre330.pre = load ptr, ptr %134, align 8
  %.phi.trans.insert331.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre330.pre, i64 %hash.0.i147303
  %.pre332.pre = load ptr, ptr %.phi.trans.insert331.phi.trans.insert, align 8
  %.not22.i150 = icmp eq ptr %.pre332.pre, null
  br i1 %.not22.i150, label %ifend37, label %Map_String_EnumId____getitem__.exit

while.body.i155:                                  ; preds = %while.body.i155.lr.ph, %else.i159
  %141 = phi ptr [ %138, %while.body.i155.lr.ph ], [ %151, %else.i159 ]
  %142 = phi i64 [ %136, %while.body.i155.lr.ph ], [ %152, %else.i159 ]
  %143 = phi ptr [ %140, %while.body.i155.lr.ph ], [ %156, %else.i159 ]
  %hash.0.i147303 = phi i64 [ %137, %while.body.i155.lr.ph ], [ %154, %else.i159 ]
  %144 = load ptr, ptr %143, align 8
  %memberidx.i.i152 = getelementptr inbounds %String, ptr %144, i64 0, i32 1
  %145 = load i64, ptr %memberidx.i.i152, align 4
  %146 = load i64, ptr %memberidx1.i.i153, align 4
  %.not.i.i154 = icmp eq i64 %145, %146
  br i1 %.not.i.i154, label %ifend.i.i156, label %else.i159

ifend.i.i156:                                     ; preds = %while.body.i155
  %147 = load ptr, ptr %144, align 8
  %148 = load ptr, ptr %62, align 8
  %149 = tail call i64 @memcmp(ptr %147, ptr %148, i64 %145)
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %while.end.i151, label %ifend.i.i156.else.i159_crit_edge

ifend.i.i156.else.i159_crit_edge:                 ; preds = %ifend.i.i156
  %.pre328 = load i64, ptr %memberidx.i146, align 4
  %.pre329 = load ptr, ptr %134, align 8
  br label %else.i159

else.i159:                                        ; preds = %ifend.i.i156.else.i159_crit_edge, %while.body.i155
  %151 = phi ptr [ %.pre329, %ifend.i.i156.else.i159_crit_edge ], [ %141, %while.body.i155 ]
  %152 = phi i64 [ %.pre328, %ifend.i.i156.else.i159_crit_edge ], [ %142, %while.body.i155 ]
  %153 = add nuw i64 %hash.0.i147303, 1
  %154 = urem i64 %153, %152
  %155 = getelementptr inbounds ptr, ptr %151, i64 %154
  %156 = load ptr, ptr %155, align 8
  %.not.i148 = icmp eq ptr %156, null
  br i1 %.not.i148, label %ifend37, label %while.body.i155

Map_String_EnumId____getitem__.exit:              ; preds = %while.end.i151
  %memberidx10.i161 = getelementptr inbounds %MapEntry_String_EnumId_, ptr %.pre332.pre, i64 0, i32 1
  %157 = load ptr, ptr %memberidx10.i161, align 8
  %.not108 = icmp eq ptr %157, null
  br i1 %.not108, label %ifend37, label %if.entry35

if.entry35:                                       ; preds = %Map_String_EnumId____getitem__.exit
  %158 = load ptr, ptr %0, align 8
  %memberidx.i.i.i163 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %159 = load ptr, ptr %memberidx.i.i.i163, align 8
  %160 = load i64, ptr %159, align 4
  %161 = load ptr, ptr %158, align 8
  %162 = load ptr, ptr %161, align 8
  %163 = getelementptr inbounds ptr, ptr %162, i64 %160
  %164 = load ptr, ptr %163, align 8
  %memberidx1.i.i164 = getelementptr inbounds %Module, ptr %164, i64 0, i32 5
  %165 = load ptr, ptr %memberidx1.i.i164, align 8
  %166 = load i64, ptr %165, align 4
  %167 = getelementptr inbounds ptr, ptr %162, i64 %166
  %168 = load ptr, ptr %167, align 8
  %memberidx2.i.i.i165 = getelementptr inbounds %Module, ptr %168, i64 0, i32 7
  %169 = load ptr, ptr %memberidx2.i.i.i165, align 8
  %memberidx3.i.i.i166 = getelementptr inbounds %ScopeId, ptr %165, i64 0, i32 1
  %170 = load i64, ptr %memberidx3.i.i.i166, align 4
  %171 = load ptr, ptr %169, align 8
  %172 = getelementptr inbounds ptr, ptr %171, i64 %170
  %173 = load ptr, ptr %172, align 8
  %memberidx.i167 = getelementptr inbounds %Scope, ptr %173, i64 0, i32 4
  %174 = load ptr, ptr %memberidx.i167, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %174, ptr %ternary, ptr nonnull %157)
  %memberidx1.i168 = getelementptr inbounds %Scope, ptr %173, i64 0, i32 1
  %175 = load ptr, ptr %memberidx1.i168, align 8
  %176 = tail call ptr @malloc(i32 24)
  %177 = load i64, ptr %157, align 4
  %memberidx1.i5.i169 = getelementptr inbounds %TypeId, ptr %157, i64 0, i32 2
  %178 = load i64, ptr %memberidx1.i5.i169, align 4
  store i64 4, ptr %176, align 4
  %memberidx1.i.i.i170 = getelementptr inbounds %VarId, ptr %176, i64 0, i32 1
  store i64 %177, ptr %memberidx1.i.i.i170, align 4
  %memberidx2.i.i6.i171 = getelementptr inbounds %VarId, ptr %176, i64 0, i32 2
  store i64 %178, ptr %memberidx2.i.i6.i171, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %175, ptr %ternary, ptr nonnull %176)
  br label %for.next.backedge

ifend37:                                          ; preds = %else.i159, %ifend33, %while.end.i151, %Map_String_EnumId____getitem__.exit
  %memberidx38 = getelementptr inbounds %Scope, ptr %46, i64 0, i32 1
  %179 = load ptr, ptr %memberidx38, align 8
  %180 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %62)
  %memberidx.i172 = getelementptr inbounds %Map_String_VarId_, ptr %179, i64 0, i32 1
  %181 = load i64, ptr %memberidx.i172, align 4
  %182 = urem i64 %180, %181
  %183 = load ptr, ptr %179, align 8
  %184 = getelementptr inbounds ptr, ptr %183, i64 %182
  %185 = load ptr, ptr %184, align 8
  %.not.i174306 = icmp eq ptr %185, null
  br i1 %.not.i174306, label %ifend41, label %while.body.i181.lr.ph

while.body.i181.lr.ph:                            ; preds = %ifend37
  %memberidx1.i.i179 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  br label %while.body.i181

while.end.i177:                                   ; preds = %ifend.i.i182
  %.pre335.pre = load ptr, ptr %179, align 8
  %.phi.trans.insert336.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre335.pre, i64 %hash.0.i173307
  %.pre337.pre = load ptr, ptr %.phi.trans.insert336.phi.trans.insert, align 8
  %.not22.i176 = icmp eq ptr %.pre337.pre, null
  br i1 %.not22.i176, label %ifend41, label %Map_String_VarId____getitem__.exit

while.body.i181:                                  ; preds = %while.body.i181.lr.ph, %else.i185
  %186 = phi ptr [ %183, %while.body.i181.lr.ph ], [ %196, %else.i185 ]
  %187 = phi i64 [ %181, %while.body.i181.lr.ph ], [ %197, %else.i185 ]
  %188 = phi ptr [ %185, %while.body.i181.lr.ph ], [ %201, %else.i185 ]
  %hash.0.i173307 = phi i64 [ %182, %while.body.i181.lr.ph ], [ %199, %else.i185 ]
  %189 = load ptr, ptr %188, align 8
  %memberidx.i.i178 = getelementptr inbounds %String, ptr %189, i64 0, i32 1
  %190 = load i64, ptr %memberidx.i.i178, align 4
  %191 = load i64, ptr %memberidx1.i.i179, align 4
  %.not.i.i180 = icmp eq i64 %190, %191
  br i1 %.not.i.i180, label %ifend.i.i182, label %else.i185

ifend.i.i182:                                     ; preds = %while.body.i181
  %192 = load ptr, ptr %189, align 8
  %193 = load ptr, ptr %62, align 8
  %194 = tail call i64 @memcmp(ptr %192, ptr %193, i64 %190)
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %while.end.i177, label %ifend.i.i182.else.i185_crit_edge

ifend.i.i182.else.i185_crit_edge:                 ; preds = %ifend.i.i182
  %.pre333 = load i64, ptr %memberidx.i172, align 4
  %.pre334 = load ptr, ptr %179, align 8
  br label %else.i185

else.i185:                                        ; preds = %ifend.i.i182.else.i185_crit_edge, %while.body.i181
  %196 = phi ptr [ %.pre334, %ifend.i.i182.else.i185_crit_edge ], [ %186, %while.body.i181 ]
  %197 = phi i64 [ %.pre333, %ifend.i.i182.else.i185_crit_edge ], [ %187, %while.body.i181 ]
  %198 = add nuw i64 %hash.0.i173307, 1
  %199 = urem i64 %198, %197
  %200 = getelementptr inbounds ptr, ptr %196, i64 %199
  %201 = load ptr, ptr %200, align 8
  %.not.i174 = icmp eq ptr %201, null
  br i1 %.not.i174, label %ifend41, label %while.body.i181

Map_String_VarId____getitem__.exit:               ; preds = %while.end.i177
  %memberidx10.i187 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre337.pre, i64 0, i32 1
  %202 = load ptr, ptr %memberidx10.i187, align 8
  %.not109 = icmp eq ptr %202, null
  br i1 %.not109, label %ifend41, label %if.entry39

if.entry39:                                       ; preds = %Map_String_VarId____getitem__.exit
  %203 = load ptr, ptr %0, align 8
  %memberidx.i.i.i189 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %204 = load ptr, ptr %memberidx.i.i.i189, align 8
  %205 = load i64, ptr %204, align 4
  %206 = load ptr, ptr %203, align 8
  %207 = load ptr, ptr %206, align 8
  %208 = getelementptr inbounds ptr, ptr %207, i64 %205
  %209 = load ptr, ptr %208, align 8
  %memberidx1.i.i190 = getelementptr inbounds %Module, ptr %209, i64 0, i32 5
  %210 = load ptr, ptr %memberidx1.i.i190, align 8
  %211 = load i64, ptr %210, align 4
  %212 = getelementptr inbounds ptr, ptr %207, i64 %211
  %213 = load ptr, ptr %212, align 8
  %memberidx2.i.i.i191 = getelementptr inbounds %Module, ptr %213, i64 0, i32 7
  %214 = load ptr, ptr %memberidx2.i.i.i191, align 8
  %memberidx3.i.i.i192 = getelementptr inbounds %ScopeId, ptr %210, i64 0, i32 1
  %215 = load i64, ptr %memberidx3.i.i.i192, align 4
  %216 = load ptr, ptr %214, align 8
  %217 = getelementptr inbounds ptr, ptr %216, i64 %215
  %218 = load ptr, ptr %217, align 8
  %memberidx.i193 = getelementptr inbounds %Scope, ptr %218, i64 0, i32 1
  %219 = load ptr, ptr %memberidx.i193, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %219, ptr %ternary, ptr nonnull %202)
  br label %for.next.backedge

ifend41:                                          ; preds = %else.i185, %ifend37, %while.end.i177, %Map_String_VarId____getitem__.exit
  %memberidx42 = getelementptr inbounds %Scope, ptr %46, i64 0, i32 3
  %220 = load ptr, ptr %memberidx42, align 8
  %221 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %62)
  %memberidx.i194 = getelementptr inbounds %Map_String_VarId_, ptr %220, i64 0, i32 1
  %222 = load i64, ptr %memberidx.i194, align 4
  %223 = urem i64 %221, %222
  %224 = load ptr, ptr %220, align 8
  %225 = getelementptr inbounds ptr, ptr %224, i64 %223
  %226 = load ptr, ptr %225, align 8
  %.not.i196310 = icmp eq ptr %226, null
  br i1 %.not.i196310, label %ifend45, label %while.body.i203.lr.ph

while.body.i203.lr.ph:                            ; preds = %ifend41
  %memberidx1.i.i201 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  br label %while.body.i203

while.end.i199:                                   ; preds = %ifend.i.i204
  %.pre340.pre = load ptr, ptr %220, align 8
  %.phi.trans.insert341.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre340.pre, i64 %hash.0.i195311
  %.pre342.pre = load ptr, ptr %.phi.trans.insert341.phi.trans.insert, align 8
  %.not22.i198 = icmp eq ptr %.pre342.pre, null
  br i1 %.not22.i198, label %ifend45, label %Map_String_VarId____getitem__.exit211

while.body.i203:                                  ; preds = %while.body.i203.lr.ph, %else.i207
  %227 = phi ptr [ %224, %while.body.i203.lr.ph ], [ %237, %else.i207 ]
  %228 = phi i64 [ %222, %while.body.i203.lr.ph ], [ %238, %else.i207 ]
  %229 = phi ptr [ %226, %while.body.i203.lr.ph ], [ %242, %else.i207 ]
  %hash.0.i195311 = phi i64 [ %223, %while.body.i203.lr.ph ], [ %240, %else.i207 ]
  %230 = load ptr, ptr %229, align 8
  %memberidx.i.i200 = getelementptr inbounds %String, ptr %230, i64 0, i32 1
  %231 = load i64, ptr %memberidx.i.i200, align 4
  %232 = load i64, ptr %memberidx1.i.i201, align 4
  %.not.i.i202 = icmp eq i64 %231, %232
  br i1 %.not.i.i202, label %ifend.i.i204, label %else.i207

ifend.i.i204:                                     ; preds = %while.body.i203
  %233 = load ptr, ptr %230, align 8
  %234 = load ptr, ptr %62, align 8
  %235 = tail call i64 @memcmp(ptr %233, ptr %234, i64 %231)
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %while.end.i199, label %ifend.i.i204.else.i207_crit_edge

ifend.i.i204.else.i207_crit_edge:                 ; preds = %ifend.i.i204
  %.pre338 = load i64, ptr %memberidx.i194, align 4
  %.pre339 = load ptr, ptr %220, align 8
  br label %else.i207

else.i207:                                        ; preds = %ifend.i.i204.else.i207_crit_edge, %while.body.i203
  %237 = phi ptr [ %.pre339, %ifend.i.i204.else.i207_crit_edge ], [ %227, %while.body.i203 ]
  %238 = phi i64 [ %.pre338, %ifend.i.i204.else.i207_crit_edge ], [ %228, %while.body.i203 ]
  %239 = add nuw i64 %hash.0.i195311, 1
  %240 = urem i64 %239, %238
  %241 = getelementptr inbounds ptr, ptr %237, i64 %240
  %242 = load ptr, ptr %241, align 8
  %.not.i196 = icmp eq ptr %242, null
  br i1 %.not.i196, label %ifend45, label %while.body.i203

Map_String_VarId____getitem__.exit211:            ; preds = %while.end.i199
  %memberidx10.i209 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre342.pre, i64 0, i32 1
  %243 = load ptr, ptr %memberidx10.i209, align 8
  %.not110 = icmp eq ptr %243, null
  br i1 %.not110, label %ifend45, label %if.entry43

if.entry43:                                       ; preds = %Map_String_VarId____getitem__.exit211
  %244 = load ptr, ptr %0, align 8
  %memberidx.i.i.i212 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %245 = load ptr, ptr %memberidx.i.i.i212, align 8
  %246 = load i64, ptr %245, align 4
  %247 = load ptr, ptr %244, align 8
  %248 = load ptr, ptr %247, align 8
  %249 = getelementptr inbounds ptr, ptr %248, i64 %246
  %250 = load ptr, ptr %249, align 8
  %memberidx1.i.i213 = getelementptr inbounds %Module, ptr %250, i64 0, i32 5
  %251 = load ptr, ptr %memberidx1.i.i213, align 8
  %252 = load i64, ptr %251, align 4
  %253 = getelementptr inbounds ptr, ptr %248, i64 %252
  %254 = load ptr, ptr %253, align 8
  %memberidx2.i.i.i214 = getelementptr inbounds %Module, ptr %254, i64 0, i32 7
  %255 = load ptr, ptr %memberidx2.i.i.i214, align 8
  %memberidx3.i.i.i215 = getelementptr inbounds %ScopeId, ptr %251, i64 0, i32 1
  %256 = load i64, ptr %memberidx3.i.i.i215, align 4
  %257 = load ptr, ptr %255, align 8
  %258 = getelementptr inbounds ptr, ptr %257, i64 %256
  %259 = load ptr, ptr %258, align 8
  %memberidx.i216 = getelementptr inbounds %Scope, ptr %259, i64 0, i32 3
  %260 = load ptr, ptr %memberidx.i216, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %260, ptr %ternary, ptr nonnull %243)
  br label %for.next.backedge

ifend45:                                          ; preds = %else.i207, %ifend41, %while.end.i199, %Map_String_VarId____getitem__.exit211
  %memberidx46 = getelementptr inbounds %Scope, ptr %46, i64 0, i32 6
  %261 = load ptr, ptr %memberidx46, align 8
  %262 = tail call fastcc i64 @Map_String_Type__hash_fnc(ptr %62)
  %memberidx.i217 = getelementptr inbounds %Map_String_Type_, ptr %261, i64 0, i32 1
  %263 = load i64, ptr %memberidx.i217, align 4
  %264 = urem i64 %262, %263
  %265 = load ptr, ptr %261, align 8
  %266 = getelementptr inbounds ptr, ptr %265, i64 %264
  %267 = load ptr, ptr %266, align 8
  %.not.i219314 = icmp eq ptr %267, null
  br i1 %.not.i219314, label %else48, label %while.body.i226.lr.ph

while.body.i226.lr.ph:                            ; preds = %ifend45
  %memberidx1.i.i224 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  br label %while.body.i226

while.end.i222:                                   ; preds = %ifend.i.i227
  %.pre345.pre = load ptr, ptr %261, align 8
  %.phi.trans.insert346.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre345.pre, i64 %hash.0.i218315
  %.pre347.pre = load ptr, ptr %.phi.trans.insert346.phi.trans.insert, align 8
  %.not22.i221 = icmp eq ptr %.pre347.pre, null
  br i1 %.not22.i221, label %else48, label %Map_String_Type____getitem__.exit

while.body.i226:                                  ; preds = %while.body.i226.lr.ph, %else.i230
  %268 = phi ptr [ %265, %while.body.i226.lr.ph ], [ %278, %else.i230 ]
  %269 = phi i64 [ %263, %while.body.i226.lr.ph ], [ %279, %else.i230 ]
  %270 = phi ptr [ %267, %while.body.i226.lr.ph ], [ %283, %else.i230 ]
  %hash.0.i218315 = phi i64 [ %264, %while.body.i226.lr.ph ], [ %281, %else.i230 ]
  %271 = load ptr, ptr %270, align 8
  %memberidx.i.i223 = getelementptr inbounds %String, ptr %271, i64 0, i32 1
  %272 = load i64, ptr %memberidx.i.i223, align 4
  %273 = load i64, ptr %memberidx1.i.i224, align 4
  %.not.i.i225 = icmp eq i64 %272, %273
  br i1 %.not.i.i225, label %ifend.i.i227, label %else.i230

ifend.i.i227:                                     ; preds = %while.body.i226
  %274 = load ptr, ptr %271, align 8
  %275 = load ptr, ptr %62, align 8
  %276 = tail call i64 @memcmp(ptr %274, ptr %275, i64 %272)
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %while.end.i222, label %ifend.i.i227.else.i230_crit_edge

ifend.i.i227.else.i230_crit_edge:                 ; preds = %ifend.i.i227
  %.pre343 = load i64, ptr %memberidx.i217, align 4
  %.pre344 = load ptr, ptr %261, align 8
  br label %else.i230

else.i230:                                        ; preds = %ifend.i.i227.else.i230_crit_edge, %while.body.i226
  %278 = phi ptr [ %.pre344, %ifend.i.i227.else.i230_crit_edge ], [ %268, %while.body.i226 ]
  %279 = phi i64 [ %.pre343, %ifend.i.i227.else.i230_crit_edge ], [ %269, %while.body.i226 ]
  %280 = add nuw i64 %hash.0.i218315, 1
  %281 = urem i64 %280, %279
  %282 = getelementptr inbounds ptr, ptr %278, i64 %281
  %283 = load ptr, ptr %282, align 8
  %.not.i219 = icmp eq ptr %283, null
  br i1 %.not.i219, label %else48, label %while.body.i226

Map_String_Type____getitem__.exit:                ; preds = %while.end.i222
  %memberidx10.i232 = getelementptr inbounds %MapEntry_String_Type_, ptr %.pre347.pre, i64 0, i32 1
  %284 = load ptr, ptr %memberidx10.i232, align 8
  %.not111 = icmp eq ptr %284, null
  br i1 %.not111, label %else48, label %if.entry47

if.entry47:                                       ; preds = %Map_String_Type____getitem__.exit
  %285 = load ptr, ptr %0, align 8
  %memberidx.i.i.i234 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %286 = load ptr, ptr %memberidx.i.i.i234, align 8
  %287 = load i64, ptr %286, align 4
  %288 = load ptr, ptr %285, align 8
  %289 = load ptr, ptr %288, align 8
  %290 = getelementptr inbounds ptr, ptr %289, i64 %287
  %291 = load ptr, ptr %290, align 8
  %memberidx1.i.i235 = getelementptr inbounds %Module, ptr %291, i64 0, i32 5
  %292 = load ptr, ptr %memberidx1.i.i235, align 8
  %293 = load i64, ptr %292, align 4
  %294 = getelementptr inbounds ptr, ptr %289, i64 %293
  %295 = load ptr, ptr %294, align 8
  %memberidx2.i.i.i236 = getelementptr inbounds %Module, ptr %295, i64 0, i32 7
  %296 = load ptr, ptr %memberidx2.i.i.i236, align 8
  %memberidx3.i.i.i237 = getelementptr inbounds %ScopeId, ptr %292, i64 0, i32 1
  %297 = load i64, ptr %memberidx3.i.i.i237, align 4
  %298 = load ptr, ptr %296, align 8
  %299 = getelementptr inbounds ptr, ptr %298, i64 %297
  %300 = load ptr, ptr %299, align 8
  %memberidx.i238 = getelementptr inbounds %Scope, ptr %300, i64 0, i32 6
  %301 = load ptr, ptr %memberidx.i238, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr %301, ptr %ternary, ptr nonnull %284)
  br label %for.next.backedge

else48:                                           ; preds = %ifend45, %while.end.i222, %Map_String_Type____getitem__.exit, %else.i230
  %memberidx.i239 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  %302 = load i64, ptr %memberidx.i239, align 4
  %303 = trunc i64 %302 to i32
  %304 = add i32 %303, 1
  %305 = tail call ptr @malloc(i32 %304)
  %306 = load ptr, ptr %62, align 8
  %307 = load i64, ptr %memberidx.i239, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %305, ptr align 8 %306, i64 %307, i1 false)
  %308 = getelementptr inbounds i8, ptr %305, i64 %307
  store i8 0, ptr %308, align 1
  %memberidx.i240 = getelementptr inbounds %String, ptr %28, i64 0, i32 1
  %309 = load i64, ptr %memberidx.i240, align 4
  %310 = trunc i64 %309 to i32
  %311 = add i32 %310, 1
  %312 = tail call ptr @malloc(i32 %311)
  %313 = load ptr, ptr %28, align 8
  %314 = load i64, ptr %memberidx.i240, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %312, ptr align 8 %313, i64 %314, i1 false)
  %315 = getelementptr inbounds i8, ptr %312, i64 %314
  store i8 0, ptr %315, align 1
  %316 = alloca ptr, align 8
  %317 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %316, ptr nonnull @108, ptr %305, ptr %312)
  %318 = load ptr, ptr %316, align 8
  %319 = tail call ptr @malloc(i32 24)
  store ptr %318, ptr %319, align 8
  %memberidx1.i241 = getelementptr inbounds %String, ptr %319, i64 0, i32 1
  store i64 %317, ptr %memberidx1.i241, align 4
  %memberidx2.i242 = getelementptr inbounds %String, ptr %319, i64 0, i32 2
  store i64 %317, ptr %memberidx2.i242, align 4
  tail call void @free(ptr %305)
  tail call void @free(ptr %312)
  %320 = load ptr, ptr %58, align 8
  %memberidx51 = getelementptr inbounds %Token, ptr %320, i64 0, i32 1
  %321 = load ptr, ptr %memberidx51, align 8
  %322 = load ptr, ptr %memberidx.i114, align 8
  %memberidx1.i244 = getelementptr inbounds %Compiler, ptr %322, i64 0, i32 5
  %323 = load ptr, ptr %memberidx1.i244, align 8
  %324 = call ptr @malloc(i32 24)
  store i64 1, ptr %324, align 4
  %memberidx1.i.i245 = getelementptr inbounds %FloError, ptr %324, i64 0, i32 2
  store ptr %321, ptr %memberidx1.i.i245, align 8
  %memberidx2.i.i246 = getelementptr inbounds %FloError, ptr %324, i64 0, i32 1
  store ptr %319, ptr %memberidx2.i.i246, align 8
  %memberidx.i.i247 = getelementptr inbounds %Array_FloError_, ptr %323, i64 0, i32 1
  %325 = load i64, ptr %memberidx.i.i247, align 4
  %326 = add i64 %325, 1
  %memberidx.i.i.i248 = getelementptr inbounds %Array_FloError_, ptr %323, i64 0, i32 2
  %327 = load i64, ptr %memberidx.i.i.i248, align 4
  %328 = icmp slt i64 %327, %326
  %.pre348 = load ptr, ptr %323, align 8
  br i1 %328, label %while.body.i.i.i250, label %TypeChecker_error.exit251

while.body.i.i.i250:                              ; preds = %else48, %while.body.i.i.i250
  %329 = phi ptr [ %333, %while.body.i.i.i250 ], [ %.pre348, %else48 ]
  %330 = phi i64 [ %334, %while.body.i.i.i250 ], [ %327, %else48 ]
  %331 = shl nuw i64 %330, 1
  store i64 %331, ptr %memberidx.i.i.i248, align 4
  %332 = shl i64 %330, 4
  %333 = call ptr @realloc(ptr %329, i64 %332)
  store ptr %333, ptr %323, align 8
  %334 = load i64, ptr %memberidx.i.i.i248, align 4
  %335 = icmp slt i64 %334, %326
  br i1 %335, label %while.body.i.i.i250, label %TypeChecker_error.exit251.loopexit

TypeChecker_error.exit251.loopexit:               ; preds = %while.body.i.i.i250
  %.pre349 = load i64, ptr %memberidx.i.i247, align 4
  %.pre367 = add nsw i64 %.pre349, 1
  br label %TypeChecker_error.exit251

TypeChecker_error.exit251:                        ; preds = %else48, %TypeChecker_error.exit251.loopexit
  %.pre-phi368 = phi i64 [ %.pre367, %TypeChecker_error.exit251.loopexit ], [ %326, %else48 ]
  %336 = phi ptr [ %333, %TypeChecker_error.exit251.loopexit ], [ %.pre348, %else48 ]
  %337 = phi i64 [ %.pre349, %TypeChecker_error.exit251.loopexit ], [ %325, %else48 ]
  store i64 %.pre-phi368, ptr %memberidx.i.i247, align 4
  %338 = getelementptr inbounds ptr, ptr %336, i64 %337
  store ptr %324, ptr %338, align 8
  br label %common.ret

if.entry53:                                       ; preds = %else17
  %memberidx57 = getelementptr inbounds %IdentifierToken, ptr %50, i64 0, i32 2
  %339 = load ptr, ptr %memberidx57, align 8
  %memberidx.i.i252 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %340 = load ptr, ptr %memberidx.i.i252, align 8
  %341 = load i64, ptr %340, align 4
  %342 = getelementptr inbounds ptr, ptr %39, i64 %341
  %343 = load ptr, ptr %342, align 8
  %memberidx1.i253 = getelementptr inbounds %Module, ptr %343, i64 0, i32 5
  %344 = load ptr, ptr %memberidx1.i253, align 8
  %345 = load i64, ptr %344, align 4
  %346 = getelementptr inbounds ptr, ptr %39, i64 %345
  %347 = load ptr, ptr %346, align 8
  %memberidx2.i.i254 = getelementptr inbounds %Module, ptr %347, i64 0, i32 7
  %348 = load ptr, ptr %memberidx2.i.i254, align 8
  %memberidx3.i.i255 = getelementptr inbounds %ScopeId, ptr %344, i64 0, i32 1
  %349 = load i64, ptr %memberidx3.i.i255, align 4
  %350 = load ptr, ptr %348, align 8
  %351 = getelementptr inbounds ptr, ptr %350, i64 %349
  %352 = load ptr, ptr %351, align 8
  %memberidx58 = getelementptr inbounds %Scope, ptr %352, i64 0, i32 1
  %353 = load ptr, ptr %memberidx58, align 8
  %354 = tail call ptr @malloc(i32 32)
  %355 = load ptr, ptr %46, align 8
  %356 = load i64, ptr %355, align 4
  %memberidx1.i256 = getelementptr inbounds %ScopeId, ptr %355, i64 0, i32 1
  %357 = load i64, ptr %memberidx1.i256, align 4
  store i64 5, ptr %354, align 4
  %memberidx1.i.i257 = getelementptr inbounds %VarId, ptr %354, i64 0, i32 1
  store i64 %356, ptr %memberidx1.i.i257, align 4
  %memberidx2.i.i258 = getelementptr inbounds %VarId, ptr %354, i64 0, i32 2
  store i64 %357, ptr %memberidx2.i.i258, align 4
  %memberidx2.i259 = getelementptr inbounds %ModuleVarId, ptr %354, i64 0, i32 3
  store ptr %355, ptr %memberidx2.i259, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %353, ptr %339, ptr nonnull %354)
  br label %common.ret

for.next.backedge:                                ; preds = %if.entry31, %if.entry35, %if.entry39, %if.entry43, %if.entry47, %Map_String_Generic____getitem__.exit
  br label %for.next

else54:                                           ; preds = %else17
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %30)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %TypeChecker_error.exit376, %if.entry83, %if.entry78, %TypeChecker_error.exit346, %Array_Expression____sl__.exit, %TypeChecker_error.exit286, %TypeChecker_error.exit259, %TypeChecker_error.exit250, %TypeChecker_error.exit191, %TypeChecker_error.exit, %ifend6
  %common.ret.op = phi ptr [ %18, %ifend6 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit191 ], [ null, %TypeChecker_error.exit250 ], [ null, %TypeChecker_error.exit259 ], [ null, %TypeChecker_error.exit286 ], [ %344, %Array_Expression____sl__.exit ], [ null, %TypeChecker_error.exit346 ], [ %414, %if.entry78 ], [ %424, %if.entry83 ], [ null, %TypeChecker_error.exit376 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx3, align 8
  %13 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %13, align 4
  %14 = load i64, ptr %10, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i2, label %is_object.exit.thread

if.entry.i2:                                      ; preds = %ifend, %if.entry.i2
  %.tr5.i = phi ptr [ %16, %if.entry.i2 ], [ %10, %ifend ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i1, align 8
  %17 = load i64, ptr %16, align 4
  switch i64 %17, label %else5 [
    i64 20, label %if.entry.i2
    i64 11, label %while.entry.preheader
  ]

is_object.exit.thread:                            ; preds = %ifend
  switch i64 %14, label %else84 [
    i64 11, label %if.entry3.i
    i64 17, label %if.entry24
    i64 13, label %if.entry53
    i64 14, label %if.entry75
    i64 18, label %if.entry83
  ]

while.entry.preheader:                            ; preds = %if.entry.i2
  br i1 %15, label %while.body, label %if.entry3.i

else5:                                            ; preds = %if.entry.i2
  switch i64 %14, label %else84 [
    i64 17, label %if.entry24
    i64 13, label %if.entry53
    i64 14, label %if.entry75
    i64 18, label %if.entry83
  ]

ifend6:                                           ; preds = %if.entry75, %ifend.i353, %get_class_prop_type.exit273, %ifend48, %get_class_prop_type.exit
  %prop_ty.0 = phi ptr [ %common.ret.op.i193, %get_class_prop_type.exit ], [ %common.ret.op.i264, %get_class_prop_type.exit273 ], [ %330, %ifend48 ], [ %13, %ifend.i353 ], [ %13, %if.entry75 ]
  %prop_id.0 = phi ptr [ %54, %get_class_prop_type.exit ], [ %178, %get_class_prop_type.exit273 ], [ %208, %ifend48 ], [ null, %ifend.i353 ], [ null, %if.entry75 ]
  %18 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %18, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %18, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %18, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i169 = getelementptr inbounds %MemberExpression, ptr %18, i64 0, i32 4
  store ptr %5, ptr %memberidx.i169, align 8
  %memberidx1.i170 = getelementptr inbounds %MemberExpression, ptr %18, i64 0, i32 5
  store ptr %prop_id.0, ptr %memberidx1.i170, align 8
  %memberidx2.i171 = getelementptr inbounds %Expression, ptr %18, i64 0, i32 3
  store ptr %prop_ty.0, ptr %memberidx2.i171, align 8
  br label %common.ret

if.entry3.i:                                      ; preds = %while.body, %is_object.exit.thread, %while.entry.preheader
  %prop_owner_type.0.lcssa = phi ptr [ %10, %while.entry.preheader ], [ %10, %is_object.exit.thread ], [ %56, %while.body ]
  %19 = load ptr, ptr %0, align 8
  %memberidx6.i7 = getelementptr inbounds %ObjectType, ptr %prop_owner_type.0.lcssa, i64 0, i32 1
  %20 = load ptr, ptr %memberidx6.i7, align 8
  %21 = load ptr, ptr %19, align 8
  %22 = load i64, ptr %20, align 4
  %23 = load ptr, ptr %21, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %memberidx2.i.i8 = getelementptr inbounds %Module, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx2.i.i8, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %20, i64 0, i32 2
  %27 = load i64, ptr %memberidx3.i.i, align 4
  %28 = load ptr, ptr %26, align 8
  %29 = getelementptr inbounds ptr, ptr %28, i64 %27
  %30 = load ptr, ptr %29, align 8
  %memberidx10 = getelementptr inbounds %Class, ptr %30, i64 0, i32 6
  %31 = load ptr, ptr %memberidx10, align 8
  %32 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i172 = getelementptr inbounds %Map_String_PropId_, ptr %31, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i172, align 4
  %34 = urem i64 %32, %33
  %35 = load ptr, ptr %31, align 8
  %36 = getelementptr inbounds ptr, ptr %35, i64 %34
  %37 = load ptr, ptr %36, align 8
  %.not.i13 = icmp eq ptr %37, null
  br i1 %.not.i13, label %if.entry11, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %if.entry3.i
  %memberidx1.i.i174 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre63.pre = load ptr, ptr %31, align 8
  %.phi.trans.insert64.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre63.pre, i64 %hash.0.i14
  %.pre65.pre = load ptr, ptr %.phi.trans.insert64.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre65.pre, null
  br i1 %.not22.i, label %if.entry11, label %Map_String_PropId____getitem__.exit

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %38 = phi ptr [ %35, %while.body.i.lr.ph ], [ %48, %else.i ]
  %39 = phi i64 [ %33, %while.body.i.lr.ph ], [ %49, %else.i ]
  %40 = phi ptr [ %37, %while.body.i.lr.ph ], [ %53, %else.i ]
  %hash.0.i14 = phi i64 [ %34, %while.body.i.lr.ph ], [ %51, %else.i ]
  %41 = load ptr, ptr %40, align 8
  %memberidx.i.i173 = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i.i173, align 4
  %43 = load i64, ptr %memberidx1.i.i174, align 4
  %.not.i.i = icmp eq i64 %42, %43
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %44 = load ptr, ptr %41, align 8
  %45 = load ptr, ptr %12, align 8
  %46 = tail call i64 @memcmp(ptr %44, ptr %45, i64 %42)
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre61 = load i64, ptr %memberidx.i172, align 4
  %.pre62 = load ptr, ptr %31, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %48 = phi ptr [ %.pre62, %ifend.i.i.else.i_crit_edge ], [ %38, %while.body.i ]
  %49 = phi i64 [ %.pre61, %ifend.i.i.else.i_crit_edge ], [ %39, %while.body.i ]
  %50 = add nuw i64 %hash.0.i14, 1
  %51 = urem i64 %50, %49
  %52 = getelementptr inbounds ptr, ptr %48, i64 %51
  %53 = load ptr, ptr %52, align 8
  %.not.i = icmp eq ptr %53, null
  br i1 %.not.i, label %if.entry11, label %while.body.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre65.pre, i64 0, i32 1
  %54 = load ptr, ptr %memberidx10.i, align 8
  %55 = icmp eq ptr %54, null
  br i1 %55, label %if.entry11, label %ifend13

while.body:                                       ; preds = %while.entry.preheader, %while.body
  %prop_owner_type.019 = phi ptr [ %56, %while.body ], [ %10, %while.entry.preheader ]
  %memberidx8 = getelementptr inbounds %GenericType, ptr %prop_owner_type.019, i64 0, i32 3
  %56 = load ptr, ptr %memberidx8, align 8
  %57 = load i64, ptr %56, align 4
  %58 = icmp eq i64 %57, 20
  br i1 %58, label %while.body, label %if.entry3.i

if.entry11:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_String_PropId____getitem__.exit
  %memberidx.i175 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i175, align 4
  %60 = trunc i64 %59 to i32
  %61 = add i32 %60, 1
  %62 = tail call ptr @malloc(i32 %61)
  %63 = load ptr, ptr %12, align 8
  %64 = load i64, ptr %memberidx.i175, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %62, ptr align 8 %63, i64 %64, i1 false)
  %65 = getelementptr inbounds i8, ptr %62, i64 %64
  store i8 0, ptr %65, align 1
  %memberidx14 = getelementptr inbounds %Class, ptr %30, i64 0, i32 1
  %66 = load ptr, ptr %memberidx14, align 8
  %memberidx.i176 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  %67 = load i64, ptr %memberidx.i176, align 4
  %68 = trunc i64 %67 to i32
  %69 = add i32 %68, 1
  %70 = tail call ptr @malloc(i32 %69)
  %71 = load ptr, ptr %66, align 8
  %72 = load i64, ptr %memberidx.i176, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %70, ptr align 8 %71, i64 %72, i1 false)
  %73 = getelementptr inbounds i8, ptr %70, i64 %72
  store i8 0, ptr %73, align 1
  %74 = alloca ptr, align 8
  %75 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %74, ptr nonnull @196, ptr %62, ptr %70)
  %76 = load ptr, ptr %74, align 8
  %77 = tail call ptr @malloc(i32 24)
  store ptr %76, ptr %77, align 8
  %memberidx1.i177 = getelementptr inbounds %String, ptr %77, i64 0, i32 1
  store i64 %75, ptr %memberidx1.i177, align 4
  %memberidx2.i178 = getelementptr inbounds %String, ptr %77, i64 0, i32 2
  store i64 %75, ptr %memberidx2.i178, align 4
  tail call void @free(ptr %62)
  tail call void @free(ptr %70)
  %78 = load ptr, ptr %memberidx2, align 8
  %memberidx16 = getelementptr inbounds %Token, ptr %78, i64 0, i32 1
  %79 = load ptr, ptr %memberidx16, align 8
  %80 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i180 = getelementptr inbounds %Compiler, ptr %80, i64 0, i32 5
  %81 = load ptr, ptr %memberidx1.i180, align 8
  %82 = call ptr @malloc(i32 24)
  store i64 1, ptr %82, align 4
  %memberidx1.i.i181 = getelementptr inbounds %FloError, ptr %82, i64 0, i32 2
  store ptr %79, ptr %memberidx1.i.i181, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %82, i64 0, i32 1
  store ptr %77, ptr %memberidx2.i.i, align 8
  %memberidx.i.i182 = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 1
  %83 = load i64, ptr %memberidx.i.i182, align 4
  %84 = add i64 %83, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 2
  %85 = load i64, ptr %memberidx.i.i.i, align 4
  %86 = icmp slt i64 %85, %84
  %.pre69 = load ptr, ptr %81, align 8
  br i1 %86, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry11, %while.body.i.i.i
  %87 = phi ptr [ %91, %while.body.i.i.i ], [ %.pre69, %if.entry11 ]
  %88 = phi i64 [ %92, %while.body.i.i.i ], [ %85, %if.entry11 ]
  %89 = shl nuw i64 %88, 1
  store i64 %89, ptr %memberidx.i.i.i, align 4
  %90 = shl i64 %88, 4
  %91 = call ptr @realloc(ptr %87, i64 %90)
  store ptr %91, ptr %81, align 8
  %92 = load i64, ptr %memberidx.i.i.i, align 4
  %93 = icmp slt i64 %92, %84
  br i1 %93, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre70 = load i64, ptr %memberidx.i.i182, align 4
  %.pre78 = add nsw i64 %.pre70, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre78, %TypeChecker_error.exit.loopexit ], [ %84, %if.entry11 ]
  %94 = phi ptr [ %91, %TypeChecker_error.exit.loopexit ], [ %.pre69, %if.entry11 ]
  %95 = phi i64 [ %.pre70, %TypeChecker_error.exit.loopexit ], [ %83, %if.entry11 ]
  store i64 %.pre-phi, ptr %memberidx.i.i182, align 4
  %96 = getelementptr inbounds ptr, ptr %94, i64 %95
  store ptr %82, ptr %96, align 8
  br label %common.ret

ifend13:                                          ; preds = %Map_String_PropId____getitem__.exit
  %97 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %54)
  %.not168 = icmp eq ptr %97, null
  br i1 %.not168, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend13
  %98 = load ptr, ptr %memberidx2, align 8
  %memberidx21 = getelementptr inbounds %Token, ptr %98, i64 0, i32 1
  %99 = load ptr, ptr %memberidx21, align 8
  %100 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i184 = getelementptr inbounds %Compiler, ptr %100, i64 0, i32 5
  %101 = load ptr, ptr %memberidx1.i184, align 8
  %102 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %102, align 4
  %memberidx1.i.i185 = getelementptr inbounds %FloError, ptr %102, i64 0, i32 2
  store ptr %99, ptr %memberidx1.i.i185, align 8
  %memberidx2.i.i186 = getelementptr inbounds %FloError, ptr %102, i64 0, i32 1
  store ptr %97, ptr %memberidx2.i.i186, align 8
  %memberidx.i.i187 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 1
  %103 = load i64, ptr %memberidx.i.i187, align 4
  %104 = add i64 %103, 1
  %memberidx.i.i.i188 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 2
  %105 = load i64, ptr %memberidx.i.i.i188, align 4
  %106 = icmp slt i64 %105, %104
  %.pre66 = load ptr, ptr %101, align 8
  br i1 %106, label %while.body.i.i.i190, label %TypeChecker_error.exit191

while.body.i.i.i190:                              ; preds = %if.entry17, %while.body.i.i.i190
  %107 = phi ptr [ %111, %while.body.i.i.i190 ], [ %.pre66, %if.entry17 ]
  %108 = phi i64 [ %112, %while.body.i.i.i190 ], [ %105, %if.entry17 ]
  %109 = shl nuw i64 %108, 1
  store i64 %109, ptr %memberidx.i.i.i188, align 4
  %110 = shl i64 %108, 4
  %111 = tail call ptr @realloc(ptr %107, i64 %110)
  store ptr %111, ptr %101, align 8
  %112 = load i64, ptr %memberidx.i.i.i188, align 4
  %113 = icmp slt i64 %112, %104
  br i1 %113, label %while.body.i.i.i190, label %TypeChecker_error.exit191.loopexit

TypeChecker_error.exit191.loopexit:               ; preds = %while.body.i.i.i190
  %.pre67 = load i64, ptr %memberidx.i.i187, align 4
  %.pre79 = add nsw i64 %.pre67, 1
  br label %TypeChecker_error.exit191

TypeChecker_error.exit191:                        ; preds = %if.entry17, %TypeChecker_error.exit191.loopexit
  %.pre-phi80 = phi i64 [ %.pre79, %TypeChecker_error.exit191.loopexit ], [ %104, %if.entry17 ]
  %114 = phi ptr [ %111, %TypeChecker_error.exit191.loopexit ], [ %.pre66, %if.entry17 ]
  %115 = phi i64 [ %.pre67, %TypeChecker_error.exit191.loopexit ], [ %103, %if.entry17 ]
  store i64 %.pre-phi80, ptr %memberidx.i.i187, align 4
  %116 = getelementptr inbounds ptr, ptr %114, i64 %115
  store ptr %102, ptr %116, align 8
  br label %common.ret

ifend19:                                          ; preds = %ifend13
  %117 = load ptr, ptr %0, align 8
  %memberidx.i.i192 = getelementptr inbounds %PropId, ptr %54, i64 0, i32 1
  %118 = load ptr, ptr %memberidx.i.i192, align 8
  %119 = load ptr, ptr %117, align 8
  %120 = load i64, ptr %118, align 4
  %121 = load ptr, ptr %119, align 8
  %122 = getelementptr inbounds ptr, ptr %121, i64 %120
  %123 = load ptr, ptr %122, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %123, i64 0, i32 3
  %124 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %118, i64 0, i32 2
  %125 = load i64, ptr %memberidx3.i.i.i, align 4
  %126 = load ptr, ptr %124, align 8
  %127 = getelementptr inbounds ptr, ptr %126, i64 %125
  %128 = load ptr, ptr %127, align 8
  %129 = load i64, ptr %54, align 4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend19
  %memberidx1.i194 = getelementptr inbounds %Class, ptr %128, i64 0, i32 5
  %131 = load ptr, ptr %memberidx1.i194, align 8
  %memberidx2.i195 = getelementptr inbounds %PropId, ptr %54, i64 0, i32 2
  %132 = load i64, ptr %memberidx2.i195, align 4
  %133 = load ptr, ptr %131, align 8
  %134 = getelementptr inbounds ptr, ptr %133, i64 %132
  %135 = load ptr, ptr %134, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %135, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend19
  %memberidx4.i = getelementptr inbounds %Class, ptr %128, i64 0, i32 4
  %136 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %54, i64 0, i32 2
  %137 = load i64, ptr %memberidx5.i, align 4
  %138 = load ptr, ptr %136, align 8
  %139 = getelementptr inbounds ptr, ptr %138, i64 %137
  %140 = load ptr, ptr %139, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %140, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i193 = load ptr, ptr %common.ret.op.in.i, align 8
  br label %ifend6

if.entry24:                                       ; preds = %is_object.exit.thread, %else5
  %memberidx27 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %141 = load ptr, ptr %memberidx27, align 8
  %142 = load i64, ptr %141, align 4
  %143 = icmp eq i64 %142, 3
  %memberidx.i196 = getelementptr inbounds %VarId, ptr %141, i64 0, i32 1
  %144 = load i64, ptr %memberidx.i196, align 4
  %145 = load ptr, ptr %0, align 8
  %146 = load ptr, ptr %145, align 8
  %147 = load ptr, ptr %146, align 8
  %148 = getelementptr inbounds ptr, ptr %147, i64 %144
  %149 = load ptr, ptr %148, align 8
  br i1 %143, label %if.entry29, label %else30

if.entry29:                                       ; preds = %if.entry24
  %memberidx1.i197 = getelementptr inbounds %Module, ptr %149, i64 0, i32 3
  %150 = load ptr, ptr %memberidx1.i197, align 8
  %memberidx2.i198 = getelementptr inbounds %VarId, ptr %141, i64 0, i32 2
  %151 = load i64, ptr %memberidx2.i198, align 4
  %152 = load ptr, ptr %150, align 8
  %153 = getelementptr inbounds ptr, ptr %152, i64 %151
  %154 = load ptr, ptr %153, align 8
  %memberidx32 = getelementptr inbounds %Class, ptr %154, i64 0, i32 7
  %155 = load ptr, ptr %memberidx32, align 8
  %156 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i199 = getelementptr inbounds %Map_String_PropId_, ptr %155, i64 0, i32 1
  %157 = load i64, ptr %memberidx.i199, align 4
  %158 = urem i64 %156, %157
  %159 = load ptr, ptr %155, align 8
  %160 = getelementptr inbounds ptr, ptr %159, i64 %158
  %161 = load ptr, ptr %160, align 8
  %.not.i20122 = icmp eq ptr %161, null
  br i1 %.not.i20122, label %if.entry33, label %while.body.i208.lr.ph

while.body.i208.lr.ph:                            ; preds = %if.entry29
  %memberidx1.i.i206 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  br label %while.body.i208

while.end.i204:                                   ; preds = %ifend.i.i209
  %.pre49.pre = load ptr, ptr %155, align 8
  %.phi.trans.insert50.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre49.pre, i64 %hash.0.i20023
  %.pre51.pre = load ptr, ptr %.phi.trans.insert50.phi.trans.insert, align 8
  %.not22.i203 = icmp eq ptr %.pre51.pre, null
  br i1 %.not22.i203, label %if.entry33, label %Map_String_PropId____getitem__.exit216

while.body.i208:                                  ; preds = %while.body.i208.lr.ph, %else.i212
  %162 = phi ptr [ %159, %while.body.i208.lr.ph ], [ %172, %else.i212 ]
  %163 = phi i64 [ %157, %while.body.i208.lr.ph ], [ %173, %else.i212 ]
  %164 = phi ptr [ %161, %while.body.i208.lr.ph ], [ %177, %else.i212 ]
  %hash.0.i20023 = phi i64 [ %158, %while.body.i208.lr.ph ], [ %175, %else.i212 ]
  %165 = load ptr, ptr %164, align 8
  %memberidx.i.i205 = getelementptr inbounds %String, ptr %165, i64 0, i32 1
  %166 = load i64, ptr %memberidx.i.i205, align 4
  %167 = load i64, ptr %memberidx1.i.i206, align 4
  %.not.i.i207 = icmp eq i64 %166, %167
  br i1 %.not.i.i207, label %ifend.i.i209, label %else.i212

ifend.i.i209:                                     ; preds = %while.body.i208
  %168 = load ptr, ptr %165, align 8
  %169 = load ptr, ptr %12, align 8
  %170 = tail call i64 @memcmp(ptr %168, ptr %169, i64 %166)
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %while.end.i204, label %ifend.i.i209.else.i212_crit_edge

ifend.i.i209.else.i212_crit_edge:                 ; preds = %ifend.i.i209
  %.pre47 = load i64, ptr %memberidx.i199, align 4
  %.pre48 = load ptr, ptr %155, align 8
  br label %else.i212

else.i212:                                        ; preds = %ifend.i.i209.else.i212_crit_edge, %while.body.i208
  %172 = phi ptr [ %.pre48, %ifend.i.i209.else.i212_crit_edge ], [ %162, %while.body.i208 ]
  %173 = phi i64 [ %.pre47, %ifend.i.i209.else.i212_crit_edge ], [ %163, %while.body.i208 ]
  %174 = add nuw i64 %hash.0.i20023, 1
  %175 = urem i64 %174, %173
  %176 = getelementptr inbounds ptr, ptr %172, i64 %175
  %177 = load ptr, ptr %176, align 8
  %.not.i201 = icmp eq ptr %177, null
  br i1 %.not.i201, label %if.entry33, label %while.body.i208

Map_String_PropId____getitem__.exit216:           ; preds = %while.end.i204
  %memberidx10.i214 = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre51.pre, i64 0, i32 1
  %178 = load ptr, ptr %memberidx10.i214, align 8
  %179 = icmp eq ptr %178, null
  br i1 %179, label %if.entry33, label %ifend35

else30:                                           ; preds = %if.entry24
  %memberidx1.i218 = getelementptr inbounds %Module, ptr %149, i64 0, i32 6
  %180 = load ptr, ptr %memberidx1.i218, align 8
  %memberidx2.i219 = getelementptr inbounds %VarId, ptr %141, i64 0, i32 2
  %181 = load i64, ptr %memberidx2.i219, align 4
  %182 = load ptr, ptr %180, align 8
  %183 = getelementptr inbounds ptr, ptr %182, i64 %181
  %184 = load ptr, ptr %183, align 8
  %memberidx45 = getelementptr inbounds %Enum, ptr %184, i64 0, i32 3
  %185 = load ptr, ptr %memberidx45, align 8
  %186 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i220 = getelementptr inbounds %Map_String_PropId_, ptr %185, i64 0, i32 1
  %187 = load i64, ptr %memberidx.i220, align 4
  %188 = urem i64 %186, %187
  %189 = load ptr, ptr %185, align 8
  %190 = getelementptr inbounds ptr, ptr %189, i64 %188
  %191 = load ptr, ptr %190, align 8
  %.not.i22226 = icmp eq ptr %191, null
  br i1 %.not.i22226, label %if.entry46, label %while.body.i229.lr.ph

while.body.i229.lr.ph:                            ; preds = %else30
  %memberidx1.i.i227 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  br label %while.body.i229

while.end.i225:                                   ; preds = %ifend.i.i230
  %.pre42.pre = load ptr, ptr %185, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre42.pre, i64 %hash.0.i22127
  %.pre43.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i224 = icmp eq ptr %.pre43.pre, null
  br i1 %.not22.i224, label %if.entry46, label %Map_String_PropId____getitem__.exit237

while.body.i229:                                  ; preds = %while.body.i229.lr.ph, %else.i233
  %192 = phi ptr [ %189, %while.body.i229.lr.ph ], [ %202, %else.i233 ]
  %193 = phi i64 [ %187, %while.body.i229.lr.ph ], [ %203, %else.i233 ]
  %194 = phi ptr [ %191, %while.body.i229.lr.ph ], [ %207, %else.i233 ]
  %hash.0.i22127 = phi i64 [ %188, %while.body.i229.lr.ph ], [ %205, %else.i233 ]
  %195 = load ptr, ptr %194, align 8
  %memberidx.i.i226 = getelementptr inbounds %String, ptr %195, i64 0, i32 1
  %196 = load i64, ptr %memberidx.i.i226, align 4
  %197 = load i64, ptr %memberidx1.i.i227, align 4
  %.not.i.i228 = icmp eq i64 %196, %197
  br i1 %.not.i.i228, label %ifend.i.i230, label %else.i233

ifend.i.i230:                                     ; preds = %while.body.i229
  %198 = load ptr, ptr %195, align 8
  %199 = load ptr, ptr %12, align 8
  %200 = tail call i64 @memcmp(ptr %198, ptr %199, i64 %196)
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %while.end.i225, label %ifend.i.i230.else.i233_crit_edge

ifend.i.i230.else.i233_crit_edge:                 ; preds = %ifend.i.i230
  %.pre40 = load i64, ptr %memberidx.i220, align 4
  %.pre41 = load ptr, ptr %185, align 8
  br label %else.i233

else.i233:                                        ; preds = %ifend.i.i230.else.i233_crit_edge, %while.body.i229
  %202 = phi ptr [ %.pre41, %ifend.i.i230.else.i233_crit_edge ], [ %192, %while.body.i229 ]
  %203 = phi i64 [ %.pre40, %ifend.i.i230.else.i233_crit_edge ], [ %193, %while.body.i229 ]
  %204 = add nuw i64 %hash.0.i22127, 1
  %205 = urem i64 %204, %203
  %206 = getelementptr inbounds ptr, ptr %202, i64 %205
  %207 = load ptr, ptr %206, align 8
  %.not.i222 = icmp eq ptr %207, null
  br i1 %.not.i222, label %if.entry46, label %while.body.i229

Map_String_PropId____getitem__.exit237:           ; preds = %while.end.i225
  %memberidx10.i235 = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre43.pre, i64 0, i32 1
  %208 = load ptr, ptr %memberidx10.i235, align 8
  %209 = icmp eq ptr %208, null
  br i1 %209, label %if.entry46, label %ifend48

if.entry33:                                       ; preds = %else.i212, %if.entry29, %while.end.i204, %Map_String_PropId____getitem__.exit216
  %memberidx.i238 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %210 = load i64, ptr %memberidx.i238, align 4
  %211 = trunc i64 %210 to i32
  %212 = add i32 %211, 1
  %213 = tail call ptr @malloc(i32 %212)
  %214 = load ptr, ptr %12, align 8
  %215 = load i64, ptr %memberidx.i238, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %213, ptr align 8 %214, i64 %215, i1 false)
  %216 = getelementptr inbounds i8, ptr %213, i64 %215
  store i8 0, ptr %216, align 1
  %memberidx36 = getelementptr inbounds %Class, ptr %154, i64 0, i32 1
  %217 = load ptr, ptr %memberidx36, align 8
  %memberidx.i239 = getelementptr inbounds %String, ptr %217, i64 0, i32 1
  %218 = load i64, ptr %memberidx.i239, align 4
  %219 = trunc i64 %218 to i32
  %220 = add i32 %219, 1
  %221 = tail call ptr @malloc(i32 %220)
  %222 = load ptr, ptr %217, align 8
  %223 = load i64, ptr %memberidx.i239, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %221, ptr align 8 %222, i64 %223, i1 false)
  %224 = getelementptr inbounds i8, ptr %221, i64 %223
  store i8 0, ptr %224, align 1
  %225 = alloca ptr, align 8
  %226 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %225, ptr nonnull @197, ptr %213, ptr %221)
  %227 = load ptr, ptr %225, align 8
  %228 = tail call ptr @malloc(i32 24)
  store ptr %227, ptr %228, align 8
  %memberidx1.i240 = getelementptr inbounds %String, ptr %228, i64 0, i32 1
  store i64 %226, ptr %memberidx1.i240, align 4
  %memberidx2.i241 = getelementptr inbounds %String, ptr %228, i64 0, i32 2
  store i64 %226, ptr %memberidx2.i241, align 4
  tail call void @free(ptr %213)
  tail call void @free(ptr %221)
  %229 = load ptr, ptr %memberidx2, align 8
  %memberidx38 = getelementptr inbounds %Token, ptr %229, i64 0, i32 1
  %230 = load ptr, ptr %memberidx38, align 8
  %231 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i243 = getelementptr inbounds %Compiler, ptr %231, i64 0, i32 5
  %232 = load ptr, ptr %memberidx1.i243, align 8
  %233 = call ptr @malloc(i32 24)
  store i64 1, ptr %233, align 4
  %memberidx1.i.i244 = getelementptr inbounds %FloError, ptr %233, i64 0, i32 2
  store ptr %230, ptr %memberidx1.i.i244, align 8
  %memberidx2.i.i245 = getelementptr inbounds %FloError, ptr %233, i64 0, i32 1
  store ptr %228, ptr %memberidx2.i.i245, align 8
  %memberidx.i.i246 = getelementptr inbounds %Array_FloError_, ptr %232, i64 0, i32 1
  %234 = load i64, ptr %memberidx.i.i246, align 4
  %235 = add i64 %234, 1
  %memberidx.i.i.i247 = getelementptr inbounds %Array_FloError_, ptr %232, i64 0, i32 2
  %236 = load i64, ptr %memberidx.i.i.i247, align 4
  %237 = icmp slt i64 %236, %235
  %.pre55 = load ptr, ptr %232, align 8
  br i1 %237, label %while.body.i.i.i249, label %TypeChecker_error.exit250

while.body.i.i.i249:                              ; preds = %if.entry33, %while.body.i.i.i249
  %238 = phi ptr [ %242, %while.body.i.i.i249 ], [ %.pre55, %if.entry33 ]
  %239 = phi i64 [ %243, %while.body.i.i.i249 ], [ %236, %if.entry33 ]
  %240 = shl nuw i64 %239, 1
  store i64 %240, ptr %memberidx.i.i.i247, align 4
  %241 = shl i64 %239, 4
  %242 = call ptr @realloc(ptr %238, i64 %241)
  store ptr %242, ptr %232, align 8
  %243 = load i64, ptr %memberidx.i.i.i247, align 4
  %244 = icmp slt i64 %243, %235
  br i1 %244, label %while.body.i.i.i249, label %TypeChecker_error.exit250.loopexit

TypeChecker_error.exit250.loopexit:               ; preds = %while.body.i.i.i249
  %.pre56 = load i64, ptr %memberidx.i.i246, align 4
  %.pre83 = add nsw i64 %.pre56, 1
  br label %TypeChecker_error.exit250

TypeChecker_error.exit250:                        ; preds = %if.entry33, %TypeChecker_error.exit250.loopexit
  %.pre-phi84 = phi i64 [ %.pre83, %TypeChecker_error.exit250.loopexit ], [ %235, %if.entry33 ]
  %245 = phi ptr [ %242, %TypeChecker_error.exit250.loopexit ], [ %.pre55, %if.entry33 ]
  %246 = phi i64 [ %.pre56, %TypeChecker_error.exit250.loopexit ], [ %234, %if.entry33 ]
  store i64 %.pre-phi84, ptr %memberidx.i.i246, align 4
  %247 = getelementptr inbounds ptr, ptr %245, i64 %246
  store ptr %233, ptr %247, align 8
  br label %common.ret

ifend35:                                          ; preds = %Map_String_PropId____getitem__.exit216
  %248 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %178)
  %.not = icmp eq ptr %248, null
  br i1 %.not, label %ifend41, label %if.entry39

if.entry39:                                       ; preds = %ifend35
  %249 = load ptr, ptr %memberidx2, align 8
  %memberidx43 = getelementptr inbounds %Token, ptr %249, i64 0, i32 1
  %250 = load ptr, ptr %memberidx43, align 8
  %251 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i252 = getelementptr inbounds %Compiler, ptr %251, i64 0, i32 5
  %252 = load ptr, ptr %memberidx1.i252, align 8
  %253 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %253, align 4
  %memberidx1.i.i253 = getelementptr inbounds %FloError, ptr %253, i64 0, i32 2
  store ptr %250, ptr %memberidx1.i.i253, align 8
  %memberidx2.i.i254 = getelementptr inbounds %FloError, ptr %253, i64 0, i32 1
  store ptr %248, ptr %memberidx2.i.i254, align 8
  %memberidx.i.i255 = getelementptr inbounds %Array_FloError_, ptr %252, i64 0, i32 1
  %254 = load i64, ptr %memberidx.i.i255, align 4
  %255 = add i64 %254, 1
  %memberidx.i.i.i256 = getelementptr inbounds %Array_FloError_, ptr %252, i64 0, i32 2
  %256 = load i64, ptr %memberidx.i.i.i256, align 4
  %257 = icmp slt i64 %256, %255
  %.pre52 = load ptr, ptr %252, align 8
  br i1 %257, label %while.body.i.i.i258, label %TypeChecker_error.exit259

while.body.i.i.i258:                              ; preds = %if.entry39, %while.body.i.i.i258
  %258 = phi ptr [ %262, %while.body.i.i.i258 ], [ %.pre52, %if.entry39 ]
  %259 = phi i64 [ %263, %while.body.i.i.i258 ], [ %256, %if.entry39 ]
  %260 = shl nuw i64 %259, 1
  store i64 %260, ptr %memberidx.i.i.i256, align 4
  %261 = shl i64 %259, 4
  %262 = tail call ptr @realloc(ptr %258, i64 %261)
  store ptr %262, ptr %252, align 8
  %263 = load i64, ptr %memberidx.i.i.i256, align 4
  %264 = icmp slt i64 %263, %255
  br i1 %264, label %while.body.i.i.i258, label %TypeChecker_error.exit259.loopexit

TypeChecker_error.exit259.loopexit:               ; preds = %while.body.i.i.i258
  %.pre53 = load i64, ptr %memberidx.i.i255, align 4
  %.pre85 = add nsw i64 %.pre53, 1
  br label %TypeChecker_error.exit259

TypeChecker_error.exit259:                        ; preds = %if.entry39, %TypeChecker_error.exit259.loopexit
  %.pre-phi86 = phi i64 [ %.pre85, %TypeChecker_error.exit259.loopexit ], [ %255, %if.entry39 ]
  %265 = phi ptr [ %262, %TypeChecker_error.exit259.loopexit ], [ %.pre52, %if.entry39 ]
  %266 = phi i64 [ %.pre53, %TypeChecker_error.exit259.loopexit ], [ %254, %if.entry39 ]
  store i64 %.pre-phi86, ptr %memberidx.i.i255, align 4
  %267 = getelementptr inbounds ptr, ptr %265, i64 %266
  store ptr %253, ptr %267, align 8
  br label %common.ret

ifend41:                                          ; preds = %ifend35
  %268 = load ptr, ptr %0, align 8
  %memberidx.i.i260 = getelementptr inbounds %PropId, ptr %178, i64 0, i32 1
  %269 = load ptr, ptr %memberidx.i.i260, align 8
  %270 = load ptr, ptr %268, align 8
  %271 = load i64, ptr %269, align 4
  %272 = load ptr, ptr %270, align 8
  %273 = getelementptr inbounds ptr, ptr %272, i64 %271
  %274 = load ptr, ptr %273, align 8
  %memberidx2.i.i.i261 = getelementptr inbounds %Module, ptr %274, i64 0, i32 3
  %275 = load ptr, ptr %memberidx2.i.i.i261, align 8
  %memberidx3.i.i.i262 = getelementptr inbounds %TypeId, ptr %269, i64 0, i32 2
  %276 = load i64, ptr %memberidx3.i.i.i262, align 4
  %277 = load ptr, ptr %275, align 8
  %278 = getelementptr inbounds ptr, ptr %277, i64 %276
  %279 = load ptr, ptr %278, align 8
  %280 = load i64, ptr %178, align 4
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %if.entry.i268, label %ifend.i272

if.entry.i268:                                    ; preds = %ifend41
  %memberidx1.i265 = getelementptr inbounds %Class, ptr %279, i64 0, i32 5
  %282 = load ptr, ptr %memberidx1.i265, align 8
  %memberidx2.i266 = getelementptr inbounds %PropId, ptr %178, i64 0, i32 2
  %283 = load i64, ptr %memberidx2.i266, align 4
  %284 = load ptr, ptr %282, align 8
  %285 = getelementptr inbounds ptr, ptr %284, i64 %283
  %286 = load ptr, ptr %285, align 8
  %memberidx3.i267 = getelementptr inbounds %ClassMethod, ptr %286, i64 0, i32 4
  br label %get_class_prop_type.exit273

ifend.i272:                                       ; preds = %ifend41
  %memberidx4.i269 = getelementptr inbounds %Class, ptr %279, i64 0, i32 4
  %287 = load ptr, ptr %memberidx4.i269, align 8
  %memberidx5.i270 = getelementptr inbounds %PropId, ptr %178, i64 0, i32 2
  %288 = load i64, ptr %memberidx5.i270, align 4
  %289 = load ptr, ptr %287, align 8
  %290 = getelementptr inbounds ptr, ptr %289, i64 %288
  %291 = load ptr, ptr %290, align 8
  %memberidx6.i271 = getelementptr inbounds %ClassField, ptr %291, i64 0, i32 4
  br label %get_class_prop_type.exit273

get_class_prop_type.exit273:                      ; preds = %if.entry.i268, %ifend.i272
  %common.ret.op.in.i263 = phi ptr [ %memberidx3.i267, %if.entry.i268 ], [ %memberidx6.i271, %ifend.i272 ]
  %common.ret.op.i264 = load ptr, ptr %common.ret.op.in.i263, align 8
  br label %ifend6

if.entry46:                                       ; preds = %else.i233, %else30, %while.end.i225, %Map_String_PropId____getitem__.exit237
  %memberidx.i274 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %292 = load i64, ptr %memberidx.i274, align 4
  %293 = trunc i64 %292 to i32
  %294 = add i32 %293, 1
  %295 = tail call ptr @malloc(i32 %294)
  %296 = load ptr, ptr %12, align 8
  %297 = load i64, ptr %memberidx.i274, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %295, ptr align 8 %296, i64 %297, i1 false)
  %298 = getelementptr inbounds i8, ptr %295, i64 %297
  store i8 0, ptr %298, align 1
  %memberidx49 = getelementptr inbounds %Enum, ptr %184, i64 0, i32 1
  %299 = load ptr, ptr %memberidx49, align 8
  %memberidx.i275 = getelementptr inbounds %String, ptr %299, i64 0, i32 1
  %300 = load i64, ptr %memberidx.i275, align 4
  %301 = trunc i64 %300 to i32
  %302 = add i32 %301, 1
  %303 = tail call ptr @malloc(i32 %302)
  %304 = load ptr, ptr %299, align 8
  %305 = load i64, ptr %memberidx.i275, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %303, ptr align 8 %304, i64 %305, i1 false)
  %306 = getelementptr inbounds i8, ptr %303, i64 %305
  store i8 0, ptr %306, align 1
  %307 = alloca ptr, align 8
  %308 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %307, ptr nonnull @198, ptr %295, ptr %303)
  %309 = load ptr, ptr %307, align 8
  %310 = tail call ptr @malloc(i32 24)
  store ptr %309, ptr %310, align 8
  %memberidx1.i276 = getelementptr inbounds %String, ptr %310, i64 0, i32 1
  store i64 %308, ptr %memberidx1.i276, align 4
  %memberidx2.i277 = getelementptr inbounds %String, ptr %310, i64 0, i32 2
  store i64 %308, ptr %memberidx2.i277, align 4
  tail call void @free(ptr %295)
  tail call void @free(ptr %303)
  %311 = load ptr, ptr %memberidx2, align 8
  %memberidx51 = getelementptr inbounds %Token, ptr %311, i64 0, i32 1
  %312 = load ptr, ptr %memberidx51, align 8
  %313 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i279 = getelementptr inbounds %Compiler, ptr %313, i64 0, i32 5
  %314 = load ptr, ptr %memberidx1.i279, align 8
  %315 = call ptr @malloc(i32 24)
  store i64 1, ptr %315, align 4
  %memberidx1.i.i280 = getelementptr inbounds %FloError, ptr %315, i64 0, i32 2
  store ptr %312, ptr %memberidx1.i.i280, align 8
  %memberidx2.i.i281 = getelementptr inbounds %FloError, ptr %315, i64 0, i32 1
  store ptr %310, ptr %memberidx2.i.i281, align 8
  %memberidx.i.i282 = getelementptr inbounds %Array_FloError_, ptr %314, i64 0, i32 1
  %316 = load i64, ptr %memberidx.i.i282, align 4
  %317 = add i64 %316, 1
  %memberidx.i.i.i283 = getelementptr inbounds %Array_FloError_, ptr %314, i64 0, i32 2
  %318 = load i64, ptr %memberidx.i.i.i283, align 4
  %319 = icmp slt i64 %318, %317
  %.pre44 = load ptr, ptr %314, align 8
  br i1 %319, label %while.body.i.i.i285, label %TypeChecker_error.exit286

while.body.i.i.i285:                              ; preds = %if.entry46, %while.body.i.i.i285
  %320 = phi ptr [ %324, %while.body.i.i.i285 ], [ %.pre44, %if.entry46 ]
  %321 = phi i64 [ %325, %while.body.i.i.i285 ], [ %318, %if.entry46 ]
  %322 = shl nuw i64 %321, 1
  store i64 %322, ptr %memberidx.i.i.i283, align 4
  %323 = shl i64 %321, 4
  %324 = call ptr @realloc(ptr %320, i64 %323)
  store ptr %324, ptr %314, align 8
  %325 = load i64, ptr %memberidx.i.i.i283, align 4
  %326 = icmp slt i64 %325, %317
  br i1 %326, label %while.body.i.i.i285, label %TypeChecker_error.exit286.loopexit

TypeChecker_error.exit286.loopexit:               ; preds = %while.body.i.i.i285
  %.pre45 = load i64, ptr %memberidx.i.i282, align 4
  %.pre87 = add nsw i64 %.pre45, 1
  br label %TypeChecker_error.exit286

TypeChecker_error.exit286:                        ; preds = %if.entry46, %TypeChecker_error.exit286.loopexit
  %.pre-phi88 = phi i64 [ %.pre87, %TypeChecker_error.exit286.loopexit ], [ %317, %if.entry46 ]
  %327 = phi ptr [ %324, %TypeChecker_error.exit286.loopexit ], [ %.pre44, %if.entry46 ]
  %328 = phi i64 [ %.pre45, %TypeChecker_error.exit286.loopexit ], [ %316, %if.entry46 ]
  store i64 %.pre-phi88, ptr %memberidx.i.i282, align 4
  %329 = getelementptr inbounds ptr, ptr %327, i64 %328
  store ptr %315, ptr %329, align 8
  br label %common.ret

ifend48:                                          ; preds = %Map_String_PropId____getitem__.exit237
  %330 = tail call ptr @malloc(i32 16)
  %331 = load ptr, ptr %184, align 8
  store i64 12, ptr %330, align 4
  %memberidx.i287 = getelementptr inbounds %EnumType, ptr %330, i64 0, i32 1
  store ptr %331, ptr %memberidx.i287, align 8
  br label %ifend6

if.entry53:                                       ; preds = %is_object.exit.thread, %else5
  %332 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %332, ptr noundef nonnull align 8 dereferenceable(9) @199, i64 9, i1 false)
  %333 = tail call ptr @malloc(i32 24)
  store ptr %332, ptr %333, align 8
  %memberidx1.i.i288 = getelementptr inbounds %String, ptr %333, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i288, align 4
  %memberidx2.i.i289 = getelementptr inbounds %String, ptr %333, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i289, align 4
  %memberidx.i290 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %334 = load i64, ptr %memberidx.i290, align 4
  %.not.i292 = icmp eq i64 %334, 9
  br i1 %.not.i292, label %ifend.i294, label %else57

ifend.i294:                                       ; preds = %if.entry53
  %335 = load ptr, ptr %12, align 8
  %336 = tail call i64 @memcmp(ptr %335, ptr nonnull %332, i64 9)
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %ifend58, label %else57

else57:                                           ; preds = %if.entry53, %ifend.i294
  %338 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %338, ptr noundef nonnull align 8 dereferenceable(9) @200, i64 9, i1 false)
  %339 = tail call ptr @malloc(i32 24)
  store ptr %338, ptr %339, align 8
  %memberidx1.i.i295 = getelementptr inbounds %String, ptr %339, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i295, align 4
  %memberidx2.i.i296 = getelementptr inbounds %String, ptr %339, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i296, align 4
  %340 = load i64, ptr %memberidx.i290, align 4
  %.not.i299 = icmp eq i64 %340, 9
  br i1 %.not.i299, label %ifend.i301, label %else60

ifend.i301:                                       ; preds = %else57
  %341 = load ptr, ptr %12, align 8
  %342 = tail call i64 @memcmp(ptr %341, ptr nonnull %338, i64 9)
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %ifend58, label %else60

ifend58:                                          ; preds = %ifend.i333, %ifend.i325, %ifend.i317, %ifend.i301, %ifend.i294
  %mem_intrinsic.0 = phi i64 [ 3, %ifend.i294 ], [ 4, %ifend.i301 ], [ 5, %ifend.i317 ], [ 6, %ifend.i325 ], [ 7, %ifend.i333 ]
  %344 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %344, align 4
  %memberidx.i.i303 = getelementptr inbounds %Expression, ptr %344, i64 0, i32 2
  store i64 19, ptr %memberidx.i.i303, align 4
  %memberidx1.i.i304 = getelementptr inbounds %Expression, ptr %344, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i304, align 1
  %memberidx.i305 = getelementptr inbounds %IntrinsicCall, ptr %344, i64 0, i32 4
  store i64 %mem_intrinsic.0, ptr %memberidx.i305, align 4
  %memberidx1.i306 = getelementptr inbounds %IntrinsicCall, ptr %344, i64 0, i32 5
  %345 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %345, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %345, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i, align 4
  %346 = tail call ptr @malloc(i32 64)
  store ptr %346, ptr %345, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %345, ptr %memberidx1.i306, align 8
  %memberidx4.i308 = getelementptr inbounds %Expression, ptr %344, i64 0, i32 3
  %347 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %347, align 4
  store ptr %347, ptr %memberidx4.i308, align 8
  %348 = load i64, ptr %memberidx.i7.i, align 4
  %349 = add i64 %348, 1
  %350 = load i64, ptr %memberidx1.i8.i, align 4
  %351 = icmp slt i64 %350, %349
  %.pre37 = load ptr, ptr %345, align 8
  br i1 %351, label %while.body.i.i, label %Array_Expression____sl__.exit

while.body.i.i:                                   ; preds = %ifend58, %while.body.i.i
  %352 = phi ptr [ %356, %while.body.i.i ], [ %.pre37, %ifend58 ]
  %353 = phi i64 [ %357, %while.body.i.i ], [ %350, %ifend58 ]
  %354 = shl nuw i64 %353, 1
  store i64 %354, ptr %memberidx1.i8.i, align 4
  %355 = shl i64 %353, 4
  %356 = tail call ptr @realloc(ptr %352, i64 %355)
  store ptr %356, ptr %345, align 8
  %357 = load i64, ptr %memberidx1.i8.i, align 4
  %358 = icmp slt i64 %357, %349
  br i1 %358, label %while.body.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.body.i.i
  %.pre38 = load i64, ptr %memberidx.i7.i, align 4
  %.pre89 = add nsw i64 %.pre38, 1
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend58, %Array_Expression____sl__.exit.loopexit
  %.pre-phi90 = phi i64 [ %.pre89, %Array_Expression____sl__.exit.loopexit ], [ %349, %ifend58 ]
  %359 = phi ptr [ %356, %Array_Expression____sl__.exit.loopexit ], [ %.pre37, %ifend58 ]
  %360 = phi i64 [ %.pre38, %Array_Expression____sl__.exit.loopexit ], [ %348, %ifend58 ]
  store i64 %.pre-phi90, ptr %memberidx.i7.i, align 4
  %361 = getelementptr inbounds ptr, ptr %359, i64 %360
  store ptr %5, ptr %361, align 8
  br label %common.ret

else60:                                           ; preds = %else57, %ifend.i301
  %362 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %362, ptr noundef nonnull align 8 dereferenceable(9) @201, i64 9, i1 false)
  %363 = tail call ptr @malloc(i32 24)
  store ptr %362, ptr %363, align 8
  %memberidx1.i.i311 = getelementptr inbounds %String, ptr %363, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i311, align 4
  %memberidx2.i.i312 = getelementptr inbounds %String, ptr %363, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i312, align 4
  %364 = load i64, ptr %memberidx.i290, align 4
  %.not.i315 = icmp eq i64 %364, 9
  br i1 %.not.i315, label %ifend.i317, label %else63

ifend.i317:                                       ; preds = %else60
  %365 = load ptr, ptr %12, align 8
  %366 = tail call i64 @memcmp(ptr %365, ptr nonnull %362, i64 9)
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %ifend58, label %else63

else63:                                           ; preds = %else60, %ifend.i317
  %368 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %368, ptr noundef nonnull align 8 dereferenceable(6) @202, i64 6, i1 false)
  %369 = tail call ptr @malloc(i32 24)
  store ptr %368, ptr %369, align 8
  %memberidx1.i.i319 = getelementptr inbounds %String, ptr %369, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i319, align 4
  %memberidx2.i.i320 = getelementptr inbounds %String, ptr %369, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i320, align 4
  %370 = load i64, ptr %memberidx.i290, align 4
  %.not.i323 = icmp eq i64 %370, 6
  br i1 %.not.i323, label %ifend.i325, label %else66

ifend.i325:                                       ; preds = %else63
  %371 = load ptr, ptr %12, align 8
  %372 = tail call i64 @memcmp(ptr %371, ptr nonnull %368, i64 6)
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %ifend58, label %else66

else66:                                           ; preds = %else63, %ifend.i325
  %374 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %374, ptr noundef nonnull align 8 dereferenceable(7) @203, i64 7, i1 false)
  %375 = tail call ptr @malloc(i32 24)
  store ptr %374, ptr %375, align 8
  %memberidx1.i.i327 = getelementptr inbounds %String, ptr %375, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i327, align 4
  %memberidx2.i.i328 = getelementptr inbounds %String, ptr %375, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i328, align 4
  %376 = load i64, ptr %memberidx.i290, align 4
  %.not.i331 = icmp eq i64 %376, 7
  %extract.t93 = trunc i64 %376 to i32
  br i1 %.not.i331, label %ifend.i333, label %else69

ifend.i333:                                       ; preds = %else66
  %377 = load ptr, ptr %12, align 8
  %378 = tail call i64 @memcmp(ptr %377, ptr nonnull %374, i64 7)
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %ifend58, label %ifend.i333.else69_crit_edge

ifend.i333.else69_crit_edge:                      ; preds = %ifend.i333
  %.pre = load i64, ptr %memberidx.i290, align 4
  %extract.t = trunc i64 %.pre to i32
  br label %else69

else69:                                           ; preds = %ifend.i333.else69_crit_edge, %else66
  %.off0 = phi i32 [ %extract.t, %ifend.i333.else69_crit_edge ], [ %extract.t93, %else66 ]
  %380 = add i32 %.off0, 1
  %381 = tail call ptr @malloc(i32 %380)
  %382 = load ptr, ptr %12, align 8
  %383 = load i64, ptr %memberidx.i290, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %381, ptr align 8 %382, i64 %383, i1 false)
  %384 = getelementptr inbounds i8, ptr %381, i64 %383
  store i8 0, ptr %384, align 1
  %385 = alloca ptr, align 8
  %386 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %385, ptr nonnull @204, ptr %381)
  %387 = load ptr, ptr %385, align 8
  %388 = tail call ptr @malloc(i32 24)
  store ptr %387, ptr %388, align 8
  %memberidx1.i336 = getelementptr inbounds %String, ptr %388, i64 0, i32 1
  store i64 %386, ptr %memberidx1.i336, align 4
  %memberidx2.i337 = getelementptr inbounds %String, ptr %388, i64 0, i32 2
  store i64 %386, ptr %memberidx2.i337, align 4
  tail call void @free(ptr %381)
  %389 = load ptr, ptr %memberidx2, align 8
  %memberidx72 = getelementptr inbounds %Token, ptr %389, i64 0, i32 1
  %390 = load ptr, ptr %memberidx72, align 8
  %391 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i339 = getelementptr inbounds %Compiler, ptr %391, i64 0, i32 5
  %392 = load ptr, ptr %memberidx1.i339, align 8
  %393 = call ptr @malloc(i32 24)
  store i64 1, ptr %393, align 4
  %memberidx1.i.i340 = getelementptr inbounds %FloError, ptr %393, i64 0, i32 2
  store ptr %390, ptr %memberidx1.i.i340, align 8
  %memberidx2.i.i341 = getelementptr inbounds %FloError, ptr %393, i64 0, i32 1
  store ptr %388, ptr %memberidx2.i.i341, align 8
  %memberidx.i.i342 = getelementptr inbounds %Array_FloError_, ptr %392, i64 0, i32 1
  %394 = load i64, ptr %memberidx.i.i342, align 4
  %395 = add i64 %394, 1
  %memberidx.i.i.i343 = getelementptr inbounds %Array_FloError_, ptr %392, i64 0, i32 2
  %396 = load i64, ptr %memberidx.i.i.i343, align 4
  %397 = icmp slt i64 %396, %395
  %.pre34 = load ptr, ptr %392, align 8
  br i1 %397, label %while.body.i.i.i345, label %TypeChecker_error.exit346

while.body.i.i.i345:                              ; preds = %else69, %while.body.i.i.i345
  %398 = phi ptr [ %402, %while.body.i.i.i345 ], [ %.pre34, %else69 ]
  %399 = phi i64 [ %403, %while.body.i.i.i345 ], [ %396, %else69 ]
  %400 = shl nuw i64 %399, 1
  store i64 %400, ptr %memberidx.i.i.i343, align 4
  %401 = shl i64 %399, 4
  %402 = call ptr @realloc(ptr %398, i64 %401)
  store ptr %402, ptr %392, align 8
  %403 = load i64, ptr %memberidx.i.i.i343, align 4
  %404 = icmp slt i64 %403, %395
  br i1 %404, label %while.body.i.i.i345, label %TypeChecker_error.exit346.loopexit

TypeChecker_error.exit346.loopexit:               ; preds = %while.body.i.i.i345
  %.pre35 = load i64, ptr %memberidx.i.i342, align 4
  %.pre91 = add nsw i64 %.pre35, 1
  br label %TypeChecker_error.exit346

TypeChecker_error.exit346:                        ; preds = %else69, %TypeChecker_error.exit346.loopexit
  %.pre-phi92 = phi i64 [ %.pre91, %TypeChecker_error.exit346.loopexit ], [ %395, %else69 ]
  %405 = phi ptr [ %402, %TypeChecker_error.exit346.loopexit ], [ %.pre34, %else69 ]
  %406 = phi i64 [ %.pre35, %TypeChecker_error.exit346.loopexit ], [ %394, %else69 ]
  store i64 %.pre-phi92, ptr %memberidx.i.i342, align 4
  %407 = getelementptr inbounds ptr, ptr %405, i64 %406
  store ptr %393, ptr %407, align 8
  br label %common.ret

if.entry75:                                       ; preds = %is_object.exit.thread, %else5
  %408 = tail call ptr @malloc(i32 4)
  store i32 1702521203, ptr %408, align 8
  %409 = tail call ptr @malloc(i32 24)
  store ptr %408, ptr %409, align 8
  %memberidx1.i.i347 = getelementptr inbounds %String, ptr %409, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i347, align 4
  %memberidx2.i.i348 = getelementptr inbounds %String, ptr %409, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i348, align 4
  %memberidx.i349 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %410 = load i64, ptr %memberidx.i349, align 4
  %.not.i351 = icmp eq i64 %410, 4
  br i1 %.not.i351, label %ifend.i353, label %ifend6

ifend.i353:                                       ; preds = %if.entry75
  %411 = load ptr, ptr %12, align 8
  %412 = tail call i64 @memcmp(ptr %411, ptr nonnull %408, i64 4)
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %if.entry78, label %ifend6

if.entry78:                                       ; preds = %ifend.i353
  %414 = tail call ptr @malloc(i32 33)
  %memberidx81 = getelementptr inbounds %ArrayType, ptr %10, i64 0, i32 2
  %415 = load i64, ptr %memberidx81, align 4
  store i64 8, ptr %414, align 4
  %memberidx.i.i355 = getelementptr inbounds %Expression, ptr %414, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i355, align 4
  %memberidx1.i.i356 = getelementptr inbounds %Expression, ptr %414, i64 0, i32 1
  %memberidx.i357 = getelementptr inbounds %Expression, ptr %414, i64 0, i32 3
  %416 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %416, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %416, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  store ptr %416, ptr %memberidx.i357, align 8
  %memberidx1.i358 = getelementptr inbounds %IntExpression, ptr %414, i64 0, i32 4
  store i64 %415, ptr %memberidx1.i358, align 4
  store i1 true, ptr %memberidx1.i.i356, align 1
  br label %common.ret

if.entry83:                                       ; preds = %is_object.exit.thread, %else5
  %memberidx86 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %417 = load ptr, ptr %memberidx86, align 8
  %memberidx87 = getelementptr inbounds %ModuleVarId, ptr %417, i64 0, i32 3
  %418 = load ptr, ptr %memberidx87, align 8
  %memberidx88 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %419 = load ptr, ptr %memberidx88, align 8
  store ptr %418, ptr %memberidx88, align 8
  %420 = alloca %VarAccessExpressionNode, align 8
  %421 = load ptr, ptr %memberidx2, align 8
  %memberidx.i360 = getelementptr inbounds %Token, ptr %421, i64 0, i32 1
  %422 = load ptr, ptr %memberidx.i360, align 8
  store ptr %422, ptr %420, align 8
  %memberidx.i.i.i361 = getelementptr inbounds %StatementNode, ptr %420, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i361, align 8
  %memberidx.i.i362 = getelementptr inbounds %ExpressionNode, ptr %420, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i362, align 8
  %memberidx1.i363 = getelementptr inbounds %VarAccessExpressionNode, ptr %420, i64 0, i32 3
  store ptr %421, ptr %memberidx1.i363, align 8
  %423 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %423, align 4
  %424 = call fastcc ptr @TypeChecker_check_var_access_expr(ptr %0, ptr nonnull %423, ptr nonnull %420)
  store ptr %419, ptr %memberidx88, align 8
  br label %common.ret

else84:                                           ; preds = %is_object.exit.thread, %else5
  %memberidx.i364 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %425 = load i64, ptr %memberidx.i364, align 4
  %426 = trunc i64 %425 to i32
  %427 = add i32 %426, 1
  %428 = tail call ptr @malloc(i32 %427)
  %429 = load ptr, ptr %12, align 8
  %430 = load i64, ptr %memberidx.i364, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %428, ptr align 8 %429, i64 %430, i1 false)
  %431 = getelementptr inbounds i8, ptr %428, i64 %430
  store i8 0, ptr %431, align 1
  %432 = load ptr, ptr %memberidx1, align 8
  %433 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %432)
  %memberidx.i365 = getelementptr inbounds %String, ptr %433, i64 0, i32 1
  %434 = load i64, ptr %memberidx.i365, align 4
  %435 = trunc i64 %434 to i32
  %436 = add i32 %435, 1
  %437 = tail call ptr @malloc(i32 %436)
  %438 = load ptr, ptr %433, align 8
  %439 = load i64, ptr %memberidx.i365, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %437, ptr align 8 %438, i64 %439, i1 false)
  %440 = getelementptr inbounds i8, ptr %437, i64 %439
  store i8 0, ptr %440, align 1
  %441 = alloca ptr, align 8
  %442 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %441, ptr nonnull @205, ptr %428, ptr %437)
  %443 = load ptr, ptr %441, align 8
  %444 = tail call ptr @malloc(i32 24)
  store ptr %443, ptr %444, align 8
  %memberidx1.i366 = getelementptr inbounds %String, ptr %444, i64 0, i32 1
  store i64 %442, ptr %memberidx1.i366, align 4
  %memberidx2.i367 = getelementptr inbounds %String, ptr %444, i64 0, i32 2
  store i64 %442, ptr %memberidx2.i367, align 4
  tail call void @free(ptr %428)
  tail call void @free(ptr %437)
  %445 = load ptr, ptr %memberidx, align 8
  %446 = load ptr, ptr %445, align 8
  %447 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i369 = getelementptr inbounds %Compiler, ptr %447, i64 0, i32 5
  %448 = load ptr, ptr %memberidx1.i369, align 8
  %449 = call ptr @malloc(i32 24)
  store i64 4, ptr %449, align 4
  %memberidx1.i.i370 = getelementptr inbounds %FloError, ptr %449, i64 0, i32 2
  store ptr %446, ptr %memberidx1.i.i370, align 8
  %memberidx2.i.i371 = getelementptr inbounds %FloError, ptr %449, i64 0, i32 1
  store ptr %444, ptr %memberidx2.i.i371, align 8
  %memberidx.i.i372 = getelementptr inbounds %Array_FloError_, ptr %448, i64 0, i32 1
  %450 = load i64, ptr %memberidx.i.i372, align 4
  %451 = add i64 %450, 1
  %memberidx.i.i.i373 = getelementptr inbounds %Array_FloError_, ptr %448, i64 0, i32 2
  %452 = load i64, ptr %memberidx.i.i.i373, align 4
  %453 = icmp slt i64 %452, %451
  %.pre58 = load ptr, ptr %448, align 8
  br i1 %453, label %while.body.i.i.i375, label %TypeChecker_error.exit376

while.body.i.i.i375:                              ; preds = %else84, %while.body.i.i.i375
  %454 = phi ptr [ %458, %while.body.i.i.i375 ], [ %.pre58, %else84 ]
  %455 = phi i64 [ %459, %while.body.i.i.i375 ], [ %452, %else84 ]
  %456 = shl nuw i64 %455, 1
  store i64 %456, ptr %memberidx.i.i.i373, align 4
  %457 = shl i64 %455, 4
  %458 = call ptr @realloc(ptr %454, i64 %457)
  store ptr %458, ptr %448, align 8
  %459 = load i64, ptr %memberidx.i.i.i373, align 4
  %460 = icmp slt i64 %459, %451
  br i1 %460, label %while.body.i.i.i375, label %TypeChecker_error.exit376.loopexit

TypeChecker_error.exit376.loopexit:               ; preds = %while.body.i.i.i375
  %.pre59 = load i64, ptr %memberidx.i.i372, align 4
  %.pre81 = add nsw i64 %.pre59, 1
  br label %TypeChecker_error.exit376

TypeChecker_error.exit376:                        ; preds = %else84, %TypeChecker_error.exit376.loopexit
  %.pre-phi82 = phi i64 [ %.pre81, %TypeChecker_error.exit376.loopexit ], [ %451, %else84 ]
  %461 = phi ptr [ %458, %TypeChecker_error.exit376.loopexit ], [ %.pre58, %else84 ]
  %462 = phi i64 [ %.pre59, %TypeChecker_error.exit376.loopexit ], [ %450, %else84 ]
  store i64 %.pre-phi82, ptr %memberidx.i.i372, align 4
  %463 = getelementptr inbounds ptr, ptr %461, i64 %462
  store ptr %449, ptr %463, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %.not = icmp eq i64 %5, 19
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %6, align 4
  %8 = icmp eq i64 %7, 20
  br i1 %8, label %if.entry.i82, label %is_object.exit

if.entry.i82:                                     ; preds = %if.entry, %if.entry.i82
  %.tr5.i = phi ptr [ %9, %if.entry.i82 ], [ %6, %if.entry ]
  %memberidx1.i81 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i81, align 8
  %10 = load i64, ptr %9, align 4
  %11 = icmp eq i64 %10, 20
  br i1 %11, label %if.entry.i82, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i82, %if.entry
  %.lcssa.i = phi i64 [ %7, %if.entry ], [ %10, %if.entry.i82 ]
  %12 = icmp eq i64 %.lcssa.i, 11
  br i1 %12, label %if.entry2, label %ifend4

ifend:                                            ; preds = %ifend4, %4
  %right.0 = phi ptr [ %52, %ifend4 ], [ %2, %4 ]
  %memberidx.i = getelementptr inbounds %Expression, ptr %1, i64 0, i32 2
  %13 = load i64, ptr %memberidx.i, align 4
  switch i64 %13, label %if.entry12 [
    i64 8, label %if.entry.i
    i64 13, label %if.entry4.i
    i64 14, label %check_is_var.exit
  ]

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %14 = load ptr, ptr %memberidx1.i, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %ifend14, label %if.entry12

if.entry4.i:                                      ; preds = %ifend
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %1, i64 0, i32 5
  %17 = load ptr, ptr %memberidx7.i, align 8
  %18 = load i64, ptr %17, align 4
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %ifend14, label %if.entry12

check_is_var.exit:                                ; preds = %ifend
  %memberidx13.i = getelementptr inbounds %IndexExpression, ptr %1, i64 0, i32 4
  %20 = load ptr, ptr %memberidx13.i, align 8
  %memberidx14.i = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  %21 = load ptr, ptr %memberidx14.i, align 8
  %22 = load i64, ptr %21, align 4
  %.not83 = icmp eq i64 %22, 15
  br i1 %.not83, label %if.entry12, label %ifend14

if.entry2:                                        ; preds = %is_object.exit
  %23 = tail call fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr %3)
  %24 = icmp ne ptr %23, null
  %memberidx.i48 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i48, align 8
  %memberidx1.i49 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i49, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i, align 4
  %28 = icmp sgt i64 %27, 0
  %29 = or i1 %24, %28
  br i1 %29, label %common.ret, label %if.entry2.ifend4_crit_edge

if.entry2.ifend4_crit_edge:                       ; preds = %if.entry2
  %.pre = load ptr, ptr %memberidx1, align 8
  %.pre84 = load i64, ptr %memberidx, align 4
  br label %ifend4

ifend4:                                           ; preds = %if.entry2.ifend4_crit_edge, %is_object.exit
  %30 = phi i64 [ %.pre84, %if.entry2.ifend4_crit_edge ], [ %5, %is_object.exit ]
  %31 = phi ptr [ %.pre, %if.entry2.ifend4_crit_edge ], [ %6, %is_object.exit ]
  %32 = icmp eq i64 %30, 20
  %spec.store.select.i = select i1 %32, i64 1, i64 %30
  %33 = icmp eq i64 %spec.store.select.i, 21
  %spec.store.select34.i = select i1 %33, i64 2, i64 %spec.store.select.i
  %34 = icmp eq i64 %spec.store.select34.i, 22
  %spec.store.select30.i = select i1 %34, i64 3, i64 %spec.store.select34.i
  %35 = icmp eq i64 %spec.store.select30.i, 23
  %spec.store.select37.i = select i1 %35, i64 4, i64 %spec.store.select30.i
  %36 = icmp eq i64 %spec.store.select37.i, 24
  %spec.store.select31.i = select i1 %36, i64 5, i64 %spec.store.select37.i
  %37 = icmp eq i64 %spec.store.select31.i, 25
  %spec.store.select35.i = select i1 %37, i64 6, i64 %spec.store.select31.i
  %38 = icmp eq i64 %spec.store.select35.i, 26
  %spec.store.select32.i = select i1 %38, i64 16, i64 %spec.store.select35.i
  %39 = icmp eq i64 %spec.store.select32.i, 27
  %spec.store.select38.i = select i1 %39, i64 15, i64 %spec.store.select32.i
  %40 = icmp eq i64 %spec.store.select38.i, 29
  %spec.store.select33.i = select i1 %40, i64 13, i64 %spec.store.select38.i
  %41 = icmp eq i64 %spec.store.select33.i, 30
  %spec.store.select36.i = select i1 %41, i64 14, i64 %spec.store.select33.i
  %42 = tail call ptr @malloc(i32 48)
  %memberidx28.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 3
  %43 = load ptr, ptr %memberidx28.i, align 8
  %memberidx29.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 5
  %44 = load ptr, ptr %memberidx29.i, align 8
  %45 = load ptr, ptr %43, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = tail call ptr @malloc(i32 32)
  %48 = load i64, ptr %45, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %46, i64 0, i32 1
  %49 = load i64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %46, i64 0, i32 3
  %51 = load i64, ptr %memberidx3.i.i.i, align 4
  store i64 %48, ptr %47, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 1
  store i64 %49, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 3
  store i64 %51, ptr %memberidx3.i.i.i.i, align 4
  store ptr %47, ptr %42, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %42, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %ExpressionNode, ptr %42, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 3
  store ptr %43, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 4
  store i64 %spec.store.select36.i, ptr %memberidx3.i.i, align 4
  %memberidx4.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 5
  store ptr %44, ptr %memberidx4.i.i, align 8
  %52 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %31, ptr nonnull %42)
  %memberidx.i52 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %53 = load ptr, ptr %memberidx.i52, align 8
  %memberidx1.i53 = getelementptr inbounds %Compiler, ptr %53, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1.i53, align 8
  %memberidx2.i54 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx2.i54, align 4
  %56 = icmp sgt i64 %55, 0
  br i1 %56, label %common.ret, label %ifend

common.ret:                                       ; preds = %if.entry2, %ifend4, %ifend21, %TypeChecker_error.exit73, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit73 ], [ %121, %ifend21 ], [ null, %ifend4 ], [ %23, %if.entry2 ]
  ret ptr %common.ret.op

if.entry12:                                       ; preds = %if.entry4.i, %if.entry.i, %ifend, %check_is_var.exit
  %57 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %57, ptr noundef nonnull align 8 dereferenceable(33) @172, i64 33, i1 false)
  %58 = tail call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 33, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i55 = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 33, ptr %memberidx2.i.i55, align 4
  %memberidx15 = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 3
  %59 = load ptr, ptr %memberidx15, align 8
  %60 = load ptr, ptr %59, align 8
  %memberidx.i56 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %61 = load ptr, ptr %memberidx.i56, align 8
  %memberidx1.i57 = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx1.i57, align 8
  %63 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %63, align 4
  %memberidx1.i.i58 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %60, ptr %memberidx1.i.i58, align 8
  %memberidx2.i.i59 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i59, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %64 = load i64, ptr %memberidx.i.i, align 4
  %65 = add i64 %64, 1
  %memberidx.i.i.i60 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %66 = load i64, ptr %memberidx.i.i.i60, align 4
  %67 = icmp slt i64 %66, %65
  %.pre88 = load ptr, ptr %62, align 8
  br i1 %67, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry12, %while.body.i.i.i
  %68 = phi ptr [ %72, %while.body.i.i.i ], [ %.pre88, %if.entry12 ]
  %69 = phi i64 [ %73, %while.body.i.i.i ], [ %66, %if.entry12 ]
  %70 = shl nuw i64 %69, 1
  store i64 %70, ptr %memberidx.i.i.i60, align 4
  %71 = shl i64 %69, 4
  %72 = tail call ptr @realloc(ptr %68, i64 %71)
  store ptr %72, ptr %62, align 8
  %73 = load i64, ptr %memberidx.i.i.i60, align 4
  %74 = icmp slt i64 %73, %65
  br i1 %74, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre89 = load i64, ptr %memberidx.i.i, align 4
  %.pre91 = add nsw i64 %.pre89, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry12, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre91, %TypeChecker_error.exit.loopexit ], [ %65, %if.entry12 ]
  %75 = phi ptr [ %72, %TypeChecker_error.exit.loopexit ], [ %.pre88, %if.entry12 ]
  %76 = phi i64 [ %.pre89, %TypeChecker_error.exit.loopexit ], [ %64, %if.entry12 ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %77 = getelementptr inbounds ptr, ptr %75, i64 %76
  store ptr %63, ptr %77, align 8
  br label %common.ret

ifend14:                                          ; preds = %if.entry4.i, %if.entry.i, %check_is_var.exit
  %memberidx17 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %78 = load ptr, ptr %memberidx17, align 8
  %memberidx18 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %79 = load ptr, ptr %memberidx18, align 8
  %80 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %78, ptr %79)
  br i1 %80, label %ifend21, label %if.entry19

if.entry19:                                       ; preds = %ifend14
  %81 = load ptr, ptr %memberidx18, align 8
  %82 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %81)
  %memberidx.i61 = getelementptr inbounds %String, ptr %82, i64 0, i32 1
  %83 = load i64, ptr %memberidx.i61, align 4
  %84 = trunc i64 %83 to i32
  %85 = add i32 %84, 1
  %86 = tail call ptr @malloc(i32 %85)
  %87 = load ptr, ptr %82, align 8
  %88 = load i64, ptr %memberidx.i61, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %86, ptr align 8 %87, i64 %88, i1 false)
  %89 = getelementptr inbounds i8, ptr %86, i64 %88
  store i8 0, ptr %89, align 1
  %90 = load ptr, ptr %memberidx17, align 8
  %91 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %90)
  %memberidx.i62 = getelementptr inbounds %String, ptr %91, i64 0, i32 1
  %92 = load i64, ptr %memberidx.i62, align 4
  %93 = trunc i64 %92 to i32
  %94 = add i32 %93, 1
  %95 = tail call ptr @malloc(i32 %94)
  %96 = load ptr, ptr %91, align 8
  %97 = load i64, ptr %memberidx.i62, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %95, ptr align 8 %96, i64 %97, i1 false)
  %98 = getelementptr inbounds i8, ptr %95, i64 %97
  store i8 0, ptr %98, align 1
  %99 = alloca ptr, align 8
  %100 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %99, ptr nonnull @173, ptr %86, ptr %95)
  %101 = load ptr, ptr %99, align 8
  %102 = tail call ptr @malloc(i32 24)
  store ptr %101, ptr %102, align 8
  %memberidx1.i63 = getelementptr inbounds %String, ptr %102, i64 0, i32 1
  store i64 %100, ptr %memberidx1.i63, align 4
  %memberidx2.i64 = getelementptr inbounds %String, ptr %102, i64 0, i32 2
  store i64 %100, ptr %memberidx2.i64, align 4
  tail call void @free(ptr %86)
  tail call void @free(ptr %95)
  %103 = load ptr, ptr %3, align 8
  %memberidx.i65 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %104 = load ptr, ptr %memberidx.i65, align 8
  %memberidx1.i66 = getelementptr inbounds %Compiler, ptr %104, i64 0, i32 5
  %105 = load ptr, ptr %memberidx1.i66, align 8
  %106 = call ptr @malloc(i32 24)
  store i64 5, ptr %106, align 4
  %memberidx1.i.i67 = getelementptr inbounds %FloError, ptr %106, i64 0, i32 2
  store ptr %103, ptr %memberidx1.i.i67, align 8
  %memberidx2.i.i68 = getelementptr inbounds %FloError, ptr %106, i64 0, i32 1
  store ptr %102, ptr %memberidx2.i.i68, align 8
  %memberidx.i.i69 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 1
  %107 = load i64, ptr %memberidx.i.i69, align 4
  %108 = add i64 %107, 1
  %memberidx.i.i.i70 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 2
  %109 = load i64, ptr %memberidx.i.i.i70, align 4
  %110 = icmp slt i64 %109, %108
  %.pre85 = load ptr, ptr %105, align 8
  br i1 %110, label %while.body.i.i.i72, label %TypeChecker_error.exit73

while.body.i.i.i72:                               ; preds = %if.entry19, %while.body.i.i.i72
  %111 = phi ptr [ %115, %while.body.i.i.i72 ], [ %.pre85, %if.entry19 ]
  %112 = phi i64 [ %116, %while.body.i.i.i72 ], [ %109, %if.entry19 ]
  %113 = shl nuw i64 %112, 1
  store i64 %113, ptr %memberidx.i.i.i70, align 4
  %114 = shl i64 %112, 4
  %115 = call ptr @realloc(ptr %111, i64 %114)
  store ptr %115, ptr %105, align 8
  %116 = load i64, ptr %memberidx.i.i.i70, align 4
  %117 = icmp slt i64 %116, %108
  br i1 %117, label %while.body.i.i.i72, label %TypeChecker_error.exit73.loopexit

TypeChecker_error.exit73.loopexit:                ; preds = %while.body.i.i.i72
  %.pre86 = load i64, ptr %memberidx.i.i69, align 4
  %.pre92 = add nsw i64 %.pre86, 1
  br label %TypeChecker_error.exit73

TypeChecker_error.exit73:                         ; preds = %if.entry19, %TypeChecker_error.exit73.loopexit
  %.pre-phi93 = phi i64 [ %.pre92, %TypeChecker_error.exit73.loopexit ], [ %108, %if.entry19 ]
  %118 = phi ptr [ %115, %TypeChecker_error.exit73.loopexit ], [ %.pre85, %if.entry19 ]
  %119 = phi i64 [ %.pre86, %TypeChecker_error.exit73.loopexit ], [ %107, %if.entry19 ]
  store i64 %.pre-phi93, ptr %memberidx.i.i69, align 4
  %120 = getelementptr inbounds ptr, ptr %118, i64 %119
  store ptr %106, ptr %120, align 8
  br label %common.ret

ifend21:                                          ; preds = %ifend14
  %121 = tail call ptr @malloc(i32 49)
  %122 = load ptr, ptr %memberidx18, align 8
  store i64 8, ptr %121, align 4
  %memberidx.i.i74 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i74, align 4
  %memberidx1.i.i75 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 1
  %memberidx.i76 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 4
  store ptr %1, ptr %memberidx.i76, align 8
  %memberidx1.i77 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 5
  store i64 19, ptr %memberidx1.i77, align 4
  %memberidx2.i78 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i78, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %121, i64 0, i32 3
  store ptr %122, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i75, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_init_function_signature(ptr %0, ptr nocapture readonly %1, ptr %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 1
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i, align 4
  %6 = tail call ptr @malloc(i32 25)
  %7 = load ptr, ptr %1, align 8
  %memberidx1.i72 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i72, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i.i, align 8
  %9 = icmp slt i64 %8, 1
  br i1 %9, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i77 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx.i83 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 1
  %memberidx.i.i84 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Type____sl__.exit
  %.in = phi ptr [ %7, %for.body.lr.ph ], [ %62, %Array_Type____sl__.exit ]
  %10 = phi i64 [ 1, %for.body.lr.ph ], [ %61, %Array_Type____sl__.exit ]
  %11 = load ptr, ptr %.in, align 8
  %12 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %12, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i, align 4
  %memberidx1.i.i74 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i74, align 1
  %memberidx3 = getelementptr inbounds %FunctionArg, ptr %12, i64 0, i32 5
  %13 = load ptr, ptr %11, align 8
  %memberidx5 = getelementptr inbounds %IdentifierToken, ptr %13, i64 0, i32 2
  %14 = load ptr, ptr %memberidx5, align 8
  store ptr %14, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %FunctionArg, ptr %12, i64 0, i32 6
  store ptr null, ptr %memberidx6, align 8
  %15 = call ptr @malloc(i32 8)
  store i64 21, ptr %15, align 4
  %memberidx7 = getelementptr inbounds %ArgNode, ptr %11, i64 0, i32 1
  %16 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %16, null
  br i1 %.not, label %ifend, label %if.entry

common.ret.loopexit:                              ; preds = %if.entry, %if.entry13
  store i64 %10, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %6, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %for.end
  %common.ret.op = phi ptr [ %18, %for.end ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

for.end:                                          ; preds = %Array_Type____sl__.exit, %for.entry
  tail call void @free(ptr nonnull %6)
  %17 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %2)
  %18 = tail call ptr @malloc(i32 25)
  store i64 16, ptr %18, align 4
  %memberidx.i75 = getelementptr inbounds %FunctionType, ptr %18, i64 0, i32 1
  store ptr %4, ptr %memberidx.i75, align 8
  %memberidx1.i76 = getelementptr inbounds %FunctionType, ptr %18, i64 0, i32 2
  store ptr %17, ptr %memberidx1.i76, align 8
  br label %common.ret

if.entry:                                         ; preds = %for.body
  %19 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %16)
  %20 = load ptr, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx1.i78, align 8
  %memberidx2.i79 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx2.i79, align 4
  %23 = icmp sgt i64 %22, 0
  br i1 %23, label %common.ret.loopexit, label %ifend

ifend:                                            ; preds = %if.entry, %for.body
  %arg_type.0 = phi ptr [ %19, %if.entry ], [ %15, %for.body ]
  %memberidx12 = getelementptr inbounds %ArgNode, ptr %11, i64 0, i32 2
  %24 = load ptr, ptr %memberidx12, align 8
  %.not71 = icmp eq ptr %24, null
  br i1 %.not71, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend
  %25 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %arg_type.0, ptr nonnull %24)
  store ptr %25, ptr %memberidx6, align 8
  %26 = load ptr, ptr %memberidx.i77, align 8
  %memberidx1.i81 = getelementptr inbounds %Compiler, ptr %26, i64 0, i32 5
  %27 = load ptr, ptr %memberidx1.i81, align 8
  %memberidx2.i82 = getelementptr inbounds %Array_FloError_, ptr %27, i64 0, i32 1
  %28 = load i64, ptr %memberidx2.i82, align 4
  %29 = icmp sgt i64 %28, 0
  br i1 %29, label %common.ret.loopexit, label %ifend20

ifend15:                                          ; preds = %ifend20, %TypeChecker_error.exit, %else23, %ifend
  %arg_type.1 = phi ptr [ %arg_type.0, %TypeChecker_error.exit ], [ %arg_type.0, %else23 ], [ %arg_type.0, %ifend ], [ %65, %ifend20 ]
  %30 = load i64, ptr %memberidx.i83, align 4
  %31 = add i64 %30, 1
  %32 = load i64, ptr %memberidx.i.i84, align 4
  %33 = icmp slt i64 %32, %31
  %.pre114 = load ptr, ptr %3, align 8
  br i1 %33, label %while.body.i.i, label %Array_FunctionArg____sl__.exit

while.body.i.i:                                   ; preds = %ifend15, %while.body.i.i
  %34 = phi ptr [ %38, %while.body.i.i ], [ %.pre114, %ifend15 ]
  %35 = phi i64 [ %39, %while.body.i.i ], [ %32, %ifend15 ]
  %36 = shl nuw i64 %35, 1
  store i64 %36, ptr %memberidx.i.i84, align 4
  %37 = shl i64 %35, 4
  %38 = call ptr @realloc(ptr %34, i64 %37)
  store ptr %38, ptr %3, align 8
  %39 = load i64, ptr %memberidx.i.i84, align 4
  %40 = icmp slt i64 %39, %31
  br i1 %40, label %while.body.i.i, label %Array_FunctionArg____sl__.exit.loopexit

Array_FunctionArg____sl__.exit.loopexit:          ; preds = %while.body.i.i
  %.pre115 = load i64, ptr %memberidx.i83, align 4
  %.pre120 = add nsw i64 %.pre115, 1
  br label %Array_FunctionArg____sl__.exit

Array_FunctionArg____sl__.exit:                   ; preds = %ifend15, %Array_FunctionArg____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre120, %Array_FunctionArg____sl__.exit.loopexit ], [ %31, %ifend15 ]
  %41 = phi ptr [ %38, %Array_FunctionArg____sl__.exit.loopexit ], [ %.pre114, %ifend15 ]
  %42 = phi i64 [ %.pre115, %Array_FunctionArg____sl__.exit.loopexit ], [ %30, %ifend15 ]
  store i64 %.pre-phi, ptr %memberidx.i83, align 4
  %43 = getelementptr inbounds ptr, ptr %41, i64 %42
  store ptr %12, ptr %43, align 8
  %memberidx36 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 3
  store ptr %arg_type.1, ptr %memberidx36, align 8
  %44 = load ptr, ptr %memberidx3, align 8
  %45 = call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr %0, ptr %44, ptr nonnull %12, ptr %arg_type.1)
  %memberidx38 = getelementptr inbounds %FunctionArg, ptr %12, i64 0, i32 4
  %memberidx39 = getelementptr inbounds %Var, ptr %45, i64 0, i32 1
  %46 = load ptr, ptr %memberidx39, align 8
  store ptr %46, ptr %memberidx38, align 8
  %47 = load i64, ptr %memberidx.i, align 4
  %48 = add i64 %47, 1
  %49 = load i64, ptr %memberidx1.i, align 4
  %50 = icmp slt i64 %49, %48
  %.pre117 = load ptr, ptr %4, align 8
  br i1 %50, label %while.body.i.i88, label %Array_Type____sl__.exit

while.body.i.i88:                                 ; preds = %Array_FunctionArg____sl__.exit, %while.body.i.i88
  %51 = phi ptr [ %55, %while.body.i.i88 ], [ %.pre117, %Array_FunctionArg____sl__.exit ]
  %52 = phi i64 [ %56, %while.body.i.i88 ], [ %49, %Array_FunctionArg____sl__.exit ]
  %53 = shl nuw i64 %52, 1
  store i64 %53, ptr %memberidx1.i, align 4
  %54 = shl i64 %52, 4
  %55 = call ptr @realloc(ptr %51, i64 %54)
  store ptr %55, ptr %4, align 8
  %56 = load i64, ptr %memberidx1.i, align 4
  %57 = icmp slt i64 %56, %48
  br i1 %57, label %while.body.i.i88, label %Array_Type____sl__.exit.loopexit

Array_Type____sl__.exit.loopexit:                 ; preds = %while.body.i.i88
  %.pre118 = load i64, ptr %memberidx.i, align 4
  %.pre121 = add nsw i64 %.pre118, 1
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %Array_FunctionArg____sl__.exit, %Array_Type____sl__.exit.loopexit
  %.pre-phi122 = phi i64 [ %.pre121, %Array_Type____sl__.exit.loopexit ], [ %48, %Array_FunctionArg____sl__.exit ]
  %58 = phi ptr [ %55, %Array_Type____sl__.exit.loopexit ], [ %.pre117, %Array_FunctionArg____sl__.exit ]
  %59 = phi i64 [ %.pre118, %Array_Type____sl__.exit.loopexit ], [ %47, %Array_FunctionArg____sl__.exit ]
  store i64 %.pre-phi122, ptr %memberidx.i, align 4
  %60 = getelementptr inbounds ptr, ptr %58, i64 %59
  store ptr %arg_type.1, ptr %60, align 8
  %61 = add nuw nsw i64 %10, 1
  %62 = getelementptr inbounds ptr, ptr %7, i64 %10
  %.not125 = icmp slt i64 %10, %8
  br i1 %.not125, label %for.body, label %for.end

ifend20:                                          ; preds = %if.entry13
  %63 = load i64, ptr %arg_type.0, align 4
  %64 = icmp eq i64 %63, 21
  %memberidx26 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %65 = load ptr, ptr %memberidx26, align 8
  br i1 %64, label %ifend15, label %else23

else23:                                           ; preds = %ifend20
  %66 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %arg_type.0, ptr %65)
  br i1 %66, label %ifend15, label %if.entry29

if.entry29:                                       ; preds = %else23
  %67 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %arg_type.0)
  %memberidx.i89 = getelementptr inbounds %String, ptr %67, i64 0, i32 1
  %68 = load i64, ptr %memberidx.i89, align 4
  %69 = trunc i64 %68 to i32
  %70 = add i32 %69, 1
  %71 = call ptr @malloc(i32 %70)
  %72 = load ptr, ptr %67, align 8
  %73 = load i64, ptr %memberidx.i89, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %71, ptr align 8 %72, i64 %73, i1 false)
  %74 = getelementptr inbounds i8, ptr %71, i64 %73
  store i8 0, ptr %74, align 1
  %75 = load ptr, ptr %memberidx6, align 8
  %memberidx33 = getelementptr inbounds %Expression, ptr %75, i64 0, i32 3
  %76 = load ptr, ptr %memberidx33, align 8
  %77 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %76)
  %memberidx.i90 = getelementptr inbounds %String, ptr %77, i64 0, i32 1
  %78 = load i64, ptr %memberidx.i90, align 4
  %79 = trunc i64 %78 to i32
  %80 = add i32 %79, 1
  %81 = call ptr @malloc(i32 %80)
  %82 = load ptr, ptr %77, align 8
  %83 = load i64, ptr %memberidx.i90, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %81, ptr align 8 %82, i64 %83, i1 false)
  %84 = getelementptr inbounds i8, ptr %81, i64 %83
  store i8 0, ptr %84, align 1
  %85 = alloca ptr, align 8
  %86 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %85, ptr nonnull @106, ptr %71, ptr %81)
  %87 = load ptr, ptr %85, align 8
  %88 = tail call ptr @malloc(i32 24)
  store ptr %87, ptr %88, align 8
  %memberidx1.i91 = getelementptr inbounds %String, ptr %88, i64 0, i32 1
  store i64 %86, ptr %memberidx1.i91, align 4
  %memberidx2.i92 = getelementptr inbounds %String, ptr %88, i64 0, i32 2
  store i64 %86, ptr %memberidx2.i92, align 4
  tail call void @free(ptr %71)
  tail call void @free(ptr %81)
  %89 = load ptr, ptr %memberidx12, align 8
  %90 = load ptr, ptr %89, align 8
  %91 = load ptr, ptr %memberidx.i77, align 8
  %memberidx1.i94 = getelementptr inbounds %Compiler, ptr %91, i64 0, i32 5
  %92 = load ptr, ptr %memberidx1.i94, align 8
  %93 = call ptr @malloc(i32 24)
  store i64 5, ptr %93, align 4
  %memberidx1.i.i95 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 2
  store ptr %90, ptr %memberidx1.i.i95, align 8
  %memberidx2.i.i96 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 1
  store ptr %88, ptr %memberidx2.i.i96, align 8
  %memberidx.i.i97 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %94 = load i64, ptr %memberidx.i.i97, align 4
  %95 = add i64 %94, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 2
  %96 = load i64, ptr %memberidx.i.i.i, align 4
  %97 = icmp slt i64 %96, %95
  %.pre = load ptr, ptr %92, align 8
  br i1 %97, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry29, %while.body.i.i.i
  %98 = phi ptr [ %102, %while.body.i.i.i ], [ %.pre, %if.entry29 ]
  %99 = phi i64 [ %103, %while.body.i.i.i ], [ %96, %if.entry29 ]
  %100 = shl nuw i64 %99, 1
  store i64 %100, ptr %memberidx.i.i.i, align 4
  %101 = shl i64 %99, 4
  %102 = call ptr @realloc(ptr %98, i64 %101)
  store ptr %102, ptr %92, align 8
  %103 = load i64, ptr %memberidx.i.i.i, align 4
  %104 = icmp slt i64 %103, %95
  br i1 %104, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre112 = load i64, ptr %memberidx.i.i97, align 4
  %.pre123 = add nsw i64 %.pre112, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry29, %TypeChecker_error.exit.loopexit
  %.pre-phi124 = phi i64 [ %.pre123, %TypeChecker_error.exit.loopexit ], [ %95, %if.entry29 ]
  %105 = phi ptr [ %102, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry29 ]
  %106 = phi i64 [ %.pre112, %TypeChecker_error.exit.loopexit ], [ %94, %if.entry29 ]
  store i64 %.pre-phi124, ptr %memberidx.i.i97, align 4
  %107 = getelementptr inbounds ptr, ptr %105, i64 %106
  store ptr %93, ptr %107, align 8
  br label %ifend15
}

define internal fastcc ptr @TypeChecker_check_constructor_call(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2, ptr nocapture writeonly %3) unnamed_addr {
  %5 = load ptr, ptr %0, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = load i64, ptr %1, align 4
  %8 = load ptr, ptr %6, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %7
  %10 = load ptr, ptr %9, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i, align 4
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %TypeChecker_check_function_call_args_match.exit, %if.entry12, %TypeChecker_check_function_call_args_match.exit.thread52, %if.entry
  %common.ret.op = phi ptr [ %19, %if.entry ], [ null, %TypeChecker_check_function_call_args_match.exit.thread52 ], [ %80, %if.entry12 ], [ %75, %TypeChecker_check_function_call_args_match.exit ], [ null, %ifend ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %18 = tail call ptr @malloc(i32 44)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(44) %18, ptr noundef nonnull align 8 dereferenceable(44) @188, i64 44, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 44, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 44, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %4
  %memberidx2 = getelementptr inbounds %Class, ptr %15, i64 0, i32 5
  %20 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %16, i64 0, i32 2
  %21 = load i64, ptr %memberidx3, align 4
  %22 = load ptr, ptr %20, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %24, i64 0, i32 4
  %25 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %24, i64 0, i32 6
  %26 = load ptr, ptr %memberidx5, align 8
  %27 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr %25, ptr %26, ptr %2)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %28 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i38 = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx2.i38, align 4
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %common.ret, label %ifend8

ifend8:                                           ; preds = %ifend
  %memberidx.i46 = getelementptr inbounds %FunctionType, ptr %25, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i46, align 8
  %memberidx1.i47 = getelementptr inbounds %Array_Type_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx1.i47, align 4
  %memberidx2.i48 = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 1
  %34 = load i64, ptr %memberidx2.i48, align 4
  %.not.i = icmp eq i64 %33, %34
  br i1 %.not.i, label %for.entry.i, label %if.entry12

for.entry.i:                                      ; preds = %ifend8
  %35 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %35, align 4
  %memberidx1.i.i49 = getelementptr inbounds %Range, ptr %35, i64 0, i32 1
  store i64 %33, ptr %memberidx1.i.i49, align 4
  %36 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i = getelementptr inbounds %RangeIterator, ptr %36, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %RangeIterator, ptr %36, i64 0, i32 2
  store i64 %33, ptr %memberidx1.i.i.i, align 4
  br label %for.next.i

for.next.i:                                       ; preds = %for.body.i, %for.entry.i
  %37 = phi i64 [ %38, %for.body.i ], [ 0, %for.entry.i ]
  %.not26.i = icmp slt i64 %37, %33
  br i1 %.not26.i, label %for.body.i, label %TypeChecker_check_function_call_args_match.exit.thread52

for.body.i:                                       ; preds = %for.next.i
  %38 = add nuw nsw i64 %37, 1
  %39 = load ptr, ptr %memberidx.i46, align 8
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %37
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr %27, align 8
  %44 = getelementptr inbounds ptr, ptr %43, i64 %37
  %45 = load ptr, ptr %44, align 8
  %memberidx6.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 3
  %46 = load ptr, ptr %memberidx6.i, align 8
  %47 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %42, ptr %46)
  br i1 %47, label %for.next.i, label %TypeChecker_check_function_call_args_match.exit

TypeChecker_check_function_call_args_match.exit.thread52: ; preds = %for.next.i
  tail call void @free(ptr nonnull %36)
  store ptr %27, ptr %3, align 8
  br label %common.ret

TypeChecker_check_function_call_args_match.exit:  ; preds = %for.body.i
  store i64 %38, ptr %memberidx.i.i.i, align 4
  store i1 false, ptr %36, align 1
  %48 = load ptr, ptr %memberidx.i46, align 8
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %37
  %51 = load ptr, ptr %50, align 8
  %52 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %51)
  %memberidx.i41 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  %53 = load i64, ptr %memberidx.i41, align 4
  %54 = trunc i64 %53 to i32
  %55 = add i32 %54, 1
  %56 = tail call ptr @malloc(i32 %55)
  %57 = load ptr, ptr %52, align 8
  %58 = load i64, ptr %memberidx.i41, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %56, ptr align 8 %57, i64 %58, i1 false)
  %59 = getelementptr inbounds i8, ptr %56, i64 %58
  store i8 0, ptr %59, align 1
  %60 = load ptr, ptr %27, align 8
  %61 = getelementptr inbounds ptr, ptr %60, i64 %37
  %62 = load ptr, ptr %61, align 8
  %memberidx19 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 3
  %63 = load ptr, ptr %memberidx19, align 8
  %64 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %63)
  %memberidx.i42 = getelementptr inbounds %String, ptr %64, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i42, align 4
  %66 = trunc i64 %65 to i32
  %67 = add i32 %66, 1
  %68 = tail call ptr @malloc(i32 %67)
  %69 = load ptr, ptr %64, align 8
  %70 = load i64, ptr %memberidx.i42, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %68, ptr align 8 %69, i64 %70, i1 false)
  %71 = getelementptr inbounds i8, ptr %68, i64 %70
  store i8 0, ptr %71, align 1
  %72 = alloca ptr, align 8
  %73 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %72, ptr nonnull @190, ptr %56, ptr %68, i64 %37)
  %74 = load ptr, ptr %72, align 8
  %75 = tail call ptr @malloc(i32 24)
  store ptr %74, ptr %75, align 8
  %memberidx1.i43 = getelementptr inbounds %String, ptr %75, i64 0, i32 1
  store i64 %73, ptr %memberidx1.i43, align 4
  %memberidx2.i44 = getelementptr inbounds %String, ptr %75, i64 0, i32 2
  store i64 %73, ptr %memberidx2.i44, align 4
  tail call void @free(ptr %56)
  tail call void @free(ptr %68)
  br label %common.ret

if.entry12:                                       ; preds = %ifend8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %2, i64 0, i32 1
  %76 = load i64, ptr %memberidx17, align 4
  %77 = alloca ptr, align 8
  %78 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %77, ptr nonnull @189, i64 %33, i64 %76)
  %79 = load ptr, ptr %77, align 8
  %80 = tail call ptr @malloc(i32 24)
  store ptr %79, ptr %80, align 8
  %memberidx1.i39 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  store i64 %78, ptr %memberidx1.i39, align 4
  %memberidx2.i40 = getelementptr inbounds %String, ptr %80, i64 0, i32 2
  store i64 %78, ptr %memberidx2.i40, align 4
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_methods(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_MethodNode_, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx1, align 4
  %5 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %5, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %5, i64 0, i32 1
  store i64 %4, ptr %memberidx1.i, align 4
  %6 = tail call ptr @malloc(i32 17)
  %memberidx.i.i = getelementptr inbounds %RangeIterator, ptr %6, i64 0, i32 1
  %memberidx1.i.i = getelementptr inbounds %RangeIterator, ptr %6, i64 0, i32 2
  store i64 %4, ptr %memberidx1.i.i, align 4
  %7 = icmp slt i64 %4, 1
  store i1 %7, ptr %6, align 1
  store i64 1, ptr %memberidx.i.i, align 4
  br i1 %7, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i241 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %memberidx53 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx111 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %memberidx122 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx99 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx135 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassMethod____sl__.exit
  %8 = phi i64 [ 1, %for.body.lr.ph ], [ %509, %Array_ClassMethod____sl__.exit ]
  %9 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %Array_ClassMethod____sl__.exit ]
  %10 = load ptr, ptr %memberidx, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %9
  %13 = load ptr, ptr %12, align 8
  %14 = tail call ptr @malloc(i32 58)
  %memberidx.i = getelementptr inbounds %ClassMethod, ptr %14, i64 0, i32 7
  store i1 false, ptr %memberidx.i, align 1
  %15 = load ptr, ptr %13, align 8
  %memberidx5 = getelementptr inbounds %IdentifierToken, ptr %15, i64 0, i32 2
  %16 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %ClassMethod, ptr %14, i64 0, i32 3
  store ptr %16, ptr %memberidx6, align 8
  %17 = load ptr, ptr %memberidx.i241, align 8
  %18 = load i64, ptr %17, align 4
  %19 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %18)
  %memberidx2.i242 = getelementptr inbounds %Scope, ptr %19, i64 0, i32 5
  %20 = load ptr, ptr %memberidx.i241, align 8
  store ptr %20, ptr %memberidx2.i242, align 8
  %21 = load ptr, ptr %0, align 8
  %22 = load ptr, ptr %memberidx.i241, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = load i64, ptr %22, align 4
  %25 = load ptr, ptr %23, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %27, i64 0, i32 7
  %28 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %22, i64 0, i32 1
  %29 = load i64, ptr %memberidx3.i.i.i, align 4
  %30 = load ptr, ptr %28, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %29
  %32 = load ptr, ptr %31, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %32, i64 0, i32 7
  %33 = load ptr, ptr %memberidx4.i, align 8
  %34 = load ptr, ptr %19, align 8
  %memberidx.i.i244 = getelementptr inbounds %Array_ScopeId_, ptr %33, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i.i244, align 4
  %36 = add i64 %35, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_ScopeId_, ptr %33, i64 0, i32 2
  %37 = load i64, ptr %memberidx.i.i.i, align 4
  %38 = icmp slt i64 %37, %36
  %.pre = load ptr, ptr %33, align 8
  br i1 %38, label %while.body.i.i.i, label %TypeChecker_create_child_scope_within_current_scope.exit

while.body.i.i.i:                                 ; preds = %for.body, %while.body.i.i.i
  %39 = phi ptr [ %43, %while.body.i.i.i ], [ %.pre, %for.body ]
  %40 = phi i64 [ %44, %while.body.i.i.i ], [ %37, %for.body ]
  %41 = shl nuw i64 %40, 1
  store i64 %41, ptr %memberidx.i.i.i, align 4
  %42 = shl i64 %40, 4
  %43 = tail call ptr @realloc(ptr %39, i64 %42)
  store ptr %43, ptr %33, align 8
  %44 = load i64, ptr %memberidx.i.i.i, align 4
  %45 = icmp slt i64 %44, %36
  br i1 %45, label %while.body.i.i.i, label %TypeChecker_create_child_scope_within_current_scope.exit.loopexit

TypeChecker_create_child_scope_within_current_scope.exit.loopexit: ; preds = %while.body.i.i.i
  %.pre620 = load i64, ptr %memberidx.i.i244, align 4
  %.pre676 = add nsw i64 %.pre620, 1
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %for.body, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit
  %.pre-phi = phi i64 [ %.pre676, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %36, %for.body ]
  %46 = phi ptr [ %43, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %.pre, %for.body ]
  %47 = phi i64 [ %.pre620, %TypeChecker_create_child_scope_within_current_scope.exit.loopexit ], [ %35, %for.body ]
  store i64 %.pre-phi, ptr %memberidx.i.i244, align 4
  %48 = getelementptr inbounds ptr, ptr %46, i64 %47
  store ptr %34, ptr %48, align 8
  %49 = load ptr, ptr %19, align 8
  store ptr %49, ptr %memberidx.i241, align 8
  %memberidx9 = getelementptr inbounds %ClassMethod, ptr %14, i64 0, i32 6
  %50 = tail call ptr @malloc(i32 24)
  %memberidx.i245 = getelementptr inbounds %Array_FunctionArg_, ptr %50, i64 0, i32 1
  store i64 0, ptr %memberidx.i245, align 4
  %memberidx1.i246 = getelementptr inbounds %Array_FunctionArg_, ptr %50, i64 0, i32 2
  store i64 8, ptr %memberidx1.i246, align 4
  %51 = tail call ptr @malloc(i32 64)
  store ptr %51, ptr %50, align 8
  store i64 0, ptr %memberidx.i245, align 4
  store ptr %50, ptr %memberidx9, align 8
  %52 = tail call fastcc i1 @is_operator_overload_name(ptr %16)
  br i1 %52, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_error.exit460, %TypeChecker_error.exit449, %TypeChecker_error.exit435, %TypeChecker_error.exit416, %TypeChecker_error.exit393, %TypeChecker_error.exit374, %TypeChecker_error.exit339, %TypeChecker_error.exit324, %TypeChecker_error.exit296, %TypeChecker_error.exit, %for.end
  ret void

for.end:                                          ; preds = %Array_ClassMethod____sl__.exit, %for.entry
  tail call void @free(ptr nonnull %6)
  br label %common.ret

if.entry:                                         ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %53 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %53, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i.i247 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i247, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i, align 4
  %memberidx.i248 = getelementptr inbounds %String, ptr %16, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i248, align 4
  %.not.i = icmp eq i64 %55, 8
  br i1 %.not.i, label %ifend.i, label %String___eq__.exit

ifend.i:                                          ; preds = %if.entry
  %56 = load ptr, ptr %16, align 8
  %57 = tail call i64 @memcmp(ptr %56, ptr nonnull %53, i64 8)
  %58 = icmp eq i64 %57, 0
  br label %String___eq__.exit

String___eq__.exit:                               ; preds = %if.entry, %ifend.i
  %common.ret.op.i = phi i1 [ %58, %ifend.i ], [ false, %if.entry ]
  %59 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %59, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %60 = tail call ptr @malloc(i32 24)
  store ptr %59, ptr %60, align 8
  %memberidx1.i.i250 = getelementptr inbounds %String, ptr %60, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i250, align 4
  %memberidx2.i.i251 = getelementptr inbounds %String, ptr %60, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i251, align 4
  %61 = load i64, ptr %memberidx.i248, align 4
  %.not.i254 = icmp eq i64 %61, 7
  br i1 %.not.i254, label %ifend.i256, label %String___eq__.exit257

ifend.i256:                                       ; preds = %String___eq__.exit
  %62 = load ptr, ptr %16, align 8
  %63 = tail call i64 @memcmp(ptr %62, ptr nonnull %59, i64 7)
  %64 = icmp eq i64 %63, 0
  br label %String___eq__.exit257

String___eq__.exit257:                            ; preds = %String___eq__.exit, %ifend.i256
  %common.ret.op.i255 = phi i1 [ %64, %ifend.i256 ], [ false, %String___eq__.exit ]
  %65 = or i1 %common.ret.op.i, %common.ret.op.i255
  br i1 %65, label %ifend14, label %else13

ifend:                                            ; preds = %ifend22, %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx34 = getelementptr inbounds %MethodNode, ptr %13, i64 0, i32 6
  %66 = load i1, ptr %memberidx34, align 1
  store i1 %66, ptr %memberidx.i, align 1
  %memberidx35 = getelementptr inbounds %ClassMethod, ptr %14, i64 0, i32 1
  %memberidx36 = getelementptr inbounds %MethodNode, ptr %13, i64 0, i32 5
  %67 = load i1, ptr %memberidx36, align 1
  store i1 %67, ptr %memberidx35, align 1
  %memberidx37 = getelementptr inbounds %ClassMethod, ptr %14, i64 0, i32 2
  %memberidx38 = getelementptr inbounds %MethodNode, ptr %13, i64 0, i32 3
  %68 = load i64, ptr %memberidx38, align 4
  store i64 %68, ptr %memberidx37, align 4
  %memberidx39 = getelementptr inbounds %ClassMethod, ptr %14, i64 0, i32 4
  %memberidx40 = getelementptr inbounds %MethodNode, ptr %13, i64 0, i32 1
  %69 = load ptr, ptr %memberidx40, align 8
  %memberidx41 = getelementptr inbounds %MethodNode, ptr %13, i64 0, i32 4
  %70 = load ptr, ptr %memberidx41, align 8
  %71 = load ptr, ptr %memberidx9, align 8
  %72 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %69, ptr %70, ptr %71)
  store ptr %72, ptr %memberidx39, align 8
  %73 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %73, align 8
  %74 = tail call ptr @malloc(i32 24)
  store ptr %73, ptr %74, align 8
  %memberidx1.i.i258 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i258, align 4
  %memberidx2.i.i259 = getelementptr inbounds %String, ptr %74, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i259, align 4
  %memberidx.i260 = getelementptr inbounds %String, ptr %16, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i260, align 4
  %.not.i262 = icmp eq i64 %75, 8
  br i1 %.not.i262, label %ifend.i264, label %ifend45

ifend.i264:                                       ; preds = %ifend
  %76 = load ptr, ptr %16, align 8
  %77 = tail call i64 @memcmp(ptr %76, ptr nonnull %73, i64 8)
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %if.entry43, label %ifend45

else13:                                           ; preds = %String___eq__.exit257
  %79 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %79, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %80 = tail call ptr @malloc(i32 24)
  store ptr %79, ptr %80, align 8
  %memberidx1.i.i266 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i266, align 4
  %memberidx2.i.i267 = getelementptr inbounds %String, ptr %80, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i267, align 4
  %81 = load i64, ptr %memberidx.i248, align 4
  %.not.i270 = icmp eq i64 %81, 11
  br i1 %.not.i270, label %String___eq__.exit273, label %ifend14

String___eq__.exit273:                            ; preds = %else13
  %82 = load ptr, ptr %16, align 8
  %83 = tail call i64 @memcmp(ptr %82, ptr nonnull %79, i64 11)
  %.fr = freeze i64 %83
  %84 = icmp eq i64 %.fr, 0
  %spec.select = select i1 %84, i64 2, i64 1
  br label %ifend14

ifend14:                                          ; preds = %String___eq__.exit273, %else13, %String___eq__.exit257
  %args_num.0 = phi i64 [ 0, %String___eq__.exit257 ], [ 1, %else13 ], [ %spec.select, %String___eq__.exit273 ]
  %memberidx18 = getelementptr inbounds %MethodNode, ptr %13, i64 0, i32 1
  %85 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %Array_ArgNode_, ptr %85, i64 0, i32 1
  %86 = load i64, ptr %memberidx19, align 4
  %.not238 = icmp eq i64 %86, %args_num.0
  br i1 %.not238, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %ifend14
  %87 = load i64, ptr %memberidx.i248, align 4
  %88 = trunc i64 %87 to i32
  %89 = add i32 %88, 1
  %90 = tail call ptr @malloc(i32 %89)
  %91 = load ptr, ptr %16, align 8
  %92 = load i64, ptr %memberidx.i248, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %90, ptr align 8 %91, i64 %92, i1 false)
  %93 = getelementptr inbounds i8, ptr %90, i64 %92
  store i8 0, ptr %93, align 1
  %94 = load ptr, ptr %memberidx18, align 8
  %memberidx24 = getelementptr inbounds %Array_ArgNode_, ptr %94, i64 0, i32 1
  %95 = load i64, ptr %memberidx24, align 4
  %96 = alloca ptr, align 8
  %97 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %96, ptr nonnull @142, i64 %args_num.0, ptr %90, i64 %95)
  %98 = load ptr, ptr %96, align 8
  %99 = tail call ptr @malloc(i32 24)
  store ptr %98, ptr %99, align 8
  %memberidx1.i275 = getelementptr inbounds %String, ptr %99, i64 0, i32 1
  store i64 %97, ptr %memberidx1.i275, align 4
  %memberidx2.i276 = getelementptr inbounds %String, ptr %99, i64 0, i32 2
  store i64 %97, ptr %memberidx2.i276, align 4
  tail call void @free(ptr %90)
  %100 = load ptr, ptr %13, align 8
  %memberidx26 = getelementptr inbounds %Token, ptr %100, i64 0, i32 1
  %101 = load ptr, ptr %memberidx26, align 8
  %memberidx.i277 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %102 = load ptr, ptr %memberidx.i277, align 8
  %memberidx1.i278 = getelementptr inbounds %Compiler, ptr %102, i64 0, i32 5
  %103 = load ptr, ptr %memberidx1.i278, align 8
  %104 = call ptr @malloc(i32 24)
  store i64 4, ptr %104, align 4
  %memberidx1.i.i279 = getelementptr inbounds %FloError, ptr %104, i64 0, i32 2
  store ptr %101, ptr %memberidx1.i.i279, align 8
  %memberidx2.i.i280 = getelementptr inbounds %FloError, ptr %104, i64 0, i32 1
  store ptr %99, ptr %memberidx2.i.i280, align 8
  %memberidx.i.i281 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 1
  %105 = load i64, ptr %memberidx.i.i281, align 4
  %106 = add i64 %105, 1
  %memberidx.i.i.i282 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 2
  %107 = load i64, ptr %memberidx.i.i.i282, align 4
  %108 = icmp slt i64 %107, %106
  %.pre622 = load ptr, ptr %103, align 8
  br i1 %108, label %while.body.i.i.i284, label %TypeChecker_error.exit

while.body.i.i.i284:                              ; preds = %if.entry20, %while.body.i.i.i284
  %109 = phi ptr [ %113, %while.body.i.i.i284 ], [ %.pre622, %if.entry20 ]
  %110 = phi i64 [ %114, %while.body.i.i.i284 ], [ %107, %if.entry20 ]
  %111 = shl nuw i64 %110, 1
  store i64 %111, ptr %memberidx.i.i.i282, align 4
  %112 = shl i64 %110, 4
  %113 = call ptr @realloc(ptr %109, i64 %112)
  store ptr %113, ptr %103, align 8
  %114 = load i64, ptr %memberidx.i.i.i282, align 4
  %115 = icmp slt i64 %114, %106
  br i1 %115, label %while.body.i.i.i284, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i284
  %.pre623 = load i64, ptr %memberidx.i.i281, align 4
  %.pre697 = add nsw i64 %.pre623, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry20, %TypeChecker_error.exit.loopexit
  %.pre-phi698 = phi i64 [ %.pre697, %TypeChecker_error.exit.loopexit ], [ %106, %if.entry20 ]
  %116 = phi ptr [ %113, %TypeChecker_error.exit.loopexit ], [ %.pre622, %if.entry20 ]
  %117 = phi i64 [ %.pre623, %TypeChecker_error.exit.loopexit ], [ %105, %if.entry20 ]
  store i64 %.pre-phi698, ptr %memberidx.i.i281, align 4
  %118 = getelementptr inbounds ptr, ptr %116, i64 %117
  store ptr %104, ptr %118, align 8
  br label %common.ret

ifend22:                                          ; preds = %ifend14
  %memberidx27 = getelementptr inbounds %MethodNode, ptr %13, i64 0, i32 5
  %119 = load i1, ptr %memberidx27, align 1
  br i1 %119, label %if.entry28, label %ifend

if.entry28:                                       ; preds = %ifend22
  %120 = load i64, ptr %memberidx.i248, align 4
  %121 = trunc i64 %120 to i32
  %122 = add i32 %121, 1
  %123 = tail call ptr @malloc(i32 %122)
  %124 = load ptr, ptr %16, align 8
  %125 = load i64, ptr %memberidx.i248, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %123, ptr align 8 %124, i64 %125, i1 false)
  %126 = getelementptr inbounds i8, ptr %123, i64 %125
  store i8 0, ptr %126, align 1
  %127 = alloca ptr, align 8
  %128 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %127, ptr nonnull @143, ptr %123)
  %129 = load ptr, ptr %127, align 8
  %130 = tail call ptr @malloc(i32 24)
  store ptr %129, ptr %130, align 8
  %memberidx1.i286 = getelementptr inbounds %String, ptr %130, i64 0, i32 1
  store i64 %128, ptr %memberidx1.i286, align 4
  %memberidx2.i287 = getelementptr inbounds %String, ptr %130, i64 0, i32 2
  store i64 %128, ptr %memberidx2.i287, align 4
  tail call void @free(ptr %123)
  %131 = load ptr, ptr %13, align 8
  %memberidx32 = getelementptr inbounds %Token, ptr %131, i64 0, i32 1
  %132 = load ptr, ptr %memberidx32, align 8
  %memberidx.i288 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %133 = load ptr, ptr %memberidx.i288, align 8
  %memberidx1.i289 = getelementptr inbounds %Compiler, ptr %133, i64 0, i32 5
  %134 = load ptr, ptr %memberidx1.i289, align 8
  %135 = call ptr @malloc(i32 24)
  store i64 4, ptr %135, align 4
  %memberidx1.i.i290 = getelementptr inbounds %FloError, ptr %135, i64 0, i32 2
  store ptr %132, ptr %memberidx1.i.i290, align 8
  %memberidx2.i.i291 = getelementptr inbounds %FloError, ptr %135, i64 0, i32 1
  store ptr %130, ptr %memberidx2.i.i291, align 8
  %memberidx.i.i292 = getelementptr inbounds %Array_FloError_, ptr %134, i64 0, i32 1
  %136 = load i64, ptr %memberidx.i.i292, align 4
  %137 = add i64 %136, 1
  %memberidx.i.i.i293 = getelementptr inbounds %Array_FloError_, ptr %134, i64 0, i32 2
  %138 = load i64, ptr %memberidx.i.i.i293, align 4
  %139 = icmp slt i64 %138, %137
  %.pre667 = load ptr, ptr %134, align 8
  br i1 %139, label %while.body.i.i.i295, label %TypeChecker_error.exit296

while.body.i.i.i295:                              ; preds = %if.entry28, %while.body.i.i.i295
  %140 = phi ptr [ %144, %while.body.i.i.i295 ], [ %.pre667, %if.entry28 ]
  %141 = phi i64 [ %145, %while.body.i.i.i295 ], [ %138, %if.entry28 ]
  %142 = shl nuw i64 %141, 1
  store i64 %142, ptr %memberidx.i.i.i293, align 4
  %143 = shl i64 %141, 4
  %144 = call ptr @realloc(ptr %140, i64 %143)
  store ptr %144, ptr %134, align 8
  %145 = load i64, ptr %memberidx.i.i.i293, align 4
  %146 = icmp slt i64 %145, %137
  br i1 %146, label %while.body.i.i.i295, label %TypeChecker_error.exit296.loopexit

TypeChecker_error.exit296.loopexit:               ; preds = %while.body.i.i.i295
  %.pre668 = load i64, ptr %memberidx.i.i292, align 4
  %.pre677 = add nsw i64 %.pre668, 1
  br label %TypeChecker_error.exit296

TypeChecker_error.exit296:                        ; preds = %if.entry28, %TypeChecker_error.exit296.loopexit
  %.pre-phi678 = phi i64 [ %.pre677, %TypeChecker_error.exit296.loopexit ], [ %137, %if.entry28 ]
  %147 = phi ptr [ %144, %TypeChecker_error.exit296.loopexit ], [ %.pre667, %if.entry28 ]
  %148 = phi i64 [ %.pre668, %TypeChecker_error.exit296.loopexit ], [ %136, %if.entry28 ]
  store i64 %.pre-phi678, ptr %memberidx.i.i292, align 4
  %149 = getelementptr inbounds ptr, ptr %147, i64 %148
  store ptr %135, ptr %149, align 8
  br label %common.ret

if.entry43:                                       ; preds = %ifend.i264
  %150 = load ptr, ptr %memberidx39, align 8
  %memberidx47 = getelementptr inbounds %FunctionType, ptr %150, i64 0, i32 2
  %151 = load ptr, ptr %memberidx47, align 8
  %152 = load i64, ptr %151, align 4
  %153 = icmp eq i64 %152, 20
  br i1 %153, label %if.entry.i524, label %is_object.exit

if.entry.i524:                                    ; preds = %if.entry43, %if.entry.i524
  %.tr5.i = phi ptr [ %154, %if.entry.i524 ], [ %151, %if.entry43 ]
  %memberidx1.i523 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %154 = load ptr, ptr %memberidx1.i523, align 8
  %155 = load i64, ptr %154, align 4
  %156 = icmp eq i64 %155, 20
  br i1 %156, label %if.entry.i524, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i524, %if.entry43
  %.lcssa.i = phi i64 [ %152, %if.entry43 ], [ %155, %if.entry.i524 ]
  %157 = icmp eq i64 %.lcssa.i, 11
  br i1 %157, label %ifend.i301, label %if.entry48

ifend.i301:                                       ; preds = %is_object.exit
  %158 = load ptr, ptr %0, align 8
  br label %tailrecurse.i514

tailrecurse.i514:                                 ; preds = %if.entry.i517, %ifend.i301
  %159 = phi i64 [ %152, %ifend.i301 ], [ %.pre625, %if.entry.i517 ]
  %.tr11.i513 = phi ptr [ %151, %ifend.i301 ], [ %160, %if.entry.i517 ]
  switch i64 %159, label %get_class_from_type.exit522 [
    i64 20, label %if.entry.i517
    i64 11, label %if.entry3.i521
  ]

if.entry.i517:                                    ; preds = %tailrecurse.i514
  %memberidx1.i516 = getelementptr inbounds %GenericType, ptr %.tr11.i513, i64 0, i32 3
  %160 = load ptr, ptr %memberidx1.i516, align 8
  %.pre625 = load i64, ptr %160, align 4
  br label %tailrecurse.i514

if.entry3.i521:                                   ; preds = %tailrecurse.i514
  %memberidx6.i518 = getelementptr inbounds %ObjectType, ptr %.tr11.i513, i64 0, i32 1
  %161 = load ptr, ptr %memberidx6.i518, align 8
  %162 = load ptr, ptr %158, align 8
  %163 = load i64, ptr %161, align 4
  %164 = load ptr, ptr %162, align 8
  %165 = getelementptr inbounds ptr, ptr %164, i64 %163
  %166 = load ptr, ptr %165, align 8
  %memberidx2.i.i519 = getelementptr inbounds %Module, ptr %166, i64 0, i32 3
  %167 = load ptr, ptr %memberidx2.i.i519, align 8
  %memberidx3.i.i520 = getelementptr inbounds %TypeId, ptr %161, i64 0, i32 2
  %168 = load i64, ptr %memberidx3.i.i520, align 4
  %169 = load ptr, ptr %167, align 8
  %170 = getelementptr inbounds ptr, ptr %169, i64 %168
  %171 = load ptr, ptr %170, align 8
  br label %get_class_from_type.exit522

get_class_from_type.exit522:                      ; preds = %tailrecurse.i514, %if.entry3.i521
  %common.ret.op.i515 = phi ptr [ %171, %if.entry3.i521 ], [ null, %tailrecurse.i514 ]
  %memberidx1.i298 = getelementptr inbounds %Class, ptr %common.ret.op.i515, i64 0, i32 6
  %172 = load ptr, ptr %memberidx1.i298, align 8
  %173 = tail call ptr @malloc(i32 4)
  store i32 1701736292, ptr %173, align 8
  %174 = tail call ptr @malloc(i32 24)
  store ptr %173, ptr %174, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %174, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i299 = getelementptr inbounds %String, ptr %174, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i299, align 4
  %175 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %174)
  %memberidx.i.i300 = getelementptr inbounds %Map_String_PropId_, ptr %172, i64 0, i32 1
  %176 = load i64, ptr %memberidx.i.i300, align 4
  %177 = urem i64 %175, %176
  %178 = load ptr, ptr %172, align 8
  %179 = getelementptr inbounds ptr, ptr %178, i64 %177
  %180 = load ptr, ptr %179, align 8
  %.not.i.i569 = icmp eq ptr %180, null
  br i1 %.not.i.i569, label %if.entry48, label %while.body.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre628.pre = load ptr, ptr %172, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre628.pre, i64 %hash.0.i.i570
  %.pre629.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i.i = icmp eq ptr %.pre629.pre, null
  br i1 %.not22.i.i, label %if.entry48, label %Map_String_PropId____getitem__.exit.i

while.body.i.i:                                   ; preds = %get_class_from_type.exit522, %else.i.i
  %181 = phi ptr [ %189, %else.i.i ], [ %178, %get_class_from_type.exit522 ]
  %182 = phi i64 [ %190, %else.i.i ], [ %176, %get_class_from_type.exit522 ]
  %183 = phi ptr [ %194, %else.i.i ], [ %180, %get_class_from_type.exit522 ]
  %hash.0.i.i570 = phi i64 [ %192, %else.i.i ], [ %177, %get_class_from_type.exit522 ]
  %184 = load ptr, ptr %183, align 8
  %memberidx.i.i.i302 = getelementptr inbounds %String, ptr %184, i64 0, i32 1
  %185 = load i64, ptr %memberidx.i.i.i302, align 4
  %.not.i.i.i = icmp eq i64 %185, 4
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.body.i.i
  %186 = load ptr, ptr %184, align 8
  %187 = tail call i64 @memcmp(ptr %186, ptr nonnull %173, i64 4)
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre626 = load i64, ptr %memberidx.i.i300, align 4
  %.pre627 = load ptr, ptr %172, align 8
  br label %else.i.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.body.i.i
  %189 = phi ptr [ %.pre627, %ifend.i.i.i.else.i.i_crit_edge ], [ %181, %while.body.i.i ]
  %190 = phi i64 [ %.pre626, %ifend.i.i.i.else.i.i_crit_edge ], [ %182, %while.body.i.i ]
  %191 = add nuw i64 %hash.0.i.i570, 1
  %192 = urem i64 %191, %190
  %193 = getelementptr inbounds ptr, ptr %189, i64 %192
  %194 = load ptr, ptr %193, align 8
  %.not.i.i = icmp eq ptr %194, null
  br i1 %.not.i.i, label %if.entry48, label %while.body.i.i

Map_String_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx10.i.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre629.pre, i64 0, i32 1
  %195 = load ptr, ptr %memberidx10.i.i, align 8
  %196 = icmp eq ptr %195, null
  br i1 %196, label %if.entry48, label %ifend4.i

ifend4.i:                                         ; preds = %Map_String_PropId____getitem__.exit.i
  %197 = load ptr, ptr %0, align 8
  %memberidx.i.i34.i = getelementptr inbounds %PropId, ptr %195, i64 0, i32 1
  %198 = load ptr, ptr %memberidx.i.i34.i, align 8
  %199 = load ptr, ptr %197, align 8
  %200 = load i64, ptr %198, align 4
  %201 = load ptr, ptr %199, align 8
  %202 = getelementptr inbounds ptr, ptr %201, i64 %200
  %203 = load ptr, ptr %202, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %203, i64 0, i32 3
  %204 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %198, i64 0, i32 2
  %205 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %206 = load ptr, ptr %204, align 8
  %207 = getelementptr inbounds ptr, ptr %206, i64 %205
  %208 = load ptr, ptr %207, align 8
  %209 = load i64, ptr %195, align 4
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend4.i
  %memberidx1.i.i303 = getelementptr inbounds %Class, ptr %208, i64 0, i32 5
  %211 = load ptr, ptr %memberidx1.i.i303, align 8
  %memberidx2.i.i304 = getelementptr inbounds %PropId, ptr %195, i64 0, i32 2
  %212 = load i64, ptr %memberidx2.i.i304, align 4
  %213 = load ptr, ptr %211, align 8
  %214 = getelementptr inbounds ptr, ptr %213, i64 %212
  %215 = load ptr, ptr %214, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %215, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend4.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %208, i64 0, i32 4
  %216 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %195, i64 0, i32 2
  %217 = load i64, ptr %memberidx5.i.i, align 4
  %218 = load ptr, ptr %216, align 8
  %219 = getelementptr inbounds ptr, ptr %218, i64 %217
  %220 = load ptr, ptr %219, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %220, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i35.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %221 = load i64, ptr %common.ret.op.i35.i, align 4
  %.not.i305 = icmp eq i64 %221, 0
  br i1 %.not.i305, label %ifend9.i, label %if.entry48

ifend9.i:                                         ; preds = %get_class_prop_type.exit.i
  %222 = load ptr, ptr %memberidx1.i298, align 8
  %223 = tail call ptr @malloc(i32 4)
  store i32 1954047342, ptr %223, align 8
  %224 = tail call ptr @malloc(i32 24)
  store ptr %223, ptr %224, align 8
  %memberidx1.i.i36.i = getelementptr inbounds %String, ptr %224, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i36.i, align 4
  %memberidx2.i.i37.i = getelementptr inbounds %String, ptr %224, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i37.i, align 4
  %225 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %224)
  %memberidx.i38.i = getelementptr inbounds %Map_String_PropId_, ptr %222, i64 0, i32 1
  %226 = load i64, ptr %memberidx.i38.i, align 4
  %227 = urem i64 %225, %226
  %228 = load ptr, ptr %222, align 8
  %229 = getelementptr inbounds ptr, ptr %228, i64 %227
  %230 = load ptr, ptr %229, align 8
  %.not.i40.i572 = icmp eq ptr %230, null
  br i1 %.not.i40.i572, label %if.entry48, label %while.body.i47.i

while.end.i43.i:                                  ; preds = %ifend.i.i48.i
  %.pre632.pre = load ptr, ptr %222, align 8
  %.phi.trans.insert633.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre632.pre, i64 %hash.0.i39.i573
  %.pre634.pre = load ptr, ptr %.phi.trans.insert633.phi.trans.insert, align 8
  %.not22.i42.i = icmp eq ptr %.pre634.pre, null
  br i1 %.not22.i42.i, label %if.entry48, label %Map_String_PropId____getitem__.exit55.i

while.body.i47.i:                                 ; preds = %ifend9.i, %else.i51.i
  %231 = phi ptr [ %239, %else.i51.i ], [ %228, %ifend9.i ]
  %232 = phi i64 [ %240, %else.i51.i ], [ %226, %ifend9.i ]
  %233 = phi ptr [ %244, %else.i51.i ], [ %230, %ifend9.i ]
  %hash.0.i39.i573 = phi i64 [ %242, %else.i51.i ], [ %227, %ifend9.i ]
  %234 = load ptr, ptr %233, align 8
  %memberidx.i.i44.i = getelementptr inbounds %String, ptr %234, i64 0, i32 1
  %235 = load i64, ptr %memberidx.i.i44.i, align 4
  %.not.i.i46.i = icmp eq i64 %235, 4
  br i1 %.not.i.i46.i, label %ifend.i.i48.i, label %else.i51.i

ifend.i.i48.i:                                    ; preds = %while.body.i47.i
  %236 = load ptr, ptr %234, align 8
  %237 = tail call i64 @memcmp(ptr %236, ptr nonnull %223, i64 4)
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %while.end.i43.i, label %ifend.i.i48.i.else.i51.i_crit_edge

ifend.i.i48.i.else.i51.i_crit_edge:               ; preds = %ifend.i.i48.i
  %.pre630 = load i64, ptr %memberidx.i38.i, align 4
  %.pre631 = load ptr, ptr %222, align 8
  br label %else.i51.i

else.i51.i:                                       ; preds = %ifend.i.i48.i.else.i51.i_crit_edge, %while.body.i47.i
  %239 = phi ptr [ %.pre631, %ifend.i.i48.i.else.i51.i_crit_edge ], [ %231, %while.body.i47.i ]
  %240 = phi i64 [ %.pre630, %ifend.i.i48.i.else.i51.i_crit_edge ], [ %232, %while.body.i47.i ]
  %241 = add nuw i64 %hash.0.i39.i573, 1
  %242 = urem i64 %241, %240
  %243 = getelementptr inbounds ptr, ptr %239, i64 %242
  %244 = load ptr, ptr %243, align 8
  %.not.i40.i = icmp eq ptr %244, null
  br i1 %.not.i40.i, label %if.entry48, label %while.body.i47.i

Map_String_PropId____getitem__.exit55.i:          ; preds = %while.end.i43.i
  %memberidx10.i53.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre634.pre, i64 0, i32 1
  %245 = load ptr, ptr %memberidx10.i53.i, align 8
  %246 = icmp eq ptr %245, null
  br i1 %246, label %if.entry48, label %ifend13.i

ifend13.i:                                        ; preds = %Map_String_PropId____getitem__.exit55.i
  %247 = load ptr, ptr %0, align 8
  %memberidx.i.i56.i = getelementptr inbounds %PropId, ptr %245, i64 0, i32 1
  %248 = load ptr, ptr %memberidx.i.i56.i, align 8
  %249 = load ptr, ptr %247, align 8
  %250 = load i64, ptr %248, align 4
  %251 = load ptr, ptr %249, align 8
  %252 = getelementptr inbounds ptr, ptr %251, i64 %250
  %253 = load ptr, ptr %252, align 8
  %memberidx2.i.i.i57.i = getelementptr inbounds %Module, ptr %253, i64 0, i32 3
  %254 = load ptr, ptr %memberidx2.i.i.i57.i, align 8
  %memberidx3.i.i.i58.i = getelementptr inbounds %TypeId, ptr %248, i64 0, i32 2
  %255 = load i64, ptr %memberidx3.i.i.i58.i, align 4
  %256 = load ptr, ptr %254, align 8
  %257 = getelementptr inbounds ptr, ptr %256, i64 %255
  %258 = load ptr, ptr %257, align 8
  %259 = load i64, ptr %245, align 4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %if.entry.i64.i, label %ifend.i68.i

if.entry.i64.i:                                   ; preds = %ifend13.i
  %memberidx1.i61.i = getelementptr inbounds %Class, ptr %258, i64 0, i32 5
  %261 = load ptr, ptr %memberidx1.i61.i, align 8
  %memberidx2.i62.i = getelementptr inbounds %PropId, ptr %245, i64 0, i32 2
  %262 = load i64, ptr %memberidx2.i62.i, align 4
  %263 = load ptr, ptr %261, align 8
  %264 = getelementptr inbounds ptr, ptr %263, i64 %262
  %265 = load ptr, ptr %264, align 8
  %memberidx3.i63.i = getelementptr inbounds %ClassMethod, ptr %265, i64 0, i32 4
  br label %get_class_prop_type.exit69.i

ifend.i68.i:                                      ; preds = %ifend13.i
  %memberidx4.i65.i = getelementptr inbounds %Class, ptr %258, i64 0, i32 4
  %266 = load ptr, ptr %memberidx4.i65.i, align 8
  %memberidx5.i66.i = getelementptr inbounds %PropId, ptr %245, i64 0, i32 2
  %267 = load i64, ptr %memberidx5.i66.i, align 4
  %268 = load ptr, ptr %266, align 8
  %269 = getelementptr inbounds ptr, ptr %268, i64 %267
  %270 = load ptr, ptr %269, align 8
  %memberidx6.i67.i = getelementptr inbounds %ClassField, ptr %270, i64 0, i32 4
  br label %get_class_prop_type.exit69.i

get_class_prop_type.exit69.i:                     ; preds = %ifend.i68.i, %if.entry.i64.i
  %common.ret.op.in.i59.i = phi ptr [ %memberidx3.i63.i, %if.entry.i64.i ], [ %memberidx6.i67.i, %ifend.i68.i ]
  %common.ret.op.i60.i = load ptr, ptr %common.ret.op.in.i59.i, align 8
  %271 = load i64, ptr %common.ret.op.i60.i, align 4
  %.not31.i = icmp eq i64 %271, 16
  br i1 %.not31.i, label %ifend18.i, label %if.entry48

ifend18.i:                                        ; preds = %get_class_prop_type.exit69.i
  %memberidx19.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i60.i, i64 0, i32 1
  %272 = load ptr, ptr %memberidx19.i, align 8
  %memberidx20.i = getelementptr inbounds %Array_Type_, ptr %272, i64 0, i32 1
  %273 = load i64, ptr %memberidx20.i, align 4
  %.not32.i = icmp eq i64 %273, 0
  br i1 %.not32.i, label %ifend45, label %if.entry48

ifend45:                                          ; preds = %ifend, %ifend18.i, %ifend.i264
  %274 = load ptr, ptr %memberidx53, align 8
  %275 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %16)
  %memberidx.i306 = getelementptr inbounds %Map_String_PropId_, ptr %274, i64 0, i32 1
  %276 = load i64, ptr %memberidx.i306, align 4
  %277 = urem i64 %275, %276
  %278 = load ptr, ptr %274, align 8
  %279 = getelementptr inbounds ptr, ptr %278, i64 %277
  %280 = load ptr, ptr %279, align 8
  %.not.i307576 = icmp eq ptr %280, null
  br i1 %.not.i307576, label %ifend56, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i311
  %.pre637.pre = load ptr, ptr %274, align 8
  %.phi.trans.insert638.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre637.pre, i64 %hash.0.i577
  %.pre639.pre = load ptr, ptr %.phi.trans.insert638.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre639.pre, null
  br i1 %.not22.i, label %ifend56, label %Map_String_PropId____getitem__.exit

while.body.i:                                     ; preds = %ifend45, %else.i
  %281 = phi ptr [ %291, %else.i ], [ %278, %ifend45 ]
  %282 = phi i64 [ %292, %else.i ], [ %276, %ifend45 ]
  %283 = phi ptr [ %296, %else.i ], [ %280, %ifend45 ]
  %hash.0.i577 = phi i64 [ %294, %else.i ], [ %277, %ifend45 ]
  %284 = load ptr, ptr %283, align 8
  %memberidx.i.i308 = getelementptr inbounds %String, ptr %284, i64 0, i32 1
  %285 = load i64, ptr %memberidx.i.i308, align 4
  %286 = load i64, ptr %memberidx.i260, align 4
  %.not.i.i310 = icmp eq i64 %285, %286
  br i1 %.not.i.i310, label %ifend.i.i311, label %else.i

ifend.i.i311:                                     ; preds = %while.body.i
  %287 = load ptr, ptr %284, align 8
  %288 = load ptr, ptr %16, align 8
  %289 = tail call i64 @memcmp(ptr %287, ptr %288, i64 %285)
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %while.end.i, label %ifend.i.i311.else.i_crit_edge

ifend.i.i311.else.i_crit_edge:                    ; preds = %ifend.i.i311
  %.pre635 = load i64, ptr %memberidx.i306, align 4
  %.pre636 = load ptr, ptr %274, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i311.else.i_crit_edge, %while.body.i
  %291 = phi ptr [ %.pre636, %ifend.i.i311.else.i_crit_edge ], [ %281, %while.body.i ]
  %292 = phi i64 [ %.pre635, %ifend.i.i311.else.i_crit_edge ], [ %282, %while.body.i ]
  %293 = add nuw i64 %hash.0.i577, 1
  %294 = urem i64 %293, %292
  %295 = getelementptr inbounds ptr, ptr %291, i64 %294
  %296 = load ptr, ptr %295, align 8
  %.not.i307 = icmp eq ptr %296, null
  br i1 %.not.i307, label %ifend56, label %while.body.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre639.pre, i64 0, i32 1
  %297 = load ptr, ptr %memberidx10.i, align 8
  %.not = icmp eq ptr %297, null
  br i1 %.not, label %ifend56, label %if.entry54

if.entry48:                                       ; preds = %ifend9.i, %get_class_from_type.exit522, %while.end.i43.i, %while.end.i.i, %is_object.exit, %Map_String_PropId____getitem__.exit.i, %get_class_prop_type.exit.i, %Map_String_PropId____getitem__.exit55.i, %get_class_prop_type.exit69.i, %ifend18.i, %else.i.i, %else.i51.i
  %298 = tail call ptr @malloc(i32 74)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(74) %298, ptr noundef nonnull align 8 dereferenceable(74) @144, i64 74, i1 false)
  %299 = tail call ptr @malloc(i32 24)
  store ptr %298, ptr %299, align 8
  %memberidx1.i.i314 = getelementptr inbounds %String, ptr %299, i64 0, i32 1
  store i64 74, ptr %memberidx1.i.i314, align 4
  %memberidx2.i.i315 = getelementptr inbounds %String, ptr %299, i64 0, i32 2
  store i64 74, ptr %memberidx2.i.i315, align 4
  %300 = load ptr, ptr %13, align 8
  %memberidx52 = getelementptr inbounds %Token, ptr %300, i64 0, i32 1
  %301 = load ptr, ptr %memberidx52, align 8
  %memberidx.i316 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %302 = load ptr, ptr %memberidx.i316, align 8
  %memberidx1.i317 = getelementptr inbounds %Compiler, ptr %302, i64 0, i32 5
  %303 = load ptr, ptr %memberidx1.i317, align 8
  %304 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %304, align 4
  %memberidx1.i.i318 = getelementptr inbounds %FloError, ptr %304, i64 0, i32 2
  store ptr %301, ptr %memberidx1.i.i318, align 8
  %memberidx2.i.i319 = getelementptr inbounds %FloError, ptr %304, i64 0, i32 1
  store ptr %299, ptr %memberidx2.i.i319, align 8
  %memberidx.i.i320 = getelementptr inbounds %Array_FloError_, ptr %303, i64 0, i32 1
  %305 = load i64, ptr %memberidx.i.i320, align 4
  %306 = add i64 %305, 1
  %memberidx.i.i.i321 = getelementptr inbounds %Array_FloError_, ptr %303, i64 0, i32 2
  %307 = load i64, ptr %memberidx.i.i.i321, align 4
  %308 = icmp slt i64 %307, %306
  %.pre664 = load ptr, ptr %303, align 8
  br i1 %308, label %while.body.i.i.i323, label %TypeChecker_error.exit324

while.body.i.i.i323:                              ; preds = %if.entry48, %while.body.i.i.i323
  %309 = phi ptr [ %313, %while.body.i.i.i323 ], [ %.pre664, %if.entry48 ]
  %310 = phi i64 [ %314, %while.body.i.i.i323 ], [ %307, %if.entry48 ]
  %311 = shl nuw i64 %310, 1
  store i64 %311, ptr %memberidx.i.i.i321, align 4
  %312 = shl i64 %310, 4
  %313 = tail call ptr @realloc(ptr %309, i64 %312)
  store ptr %313, ptr %303, align 8
  %314 = load i64, ptr %memberidx.i.i.i321, align 4
  %315 = icmp slt i64 %314, %306
  br i1 %315, label %while.body.i.i.i323, label %TypeChecker_error.exit324.loopexit

TypeChecker_error.exit324.loopexit:               ; preds = %while.body.i.i.i323
  %.pre665 = load i64, ptr %memberidx.i.i320, align 4
  %.pre679 = add nsw i64 %.pre665, 1
  br label %TypeChecker_error.exit324

TypeChecker_error.exit324:                        ; preds = %if.entry48, %TypeChecker_error.exit324.loopexit
  %.pre-phi680 = phi i64 [ %.pre679, %TypeChecker_error.exit324.loopexit ], [ %306, %if.entry48 ]
  %316 = phi ptr [ %313, %TypeChecker_error.exit324.loopexit ], [ %.pre664, %if.entry48 ]
  %317 = phi i64 [ %.pre665, %TypeChecker_error.exit324.loopexit ], [ %305, %if.entry48 ]
  store i64 %.pre-phi680, ptr %memberidx.i.i320, align 4
  %318 = getelementptr inbounds ptr, ptr %316, i64 %317
  store ptr %304, ptr %318, align 8
  br label %common.ret

if.entry54:                                       ; preds = %Map_String_PropId____getitem__.exit
  %memberidx57 = getelementptr inbounds %PropId, ptr %297, i64 0, i32 1
  %319 = load ptr, ptr %memberidx57, align 8
  %320 = load ptr, ptr %1, align 8
  %321 = icmp eq ptr %319, %320
  br i1 %321, label %if.entry59, label %ifend61

ifend56:                                          ; preds = %else.i, %ifend45, %while.end.i, %ifend70, %Map_String_PropId____getitem__.exit
  %322 = tail call ptr @malloc(i32 24)
  %323 = load ptr, ptr %1, align 8
  store i64 0, ptr %322, align 4
  %memberidx1.i325 = getelementptr inbounds %PropId, ptr %322, i64 0, i32 1
  store ptr %323, ptr %memberidx1.i325, align 8
  %memberidx2.i326 = getelementptr inbounds %PropId, ptr %322, i64 0, i32 2
  store i64 %9, ptr %memberidx2.i326, align 4
  store ptr %322, ptr %14, align 8
  %324 = load i1, ptr %memberidx36, align 1
  br i1 %324, label %if.entry84, label %else85

if.entry59:                                       ; preds = %if.entry54
  %325 = load i64, ptr %memberidx.i260, align 4
  %326 = trunc i64 %325 to i32
  %327 = add i32 %326, 1
  %328 = tail call ptr @malloc(i32 %327)
  %329 = load ptr, ptr %16, align 8
  %330 = load i64, ptr %memberidx.i260, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %328, ptr align 8 %329, i64 %330, i1 false)
  %331 = getelementptr inbounds i8, ptr %328, i64 %330
  store i8 0, ptr %331, align 1
  %memberidx62 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %332 = load ptr, ptr %memberidx62, align 8
  %memberidx.i328 = getelementptr inbounds %String, ptr %332, i64 0, i32 1
  %333 = load i64, ptr %memberidx.i328, align 4
  %334 = trunc i64 %333 to i32
  %335 = add i32 %334, 1
  %336 = tail call ptr @malloc(i32 %335)
  %337 = load ptr, ptr %332, align 8
  %338 = load i64, ptr %memberidx.i328, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %336, ptr align 8 %337, i64 %338, i1 false)
  %339 = getelementptr inbounds i8, ptr %336, i64 %338
  store i8 0, ptr %339, align 1
  %340 = alloca ptr, align 8
  %341 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %340, ptr nonnull @145, ptr %328, ptr %336)
  %342 = load ptr, ptr %340, align 8
  %343 = tail call ptr @malloc(i32 24)
  store ptr %342, ptr %343, align 8
  %memberidx1.i329 = getelementptr inbounds %String, ptr %343, i64 0, i32 1
  store i64 %341, ptr %memberidx1.i329, align 4
  %memberidx2.i330 = getelementptr inbounds %String, ptr %343, i64 0, i32 2
  store i64 %341, ptr %memberidx2.i330, align 4
  tail call void @free(ptr %328)
  tail call void @free(ptr %336)
  %344 = load ptr, ptr %13, align 8
  %memberidx64 = getelementptr inbounds %Token, ptr %344, i64 0, i32 1
  %345 = load ptr, ptr %memberidx64, align 8
  %memberidx.i331 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %346 = load ptr, ptr %memberidx.i331, align 8
  %memberidx1.i332 = getelementptr inbounds %Compiler, ptr %346, i64 0, i32 5
  %347 = load ptr, ptr %memberidx1.i332, align 8
  %348 = call ptr @malloc(i32 24)
  store i64 1, ptr %348, align 4
  %memberidx1.i.i333 = getelementptr inbounds %FloError, ptr %348, i64 0, i32 2
  store ptr %345, ptr %memberidx1.i.i333, align 8
  %memberidx2.i.i334 = getelementptr inbounds %FloError, ptr %348, i64 0, i32 1
  store ptr %343, ptr %memberidx2.i.i334, align 8
  %memberidx.i.i335 = getelementptr inbounds %Array_FloError_, ptr %347, i64 0, i32 1
  %349 = load i64, ptr %memberidx.i.i335, align 4
  %350 = add i64 %349, 1
  %memberidx.i.i.i336 = getelementptr inbounds %Array_FloError_, ptr %347, i64 0, i32 2
  %351 = load i64, ptr %memberidx.i.i.i336, align 4
  %352 = icmp slt i64 %351, %350
  %.pre646 = load ptr, ptr %347, align 8
  br i1 %352, label %while.body.i.i.i338, label %TypeChecker_error.exit339

while.body.i.i.i338:                              ; preds = %if.entry59, %while.body.i.i.i338
  %353 = phi ptr [ %357, %while.body.i.i.i338 ], [ %.pre646, %if.entry59 ]
  %354 = phi i64 [ %358, %while.body.i.i.i338 ], [ %351, %if.entry59 ]
  %355 = shl nuw i64 %354, 1
  store i64 %355, ptr %memberidx.i.i.i336, align 4
  %356 = shl i64 %354, 4
  %357 = call ptr @realloc(ptr %353, i64 %356)
  store ptr %357, ptr %347, align 8
  %358 = load i64, ptr %memberidx.i.i.i336, align 4
  %359 = icmp slt i64 %358, %350
  br i1 %359, label %while.body.i.i.i338, label %TypeChecker_error.exit339.loopexit

TypeChecker_error.exit339.loopexit:               ; preds = %while.body.i.i.i338
  %.pre647 = load i64, ptr %memberidx.i.i335, align 4
  %.pre691 = add nsw i64 %.pre647, 1
  br label %TypeChecker_error.exit339

TypeChecker_error.exit339:                        ; preds = %if.entry59, %TypeChecker_error.exit339.loopexit
  %.pre-phi692 = phi i64 [ %.pre691, %TypeChecker_error.exit339.loopexit ], [ %350, %if.entry59 ]
  %360 = phi ptr [ %357, %TypeChecker_error.exit339.loopexit ], [ %.pre646, %if.entry59 ]
  %361 = phi i64 [ %.pre647, %TypeChecker_error.exit339.loopexit ], [ %349, %if.entry59 ]
  store i64 %.pre-phi692, ptr %memberidx.i.i335, align 4
  %362 = getelementptr inbounds ptr, ptr %360, i64 %361
  store ptr %348, ptr %362, align 8
  br label %common.ret

ifend61:                                          ; preds = %if.entry54
  %363 = load ptr, ptr %0, align 8
  %364 = load ptr, ptr %363, align 8
  %365 = load i64, ptr %319, align 4
  %366 = load ptr, ptr %364, align 8
  %367 = getelementptr inbounds ptr, ptr %366, i64 %365
  %368 = load ptr, ptr %367, align 8
  %memberidx2.i.i.i341 = getelementptr inbounds %Module, ptr %368, i64 0, i32 3
  %369 = load ptr, ptr %memberidx2.i.i.i341, align 8
  %memberidx3.i.i.i342 = getelementptr inbounds %TypeId, ptr %319, i64 0, i32 2
  %370 = load i64, ptr %memberidx3.i.i.i342, align 4
  %371 = load ptr, ptr %369, align 8
  %372 = getelementptr inbounds ptr, ptr %371, i64 %370
  %373 = load ptr, ptr %372, align 8
  %374 = load i64, ptr %297, align 4
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %if.entry.i356, label %ifend.i360

if.entry.i356:                                    ; preds = %ifend61
  %memberidx1.i344 = getelementptr inbounds %Class, ptr %373, i64 0, i32 5
  %376 = load ptr, ptr %memberidx1.i344, align 8
  %memberidx2.i345 = getelementptr inbounds %PropId, ptr %297, i64 0, i32 2
  %377 = load i64, ptr %memberidx2.i345, align 4
  %378 = load ptr, ptr %376, align 8
  %379 = getelementptr inbounds ptr, ptr %378, i64 %377
  %380 = load ptr, ptr %379, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %380, i64 0, i32 4
  %memberidx3.i355 = getelementptr inbounds %ClassMethod, ptr %380, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i360:                                       ; preds = %ifend61
  %memberidx4.i346 = getelementptr inbounds %Class, ptr %373, i64 0, i32 4
  %381 = load ptr, ptr %memberidx4.i346, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %297, i64 0, i32 2
  %382 = load i64, ptr %memberidx5.i, align 4
  %383 = load ptr, ptr %381, align 8
  %384 = getelementptr inbounds ptr, ptr %383, i64 %382
  %385 = load ptr, ptr %384, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %385, i64 0, i32 4
  %memberidx6.i359 = getelementptr inbounds %ClassField, ptr %385, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i356, %ifend.i360
  %common.ret.op.i343534.in = phi ptr [ %memberidx3.i, %if.entry.i356 ], [ %memberidx6.i, %ifend.i360 ]
  %common.ret.op.in.i351 = phi ptr [ %memberidx3.i355, %if.entry.i356 ], [ %memberidx6.i359, %ifend.i360 ]
  %common.ret.op.i343534 = load ptr, ptr %common.ret.op.i343534.in, align 8
  %common.ret.op.i352 = load i64, ptr %common.ret.op.in.i351, align 4
  %386 = load ptr, ptr %memberidx39, align 8
  %387 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i343534, ptr %386)
  br i1 %387, label %ifend70, label %if.entry68

if.entry68:                                       ; preds = %get_class_prop_visibility.exit
  %388 = load i64, ptr %memberidx.i260, align 4
  %389 = trunc i64 %388 to i32
  %390 = add i32 %389, 1
  %391 = tail call ptr @malloc(i32 %390)
  %392 = load ptr, ptr %16, align 8
  %393 = load i64, ptr %memberidx.i260, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %391, ptr align 8 %392, i64 %393, i1 false)
  %394 = getelementptr inbounds i8, ptr %391, i64 %393
  store i8 0, ptr %394, align 1
  %memberidx71 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %395 = load ptr, ptr %memberidx71, align 8
  %memberidx.i362 = getelementptr inbounds %String, ptr %395, i64 0, i32 1
  %396 = load i64, ptr %memberidx.i362, align 4
  %397 = trunc i64 %396 to i32
  %398 = add i32 %397, 1
  %399 = tail call ptr @malloc(i32 %398)
  %400 = load ptr, ptr %395, align 8
  %401 = load i64, ptr %memberidx.i362, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %399, ptr align 8 %400, i64 %401, i1 false)
  %402 = getelementptr inbounds i8, ptr %399, i64 %401
  store i8 0, ptr %402, align 1
  %403 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i343534)
  %memberidx.i363 = getelementptr inbounds %String, ptr %403, i64 0, i32 1
  %404 = load i64, ptr %memberidx.i363, align 4
  %405 = trunc i64 %404 to i32
  %406 = add i32 %405, 1
  %407 = tail call ptr @malloc(i32 %406)
  %408 = load ptr, ptr %403, align 8
  %409 = load i64, ptr %memberidx.i363, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %407, ptr align 8 %408, i64 %409, i1 false)
  %410 = getelementptr inbounds i8, ptr %407, i64 %409
  store i8 0, ptr %410, align 1
  %411 = alloca ptr, align 8
  %412 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %411, ptr nonnull @146, ptr %391, ptr %399, ptr %407)
  %413 = load ptr, ptr %411, align 8
  %414 = tail call ptr @malloc(i32 24)
  store ptr %413, ptr %414, align 8
  %memberidx1.i364 = getelementptr inbounds %String, ptr %414, i64 0, i32 1
  store i64 %412, ptr %memberidx1.i364, align 4
  %memberidx2.i365 = getelementptr inbounds %String, ptr %414, i64 0, i32 2
  store i64 %412, ptr %memberidx2.i365, align 4
  tail call void @free(ptr %391)
  tail call void @free(ptr %399)
  tail call void @free(ptr %407)
  %415 = load ptr, ptr %13, align 8
  %memberidx73 = getelementptr inbounds %Token, ptr %415, i64 0, i32 1
  %416 = load ptr, ptr %memberidx73, align 8
  %memberidx.i366 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %417 = load ptr, ptr %memberidx.i366, align 8
  %memberidx1.i367 = getelementptr inbounds %Compiler, ptr %417, i64 0, i32 5
  %418 = load ptr, ptr %memberidx1.i367, align 8
  %419 = call ptr @malloc(i32 24)
  store i64 5, ptr %419, align 4
  %memberidx1.i.i368 = getelementptr inbounds %FloError, ptr %419, i64 0, i32 2
  store ptr %416, ptr %memberidx1.i.i368, align 8
  %memberidx2.i.i369 = getelementptr inbounds %FloError, ptr %419, i64 0, i32 1
  store ptr %414, ptr %memberidx2.i.i369, align 8
  %memberidx.i.i370 = getelementptr inbounds %Array_FloError_, ptr %418, i64 0, i32 1
  %420 = load i64, ptr %memberidx.i.i370, align 4
  %421 = add i64 %420, 1
  %memberidx.i.i.i371 = getelementptr inbounds %Array_FloError_, ptr %418, i64 0, i32 2
  %422 = load i64, ptr %memberidx.i.i.i371, align 4
  %423 = icmp slt i64 %422, %421
  %.pre640 = load ptr, ptr %418, align 8
  br i1 %423, label %while.body.i.i.i373, label %TypeChecker_error.exit374

while.body.i.i.i373:                              ; preds = %if.entry68, %while.body.i.i.i373
  %424 = phi ptr [ %428, %while.body.i.i.i373 ], [ %.pre640, %if.entry68 ]
  %425 = phi i64 [ %429, %while.body.i.i.i373 ], [ %422, %if.entry68 ]
  %426 = shl nuw i64 %425, 1
  store i64 %426, ptr %memberidx.i.i.i371, align 4
  %427 = shl i64 %425, 4
  %428 = call ptr @realloc(ptr %424, i64 %427)
  store ptr %428, ptr %418, align 8
  %429 = load i64, ptr %memberidx.i.i.i371, align 4
  %430 = icmp slt i64 %429, %421
  br i1 %430, label %while.body.i.i.i373, label %TypeChecker_error.exit374.loopexit

TypeChecker_error.exit374.loopexit:               ; preds = %while.body.i.i.i373
  %.pre641 = load i64, ptr %memberidx.i.i370, align 4
  %.pre695 = add nsw i64 %.pre641, 1
  br label %TypeChecker_error.exit374

TypeChecker_error.exit374:                        ; preds = %if.entry68, %TypeChecker_error.exit374.loopexit
  %.pre-phi696 = phi i64 [ %.pre695, %TypeChecker_error.exit374.loopexit ], [ %421, %if.entry68 ]
  %431 = phi ptr [ %428, %TypeChecker_error.exit374.loopexit ], [ %.pre640, %if.entry68 ]
  %432 = phi i64 [ %.pre641, %TypeChecker_error.exit374.loopexit ], [ %420, %if.entry68 ]
  store i64 %.pre-phi696, ptr %memberidx.i.i370, align 4
  %433 = getelementptr inbounds ptr, ptr %431, i64 %432
  store ptr %419, ptr %433, align 8
  br label %common.ret

ifend70:                                          ; preds = %get_class_prop_visibility.exit
  %434 = load i64, ptr %memberidx37, align 4
  %.not237 = icmp eq i64 %434, %common.ret.op.i352
  br i1 %.not237, label %ifend56, label %if.entry75

if.entry75:                                       ; preds = %ifend70
  %435 = load i64, ptr %memberidx.i260, align 4
  %436 = trunc i64 %435 to i32
  %437 = add i32 %436, 1
  %438 = tail call ptr @malloc(i32 %437)
  %439 = load ptr, ptr %16, align 8
  %440 = load i64, ptr %memberidx.i260, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %438, ptr align 8 %439, i64 %440, i1 false)
  %441 = getelementptr inbounds i8, ptr %438, i64 %440
  store i8 0, ptr %441, align 1
  %memberidx78 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %442 = load ptr, ptr %memberidx78, align 8
  %memberidx.i376 = getelementptr inbounds %String, ptr %442, i64 0, i32 1
  %443 = load i64, ptr %memberidx.i376, align 4
  %444 = trunc i64 %443 to i32
  %445 = add i32 %444, 1
  %446 = tail call ptr @malloc(i32 %445)
  %447 = load ptr, ptr %442, align 8
  %448 = load i64, ptr %memberidx.i376, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %446, ptr align 8 %447, i64 %448, i1 false)
  %449 = getelementptr inbounds i8, ptr %446, i64 %448
  store i8 0, ptr %449, align 1
  switch i64 %common.ret.op.i352, label %ifend3.i [
    i64 1, label %if.entry.i380
    i64 2, label %if.entry1.i
  ]

if.entry.i380:                                    ; preds = %if.entry75
  %450 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %450, ptr noundef nonnull align 8 dereferenceable(7) @51, i64 7, i1 false)
  %451 = tail call ptr @malloc(i32 24)
  store ptr %450, ptr %451, align 8
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry75
  %452 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %452, ptr noundef nonnull align 8 dereferenceable(6) @52, i64 6, i1 false)
  %453 = tail call ptr @malloc(i32 24)
  store ptr %452, ptr %453, align 8
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry75
  %454 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %454, ptr noundef nonnull align 8 dereferenceable(9) @53, i64 9, i1 false)
  %455 = tail call ptr @malloc(i32 24)
  store ptr %454, ptr %455, align 8
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i380, %if.entry1.i, %ifend3.i
  %.sink764 = phi ptr [ %451, %if.entry.i380 ], [ %453, %if.entry1.i ], [ %455, %ifend3.i ]
  %.sink763 = phi i64 [ 7, %if.entry.i380 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %.off0 = phi i32 [ 8, %if.entry.i380 ], [ 7, %if.entry1.i ], [ 10, %ifend3.i ]
  %memberidx1.i.i.i378 = getelementptr inbounds %String, ptr %.sink764, i64 0, i32 1
  store i64 %.sink763, ptr %memberidx1.i.i.i378, align 4
  %memberidx2.i.i.i379 = getelementptr inbounds %String, ptr %.sink764, i64 0, i32 2
  store i64 %.sink763, ptr %memberidx2.i.i.i379, align 4
  %memberidx.i382 = getelementptr inbounds %String, ptr %.sink764, i64 0, i32 1
  %456 = tail call ptr @malloc(i32 %.off0)
  %457 = load ptr, ptr %.sink764, align 8
  %458 = load i64, ptr %memberidx.i382, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %456, ptr align 8 %457, i64 %458, i1 false)
  %459 = getelementptr inbounds i8, ptr %456, i64 %458
  store i8 0, ptr %459, align 1
  %460 = alloca ptr, align 8
  %461 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %460, ptr nonnull @147, ptr nonnull %438, ptr nonnull %446, ptr %456)
  %462 = load ptr, ptr %460, align 8
  %463 = tail call ptr @malloc(i32 24)
  store ptr %462, ptr %463, align 8
  %memberidx1.i383 = getelementptr inbounds %String, ptr %463, i64 0, i32 1
  store i64 %461, ptr %memberidx1.i383, align 4
  %memberidx2.i384 = getelementptr inbounds %String, ptr %463, i64 0, i32 2
  store i64 %461, ptr %memberidx2.i384, align 4
  tail call void @free(ptr nonnull %438)
  tail call void @free(ptr nonnull %446)
  tail call void @free(ptr %456)
  %464 = load ptr, ptr %13, align 8
  %memberidx80 = getelementptr inbounds %Token, ptr %464, i64 0, i32 1
  %465 = load ptr, ptr %memberidx80, align 8
  %memberidx.i385 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %466 = load ptr, ptr %memberidx.i385, align 8
  %memberidx1.i386 = getelementptr inbounds %Compiler, ptr %466, i64 0, i32 5
  %467 = load ptr, ptr %memberidx1.i386, align 8
  %468 = call ptr @malloc(i32 24)
  store i64 4, ptr %468, align 4
  %memberidx1.i.i387 = getelementptr inbounds %FloError, ptr %468, i64 0, i32 2
  store ptr %465, ptr %memberidx1.i.i387, align 8
  %memberidx2.i.i388 = getelementptr inbounds %FloError, ptr %468, i64 0, i32 1
  store ptr %463, ptr %memberidx2.i.i388, align 8
  %memberidx.i.i389 = getelementptr inbounds %Array_FloError_, ptr %467, i64 0, i32 1
  %469 = load i64, ptr %memberidx.i.i389, align 4
  %470 = add i64 %469, 1
  %memberidx.i.i.i390 = getelementptr inbounds %Array_FloError_, ptr %467, i64 0, i32 2
  %471 = load i64, ptr %memberidx.i.i.i390, align 4
  %472 = icmp slt i64 %471, %470
  %.pre643 = load ptr, ptr %467, align 8
  br i1 %472, label %while.body.i.i.i392, label %TypeChecker_error.exit393

while.body.i.i.i392:                              ; preds = %dump_access.exit, %while.body.i.i.i392
  %473 = phi ptr [ %477, %while.body.i.i.i392 ], [ %.pre643, %dump_access.exit ]
  %474 = phi i64 [ %478, %while.body.i.i.i392 ], [ %471, %dump_access.exit ]
  %475 = shl nuw i64 %474, 1
  store i64 %475, ptr %memberidx.i.i.i390, align 4
  %476 = shl i64 %474, 4
  %477 = call ptr @realloc(ptr %473, i64 %476)
  store ptr %477, ptr %467, align 8
  %478 = load i64, ptr %memberidx.i.i.i390, align 4
  %479 = icmp slt i64 %478, %470
  br i1 %479, label %while.body.i.i.i392, label %TypeChecker_error.exit393.loopexit

TypeChecker_error.exit393.loopexit:               ; preds = %while.body.i.i.i392
  %.pre644 = load i64, ptr %memberidx.i.i389, align 4
  %.pre693 = add nsw i64 %.pre644, 1
  br label %TypeChecker_error.exit393

TypeChecker_error.exit393:                        ; preds = %dump_access.exit, %TypeChecker_error.exit393.loopexit
  %.pre-phi694 = phi i64 [ %.pre693, %TypeChecker_error.exit393.loopexit ], [ %470, %dump_access.exit ]
  %480 = phi ptr [ %477, %TypeChecker_error.exit393.loopexit ], [ %.pre643, %dump_access.exit ]
  %481 = phi i64 [ %.pre644, %TypeChecker_error.exit393.loopexit ], [ %469, %dump_access.exit ]
  store i64 %.pre-phi694, ptr %memberidx.i.i389, align 4
  %482 = getelementptr inbounds ptr, ptr %480, i64 %481
  store ptr %468, ptr %482, align 8
  br label %common.ret

if.entry84:                                       ; preds = %ifend56
  %483 = load i1, ptr %memberidx34, align 1
  br i1 %483, label %if.entry88, label %ifend90

else85:                                           ; preds = %ifend56
  %484 = load ptr, ptr %memberidx6, align 8
  %485 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %485, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %486 = tail call ptr @malloc(i32 24)
  store ptr %485, ptr %486, align 8
  %memberidx1.i.i394 = getelementptr inbounds %String, ptr %486, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i394, align 4
  %memberidx2.i.i395 = getelementptr inbounds %String, ptr %486, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i395, align 4
  %memberidx.i396 = getelementptr inbounds %String, ptr %484, i64 0, i32 1
  %487 = load i64, ptr %memberidx.i396, align 4
  %.not.i398 = icmp eq i64 %487, 11
  br i1 %.not.i398, label %ifend.i400, label %else103

ifend.i400:                                       ; preds = %else85
  %488 = load ptr, ptr %484, align 8
  %489 = tail call i64 @memcmp(ptr %488, ptr nonnull %485, i64 11)
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %if.entry102, label %else103

ifend86:                                          ; preds = %get_class_prop_type.exit474, %if.entry3.i, %ifend104, %ifend96
  %memberidx133 = getelementptr inbounds %ClassMethod, ptr %14, i64 0, i32 8
  %491 = load ptr, ptr %19, align 8
  store ptr %491, ptr %memberidx133, align 8
  %492 = load ptr, ptr %memberidx135, align 8
  %memberidx.i402 = getelementptr inbounds %Array_ClassMethod_, ptr %492, i64 0, i32 1
  %493 = load i64, ptr %memberidx.i402, align 4
  %494 = add i64 %493, 1
  %memberidx.i.i403 = getelementptr inbounds %Array_ClassMethod_, ptr %492, i64 0, i32 2
  %495 = load i64, ptr %memberidx.i.i403, align 4
  %496 = icmp slt i64 %495, %494
  %.pre655 = load ptr, ptr %492, align 8
  br i1 %496, label %while.body.i.i405, label %Array_ClassMethod____sl__.exit

while.body.i.i405:                                ; preds = %ifend86, %while.body.i.i405
  %497 = phi ptr [ %501, %while.body.i.i405 ], [ %.pre655, %ifend86 ]
  %498 = phi i64 [ %502, %while.body.i.i405 ], [ %495, %ifend86 ]
  %499 = shl nuw i64 %498, 1
  store i64 %499, ptr %memberidx.i.i403, align 4
  %500 = shl i64 %498, 4
  %501 = tail call ptr @realloc(ptr %497, i64 %500)
  store ptr %501, ptr %492, align 8
  %502 = load i64, ptr %memberidx.i.i403, align 4
  %503 = icmp slt i64 %502, %494
  br i1 %503, label %while.body.i.i405, label %Array_ClassMethod____sl__.exit.loopexit

Array_ClassMethod____sl__.exit.loopexit:          ; preds = %while.body.i.i405
  %.pre656 = load i64, ptr %memberidx.i402, align 4
  %.pre685 = add nsw i64 %.pre656, 1
  br label %Array_ClassMethod____sl__.exit

Array_ClassMethod____sl__.exit:                   ; preds = %ifend86, %Array_ClassMethod____sl__.exit.loopexit
  %.pre-phi686 = phi i64 [ %.pre685, %Array_ClassMethod____sl__.exit.loopexit ], [ %494, %ifend86 ]
  %504 = phi ptr [ %501, %Array_ClassMethod____sl__.exit.loopexit ], [ %.pre655, %ifend86 ]
  %505 = phi i64 [ %.pre656, %Array_ClassMethod____sl__.exit.loopexit ], [ %493, %ifend86 ]
  store i64 %.pre-phi686, ptr %memberidx.i402, align 4
  %506 = getelementptr inbounds ptr, ptr %504, i64 %505
  store ptr %14, ptr %506, align 8
  %507 = load ptr, ptr %memberidx2.i242, align 8
  store ptr %507, ptr %memberidx.i241, align 8
  %508 = icmp sge i64 %8, %4
  store i1 %508, ptr %6, align 1
  %509 = add nuw nsw i64 %8, 1
  store i64 %509, ptr %memberidx.i.i, align 4
  br i1 %508, label %for.end, label %for.body

if.entry88:                                       ; preds = %if.entry84
  %510 = tail call ptr @malloc(i32 31)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %510, ptr noundef nonnull align 8 dereferenceable(31) @148, i64 31, i1 false)
  %511 = tail call ptr @malloc(i32 24)
  store ptr %510, ptr %511, align 8
  %memberidx1.i.i406 = getelementptr inbounds %String, ptr %511, i64 0, i32 1
  store i64 31, ptr %memberidx1.i.i406, align 4
  %memberidx2.i.i407 = getelementptr inbounds %String, ptr %511, i64 0, i32 2
  store i64 31, ptr %memberidx2.i.i407, align 4
  %512 = load ptr, ptr %13, align 8
  %memberidx92 = getelementptr inbounds %Token, ptr %512, i64 0, i32 1
  %513 = load ptr, ptr %memberidx92, align 8
  %memberidx.i408 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %514 = load ptr, ptr %memberidx.i408, align 8
  %memberidx1.i409 = getelementptr inbounds %Compiler, ptr %514, i64 0, i32 5
  %515 = load ptr, ptr %memberidx1.i409, align 8
  %516 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %516, align 4
  %memberidx1.i.i410 = getelementptr inbounds %FloError, ptr %516, i64 0, i32 2
  store ptr %513, ptr %memberidx1.i.i410, align 8
  %memberidx2.i.i411 = getelementptr inbounds %FloError, ptr %516, i64 0, i32 1
  store ptr %511, ptr %memberidx2.i.i411, align 8
  %memberidx.i.i412 = getelementptr inbounds %Array_FloError_, ptr %515, i64 0, i32 1
  %517 = load i64, ptr %memberidx.i.i412, align 4
  %518 = add i64 %517, 1
  %memberidx.i.i.i413 = getelementptr inbounds %Array_FloError_, ptr %515, i64 0, i32 2
  %519 = load i64, ptr %memberidx.i.i.i413, align 4
  %520 = icmp slt i64 %519, %518
  %.pre661 = load ptr, ptr %515, align 8
  br i1 %520, label %while.body.i.i.i415, label %TypeChecker_error.exit416

while.body.i.i.i415:                              ; preds = %if.entry88, %while.body.i.i.i415
  %521 = phi ptr [ %525, %while.body.i.i.i415 ], [ %.pre661, %if.entry88 ]
  %522 = phi i64 [ %526, %while.body.i.i.i415 ], [ %519, %if.entry88 ]
  %523 = shl nuw i64 %522, 1
  store i64 %523, ptr %memberidx.i.i.i413, align 4
  %524 = shl i64 %522, 4
  %525 = tail call ptr @realloc(ptr %521, i64 %524)
  store ptr %525, ptr %515, align 8
  %526 = load i64, ptr %memberidx.i.i.i413, align 4
  %527 = icmp slt i64 %526, %518
  br i1 %527, label %while.body.i.i.i415, label %TypeChecker_error.exit416.loopexit

TypeChecker_error.exit416.loopexit:               ; preds = %while.body.i.i.i415
  %.pre662 = load i64, ptr %memberidx.i.i412, align 4
  %.pre681 = add nsw i64 %.pre662, 1
  br label %TypeChecker_error.exit416

TypeChecker_error.exit416:                        ; preds = %if.entry88, %TypeChecker_error.exit416.loopexit
  %.pre-phi682 = phi i64 [ %.pre681, %TypeChecker_error.exit416.loopexit ], [ %518, %if.entry88 ]
  %528 = phi ptr [ %525, %TypeChecker_error.exit416.loopexit ], [ %.pre661, %if.entry88 ]
  %529 = phi i64 [ %.pre662, %TypeChecker_error.exit416.loopexit ], [ %517, %if.entry88 ]
  store i64 %.pre-phi682, ptr %memberidx.i.i412, align 4
  %530 = getelementptr inbounds ptr, ptr %528, i64 %529
  store ptr %516, ptr %530, align 8
  br label %common.ret

ifend90:                                          ; preds = %if.entry84
  %531 = load ptr, ptr %memberidx6, align 8
  %532 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %532, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %533 = tail call ptr @malloc(i32 24)
  store ptr %532, ptr %533, align 8
  %memberidx1.i.i417 = getelementptr inbounds %String, ptr %533, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i417, align 4
  %memberidx2.i.i418 = getelementptr inbounds %String, ptr %533, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i418, align 4
  %memberidx.i419 = getelementptr inbounds %String, ptr %531, i64 0, i32 1
  %534 = load i64, ptr %memberidx.i419, align 4
  %.not.i421 = icmp eq i64 %534, 11
  br i1 %.not.i421, label %ifend.i423, label %ifend96

ifend.i423:                                       ; preds = %ifend90
  %535 = load ptr, ptr %531, align 8
  %536 = tail call i64 @memcmp(ptr %535, ptr nonnull %532, i64 11)
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %if.entry94, label %ifend96

if.entry94:                                       ; preds = %ifend.i423
  %538 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %538, ptr noundef nonnull align 8 dereferenceable(33) @150, i64 33, i1 false)
  %539 = tail call ptr @malloc(i32 24)
  store ptr %538, ptr %539, align 8
  %memberidx1.i.i425 = getelementptr inbounds %String, ptr %539, i64 0, i32 1
  store i64 33, ptr %memberidx1.i.i425, align 4
  %memberidx2.i.i426 = getelementptr inbounds %String, ptr %539, i64 0, i32 2
  store i64 33, ptr %memberidx2.i.i426, align 4
  %540 = load ptr, ptr %13, align 8
  %memberidx98 = getelementptr inbounds %Token, ptr %540, i64 0, i32 1
  %541 = load ptr, ptr %memberidx98, align 8
  %memberidx.i427 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %542 = load ptr, ptr %memberidx.i427, align 8
  %memberidx1.i428 = getelementptr inbounds %Compiler, ptr %542, i64 0, i32 5
  %543 = load ptr, ptr %memberidx1.i428, align 8
  %544 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %544, align 4
  %memberidx1.i.i429 = getelementptr inbounds %FloError, ptr %544, i64 0, i32 2
  store ptr %541, ptr %memberidx1.i.i429, align 8
  %memberidx2.i.i430 = getelementptr inbounds %FloError, ptr %544, i64 0, i32 1
  store ptr %539, ptr %memberidx2.i.i430, align 8
  %memberidx.i.i431 = getelementptr inbounds %Array_FloError_, ptr %543, i64 0, i32 1
  %545 = load i64, ptr %memberidx.i.i431, align 4
  %546 = add i64 %545, 1
  %memberidx.i.i.i432 = getelementptr inbounds %Array_FloError_, ptr %543, i64 0, i32 2
  %547 = load i64, ptr %memberidx.i.i.i432, align 4
  %548 = icmp slt i64 %547, %546
  %.pre658 = load ptr, ptr %543, align 8
  br i1 %548, label %while.body.i.i.i434, label %TypeChecker_error.exit435

while.body.i.i.i434:                              ; preds = %if.entry94, %while.body.i.i.i434
  %549 = phi ptr [ %553, %while.body.i.i.i434 ], [ %.pre658, %if.entry94 ]
  %550 = phi i64 [ %554, %while.body.i.i.i434 ], [ %547, %if.entry94 ]
  %551 = shl nuw i64 %550, 1
  store i64 %551, ptr %memberidx.i.i.i432, align 4
  %552 = shl i64 %550, 4
  %553 = tail call ptr @realloc(ptr %549, i64 %552)
  store ptr %553, ptr %543, align 8
  %554 = load i64, ptr %memberidx.i.i.i432, align 4
  %555 = icmp slt i64 %554, %546
  br i1 %555, label %while.body.i.i.i434, label %TypeChecker_error.exit435.loopexit

TypeChecker_error.exit435.loopexit:               ; preds = %while.body.i.i.i434
  %.pre659 = load i64, ptr %memberidx.i.i431, align 4
  %.pre683 = add nsw i64 %.pre659, 1
  br label %TypeChecker_error.exit435

TypeChecker_error.exit435:                        ; preds = %if.entry94, %TypeChecker_error.exit435.loopexit
  %.pre-phi684 = phi i64 [ %.pre683, %TypeChecker_error.exit435.loopexit ], [ %546, %if.entry94 ]
  %556 = phi ptr [ %553, %TypeChecker_error.exit435.loopexit ], [ %.pre658, %if.entry94 ]
  %557 = phi i64 [ %.pre659, %TypeChecker_error.exit435.loopexit ], [ %545, %if.entry94 ]
  store i64 %.pre-phi684, ptr %memberidx.i.i431, align 4
  %558 = getelementptr inbounds ptr, ptr %556, i64 %557
  store ptr %544, ptr %558, align 8
  br label %common.ret

ifend96:                                          ; preds = %ifend90, %ifend.i423
  %559 = load ptr, ptr %memberidx99, align 8
  %560 = load ptr, ptr %14, align 8
  tail call fastcc void @Map_String_PropId____setitem__(ptr %559, ptr %16, ptr %560)
  br label %ifend86

if.entry102:                                      ; preds = %ifend.i400
  %561 = load i1, ptr %memberidx34, align 1
  br i1 %561, label %if.entry106, label %ifend108

else103:                                          ; preds = %else85, %ifend.i400
  %562 = load i1, ptr %memberidx34, align 1
  br i1 %562, label %if.entry114, label %ifend116

ifend104:                                         ; preds = %ifend116, %ifend108
  %563 = tail call ptr @malloc(i32 16)
  %564 = load ptr, ptr %1, align 8
  store i64 11, ptr %563, align 4
  %memberidx.i436 = getelementptr inbounds %ObjectType, ptr %563, i64 0, i32 1
  store ptr %564, ptr %memberidx.i436, align 8
  %565 = tail call ptr @malloc(i32 4)
  store i32 1936287860, ptr %565, align 8
  %566 = tail call ptr @malloc(i32 24)
  store ptr %565, ptr %566, align 8
  %memberidx1.i.i437 = getelementptr inbounds %String, ptr %566, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i437, align 4
  %memberidx2.i.i438 = getelementptr inbounds %String, ptr %566, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i438, align 4
  %567 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %566, ptr null, ptr nonnull %563)
  %568 = load ptr, ptr %memberidx122, align 8
  %.not235 = icmp eq ptr %568, null
  br i1 %.not235, label %ifend86, label %if.entry123

if.entry106:                                      ; preds = %if.entry102
  %569 = tail call ptr @malloc(i32 35)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %569, ptr noundef nonnull align 8 dereferenceable(35) @151, i64 35, i1 false)
  %570 = tail call ptr @malloc(i32 24)
  store ptr %569, ptr %570, align 8
  %memberidx1.i.i439 = getelementptr inbounds %String, ptr %570, i64 0, i32 1
  store i64 35, ptr %memberidx1.i.i439, align 4
  %memberidx2.i.i440 = getelementptr inbounds %String, ptr %570, i64 0, i32 2
  store i64 35, ptr %memberidx2.i.i440, align 4
  %571 = load ptr, ptr %13, align 8
  %memberidx110 = getelementptr inbounds %Token, ptr %571, i64 0, i32 1
  %572 = load ptr, ptr %memberidx110, align 8
  %memberidx.i441 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %573 = load ptr, ptr %memberidx.i441, align 8
  %memberidx1.i442 = getelementptr inbounds %Compiler, ptr %573, i64 0, i32 5
  %574 = load ptr, ptr %memberidx1.i442, align 8
  %575 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %575, align 4
  %memberidx1.i.i443 = getelementptr inbounds %FloError, ptr %575, i64 0, i32 2
  store ptr %572, ptr %memberidx1.i.i443, align 8
  %memberidx2.i.i444 = getelementptr inbounds %FloError, ptr %575, i64 0, i32 1
  store ptr %570, ptr %memberidx2.i.i444, align 8
  %memberidx.i.i445 = getelementptr inbounds %Array_FloError_, ptr %574, i64 0, i32 1
  %576 = load i64, ptr %memberidx.i.i445, align 4
  %577 = add i64 %576, 1
  %memberidx.i.i.i446 = getelementptr inbounds %Array_FloError_, ptr %574, i64 0, i32 2
  %578 = load i64, ptr %memberidx.i.i.i446, align 4
  %579 = icmp slt i64 %578, %577
  %.pre652 = load ptr, ptr %574, align 8
  br i1 %579, label %while.body.i.i.i448, label %TypeChecker_error.exit449

while.body.i.i.i448:                              ; preds = %if.entry106, %while.body.i.i.i448
  %580 = phi ptr [ %584, %while.body.i.i.i448 ], [ %.pre652, %if.entry106 ]
  %581 = phi i64 [ %585, %while.body.i.i.i448 ], [ %578, %if.entry106 ]
  %582 = shl nuw i64 %581, 1
  store i64 %582, ptr %memberidx.i.i.i446, align 4
  %583 = shl i64 %581, 4
  %584 = tail call ptr @realloc(ptr %580, i64 %583)
  store ptr %584, ptr %574, align 8
  %585 = load i64, ptr %memberidx.i.i.i446, align 4
  %586 = icmp slt i64 %585, %577
  br i1 %586, label %while.body.i.i.i448, label %TypeChecker_error.exit449.loopexit

TypeChecker_error.exit449.loopexit:               ; preds = %while.body.i.i.i448
  %.pre653 = load i64, ptr %memberidx.i.i445, align 4
  %.pre687 = add nsw i64 %.pre653, 1
  br label %TypeChecker_error.exit449

TypeChecker_error.exit449:                        ; preds = %if.entry106, %TypeChecker_error.exit449.loopexit
  %.pre-phi688 = phi i64 [ %.pre687, %TypeChecker_error.exit449.loopexit ], [ %577, %if.entry106 ]
  %587 = phi ptr [ %584, %TypeChecker_error.exit449.loopexit ], [ %.pre652, %if.entry106 ]
  %588 = phi i64 [ %.pre653, %TypeChecker_error.exit449.loopexit ], [ %576, %if.entry106 ]
  store i64 %.pre-phi688, ptr %memberidx.i.i445, align 4
  %589 = getelementptr inbounds ptr, ptr %587, i64 %588
  store ptr %575, ptr %589, align 8
  br label %common.ret

ifend108:                                         ; preds = %if.entry102
  %590 = load ptr, ptr %14, align 8
  store ptr %590, ptr %memberidx111, align 8
  br label %ifend104

if.entry114:                                      ; preds = %else103
  %591 = tail call ptr @malloc(i32 58)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(58) %591, ptr noundef nonnull align 8 dereferenceable(58) @152, i64 58, i1 false)
  %592 = tail call ptr @malloc(i32 24)
  store ptr %591, ptr %592, align 8
  %memberidx1.i.i450 = getelementptr inbounds %String, ptr %592, i64 0, i32 1
  store i64 58, ptr %memberidx1.i.i450, align 4
  %memberidx2.i.i451 = getelementptr inbounds %String, ptr %592, i64 0, i32 2
  store i64 58, ptr %memberidx2.i.i451, align 4
  %593 = load ptr, ptr %13, align 8
  %memberidx118 = getelementptr inbounds %Token, ptr %593, i64 0, i32 1
  %594 = load ptr, ptr %memberidx118, align 8
  %memberidx.i452 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %595 = load ptr, ptr %memberidx.i452, align 8
  %memberidx1.i453 = getelementptr inbounds %Compiler, ptr %595, i64 0, i32 5
  %596 = load ptr, ptr %memberidx1.i453, align 8
  %597 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %597, align 4
  %memberidx1.i.i454 = getelementptr inbounds %FloError, ptr %597, i64 0, i32 2
  store ptr %594, ptr %memberidx1.i.i454, align 8
  %memberidx2.i.i455 = getelementptr inbounds %FloError, ptr %597, i64 0, i32 1
  store ptr %592, ptr %memberidx2.i.i455, align 8
  %memberidx.i.i456 = getelementptr inbounds %Array_FloError_, ptr %596, i64 0, i32 1
  %598 = load i64, ptr %memberidx.i.i456, align 4
  %599 = add i64 %598, 1
  %memberidx.i.i.i457 = getelementptr inbounds %Array_FloError_, ptr %596, i64 0, i32 2
  %600 = load i64, ptr %memberidx.i.i.i457, align 4
  %601 = icmp slt i64 %600, %599
  %.pre649 = load ptr, ptr %596, align 8
  br i1 %601, label %while.body.i.i.i459, label %TypeChecker_error.exit460

while.body.i.i.i459:                              ; preds = %if.entry114, %while.body.i.i.i459
  %602 = phi ptr [ %606, %while.body.i.i.i459 ], [ %.pre649, %if.entry114 ]
  %603 = phi i64 [ %607, %while.body.i.i.i459 ], [ %600, %if.entry114 ]
  %604 = shl nuw i64 %603, 1
  store i64 %604, ptr %memberidx.i.i.i457, align 4
  %605 = shl i64 %603, 4
  %606 = tail call ptr @realloc(ptr %602, i64 %605)
  store ptr %606, ptr %596, align 8
  %607 = load i64, ptr %memberidx.i.i.i457, align 4
  %608 = icmp slt i64 %607, %599
  br i1 %608, label %while.body.i.i.i459, label %TypeChecker_error.exit460.loopexit

TypeChecker_error.exit460.loopexit:               ; preds = %while.body.i.i.i459
  %.pre650 = load i64, ptr %memberidx.i.i456, align 4
  %.pre689 = add nsw i64 %.pre650, 1
  br label %TypeChecker_error.exit460

TypeChecker_error.exit460:                        ; preds = %if.entry114, %TypeChecker_error.exit460.loopexit
  %.pre-phi690 = phi i64 [ %.pre689, %TypeChecker_error.exit460.loopexit ], [ %599, %if.entry114 ]
  %609 = phi ptr [ %606, %TypeChecker_error.exit460.loopexit ], [ %.pre649, %if.entry114 ]
  %610 = phi i64 [ %.pre650, %TypeChecker_error.exit460.loopexit ], [ %598, %if.entry114 ]
  store i64 %.pre-phi690, ptr %memberidx.i.i456, align 4
  %611 = getelementptr inbounds ptr, ptr %609, i64 %610
  store ptr %597, ptr %611, align 8
  br label %common.ret

ifend116:                                         ; preds = %else103
  %612 = load ptr, ptr %memberidx53, align 8
  %613 = load ptr, ptr %14, align 8
  tail call fastcc void @Map_String_PropId____setitem__(ptr %612, ptr %16, ptr %613)
  br label %ifend104

if.entry123:                                      ; preds = %ifend104
  %614 = load ptr, ptr %0, align 8
  %615 = load i64, ptr %568, align 4
  %switch580 = icmp eq i64 %615, 20
  br i1 %switch580, label %if.entry.i509, label %if.entry3.i

if.entry.i509:                                    ; preds = %if.entry123, %if.entry.i509
  %.tr11.i581 = phi ptr [ %616, %if.entry.i509 ], [ %568, %if.entry123 ]
  %memberidx1.i508 = getelementptr inbounds %GenericType, ptr %.tr11.i581, i64 0, i32 3
  %616 = load ptr, ptr %memberidx1.i508, align 8
  %617 = load i64, ptr %616, align 4
  %switch = icmp eq i64 %617, 20
  br i1 %switch, label %if.entry.i509, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i509, %if.entry123
  %.tr11.i.lcssa = phi ptr [ %568, %if.entry123 ], [ %616, %if.entry.i509 ]
  %memberidx6.i510 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %618 = load ptr, ptr %memberidx6.i510, align 8
  %619 = load ptr, ptr %614, align 8
  %620 = load i64, ptr %618, align 4
  %621 = load ptr, ptr %619, align 8
  %622 = getelementptr inbounds ptr, ptr %621, i64 %620
  %623 = load ptr, ptr %622, align 8
  %memberidx2.i.i511 = getelementptr inbounds %Module, ptr %623, i64 0, i32 3
  %624 = load ptr, ptr %memberidx2.i.i511, align 8
  %memberidx3.i.i512 = getelementptr inbounds %TypeId, ptr %618, i64 0, i32 2
  %625 = load i64, ptr %memberidx3.i.i512, align 4
  %626 = load ptr, ptr %624, align 8
  %627 = getelementptr inbounds ptr, ptr %626, i64 %625
  %628 = load ptr, ptr %627, align 8
  %memberidx128 = getelementptr inbounds %Class, ptr %628, i64 0, i32 3
  %629 = load ptr, ptr %memberidx128, align 8
  %.not236 = icmp eq ptr %629, null
  br i1 %.not236, label %ifend86, label %if.entry129

if.entry129:                                      ; preds = %if.entry3.i
  %memberidx.i.i461 = getelementptr inbounds %PropId, ptr %629, i64 0, i32 1
  %630 = load ptr, ptr %memberidx.i.i461, align 8
  %631 = load i64, ptr %630, align 4
  %632 = getelementptr inbounds ptr, ptr %621, i64 %631
  %633 = load ptr, ptr %632, align 8
  %memberidx2.i.i.i462 = getelementptr inbounds %Module, ptr %633, i64 0, i32 3
  %634 = load ptr, ptr %memberidx2.i.i.i462, align 8
  %memberidx3.i.i.i463 = getelementptr inbounds %TypeId, ptr %630, i64 0, i32 2
  %635 = load i64, ptr %memberidx3.i.i.i463, align 4
  %636 = load ptr, ptr %634, align 8
  %637 = getelementptr inbounds ptr, ptr %636, i64 %635
  %638 = load ptr, ptr %637, align 8
  %639 = load i64, ptr %629, align 4
  %640 = icmp eq i64 %639, 0
  br i1 %640, label %if.entry.i469, label %ifend.i473

if.entry.i469:                                    ; preds = %if.entry129
  %memberidx1.i466 = getelementptr inbounds %Class, ptr %638, i64 0, i32 5
  %641 = load ptr, ptr %memberidx1.i466, align 8
  %memberidx2.i467 = getelementptr inbounds %PropId, ptr %629, i64 0, i32 2
  %642 = load i64, ptr %memberidx2.i467, align 4
  %643 = load ptr, ptr %641, align 8
  %644 = getelementptr inbounds ptr, ptr %643, i64 %642
  %645 = load ptr, ptr %644, align 8
  %memberidx3.i468 = getelementptr inbounds %ClassMethod, ptr %645, i64 0, i32 4
  br label %get_class_prop_type.exit474

ifend.i473:                                       ; preds = %if.entry129
  %memberidx4.i470 = getelementptr inbounds %Class, ptr %638, i64 0, i32 4
  %646 = load ptr, ptr %memberidx4.i470, align 8
  %memberidx5.i471 = getelementptr inbounds %PropId, ptr %629, i64 0, i32 2
  %647 = load i64, ptr %memberidx5.i471, align 4
  %648 = load ptr, ptr %646, align 8
  %649 = getelementptr inbounds ptr, ptr %648, i64 %647
  %650 = load ptr, ptr %649, align 8
  %memberidx6.i472 = getelementptr inbounds %ClassField, ptr %650, i64 0, i32 4
  br label %get_class_prop_type.exit474

get_class_prop_type.exit474:                      ; preds = %if.entry.i469, %ifend.i473
  %common.ret.op.in.i464 = phi ptr [ %memberidx3.i468, %if.entry.i469 ], [ %memberidx6.i472, %ifend.i473 ]
  %common.ret.op.i465 = load ptr, ptr %common.ret.op.in.i464, align 8
  %651 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %651, ptr noundef nonnull align 8 dereferenceable(5) @153, i64 5, i1 false)
  %652 = tail call ptr @malloc(i32 24)
  store ptr %651, ptr %652, align 8
  %memberidx1.i.i475 = getelementptr inbounds %String, ptr %652, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i475, align 4
  %memberidx2.i.i476 = getelementptr inbounds %String, ptr %652, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i476, align 4
  %653 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %652, ptr null, ptr %common.ret.op.i465)
  br label %ifend86
}

define internal fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %4, i64 0, i32 5
  %5 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %for.body, %3, %ifend41, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %116, %ifend41 ], [ null, %3 ], [ null, %for.body ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %8 = tail call ptr @malloc(i32 24)
  %memberidx.i83 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 1
  store i64 0, ptr %memberidx.i83, align 4
  %memberidx1.i84 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 2
  store i64 8, ptr %memberidx1.i84, align 4
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %8, align 8
  store i64 0, ptr %memberidx.i83, align 4
  %10 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %10, align 4
  %11 = load i64, ptr %1, align 4
  switch i64 %11, label %ifend5 [
    i64 14, label %if.entry3
    i64 20, label %if.entry.i
  ]

if.entry3:                                        ; preds = %ifend
  %memberidx6 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  br label %ifend5.sink.split

ifend5.sink.split:                                ; preds = %if.entry3, %if.entry12
  %.sink = phi ptr [ %29, %if.entry12 ], [ %memberidx6, %if.entry3 ]
  %is_constant.0.ph = phi i1 [ false, %if.entry12 ], [ true, %if.entry3 ]
  %12 = load ptr, ptr %.sink, align 8
  br label %ifend5

ifend5:                                           ; preds = %ifend5.sink.split, %is_object.exit, %ifend, %String___eq__.exit
  %is_constant.0 = phi i1 [ false, %String___eq__.exit ], [ true, %ifend ], [ false, %is_object.exit ], [ %is_constant.0.ph, %ifend5.sink.split ]
  %element_type.0 = phi ptr [ %10, %String___eq__.exit ], [ %10, %ifend ], [ %10, %is_object.exit ], [ %12, %ifend5.sink.split ]
  %memberidx16 = getelementptr inbounds %ArrayExpressionNode, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx16, align 8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %13, i64 0, i32 1
  %14 = load i64, ptr %memberidx17, align 4
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %if.entry18, label %ifend20

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %16, %if.entry.i ], [ %1, %ifend ]
  %memberidx1.i119 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i119, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 20
  br i1 %18, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i
  %memberidx11 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx11, align 8
  %20 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %20, ptr noundef nonnull align 8 dereferenceable(5) @73, i64 5, i1 false)
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %21, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i, align 4
  %memberidx.i85 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i85, align 4
  %.not.i = icmp eq i64 %22, 5
  br i1 %.not.i, label %String___eq__.exit, label %ifend5

String___eq__.exit:                               ; preds = %is_object.exit
  %23 = icmp eq i64 %17, 11
  %24 = load ptr, ptr %19, align 8
  %25 = tail call i64 @memcmp(ptr %24, ptr nonnull %20, i64 5)
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %if.entry12, label %ifend5

if.entry12:                                       ; preds = %String___eq__.exit
  %memberidx15 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %28 = load ptr, ptr %memberidx15, align 8
  %29 = load ptr, ptr %28, align 8
  br label %ifend5.sink.split

if.entry18:                                       ; preds = %ifend5
  %30 = tail call ptr @malloc(i32 25)
  %31 = load ptr, ptr %13, align 8
  %32 = load i64, ptr %memberidx17, align 4
  %memberidx1.i.i88 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %30, i64 0, i32 1
  %memberidx2.i.i89 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %30, i64 0, i32 3
  store ptr %31, ptr %memberidx2.i.i89, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %30, i64 0, i32 2
  store i64 %32, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i88, align 4
  %33 = load ptr, ptr %31, align 8
  %34 = icmp slt i64 %32, 1
  store i1 %34, ptr %30, align 1
  br i1 %34, label %for.end, label %for.body

ifend20:                                          ; preds = %ifend5, %for.end
  %is_constant.1 = phi i1 [ %is_constant.2.lcssa, %for.end ], [ %is_constant.0, %ifend5 ]
  %element_type.1 = phi ptr [ %element_type.2.lcssa, %for.end ], [ %element_type.0, %ifend5 ]
  %35 = load i64, ptr %1, align 4
  %.not = icmp eq i64 %35, 14
  br i1 %.not, label %else40, label %if.entry39

for.body:                                         ; preds = %if.entry18, %Array_Expression____sl__.exit
  %36 = phi i64 [ %66, %Array_Expression____sl__.exit ], [ 1, %if.entry18 ]
  %37 = phi ptr [ %68, %Array_Expression____sl__.exit ], [ %33, %if.entry18 ]
  %element_type.2130 = phi ptr [ %.element_type.2130, %Array_Expression____sl__.exit ], [ %element_type.0, %if.entry18 ]
  %is_constant.2129 = phi i1 [ %50, %Array_Expression____sl__.exit ], [ %is_constant.0, %if.entry18 ]
  %i.0128 = phi i64 [ %65, %Array_Expression____sl__.exit ], [ 0, %if.entry18 ]
  %38 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %element_type.2130, ptr %37)
  %39 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i93 = getelementptr inbounds %Compiler, ptr %39, i64 0, i32 5
  %40 = load ptr, ptr %memberidx1.i93, align 8
  %memberidx2.i94 = getelementptr inbounds %Array_FloError_, ptr %40, i64 0, i32 1
  %41 = load i64, ptr %memberidx2.i94, align 4
  %42 = icmp sgt i64 %41, 0
  br i1 %42, label %common.ret, label %ifend25

for.end:                                          ; preds = %Array_Expression____sl__.exit, %if.entry18
  %is_constant.2.lcssa = phi i1 [ %is_constant.0, %if.entry18 ], [ %50, %Array_Expression____sl__.exit ]
  %element_type.2.lcssa = phi ptr [ %element_type.0, %if.entry18 ], [ %.element_type.2130, %Array_Expression____sl__.exit ]
  tail call void @free(ptr nonnull %30)
  br label %ifend20

ifend25:                                          ; preds = %for.body
  %43 = icmp eq i64 %i.0128, 0
  %44 = load i64, ptr %element_type.2130, align 4
  %45 = icmp eq i64 %44, 21
  %46 = and i1 %43, %45
  %memberidx30 = getelementptr inbounds %Expression, ptr %38, i64 0, i32 3
  %47 = load ptr, ptr %memberidx30, align 8
  %.element_type.2130 = select i1 %46, ptr %47, ptr %element_type.2130
  %memberidx31 = getelementptr inbounds %Expression, ptr %38, i64 0, i32 1
  %48 = load i1, ptr %memberidx31, align 1
  %49 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %.element_type.2130, ptr %47)
  br i1 %49, label %if.entry33, label %else34

if.entry33:                                       ; preds = %ifend25
  %50 = and i1 %is_constant.2129, %48
  %51 = load i64, ptr %memberidx.i83, align 4
  %52 = add i64 %51, 1
  %53 = load i64, ptr %memberidx1.i84, align 4
  %54 = icmp slt i64 %53, %52
  %.pre140 = load ptr, ptr %8, align 8
  br i1 %54, label %while.body.i.i, label %Array_Expression____sl__.exit

while.body.i.i:                                   ; preds = %if.entry33, %while.body.i.i
  %55 = phi ptr [ %59, %while.body.i.i ], [ %.pre140, %if.entry33 ]
  %56 = phi i64 [ %60, %while.body.i.i ], [ %53, %if.entry33 ]
  %57 = shl nuw i64 %56, 1
  store i64 %57, ptr %memberidx1.i84, align 4
  %58 = shl i64 %56, 4
  %59 = tail call ptr @realloc(ptr %55, i64 %58)
  store ptr %59, ptr %8, align 8
  %60 = load i64, ptr %memberidx1.i84, align 4
  %61 = icmp slt i64 %60, %52
  br i1 %61, label %while.body.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.body.i.i
  %.pre141 = load i64, ptr %memberidx.i83, align 4
  %.pre143 = add nsw i64 %.pre141, 1
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %if.entry33, %Array_Expression____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre143, %Array_Expression____sl__.exit.loopexit ], [ %52, %if.entry33 ]
  %62 = phi ptr [ %59, %Array_Expression____sl__.exit.loopexit ], [ %.pre140, %if.entry33 ]
  %63 = phi i64 [ %.pre141, %Array_Expression____sl__.exit.loopexit ], [ %51, %if.entry33 ]
  store i64 %.pre-phi, ptr %memberidx.i83, align 4
  %64 = getelementptr inbounds ptr, ptr %62, i64 %63
  store ptr %38, ptr %64, align 8
  %65 = add nuw nsw i64 %i.0128, 1
  %66 = add nuw nsw i64 %36, 1
  store i64 %66, ptr %memberidx1.i.i88, align 4
  %67 = getelementptr inbounds ptr, ptr %31, i64 %36
  %68 = load ptr, ptr %67, align 8
  %69 = icmp sge i64 %36, %32
  store i1 %69, ptr %30, align 1
  br i1 %69, label %for.end, label %for.body

else34:                                           ; preds = %ifend25
  %memberidx32 = getelementptr inbounds %Expression, ptr %38, i64 0, i32 3
  %70 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %.element_type.2130)
  %memberidx.i96 = getelementptr inbounds %String, ptr %70, i64 0, i32 1
  %71 = load i64, ptr %memberidx.i96, align 4
  %72 = trunc i64 %71 to i32
  %73 = add i32 %72, 1
  %74 = tail call ptr @malloc(i32 %73)
  %75 = load ptr, ptr %70, align 8
  %76 = load i64, ptr %memberidx.i96, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %74, ptr align 8 %75, i64 %76, i1 false)
  %77 = getelementptr inbounds i8, ptr %74, i64 %76
  store i8 0, ptr %77, align 1
  %78 = load ptr, ptr %memberidx32, align 8
  %79 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %78)
  %memberidx.i97 = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  %80 = load i64, ptr %memberidx.i97, align 4
  %81 = trunc i64 %80 to i32
  %82 = add i32 %81, 1
  %83 = tail call ptr @malloc(i32 %82)
  %84 = load ptr, ptr %79, align 8
  %85 = load i64, ptr %memberidx.i97, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %83, ptr align 8 %84, i64 %85, i1 false)
  %86 = getelementptr inbounds i8, ptr %83, i64 %85
  store i8 0, ptr %86, align 1
  %87 = alloca ptr, align 8
  %88 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %87, ptr nonnull @169, ptr %74, ptr %83)
  %89 = load ptr, ptr %87, align 8
  %90 = tail call ptr @malloc(i32 24)
  store ptr %89, ptr %90, align 8
  %memberidx1.i98 = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  store i64 %88, ptr %memberidx1.i98, align 4
  %memberidx2.i99 = getelementptr inbounds %String, ptr %90, i64 0, i32 2
  store i64 %88, ptr %memberidx2.i99, align 4
  tail call void @free(ptr %74)
  tail call void @free(ptr %83)
  %91 = load ptr, ptr %37, align 8
  %92 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i101 = getelementptr inbounds %Compiler, ptr %92, i64 0, i32 5
  %93 = load ptr, ptr %memberidx1.i101, align 8
  %94 = call ptr @malloc(i32 24)
  store i64 5, ptr %94, align 4
  %memberidx1.i.i102 = getelementptr inbounds %FloError, ptr %94, i64 0, i32 2
  store ptr %91, ptr %memberidx1.i.i102, align 8
  %memberidx2.i.i103 = getelementptr inbounds %FloError, ptr %94, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i103, align 8
  %memberidx.i.i104 = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 1
  %95 = load i64, ptr %memberidx.i.i104, align 4
  %96 = add i64 %95, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 2
  %97 = load i64, ptr %memberidx.i.i.i, align 4
  %98 = icmp slt i64 %97, %96
  %.pre137 = load ptr, ptr %93, align 8
  br i1 %98, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %else34, %while.body.i.i.i
  %99 = phi ptr [ %103, %while.body.i.i.i ], [ %.pre137, %else34 ]
  %100 = phi i64 [ %104, %while.body.i.i.i ], [ %97, %else34 ]
  %101 = shl nuw i64 %100, 1
  store i64 %101, ptr %memberidx.i.i.i, align 4
  %102 = shl i64 %100, 4
  %103 = call ptr @realloc(ptr %99, i64 %102)
  store ptr %103, ptr %93, align 8
  %104 = load i64, ptr %memberidx.i.i.i, align 4
  %105 = icmp slt i64 %104, %96
  br i1 %105, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre138 = load i64, ptr %memberidx.i.i104, align 4
  %.pre144 = add nsw i64 %.pre138, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %else34, %TypeChecker_error.exit.loopexit
  %.pre-phi145 = phi i64 [ %.pre144, %TypeChecker_error.exit.loopexit ], [ %96, %else34 ]
  %106 = phi ptr [ %103, %TypeChecker_error.exit.loopexit ], [ %.pre137, %else34 ]
  %107 = phi i64 [ %.pre138, %TypeChecker_error.exit.loopexit ], [ %95, %else34 ]
  store i64 %.pre-phi145, ptr %memberidx.i.i104, align 4
  %108 = getelementptr inbounds ptr, ptr %106, i64 %107
  store ptr %94, ptr %108, align 8
  br label %common.ret

if.entry39:                                       ; preds = %ifend20
  %109 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %109, ptr noundef nonnull align 8 dereferenceable(5) @73, i64 5, i1 false)
  %110 = tail call ptr @malloc(i32 24)
  store ptr %109, ptr %110, align 8
  %memberidx1.i.i105 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i105, align 4
  %memberidx2.i.i106 = getelementptr inbounds %String, ptr %110, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i106, align 4
  %111 = tail call ptr @malloc(i32 24)
  %memberidx.i107 = getelementptr inbounds %Array_Type_, ptr %111, i64 0, i32 1
  store i64 0, ptr %memberidx.i107, align 4
  %memberidx1.i108 = getelementptr inbounds %Array_Type_, ptr %111, i64 0, i32 2
  store i64 8, ptr %memberidx1.i108, align 4
  %112 = tail call ptr @malloc(i32 64)
  store ptr %112, ptr %111, align 8
  store ptr %element_type.1, ptr %112, align 8
  store i64 1, ptr %memberidx.i107, align 4
  %113 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr nonnull %110, ptr nonnull %111)
  %.not82 = icmp eq ptr %113, null
  %spec.select = select i1 %.not82, i1 %is_constant.1, i1 false
  %spec.select118 = select i1 %.not82, ptr %1, ptr %113
  br label %ifend41

else40:                                           ; preds = %ifend20
  %114 = tail call ptr @malloc(i32 24)
  %115 = load i64, ptr %memberidx.i83, align 4
  store i64 14, ptr %114, align 4
  %memberidx.i109 = getelementptr inbounds %ArrayType, ptr %114, i64 0, i32 1
  store ptr %element_type.1, ptr %memberidx.i109, align 8
  %memberidx1.i110 = getelementptr inbounds %ArrayType, ptr %114, i64 0, i32 2
  store i64 %115, ptr %memberidx1.i110, align 4
  br label %ifend41

ifend41:                                          ; preds = %if.entry39, %else40
  %is_constant.3 = phi i1 [ %is_constant.1, %else40 ], [ %spec.select, %if.entry39 ]
  %array_type.0 = phi ptr [ %114, %else40 ], [ %spec.select118, %if.entry39 ]
  %116 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %116, align 4
  %memberidx.i.i111 = getelementptr inbounds %Expression, ptr %116, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i111, align 4
  %memberidx1.i.i112 = getelementptr inbounds %Expression, ptr %116, i64 0, i32 1
  %memberidx.i113 = getelementptr inbounds %ArrayExpression, ptr %116, i64 0, i32 4
  store ptr %8, ptr %memberidx.i113, align 8
  store i1 %is_constant.3, ptr %memberidx1.i.i112, align 1
  %memberidx49 = getelementptr inbounds %Expression, ptr %116, i64 0, i32 3
  store ptr %array_type.0, ptr %memberidx49, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_check_enum_body(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %6 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %6, align 4
  %memberidx.i = getelementptr inbounds %IntType, ptr %6, i64 0, i32 1
  store i1 true, ptr %memberidx.i, align 1
  br label %ifend

else:                                             ; preds = %3
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %4)
  %8 = load i64, ptr %7, align 4
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %ifend, label %if.entry2

ifend:                                            ; preds = %TypeChecker_error.exit99, %else, %if.entry
  %enum_variant.0 = phi ptr [ %6, %if.entry ], [ %7, %TypeChecker_error.exit99 ], [ %7, %else ]
  %memberidx7 = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 1
  %11 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_EnumNodeField_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx8, align 4
  %13 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %13, align 4
  %memberidx1.i82 = getelementptr inbounds %Range, ptr %13, i64 0, i32 1
  store i64 %12, ptr %memberidx1.i82, align 4
  %14 = call ptr @malloc(i32 17)
  %memberidx.i.i84 = getelementptr inbounds %RangeIterator, ptr %14, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i84, align 4
  %memberidx1.i.i85 = getelementptr inbounds %RangeIterator, ptr %14, i64 0, i32 2
  store i64 %12, ptr %memberidx1.i.i85, align 4
  %15 = icmp slt i64 %12, 1
  br i1 %15, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx42 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 3
  %memberidx44 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  br label %for.body

if.entry2:                                        ; preds = %else
  %16 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %7)
  %memberidx.i86 = getelementptr inbounds %String, ptr %16, i64 0, i32 1
  %17 = load i64, ptr %memberidx.i86, align 4
  %18 = trunc i64 %17 to i32
  %19 = add i32 %18, 1
  %20 = tail call ptr @malloc(i32 %19)
  %21 = load ptr, ptr %16, align 8
  %22 = load i64, ptr %memberidx.i86, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %21, i64 %22, i1 false)
  %23 = getelementptr inbounds i8, ptr %20, i64 %22
  store i8 0, ptr %23, align 1
  %24 = alloca ptr, align 8
  %25 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %24, ptr nonnull @111, ptr %20)
  %26 = load ptr, ptr %24, align 8
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i87 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i87, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 %25, ptr %memberidx2.i, align 4
  tail call void @free(ptr %20)
  %28 = load ptr, ptr %memberidx, align 8
  %29 = load ptr, ptr %28, align 8
  %memberidx.i91 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %30 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i92 = getelementptr inbounds %Compiler, ptr %30, i64 0, i32 5
  %31 = load ptr, ptr %memberidx1.i92, align 8
  %32 = call ptr @malloc(i32 24)
  store i64 5, ptr %32, align 4
  %memberidx1.i.i93 = getelementptr inbounds %FloError, ptr %32, i64 0, i32 2
  store ptr %29, ptr %memberidx1.i.i93, align 8
  %memberidx2.i.i94 = getelementptr inbounds %FloError, ptr %32, i64 0, i32 1
  store ptr %27, ptr %memberidx2.i.i94, align 8
  %memberidx.i.i95 = getelementptr inbounds %Array_FloError_, ptr %31, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i.i95, align 4
  %34 = add i64 %33, 1
  %memberidx.i.i.i96 = getelementptr inbounds %Array_FloError_, ptr %31, i64 0, i32 2
  %35 = load i64, ptr %memberidx.i.i.i96, align 4
  %36 = icmp slt i64 %35, %34
  %.pre = load ptr, ptr %31, align 8
  br i1 %36, label %while.body.i.i.i98, label %TypeChecker_error.exit99

while.body.i.i.i98:                               ; preds = %if.entry2, %while.body.i.i.i98
  %37 = phi ptr [ %41, %while.body.i.i.i98 ], [ %.pre, %if.entry2 ]
  %38 = phi i64 [ %42, %while.body.i.i.i98 ], [ %35, %if.entry2 ]
  %39 = shl nuw i64 %38, 1
  store i64 %39, ptr %memberidx.i.i.i96, align 4
  %40 = shl i64 %38, 4
  %41 = call ptr @realloc(ptr %37, i64 %40)
  store ptr %41, ptr %31, align 8
  %42 = load i64, ptr %memberidx.i.i.i96, align 4
  %43 = icmp slt i64 %42, %34
  br i1 %43, label %while.body.i.i.i98, label %TypeChecker_error.exit99.loopexit

TypeChecker_error.exit99.loopexit:                ; preds = %while.body.i.i.i98
  %.pre149 = load i64, ptr %memberidx.i.i95, align 4
  %.pre165 = add nsw i64 %.pre149, 1
  br label %TypeChecker_error.exit99

TypeChecker_error.exit99:                         ; preds = %if.entry2, %TypeChecker_error.exit99.loopexit
  %.pre-phi166 = phi i64 [ %.pre165, %TypeChecker_error.exit99.loopexit ], [ %34, %if.entry2 ]
  %44 = phi ptr [ %41, %TypeChecker_error.exit99.loopexit ], [ %.pre, %if.entry2 ]
  %45 = phi i64 [ %.pre149, %TypeChecker_error.exit99.loopexit ], [ %33, %if.entry2 ]
  store i64 %.pre-phi166, ptr %memberidx.i.i95, align 4
  %46 = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %32, ptr %46, align 8
  br label %ifend

for.body:                                         ; preds = %for.body.lr.ph, %Array_EnumField____sl__.exit
  %47 = phi i64 [ 1, %for.body.lr.ph ], [ %80, %Array_EnumField____sl__.exit ]
  %next_enum_value.0136 = phi i64 [ 0, %for.body.lr.ph ], [ %next_enum_value.1, %Array_EnumField____sl__.exit ]
  %48 = phi i64 [ 0, %for.body.lr.ph ], [ %47, %Array_EnumField____sl__.exit ]
  %49 = load ptr, ptr %memberidx7, align 8
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %48
  %52 = load ptr, ptr %51, align 8
  %53 = load ptr, ptr %52, align 8
  %memberidx12 = getelementptr inbounds %IdentifierToken, ptr %53, i64 0, i32 2
  %54 = load ptr, ptr %memberidx12, align 8
  %55 = tail call ptr @malloc(i32 24)
  %memberidx.i102 = getelementptr inbounds %EnumField, ptr %55, i64 0, i32 1
  store ptr %54, ptr %memberidx.i102, align 8
  %56 = tail call ptr @malloc(i32 24)
  %57 = load ptr, ptr %1, align 8
  store i64 1, ptr %56, align 4
  %memberidx1.i104 = getelementptr inbounds %PropId, ptr %56, i64 0, i32 1
  store ptr %57, ptr %memberidx1.i104, align 8
  %memberidx2.i105 = getelementptr inbounds %PropId, ptr %56, i64 0, i32 2
  store i64 %48, ptr %memberidx2.i105, align 4
  store ptr %56, ptr %55, align 8
  %memberidx15 = getelementptr inbounds %EnumNodeField, ptr %52, i64 0, i32 1
  %58 = load ptr, ptr %memberidx15, align 8
  %.not = icmp eq ptr %58, null
  %memberidx39 = getelementptr inbounds %EnumField, ptr %55, i64 0, i32 2
  br i1 %.not, label %else17, label %if.entry16

common.ret:                                       ; preds = %TypeChecker_error.exit, %TypeChecker_error.exit123, %for.end
  ret void

for.end:                                          ; preds = %Array_EnumField____sl__.exit, %ifend
  tail call void @free(ptr nonnull %14)
  br label %common.ret

if.entry16:                                       ; preds = %for.body
  %59 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %enum_variant.0, ptr nonnull %58)
  store ptr %59, ptr %memberidx39, align 8
  %memberidx22 = getelementptr inbounds %Expression, ptr %59, i64 0, i32 1
  %60 = load i1, ptr %memberidx22, align 1
  br i1 %60, label %ifend25, label %if.entry23

else17:                                           ; preds = %for.body
  %61 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %61, align 4
  %memberidx.i.i106 = getelementptr inbounds %Expression, ptr %61, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i106, align 4
  %memberidx1.i.i107 = getelementptr inbounds %Expression, ptr %61, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i107, align 1
  %memberidx.i108 = getelementptr inbounds %Expression, ptr %61, i64 0, i32 3
  %62 = call ptr @malloc(i32 9)
  store i64 6, ptr %62, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %62, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  %memberidx1.i109 = getelementptr inbounds %IntExpression, ptr %61, i64 0, i32 4
  store i64 %next_enum_value.0136, ptr %memberidx1.i109, align 4
  store i1 true, ptr %memberidx1.i.i107, align 1
  store ptr %61, ptr %memberidx39, align 8
  store ptr %enum_variant.0, ptr %memberidx.i108, align 8
  br label %ifend18

ifend18:                                          ; preds = %else17, %ifend32
  %next_enum_value.1.in = phi i64 [ %147, %ifend32 ], [ %next_enum_value.0136, %else17 ]
  %next_enum_value.1 = add nsw i64 %next_enum_value.1.in, 1
  %63 = load ptr, ptr %memberidx42, align 8
  %64 = load ptr, ptr %55, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %63, ptr %54, ptr %64)
  %65 = load ptr, ptr %memberidx44, align 8
  %memberidx.i111 = getelementptr inbounds %Array_EnumField_, ptr %65, i64 0, i32 1
  %66 = load i64, ptr %memberidx.i111, align 4
  %67 = add i64 %66, 1
  %memberidx.i.i112 = getelementptr inbounds %Array_EnumField_, ptr %65, i64 0, i32 2
  %68 = load i64, ptr %memberidx.i.i112, align 4
  %69 = icmp slt i64 %68, %67
  %.pre157 = load ptr, ptr %65, align 8
  br i1 %69, label %while.body.i.i, label %Array_EnumField____sl__.exit

while.body.i.i:                                   ; preds = %ifend18, %while.body.i.i
  %70 = phi ptr [ %74, %while.body.i.i ], [ %.pre157, %ifend18 ]
  %71 = phi i64 [ %75, %while.body.i.i ], [ %68, %ifend18 ]
  %72 = shl nuw i64 %71, 1
  store i64 %72, ptr %memberidx.i.i112, align 4
  %73 = shl i64 %71, 4
  %74 = call ptr @realloc(ptr %70, i64 %73)
  store ptr %74, ptr %65, align 8
  %75 = load i64, ptr %memberidx.i.i112, align 4
  %76 = icmp slt i64 %75, %67
  br i1 %76, label %while.body.i.i, label %Array_EnumField____sl__.exit.loopexit

Array_EnumField____sl__.exit.loopexit:            ; preds = %while.body.i.i
  %.pre158 = load i64, ptr %memberidx.i111, align 4
  %.pre160 = add nsw i64 %.pre158, 1
  br label %Array_EnumField____sl__.exit

Array_EnumField____sl__.exit:                     ; preds = %ifend18, %Array_EnumField____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre160, %Array_EnumField____sl__.exit.loopexit ], [ %67, %ifend18 ]
  %77 = phi ptr [ %74, %Array_EnumField____sl__.exit.loopexit ], [ %.pre157, %ifend18 ]
  %78 = phi i64 [ %.pre158, %Array_EnumField____sl__.exit.loopexit ], [ %66, %ifend18 ]
  store i64 %.pre-phi, ptr %memberidx.i111, align 4
  %79 = getelementptr inbounds ptr, ptr %77, i64 %78
  store ptr %55, ptr %79, align 8
  %.not167 = icmp slt i64 %47, %12
  %80 = add nuw nsw i64 %47, 1
  br i1 %.not167, label %for.body, label %for.end

if.entry23:                                       ; preds = %if.entry16
  store i64 %47, ptr %memberidx.i.i84, align 4
  store i1 false, ptr %14, align 1
  %81 = call ptr @malloc(i32 37)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %81, ptr noundef nonnull align 8 dereferenceable(37) @112, i64 37, i1 false)
  %82 = call ptr @malloc(i32 24)
  store ptr %81, ptr %82, align 8
  %memberidx1.i.i113 = getelementptr inbounds %String, ptr %82, i64 0, i32 1
  store i64 37, ptr %memberidx1.i.i113, align 4
  %memberidx2.i.i114 = getelementptr inbounds %String, ptr %82, i64 0, i32 2
  store i64 37, ptr %memberidx2.i.i114, align 4
  %83 = load ptr, ptr %memberidx15, align 8
  %84 = load ptr, ptr %83, align 8
  %memberidx.i115 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %85 = load ptr, ptr %memberidx.i115, align 8
  %memberidx1.i116 = getelementptr inbounds %Compiler, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx1.i116, align 8
  %87 = call ptr @malloc(i32 24)
  store i64 5, ptr %87, align 4
  %memberidx1.i.i117 = getelementptr inbounds %FloError, ptr %87, i64 0, i32 2
  store ptr %84, ptr %memberidx1.i.i117, align 8
  %memberidx2.i.i118 = getelementptr inbounds %FloError, ptr %87, i64 0, i32 1
  store ptr %82, ptr %memberidx2.i.i118, align 8
  %memberidx.i.i119 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 1
  %88 = load i64, ptr %memberidx.i.i119, align 4
  %89 = add i64 %88, 1
  %memberidx.i.i.i120 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 2
  %90 = load i64, ptr %memberidx.i.i.i120, align 4
  %91 = icmp slt i64 %90, %89
  %.pre151 = load ptr, ptr %86, align 8
  br i1 %91, label %while.body.i.i.i122, label %TypeChecker_error.exit123

while.body.i.i.i122:                              ; preds = %if.entry23, %while.body.i.i.i122
  %92 = phi ptr [ %96, %while.body.i.i.i122 ], [ %.pre151, %if.entry23 ]
  %93 = phi i64 [ %97, %while.body.i.i.i122 ], [ %90, %if.entry23 ]
  %94 = shl nuw i64 %93, 1
  store i64 %94, ptr %memberidx.i.i.i120, align 4
  %95 = shl i64 %93, 4
  %96 = call ptr @realloc(ptr %92, i64 %95)
  store ptr %96, ptr %86, align 8
  %97 = load i64, ptr %memberidx.i.i.i120, align 4
  %98 = icmp slt i64 %97, %89
  br i1 %98, label %while.body.i.i.i122, label %TypeChecker_error.exit123.loopexit

TypeChecker_error.exit123.loopexit:               ; preds = %while.body.i.i.i122
  %.pre152 = load i64, ptr %memberidx.i.i119, align 4
  %.pre163 = add nsw i64 %.pre152, 1
  br label %TypeChecker_error.exit123

TypeChecker_error.exit123:                        ; preds = %if.entry23, %TypeChecker_error.exit123.loopexit
  %.pre-phi164 = phi i64 [ %.pre163, %TypeChecker_error.exit123.loopexit ], [ %89, %if.entry23 ]
  %99 = phi ptr [ %96, %TypeChecker_error.exit123.loopexit ], [ %.pre151, %if.entry23 ]
  %100 = phi i64 [ %.pre152, %TypeChecker_error.exit123.loopexit ], [ %88, %if.entry23 ]
  store i64 %.pre-phi164, ptr %memberidx.i.i119, align 4
  %101 = getelementptr inbounds ptr, ptr %99, i64 %100
  store ptr %87, ptr %101, align 8
  br label %common.ret

ifend25:                                          ; preds = %if.entry16
  %memberidx29 = getelementptr inbounds %Expression, ptr %59, i64 0, i32 3
  %102 = load ptr, ptr %memberidx29, align 8
  %103 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nonnull %enum_variant.0, ptr %102)
  br i1 %103, label %ifend32, label %if.entry30

if.entry30:                                       ; preds = %ifend25
  store i64 %47, ptr %memberidx.i.i84, align 4
  store i1 false, ptr %14, align 1
  %104 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %enum_variant.0)
  %memberidx.i103 = getelementptr inbounds %String, ptr %104, i64 0, i32 1
  %105 = load i64, ptr %memberidx.i103, align 4
  %106 = trunc i64 %105 to i32
  %107 = add i32 %106, 1
  %108 = call ptr @malloc(i32 %107)
  %109 = load ptr, ptr %104, align 8
  %110 = load i64, ptr %memberidx.i103, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %108, ptr align 8 %109, i64 %110, i1 false)
  %111 = getelementptr inbounds i8, ptr %108, i64 %110
  store i8 0, ptr %111, align 1
  %112 = load ptr, ptr %memberidx39, align 8
  %memberidx34 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 3
  %113 = load ptr, ptr %memberidx34, align 8
  %114 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %113)
  %memberidx.i90 = getelementptr inbounds %String, ptr %114, i64 0, i32 1
  %115 = load i64, ptr %memberidx.i90, align 4
  %116 = trunc i64 %115 to i32
  %117 = add i32 %116, 1
  %118 = call ptr @malloc(i32 %117)
  %119 = load ptr, ptr %114, align 8
  %120 = load i64, ptr %memberidx.i90, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %118, ptr align 8 %119, i64 %120, i1 false)
  %121 = getelementptr inbounds i8, ptr %118, i64 %120
  store i8 0, ptr %121, align 1
  %122 = alloca ptr, align 8
  %123 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %122, ptr nonnull @113, ptr %108, ptr %118)
  %124 = load ptr, ptr %122, align 8
  %125 = tail call ptr @malloc(i32 24)
  store ptr %124, ptr %125, align 8
  %memberidx1.i88 = getelementptr inbounds %String, ptr %125, i64 0, i32 1
  store i64 %123, ptr %memberidx1.i88, align 4
  %memberidx2.i89 = getelementptr inbounds %String, ptr %125, i64 0, i32 2
  store i64 %123, ptr %memberidx2.i89, align 4
  tail call void @free(ptr %108)
  tail call void @free(ptr %118)
  %126 = load ptr, ptr %memberidx15, align 8
  %127 = load ptr, ptr %126, align 8
  %memberidx.i81 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %128 = load ptr, ptr %memberidx.i81, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %128, i64 0, i32 5
  %129 = load ptr, ptr %memberidx1.i, align 8
  %130 = call ptr @malloc(i32 24)
  store i64 5, ptr %130, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %130, i64 0, i32 2
  store ptr %127, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %130, i64 0, i32 1
  store ptr %125, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 1
  %131 = load i64, ptr %memberidx.i.i, align 4
  %132 = add i64 %131, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 2
  %133 = load i64, ptr %memberidx.i.i.i, align 4
  %134 = icmp slt i64 %133, %132
  %.pre154 = load ptr, ptr %129, align 8
  br i1 %134, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry30, %while.body.i.i.i
  %135 = phi ptr [ %139, %while.body.i.i.i ], [ %.pre154, %if.entry30 ]
  %136 = phi i64 [ %140, %while.body.i.i.i ], [ %133, %if.entry30 ]
  %137 = shl nuw i64 %136, 1
  store i64 %137, ptr %memberidx.i.i.i, align 4
  %138 = shl i64 %136, 4
  %139 = call ptr @realloc(ptr %135, i64 %138)
  store ptr %139, ptr %129, align 8
  %140 = load i64, ptr %memberidx.i.i.i, align 4
  %141 = icmp slt i64 %140, %132
  br i1 %141, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre155 = load i64, ptr %memberidx.i.i, align 4
  %.pre161 = add nsw i64 %.pre155, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry30, %TypeChecker_error.exit.loopexit
  %.pre-phi162 = phi i64 [ %.pre161, %TypeChecker_error.exit.loopexit ], [ %132, %if.entry30 ]
  %142 = phi ptr [ %139, %TypeChecker_error.exit.loopexit ], [ %.pre154, %if.entry30 ]
  %143 = phi i64 [ %.pre155, %TypeChecker_error.exit.loopexit ], [ %131, %if.entry30 ]
  store i64 %.pre-phi162, ptr %memberidx.i.i, align 4
  %144 = getelementptr inbounds ptr, ptr %142, i64 %143
  store ptr %130, ptr %144, align 8
  br label %common.ret

ifend32:                                          ; preds = %ifend25
  %145 = load ptr, ptr %0, align 8
  %146 = load ptr, ptr %memberidx39, align 8
  %147 = call fastcc i64 @evaluate_const_int_expression(ptr %145, ptr %146)
  br label %ifend18
}

define internal fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca %Type, align 8
  %memberidx = getelementptr inbounds %ExpressionNode, ptr %2, i64 0, i32 2
  %5 = load i64, ptr %memberidx, align 4
  switch i64 %5, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 3, label %if.entry6
    i64 2, label %if.entry10
    i64 6, label %if.entry14
    i64 7, label %if.entry18
    i64 8, label %if.entry22
    i64 9, label %if.entry26
    i64 10, label %if.entry30
    i64 16, label %if.entry34
    i64 11, label %if.entry38
    i64 12, label %if.entry42
    i64 13, label %if.entry46
    i64 14, label %if.entry50
    i64 15, label %if.entry54
    i64 17, label %if.entry58
    i64 18, label %if.entry62
  ]

common.ret:                                       ; preds = %3, %if.entry7.i, %ifend.i135, %if.entry42.i, %ifend35.i, %if.entry62, %if.entry58, %if.entry54, %if.entry50, %if.entry46, %if.entry42, %if.entry38, %if.entry34, %if.entry30, %if.entry26, %if.entry22, %TypeChecker_check_tuple_expression.exit, %if.entry14, %TypeChecker_check_string_expression.exit, %if.entry6
  %common.ret.op = phi ptr [ %60, %if.entry6 ], [ %104, %TypeChecker_check_string_expression.exit ], [ %108, %if.entry14 ], [ %common.ret.op.i, %TypeChecker_check_tuple_expression.exit ], [ %172, %if.entry22 ], [ %173, %if.entry26 ], [ %174, %if.entry30 ], [ %175, %if.entry34 ], [ %176, %if.entry38 ], [ %177, %if.entry42 ], [ %178, %if.entry46 ], [ %179, %if.entry50 ], [ %180, %if.entry54 ], [ %181, %if.entry58 ], [ %182, %if.entry62 ], [ %8, %ifend35.i ], [ %8, %if.entry42.i ], [ %43, %ifend.i135 ], [ %43, %if.entry7.i ], [ null, %3 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %IntExpressionNode, ptr %2, i64 0, i32 3
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %IntToken, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx1.i, align 4
  %8 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %8, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 3
  %9 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %9, align 4
  %memberidx.i5.i.i = getelementptr inbounds %IntType, ptr %9, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i.i, align 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %IntExpression, ptr %8, i64 0, i32 4
  store i64 %7, ptr %memberidx1.i.i, align 4
  store i1 true, ptr %memberidx1.i.i.i, align 1
  %10 = load i64, ptr %1, align 4
  %11 = add i64 %10, -1
  %12 = icmp ult i64 %11, 7
  br i1 %12, label %ifend.i, label %ifend35.i

ifend.i:                                          ; preds = %if.entry
  store i64 %10, ptr %9, align 4
  %memberidx7.i = getelementptr inbounds %IntType, ptr %1, i64 0, i32 1
  %13 = load i1, ptr %memberidx7.i, align 1
  store i1 %13, ptr %memberidx.i5.i.i, align 1
  %14 = add i64 %7, -8
  %15 = icmp ult i64 %14, -16
  %16 = icmp eq i64 %10, 1
  %17 = and i1 %15, %16
  %18 = select i1 %17, i64 2, i64 %10
  %19 = add i64 %7, -128
  %20 = icmp ult i64 %19, -256
  %21 = icmp eq i64 %18, 2
  %22 = and i1 %20, %21
  %23 = select i1 %22, i64 3, i64 %18
  %.demorgan = and i1 %15, %16
  %.demorgan223 = and i1 %20, %21
  %24 = or i1 %.demorgan, %.demorgan223
  %25 = add i64 %7, -32768
  %26 = icmp ult i64 %25, -65536
  %27 = icmp eq i64 %23, 3
  %28 = and i1 %26, %27
  %spec.select221 = select i1 %28, i64 4, i64 %23
  %.demorgan224 = and i1 %26, %27
  %29 = or i1 %24, %.demorgan224
  %30 = add i64 %7, -2147483648
  %31 = icmp ult i64 %30, -4294967296
  %32 = icmp eq i64 %spec.select221, 4
  %33 = and i1 %31, %32
  %spec.select222 = select i1 %33, i64 5, i64 %spec.select221
  %.demorgan225 = and i1 %31, %32
  %34 = or i1 %29, %.demorgan225
  br i1 %34, label %35, label %ifend35.i

35:                                               ; preds = %ifend.i
  store i64 %spec.select222, ptr %9, align 4
  br label %ifend35.i

ifend35.i:                                        ; preds = %35, %ifend.i, %if.entry
  %36 = phi i64 [ 6, %if.entry ], [ %spec.select222, %ifend.i ], [ %spec.select222, %35 ]
  %37 = icmp eq i64 %7, -9223372036854775808
  %38 = add nsw i64 %36, -5
  %39 = icmp ult i64 %38, 2
  %40 = and i1 %37, %39
  br i1 %40, label %if.entry42.i, label %common.ret

if.entry42.i:                                     ; preds = %ifend35.i
  store i64 7, ptr %9, align 4
  br label %common.ret

if.entry2:                                        ; preds = %3
  %memberidx.i126 = getelementptr inbounds %FloatExpressionNode, ptr %2, i64 0, i32 3
  %41 = load ptr, ptr %memberidx.i126, align 8
  %memberidx1.i127 = getelementptr inbounds %FloatToken, ptr %41, i64 0, i32 2
  %42 = load double, ptr %memberidx1.i127, align 8
  %43 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %43, align 4
  %memberidx.i.i.i128 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i.i128, align 4
  %memberidx1.i.i.i129 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 1
  %memberidx.i.i130 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 3
  %44 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %44, align 4
  store ptr %44, ptr %memberidx.i.i130, align 8
  %memberidx1.i.i131 = getelementptr inbounds %FloatExpression, ptr %43, i64 0, i32 4
  store double %42, ptr %memberidx1.i.i131, align 8
  store i1 true, ptr %memberidx1.i.i.i129, align 1
  %45 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %45, ptr noundef nonnull align 8 dereferenceable(6) @220, i64 6, i1 false)
  %46 = tail call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i.i19.i = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i19.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i.i, align 4
  %47 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %47, ptr noundef nonnull align 8 dereferenceable(6) %45, i64 6, i1 false)
  %48 = getelementptr inbounds i8, ptr %47, i64 6
  store i8 0, ptr %48, align 1
  %49 = tail call double @atof(ptr %47)
  tail call void @free(ptr %47)
  %50 = load i64, ptr %1, align 4
  %51 = and i64 %50, -2
  %52 = icmp eq i64 %51, 8
  br i1 %52, label %if.entry.i134, label %if.entry2.ifend.i135_crit_edge

if.entry2.ifend.i135_crit_edge:                   ; preds = %if.entry2
  %.pre209 = load i64, ptr %44, align 4
  br label %ifend.i135

if.entry.i134:                                    ; preds = %if.entry2
  store i64 %50, ptr %44, align 4
  br label %ifend.i135

ifend.i135:                                       ; preds = %if.entry2.ifend.i135_crit_edge, %if.entry.i134
  %53 = phi i64 [ %.pre209, %if.entry2.ifend.i135_crit_edge ], [ %50, %if.entry.i134 ]
  %54 = fneg double %49
  %55 = fcmp olt double %42, %54
  %56 = fcmp ogt double %42, %49
  %57 = or i1 %55, %56
  %58 = icmp eq i64 %53, 8
  %59 = and i1 %57, %58
  br i1 %59, label %if.entry7.i, label %common.ret

if.entry7.i:                                      ; preds = %ifend.i135
  store i64 9, ptr %44, align 4
  br label %common.ret

if.entry6:                                        ; preds = %3
  %60 = tail call ptr @malloc(i32 33)
  %memberidx.i136 = getelementptr inbounds %CharExpressionNode, ptr %2, i64 0, i32 3
  %61 = load ptr, ptr %memberidx.i136, align 8
  %memberidx1.i137 = getelementptr inbounds %CharToken, ptr %61, i64 0, i32 2
  %62 = load i8, ptr %memberidx1.i137, align 1
  %63 = zext i8 %62 to i64
  store i64 8, ptr %60, align 4
  %memberidx.i.i.i138 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i138, align 4
  %memberidx1.i.i.i139 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 1
  %memberidx.i.i140 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 3
  %64 = tail call ptr @malloc(i32 9)
  %memberidx.i5.i.i141 = getelementptr inbounds %IntType, ptr %64, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i.i141, align 1
  store ptr %64, ptr %memberidx.i.i140, align 8
  %memberidx1.i.i142 = getelementptr inbounds %IntExpression, ptr %60, i64 0, i32 4
  store i64 %63, ptr %memberidx1.i.i142, align 4
  store i1 true, ptr %memberidx1.i.i.i139, align 1
  store i64 2, ptr %64, align 4
  br label %common.ret

if.entry10:                                       ; preds = %3
  %65 = tail call ptr @malloc(i32 24)
  %memberidx.i.i152 = getelementptr inbounds %Array_Expression_, ptr %65, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i152, align 4
  %memberidx1.i.i153 = getelementptr inbounds %Array_Expression_, ptr %65, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i153, align 4
  %66 = tail call ptr @malloc(i32 64)
  store ptr %66, ptr %65, align 8
  store i64 0, ptr %memberidx.i.i152, align 4
  %memberidx2.i155 = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 4
  %67 = load ptr, ptr %memberidx2.i155, align 8
  %68 = tail call ptr @malloc(i32 25)
  %69 = load ptr, ptr %67, align 8
  %memberidx1.i18.i = getelementptr inbounds %Array_ExpressionNode_, ptr %67, i64 0, i32 1
  %70 = load i64, ptr %memberidx1.i18.i, align 4
  store i1 false, ptr %68, align 1
  %memberidx1.i.i.i156 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i156, align 4
  %memberidx2.i.i.i157 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 3
  store ptr %69, ptr %memberidx2.i.i.i157, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 2
  store i64 %70, ptr %memberidx3.i.i.i, align 4
  %71 = icmp slt i64 %70, 1
  br i1 %71, label %for.end.i167, label %for.body.i162

for.body.i162:                                    ; preds = %if.entry10, %Array_Expression____sl__.exit.i166
  %.in = phi ptr [ %91, %Array_Expression____sl__.exit.i166 ], [ %69, %if.entry10 ]
  %72 = phi i64 [ %90, %Array_Expression____sl__.exit.i166 ], [ 1, %if.entry10 ]
  %73 = load ptr, ptr %.in, align 8
  %74 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %74, align 4
  %75 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %74, ptr %73)
  %76 = load i64, ptr %memberidx.i.i152, align 4
  %77 = add i64 %76, 1
  %78 = load i64, ptr %memberidx1.i.i153, align 4
  %79 = icmp slt i64 %78, %77
  %.pre206 = load ptr, ptr %65, align 8
  br i1 %79, label %while.body.i.i.i165, label %Array_Expression____sl__.exit.i166

while.body.i.i.i165:                              ; preds = %for.body.i162, %while.body.i.i.i165
  %80 = phi ptr [ %84, %while.body.i.i.i165 ], [ %.pre206, %for.body.i162 ]
  %81 = phi i64 [ %85, %while.body.i.i.i165 ], [ %78, %for.body.i162 ]
  %82 = shl nuw i64 %81, 1
  store i64 %82, ptr %memberidx1.i.i153, align 4
  %83 = shl i64 %81, 4
  %84 = tail call ptr @realloc(ptr %80, i64 %83)
  store ptr %84, ptr %65, align 8
  %85 = load i64, ptr %memberidx1.i.i153, align 4
  %86 = icmp slt i64 %85, %77
  br i1 %86, label %while.body.i.i.i165, label %Array_Expression____sl__.exit.i166.loopexit

Array_Expression____sl__.exit.i166.loopexit:      ; preds = %while.body.i.i.i165
  %.pre207 = load i64, ptr %memberidx.i.i152, align 4
  %.pre210 = add nsw i64 %.pre207, 1
  br label %Array_Expression____sl__.exit.i166

Array_Expression____sl__.exit.i166:               ; preds = %for.body.i162, %Array_Expression____sl__.exit.i166.loopexit
  %.pre-phi = phi i64 [ %.pre210, %Array_Expression____sl__.exit.i166.loopexit ], [ %77, %for.body.i162 ]
  %87 = phi ptr [ %84, %Array_Expression____sl__.exit.i166.loopexit ], [ %.pre206, %for.body.i162 ]
  %88 = phi i64 [ %.pre207, %Array_Expression____sl__.exit.i166.loopexit ], [ %76, %for.body.i162 ]
  store i64 %.pre-phi, ptr %memberidx.i.i152, align 4
  %89 = getelementptr inbounds ptr, ptr %87, i64 %88
  store ptr %75, ptr %89, align 8
  %90 = add nuw nsw i64 %72, 1
  %91 = getelementptr inbounds ptr, ptr %69, i64 %72
  %.not215 = icmp slt i64 %72, %70
  br i1 %.not215, label %for.body.i162, label %for.end.i167

for.end.i167:                                     ; preds = %Array_Expression____sl__.exit.i166, %if.entry10
  tail call void @free(ptr nonnull %68)
  %92 = load i64, ptr %1, align 4
  %93 = icmp eq i64 %92, 13
  br i1 %93, label %if.entry.i.i, label %if.entry.i168

if.entry.i.i:                                     ; preds = %for.end.i167
  %memberidx1.i21.i = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %94 = load ptr, ptr %memberidx1.i21.i, align 8
  %95 = load i64, ptr %94, align 4
  %96 = add i64 %95, -1
  %97 = icmp ult i64 %96, 7
  br i1 %97, label %if.entry2.i.i, label %if.entry.i168

if.entry2.i.i:                                    ; preds = %if.entry.i.i
  %98 = icmp ne i64 %95, 2
  %memberidx6.i.i = getelementptr inbounds %IntType, ptr %94, i64 0, i32 1
  %99 = load i1, ptr %memberidx6.i.i, align 1
  %100 = or i1 %98, %99
  br i1 %100, label %if.entry.i168, label %TypeChecker_check_string_expression.exit

if.entry.i168:                                    ; preds = %for.end.i167, %if.entry.i.i, %if.entry2.i.i
  %101 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %101, ptr noundef nonnull align 8 dereferenceable(6) @186, i64 6, i1 false)
  %102 = tail call ptr @malloc(i32 24)
  store ptr %101, ptr %102, align 8
  %memberidx1.i.i22.i = getelementptr inbounds %String, ptr %102, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i22.i, align 4
  %memberidx2.i.i23.i = getelementptr inbounds %String, ptr %102, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i23.i, align 4
  %103 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %102)
  br label %TypeChecker_check_string_expression.exit

TypeChecker_check_string_expression.exit:         ; preds = %if.entry2.i.i, %if.entry.i168
  %is_const.1.i = phi i1 [ false, %if.entry.i168 ], [ %71, %if.entry2.i.i ]
  %expected_type.0.i = phi ptr [ %103, %if.entry.i168 ], [ %1, %if.entry2.i.i ]
  %104 = tail call ptr @malloc(i32 49)
  %memberidx4.i169 = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 3
  %105 = load ptr, ptr %memberidx4.i169, align 8
  %memberidx5.i170 = getelementptr inbounds %StrToken, ptr %105, i64 0, i32 2
  %106 = load ptr, ptr %memberidx5.i170, align 8
  %memberidx7.i171 = getelementptr inbounds %StrToken, ptr %105, i64 0, i32 3
  %107 = load ptr, ptr %memberidx7.i171, align 8
  store i64 8, ptr %104, align 4
  %memberidx.i.i24.i = getelementptr inbounds %Expression, ptr %104, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i24.i, align 4
  %memberidx1.i.i25.i = getelementptr inbounds %Expression, ptr %104, i64 0, i32 1
  %memberidx.i26.i = getelementptr inbounds %StringExpression, ptr %104, i64 0, i32 6
  store ptr %65, ptr %memberidx.i26.i, align 8
  %memberidx1.i27.i = getelementptr inbounds %StringExpression, ptr %104, i64 0, i32 5
  store ptr %107, ptr %memberidx1.i27.i, align 8
  %memberidx2.i28.i = getelementptr inbounds %Expression, ptr %104, i64 0, i32 3
  %memberidx3.i.i = getelementptr inbounds %StringExpression, ptr %104, i64 0, i32 4
  store ptr %106, ptr %memberidx3.i.i, align 8
  store ptr %expected_type.0.i, ptr %memberidx2.i28.i, align 8
  store i1 %is_const.1.i, ptr %memberidx1.i.i25.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %3
  %108 = tail call fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry18:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  store i64 21, ptr %4, align 8
  %109 = tail call ptr @malloc(i32 24)
  %memberidx.i.i145 = getelementptr inbounds %Array_Expression_, ptr %109, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i145, align 4
  %memberidx1.i.i146 = getelementptr inbounds %Array_Expression_, ptr %109, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i146, align 4
  %110 = tail call ptr @malloc(i32 64)
  store ptr %110, ptr %109, align 8
  store i64 0, ptr %memberidx.i.i145, align 4
  %111 = tail call ptr @malloc(i32 16)
  store i64 15, ptr %111, align 4
  %memberidx.i38.i = getelementptr inbounds %TupleType, ptr %111, i64 0, i32 1
  %112 = tail call ptr @malloc(i32 24)
  %memberidx.i.i.i148 = getelementptr inbounds %Array_Type_, ptr %112, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i148, align 4
  %memberidx1.i.i.i149 = getelementptr inbounds %Array_Type_, ptr %112, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i149, align 4
  %113 = tail call ptr @malloc(i32 64)
  store ptr %113, ptr %112, align 8
  store i64 0, ptr %memberidx.i.i.i148, align 4
  store ptr %112, ptr %memberidx.i38.i, align 8
  %114 = load i64, ptr %1, align 4
  %memberidx3.i = getelementptr inbounds %TupleExpressionNode, ptr %2, i64 0, i32 3
  %115 = load ptr, ptr %memberidx3.i, align 8
  %memberidx4.i = getelementptr inbounds %Array_ExpressionNode_, ptr %115, i64 0, i32 1
  %116 = load i64, ptr %memberidx4.i, align 4
  %117 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %117, align 4
  %memberidx1.i39.i = getelementptr inbounds %Range, ptr %117, i64 0, i32 1
  store i64 %116, ptr %memberidx1.i39.i, align 4
  %118 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41.i = getelementptr inbounds %RangeIterator, ptr %118, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41.i, align 4
  %memberidx1.i.i42.i = getelementptr inbounds %RangeIterator, ptr %118, i64 0, i32 2
  store i64 %116, ptr %memberidx1.i.i42.i, align 4
  %119 = icmp slt i64 %116, 1
  br i1 %119, label %for.end.i, label %for.body.i.lr.ph

for.body.i.lr.ph:                                 ; preds = %if.entry18
  %120 = icmp eq i64 %114, 15
  %spec.select = select i1 %120, ptr %1, ptr null
  %.not.i = icmp eq ptr %spec.select, null
  %memberidx9.i = getelementptr inbounds %TupleType, ptr %spec.select, i64 0, i32 1
  %memberidx.i48.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %Array_Expression____sl__.exit.i
  %121 = phi i64 [ 1, %for.body.i.lr.ph ], [ %171, %Array_Expression____sl__.exit.i ]
  %is_constant.0.i188 = phi i1 [ true, %for.body.i.lr.ph ], [ %140, %Array_Expression____sl__.exit.i ]
  %122 = phi i64 [ 0, %for.body.i.lr.ph ], [ %121, %Array_Expression____sl__.exit.i ]
  br i1 %.not.i, label %ifend8.i, label %if.entry6.i

for.end.i:                                        ; preds = %Array_Expression____sl__.exit.i, %if.entry18
  %is_constant.0.i.lcssa = phi i1 [ true, %if.entry18 ], [ %140, %Array_Expression____sl__.exit.i ]
  call void @free(ptr nonnull %118)
  %123 = call ptr @malloc(i32 33)
  store i64 8, ptr %123, align 4
  %memberidx.i.i45.i = getelementptr inbounds %Expression, ptr %123, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i45.i, align 4
  %memberidx1.i.i46.i = getelementptr inbounds %Expression, ptr %123, i64 0, i32 1
  %memberidx.i47.i = getelementptr inbounds %TupleExpression, ptr %123, i64 0, i32 4
  store ptr %109, ptr %memberidx.i47.i, align 8
  store i1 %is_constant.0.i.lcssa, ptr %memberidx1.i.i46.i, align 1
  %memberidx23.i = getelementptr inbounds %Expression, ptr %123, i64 0, i32 3
  store ptr %111, ptr %memberidx23.i, align 8
  br label %TypeChecker_check_tuple_expression.exit

if.entry6.i:                                      ; preds = %for.body.i
  %124 = load ptr, ptr %memberidx9.i, align 8
  %memberidx10.i = getelementptr inbounds %Array_Type_, ptr %124, i64 0, i32 1
  %125 = load i64, ptr %memberidx10.i, align 4
  %126 = icmp slt i64 %122, %125
  br i1 %126, label %if.entry11.i, label %ifend8.i

ifend8.i:                                         ; preds = %if.entry11.i, %if.entry6.i, %for.body.i
  %expected_element_type.0.i = phi ptr [ %138, %if.entry11.i ], [ %4, %if.entry6.i ], [ %4, %for.body.i ]
  %127 = load ptr, ptr %memberidx3.i, align 8
  %128 = load ptr, ptr %127, align 8
  %129 = getelementptr inbounds ptr, ptr %128, i64 %122
  %130 = load ptr, ptr %129, align 8
  %131 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %expected_element_type.0.i, ptr %130)
  %132 = load ptr, ptr %memberidx.i48.i, align 8
  %memberidx1.i49.i = getelementptr inbounds %Compiler, ptr %132, i64 0, i32 5
  %133 = load ptr, ptr %memberidx1.i49.i, align 8
  %memberidx2.i50.i = getelementptr inbounds %Array_FloError_, ptr %133, i64 0, i32 1
  %134 = load i64, ptr %memberidx2.i50.i, align 4
  %135 = icmp sgt i64 %134, 0
  br i1 %135, label %TypeChecker_check_tuple_expression.exit.loopexit, label %ifend18.i

if.entry11.i:                                     ; preds = %if.entry6.i
  %136 = load ptr, ptr %124, align 8
  %137 = getelementptr inbounds ptr, ptr %136, i64 %122
  %138 = load ptr, ptr %137, align 8
  br label %ifend8.i

ifend18.i:                                        ; preds = %ifend8.i
  %memberidx19.i = getelementptr inbounds %Expression, ptr %131, i64 0, i32 1
  %139 = load i1, ptr %memberidx19.i, align 1
  %140 = and i1 %is_constant.0.i188, %139
  %141 = load ptr, ptr %memberidx.i38.i, align 8
  %memberidx21.i = getelementptr inbounds %Expression, ptr %131, i64 0, i32 3
  %142 = load ptr, ptr %memberidx21.i, align 8
  %memberidx.i51.i = getelementptr inbounds %Array_Type_, ptr %141, i64 0, i32 1
  %143 = load i64, ptr %memberidx.i51.i, align 4
  %144 = add i64 %143, 1
  %memberidx.i.i52.i = getelementptr inbounds %Array_Type_, ptr %141, i64 0, i32 2
  %145 = load i64, ptr %memberidx.i.i52.i, align 4
  %146 = icmp slt i64 %145, %144
  %.pre = load ptr, ptr %141, align 8
  br i1 %146, label %while.body.i.i.i, label %Array_Type____sl__.exit.i

while.body.i.i.i:                                 ; preds = %ifend18.i, %while.body.i.i.i
  %147 = phi ptr [ %151, %while.body.i.i.i ], [ %.pre, %ifend18.i ]
  %148 = phi i64 [ %152, %while.body.i.i.i ], [ %145, %ifend18.i ]
  %149 = shl nuw i64 %148, 1
  store i64 %149, ptr %memberidx.i.i52.i, align 4
  %150 = shl i64 %148, 4
  %151 = call ptr @realloc(ptr %147, i64 %150)
  store ptr %151, ptr %141, align 8
  %152 = load i64, ptr %memberidx.i.i52.i, align 4
  %153 = icmp slt i64 %152, %144
  br i1 %153, label %while.body.i.i.i, label %Array_Type____sl__.exit.i.loopexit

Array_Type____sl__.exit.i.loopexit:               ; preds = %while.body.i.i.i
  %.pre201 = load i64, ptr %memberidx.i51.i, align 4
  %.pre211 = add nsw i64 %.pre201, 1
  br label %Array_Type____sl__.exit.i

Array_Type____sl__.exit.i:                        ; preds = %ifend18.i, %Array_Type____sl__.exit.i.loopexit
  %.pre-phi212 = phi i64 [ %.pre211, %Array_Type____sl__.exit.i.loopexit ], [ %144, %ifend18.i ]
  %154 = phi ptr [ %151, %Array_Type____sl__.exit.i.loopexit ], [ %.pre, %ifend18.i ]
  %155 = phi i64 [ %.pre201, %Array_Type____sl__.exit.i.loopexit ], [ %143, %ifend18.i ]
  store i64 %.pre-phi212, ptr %memberidx.i51.i, align 4
  %156 = getelementptr inbounds ptr, ptr %154, i64 %155
  store ptr %142, ptr %156, align 8
  %157 = load i64, ptr %memberidx.i.i145, align 4
  %158 = add i64 %157, 1
  %159 = load i64, ptr %memberidx1.i.i146, align 4
  %160 = icmp slt i64 %159, %158
  %.pre203 = load ptr, ptr %109, align 8
  br i1 %160, label %while.body.i.i56.i, label %Array_Expression____sl__.exit.i

while.body.i.i56.i:                               ; preds = %Array_Type____sl__.exit.i, %while.body.i.i56.i
  %161 = phi ptr [ %165, %while.body.i.i56.i ], [ %.pre203, %Array_Type____sl__.exit.i ]
  %162 = phi i64 [ %166, %while.body.i.i56.i ], [ %159, %Array_Type____sl__.exit.i ]
  %163 = shl nuw i64 %162, 1
  store i64 %163, ptr %memberidx1.i.i146, align 4
  %164 = shl i64 %162, 4
  %165 = call ptr @realloc(ptr %161, i64 %164)
  store ptr %165, ptr %109, align 8
  %166 = load i64, ptr %memberidx1.i.i146, align 4
  %167 = icmp slt i64 %166, %158
  br i1 %167, label %while.body.i.i56.i, label %Array_Expression____sl__.exit.i.loopexit

Array_Expression____sl__.exit.i.loopexit:         ; preds = %while.body.i.i56.i
  %.pre204 = load i64, ptr %memberidx.i.i145, align 4
  %.pre213 = add nsw i64 %.pre204, 1
  br label %Array_Expression____sl__.exit.i

Array_Expression____sl__.exit.i:                  ; preds = %Array_Type____sl__.exit.i, %Array_Expression____sl__.exit.i.loopexit
  %.pre-phi214 = phi i64 [ %.pre213, %Array_Expression____sl__.exit.i.loopexit ], [ %158, %Array_Type____sl__.exit.i ]
  %168 = phi ptr [ %165, %Array_Expression____sl__.exit.i.loopexit ], [ %.pre203, %Array_Type____sl__.exit.i ]
  %169 = phi i64 [ %.pre204, %Array_Expression____sl__.exit.i.loopexit ], [ %157, %Array_Type____sl__.exit.i ]
  store i64 %.pre-phi214, ptr %memberidx.i.i145, align 4
  %170 = getelementptr inbounds ptr, ptr %168, i64 %169
  store ptr %131, ptr %170, align 8
  %.not = icmp slt i64 %121, %116
  %171 = add nuw nsw i64 %121, 1
  br i1 %.not, label %for.body.i, label %for.end.i

TypeChecker_check_tuple_expression.exit.loopexit: ; preds = %ifend8.i
  store i64 %121, ptr %memberidx.i.i41.i, align 4
  store i1 false, ptr %118, align 1
  br label %TypeChecker_check_tuple_expression.exit

TypeChecker_check_tuple_expression.exit:          ; preds = %TypeChecker_check_tuple_expression.exit.loopexit, %for.end.i
  %common.ret.op.i = phi ptr [ %123, %for.end.i ], [ null, %TypeChecker_check_tuple_expression.exit.loopexit ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %common.ret

if.entry22:                                       ; preds = %3
  %172 = tail call fastcc ptr @TypeChecker_check_var_access_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry26:                                       ; preds = %3
  %173 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry30:                                       ; preds = %3
  %174 = tail call fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry34:                                       ; preds = %3
  %175 = tail call fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry38:                                       ; preds = %3
  %176 = tail call fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry42:                                       ; preds = %3
  %177 = tail call fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry46:                                       ; preds = %3
  %178 = tail call fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry50:                                       ; preds = %3
  %179 = tail call fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry54:                                       ; preds = %3
  %180 = tail call fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry58:                                       ; preds = %3
  %181 = tail call fastcc ptr @TypeChecker_check_range_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry62:                                       ; preds = %3
  %182 = tail call fastcc ptr @TypeChecker_check_match_expr(ptr %0, ptr nonnull %2)
  br label %common.ret
}

define internal fastcc noalias ptr @TypeChecker_check_var_access_expr(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %4, i64 0, i32 2
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %7, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %7, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %8, 4
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %3
  %9 = load ptr, ptr %5, align 8
  %10 = tail call i64 @memcmp(ptr %9, ptr nonnull %6, i64 4)
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend20, %TypeChecker_error.exit116, %ifend11, %TypeChecker_error.exit, %if.entry2, %if.entry
  %common.ret.op = phi ptr [ %12, %if.entry ], [ %20, %if.entry2 ], [ null, %TypeChecker_error.exit ], [ %53, %ifend11 ], [ null, %TypeChecker_error.exit116 ], [ %96, %ifend20 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %ifend.i
  %12 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %12, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i, align 4
  %memberidx1.i.i68 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %13, align 4
  %memberidx.i69 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 3
  store ptr %13, ptr %memberidx.i69, align 8
  %memberidx1.i70 = getelementptr inbounds %BooleanExpression, ptr %12, i64 0, i32 4
  store i1 true, ptr %memberidx1.i70, align 1
  store i1 true, ptr %memberidx1.i.i68, align 1
  br label %common.ret

ifend:                                            ; preds = %3, %ifend.i
  %14 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %14, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i71 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i71, align 4
  %memberidx2.i.i72 = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i72, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i75 = icmp eq i64 %16, 5
  br i1 %.not.i75, label %ifend.i77, label %ifend4

ifend.i77:                                        ; preds = %ifend
  %17 = load ptr, ptr %5, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 5)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend.i77
  %20 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %20, align 4
  %memberidx.i.i79 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i79, align 4
  %memberidx1.i.i80 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 1
  %21 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %21, align 4
  %memberidx.i81 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  store ptr %21, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %BooleanExpression, ptr %20, i64 0, i32 4
  store i1 false, ptr %memberidx1.i82, align 1
  store i1 true, ptr %memberidx1.i.i80, align 1
  br label %common.ret

ifend4:                                           ; preds = %ifend, %ifend.i77
  %22 = tail call ptr @malloc(i32 4)
  store i32 1819047278, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  %memberidx1.i.i84 = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i84, align 4
  %memberidx2.i.i85 = getelementptr inbounds %String, ptr %23, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i85, align 4
  %24 = load i64, ptr %memberidx.i, align 4
  %.not.i88 = icmp eq i64 %24, 4
  br i1 %.not.i88, label %ifend.i90, label %ifend7

ifend.i90:                                        ; preds = %ifend4
  %25 = load ptr, ptr %5, align 8
  %26 = tail call i64 @memcmp(ptr %25, ptr nonnull %22, i64 4)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend.i90
  %28 = load i64, ptr %1, align 4
  %29 = icmp eq i64 %28, 10
  br i1 %29, label %if.entry9, label %ifend11

ifend7:                                           ; preds = %ifend4, %ifend.i90
  %30 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr nonnull %5)
  %31 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %31, align 4
  %.not = icmp eq ptr %30, null
  br i1 %.not, label %ifend16, label %if.entry14

if.entry9:                                        ; preds = %if.entry5
  %32 = tail call ptr @malloc(i32 37)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %32, ptr noundef nonnull align 8 dereferenceable(37) @170, i64 37, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  %memberidx1.i.i94 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  store i64 37, ptr %memberidx1.i.i94, align 4
  %memberidx2.i.i95 = getelementptr inbounds %String, ptr %33, i64 0, i32 2
  store i64 37, ptr %memberidx2.i.i95, align 4
  %34 = load ptr, ptr %memberidx, align 8
  %memberidx13 = getelementptr inbounds %Token, ptr %34, i64 0, i32 1
  %35 = load ptr, ptr %memberidx13, align 8
  %memberidx.i96 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %36 = load ptr, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %Compiler, ptr %36, i64 0, i32 5
  %37 = load ptr, ptr %memberidx1.i97, align 8
  %38 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %38, align 4
  %memberidx1.i.i98 = getelementptr inbounds %FloError, ptr %38, i64 0, i32 2
  store ptr %35, ptr %memberidx1.i.i98, align 8
  %memberidx2.i.i99 = getelementptr inbounds %FloError, ptr %38, i64 0, i32 1
  store ptr %33, ptr %memberidx2.i.i99, align 8
  %memberidx.i.i100 = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i.i100, align 4
  %40 = add i64 %39, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 2
  %41 = load i64, ptr %memberidx.i.i.i, align 4
  %42 = icmp slt i64 %41, %40
  %.pre138 = load ptr, ptr %37, align 8
  br i1 %42, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry9, %while.body.i.i.i
  %43 = phi ptr [ %47, %while.body.i.i.i ], [ %.pre138, %if.entry9 ]
  %44 = phi i64 [ %48, %while.body.i.i.i ], [ %41, %if.entry9 ]
  %45 = shl nuw i64 %44, 1
  store i64 %45, ptr %memberidx.i.i.i, align 4
  %46 = shl i64 %44, 4
  %47 = tail call ptr @realloc(ptr %43, i64 %46)
  store ptr %47, ptr %37, align 8
  %48 = load i64, ptr %memberidx.i.i.i, align 4
  %49 = icmp slt i64 %48, %40
  br i1 %49, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre139 = load i64, ptr %memberidx.i.i100, align 4
  %.pre141 = add nsw i64 %.pre139, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry9, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre141, %TypeChecker_error.exit.loopexit ], [ %40, %if.entry9 ]
  %50 = phi ptr [ %47, %TypeChecker_error.exit.loopexit ], [ %.pre138, %if.entry9 ]
  %51 = phi i64 [ %.pre139, %TypeChecker_error.exit.loopexit ], [ %39, %if.entry9 ]
  store i64 %.pre-phi, ptr %memberidx.i.i100, align 4
  %52 = getelementptr inbounds ptr, ptr %50, i64 %51
  store ptr %38, ptr %52, align 8
  br label %common.ret

ifend11:                                          ; preds = %if.entry5
  %53 = tail call ptr @malloc(i32 25)
  store i64 8, ptr %53, align 4
  %memberidx.i.i101 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 2
  store i64 5, ptr %memberidx.i.i101, align 4
  %memberidx1.i.i102 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 1
  %memberidx.i103 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 3
  store ptr %1, ptr %memberidx.i103, align 8
  store i1 true, ptr %memberidx1.i.i102, align 1
  br label %common.ret

if.entry14:                                       ; preds = %ifend7
  %54 = load i64, ptr %30, align 4
  switch i64 %54, label %else31 [
    i64 0, label %if.entry18
    i64 1, label %if.entry24
    i64 2, label %if.entry30
  ]

ifend16:                                          ; preds = %ifend7
  %55 = load i64, ptr %memberidx.i, align 4
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, 1
  %58 = tail call ptr @malloc(i32 %57)
  %59 = load ptr, ptr %5, align 8
  %60 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %58, ptr align 8 %59, i64 %60, i1 false)
  %61 = getelementptr inbounds i8, ptr %58, i64 %60
  store i8 0, ptr %61, align 1
  %62 = alloca ptr, align 8
  %63 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %62, ptr nonnull @171, ptr %58)
  %64 = load ptr, ptr %62, align 8
  %65 = tail call ptr @malloc(i32 24)
  store ptr %64, ptr %65, align 8
  %memberidx1.i106 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  store i64 %63, ptr %memberidx1.i106, align 4
  %memberidx2.i107 = getelementptr inbounds %String, ptr %65, i64 0, i32 2
  store i64 %63, ptr %memberidx2.i107, align 4
  tail call void @free(ptr %58)
  %66 = load ptr, ptr %2, align 8
  %memberidx.i108 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %67 = load ptr, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %Compiler, ptr %67, i64 0, i32 5
  %68 = load ptr, ptr %memberidx1.i109, align 8
  %69 = call ptr @malloc(i32 24)
  store i64 1, ptr %69, align 4
  %memberidx1.i.i110 = getelementptr inbounds %FloError, ptr %69, i64 0, i32 2
  store ptr %66, ptr %memberidx1.i.i110, align 8
  %memberidx2.i.i111 = getelementptr inbounds %FloError, ptr %69, i64 0, i32 1
  store ptr %65, ptr %memberidx2.i.i111, align 8
  %memberidx.i.i112 = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 1
  %70 = load i64, ptr %memberidx.i.i112, align 4
  %71 = add i64 %70, 1
  %memberidx.i.i.i113 = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 2
  %72 = load i64, ptr %memberidx.i.i.i113, align 4
  %73 = icmp slt i64 %72, %71
  %.pre = load ptr, ptr %68, align 8
  br i1 %73, label %while.body.i.i.i115, label %TypeChecker_error.exit116

while.body.i.i.i115:                              ; preds = %ifend16, %while.body.i.i.i115
  %74 = phi ptr [ %78, %while.body.i.i.i115 ], [ %.pre, %ifend16 ]
  %75 = phi i64 [ %79, %while.body.i.i.i115 ], [ %72, %ifend16 ]
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx.i.i.i113, align 4
  %77 = shl i64 %75, 4
  %78 = call ptr @realloc(ptr %74, i64 %77)
  store ptr %78, ptr %68, align 8
  %79 = load i64, ptr %memberidx.i.i.i113, align 4
  %80 = icmp slt i64 %79, %71
  br i1 %80, label %while.body.i.i.i115, label %TypeChecker_error.exit116.loopexit

TypeChecker_error.exit116.loopexit:               ; preds = %while.body.i.i.i115
  %.pre136 = load i64, ptr %memberidx.i.i112, align 4
  %.pre142 = add nsw i64 %.pre136, 1
  br label %TypeChecker_error.exit116

TypeChecker_error.exit116:                        ; preds = %ifend16, %TypeChecker_error.exit116.loopexit
  %.pre-phi143 = phi i64 [ %.pre142, %TypeChecker_error.exit116.loopexit ], [ %71, %ifend16 ]
  %81 = phi ptr [ %78, %TypeChecker_error.exit116.loopexit ], [ %.pre, %ifend16 ]
  %82 = phi i64 [ %.pre136, %TypeChecker_error.exit116.loopexit ], [ %70, %ifend16 ]
  store i64 %.pre-phi143, ptr %memberidx.i.i112, align 4
  %83 = getelementptr inbounds ptr, ptr %81, i64 %82
  store ptr %69, ptr %83, align 8
  br label %common.ret

if.entry18:                                       ; preds = %if.entry14
  %84 = load ptr, ptr %0, align 8
  %85 = load ptr, ptr %84, align 8
  %memberidx1.i117 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %86 = load i64, ptr %memberidx1.i117, align 4
  %87 = load ptr, ptr %85, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %86
  %89 = load ptr, ptr %88, align 8
  %memberidx2.i118 = getelementptr inbounds %Module, ptr %89, i64 0, i32 4
  %90 = load ptr, ptr %memberidx2.i118, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %91 = load i64, ptr %memberidx3.i, align 4
  %92 = load ptr, ptr %90, align 8
  %93 = getelementptr inbounds ptr, ptr %92, i64 %91
  %94 = load ptr, ptr %93, align 8
  %memberidx22 = getelementptr inbounds %Function, ptr %94, i64 0, i32 4
  %95 = load ptr, ptr %memberidx22, align 8
  br label %ifend20

ifend20:                                          ; preds = %if.entry41, %else38, %if.entry37, %if.entry30, %if.entry24, %if.entry18
  %var_ty.0 = phi ptr [ %95, %if.entry18 ], [ %110, %if.entry24 ], [ %122, %if.entry30 ], [ %125, %if.entry37 ], [ %127, %if.entry41 ], [ %31, %else38 ]
  %96 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %96, align 4
  %memberidx.i.i119 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i119, align 4
  %memberidx1.i.i120 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 1
  %memberidx.i121 = getelementptr inbounds %VarAccessExpression, ptr %96, i64 0, i32 4
  store ptr %30, ptr %memberidx.i121, align 8
  %memberidx1.i122 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 3
  store ptr %var_ty.0, ptr %memberidx1.i122, align 8
  %97 = load i64, ptr %30, align 4
  %98 = icmp eq i64 %97, 2
  store i1 %98, ptr %memberidx1.i.i120, align 1
  br label %common.ret

if.entry24:                                       ; preds = %if.entry14
  %99 = load ptr, ptr %0, align 8
  %100 = load ptr, ptr %99, align 8
  %memberidx1.i124 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %101 = load i64, ptr %memberidx1.i124, align 4
  %102 = load ptr, ptr %100, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8
  %memberidx2.i125 = getelementptr inbounds %Module, ptr %104, i64 0, i32 1
  %105 = load ptr, ptr %memberidx2.i125, align 8
  %memberidx3.i126 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %106 = load i64, ptr %memberidx3.i126, align 4
  %107 = load ptr, ptr %105, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %106
  %109 = load ptr, ptr %108, align 8
  %110 = load ptr, ptr %109, align 8
  br label %ifend20

if.entry30:                                       ; preds = %if.entry14
  %111 = load ptr, ptr %0, align 8
  %112 = load ptr, ptr %111, align 8
  %memberidx1.i127 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %113 = load i64, ptr %memberidx1.i127, align 4
  %114 = load ptr, ptr %112, align 8
  %115 = getelementptr inbounds ptr, ptr %114, i64 %113
  %116 = load ptr, ptr %115, align 8
  %memberidx2.i128 = getelementptr inbounds %Module, ptr %116, i64 0, i32 2
  %117 = load ptr, ptr %memberidx2.i128, align 8
  %memberidx3.i129 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %118 = load i64, ptr %memberidx3.i129, align 4
  %119 = load ptr, ptr %117, align 8
  %120 = getelementptr inbounds ptr, ptr %119, i64 %118
  %121 = load ptr, ptr %120, align 8
  %122 = load ptr, ptr %121, align 8
  br label %ifend20

else31:                                           ; preds = %if.entry14
  %123 = add i64 %54, -3
  %124 = icmp ult i64 %123, 2
  br i1 %124, label %if.entry37, label %else38

if.entry37:                                       ; preds = %else31
  %125 = tail call ptr @malloc(i32 8)
  store i64 17, ptr %125, align 4
  br label %ifend20

else38:                                           ; preds = %else31
  %126 = icmp eq i64 %54, 5
  br i1 %126, label %if.entry41, label %ifend20

if.entry41:                                       ; preds = %else38
  %127 = tail call ptr @malloc(i32 8)
  store i64 18, ptr %127, align 4
  br label %ifend20
}

define internal fastcc ptr @TypeChecker_check_intrinsic_call(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  %5 = add i64 %4, -3
  %6 = icmp ult i64 %5, 2
  %7 = icmp eq i64 %4, 7
  %8 = or i1 %7, %6
  %9 = alloca %IntType, align 8
  store i64 6, ptr %9, align 8
  %memberidx.i = getelementptr inbounds %IntType, ptr %9, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 8
  %10 = alloca %Type, align 8
  store i64 21, ptr %10, align 8
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  %11 = load i64, ptr %memberidx2, align 4
  %12 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %12, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %12, i64 0, i32 1
  store i64 %11, ptr %memberidx1.i, align 4
  %13 = tail call ptr @malloc(i32 17)
  %memberidx.i.i = getelementptr inbounds %RangeIterator, ptr %13, i64 0, i32 1
  %14 = icmp slt i64 %11, 1
  br i1 %14, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx4 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %15 = icmp eq i64 %4, 6
  %16 = icmp eq i64 %4, 5
  %memberidx.i121 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %17 = phi i64 [ 1, %for.body.lr.ph ], [ %62, %Array_Expression____sl__.exit ]
  %18 = phi i64 [ 0, %for.body.lr.ph ], [ %17, %Array_Expression____sl__.exit ]
  %19 = icmp eq i64 %18, 1
  %20 = and i1 %8, %19
  br i1 %20, label %end, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  tail call void @free(ptr nonnull %13)
  %memberidx26 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %21 = load ptr, ptr %memberidx26, align 8
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx27 = getelementptr inbounds %Expression, ptr %23, i64 0, i32 3
  %24 = load ptr, ptr %memberidx27, align 8
  %25 = load i64, ptr %24, align 4
  %26 = icmp eq i64 %25, 13
  br i1 %26, label %ifend30, label %if.entry28

false_block:                                      ; preds = %for.body
  %27 = load ptr, ptr %memberidx4, align 8
  %28 = load ptr, ptr %27, align 8
  %29 = load ptr, ptr %28, align 8
  %memberidx5 = getelementptr inbounds %Expression, ptr %29, i64 0, i32 3
  %30 = load ptr, ptr %memberidx5, align 8
  br label %end

end:                                              ; preds = %for.body, %false_block
  %ternary = phi ptr [ %30, %false_block ], [ %10, %for.body ]
  %31 = and i1 %6, %19
  %32 = icmp eq i64 %18, 0
  %33 = and i1 %15, %32
  %34 = select i1 %16, i1 true, i1 %33
  %35 = select i1 %34, i1 true, i1 %31
  %expected_type.2 = select i1 %35, ptr %9, ptr %ternary
  %36 = load ptr, ptr %3, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %18
  %38 = load ptr, ptr %37, align 8
  %39 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %expected_type.2, ptr %38)
  %40 = load ptr, ptr %memberidx.i121, align 8
  %memberidx1.i122 = getelementptr inbounds %Compiler, ptr %40, i64 0, i32 5
  %41 = load ptr, ptr %memberidx1.i122, align 8
  %memberidx2.i123 = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx2.i123, align 4
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %common.ret.loopexit, label %ifend14

common.ret.loopexit:                              ; preds = %end
  store i64 %17, ptr %memberidx.i.i, align 4
  store i1 false, ptr %13, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %ifend30, %ifend42, %ifend56, %if.entry63, %TypeChecker_error.exit167, %TypeChecker_error.exit156, %TypeChecker_error.exit145, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit145 ], [ null, %TypeChecker_error.exit156 ], [ null, %TypeChecker_error.exit167 ], [ %1, %if.entry63 ], [ %1, %ifend56 ], [ %1, %ifend42 ], [ %1, %ifend30 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend14:                                          ; preds = %end
  %44 = load i64, ptr %expected_type.2, align 4
  %.not = icmp eq i64 %44, 21
  br i1 %.not, label %ifend18, label %if.entry16

if.entry16:                                       ; preds = %ifend14
  %memberidx19 = getelementptr inbounds %Expression, ptr %39, i64 0, i32 3
  %45 = load ptr, ptr %memberidx19, align 8
  %46 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %expected_type.2, ptr %45)
  br i1 %46, label %ifend18, label %if.entry20

ifend18:                                          ; preds = %if.entry16, %ifend14
  %47 = load ptr, ptr %memberidx4, align 8
  %memberidx.i124 = getelementptr inbounds %Array_Expression_, ptr %47, i64 0, i32 1
  %48 = load i64, ptr %memberidx.i124, align 4
  %49 = add i64 %48, 1
  %memberidx.i.i125 = getelementptr inbounds %Array_Expression_, ptr %47, i64 0, i32 2
  %50 = load i64, ptr %memberidx.i.i125, align 4
  %51 = icmp slt i64 %50, %49
  %.pre201 = load ptr, ptr %47, align 8
  br i1 %51, label %while.body.i.i, label %Array_Expression____sl__.exit

while.body.i.i:                                   ; preds = %ifend18, %while.body.i.i
  %52 = phi ptr [ %56, %while.body.i.i ], [ %.pre201, %ifend18 ]
  %53 = phi i64 [ %57, %while.body.i.i ], [ %50, %ifend18 ]
  %54 = shl nuw i64 %53, 1
  store i64 %54, ptr %memberidx.i.i125, align 4
  %55 = shl i64 %53, 4
  %56 = call ptr @realloc(ptr %52, i64 %55)
  store ptr %56, ptr %47, align 8
  %57 = load i64, ptr %memberidx.i.i125, align 4
  %58 = icmp slt i64 %57, %49
  br i1 %58, label %while.body.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.body.i.i
  %.pre202 = load i64, ptr %memberidx.i124, align 4
  %.pre218 = add nsw i64 %.pre202, 1
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend18, %Array_Expression____sl__.exit.loopexit
  %.pre-phi219 = phi i64 [ %.pre218, %Array_Expression____sl__.exit.loopexit ], [ %49, %ifend18 ]
  %59 = phi ptr [ %56, %Array_Expression____sl__.exit.loopexit ], [ %.pre201, %ifend18 ]
  %60 = phi i64 [ %.pre202, %Array_Expression____sl__.exit.loopexit ], [ %48, %ifend18 ]
  store i64 %.pre-phi219, ptr %memberidx.i124, align 4
  %61 = getelementptr inbounds ptr, ptr %59, i64 %60
  store ptr %39, ptr %61, align 8
  %.not222 = icmp slt i64 %17, %11
  %62 = add nuw nsw i64 %17, 1
  br i1 %.not222, label %for.body, label %for.end

if.entry20:                                       ; preds = %if.entry16
  store i64 %17, ptr %memberidx.i.i, align 4
  store i1 false, ptr %13, align 1
  %63 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %expected_type.2)
  %memberidx.i126 = getelementptr inbounds %String, ptr %63, i64 0, i32 1
  %64 = load i64, ptr %memberidx.i126, align 4
  %65 = trunc i64 %64 to i32
  %66 = add i32 %65, 1
  %67 = call ptr @malloc(i32 %66)
  %68 = load ptr, ptr %63, align 8
  %69 = load i64, ptr %memberidx.i126, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %67, ptr align 8 %68, i64 %69, i1 false)
  %70 = getelementptr inbounds i8, ptr %67, i64 %69
  store i8 0, ptr %70, align 1
  %71 = load ptr, ptr %memberidx19, align 8
  %72 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %71)
  %memberidx.i127 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  %73 = load i64, ptr %memberidx.i127, align 4
  %74 = trunc i64 %73 to i32
  %75 = add i32 %74, 1
  %76 = call ptr @malloc(i32 %75)
  %77 = load ptr, ptr %72, align 8
  %78 = load i64, ptr %memberidx.i127, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %76, ptr align 8 %77, i64 %78, i1 false)
  %79 = getelementptr inbounds i8, ptr %76, i64 %78
  store i8 0, ptr %79, align 1
  %80 = alloca ptr, align 8
  %81 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %80, ptr nonnull @216, i64 %18, ptr %67, ptr %76)
  %82 = load ptr, ptr %80, align 8
  %83 = tail call ptr @malloc(i32 24)
  store ptr %82, ptr %83, align 8
  %memberidx1.i128 = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  store i64 %81, ptr %memberidx1.i128, align 4
  %memberidx2.i129 = getelementptr inbounds %String, ptr %83, i64 0, i32 2
  store i64 %81, ptr %memberidx2.i129, align 4
  tail call void @free(ptr %67)
  tail call void @free(ptr %76)
  %84 = load ptr, ptr %3, align 8
  %85 = getelementptr inbounds ptr, ptr %84, i64 %18
  %86 = load ptr, ptr %85, align 8
  %87 = load ptr, ptr %86, align 8
  %88 = load ptr, ptr %memberidx.i121, align 8
  %memberidx1.i131 = getelementptr inbounds %Compiler, ptr %88, i64 0, i32 5
  %89 = load ptr, ptr %memberidx1.i131, align 8
  %90 = call ptr @malloc(i32 24)
  store i64 5, ptr %90, align 4
  %memberidx1.i.i132 = getelementptr inbounds %FloError, ptr %90, i64 0, i32 2
  store ptr %87, ptr %memberidx1.i.i132, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %90, i64 0, i32 1
  store ptr %83, ptr %memberidx2.i.i, align 8
  %memberidx.i.i133 = getelementptr inbounds %Array_FloError_, ptr %89, i64 0, i32 1
  %91 = load i64, ptr %memberidx.i.i133, align 4
  %92 = add i64 %91, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %89, i64 0, i32 2
  %93 = load i64, ptr %memberidx.i.i.i, align 4
  %94 = icmp slt i64 %93, %92
  %.pre = load ptr, ptr %89, align 8
  br i1 %94, label %while.body.i.i.i, label %TypeChecker_error.exit

while.body.i.i.i:                                 ; preds = %if.entry20, %while.body.i.i.i
  %95 = phi ptr [ %99, %while.body.i.i.i ], [ %.pre, %if.entry20 ]
  %96 = phi i64 [ %100, %while.body.i.i.i ], [ %93, %if.entry20 ]
  %97 = shl nuw i64 %96, 1
  store i64 %97, ptr %memberidx.i.i.i, align 4
  %98 = shl i64 %96, 4
  %99 = call ptr @realloc(ptr %95, i64 %98)
  store ptr %99, ptr %89, align 8
  %100 = load i64, ptr %memberidx.i.i.i, align 4
  %101 = icmp slt i64 %100, %92
  br i1 %101, label %while.body.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.body.i.i.i
  %.pre199 = load i64, ptr %memberidx.i.i133, align 4
  %.pre220 = add nsw i64 %.pre199, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry20, %TypeChecker_error.exit.loopexit
  %.pre-phi221 = phi i64 [ %.pre220, %TypeChecker_error.exit.loopexit ], [ %92, %if.entry20 ]
  %102 = phi ptr [ %99, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry20 ]
  %103 = phi i64 [ %.pre199, %TypeChecker_error.exit.loopexit ], [ %91, %if.entry20 ]
  store i64 %.pre-phi221, ptr %memberidx.i.i133, align 4
  %104 = getelementptr inbounds ptr, ptr %102, i64 %103
  store ptr %90, ptr %104, align 8
  br label %common.ret

if.entry28:                                       ; preds = %for.end
  %105 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %24)
  %memberidx.i134 = getelementptr inbounds %String, ptr %105, i64 0, i32 1
  %106 = load i64, ptr %memberidx.i134, align 4
  %107 = trunc i64 %106 to i32
  %108 = add i32 %107, 1
  %109 = call ptr @malloc(i32 %108)
  %110 = load ptr, ptr %105, align 8
  %111 = load i64, ptr %memberidx.i134, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %109, ptr align 8 %110, i64 %111, i1 false)
  %112 = getelementptr inbounds i8, ptr %109, i64 %111
  store i8 0, ptr %112, align 1
  %113 = alloca ptr, align 8
  %114 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %113, ptr nonnull @217, ptr %109)
  %115 = load ptr, ptr %113, align 8
  %116 = tail call ptr @malloc(i32 24)
  store ptr %115, ptr %116, align 8
  %memberidx1.i135 = getelementptr inbounds %String, ptr %116, i64 0, i32 1
  store i64 %114, ptr %memberidx1.i135, align 4
  %memberidx2.i136 = getelementptr inbounds %String, ptr %116, i64 0, i32 2
  store i64 %114, ptr %memberidx2.i136, align 4
  tail call void @free(ptr %109)
  %memberidx33 = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 3
  %117 = load ptr, ptr %memberidx33, align 8
  %118 = load ptr, ptr %117, align 8
  %memberidx.i137 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %119 = load ptr, ptr %memberidx.i137, align 8
  %memberidx1.i138 = getelementptr inbounds %Compiler, ptr %119, i64 0, i32 5
  %120 = load ptr, ptr %memberidx1.i138, align 8
  %121 = call ptr @malloc(i32 24)
  store i64 5, ptr %121, align 4
  %memberidx1.i.i139 = getelementptr inbounds %FloError, ptr %121, i64 0, i32 2
  store ptr %118, ptr %memberidx1.i.i139, align 8
  %memberidx2.i.i140 = getelementptr inbounds %FloError, ptr %121, i64 0, i32 1
  store ptr %116, ptr %memberidx2.i.i140, align 8
  %memberidx.i.i141 = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 1
  %122 = load i64, ptr %memberidx.i.i141, align 4
  %123 = add i64 %122, 1
  %memberidx.i.i.i142 = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 2
  %124 = load i64, ptr %memberidx.i.i.i142, align 4
  %125 = icmp slt i64 %124, %123
  %.pre204 = load ptr, ptr %120, align 8
  br i1 %125, label %while.body.i.i.i144, label %TypeChecker_error.exit145

while.body.i.i.i144:                              ; preds = %if.entry28, %while.body.i.i.i144
  %126 = phi ptr [ %130, %while.body.i.i.i144 ], [ %.pre204, %if.entry28 ]
  %127 = phi i64 [ %131, %while.body.i.i.i144 ], [ %124, %if.entry28 ]
  %128 = shl nuw i64 %127, 1
  store i64 %128, ptr %memberidx.i.i.i142, align 4
  %129 = shl i64 %127, 4
  %130 = call ptr @realloc(ptr %126, i64 %129)
  store ptr %130, ptr %120, align 8
  %131 = load i64, ptr %memberidx.i.i.i142, align 4
  %132 = icmp slt i64 %131, %123
  br i1 %132, label %while.body.i.i.i144, label %TypeChecker_error.exit145.loopexit

TypeChecker_error.exit145.loopexit:               ; preds = %while.body.i.i.i144
  %.pre205 = load i64, ptr %memberidx.i.i141, align 4
  %.pre216 = add nsw i64 %.pre205, 1
  br label %TypeChecker_error.exit145

TypeChecker_error.exit145:                        ; preds = %if.entry28, %TypeChecker_error.exit145.loopexit
  %.pre-phi217 = phi i64 [ %.pre216, %TypeChecker_error.exit145.loopexit ], [ %123, %if.entry28 ]
  %133 = phi ptr [ %130, %TypeChecker_error.exit145.loopexit ], [ %.pre204, %if.entry28 ]
  %134 = phi i64 [ %.pre205, %TypeChecker_error.exit145.loopexit ], [ %122, %if.entry28 ]
  store i64 %.pre-phi217, ptr %memberidx.i.i141, align 4
  %135 = getelementptr inbounds ptr, ptr %133, i64 %134
  store ptr %121, ptr %135, align 8
  br label %common.ret

ifend30:                                          ; preds = %for.end
  switch i64 %4, label %common.ret [
    i64 6, label %if.entry35
    i64 7, label %if.entry49
    i64 5, label %if.entry49
    i64 4, label %if.entry49
    i64 3, label %if.entry49
  ]

if.entry35:                                       ; preds = %ifend30
  %memberidx39 = getelementptr inbounds %Array_Expression_, ptr %21, i64 0, i32 1
  %136 = load i64, ptr %memberidx39, align 4
  %.not118 = icmp eq i64 %136, 2
  br i1 %.not118, label %ifend42, label %if.entry40

if.entry40:                                       ; preds = %if.entry35
  %137 = alloca ptr, align 8
  %138 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %137, ptr nonnull @218, i64 %136)
  %139 = load ptr, ptr %137, align 8
  %140 = tail call ptr @malloc(i32 24)
  store ptr %139, ptr %140, align 8
  %memberidx1.i146 = getelementptr inbounds %String, ptr %140, i64 0, i32 1
  store i64 %138, ptr %memberidx1.i146, align 4
  %memberidx2.i147 = getelementptr inbounds %String, ptr %140, i64 0, i32 2
  store i64 %138, ptr %memberidx2.i147, align 4
  %141 = load ptr, ptr %2, align 8
  %memberidx.i148 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %142 = load ptr, ptr %memberidx.i148, align 8
  %memberidx1.i149 = getelementptr inbounds %Compiler, ptr %142, i64 0, i32 5
  %143 = load ptr, ptr %memberidx1.i149, align 8
  %144 = call ptr @malloc(i32 24)
  store i64 4, ptr %144, align 4
  %memberidx1.i.i150 = getelementptr inbounds %FloError, ptr %144, i64 0, i32 2
  store ptr %141, ptr %memberidx1.i.i150, align 8
  %memberidx2.i.i151 = getelementptr inbounds %FloError, ptr %144, i64 0, i32 1
  store ptr %140, ptr %memberidx2.i.i151, align 8
  %memberidx.i.i152 = getelementptr inbounds %Array_FloError_, ptr %143, i64 0, i32 1
  %145 = load i64, ptr %memberidx.i.i152, align 4
  %146 = add i64 %145, 1
  %memberidx.i.i.i153 = getelementptr inbounds %Array_FloError_, ptr %143, i64 0, i32 2
  %147 = load i64, ptr %memberidx.i.i.i153, align 4
  %148 = icmp slt i64 %147, %146
  %.pre210 = load ptr, ptr %143, align 8
  br i1 %148, label %while.body.i.i.i155, label %TypeChecker_error.exit156

while.body.i.i.i155:                              ; preds = %if.entry40, %while.body.i.i.i155
  %149 = phi ptr [ %153, %while.body.i.i.i155 ], [ %.pre210, %if.entry40 ]
  %150 = phi i64 [ %154, %while.body.i.i.i155 ], [ %147, %if.entry40 ]
  %151 = shl nuw i64 %150, 1
  store i64 %151, ptr %memberidx.i.i.i153, align 4
  %152 = shl i64 %150, 4
  %153 = call ptr @realloc(ptr %149, i64 %152)
  store ptr %153, ptr %143, align 8
  %154 = load i64, ptr %memberidx.i.i.i153, align 4
  %155 = icmp slt i64 %154, %146
  br i1 %155, label %while.body.i.i.i155, label %TypeChecker_error.exit156.loopexit

TypeChecker_error.exit156.loopexit:               ; preds = %while.body.i.i.i155
  %.pre211 = load i64, ptr %memberidx.i.i152, align 4
  %.pre213 = add nsw i64 %.pre211, 1
  br label %TypeChecker_error.exit156

TypeChecker_error.exit156:                        ; preds = %if.entry40, %TypeChecker_error.exit156.loopexit
  %.pre-phi = phi i64 [ %.pre213, %TypeChecker_error.exit156.loopexit ], [ %146, %if.entry40 ]
  %156 = phi ptr [ %153, %TypeChecker_error.exit156.loopexit ], [ %.pre210, %if.entry40 ]
  %157 = phi i64 [ %.pre211, %TypeChecker_error.exit156.loopexit ], [ %145, %if.entry40 ]
  store i64 %.pre-phi, ptr %memberidx.i.i152, align 4
  %158 = getelementptr inbounds ptr, ptr %156, i64 %157
  store ptr %144, ptr %158, align 8
  br label %common.ret

ifend42:                                          ; preds = %if.entry35
  %memberidx46 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %24, ptr %memberidx46, align 8
  br label %common.ret

if.entry49:                                       ; preds = %ifend30, %ifend30, %ifend30, %ifend30
  %memberidx53 = getelementptr inbounds %Array_Expression_, ptr %21, i64 0, i32 1
  %159 = load i64, ptr %memberidx53, align 4
  %.not117 = icmp eq i64 %159, 3
  br i1 %.not117, label %ifend56, label %if.entry54

if.entry54:                                       ; preds = %if.entry49
  %160 = alloca ptr, align 8
  %161 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %160, ptr nonnull @219, i64 %159)
  %162 = load ptr, ptr %160, align 8
  %163 = tail call ptr @malloc(i32 24)
  store ptr %162, ptr %163, align 8
  %memberidx1.i157 = getelementptr inbounds %String, ptr %163, i64 0, i32 1
  store i64 %161, ptr %memberidx1.i157, align 4
  %memberidx2.i158 = getelementptr inbounds %String, ptr %163, i64 0, i32 2
  store i64 %161, ptr %memberidx2.i158, align 4
  %164 = load ptr, ptr %2, align 8
  %memberidx.i159 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %165 = load ptr, ptr %memberidx.i159, align 8
  %memberidx1.i160 = getelementptr inbounds %Compiler, ptr %165, i64 0, i32 5
  %166 = load ptr, ptr %memberidx1.i160, align 8
  %167 = call ptr @malloc(i32 24)
  store i64 4, ptr %167, align 4
  %memberidx1.i.i161 = getelementptr inbounds %FloError, ptr %167, i64 0, i32 2
  store ptr %164, ptr %memberidx1.i.i161, align 8
  %memberidx2.i.i162 = getelementptr inbounds %FloError, ptr %167, i64 0, i32 1
  store ptr %163, ptr %memberidx2.i.i162, align 8
  %memberidx.i.i163 = getelementptr inbounds %Array_FloError_, ptr %166, i64 0, i32 1
  %168 = load i64, ptr %memberidx.i.i163, align 4
  %169 = add i64 %168, 1
  %memberidx.i.i.i164 = getelementptr inbounds %Array_FloError_, ptr %166, i64 0, i32 2
  %170 = load i64, ptr %memberidx.i.i.i164, align 4
  %171 = icmp slt i64 %170, %169
  %.pre207 = load ptr, ptr %166, align 8
  br i1 %171, label %while.body.i.i.i166, label %TypeChecker_error.exit167

while.body.i.i.i166:                              ; preds = %if.entry54, %while.body.i.i.i166
  %172 = phi ptr [ %176, %while.body.i.i.i166 ], [ %.pre207, %if.entry54 ]
  %173 = phi i64 [ %177, %while.body.i.i.i166 ], [ %170, %if.entry54 ]
  %174 = shl nuw i64 %173, 1
  store i64 %174, ptr %memberidx.i.i.i164, align 4
  %175 = shl i64 %173, 4
  %176 = call ptr @realloc(ptr %172, i64 %175)
  store ptr %176, ptr %166, align 8
  %177 = load i64, ptr %memberidx.i.i.i164, align 4
  %178 = icmp slt i64 %177, %169
  br i1 %178, label %while.body.i.i.i166, label %TypeChecker_error.exit167.loopexit

TypeChecker_error.exit167.loopexit:               ; preds = %while.body.i.i.i166
  %.pre208 = load i64, ptr %memberidx.i.i163, align 4
  %.pre214 = add nsw i64 %.pre208, 1
  br label %TypeChecker_error.exit167

TypeChecker_error.exit167:                        ; preds = %if.entry54, %TypeChecker_error.exit167.loopexit
  %.pre-phi215 = phi i64 [ %.pre214, %TypeChecker_error.exit167.loopexit ], [ %169, %if.entry54 ]
  %179 = phi ptr [ %176, %TypeChecker_error.exit167.loopexit ], [ %.pre207, %if.entry54 ]
  %180 = phi i64 [ %.pre208, %TypeChecker_error.exit167.loopexit ], [ %168, %if.entry54 ]
  store i64 %.pre-phi215, ptr %memberidx.i.i163, align 4
  %181 = getelementptr inbounds ptr, ptr %179, i64 %180
  store ptr %167, ptr %181, align 8
  br label %common.ret

ifend56:                                          ; preds = %if.entry49
  %memberidx62 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %24, ptr %memberidx62, align 8
  br i1 %7, label %if.entry63, label %common.ret

if.entry63:                                       ; preds = %ifend56
  %182 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %182, align 4
  %memberidx.i168 = getelementptr inbounds %IntType, ptr %182, i64 0, i32 1
  store i1 true, ptr %memberidx.i168, align 1
  store ptr %182, ptr %memberidx62, align 8
  br label %common.ret
}

define internal fastcc noalias ptr @dump_type(ptr nocapture readonly %0, i1 %1) unnamed_addr {
  %3 = load i64, ptr %0, align 4
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %if.entry, label %ifend

common.ret:                                       ; preds = %true_block, %false_block, %ifend55, %if.entry53, %if.entry49, %if.entry45, %if.entry41, %if.entry37, %if.entry33, %if.entry29, %if.entry25, %if.entry21, %if.entry17, %if.entry4, %if.entry
  %common.ret.op = phi ptr [ %6, %if.entry ], [ %13, %if.entry4 ], [ %30, %if.entry17 ], [ %38, %if.entry21 ], [ %46, %if.entry25 ], [ %54, %if.entry29 ], [ %62, %if.entry33 ], [ %70, %if.entry37 ], [ %72, %if.entry41 ], [ %74, %if.entry45 ], [ %76, %if.entry49 ], [ %78, %if.entry53 ], [ %80, %ifend55 ], [ %20, %true_block ], [ %22, %false_block ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %5 = tail call ptr @malloc(i32 4)
  store i32 1819242338, ptr %5, align 8
  %6 = tail call ptr @malloc(i32 24)
  store ptr %5, ptr %6, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %6, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %2
  %7 = add i64 %3, -1
  %8 = icmp ult i64 %7, 7
  br i1 %8, label %if.entry1, label %ifend3

if.entry1:                                        ; preds = %ifend
  br i1 %1, label %if.entry4, label %ifend6

ifend3:                                           ; preds = %ifend11, %ifend
  %9 = phi i64 [ %18, %ifend11 ], [ %3, %ifend ]
  switch i64 %9, label %ifend55 [
    i64 8, label %if.entry41
    i64 9, label %if.entry45
    i64 10, label %if.entry49
    i64 17, label %if.entry53
  ]

if.entry4:                                        ; preds = %if.entry1
  %10 = alloca ptr, align 8
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %10, ptr nonnull @87, i64 64)
  %12 = load ptr, ptr %10, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  store i64 %11, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx2.i, align 4
  br label %common.ret

ifend6:                                           ; preds = %if.entry1
  %memberidx7 = getelementptr inbounds %IntType, ptr %0, i64 0, i32 1
  %14 = load i1, ptr %memberidx7, align 1
  %15 = icmp eq i64 %3, 6
  br i1 %15, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend6
  br i1 %14, label %true_block, label %false_block

ifend11:                                          ; preds = %ifend6
  %16 = tail call ptr @malloc(i32 1)
  %. = select i1 %14, i8 105, i8 117
  store i8 %., ptr %16, align 8
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  %memberidx1.i.i83 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i83, align 4
  %memberidx2.i.i84 = getelementptr inbounds %String, ptr %17, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i84, align 4
  %18 = load i64, ptr %0, align 4
  switch i64 %18, label %ifend3 [
    i64 1, label %if.entry17
    i64 2, label %if.entry21
    i64 3, label %if.entry25
    i64 4, label %if.entry29
    i64 5, label %if.entry33
    i64 7, label %if.entry37
  ]

true_block:                                       ; preds = %if.entry9
  %19 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %19, ptr noundef nonnull align 8 dereferenceable(3) @88, i64 3, i1 false)
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i.i77 = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i77, align 4
  %memberidx2.i.i78 = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i78, align 4
  br label %common.ret

false_block:                                      ; preds = %if.entry9
  %21 = tail call ptr @malloc(i32 4)
  store i32 1953393013, ptr %21, align 8
  %22 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  %memberidx1.i.i79 = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i79, align 4
  %memberidx2.i.i80 = getelementptr inbounds %String, ptr %22, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i80, align 4
  br label %common.ret

if.entry17:                                       ; preds = %ifend11
  %memberidx.i = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %23 = tail call ptr @malloc(i32 2)
  %24 = load ptr, ptr %17, align 8
  %25 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 8 %24, i64 %25, i1 false)
  %26 = getelementptr inbounds i8, ptr %23, i64 %25
  store i8 0, ptr %26, align 1
  %27 = alloca ptr, align 8
  %28 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %27, ptr nonnull @89, ptr %23)
  %29 = load ptr, ptr %27, align 8
  %30 = tail call ptr @malloc(i32 24)
  store ptr %29, ptr %30, align 8
  %memberidx1.i85 = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  store i64 %28, ptr %memberidx1.i85, align 4
  %memberidx2.i86 = getelementptr inbounds %String, ptr %30, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i86, align 4
  tail call void @free(ptr %23)
  br label %common.ret

if.entry21:                                       ; preds = %ifend11
  %memberidx.i87 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %31 = tail call ptr @malloc(i32 2)
  %32 = load ptr, ptr %17, align 8
  %33 = load i64, ptr %memberidx.i87, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %31, ptr align 8 %32, i64 %33, i1 false)
  %34 = getelementptr inbounds i8, ptr %31, i64 %33
  store i8 0, ptr %34, align 1
  %35 = alloca ptr, align 8
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %35, ptr nonnull @90, ptr %31)
  %37 = load ptr, ptr %35, align 8
  %38 = tail call ptr @malloc(i32 24)
  store ptr %37, ptr %38, align 8
  %memberidx1.i88 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  store i64 %36, ptr %memberidx1.i88, align 4
  %memberidx2.i89 = getelementptr inbounds %String, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx2.i89, align 4
  tail call void @free(ptr %31)
  br label %common.ret

if.entry25:                                       ; preds = %ifend11
  %memberidx.i90 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %39 = tail call ptr @malloc(i32 2)
  %40 = load ptr, ptr %17, align 8
  %41 = load i64, ptr %memberidx.i90, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %40, i64 %41, i1 false)
  %42 = getelementptr inbounds i8, ptr %39, i64 %41
  store i8 0, ptr %42, align 1
  %43 = alloca ptr, align 8
  %44 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %43, ptr nonnull @91, ptr %39)
  %45 = load ptr, ptr %43, align 8
  %46 = tail call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i91 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 %44, ptr %memberidx1.i91, align 4
  %memberidx2.i92 = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 %44, ptr %memberidx2.i92, align 4
  tail call void @free(ptr %39)
  br label %common.ret

if.entry29:                                       ; preds = %ifend11
  %memberidx.i93 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %47 = tail call ptr @malloc(i32 2)
  %48 = load ptr, ptr %17, align 8
  %49 = load i64, ptr %memberidx.i93, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %48, i64 %49, i1 false)
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  store i8 0, ptr %50, align 1
  %51 = alloca ptr, align 8
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %51, ptr nonnull @92, ptr %47)
  %53 = load ptr, ptr %51, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i94 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %52, ptr %memberidx1.i94, align 4
  %memberidx2.i95 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx2.i95, align 4
  tail call void @free(ptr %47)
  br label %common.ret

if.entry33:                                       ; preds = %ifend11
  %memberidx.i96 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %55 = tail call ptr @malloc(i32 2)
  %56 = load ptr, ptr %17, align 8
  %57 = load i64, ptr %memberidx.i96, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %55, ptr align 8 %56, i64 %57, i1 false)
  %58 = getelementptr inbounds i8, ptr %55, i64 %57
  store i8 0, ptr %58, align 1
  %59 = alloca ptr, align 8
  %60 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %59, ptr nonnull @93, ptr %55)
  %61 = load ptr, ptr %59, align 8
  %62 = tail call ptr @malloc(i32 24)
  store ptr %61, ptr %62, align 8
  %memberidx1.i97 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  store i64 %60, ptr %memberidx1.i97, align 4
  %memberidx2.i98 = getelementptr inbounds %String, ptr %62, i64 0, i32 2
  store i64 %60, ptr %memberidx2.i98, align 4
  tail call void @free(ptr %55)
  br label %common.ret

if.entry37:                                       ; preds = %ifend11
  %memberidx.i99 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %63 = tail call ptr @malloc(i32 2)
  %64 = load ptr, ptr %17, align 8
  %65 = load i64, ptr %memberidx.i99, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %63, ptr align 8 %64, i64 %65, i1 false)
  %66 = getelementptr inbounds i8, ptr %63, i64 %65
  store i8 0, ptr %66, align 1
  %67 = alloca ptr, align 8
  %68 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %67, ptr nonnull @94, ptr %63)
  %69 = load ptr, ptr %67, align 8
  %70 = tail call ptr @malloc(i32 24)
  store ptr %69, ptr %70, align 8
  %memberidx1.i100 = getelementptr inbounds %String, ptr %70, i64 0, i32 1
  store i64 %68, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %String, ptr %70, i64 0, i32 2
  store i64 %68, ptr %memberidx2.i101, align 4
  tail call void @free(ptr %63)
  br label %common.ret

if.entry41:                                       ; preds = %ifend3
  %71 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %71, ptr noundef nonnull align 8 dereferenceable(3) @95, i64 3, i1 false)
  %72 = tail call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i.i104 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i104, align 4
  %memberidx2.i.i105 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i105, align 4
  br label %common.ret

if.entry45:                                       ; preds = %ifend3
  %73 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %73, ptr noundef nonnull align 8 dereferenceable(3) @96, i64 3, i1 false)
  %74 = tail call ptr @malloc(i32 24)
  store ptr %73, ptr %74, align 8
  %memberidx1.i.i106 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i106, align 4
  %memberidx2.i.i107 = getelementptr inbounds %String, ptr %74, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i107, align 4
  br label %common.ret

if.entry49:                                       ; preds = %ifend3
  %75 = tail call ptr @malloc(i32 4)
  store i32 1684631414, ptr %75, align 8
  %76 = tail call ptr @malloc(i32 24)
  store ptr %75, ptr %76, align 8
  %memberidx1.i.i108 = getelementptr inbounds %String, ptr %76, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i108, align 4
  %memberidx2.i.i109 = getelementptr inbounds %String, ptr %76, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i109, align 4
  br label %common.ret

if.entry53:                                       ; preds = %ifend3
  %77 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %77, ptr noundef nonnull align 8 dereferenceable(6) @97, i64 6, i1 false)
  %78 = tail call ptr @malloc(i32 24)
  store ptr %77, ptr %78, align 8
  %memberidx1.i.i102 = getelementptr inbounds %String, ptr %78, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i102, align 4
  %memberidx2.i.i103 = getelementptr inbounds %String, ptr %78, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i103, align 4
  br label %common.ret

ifend55:                                          ; preds = %ifend3
  %79 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %79, ptr noundef nonnull align 8 dereferenceable(7) @98, i64 7, i1 false)
  %80 = tail call ptr @malloc(i32 24)
  store ptr %79, ptr %80, align 8
  %memberidx1.i.i75 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i75, align 4
  %memberidx2.i.i76 = getelementptr inbounds %String, ptr %80, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i76, align 4
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind readonly
define internal fastcc i64 @evaluate_const_int_expression(ptr %0, ptr nocapture readonly %1) unnamed_addr #8 {
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry12, %2
  %accumulator.tr.ph = phi i64 [ %11, %if.entry12 ], [ 0, %2 ]
  %.tr157.ph = phi ptr [ %10, %if.entry12 ], [ %1, %2 ]
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer, %if.entry86
  %.tr157 = phi ptr [ %74, %if.entry86 ], [ %.tr157.ph, %tailrecurse.outer ]
  %memberidx = getelementptr inbounds %Expression, ptr %.tr157, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry3
    i64 9, label %if.entry8
    i64 10, label %if.entry72
    i64 8, label %if.entry86
  ]

common.ret169:                                    ; preds = %if.entry81, %if.entry76, %if.entry66, %if.entry60, %if.entry54, %if.entry48, %if.entry42, %if.entry36, %if.entry30, %if.entry24, %if.entry18, %common.ret
  %common.ret169.op = phi i64 [ %accumulator.ret.tr, %common.ret ], [ %accumulator.ret.tr158, %if.entry18 ], [ %accumulator.ret.tr159, %if.entry24 ], [ %accumulator.ret.tr160, %if.entry30 ], [ %accumulator.ret.tr161, %if.entry36 ], [ %accumulator.ret.tr162, %if.entry42 ], [ %accumulator.ret.tr163, %if.entry48 ], [ %accumulator.ret.tr164, %if.entry54 ], [ %accumulator.ret.tr165, %if.entry60 ], [ %accumulator.ret.tr166, %if.entry66 ], [ %accumulator.ret.tr167, %if.entry76 ], [ %accumulator.ret.tr168, %if.entry81 ]
  ret i64 %common.ret169.op

common.ret:                                       ; preds = %if.entry8, %tailrecurse, %if.entry72, %if.entry3, %if.entry
  %common.ret.op = phi i64 [ %4, %if.entry ], [ %6, %if.entry3 ], [ -99999999, %if.entry72 ], [ -99999999, %tailrecurse ], [ -99999999, %if.entry8 ]
  %accumulator.ret.tr = add nsw i64 %common.ret.op, %accumulator.tr.ph
  br label %common.ret169

if.entry:                                         ; preds = %tailrecurse
  %memberidx1 = getelementptr inbounds %IntExpression, ptr %.tr157, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  br label %common.ret

if.entry3:                                        ; preds = %tailrecurse
  %memberidx6 = getelementptr inbounds %FloatExpression, ptr %.tr157, i64 0, i32 4
  %5 = load double, ptr %memberidx6, align 8
  %6 = fptosi double %5 to i64
  br label %common.ret

if.entry8:                                        ; preds = %tailrecurse
  %memberidx11 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 5
  %7 = load i64, ptr %memberidx11, align 4
  switch i64 %7, label %common.ret [
    i64 1, label %if.entry12
    i64 2, label %if.entry18
    i64 3, label %if.entry24
    i64 4, label %if.entry30
    i64 5, label %if.entry36
    i64 13, label %if.entry42
    i64 14, label %if.entry48
    i64 15, label %if.entry54
    i64 16, label %if.entry60
    i64 17, label %if.entry66
  ]

if.entry12:                                       ; preds = %if.entry8
  %memberidx15 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %8 = load ptr, ptr %memberidx15, align 8
  %9 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %8)
  %memberidx16 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %10 = load ptr, ptr %memberidx16, align 8
  %11 = add nsw i64 %9, %accumulator.tr.ph
  br label %tailrecurse.outer

if.entry18:                                       ; preds = %if.entry8
  %memberidx21 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %12 = load ptr, ptr %memberidx21, align 8
  %13 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %12)
  %memberidx22 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %14 = load ptr, ptr %memberidx22, align 8
  %15 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %14)
  %16 = add i64 %13, %accumulator.tr.ph
  %accumulator.ret.tr158 = sub i64 %16, %15
  br label %common.ret169

if.entry24:                                       ; preds = %if.entry8
  %memberidx27 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %17 = load ptr, ptr %memberidx27, align 8
  %18 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %17)
  %memberidx28 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %19 = load ptr, ptr %memberidx28, align 8
  %20 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %19)
  %21 = mul nsw i64 %20, %18
  %accumulator.ret.tr159 = add nsw i64 %21, %accumulator.tr.ph
  br label %common.ret169

if.entry30:                                       ; preds = %if.entry8
  %memberidx33 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %22 = load ptr, ptr %memberidx33, align 8
  %23 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %22)
  %memberidx34 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %24 = load ptr, ptr %memberidx34, align 8
  %25 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %24)
  %26 = sdiv i64 %23, %25
  %accumulator.ret.tr160 = add nsw i64 %26, %accumulator.tr.ph
  br label %common.ret169

if.entry36:                                       ; preds = %if.entry8
  %memberidx39 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %27 = load ptr, ptr %memberidx39, align 8
  %28 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %27)
  %memberidx40 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %29 = load ptr, ptr %memberidx40, align 8
  %30 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %29)
  %31 = srem i64 %28, %30
  %accumulator.ret.tr161 = add nsw i64 %31, %accumulator.tr.ph
  br label %common.ret169

if.entry42:                                       ; preds = %if.entry8
  %memberidx45 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %32 = load ptr, ptr %memberidx45, align 8
  %33 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %32)
  %memberidx46 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %34 = load ptr, ptr %memberidx46, align 8
  %35 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %34)
  %36 = shl i64 %33, %35
  %accumulator.ret.tr162 = add nsw i64 %36, %accumulator.tr.ph
  br label %common.ret169

if.entry48:                                       ; preds = %if.entry8
  %memberidx51 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %37 = load ptr, ptr %memberidx51, align 8
  %38 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %37)
  %memberidx52 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %39 = load ptr, ptr %memberidx52, align 8
  %40 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %39)
  %41 = lshr i64 %38, %40
  %accumulator.ret.tr163 = add nsw i64 %41, %accumulator.tr.ph
  br label %common.ret169

if.entry54:                                       ; preds = %if.entry8
  %memberidx57 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %42 = load ptr, ptr %memberidx57, align 8
  %43 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %42)
  %memberidx58 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %44 = load ptr, ptr %memberidx58, align 8
  %45 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %44)
  %46 = or i64 %45, %43
  %accumulator.ret.tr164 = add nsw i64 %46, %accumulator.tr.ph
  br label %common.ret169

if.entry60:                                       ; preds = %if.entry8
  %memberidx63 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %47 = load ptr, ptr %memberidx63, align 8
  %48 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %47)
  %memberidx64 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %49 = load ptr, ptr %memberidx64, align 8
  %50 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %49)
  %51 = and i64 %50, %48
  %accumulator.ret.tr165 = add nsw i64 %51, %accumulator.tr.ph
  br label %common.ret169

if.entry66:                                       ; preds = %if.entry8
  %memberidx69 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %52 = load ptr, ptr %memberidx69, align 8
  %53 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %52)
  %memberidx70 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %54 = load ptr, ptr %memberidx70, align 8
  %55 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %54)
  %56 = xor i64 %55, %53
  %accumulator.ret.tr166 = add nsw i64 %56, %accumulator.tr.ph
  br label %common.ret169

if.entry72:                                       ; preds = %tailrecurse
  %memberidx75 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 4
  %57 = load i64, ptr %memberidx75, align 4
  switch i64 %57, label %common.ret [
    i64 6, label %if.entry76
    i64 7, label %if.entry81
  ]

if.entry76:                                       ; preds = %if.entry72
  %memberidx79 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 5
  %58 = load ptr, ptr %memberidx79, align 8
  %59 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %58)
  %accumulator.ret.tr167 = sub i64 %accumulator.tr.ph, %59
  br label %common.ret169

if.entry81:                                       ; preds = %if.entry72
  %memberidx84 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 5
  %60 = load ptr, ptr %memberidx84, align 8
  %61 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %60)
  %62 = xor i64 %61, -1
  %accumulator.ret.tr168 = add nsw i64 %accumulator.tr.ph, %62
  br label %common.ret169

if.entry86:                                       ; preds = %tailrecurse
  %memberidx89 = getelementptr inbounds %VarAccessExpression, ptr %.tr157, i64 0, i32 4
  %63 = load ptr, ptr %memberidx89, align 8
  %64 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx1.i, align 4
  %66 = load ptr, ptr %64, align 8
  %67 = getelementptr inbounds ptr, ptr %66, i64 %65
  %68 = load ptr, ptr %67, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %68, i64 0, i32 2
  %69 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 2
  %70 = load i64, ptr %memberidx3.i, align 4
  %71 = load ptr, ptr %69, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 %70
  %73 = load ptr, ptr %72, align 8
  %memberidx90 = getelementptr inbounds %Const, ptr %73, i64 0, i32 2
  %74 = load ptr, ptr %memberidx90, align 8
  br label %tailrecurse
}

define internal fastcc i1 @is_operator_overload_name(ptr nocapture readonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %2, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %3, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %3, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %4, 6
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %1
  %5 = load ptr, ptr %0, align 8
  %6 = tail call i64 @memcmp(ptr %5, ptr nonnull %2, i64 6)
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend.i359, %ifend87, %ifend.i351, %ifend.i343, %ifend.i335, %ifend.i327, %ifend.i319, %ifend.i311, %ifend.i303, %ifend.i295, %ifend.i287, %ifend.i279, %ifend.i271, %ifend.i263, %ifend.i255, %ifend.i247, %ifend.i239, %ifend.i231, %ifend.i223, %ifend.i215, %ifend.i207, %ifend.i199, %ifend.i191, %ifend.i183, %ifend.i175, %ifend.i167, %ifend.i159, %ifend.i151, %ifend.i143, %ifend.i135, %ifend.i127, %ifend.i
  %common.ret.op = phi i1 [ true, %ifend.i ], [ true, %ifend.i127 ], [ true, %ifend.i135 ], [ true, %ifend.i143 ], [ true, %ifend.i151 ], [ true, %ifend.i159 ], [ true, %ifend.i167 ], [ true, %ifend.i175 ], [ true, %ifend.i183 ], [ true, %ifend.i191 ], [ true, %ifend.i199 ], [ true, %ifend.i207 ], [ true, %ifend.i215 ], [ true, %ifend.i223 ], [ true, %ifend.i231 ], [ true, %ifend.i239 ], [ true, %ifend.i247 ], [ true, %ifend.i255 ], [ true, %ifend.i263 ], [ true, %ifend.i271 ], [ true, %ifend.i279 ], [ true, %ifend.i287 ], [ true, %ifend.i295 ], [ true, %ifend.i303 ], [ true, %ifend.i311 ], [ true, %ifend.i319 ], [ true, %ifend.i327 ], [ true, %ifend.i335 ], [ true, %ifend.i343 ], [ true, %ifend.i351 ], [ %187, %ifend.i359 ], [ false, %ifend87 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %1, %ifend.i
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @115, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  %memberidx1.i.i121 = getelementptr inbounds %String, ptr %9, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i121, align 4
  %memberidx2.i.i122 = getelementptr inbounds %String, ptr %9, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i122, align 4
  %10 = load i64, ptr %memberidx.i, align 4
  %.not.i125 = icmp eq i64 %10, 7
  br i1 %.not.i125, label %ifend.i127, label %ifend3

ifend.i127:                                       ; preds = %ifend
  %11 = load ptr, ptr %0, align 8
  %12 = tail call i64 @memcmp(ptr %11, ptr nonnull %8, i64 7)
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %common.ret, label %ifend3

ifend3:                                           ; preds = %ifend, %ifend.i127
  %14 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %14, ptr noundef nonnull align 8 dereferenceable(7) @116, i64 7, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i129 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i129, align 4
  %memberidx2.i.i130 = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i130, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i133 = icmp eq i64 %16, 7
  br i1 %.not.i133, label %ifend.i135, label %ifend6

ifend.i135:                                       ; preds = %ifend3
  %17 = load ptr, ptr %0, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 7)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %common.ret, label %ifend6

ifend6:                                           ; preds = %ifend3, %ifend.i135
  %20 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %20, ptr noundef nonnull align 8 dereferenceable(7) @117, i64 7, i1 false)
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  %memberidx1.i.i137 = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i137, align 4
  %memberidx2.i.i138 = getelementptr inbounds %String, ptr %21, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i138, align 4
  %22 = load i64, ptr %memberidx.i, align 4
  %.not.i141 = icmp eq i64 %22, 7
  br i1 %.not.i141, label %ifend.i143, label %ifend9

ifend.i143:                                       ; preds = %ifend6
  %23 = load ptr, ptr %0, align 8
  %24 = tail call i64 @memcmp(ptr %23, ptr nonnull %20, i64 7)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend6, %ifend.i143
  %26 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %26, ptr noundef nonnull align 8 dereferenceable(7) @118, i64 7, i1 false)
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i145 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i145, align 4
  %memberidx2.i.i146 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i146, align 4
  %28 = load i64, ptr %memberidx.i, align 4
  %.not.i149 = icmp eq i64 %28, 7
  br i1 %.not.i149, label %ifend.i151, label %ifend12

ifend.i151:                                       ; preds = %ifend9
  %29 = load ptr, ptr %0, align 8
  %30 = tail call i64 @memcmp(ptr %29, ptr nonnull %26, i64 7)
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %common.ret, label %ifend12

ifend12:                                          ; preds = %ifend9, %ifend.i151
  %32 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %32, ptr noundef nonnull align 8 dereferenceable(6) @119, i64 6, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  %memberidx1.i.i153 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i153, align 4
  %memberidx2.i.i154 = getelementptr inbounds %String, ptr %33, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i154, align 4
  %34 = load i64, ptr %memberidx.i, align 4
  %.not.i157 = icmp eq i64 %34, 6
  br i1 %.not.i157, label %ifend.i159, label %ifend15

ifend.i159:                                       ; preds = %ifend12
  %35 = load ptr, ptr %0, align 8
  %36 = tail call i64 @memcmp(ptr %35, ptr nonnull %32, i64 6)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %common.ret, label %ifend15

ifend15:                                          ; preds = %ifend12, %ifend.i159
  %38 = tail call ptr @malloc(i32 8)
  store i64 6872318640199393119, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i.i161 = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i161, align 4
  %memberidx2.i.i162 = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i162, align 4
  %40 = load i64, ptr %memberidx.i, align 4
  %.not.i165 = icmp eq i64 %40, 8
  br i1 %.not.i165, label %ifend.i167, label %ifend18

ifend.i167:                                       ; preds = %ifend15
  %41 = load ptr, ptr %0, align 8
  %42 = tail call i64 @memcmp(ptr %41, ptr nonnull %38, i64 8)
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %common.ret, label %ifend18

ifend18:                                          ; preds = %ifend15, %ifend.i167
  %44 = tail call ptr @malloc(i32 8)
  store i64 6872318631895850847, ptr %44, align 8
  %45 = tail call ptr @malloc(i32 24)
  store ptr %44, ptr %45, align 8
  %memberidx1.i.i169 = getelementptr inbounds %String, ptr %45, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i169, align 4
  %memberidx2.i.i170 = getelementptr inbounds %String, ptr %45, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i170, align 4
  %46 = load i64, ptr %memberidx.i, align 4
  %.not.i173 = icmp eq i64 %46, 8
  br i1 %.not.i173, label %ifend.i175, label %ifend21

ifend.i175:                                       ; preds = %ifend18
  %47 = load ptr, ptr %0, align 8
  %48 = tail call i64 @memcmp(ptr %47, ptr nonnull %44, i64 8)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %common.ret, label %ifend21

ifend21:                                          ; preds = %ifend18, %ifend.i175
  %50 = tail call ptr @malloc(i32 8)
  store i64 6872318674845130591, ptr %50, align 8
  %51 = tail call ptr @malloc(i32 24)
  store ptr %50, ptr %51, align 8
  %memberidx1.i.i177 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i177, align 4
  %memberidx2.i.i178 = getelementptr inbounds %String, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i178, align 4
  %52 = load i64, ptr %memberidx.i, align 4
  %.not.i181 = icmp eq i64 %52, 8
  br i1 %.not.i181, label %ifend.i183, label %ifend24

ifend.i183:                                       ; preds = %ifend21
  %53 = load ptr, ptr %0, align 8
  %54 = tail call i64 @memcmp(ptr %53, ptr nonnull %50, i64 8)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend21, %ifend.i183
  %56 = tail call ptr @malloc(i32 8)
  store i64 6872318717592887135, ptr %56, align 8
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  %memberidx1.i.i185 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i185, align 4
  %memberidx2.i.i186 = getelementptr inbounds %String, ptr %57, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i186, align 4
  %58 = load i64, ptr %memberidx.i, align 4
  %.not.i189 = icmp eq i64 %58, 8
  br i1 %.not.i189, label %ifend.i191, label %ifend27

ifend.i191:                                       ; preds = %ifend24
  %59 = load ptr, ptr %0, align 8
  %60 = tail call i64 @memcmp(ptr %59, ptr nonnull %56, i64 8)
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend24, %ifend.i191
  %62 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %62, ptr noundef nonnull align 8 dereferenceable(7) @120, i64 7, i1 false)
  %63 = tail call ptr @malloc(i32 24)
  store ptr %62, ptr %63, align 8
  %memberidx1.i.i193 = getelementptr inbounds %String, ptr %63, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i193, align 4
  %memberidx2.i.i194 = getelementptr inbounds %String, ptr %63, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i194, align 4
  %64 = load i64, ptr %memberidx.i, align 4
  %.not.i197 = icmp eq i64 %64, 7
  br i1 %.not.i197, label %ifend.i199, label %ifend30

ifend.i199:                                       ; preds = %ifend27
  %65 = load ptr, ptr %0, align 8
  %66 = tail call i64 @memcmp(ptr %65, ptr nonnull %62, i64 7)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %common.ret, label %ifend30

ifend30:                                          ; preds = %ifend27, %ifend.i199
  %68 = tail call ptr @malloc(i32 8)
  store i64 6872318640367165279, ptr %68, align 8
  %69 = tail call ptr @malloc(i32 24)
  store ptr %68, ptr %69, align 8
  %memberidx1.i.i201 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i201, align 4
  %memberidx2.i.i202 = getelementptr inbounds %String, ptr %69, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i202, align 4
  %70 = load i64, ptr %memberidx.i, align 4
  %.not.i205 = icmp eq i64 %70, 8
  br i1 %.not.i205, label %ifend.i207, label %ifend33

ifend.i207:                                       ; preds = %ifend30
  %71 = load ptr, ptr %0, align 8
  %72 = tail call i64 @memcmp(ptr %71, ptr nonnull %68, i64 8)
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %common.ret, label %ifend33

ifend33:                                          ; preds = %ifend30, %ifend.i207
  %74 = tail call ptr @malloc(i32 8)
  store i64 6872318700514991967, ptr %74, align 8
  %75 = tail call ptr @malloc(i32 24)
  store ptr %74, ptr %75, align 8
  %memberidx1.i.i209 = getelementptr inbounds %String, ptr %75, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i209, align 4
  %memberidx2.i.i210 = getelementptr inbounds %String, ptr %75, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i210, align 4
  %76 = load i64, ptr %memberidx.i, align 4
  %.not.i213 = icmp eq i64 %76, 8
  br i1 %.not.i213, label %ifend.i215, label %ifend36

ifend.i215:                                       ; preds = %ifend33
  %77 = load ptr, ptr %0, align 8
  %78 = tail call i64 @memcmp(ptr %77, ptr nonnull %74, i64 8)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %common.ret, label %ifend36

ifend36:                                          ; preds = %ifend33, %ifend.i215
  %80 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %80, ptr noundef nonnull align 8 dereferenceable(11) @121, i64 11, i1 false)
  %81 = tail call ptr @malloc(i32 24)
  store ptr %80, ptr %81, align 8
  %memberidx1.i.i217 = getelementptr inbounds %String, ptr %81, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i217, align 4
  %memberidx2.i.i218 = getelementptr inbounds %String, ptr %81, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i218, align 4
  %82 = load i64, ptr %memberidx.i, align 4
  %.not.i221 = icmp eq i64 %82, 11
  br i1 %.not.i221, label %ifend.i223, label %ifend39

ifend.i223:                                       ; preds = %ifend36
  %83 = load ptr, ptr %0, align 8
  %84 = tail call i64 @memcmp(ptr %83, ptr nonnull %80, i64 11)
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %common.ret, label %ifend39

ifend39:                                          ; preds = %ifend36, %ifend.i223
  %86 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %86, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %87 = tail call ptr @malloc(i32 24)
  store ptr %86, ptr %87, align 8
  %memberidx1.i.i225 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i225, align 4
  %memberidx2.i.i226 = getelementptr inbounds %String, ptr %87, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i226, align 4
  %88 = load i64, ptr %memberidx.i, align 4
  %.not.i229 = icmp eq i64 %88, 11
  br i1 %.not.i229, label %ifend.i231, label %ifend42

ifend.i231:                                       ; preds = %ifend39
  %89 = load ptr, ptr %0, align 8
  %90 = tail call i64 @memcmp(ptr %89, ptr nonnull %86, i64 11)
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %common.ret, label %ifend42

ifend42:                                          ; preds = %ifend39, %ifend.i231
  %92 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %92, ptr noundef nonnull align 8 dereferenceable(6) @123, i64 6, i1 false)
  %93 = tail call ptr @malloc(i32 24)
  store ptr %92, ptr %93, align 8
  %memberidx1.i.i233 = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i233, align 4
  %memberidx2.i.i234 = getelementptr inbounds %String, ptr %93, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i234, align 4
  %94 = load i64, ptr %memberidx.i, align 4
  %.not.i237 = icmp eq i64 %94, 6
  br i1 %.not.i237, label %ifend.i239, label %ifend45

ifend.i239:                                       ; preds = %ifend42
  %95 = load ptr, ptr %0, align 8
  %96 = tail call i64 @memcmp(ptr %95, ptr nonnull %92, i64 6)
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %common.ret, label %ifend45

ifend45:                                          ; preds = %ifend42, %ifend.i239
  %98 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %98, ptr noundef nonnull align 8 dereferenceable(6) @124, i64 6, i1 false)
  %99 = tail call ptr @malloc(i32 24)
  store ptr %98, ptr %99, align 8
  %memberidx1.i.i241 = getelementptr inbounds %String, ptr %99, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i241, align 4
  %memberidx2.i.i242 = getelementptr inbounds %String, ptr %99, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i242, align 4
  %100 = load i64, ptr %memberidx.i, align 4
  %.not.i245 = icmp eq i64 %100, 6
  br i1 %.not.i245, label %ifend.i247, label %ifend48

ifend.i247:                                       ; preds = %ifend45
  %101 = load ptr, ptr %0, align 8
  %102 = tail call i64 @memcmp(ptr %101, ptr nonnull %98, i64 6)
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %common.ret, label %ifend48

ifend48:                                          ; preds = %ifend45, %ifend.i247
  %104 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %104, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  %105 = tail call ptr @malloc(i32 24)
  store ptr %104, ptr %105, align 8
  %memberidx1.i.i249 = getelementptr inbounds %String, ptr %105, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i249, align 4
  %memberidx2.i.i250 = getelementptr inbounds %String, ptr %105, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i250, align 4
  %106 = load i64, ptr %memberidx.i, align 4
  %.not.i253 = icmp eq i64 %106, 7
  br i1 %.not.i253, label %ifend.i255, label %ifend51

ifend.i255:                                       ; preds = %ifend48
  %107 = load ptr, ptr %0, align 8
  %108 = tail call i64 @memcmp(ptr %107, ptr nonnull %104, i64 7)
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %common.ret, label %ifend51

ifend51:                                          ; preds = %ifend48, %ifend.i255
  %110 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %110, ptr noundef nonnull align 8 dereferenceable(7) @126, i64 7, i1 false)
  %111 = tail call ptr @malloc(i32 24)
  store ptr %110, ptr %111, align 8
  %memberidx1.i.i257 = getelementptr inbounds %String, ptr %111, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i257, align 4
  %memberidx2.i.i258 = getelementptr inbounds %String, ptr %111, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i258, align 4
  %112 = load i64, ptr %memberidx.i, align 4
  %.not.i261 = icmp eq i64 %112, 7
  br i1 %.not.i261, label %ifend.i263, label %ifend54

ifend.i263:                                       ; preds = %ifend51
  %113 = load ptr, ptr %0, align 8
  %114 = tail call i64 @memcmp(ptr %113, ptr nonnull %110, i64 7)
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %common.ret, label %ifend54

ifend54:                                          ; preds = %ifend51, %ifend.i263
  %116 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %116, ptr noundef nonnull align 8 dereferenceable(6) @127, i64 6, i1 false)
  %117 = tail call ptr @malloc(i32 24)
  store ptr %116, ptr %117, align 8
  %memberidx1.i.i265 = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i265, align 4
  %memberidx2.i.i266 = getelementptr inbounds %String, ptr %117, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i266, align 4
  %118 = load i64, ptr %memberidx.i, align 4
  %.not.i269 = icmp eq i64 %118, 6
  br i1 %.not.i269, label %ifend.i271, label %ifend57

ifend.i271:                                       ; preds = %ifend54
  %119 = load ptr, ptr %0, align 8
  %120 = tail call i64 @memcmp(ptr %119, ptr nonnull %116, i64 6)
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %common.ret, label %ifend57

ifend57:                                          ; preds = %ifend54, %ifend.i271
  %122 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %122, ptr noundef nonnull align 8 dereferenceable(6) @128, i64 6, i1 false)
  %123 = tail call ptr @malloc(i32 24)
  store ptr %122, ptr %123, align 8
  %memberidx1.i.i273 = getelementptr inbounds %String, ptr %123, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i273, align 4
  %memberidx2.i.i274 = getelementptr inbounds %String, ptr %123, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i274, align 4
  %124 = load i64, ptr %memberidx.i, align 4
  %.not.i277 = icmp eq i64 %124, 6
  br i1 %.not.i277, label %ifend.i279, label %ifend60

ifend.i279:                                       ; preds = %ifend57
  %125 = load ptr, ptr %0, align 8
  %126 = tail call i64 @memcmp(ptr %125, ptr nonnull %122, i64 6)
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %common.ret, label %ifend60

ifend60:                                          ; preds = %ifend57, %ifend.i279
  %128 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %128, ptr noundef nonnull align 8 dereferenceable(6) @129, i64 6, i1 false)
  %129 = tail call ptr @malloc(i32 24)
  store ptr %128, ptr %129, align 8
  %memberidx1.i.i281 = getelementptr inbounds %String, ptr %129, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i281, align 4
  %memberidx2.i.i282 = getelementptr inbounds %String, ptr %129, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i282, align 4
  %130 = load i64, ptr %memberidx.i, align 4
  %.not.i285 = icmp eq i64 %130, 6
  br i1 %.not.i285, label %ifend.i287, label %ifend63

ifend.i287:                                       ; preds = %ifend60
  %131 = load ptr, ptr %0, align 8
  %132 = tail call i64 @memcmp(ptr %131, ptr nonnull %128, i64 6)
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %common.ret, label %ifend63

ifend63:                                          ; preds = %ifend60, %ifend.i287
  %134 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %134, ptr noundef nonnull align 8 dereferenceable(6) @130, i64 6, i1 false)
  %135 = tail call ptr @malloc(i32 24)
  store ptr %134, ptr %135, align 8
  %memberidx1.i.i289 = getelementptr inbounds %String, ptr %135, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i289, align 4
  %memberidx2.i.i290 = getelementptr inbounds %String, ptr %135, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i290, align 4
  %136 = load i64, ptr %memberidx.i, align 4
  %.not.i293 = icmp eq i64 %136, 6
  br i1 %.not.i293, label %ifend.i295, label %ifend66

ifend.i295:                                       ; preds = %ifend63
  %137 = load ptr, ptr %0, align 8
  %138 = tail call i64 @memcmp(ptr %137, ptr nonnull %134, i64 6)
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %common.ret, label %ifend66

ifend66:                                          ; preds = %ifend63, %ifend.i295
  %140 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %140, ptr noundef nonnull align 8 dereferenceable(6) @131, i64 6, i1 false)
  %141 = tail call ptr @malloc(i32 24)
  store ptr %140, ptr %141, align 8
  %memberidx1.i.i297 = getelementptr inbounds %String, ptr %141, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i297, align 4
  %memberidx2.i.i298 = getelementptr inbounds %String, ptr %141, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i298, align 4
  %142 = load i64, ptr %memberidx.i, align 4
  %.not.i301 = icmp eq i64 %142, 6
  br i1 %.not.i301, label %ifend.i303, label %ifend69

ifend.i303:                                       ; preds = %ifend66
  %143 = load ptr, ptr %0, align 8
  %144 = tail call i64 @memcmp(ptr %143, ptr nonnull %140, i64 6)
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %common.ret, label %ifend69

ifend69:                                          ; preds = %ifend66, %ifend.i303
  %146 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %146, ptr noundef nonnull align 8 dereferenceable(6) @132, i64 6, i1 false)
  %147 = tail call ptr @malloc(i32 24)
  store ptr %146, ptr %147, align 8
  %memberidx1.i.i305 = getelementptr inbounds %String, ptr %147, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i305, align 4
  %memberidx2.i.i306 = getelementptr inbounds %String, ptr %147, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i306, align 4
  %148 = load i64, ptr %memberidx.i, align 4
  %.not.i309 = icmp eq i64 %148, 6
  br i1 %.not.i309, label %ifend.i311, label %ifend72

ifend.i311:                                       ; preds = %ifend69
  %149 = load ptr, ptr %0, align 8
  %150 = tail call i64 @memcmp(ptr %149, ptr nonnull %146, i64 6)
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %common.ret, label %ifend72

ifend72:                                          ; preds = %ifend69, %ifend.i311
  %152 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %152, ptr noundef nonnull align 8 dereferenceable(7) @133, i64 7, i1 false)
  %153 = tail call ptr @malloc(i32 24)
  store ptr %152, ptr %153, align 8
  %memberidx1.i.i313 = getelementptr inbounds %String, ptr %153, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i313, align 4
  %memberidx2.i.i314 = getelementptr inbounds %String, ptr %153, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i314, align 4
  %154 = load i64, ptr %memberidx.i, align 4
  %.not.i317 = icmp eq i64 %154, 7
  br i1 %.not.i317, label %ifend.i319, label %ifend75

ifend.i319:                                       ; preds = %ifend72
  %155 = load ptr, ptr %0, align 8
  %156 = tail call i64 @memcmp(ptr %155, ptr nonnull %152, i64 7)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %common.ret, label %ifend75

ifend75:                                          ; preds = %ifend72, %ifend.i319
  %158 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %158, ptr noundef nonnull align 8 dereferenceable(7) @134, i64 7, i1 false)
  %159 = tail call ptr @malloc(i32 24)
  store ptr %158, ptr %159, align 8
  %memberidx1.i.i321 = getelementptr inbounds %String, ptr %159, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i321, align 4
  %memberidx2.i.i322 = getelementptr inbounds %String, ptr %159, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i322, align 4
  %160 = load i64, ptr %memberidx.i, align 4
  %.not.i325 = icmp eq i64 %160, 7
  br i1 %.not.i325, label %ifend.i327, label %ifend78

ifend.i327:                                       ; preds = %ifend75
  %161 = load ptr, ptr %0, align 8
  %162 = tail call i64 @memcmp(ptr %161, ptr nonnull %158, i64 7)
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %common.ret, label %ifend78

ifend78:                                          ; preds = %ifend75, %ifend.i327
  %164 = tail call ptr @malloc(i32 8)
  store i64 6872318721989304159, ptr %164, align 8
  %165 = tail call ptr @malloc(i32 24)
  store ptr %164, ptr %165, align 8
  %memberidx1.i.i329 = getelementptr inbounds %String, ptr %165, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i329, align 4
  %memberidx2.i.i330 = getelementptr inbounds %String, ptr %165, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i330, align 4
  %166 = load i64, ptr %memberidx.i, align 4
  %.not.i333 = icmp eq i64 %166, 8
  br i1 %.not.i333, label %ifend.i335, label %ifend81

ifend.i335:                                       ; preds = %ifend78
  %167 = load ptr, ptr %0, align 8
  %168 = tail call i64 @memcmp(ptr %167, ptr nonnull %164, i64 8)
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %common.ret, label %ifend81

ifend81:                                          ; preds = %ifend78, %ifend.i335
  %170 = tail call ptr @malloc(i32 8)
  store i64 6872318640384728927, ptr %170, align 8
  %171 = tail call ptr @malloc(i32 24)
  store ptr %170, ptr %171, align 8
  %memberidx1.i.i337 = getelementptr inbounds %String, ptr %171, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i337, align 4
  %memberidx2.i.i338 = getelementptr inbounds %String, ptr %171, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i338, align 4
  %172 = load i64, ptr %memberidx.i, align 4
  %.not.i341 = icmp eq i64 %172, 8
  br i1 %.not.i341, label %ifend.i343, label %ifend84

ifend.i343:                                       ; preds = %ifend81
  %173 = load ptr, ptr %0, align 8
  %174 = tail call i64 @memcmp(ptr %173, ptr nonnull %170, i64 8)
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %common.ret, label %ifend84

ifend84:                                          ; preds = %ifend81, %ifend.i343
  %176 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %176, align 8
  %177 = tail call ptr @malloc(i32 24)
  store ptr %176, ptr %177, align 8
  %memberidx1.i.i345 = getelementptr inbounds %String, ptr %177, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i345, align 4
  %memberidx2.i.i346 = getelementptr inbounds %String, ptr %177, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i346, align 4
  %178 = load i64, ptr %memberidx.i, align 4
  %.not.i349 = icmp eq i64 %178, 8
  br i1 %.not.i349, label %ifend.i351, label %ifend87

ifend.i351:                                       ; preds = %ifend84
  %179 = load ptr, ptr %0, align 8
  %180 = tail call i64 @memcmp(ptr %179, ptr nonnull %176, i64 8)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %common.ret, label %ifend87

ifend87:                                          ; preds = %ifend84, %ifend.i351
  %182 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %182, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %183 = tail call ptr @malloc(i32 24)
  store ptr %182, ptr %183, align 8
  %memberidx1.i.i353 = getelementptr inbounds %String, ptr %183, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i353, align 4
  %memberidx2.i.i354 = getelementptr inbounds %String, ptr %183, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i354, align 4
  %184 = load i64, ptr %memberidx.i, align 4
  %.not.i357 = icmp eq i64 %184, 7
  br i1 %.not.i357, label %ifend.i359, label %common.ret

ifend.i359:                                       ; preds = %ifend87
  %185 = load ptr, ptr %0, align 8
  %186 = tail call i64 @memcmp(ptr %185, ptr nonnull %182, i64 7)
  %187 = icmp eq i64 %186, 0
  br label %common.ret
}

define internal fastcc noalias ptr @bin_op_to_op_overload_name(i64 %0) unnamed_addr {
  switch i64 %0, label %common.ret [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 20, label %if.entry16
    i64 21, label %if.entry19
    i64 22, label %if.entry22
    i64 23, label %if.entry25
    i64 24, label %if.entry28
    i64 25, label %if.entry31
    i64 7, label %if.entry34
    i64 8, label %if.entry37
    i64 9, label %if.entry40
    i64 10, label %if.entry43
    i64 11, label %if.entry46
    i64 12, label %if.entry49
    i64 13, label %if.entry52
    i64 14, label %if.entry55
    i64 29, label %if.entry58
    i64 30, label %if.entry61
    i64 15, label %if.entry64
    i64 16, label %if.entry67
    i64 17, label %if.entry70
    i64 26, label %if.entry73
    i64 28, label %if.entry76
    i64 18, label %if.entry79
  ]

common.ret.sink.split:                            ; preds = %if.entry, %if.entry1, %if.entry4, %if.entry7, %if.entry10, %if.entry13, %if.entry16, %if.entry19, %if.entry22, %if.entry25, %if.entry28, %if.entry31, %if.entry34, %if.entry37, %if.entry40, %if.entry43, %if.entry46, %if.entry49, %if.entry52, %if.entry55, %if.entry58, %if.entry61, %if.entry64, %if.entry67, %if.entry70, %if.entry73, %if.entry76, %if.entry79
  %.sink165 = phi ptr [ %57, %if.entry79 ], [ %55, %if.entry76 ], [ %53, %if.entry73 ], [ %51, %if.entry70 ], [ %49, %if.entry67 ], [ %47, %if.entry64 ], [ %45, %if.entry61 ], [ %43, %if.entry58 ], [ %41, %if.entry55 ], [ %39, %if.entry52 ], [ %37, %if.entry49 ], [ %35, %if.entry46 ], [ %33, %if.entry43 ], [ %31, %if.entry40 ], [ %29, %if.entry37 ], [ %27, %if.entry34 ], [ %25, %if.entry31 ], [ %23, %if.entry28 ], [ %21, %if.entry25 ], [ %19, %if.entry22 ], [ %17, %if.entry19 ], [ %15, %if.entry16 ], [ %13, %if.entry13 ], [ %11, %if.entry10 ], [ %9, %if.entry7 ], [ %7, %if.entry4 ], [ %5, %if.entry1 ], [ %3, %if.entry ]
  %.sink164 = phi i64 [ 6, %if.entry79 ], [ 8, %if.entry76 ], [ 8, %if.entry73 ], [ 7, %if.entry70 ], [ 7, %if.entry67 ], [ 6, %if.entry64 ], [ 7, %if.entry61 ], [ 7, %if.entry58 ], [ 6, %if.entry55 ], [ 6, %if.entry52 ], [ 6, %if.entry49 ], [ 6, %if.entry46 ], [ 6, %if.entry43 ], [ 6, %if.entry40 ], [ 6, %if.entry37 ], [ 6, %if.entry34 ], [ 8, %if.entry31 ], [ 8, %if.entry28 ], [ 8, %if.entry25 ], [ 8, %if.entry22 ], [ 8, %if.entry19 ], [ 8, %if.entry16 ], [ 7, %if.entry13 ], [ 7, %if.entry10 ], [ 7, %if.entry7 ], [ 7, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %memberidx1.i.i161 = getelementptr inbounds %String, ptr %.sink165, i64 0, i32 1
  store i64 %.sink164, ptr %memberidx1.i.i161, align 4
  %memberidx2.i.i162 = getelementptr inbounds %String, ptr %.sink165, i64 0, i32 2
  store i64 %.sink164, ptr %memberidx2.i.i162, align 4
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %1
  %common.ret.op = phi ptr [ null, %1 ], [ %.sink165, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %2 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %2, ptr noundef nonnull align 8 dereferenceable(7) @115, i64 7, i1 false)
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  br label %common.ret.sink.split

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @116, i64 7, i1 false)
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  br label %common.ret.sink.split

if.entry4:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %6, ptr noundef nonnull align 8 dereferenceable(7) @117, i64 7, i1 false)
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret.sink.split

if.entry7:                                        ; preds = %1
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @118, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  br label %common.ret.sink.split

if.entry10:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %10, ptr noundef nonnull align 8 dereferenceable(7) @134, i64 7, i1 false)
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  br label %common.ret.sink.split

if.entry13:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %12, ptr noundef nonnull align 8 dereferenceable(7) @133, i64 7, i1 false)
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  br label %common.ret.sink.split

if.entry16:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 8)
  store i64 6872318640199393119, ptr %14, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  br label %common.ret.sink.split

if.entry19:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 8)
  store i64 6872318631895850847, ptr %16, align 8
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  br label %common.ret.sink.split

if.entry22:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 8)
  store i64 6872318674845130591, ptr %18, align 8
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  br label %common.ret.sink.split

if.entry25:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 8)
  store i64 6872318717592887135, ptr %20, align 8
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  br label %common.ret.sink.split

if.entry28:                                       ; preds = %1
  %22 = tail call ptr @malloc(i32 8)
  store i64 6872318640384728927, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  br label %common.ret.sink.split

if.entry31:                                       ; preds = %1
  %24 = tail call ptr @malloc(i32 8)
  store i64 6872318721989304159, ptr %24, align 8
  %25 = tail call ptr @malloc(i32 24)
  store ptr %24, ptr %25, align 8
  br label %common.ret.sink.split

if.entry34:                                       ; preds = %1
  %26 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %26, ptr noundef nonnull align 8 dereferenceable(6) @174, i64 6, i1 false)
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  br label %common.ret.sink.split

if.entry37:                                       ; preds = %1
  %28 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %28, ptr noundef nonnull align 8 dereferenceable(6) @132, i64 6, i1 false)
  %29 = tail call ptr @malloc(i32 24)
  store ptr %28, ptr %29, align 8
  br label %common.ret.sink.split

if.entry40:                                       ; preds = %1
  %30 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %30, ptr noundef nonnull align 8 dereferenceable(6) @128, i64 6, i1 false)
  %31 = tail call ptr @malloc(i32 24)
  store ptr %30, ptr %31, align 8
  br label %common.ret.sink.split

if.entry43:                                       ; preds = %1
  %32 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %32, ptr noundef nonnull align 8 dereferenceable(6) @131, i64 6, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  br label %common.ret.sink.split

if.entry46:                                       ; preds = %1
  %34 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %34, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  %35 = tail call ptr @malloc(i32 24)
  store ptr %34, ptr %35, align 8
  br label %common.ret.sink.split

if.entry49:                                       ; preds = %1
  %36 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %36, ptr noundef nonnull align 8 dereferenceable(6) @130, i64 6, i1 false)
  %37 = tail call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  br label %common.ret.sink.split

if.entry52:                                       ; preds = %1
  %38 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %38, ptr noundef nonnull align 8 dereferenceable(6) @123, i64 6, i1 false)
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  br label %common.ret.sink.split

if.entry55:                                       ; preds = %1
  %40 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %40, ptr noundef nonnull align 8 dereferenceable(6) @124, i64 6, i1 false)
  %41 = tail call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  br label %common.ret.sink.split

if.entry58:                                       ; preds = %1
  %42 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %42, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  %43 = tail call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  br label %common.ret.sink.split

if.entry61:                                       ; preds = %1
  %44 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %44, ptr noundef nonnull align 8 dereferenceable(7) @126, i64 7, i1 false)
  %45 = tail call ptr @malloc(i32 24)
  store ptr %44, ptr %45, align 8
  br label %common.ret.sink.split

if.entry64:                                       ; preds = %1
  %46 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %46, ptr noundef nonnull align 8 dereferenceable(6) @119, i64 6, i1 false)
  %47 = tail call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  br label %common.ret.sink.split

if.entry67:                                       ; preds = %1
  %48 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %48, ptr noundef nonnull align 8 dereferenceable(7) @175, i64 7, i1 false)
  %49 = tail call ptr @malloc(i32 24)
  store ptr %48, ptr %49, align 8
  br label %common.ret.sink.split

if.entry70:                                       ; preds = %1
  %50 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %50, ptr noundef nonnull align 8 dereferenceable(7) @176, i64 7, i1 false)
  %51 = tail call ptr @malloc(i32 24)
  store ptr %50, ptr %51, align 8
  br label %common.ret.sink.split

if.entry73:                                       ; preds = %1
  %52 = tail call ptr @malloc(i32 8)
  store i64 6872318640367165279, ptr %52, align 8
  %53 = tail call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  br label %common.ret.sink.split

if.entry76:                                       ; preds = %1
  %54 = tail call ptr @malloc(i32 8)
  store i64 6872318700514991967, ptr %54, align 8
  %55 = tail call ptr @malloc(i32 24)
  store ptr %54, ptr %55, align 8
  br label %common.ret.sink.split

if.entry79:                                       ; preds = %1
  %56 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %56, ptr noundef nonnull align 8 dereferenceable(6) @127, i64 6, i1 false)
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  br label %common.ret.sink.split
}

define internal fastcc noalias ptr @dump_bin_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend54 [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 7, label %if.entry16
    i64 8, label %if.entry19
    i64 9, label %if.entry22
    i64 10, label %if.entry25
    i64 11, label %if.entry28
    i64 12, label %if.entry31
    i64 13, label %if.entry34
    i64 14, label %if.entry37
    i64 15, label %if.entry40
    i64 16, label %if.entry43
    i64 17, label %if.entry46
    i64 18, label %if.entry49
    i64 19, label %if.entry52
  ]

common.ret:                                       ; preds = %ifend54, %if.entry52, %if.entry49, %if.entry46, %if.entry43, %if.entry40, %if.entry37, %if.entry34, %if.entry31, %if.entry28, %if.entry25, %if.entry22, %if.entry19, %if.entry16, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink113 = phi ptr [ %41, %ifend54 ], [ %39, %if.entry52 ], [ %37, %if.entry49 ], [ %35, %if.entry46 ], [ %33, %if.entry43 ], [ %31, %if.entry40 ], [ %29, %if.entry37 ], [ %27, %if.entry34 ], [ %25, %if.entry31 ], [ %23, %if.entry28 ], [ %21, %if.entry25 ], [ %19, %if.entry22 ], [ %17, %if.entry19 ], [ %15, %if.entry16 ], [ %13, %if.entry13 ], [ %11, %if.entry10 ], [ %9, %if.entry7 ], [ %7, %if.entry4 ], [ %5, %if.entry1 ], [ %3, %if.entry ]
  %.sink112 = phi i64 [ 2, %ifend54 ], [ 1, %if.entry52 ], [ 2, %if.entry49 ], [ 1, %if.entry46 ], [ 3, %if.entry43 ], [ 2, %if.entry40 ], [ 2, %if.entry37 ], [ 2, %if.entry34 ], [ 2, %if.entry31 ], [ 2, %if.entry28 ], [ 2, %if.entry25 ], [ 1, %if.entry22 ], [ 2, %if.entry19 ], [ 1, %if.entry16 ], [ 1, %if.entry13 ], [ 2, %if.entry10 ], [ 1, %if.entry7 ], [ 1, %if.entry4 ], [ 1, %if.entry1 ], [ 1, %if.entry ]
  %memberidx1.i.i109 = getelementptr inbounds %String, ptr %.sink113, i64 0, i32 1
  store i64 %.sink112, ptr %memberidx1.i.i109, align 4
  %memberidx2.i.i110 = getelementptr inbounds %String, ptr %.sink113, i64 0, i32 2
  store i64 %.sink112, ptr %memberidx2.i.i110, align 4
  ret ptr %.sink113

if.entry:                                         ; preds = %1
  %2 = tail call ptr @malloc(i32 1)
  store i8 43, ptr %2, align 8
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 1)
  store i8 45, ptr %4, align 8
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  br label %common.ret

if.entry4:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 1)
  store i8 42, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %8 = tail call ptr @malloc(i32 1)
  store i8 47, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 2)
  store i16 10794, ptr %10, align 8
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 1)
  store i8 94, ptr %12, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 1)
  store i8 62, ptr %14, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  br label %common.ret

if.entry19:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 2)
  store i16 15678, ptr %16, align 8
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  br label %common.ret

if.entry22:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 1)
  store i8 60, ptr %18, align 8
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  br label %common.ret

if.entry25:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 2)
  store i16 15676, ptr %20, align 8
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  br label %common.ret

if.entry28:                                       ; preds = %1
  %22 = tail call ptr @malloc(i32 2)
  store i16 15677, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  br label %common.ret

if.entry31:                                       ; preds = %1
  %24 = tail call ptr @malloc(i32 2)
  store i16 15649, ptr %24, align 8
  %25 = tail call ptr @malloc(i32 24)
  store ptr %24, ptr %25, align 8
  br label %common.ret

if.entry34:                                       ; preds = %1
  %26 = tail call ptr @malloc(i32 2)
  store i16 15420, ptr %26, align 8
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  br label %common.ret

if.entry37:                                       ; preds = %1
  %28 = tail call ptr @malloc(i32 2)
  store i16 15934, ptr %28, align 8
  %29 = tail call ptr @malloc(i32 24)
  store ptr %28, ptr %29, align 8
  br label %common.ret

if.entry40:                                       ; preds = %1
  %30 = tail call ptr @malloc(i32 2)
  store i16 29295, ptr %30, align 8
  %31 = tail call ptr @malloc(i32 24)
  store ptr %30, ptr %31, align 8
  br label %common.ret

if.entry43:                                       ; preds = %1
  %32 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %32, ptr noundef nonnull align 8 dereferenceable(3) @40, i64 3, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  br label %common.ret

if.entry46:                                       ; preds = %1
  %34 = tail call ptr @malloc(i32 1)
  store i8 94, ptr %34, align 8
  %35 = tail call ptr @malloc(i32 24)
  store ptr %34, ptr %35, align 8
  br label %common.ret

if.entry49:                                       ; preds = %1
  %36 = tail call ptr @malloc(i32 2)
  store i16 28265, ptr %36, align 8
  %37 = tail call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  br label %common.ret

if.entry52:                                       ; preds = %1
  %38 = tail call ptr @malloc(i32 1)
  store i8 61, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  br label %common.ret

ifend54:                                          ; preds = %1
  %40 = tail call ptr @malloc(i32 2)
  store i16 11822, ptr %40, align 8
  %41 = tail call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  br label %common.ret
}

define internal fastcc void @check_cast_lower_bits(ptr nocapture %0, ptr nocapture %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %4, align 4
  %8 = load i64, ptr %6, align 4
  %.not = icmp eq i64 %7, %8
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %2
  %9 = and i64 %7, -2
  %10 = icmp eq i64 %9, 8
  %11 = add i64 %8, -1
  %12 = icmp ult i64 %11, 7
  %13 = and i1 %10, %12
  br i1 %13, label %if.entry4, label %else5

ifend:                                            ; preds = %if.entry7, %ifend12, %if.entry4, %2
  ret void

if.entry4:                                        ; preds = %if.entry
  %14 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %14, align 4
  %memberidx.i.i.i50 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i50, align 4
  %memberidx1.i.i.i51 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 1
  %memberidx.i.i52 = getelementptr inbounds %TypeCastExpression, ptr %14, i64 0, i32 4
  store ptr %5, ptr %memberidx.i.i52, align 8
  %memberidx1.i.i53 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 3
  store ptr %4, ptr %memberidx1.i.i53, align 8
  %memberidx3.i.i55 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 1
  %15 = load i1, ptr %memberidx3.i.i55, align 1
  store i1 %15, ptr %memberidx1.i.i.i51, align 1
  store ptr %14, ptr %1, align 8
  br label %ifend

else5:                                            ; preds = %if.entry
  %16 = add i64 %7, -1
  %17 = icmp ult i64 %16, 7
  %18 = and i64 %8, -2
  %19 = icmp eq i64 %18, 8
  %20 = and i1 %17, %19
  br i1 %20, label %if.entry7, label %else8

if.entry7:                                        ; preds = %else5
  %21 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %21, align 4
  %memberidx.i.i.i56 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i56, align 4
  %memberidx1.i.i.i57 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %memberidx.i.i58 = getelementptr inbounds %TypeCastExpression, ptr %21, i64 0, i32 4
  store ptr %3, ptr %memberidx.i.i58, align 8
  %memberidx1.i.i59 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  store ptr %6, ptr %memberidx1.i.i59, align 8
  %memberidx3.i.i61 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %22 = load i1, ptr %memberidx3.i.i61, align 1
  store i1 %22, ptr %memberidx1.i.i.i57, align 1
  store ptr %21, ptr %0, align 8
  br label %ifend

else8:                                            ; preds = %else5
  %23 = icmp sgt i64 %7, %8
  %ternary.i = select i1 %23, ptr %4, ptr %6
  %24 = load i64, ptr %ternary.i, align 4
  %25 = add i64 %24, -1
  %26 = icmp ult i64 %25, 7
  %27 = and i1 %12, %26
  br i1 %27, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %else8
  %memberidx13 = getelementptr inbounds %IntType, ptr %ternary.i, i64 0, i32 1
  %28 = load i1, ptr %memberidx13, align 1
  %memberidx14 = getelementptr inbounds %IntType, ptr %6, i64 0, i32 1
  %29 = load i1, ptr %memberidx14, align 1
  %30 = xor i1 %28, %29
  br i1 %30, label %if.entry15, label %ifend12

ifend12:                                          ; preds = %if.entry15, %if.entry10, %else8
  %31 = phi ptr [ %.pre, %if.entry15 ], [ %3, %if.entry10 ], [ %3, %else8 ]
  %32 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %32, align 4
  %memberidx.i.i.i44 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i44, align 4
  %memberidx1.i.i.i45 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 1
  %memberidx.i.i46 = getelementptr inbounds %TypeCastExpression, ptr %32, i64 0, i32 4
  store ptr %31, ptr %memberidx.i.i46, align 8
  %memberidx1.i.i47 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i47, align 8
  %memberidx3.i.i49 = getelementptr inbounds %Expression, ptr %31, i64 0, i32 1
  %33 = load i1, ptr %memberidx3.i.i49, align 1
  store i1 %33, ptr %memberidx1.i.i.i45, align 1
  store ptr %32, ptr %0, align 8
  %34 = load ptr, ptr %1, align 8
  %35 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %35, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %35, i64 0, i32 4
  store ptr %34, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Expression, ptr %34, i64 0, i32 1
  %36 = load i1, ptr %memberidx3.i.i, align 1
  store i1 %36, ptr %memberidx1.i.i.i, align 1
  store ptr %35, ptr %1, align 8
  br label %ifend

if.entry15:                                       ; preds = %if.entry10
  store i1 true, ptr %memberidx14, align 1
  store i1 true, ptr %memberidx13, align 1
  %.pre = load ptr, ptr %0, align 8
  br label %ifend12
}

define internal fastcc noalias ptr @dump_unary_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend15 [
    i64 2, label %if.entry
    i64 3, label %if.entry1
    i64 4, label %if.entry4
    i64 5, label %if.entry7
    i64 6, label %if.entry10
    i64 7, label %if.entry13
  ]

common.ret:                                       ; preds = %ifend15, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink35 = phi ptr [ %15, %ifend15 ], [ %13, %if.entry13 ], [ %11, %if.entry10 ], [ %9, %if.entry7 ], [ %7, %if.entry4 ], [ %5, %if.entry1 ], [ %3, %if.entry ]
  %.sink34 = phi i64 [ 1, %ifend15 ], [ 1, %if.entry13 ], [ 1, %if.entry10 ], [ 8, %if.entry7 ], [ 8, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %memberidx1.i.i31 = getelementptr inbounds %String, ptr %.sink35, i64 0, i32 1
  store i64 %.sink34, ptr %memberidx1.i.i31, align 4
  %memberidx2.i.i32 = getelementptr inbounds %String, ptr %.sink35, i64 0, i32 2
  store i64 %.sink34, ptr %memberidx2.i.i32, align 4
  ret ptr %.sink35

if.entry:                                         ; preds = %1
  %2 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %2, ptr noundef nonnull align 8 dereferenceable(7) @182, i64 7, i1 false)
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @183, i64 7, i1 false)
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  br label %common.ret

if.entry4:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 8)
  store i64 3110625547759087656, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %8 = tail call ptr @malloc(i32 8)
  store i64 3255303685788364840, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 1)
  store i8 45, ptr %10, align 8
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 1)
  store i8 33, ptr %12, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  br label %common.ret

ifend15:                                          ; preds = %1
  %14 = tail call ptr @malloc(i32 1)
  store i8 38, ptr %14, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_var_from_varid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 1
  %5 = load i64, ptr %memberidx.i, align 4
  %6 = load i64, ptr %1, align 4
  %memberidx2.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 24)
  store ptr %9, ptr %10, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %10)
  %memberidx.i1 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i1, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i5 = icmp eq ptr %16, null
  br i1 %.not.i5, label %Map_String_LLVMValueRef____getitem__.exit, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre9.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre9.pre, i64 %hash.0.i6
  %.pre10.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre10.pre, null
  br i1 %.not22.i, label %Map_String_LLVMValueRef____getitem__.exit, label %if.entry6.i

while.body.i:                                     ; preds = %2, %else.i
  %17 = phi ptr [ %25, %else.i ], [ %14, %2 ]
  %18 = phi i64 [ %26, %else.i ], [ %12, %2 ]
  %19 = phi ptr [ %30, %else.i ], [ %16, %2 ]
  %hash.0.i6 = phi i64 [ %28, %else.i ], [ %13, %2 ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %21, %8
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %22 = load ptr, ptr %20, align 8
  %23 = call i64 @memcmp(ptr %22, ptr %9, i64 %8)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i1, align 4
  %.pre8 = load ptr, ptr %4, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %25 = phi ptr [ %.pre8, %ifend.i.i.else.i_crit_edge ], [ %17, %while.body.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %18, %while.body.i ]
  %27 = add nuw i64 %hash.0.i6, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not.i = icmp eq ptr %30, null
  br i1 %.not.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.body.i

if.entry6.i:                                      ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre10.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx10.i, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %2, %while.end.i, %if.entry6.i
  %common.ret.op.i = phi ptr [ %31, %if.entry6.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_store_expr_to_mem(ptr nocapture %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %next_args.i = alloca [2 x ptr], align 8
  %args = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %memberidx, align 4
  %6 = icmp ne i64 %5, 6
  %memberidx1 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %7 = load i1, ptr %memberidx1, align 1
  %8 = or i1 %7, %6
  br i1 %8, label %else, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx2 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = load i64, ptr %9, align 4
  %.not = icmp eq i64 %10, 20
  br i1 %.not, label %ifend6, label %if.entry4

else:                                             ; preds = %4
  %11 = icmp ne i64 %5, 7
  %12 = or i1 %7, %11
  br i1 %12, label %else10, label %if.entry9

common.ret:                                       ; preds = %CodeGen_store_tuple_elements.exit, %if.entry4, %ifend
  %common.ret.op = phi ptr [ %value.0, %ifend ], [ %19, %if.entry4 ], [ %2, %CodeGen_store_tuple_elements.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else10, %ifend6
  %value.0 = phi ptr [ %20, %ifend6 ], [ %40, %else10 ]
  %13 = tail call ptr @LLVMBuildStore(ptr %1, ptr %value.0, ptr %2)
  br label %common.ret

if.entry4:                                        ; preds = %if.entry
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 0, i1 false)
  store ptr %15, ptr %args, align 8
  %16 = getelementptr inbounds ptr, ptr %args, i64 1
  store ptr %15, ptr %16, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %9, i1 true)
  %18 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %17, ptr %2, ptr nonnull %args, i64 2, ptr nonnull @78)
  %19 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %18, ptr nonnull %3)
  br label %common.ret

ifend6:                                           ; preds = %if.entry
  %20 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %9, ptr nonnull %3)
  br label %ifend

if.entry9:                                        ; preds = %else
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %next_args.i)
  %21 = tail call ptr @LLVMInt32Type()
  %22 = tail call ptr @LLVMConstInt(ptr %21, i64 0, i1 false)
  store ptr %22, ptr %next_args.i, align 8
  %23 = getelementptr inbounds ptr, ptr %next_args.i, i64 1
  store ptr null, ptr %23, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %24 = load ptr, ptr %memberidx.i, align 8
  %25 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %24, i1 true)
  %memberidx1.i = getelementptr inbounds %TupleExpression, ptr %3, i64 0, i32 4
  %26 = load ptr, ptr %memberidx1.i, align 8
  %27 = tail call ptr @malloc(i32 25)
  %28 = load ptr, ptr %26, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Expression_, ptr %26, i64 0, i32 1
  %29 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %27, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 3
  store ptr %28, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 2
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  %30 = icmp slt i64 %29, 1
  br i1 %30, label %CodeGen_store_tuple_elements.exit, label %for.body.i

for.body.i:                                       ; preds = %if.entry9, %for.body.i
  %.in = phi ptr [ %39, %for.body.i ], [ %28, %if.entry9 ]
  %31 = phi i64 [ %38, %for.body.i ], [ 1, %if.entry9 ]
  %idx.0.i40 = phi i64 [ %33, %for.body.i ], [ 0, %if.entry9 ]
  %32 = load ptr, ptr %.in, align 8
  %33 = add nuw nsw i64 %idx.0.i40, 1
  %34 = call ptr @LLVMConstInt(ptr %21, i64 %idx.0.i40, i1 false)
  store ptr %34, ptr %23, align 8
  %35 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %25, ptr %2, ptr nonnull %next_args.i, i64 2, ptr nonnull @78)
  %36 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %32)
  %37 = call ptr @LLVMBuildStore(ptr %1, ptr %36, ptr %35)
  %38 = add nuw nsw i64 %31, 1
  %39 = getelementptr inbounds ptr, ptr %28, i64 %31
  %.not44 = icmp slt i64 %31, %29
  br i1 %.not44, label %for.body.i, label %CodeGen_store_tuple_elements.exit

CodeGen_store_tuple_elements.exit:                ; preds = %for.body.i, %if.entry9
  call void @free(ptr nonnull %27)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %next_args.i)
  br label %common.ret

else10:                                           ; preds = %else
  %40 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %3)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_array_exp(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 20
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %for.end, %if.entry
  %common.ret.op = phi ptr [ %7, %if.entry ], [ %35, %for.end ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %7 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %4, ptr nonnull %2)
  br label %common.ret

ifend:                                            ; preds = %3
  %memberidx3 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 1
  %8 = load i1, ptr %memberidx3, align 1
  br i1 %8, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  %9 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %9, ptr noundef nonnull align 8 dereferenceable(54) @256, i64 54, i1 false)
  %10 = tail call ptr @malloc(i32 24)
  %11 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %11, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %12 = tail call ptr @malloc(i32 24)
  %13 = tail call i64 @write(i64 1, ptr %11, i64 7)
  tail call void @free(ptr %11)
  tail call void @free(ptr %12)
  %14 = tail call i64 @write(i64 1, ptr %9, i64 54)
  %15 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %9)
  tail call void @free(ptr %10)
  tail call void @exit(i64 -1)
  %.pre = load ptr, ptr %memberidx, align 8
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %16 = phi ptr [ %4, %ifend ], [ %.pre, %if.entry4 ]
  %memberidx8 = getelementptr inbounds %ArrayType, ptr %16, i64 0, i32 1
  %17 = load ptr, ptr %memberidx8, align 8
  %18 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %17, i1 true)
  %memberidx9 = getelementptr inbounds %ArrayExpression, ptr %2, i64 0, i32 4
  %19 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Expression_, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx10, align 4
  %21 = alloca ptr, i64 %20, align 8
  %22 = tail call ptr @malloc(i32 25)
  %23 = load ptr, ptr %19, align 8
  %24 = load i64, ptr %memberidx10, align 4
  store i1 false, ptr %22, align 1
  %memberidx1.i.i26 = getelementptr inbounds %ArrayIterator_Expression_, ptr %22, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i26, align 4
  %memberidx2.i.i27 = getelementptr inbounds %ArrayIterator_Expression_, ptr %22, i64 0, i32 3
  store ptr %23, ptr %memberidx2.i.i27, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %22, i64 0, i32 2
  store i64 %24, ptr %memberidx3.i.i, align 4
  %25 = icmp slt i64 %24, 1
  br i1 %25, label %for.end, label %for.body

for.body:                                         ; preds = %ifend6, %for.body
  %.in = phi ptr [ %32, %for.body ], [ %23, %ifend6 ]
  %26 = phi i64 [ %31, %for.body ], [ 1, %ifend6 ]
  %idx.030 = phi i64 [ %28, %for.body ], [ 0, %ifend6 ]
  %27 = load ptr, ptr %.in, align 8
  %28 = add nuw nsw i64 %idx.030, 1
  %29 = getelementptr inbounds ptr, ptr %21, i64 %idx.030
  %30 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %27)
  store ptr %30, ptr %29, align 8
  %31 = add nuw nsw i64 %26, 1
  %32 = getelementptr inbounds ptr, ptr %23, i64 %26
  %.not = icmp slt i64 %26, %24
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend6
  tail call void @free(ptr nonnull %22)
  %33 = load ptr, ptr %memberidx9, align 8
  %memberidx14 = getelementptr inbounds %Array_Expression_, ptr %33, i64 0, i32 1
  %34 = load i64, ptr %memberidx14, align 4
  %35 = call ptr @LLVMConstArray(ptr %18, ptr nonnull %21, i64 %34)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_var_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 2
  %5 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 1
  %12 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %5, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx2 = getelementptr inbounds %Var, ptr %16, i64 0, i32 2
  %17 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 3
  %18 = load i1, ptr %memberidx3, align 1
  br i1 %18, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %memberidx4 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 1
  %19 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = trunc i64 %20 to i32
  %22 = add i32 %21, 1
  %23 = tail call ptr @malloc(i32 %22)
  %24 = load ptr, ptr %19, align 8
  %25 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 8 %24, i64 %25, i1 false)
  %26 = getelementptr inbounds i8, ptr %23, i64 %25
  store i8 0, ptr %26, align 1
  %27 = load ptr, ptr %16, align 8
  %28 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %27, i1 true)
  %29 = load ptr, ptr %0, align 8
  %30 = tail call ptr @LLVMAddGlobal(ptr %29, ptr %28, ptr %23)
  %.not30 = icmp eq ptr %17, null
  br i1 %.not30, label %ifend9, label %if.entry7

else:                                             ; preds = %3
  %31 = tail call fastcc ptr @CodeGen_get_var_from_varid(ptr nonnull %0, ptr nonnull %5)
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry10

ifend:                                            ; preds = %if.entry10, %else, %ifend9
  ret void

if.entry7:                                        ; preds = %if.entry
  %32 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %17)
  tail call void @LLVMSetInitializer(ptr %30, ptr %32)
  br label %ifend9

ifend9:                                           ; preds = %if.entry, %if.entry7
  %memberidx.i31 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %33 = load ptr, ptr %memberidx.i31, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %34 = load i64, ptr %memberidx1.i, align 4
  %35 = load i64, ptr %5, align 4
  %36 = load i64, ptr %memberidx3.i, align 4
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %34, i64 %35, i64 %36)
  %38 = load ptr, ptr %4, align 8
  %39 = call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %33, ptr nonnull %39, ptr %30)
  br label %ifend

if.entry10:                                       ; preds = %else
  %40 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr nonnull %0, ptr %1, ptr %31, ptr nonnull %17)
  br label %ifend
}

define internal fastcc void @CodeGen_codegen_const_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 2
  %5 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %5, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx2 = getelementptr inbounds %Const, ptr %16, i64 0, i32 2
  %17 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 3
  %18 = load i1, ptr %memberidx3, align 1
  br i1 %18, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %memberidx4 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  %19 = load ptr, ptr %memberidx4, align 8
  %20 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %19, i1 true)
  %memberidx5 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 1
  %21 = load ptr, ptr %memberidx5, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i, align 4
  %23 = trunc i64 %22 to i32
  %24 = add i32 %23, 1
  %25 = tail call ptr @malloc(i32 %24)
  %26 = load ptr, ptr %21, align 8
  %27 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %26, i64 %27, i1 false)
  %28 = getelementptr inbounds i8, ptr %25, i64 %27
  store i8 0, ptr %28, align 1
  %29 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %17)
  %30 = load ptr, ptr %0, align 8
  %31 = tail call ptr @LLVMAddGlobal(ptr %30, ptr %20, ptr %25)
  tail call void @LLVMSetInitializer(ptr %31, ptr %29)
  tail call void @LLVMSetGlobalConstant(ptr %31, i1 true)
  %memberidx.i23 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %32 = load ptr, ptr %memberidx.i23, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %33 = load i64, ptr %memberidx1.i, align 4
  %34 = load i64, ptr %5, align 4
  %35 = load i64, ptr %memberidx3.i, align 4
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %33, i64 %34, i64 %35)
  %37 = load ptr, ptr %4, align 8
  %38 = call ptr @malloc(i32 24)
  store ptr %37, ptr %38, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  store i64 %36, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %32, ptr nonnull %38, ptr %31)
  br label %ifend

else:                                             ; preds = %3
  %39 = tail call fastcc ptr @CodeGen_get_var_from_varid(ptr nonnull %0, ptr nonnull %5)
  %40 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr nonnull %0, ptr %1, ptr %39, ptr %17)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  ret void
}

define internal fastcc void @Map_String_LLVMValueRef__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx21, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr nonnull %0, ptr %24, ptr %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_LLVMValueRef____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_LLVMValueRef__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_store_array_elements(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %next_args = alloca [1 x ptr], align 8
  %4 = tail call ptr @LLVMIntType(i64 64)
  %5 = tail call ptr @LLVMConstInt(ptr %4, i64 1, i1 false)
  store ptr %5, ptr %next_args, align 8
  %6 = tail call ptr @LLVMTypeOf(ptr %2)
  %memberidx = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = tail call ptr @malloc(i32 25)
  %9 = load ptr, ptr %7, align 8
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 1
  %10 = load i64, ptr %memberidx1.i, align 4
  %11 = icmp slt i64 %10, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %.in = phi ptr [ %18, %for.body ], [ %9, %for.entry ]
  %12 = phi i64 [ %17, %for.body ], [ 1, %for.entry ]
  %addr.09 = phi ptr [ %16, %for.body ], [ %2, %for.entry ]
  %13 = load ptr, ptr %.in, align 8
  %14 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %13)
  %15 = call ptr @LLVMBuildStore(ptr %1, ptr %14, ptr %addr.09)
  %16 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %6, ptr %addr.09, ptr nonnull %next_args, i64 1, ptr nonnull @78)
  %17 = add nuw nsw i64 %12, 1
  %18 = getelementptr inbounds ptr, ptr %9, i64 %12
  %.not = icmp slt i64 %12, %10
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %addr.0.lcssa = phi ptr [ %2, %for.entry ], [ %16, %for.body ]
  tail call void @free(ptr nonnull %8)
  ret ptr %addr.0.lcssa
}

define internal fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = load i64, ptr %2, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %2, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %memberidx1 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 1
  %15 = load ptr, ptr %memberidx1, align 8
  %16 = tail call ptr @malloc(i32 25)
  %17 = load ptr, ptr %15, align 8
  %memberidx1.i = getelementptr inbounds %Map_String_VarId_, ptr %15, i64 0, i32 1
  %18 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i41 = getelementptr inbounds %Map_String_VarId_, ptr %15, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i41, align 4
  store i1 false, ptr %16, align 1
  %memberidx1.i.i = getelementptr inbounds %MapIterator_String_VarId_, ptr %16, i64 0, i32 1
  store ptr %17, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_String_VarId_, ptr %16, i64 0, i32 2
  store i64 %18, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_VarId_, ptr %16, i64 0, i32 3
  store i64 %19, ptr %memberidx3.i.i, align 4
  %memberidx.i51 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  br label %for.next

for.next:                                         ; preds = %ifend, %for.entry
  %20 = phi ptr [ %17, %for.entry ], [ %28, %ifend ]
  %21 = phi i64 [ %19, %for.entry ], [ %29, %ifend ]
  %memberidx2.i.i.promoted = phi i64 [ %18, %for.entry ], [ %.lcssa66, %ifend ]
  %var_value_type.0 = phi ptr [ undef, %for.entry ], [ %var_value_type.1, %ifend ]
  %smin = call i64 @llvm.smin.i64(i64 %memberidx2.i.i.promoted, i64 0)
  %22 = add i64 %smin, -1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.body.i, %for.next
  %23 = phi ptr [ %incdec.ptr.i, %while.body.i ], [ %20, %for.next ]
  %24 = phi i64 [ %26, %while.body.i ], [ %memberidx2.i.i.promoted, %for.next ]
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %while.body.i, label %MapIterator_String_VarId__next.exit

while.body.i:                                     ; preds = %while.entry.i
  %26 = add nsw i64 %24, -1
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %23, i64 1
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  %27 = load ptr, ptr %23, align 8
  %.not.i = icmp eq ptr %27, null
  br i1 %.not.i, label %while.entry.i, label %MapIterator_String_VarId__next.exit

MapIterator_String_VarId__next.exit:              ; preds = %while.entry.i, %while.body.i
  %28 = phi ptr [ %23, %while.entry.i ], [ %incdec.ptr.i, %while.body.i ]
  %.lcssa66 = phi i64 [ %22, %while.entry.i ], [ %26, %while.body.i ]
  store i64 %.lcssa66, ptr %memberidx2.i.i, align 4
  %29 = add nsw i64 %21, -1
  store i64 %29, ptr %memberidx3.i.i, align 4
  %30 = icmp slt i64 %21, 1
  store i1 %30, ptr %16, align 1
  br i1 %30, label %for.end, label %for.body

for.body:                                         ; preds = %MapIterator_String_VarId__next.exit
  %31 = getelementptr inbounds ptr, ptr %28, i64 -1
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr %32, align 8
  %memberidx4 = getelementptr inbounds %MapEntry_String_VarId_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx4, align 8
  %35 = load i64, ptr %34, align 4
  switch i64 %35, label %ifend [
    i64 1, label %if.entry
    i64 0, label %if.entry9
    i64 2, label %if.entry15
  ]

for.end:                                          ; preds = %MapIterator_String_VarId__next.exit
  tail call void @free(ptr nonnull %16)
  %memberidx24 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 7
  %36 = load ptr, ptr %memberidx24, align 8
  %37 = call ptr @malloc(i32 25)
  %38 = load ptr, ptr %36, align 8
  %memberidx1.i43 = getelementptr inbounds %Array_ScopeId_, ptr %36, i64 0, i32 1
  %39 = load i64, ptr %memberidx1.i43, align 4
  store i1 false, ptr %37, align 1
  %memberidx1.i.i44 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %37, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i44, align 4
  %memberidx2.i.i45 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %37, i64 0, i32 3
  store ptr %38, ptr %memberidx2.i.i45, align 8
  %memberidx3.i.i46 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %37, i64 0, i32 2
  store i64 %39, ptr %memberidx3.i.i46, align 4
  %40 = icmp slt i64 %39, 1
  br i1 %40, label %for.end23, label %for.body22

if.entry:                                         ; preds = %for.body
  %41 = load ptr, ptr %memberidx, align 8
  %42 = load ptr, ptr %41, align 8
  %memberidx1.i47 = getelementptr inbounds %VarId, ptr %34, i64 0, i32 1
  %43 = load i64, ptr %memberidx1.i47, align 4
  %44 = load ptr, ptr %42, align 8
  %45 = getelementptr inbounds ptr, ptr %44, i64 %43
  %46 = load ptr, ptr %45, align 8
  %memberidx2.i48 = getelementptr inbounds %Module, ptr %46, i64 0, i32 1
  %47 = load ptr, ptr %memberidx2.i48, align 8
  %memberidx3.i49 = getelementptr inbounds %VarId, ptr %34, i64 0, i32 2
  %48 = load i64, ptr %memberidx3.i49, align 4
  %49 = load ptr, ptr %47, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  %51 = load ptr, ptr %50, align 8
  br label %ifend.sink.split

ifend.sink.split:                                 ; preds = %if.entry, %if.entry9, %if.entry15
  %.sink = phi ptr [ %90, %if.entry15 ], [ %memberidx13, %if.entry9 ], [ %51, %if.entry ]
  %52 = load ptr, ptr %.sink, align 8
  br label %ifend

ifend:                                            ; preds = %ifend.sink.split, %for.body
  %var_value_type.1 = phi ptr [ %var_value_type.0, %for.body ], [ %52, %ifend.sink.split ]
  %53 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %var_value_type.1, i1 true)
  %memberidx.i50 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i50, align 4
  %55 = trunc i64 %54 to i32
  %56 = add i32 %55, 1
  %57 = call ptr @malloc(i32 %56)
  %58 = load ptr, ptr %33, align 8
  %59 = load i64, ptr %memberidx.i50, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %57, ptr align 8 %58, i64 %59, i1 false)
  %60 = getelementptr inbounds i8, ptr %57, i64 %59
  store i8 0, ptr %60, align 1
  %61 = call ptr @LLVMBuildAlloca(ptr %1, ptr %53, ptr %57)
  %62 = load ptr, ptr %memberidx.i51, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %34, i64 0, i32 1
  %63 = load i64, ptr %memberidx.i.i, align 4
  %64 = load i64, ptr %34, align 4
  %memberidx2.i.i52 = getelementptr inbounds %VarId, ptr %34, i64 0, i32 2
  %65 = load i64, ptr %memberidx2.i.i52, align 4
  %66 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %63, i64 %64, i64 %65)
  %67 = load ptr, ptr %3, align 8
  %68 = call ptr @malloc(i32 24)
  store ptr %67, ptr %68, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %68, i64 0, i32 1
  store i64 %66, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %68, i64 0, i32 2
  store i64 %66, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %62, ptr nonnull %68, ptr %61)
  br label %for.next

if.entry9:                                        ; preds = %for.body
  %69 = load ptr, ptr %memberidx, align 8
  %70 = load ptr, ptr %69, align 8
  %memberidx1.i53 = getelementptr inbounds %VarId, ptr %34, i64 0, i32 1
  %71 = load i64, ptr %memberidx1.i53, align 4
  %72 = load ptr, ptr %70, align 8
  %73 = getelementptr inbounds ptr, ptr %72, i64 %71
  %74 = load ptr, ptr %73, align 8
  %memberidx2.i54 = getelementptr inbounds %Module, ptr %74, i64 0, i32 4
  %75 = load ptr, ptr %memberidx2.i54, align 8
  %memberidx3.i55 = getelementptr inbounds %VarId, ptr %34, i64 0, i32 2
  %76 = load i64, ptr %memberidx3.i55, align 4
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx13 = getelementptr inbounds %Function, ptr %79, i64 0, i32 4
  br label %ifend.sink.split

if.entry15:                                       ; preds = %for.body
  %80 = load ptr, ptr %memberidx, align 8
  %81 = load ptr, ptr %80, align 8
  %memberidx1.i56 = getelementptr inbounds %VarId, ptr %34, i64 0, i32 1
  %82 = load i64, ptr %memberidx1.i56, align 4
  %83 = load ptr, ptr %81, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  %memberidx2.i57 = getelementptr inbounds %Module, ptr %85, i64 0, i32 2
  %86 = load ptr, ptr %memberidx2.i57, align 8
  %memberidx3.i58 = getelementptr inbounds %VarId, ptr %34, i64 0, i32 2
  %87 = load i64, ptr %memberidx3.i58, align 4
  %88 = load ptr, ptr %86, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  br label %ifend.sink.split

for.body22:                                       ; preds = %for.end, %for.body22
  %.in = phi ptr [ %94, %for.body22 ], [ %38, %for.end ]
  %91 = phi i64 [ %93, %for.body22 ], [ 1, %for.end ]
  %92 = load ptr, ptr %.in, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr %0, ptr %1, ptr %92)
  %93 = add nuw nsw i64 %91, 1
  %94 = getelementptr inbounds ptr, ptr %38, i64 %91
  %.not = icmp slt i64 %91, %39
  br i1 %.not, label %for.body22, label %for.end23

for.end23:                                        ; preds = %for.body22, %for.end
  tail call void @free(ptr nonnull %37)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_type(ptr nocapture %0, ptr nocapture readonly %1, i1 %2) unnamed_addr {
  %4 = load i64, ptr %1, align 4
  switch i64 %4, label %ifend57 [
    i64 10, label %if.entry
    i64 0, label %if.entry4
    i64 1, label %if.entry8
    i64 2, label %if.entry12
    i64 3, label %if.entry16
    i64 4, label %if.entry20
    i64 6, label %if.entry24
    i64 5, label %if.entry28
    i64 7, label %if.entry32
    i64 8, label %if.entry36
    i64 9, label %if.entry40
    i64 13, label %if.entry44
    i64 14, label %if.entry49
    i64 20, label %if.entry55
  ]

common.ret:                                       ; preds = %if.entry86, %for.end, %true_block89, %true_block, %if.entry100, %ifend98, %for.end78, %if.entry49, %if.entry44, %if.entry40, %if.entry36, %if.entry32, %if.entry28, %if.entry24, %if.entry20, %if.entry16, %if.entry12, %if.entry8, %if.entry4, %if.entry
  %common.ret.op = phi ptr [ %5, %if.entry ], [ %6, %if.entry4 ], [ %7, %if.entry8 ], [ %8, %if.entry12 ], [ %9, %if.entry16 ], [ %10, %if.entry20 ], [ %11, %if.entry24 ], [ %12, %if.entry28 ], [ %13, %if.entry32 ], [ %14, %if.entry36 ], [ %15, %if.entry40 ], [ %18, %if.entry44 ], [ %22, %if.entry49 ], [ %59, %for.end78 ], [ null, %ifend98 ], [ %101, %if.entry100 ], [ %44, %true_block ], [ %78, %true_block89 ], [ %43, %for.end ], [ %77, %if.entry86 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %5 = tail call ptr @LLVMVoidType()
  br label %common.ret

if.entry4:                                        ; preds = %3
  %6 = tail call ptr @LLVMInt1Type()
  br label %common.ret

if.entry8:                                        ; preds = %3
  %7 = tail call ptr @LLVMIntType(i64 4)
  br label %common.ret

if.entry12:                                       ; preds = %3
  %8 = tail call ptr @LLVMInt8Type()
  br label %common.ret

if.entry16:                                       ; preds = %3
  %9 = tail call ptr @LLVMInt16Type()
  br label %common.ret

if.entry20:                                       ; preds = %3
  %10 = tail call ptr @LLVMInt32Type()
  br label %common.ret

if.entry24:                                       ; preds = %3
  %11 = tail call ptr @LLVMIntType(i64 64)
  br label %common.ret

if.entry28:                                       ; preds = %3
  %12 = tail call ptr @LLVMInt64Type()
  br label %common.ret

if.entry32:                                       ; preds = %3
  %13 = tail call ptr @LLVMInt128Type()
  br label %common.ret

if.entry36:                                       ; preds = %3
  %14 = tail call ptr @LLVMFloatType()
  br label %common.ret

if.entry40:                                       ; preds = %3
  %15 = tail call ptr @LLVMDoubleType()
  br label %common.ret

if.entry44:                                       ; preds = %3
  %memberidx47 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %16 = load ptr, ptr %memberidx47, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %16, i1 true)
  %18 = tail call ptr @LLVMPointerType(ptr %17, i64 0)
  br label %common.ret

if.entry49:                                       ; preds = %3
  %memberidx52 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx52, align 8
  %20 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %19, i1 true)
  %memberidx53 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %21 = load i64, ptr %memberidx53, align 4
  %22 = tail call ptr @LLVMArrayType(ptr %20, i64 %21)
  br label %common.ret

if.entry55:                                       ; preds = %3
  %memberidx58 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 3
  %23 = load ptr, ptr %memberidx58, align 8
  %.pr = load i64, ptr %23, align 4
  br label %ifend57

ifend57:                                          ; preds = %3, %if.entry55
  %24 = phi i64 [ %4, %3 ], [ %.pr, %if.entry55 ]
  %tt.0 = phi ptr [ %1, %3 ], [ %23, %if.entry55 ]
  switch i64 %24, label %ifend84 [
    i64 16, label %if.entry59
    i64 15, label %if.entry70
    i64 11, label %if.entry82
  ]

if.entry59:                                       ; preds = %ifend57
  %memberidx62 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 1
  %25 = load ptr, ptr %memberidx62, align 8
  %memberidx63 = getelementptr inbounds %Array_Type_, ptr %25, i64 0, i32 1
  %26 = load i64, ptr %memberidx63, align 4
  %27 = alloca ptr, i64 %26, align 8
  %28 = tail call ptr @malloc(i32 25)
  %29 = load ptr, ptr %25, align 8
  %30 = load i64, ptr %memberidx63, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i154 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i154, align 4
  %memberidx2.i.i155 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i155, align 8
  %memberidx3.i.i156 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i156, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry59, %for.body
  %.in186 = phi ptr [ %38, %for.body ], [ %29, %if.entry59 ]
  %32 = phi i64 [ %37, %for.body ], [ 1, %if.entry59 ]
  %idx.0178 = phi i64 [ %34, %for.body ], [ 0, %if.entry59 ]
  %33 = load ptr, ptr %.in186, align 8
  %34 = add nuw nsw i64 %idx.0178, 1
  %35 = getelementptr inbounds ptr, ptr %27, i64 %idx.0178
  %36 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %33, i1 true)
  store ptr %36, ptr %35, align 8
  %37 = add nuw nsw i64 %32, 1
  %38 = getelementptr inbounds ptr, ptr %29, i64 %32
  %.not193 = icmp slt i64 %32, %30
  br i1 %.not193, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.entry59
  tail call void @free(ptr nonnull %28)
  %memberidx66 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 2
  %39 = load ptr, ptr %memberidx66, align 8
  %40 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %39, i1 true)
  %41 = load ptr, ptr %memberidx62, align 8
  %memberidx68 = getelementptr inbounds %Array_Type_, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx68, align 4
  %43 = call ptr @LLVMFunctionType(ptr %40, ptr nonnull %27, i64 %42, i1 false)
  br i1 %2, label %true_block, label %common.ret

true_block:                                       ; preds = %for.end
  %44 = call ptr @LLVMPointerType(ptr %43, i64 0)
  br label %common.ret

if.entry70:                                       ; preds = %ifend57
  %memberidx73 = getelementptr inbounds %TupleType, ptr %tt.0, i64 0, i32 1
  %45 = load ptr, ptr %memberidx73, align 8
  %memberidx74 = getelementptr inbounds %Array_Type_, ptr %45, i64 0, i32 1
  %46 = load i64, ptr %memberidx74, align 4
  %47 = alloca ptr, i64 %46, align 8
  %48 = tail call ptr @malloc(i32 25)
  %49 = load ptr, ptr %45, align 8
  %50 = load i64, ptr %memberidx74, align 4
  store i1 false, ptr %48, align 1
  %memberidx1.i.i148 = getelementptr inbounds %ArrayIterator_Type_, ptr %48, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i148, align 4
  %memberidx2.i.i149 = getelementptr inbounds %ArrayIterator_Type_, ptr %48, i64 0, i32 3
  store ptr %49, ptr %memberidx2.i.i149, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Type_, ptr %48, i64 0, i32 2
  store i64 %50, ptr %memberidx3.i.i, align 4
  %51 = icmp slt i64 %50, 1
  br i1 %51, label %for.end78, label %for.body77

for.body77:                                       ; preds = %if.entry70, %for.body77
  %.in = phi ptr [ %58, %for.body77 ], [ %49, %if.entry70 ]
  %52 = phi i64 [ %57, %for.body77 ], [ 1, %if.entry70 ]
  %idx1.0182 = phi i64 [ %54, %for.body77 ], [ 0, %if.entry70 ]
  %53 = load ptr, ptr %.in, align 8
  %54 = add nuw nsw i64 %idx1.0182, 1
  %55 = getelementptr inbounds ptr, ptr %47, i64 %idx1.0182
  %56 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %53, i1 true)
  store ptr %56, ptr %55, align 8
  %57 = add nuw nsw i64 %52, 1
  %58 = getelementptr inbounds ptr, ptr %49, i64 %52
  %.not192 = icmp slt i64 %52, %50
  br i1 %.not192, label %for.body77, label %for.end78

for.end78:                                        ; preds = %for.body77, %if.entry70
  %idx1.0.lcssa = phi i64 [ 0, %if.entry70 ], [ %54, %for.body77 ]
  tail call void @free(ptr nonnull %48)
  %59 = call ptr @LLVMStructType(ptr nonnull %47, i64 %idx1.0.lcssa, i1 false)
  br label %common.ret

if.entry82:                                       ; preds = %ifend57
  %memberidx85 = getelementptr inbounds %ObjectType, ptr %tt.0, i64 0, i32 1
  %60 = load ptr, ptr %memberidx85, align 8
  %61 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %60)
  %.not.i = icmp eq ptr %61, null
  br i1 %.not.i, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %if.entry86

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry82
  %memberidx.i157 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %62 = load ptr, ptr %memberidx.i157, align 8
  %63 = load ptr, ptr %62, align 8
  %64 = load i64, ptr %60, align 4
  %65 = load ptr, ptr %63, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  %memberidx2.i.i158 = getelementptr inbounds %Module, ptr %67, i64 0, i32 3
  %68 = load ptr, ptr %memberidx2.i.i158, align 8
  %memberidx3.i.i159 = getelementptr inbounds %TypeId, ptr %60, i64 0, i32 2
  %69 = load i64, ptr %memberidx3.i.i159, align 4
  %70 = load ptr, ptr %68, align 8
  %71 = getelementptr inbounds ptr, ptr %70, i64 %69
  %72 = load ptr, ptr %71, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %72)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %72)
  %73 = load ptr, ptr %72, align 8
  %74 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %73)
  %.not147 = icmp eq ptr %74, null
  br i1 %.not147, label %CodeGen_get_or_codegen_class_from_typeid.exit.ifend84_crit_edge, label %if.entry86

CodeGen_get_or_codegen_class_from_typeid.exit.ifend84_crit_edge: ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %.pre = load i64, ptr %tt.0, align 4
  br label %ifend84

ifend84:                                          ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit.ifend84_crit_edge, %ifend57
  %75 = phi i64 [ %.pre, %CodeGen_get_or_codegen_class_from_typeid.exit.ifend84_crit_edge ], [ %24, %ifend57 ]
  %76 = icmp eq i64 %75, 12
  br i1 %76, label %if.entry96, label %ifend98

if.entry86:                                       ; preds = %if.entry82, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i173 = phi ptr [ %74, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %61, %if.entry82 ]
  %77 = load ptr, ptr %common.ret.op.i173, align 8
  br i1 %2, label %true_block89, label %common.ret

true_block89:                                     ; preds = %if.entry86
  %78 = tail call ptr @LLVMPointerType(ptr %77, i64 0)
  br label %common.ret

if.entry96:                                       ; preds = %ifend84
  %memberidx99 = getelementptr inbounds %EnumType, ptr %tt.0, i64 0, i32 1
  %79 = load ptr, ptr %memberidx99, align 8
  %80 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %79)
  %.not.i160 = icmp eq ptr %80, null
  br i1 %.not.i160, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %if.entry100

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry96
  %memberidx.i163 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %81 = load ptr, ptr %memberidx.i163, align 8
  %82 = load ptr, ptr %81, align 8
  %83 = load i64, ptr %79, align 4
  %84 = load ptr, ptr %82, align 8
  %85 = getelementptr inbounds ptr, ptr %84, i64 %83
  %86 = load ptr, ptr %85, align 8
  %memberidx2.i.i164 = getelementptr inbounds %Module, ptr %86, i64 0, i32 6
  %87 = load ptr, ptr %memberidx2.i.i164, align 8
  %memberidx3.i.i165 = getelementptr inbounds %TypeId, ptr %79, i64 0, i32 2
  %88 = load i64, ptr %memberidx3.i.i165, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %91)
  %92 = load ptr, ptr %91, align 8
  %93 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %92)
  %.not = icmp eq ptr %93, null
  br i1 %.not, label %ifend98, label %if.entry100

ifend98:                                          ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit, %ifend84
  %94 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %94, ptr noundef nonnull align 8 dereferenceable(32) @244, i64 32, i1 false)
  %95 = tail call ptr @malloc(i32 24)
  %96 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %96, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %97 = tail call ptr @malloc(i32 24)
  %98 = tail call i64 @write(i64 1, ptr %96, i64 7)
  tail call void @free(ptr %96)
  tail call void @free(ptr %97)
  %99 = tail call i64 @write(i64 1, ptr %94, i64 32)
  %100 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %94)
  tail call void @free(ptr %95)
  tail call void @exit(i64 -1)
  br label %common.ret

if.entry100:                                      ; preds = %if.entry96, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i161176 = phi ptr [ %93, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %80, %if.entry96 ]
  %101 = load ptr, ptr %common.ret.op.i161176, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_tuple_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 1
  %4 = load i1, ptr %memberidx, align 1
  br i1 %4, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  %5 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %5, ptr noundef nonnull align 8 dereferenceable(54) @257, i64 54, i1 false)
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %7, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %8 = tail call ptr @malloc(i32 24)
  %9 = tail call i64 @write(i64 1, ptr %7, i64 7)
  tail call void @free(ptr %7)
  tail call void @free(ptr %8)
  %10 = tail call i64 @write(i64 1, ptr %5, i64 54)
  %11 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %5)
  tail call void @free(ptr %6)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %memberidx1 = getelementptr inbounds %TupleExpression, ptr %2, i64 0, i32 4
  %12 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 1
  %13 = load i64, ptr %memberidx2, align 4
  %14 = alloca ptr, i64 %13, align 8
  %15 = tail call ptr @malloc(i32 25)
  %16 = load ptr, ptr %12, align 8
  %17 = load i64, ptr %memberidx2, align 4
  store i1 false, ptr %15, align 1
  %memberidx1.i.i9 = getelementptr inbounds %ArrayIterator_Expression_, ptr %15, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i9, align 4
  %memberidx2.i.i10 = getelementptr inbounds %ArrayIterator_Expression_, ptr %15, i64 0, i32 3
  store ptr %16, ptr %memberidx2.i.i10, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %15, i64 0, i32 2
  store i64 %17, ptr %memberidx3.i.i, align 4
  %18 = icmp slt i64 %17, 1
  br i1 %18, label %for.end, label %for.body

for.body:                                         ; preds = %ifend, %for.body
  %.in = phi ptr [ %25, %for.body ], [ %16, %ifend ]
  %19 = phi i64 [ %24, %for.body ], [ 1, %ifend ]
  %idx.013 = phi i64 [ %21, %for.body ], [ 0, %ifend ]
  %20 = load ptr, ptr %.in, align 8
  %21 = add nuw nsw i64 %idx.013, 1
  %22 = getelementptr inbounds ptr, ptr %14, i64 %idx.013
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %20)
  store ptr %23, ptr %22, align 8
  %24 = add nuw nsw i64 %19, 1
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %.not = icmp slt i64 %19, %17
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  %idx.0.lcssa = phi i64 [ 0, %ifend ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %15)
  %26 = call ptr @LLVMConstStruct(ptr nonnull %14, i64 %idx.0.lcssa, i1 false)
  ret ptr %26
}

define internal fastcc void @Map_String_uint__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_uint_, ptr %23, i64 0, i32 1
  %25 = load i64, ptr %memberidx21, align 4
  tail call fastcc void @Map_String_uint____setitem__(ptr nonnull %0, ptr %24, i64 %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_uint____setitem__(ptr nocapture %0, ptr %1, i64 %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_uint__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_uint__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_uint_, ptr %37, i64 0, i32 1
  store i64 %2, ptr %memberidx1.i, align 4
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_uint__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_codegen_match_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @LLVMAppendBasicBlock(ptr %4, ptr nonnull @271)
  %6 = load ptr, ptr %memberidx, align 8
  %7 = tail call ptr @LLVMAppendBasicBlock(ptr %6, ptr nonnull @272)
  %memberidx2 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 5
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx3, align 4
  %10 = add nuw i64 %9, 1
  %11 = alloca ptr, i64 %10, align 8
  %12 = alloca ptr, i64 %10, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx4, align 8
  %14 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %13, i1 true)
  %memberidx5 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 4
  %15 = load ptr, ptr %memberidx5, align 8
  %16 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %15)
  %memberidx6 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 7
  %17 = load i1, ptr %memberidx6, align 1
  br i1 %17, label %end, label %false_block

false_block:                                      ; preds = %3
  %18 = tail call ptr @LLVMBuildSwitch(ptr %1, ptr %16, ptr %5, i64 0)
  br label %end

end:                                              ; preds = %3, %false_block
  %ternary = phi ptr [ %18, %false_block ], [ null, %3 ]
  %19 = load ptr, ptr %memberidx2, align 8
  %20 = tail call ptr @malloc(i32 25)
  %21 = load ptr, ptr %19, align 8
  %memberidx1.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %19, i64 0, i32 1
  %22 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %20, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 3
  store ptr %21, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 2
  store i64 %22, ptr %memberidx3.i.i, align 4
  %23 = icmp slt i64 %22, 1
  br i1 %23, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %end
  %24 = icmp ne ptr %ternary, null
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend13
  %.in = phi ptr [ %21, %for.body.lr.ph ], [ %51, %ifend13 ]
  %25 = phi i64 [ 1, %for.body.lr.ph ], [ %50, %ifend13 ]
  %curr_block.088 = phi ptr [ null, %for.body.lr.ph ], [ %curr_block.1, %ifend13 ]
  %idx.087 = phi i64 [ 0, %for.body.lr.ph ], [ %48, %ifend13 ]
  %26 = load ptr, ptr %.in, align 8
  %.not = icmp eq ptr %curr_block.088, null
  br i1 %.not, label %ifend, label %if.entry

for.end:                                          ; preds = %ifend13, %end
  %idx.0.lcssa = phi i64 [ 0, %end ], [ %48, %ifend13 ]
  tail call void @free(ptr nonnull %20)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %5)
  %27 = getelementptr inbounds ptr, ptr %11, i64 %idx.0.lcssa
  store ptr %5, ptr %27, align 8
  %28 = getelementptr inbounds ptr, ptr %12, i64 %idx.0.lcssa
  %memberidx24 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 6
  %29 = load ptr, ptr %memberidx24, align 8
  %30 = tail call fastcc ptr @CodeGen_codegen_block(ptr nonnull %0, ptr %1, ptr %29)
  store ptr %30, ptr %28, align 8
  %31 = tail call ptr @LLVMBuildBr(ptr %1, ptr %7)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %7)
  %32 = load ptr, ptr %memberidx4, align 8
  %33 = load i64, ptr %32, align 4
  %.not85 = icmp eq i64 %33, 10
  br i1 %.not85, label %common.ret, label %if.entry27

if.entry:                                         ; preds = %for.body
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr nonnull %curr_block.088)
  br label %ifend

ifend:                                            ; preds = %for.body, %if.entry
  %34 = load ptr, ptr %memberidx, align 8
  %35 = tail call ptr @LLVMAppendBasicBlock(ptr %34, ptr nonnull @273)
  %36 = load i64, ptr %26, align 4
  %37 = icmp eq i64 %36, 1
  %38 = and i1 %24, %37
  br i1 %38, label %if.entry11, label %else12

if.entry11:                                       ; preds = %ifend
  %memberidx14 = getelementptr inbounds %MatchExpressionCase, ptr %26, i64 0, i32 1
  %39 = load ptr, ptr %memberidx14, align 8
  tail call fastcc void @CodeGen_codegen_match_case(ptr nonnull %0, ptr %1, ptr nonnull %ternary, ptr %39, ptr %35)
  br label %ifend13

else12:                                           ; preds = %ifend
  %40 = load ptr, ptr %memberidx2, align 8
  %memberidx19 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %40, i64 0, i32 1
  %41 = load i64, ptr %memberidx19, align 4
  %42 = add i64 %41, -1
  %43 = icmp eq i64 %idx.087, %42
  br i1 %43, label %end17, label %false_block16

ifend13:                                          ; preds = %end17, %if.entry11
  %curr_block.1 = phi ptr [ %curr_block.088, %if.entry11 ], [ %ternary21, %end17 ]
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %35)
  %memberidx23 = getelementptr inbounds %MatchExpressionCase, ptr %26, i64 0, i32 2
  %44 = load ptr, ptr %memberidx23, align 8
  %45 = tail call fastcc ptr @CodeGen_codegen_block(ptr nonnull %0, ptr %1, ptr %44)
  %46 = tail call ptr @LLVMBuildBr(ptr %1, ptr %7)
  %47 = getelementptr inbounds ptr, ptr %11, i64 %idx.087
  store ptr %35, ptr %47, align 8
  %48 = add nuw nsw i64 %idx.087, 1
  %49 = getelementptr inbounds ptr, ptr %12, i64 %idx.087
  store ptr %45, ptr %49, align 8
  %50 = add nuw nsw i64 %25, 1
  %51 = getelementptr inbounds ptr, ptr %21, i64 %25
  %.not94 = icmp slt i64 %25, %22
  br i1 %.not94, label %for.body, label %for.end

false_block16:                                    ; preds = %else12
  %52 = load ptr, ptr %memberidx, align 8
  %53 = tail call ptr @LLVMAppendBasicBlock(ptr %52, ptr nonnull @274)
  br label %end17

end17:                                            ; preds = %else12, %false_block16
  %ternary21 = phi ptr [ %53, %false_block16 ], [ %5, %else12 ]
  %memberidx22 = getelementptr inbounds %MatchExpressionCase, ptr %26, i64 0, i32 1
  %54 = load ptr, ptr %memberidx22, align 8
  %55 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %54)
  %56 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %55, ptr %35, ptr %ternary21)
  br label %ifend13

common.ret:                                       ; preds = %for.end, %if.entry27
  %common.ret.op = phi ptr [ %58, %if.entry27 ], [ null, %for.end ]
  ret ptr %common.ret.op

if.entry27:                                       ; preds = %for.end
  %57 = add nuw nsw i64 %idx.0.lcssa, 1
  %58 = tail call ptr @LLVMBuildPhi(ptr %1, ptr %14, ptr nonnull @275)
  call void @LLVMAddIncoming(ptr %58, ptr nonnull %12, ptr nonnull %11, i64 %57)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_block(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %args.i = alloca [1 x ptr], align 8
  %iter_func_type.i = alloca ptr, align 8
  %next_func_type.i = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %3 = load i1, ptr %memberidx, align 1
  store i1 false, ptr %memberidx, align 1
  %4 = load ptr, ptr %2, align 8
  %5 = tail call ptr @malloc(i32 25)
  %6 = load ptr, ptr %4, align 8
  %memberidx1.i = getelementptr inbounds %Array_Statement_, ptr %4, i64 0, i32 1
  %7 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %5, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %5, i64 0, i32 3
  store ptr %6, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %5, i64 0, i32 2
  store i64 %7, ptr %memberidx3.i.i, align 4
  %8 = icmp slt i64 %7, 1
  br i1 %8, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1.i19 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %memberidx.i26 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %memberidx1.i27 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %CodeGen_codegen_statement.exit
  %.in = phi ptr [ %6, %for.body.lr.ph ], [ %138, %CodeGen_codegen_statement.exit ]
  %9 = phi i64 [ 1, %for.body.lr.ph ], [ %137, %CodeGen_codegen_statement.exit ]
  %10 = load ptr, ptr %.in, align 8
  %11 = load i64, ptr %10, align 4
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %for.body
  %memberidx.i18 = getelementptr inbounds %IfStatement, ptr %10, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i18, align 8
  %14 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %13)
  %15 = load ptr, ptr %memberidx1.i19, align 8
  %16 = call ptr @LLVMAppendBasicBlock(ptr %15, ptr nonnull @281)
  %17 = load ptr, ptr %memberidx1.i19, align 8
  %18 = call ptr @LLVMAppendBasicBlock(ptr %17, ptr nonnull @44)
  %19 = load ptr, ptr %memberidx1.i19, align 8
  %20 = call ptr @LLVMAppendBasicBlock(ptr %19, ptr nonnull @282)
  %21 = call ptr @LLVMBuildCondBr(ptr %1, ptr %14, ptr %16, ptr %18)
  call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %16)
  %memberidx4.i = getelementptr inbounds %IfStatement, ptr %10, i64 0, i32 2
  %22 = load ptr, ptr %memberidx4.i, align 8
  %23 = call fastcc ptr @CodeGen_codegen_block(ptr %0, ptr %1, ptr %22)
  %24 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i.i = getelementptr inbounds %Block, ptr %24, i64 0, i32 1
  %25 = load i1, ptr %memberidx.i.i, align 1
  %memberidx1.i.i20 = getelementptr inbounds %Block, ptr %24, i64 0, i32 2
  %26 = load i1, ptr %memberidx1.i.i20, align 1
  %27 = or i1 %25, %26
  %memberidx2.i.i21 = getelementptr inbounds %Block, ptr %24, i64 0, i32 3
  %28 = load i1, ptr %memberidx2.i.i21, align 1
  %29 = or i1 %27, %28
  br i1 %29, label %ifend.i24, label %if.entry.i22

if.entry.i22:                                     ; preds = %if.entry.i
  %30 = call ptr @LLVMBuildBr(ptr %1, ptr %20)
  br label %ifend.i24

ifend.i24:                                        ; preds = %if.entry.i22, %if.entry.i
  call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %18)
  %memberidx6.i = getelementptr inbounds %IfStatement, ptr %10, i64 0, i32 3
  %31 = load ptr, ptr %memberidx6.i, align 8
  %.not.i23 = icmp eq ptr %31, null
  br i1 %.not.i23, label %if.entry12.i, label %if.entry7.i

if.entry7.i:                                      ; preds = %ifend.i24
  %32 = call fastcc ptr @CodeGen_codegen_block(ptr nonnull %0, ptr %1, ptr nonnull %31)
  %33 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i42.i = getelementptr inbounds %Block, ptr %33, i64 0, i32 1
  %34 = load i1, ptr %memberidx.i42.i, align 1
  %memberidx1.i43.i = getelementptr inbounds %Block, ptr %33, i64 0, i32 2
  %35 = load i1, ptr %memberidx1.i43.i, align 1
  %36 = or i1 %34, %35
  %memberidx2.i44.i = getelementptr inbounds %Block, ptr %33, i64 0, i32 3
  %37 = load i1, ptr %memberidx2.i44.i, align 1
  %38 = or i1 %36, %37
  br i1 %38, label %else13.i, label %if.entry12.i

if.entry12.i:                                     ; preds = %if.entry7.i, %ifend.i24
  %39 = call ptr @LLVMBuildBr(ptr %1, ptr %20)
  br label %CodeGen_codegen_if_stmt.exit

else13.i:                                         ; preds = %if.entry7.i
  br i1 %29, label %if.entry15.i25, label %CodeGen_codegen_if_stmt.exit

if.entry15.i25:                                   ; preds = %else13.i
  call void @LLVMDeleteBasicBlock(ptr %20)
  br label %CodeGen_codegen_if_stmt.exit

CodeGen_codegen_if_stmt.exit:                     ; preds = %if.entry12.i, %else13.i, %if.entry15.i25
  call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %20)
  %.pr = load i64, ptr %10, align 4
  br label %ifend.i

ifend.i:                                          ; preds = %CodeGen_codegen_if_stmt.exit, %for.body
  %40 = phi i64 [ %.pr, %CodeGen_codegen_if_stmt.exit ], [ %11, %for.body ]
  %41 = icmp eq i64 %40, 3
  br i1 %41, label %if.entry2.i, label %ifend4.i

if.entry2.i:                                      ; preds = %ifend.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %iter_func_type.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %next_func_type.i)
  %42 = load ptr, ptr %memberidx.i26, align 8
  %43 = load ptr, ptr %memberidx1.i27, align 8
  %44 = load ptr, ptr %memberidx1.i19, align 8
  %45 = call ptr @LLVMAppendBasicBlock(ptr %44, ptr nonnull @283)
  %46 = call ptr @LLVMBuildBr(ptr %1, ptr %45)
  call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %45)
  %47 = load ptr, ptr %memberidx1.i19, align 8
  %48 = call ptr @LLVMAppendBasicBlock(ptr %47, ptr nonnull @284)
  %49 = load ptr, ptr %memberidx1.i19, align 8
  %50 = call ptr @LLVMAppendBasicBlock(ptr %49, ptr nonnull @285)
  %51 = load ptr, ptr %memberidx1.i19, align 8
  %52 = call ptr @LLVMAppendBasicBlock(ptr %51, ptr nonnull @286)
  %memberidx6.i29 = getelementptr inbounds %ForStatement, ptr %10, i64 0, i32 2
  %53 = load ptr, ptr %memberidx6.i29, align 8
  %54 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %53)
  %55 = load ptr, ptr %memberidx6.i29, align 8
  %memberidx8.i = getelementptr inbounds %Expression, ptr %55, i64 0, i32 3
  %56 = load ptr, ptr %memberidx8.i, align 8
  %57 = call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %57, align 8
  %58 = call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i.i, align 4
  %59 = call fastcc ptr @CodeGen_codgen_get_member_with_name(ptr %0, ptr %1, ptr %54, ptr %56, ptr nonnull %58, ptr nonnull %iter_func_type.i)
  store ptr %54, ptr %args.i, align 8
  %memberidx9.i = getelementptr inbounds %ForStatement, ptr %10, i64 0, i32 1
  %60 = load ptr, ptr %memberidx9.i, align 8
  call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr %1, ptr %60)
  %61 = load ptr, ptr %iter_func_type.i, align 8
  %memberidx10.i = getelementptr inbounds %FunctionType, ptr %61, i64 0, i32 2
  %62 = load ptr, ptr %memberidx10.i, align 8
  %63 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %61, i1 false)
  %64 = call ptr @LLVMBuildCall2(ptr %1, ptr %63, ptr %59, ptr nonnull %args.i, i64 1, ptr nonnull @78)
  store ptr %64, ptr %args.i, align 8
  %65 = call ptr @malloc(i32 4)
  store i32 1954047342, ptr %65, align 8
  %66 = call ptr @malloc(i32 24)
  store ptr %65, ptr %66, align 8
  %memberidx1.i.i71.i = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i71.i, align 4
  %memberidx2.i.i72.i = getelementptr inbounds %String, ptr %66, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i72.i, align 4
  %67 = call fastcc ptr @CodeGen_codgen_get_member_with_name(ptr %0, ptr %1, ptr %64, ptr %62, ptr nonnull %66, ptr nonnull %next_func_type.i)
  %68 = call ptr @LLVMBuildBr(ptr %1, ptr %48)
  call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %48)
  %69 = load ptr, ptr %next_func_type.i, align 8
  %70 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %69, i1 false)
  %71 = call ptr @LLVMBuildCall2(ptr %1, ptr %70, ptr %67, ptr nonnull %args.i, i64 1, ptr nonnull @78)
  %72 = load ptr, ptr %memberidx9.i, align 8
  %memberidx12.i = getelementptr inbounds %VarDeclaration, ptr %72, i64 0, i32 2
  %73 = load ptr, ptr %memberidx12.i, align 8
  %74 = call fastcc ptr @CodeGen_get_var_from_varid(ptr %0, ptr %73)
  %75 = call ptr @malloc(i32 4)
  store i32 1701736292, ptr %75, align 8
  %76 = call ptr @malloc(i32 24)
  store ptr %75, ptr %76, align 8
  %memberidx1.i.i73.i = getelementptr inbounds %String, ptr %76, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i73.i, align 4
  %memberidx2.i.i74.i = getelementptr inbounds %String, ptr %76, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i74.i, align 4
  %77 = call fastcc ptr @CodeGen_codgen_get_member_with_name(ptr %0, ptr %1, ptr %64, ptr %62, ptr nonnull %76, ptr null)
  %78 = call ptr @LLVMBuildStore(ptr %1, ptr %71, ptr %74)
  %79 = call ptr @LLVMBuildCondBr(ptr %1, ptr %77, ptr %52, ptr %50)
  call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %50)
  store ptr %52, ptr %memberidx.i26, align 8
  store ptr %48, ptr %memberidx1.i27, align 8
  %memberidx15.i = getelementptr inbounds %ForStatement, ptr %10, i64 0, i32 3
  %80 = load ptr, ptr %memberidx15.i, align 8
  %81 = call fastcc ptr @CodeGen_codegen_block(ptr %0, ptr %1, ptr %80)
  %82 = load ptr, ptr %memberidx15.i, align 8
  %memberidx.i.i30 = getelementptr inbounds %Block, ptr %82, i64 0, i32 1
  %83 = load i1, ptr %memberidx.i.i30, align 1
  %memberidx1.i.i31 = getelementptr inbounds %Block, ptr %82, i64 0, i32 2
  %84 = load i1, ptr %memberidx1.i.i31, align 1
  %85 = or i1 %83, %84
  %memberidx2.i.i32 = getelementptr inbounds %Block, ptr %82, i64 0, i32 3
  %86 = load i1, ptr %memberidx2.i.i32, align 1
  %87 = or i1 %85, %86
  br i1 %87, label %CodeGen_codegen_for_stmt.exit, label %if.entry.i33

if.entry.i33:                                     ; preds = %if.entry2.i
  %88 = call ptr @LLVMBuildBr(ptr %1, ptr %48)
  br label %CodeGen_codegen_for_stmt.exit

CodeGen_codegen_for_stmt.exit:                    ; preds = %if.entry2.i, %if.entry.i33
  call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %52)
  %89 = call ptr @LLVMBuildFree(ptr %1, ptr %64)
  store ptr %42, ptr %memberidx.i26, align 8
  store ptr %43, ptr %memberidx1.i27, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %iter_func_type.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %next_func_type.i)
  %.pre = load i64, ptr %10, align 4
  br label %ifend4.i

ifend4.i:                                         ; preds = %CodeGen_codegen_for_stmt.exit, %ifend.i
  %90 = phi i64 [ %.pre, %CodeGen_codegen_for_stmt.exit ], [ %40, %ifend.i ]
  %91 = icmp eq i64 %90, 4
  br i1 %91, label %if.entry6.i, label %ifend8.i

if.entry6.i:                                      ; preds = %ifend4.i
  %92 = load ptr, ptr %memberidx1.i19, align 8
  %93 = call ptr @LLVMAppendBasicBlock(ptr %92, ptr nonnull @287)
  %94 = load ptr, ptr %memberidx1.i19, align 8
  %95 = call ptr @LLVMAppendBasicBlock(ptr %94, ptr nonnull @288)
  %96 = load ptr, ptr %memberidx1.i19, align 8
  %97 = call ptr @LLVMAppendBasicBlock(ptr %96, ptr nonnull @289)
  %98 = load ptr, ptr %memberidx.i26, align 8
  %99 = load ptr, ptr %memberidx1.i27, align 8
  store ptr %95, ptr %memberidx.i26, align 8
  store ptr %93, ptr %memberidx1.i27, align 8
  %100 = call ptr @LLVMBuildBr(ptr %1, ptr %93)
  call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %93)
  %memberidx7.i = getelementptr inbounds %WhileStatement, ptr %10, i64 0, i32 1
  %101 = load ptr, ptr %memberidx7.i, align 8
  %102 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %101)
  %103 = call ptr @LLVMBuildCondBr(ptr %1, ptr %102, ptr %97, ptr %95)
  call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %97)
  %memberidx8.i38 = getelementptr inbounds %WhileStatement, ptr %10, i64 0, i32 2
  %104 = load ptr, ptr %memberidx8.i38, align 8
  %105 = call fastcc ptr @CodeGen_codegen_block(ptr %0, ptr %1, ptr %104)
  %106 = load ptr, ptr %memberidx8.i38, align 8
  %memberidx.i.i39 = getelementptr inbounds %Block, ptr %106, i64 0, i32 1
  %107 = load i1, ptr %memberidx.i.i39, align 1
  %memberidx1.i.i40 = getelementptr inbounds %Block, ptr %106, i64 0, i32 2
  %108 = load i1, ptr %memberidx1.i.i40, align 1
  %109 = or i1 %107, %108
  %memberidx2.i.i41 = getelementptr inbounds %Block, ptr %106, i64 0, i32 3
  %110 = load i1, ptr %memberidx2.i.i41, align 1
  %111 = or i1 %109, %110
  br i1 %111, label %CodeGen_codegen_while_stmt.exit, label %if.entry.i42

if.entry.i42:                                     ; preds = %if.entry6.i
  %112 = call ptr @LLVMBuildBr(ptr %1, ptr %93)
  br label %CodeGen_codegen_while_stmt.exit

CodeGen_codegen_while_stmt.exit:                  ; preds = %if.entry6.i, %if.entry.i42
  call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %95)
  store ptr %98, ptr %memberidx.i26, align 8
  store ptr %99, ptr %memberidx1.i27, align 8
  %.pr44 = load i64, ptr %10, align 4
  br label %ifend8.i

ifend8.i:                                         ; preds = %CodeGen_codegen_while_stmt.exit, %ifend4.i
  %113 = phi i64 [ %.pr44, %CodeGen_codegen_while_stmt.exit ], [ %90, %ifend4.i ]
  %114 = icmp eq i64 %113, 5
  br i1 %114, label %if.entry10.i, label %ifend12.i

if.entry10.i:                                     ; preds = %ifend8.i
  %115 = load ptr, ptr %memberidx1.i27, align 8
  %116 = call ptr @LLVMBuildBr(ptr %1, ptr %115)
  %.pre51 = load i64, ptr %10, align 4
  br label %ifend12.i

ifend12.i:                                        ; preds = %if.entry10.i, %ifend8.i
  %117 = phi i64 [ %.pre51, %if.entry10.i ], [ %113, %ifend8.i ]
  %118 = icmp eq i64 %117, 6
  br i1 %118, label %if.entry15.i, label %ifend17.i

if.entry15.i:                                     ; preds = %ifend12.i
  %119 = load ptr, ptr %memberidx.i26, align 8
  %120 = call ptr @LLVMBuildBr(ptr %1, ptr %119)
  %.pr45 = load i64, ptr %10, align 4
  br label %ifend17.i

ifend17.i:                                        ; preds = %if.entry15.i, %ifend12.i
  %121 = phi i64 [ %.pr45, %if.entry15.i ], [ %117, %ifend12.i ]
  %122 = icmp eq i64 %121, 1
  br i1 %122, label %if.entry20.i, label %ifend22.i

if.entry20.i:                                     ; preds = %ifend17.i
  call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr %1, ptr nonnull %10)
  %.pre52 = load i64, ptr %10, align 4
  br label %ifend22.i

ifend22.i:                                        ; preds = %if.entry20.i, %ifend17.i
  %123 = phi i64 [ %.pre52, %if.entry20.i ], [ %121, %ifend17.i ]
  %124 = icmp eq i64 %123, 2
  br i1 %124, label %if.entry24.i, label %ifend26.i

if.entry24.i:                                     ; preds = %ifend22.i
  call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr %1, ptr nonnull %10)
  %.pr46 = load i64, ptr %10, align 4
  br label %ifend26.i

ifend26.i:                                        ; preds = %if.entry24.i, %ifend22.i
  %125 = phi i64 [ %.pr46, %if.entry24.i ], [ %123, %ifend22.i ]
  %126 = icmp eq i64 %125, 7
  br i1 %126, label %if.entry28.i, label %ifend30.i

if.entry28.i:                                     ; preds = %ifend26.i
  %memberidx.i14 = getelementptr inbounds %ReturnStatement, ptr %10, i64 0, i32 1
  %127 = load ptr, ptr %memberidx.i14, align 8
  %.not.i = icmp eq ptr %127, null
  br i1 %.not.i, label %ifend.i16, label %if.entry.i15

if.entry.i15:                                     ; preds = %if.entry28.i
  %128 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %127)
  %129 = load ptr, ptr %memberidx.i14, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %129, i64 0, i32 3
  %130 = load ptr, ptr %memberidx3.i, align 8
  %131 = load i64, ptr %130, align 4
  %.not12.i = icmp eq i64 %131, 10
  br i1 %.not12.i, label %ifend.i16, label %if.entry5.i

ifend.i16:                                        ; preds = %if.entry.i15, %if.entry28.i
  %132 = call ptr @LLVMBuildRetVoid(ptr %1)
  br label %ifend30.i

if.entry5.i:                                      ; preds = %if.entry.i15
  %133 = call ptr @LLVMBuildRet(ptr %1, ptr %128)
  br label %ifend30.i

ifend30.i:                                        ; preds = %if.entry5.i, %ifend.i16, %ifend26.i
  %134 = load i64, ptr %10, align 4
  %135 = icmp eq i64 %134, 8
  br i1 %135, label %if.entry32.i, label %CodeGen_codegen_statement.exit

if.entry32.i:                                     ; preds = %ifend30.i
  %136 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %10)
  br label %CodeGen_codegen_statement.exit

CodeGen_codegen_statement.exit:                   ; preds = %ifend30.i, %if.entry32.i
  %137 = add nuw nsw i64 %9, 1
  %138 = getelementptr inbounds ptr, ptr %6, i64 %9
  %.not53 = icmp slt i64 %9, %7
  br i1 %.not53, label %for.body, label %for.end

for.end:                                          ; preds = %CodeGen_codegen_statement.exit, %for.entry
  tail call void @free(ptr nonnull %5)
  %memberidx4 = getelementptr inbounds %Block, ptr %2, i64 0, i32 4
  %139 = load ptr, ptr %memberidx4, align 8
  %.not = icmp eq ptr %139, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %for.end
  %140 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %139)
  br label %ifend

ifend:                                            ; preds = %for.end, %if.entry
  %yields.0 = phi ptr [ %140, %if.entry ], [ null, %for.end ]
  store i1 %3, ptr %memberidx, align 1
  ret ptr %yields.0
}

define internal fastcc void @CodeGen_codegen_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = load ptr, ptr %1, align 8
  %6 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %5)
  %memberidx1 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = tail call ptr @malloc(i32 25)
  %9 = load ptr, ptr %7, align 8
  %memberidx1.i = getelementptr inbounds %Array_ClassMethod_, ptr %7, i64 0, i32 1
  %10 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %8, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %8, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %8, i64 0, i32 3
  store ptr %9, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %8, i64 0, i32 2
  store i64 %10, ptr %memberidx3.i.i, align 4
  %11 = icmp slt i64 %10, 1
  br i1 %11, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx5 = getelementptr inbounds %CGClassType, ptr %6, i64 0, i32 3
  %memberidx8 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %memberidx15 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx21 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx33 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %memberidx43 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.next.backedge
  %.in = phi ptr [ %9, %for.body.lr.ph ], [ %212, %for.next.backedge ]
  %12 = phi i64 [ 1, %for.body.lr.ph ], [ %211, %for.next.backedge ]
  %13 = load ptr, ptr %.in, align 8
  %memberidx3 = getelementptr inbounds %ClassMethod, ptr %13, i64 0, i32 7
  %14 = load i1, ptr %memberidx3, align 1
  br i1 %14, label %for.next.backedge, label %ifend

for.end:                                          ; preds = %for.next.backedge, %for.entry
  tail call void @free(ptr nonnull %8)
  ret void

ifend:                                            ; preds = %for.body
  %15 = load ptr, ptr %13, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i88 = getelementptr inbounds %PropId, ptr %15, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i88, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %17 = load i64, ptr %16, align 4
  %memberidx1.i.i89 = getelementptr inbounds %TypeId, ptr %16, i64 0, i32 1
  %18 = load i64, ptr %memberidx1.i.i89, align 4
  %memberidx2.i.i90 = getelementptr inbounds %TypeId, ptr %16, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i.i90, align 4
  %20 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %17, i64 %18, i64 %19)
  %21 = load ptr, ptr %3, align 8
  %22 = call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %22, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %23 = trunc i64 %20 to i32
  %24 = add i32 %23, 1
  %25 = call ptr @malloc(i32 %24)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %21, i64 %20, i1 false)
  %26 = getelementptr inbounds i8, ptr %25, i64 %20
  store i8 0, ptr %26, align 1
  %27 = load i64, ptr %15, align 4
  %memberidx2.i91 = getelementptr inbounds %PropId, ptr %15, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i91, align 4
  %29 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @259, ptr %25, i64 %27, i64 %28)
  %30 = load ptr, ptr %4, align 8
  %31 = call ptr @malloc(i32 24)
  store ptr %30, ptr %31, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %31, i64 0, i32 1
  store i64 %29, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %31, i64 0, i32 2
  store i64 %29, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %25)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %32 = load ptr, ptr %memberidx5, align 8
  %33 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %31)
  %memberidx.i92 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %32, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i92, align 4
  %35 = urem i64 %33, %34
  %36 = load ptr, ptr %32, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  %.not.i177 = icmp eq ptr %38, null
  br i1 %.not.i177, label %while.end.i, label %while.body.i

while.end.i:                                      ; preds = %else.i, %ifend.i.i, %ifend
  %memberidx6 = getelementptr inbounds %ClassMethod, ptr %13, i64 0, i32 3
  %39 = load ptr, ptr %memberidx6, align 8
  %40 = call ptr @malloc(i32 11)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %40, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %41 = call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  %memberidx1.i.i95 = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i95, align 4
  %memberidx2.i.i96 = getelementptr inbounds %String, ptr %41, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i96, align 4
  %memberidx.i97 = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i97, align 4
  %.not.i99 = icmp eq i64 %42, 11
  br i1 %.not.i99, label %ifend.i, label %String___eq__.exit

while.body.i:                                     ; preds = %ifend, %else.i
  %43 = phi ptr [ %51, %else.i ], [ %36, %ifend ]
  %44 = phi i64 [ %52, %else.i ], [ %34, %ifend ]
  %45 = phi ptr [ %56, %else.i ], [ %38, %ifend ]
  %hash.0.i178 = phi i64 [ %54, %else.i ], [ %35, %ifend ]
  %46 = load ptr, ptr %45, align 8
  %memberidx.i.i93 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx.i.i93, align 4
  %.not.i.i = icmp eq i64 %47, %29
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %48 = load ptr, ptr %46, align 8
  %49 = call i64 @memcmp(ptr %48, ptr %30, i64 %29)
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i92, align 4
  %.pre197 = load ptr, ptr %32, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %51 = phi ptr [ %.pre197, %ifend.i.i.else.i_crit_edge ], [ %43, %while.body.i ]
  %52 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %44, %while.body.i ]
  %53 = add nuw i64 %hash.0.i178, 1
  %54 = urem i64 %53, %52
  %55 = getelementptr inbounds ptr, ptr %51, i64 %54
  %56 = load ptr, ptr %55, align 8
  %.not.i = icmp eq ptr %56, null
  br i1 %.not.i, label %while.end.i, label %while.body.i

ifend.i:                                          ; preds = %while.end.i
  %57 = load ptr, ptr %39, align 8
  %58 = call i64 @memcmp(ptr %57, ptr nonnull %40, i64 11)
  %59 = icmp eq i64 %58, 0
  br label %String___eq__.exit

String___eq__.exit:                               ; preds = %while.end.i, %ifend.i
  %common.ret.op.i100 = phi i1 [ %59, %ifend.i ], [ false, %while.end.i ]
  %60 = load ptr, ptr %0, align 8
  %61 = load ptr, ptr %memberidx8, align 8
  %memberidx.i101 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i101, align 4
  %63 = trunc i64 %62 to i32
  %64 = add i32 %63, 1
  %65 = call ptr @malloc(i32 %64)
  %66 = load ptr, ptr %61, align 8
  %67 = load i64, ptr %memberidx.i101, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %65, ptr align 8 %66, i64 %67, i1 false)
  %68 = getelementptr inbounds i8, ptr %65, i64 %67
  store i8 0, ptr %68, align 1
  %69 = load ptr, ptr %memberidx6, align 8
  %memberidx.i102 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  %70 = load i64, ptr %memberidx.i102, align 4
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, 1
  %73 = call ptr @malloc(i32 %72)
  %74 = load ptr, ptr %69, align 8
  %75 = load i64, ptr %memberidx.i102, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %73, ptr align 8 %74, i64 %75, i1 false)
  %76 = getelementptr inbounds i8, ptr %73, i64 %75
  store i8 0, ptr %76, align 1
  %77 = alloca ptr, align 8
  %78 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %77, ptr nonnull @104, ptr %65, ptr %73)
  %79 = load ptr, ptr %77, align 8
  %80 = tail call ptr @malloc(i32 24)
  store ptr %79, ptr %80, align 8
  %memberidx1.i103 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  store i64 %78, ptr %memberidx1.i103, align 4
  %memberidx2.i104 = getelementptr inbounds %String, ptr %80, i64 0, i32 2
  store i64 %78, ptr %memberidx2.i104, align 4
  tail call void @free(ptr %65)
  tail call void @free(ptr %73)
  %81 = trunc i64 %78 to i32
  %82 = add i32 %81, 1
  %83 = call ptr @malloc(i32 %82)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %83, ptr align 8 %79, i64 %78, i1 false)
  %84 = getelementptr inbounds i8, ptr %83, i64 %78
  store i8 0, ptr %84, align 1
  %85 = call ptr @LLVMGetNamedFunction(ptr %60, ptr %83)
  %86 = call ptr @LLVMAppendBasicBlock(ptr %85, ptr nonnull @78)
  %87 = call ptr @LLVMCreateBuilder()
  call void @LLVMPositionBuilderAtEnd(ptr %87, ptr %86)
  %memberidx10 = getelementptr inbounds %ClassMethod, ptr %13, i64 0, i32 8
  %88 = load ptr, ptr %memberidx10, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nonnull %0, ptr %87, ptr %88)
  %memberidx11 = getelementptr inbounds %ClassMethod, ptr %13, i64 0, i32 1
  %89 = load i1, ptr %memberidx11, align 1
  br i1 %89, label %for.entry34, label %if.entry12

if.entry12:                                       ; preds = %String___eq__.exit
  %90 = call ptr @LLVMGetParam(ptr %85, i64 0)
  %91 = load ptr, ptr %memberidx15, align 8
  %92 = load ptr, ptr %memberidx10, align 8
  %93 = load ptr, ptr %91, align 8
  %94 = load i64, ptr %92, align 4
  %95 = load ptr, ptr %93, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %94
  %97 = load ptr, ptr %96, align 8
  %memberidx2.i106 = getelementptr inbounds %Module, ptr %97, i64 0, i32 7
  %98 = load ptr, ptr %memberidx2.i106, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %92, i64 0, i32 1
  %99 = load i64, ptr %memberidx3.i, align 4
  %100 = load ptr, ptr %98, align 8
  %101 = getelementptr inbounds ptr, ptr %100, i64 %99
  %102 = load ptr, ptr %101, align 8
  %memberidx17 = getelementptr inbounds %Scope, ptr %102, i64 0, i32 1
  %103 = load ptr, ptr %memberidx17, align 8
  %104 = call ptr @malloc(i32 4)
  store i32 1936287860, ptr %104, align 8
  %105 = call ptr @malloc(i32 24)
  store ptr %104, ptr %105, align 8
  %memberidx1.i.i107 = getelementptr inbounds %String, ptr %105, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i107, align 4
  %memberidx2.i.i108 = getelementptr inbounds %String, ptr %105, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i108, align 4
  %106 = call fastcc i64 @Map_String_VarId__hash_fnc(ptr nonnull %105)
  %memberidx.i109 = getelementptr inbounds %Map_String_VarId_, ptr %103, i64 0, i32 1
  %107 = load i64, ptr %memberidx.i109, align 4
  %108 = urem i64 %106, %107
  %109 = load ptr, ptr %103, align 8
  %110 = getelementptr inbounds ptr, ptr %109, i64 %108
  %111 = load ptr, ptr %110, align 8
  %.not.i111179 = icmp eq ptr %111, null
  br i1 %.not.i111179, label %Map_String_VarId____getitem__.exit, label %while.body.i118

while.end.i114:                                   ; preds = %ifend.i.i119
  %.pre200.pre = load ptr, ptr %103, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre200.pre, i64 %hash.0.i110180
  %.pre201.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i113 = icmp eq ptr %.pre201.pre, null
  br i1 %.not22.i113, label %Map_String_VarId____getitem__.exit, label %if.entry6.i125

while.body.i118:                                  ; preds = %if.entry12, %else.i122
  %112 = phi ptr [ %120, %else.i122 ], [ %109, %if.entry12 ]
  %113 = phi i64 [ %121, %else.i122 ], [ %107, %if.entry12 ]
  %114 = phi ptr [ %125, %else.i122 ], [ %111, %if.entry12 ]
  %hash.0.i110180 = phi i64 [ %123, %else.i122 ], [ %108, %if.entry12 ]
  %115 = load ptr, ptr %114, align 8
  %memberidx.i.i115 = getelementptr inbounds %String, ptr %115, i64 0, i32 1
  %116 = load i64, ptr %memberidx.i.i115, align 4
  %.not.i.i117 = icmp eq i64 %116, 4
  br i1 %.not.i.i117, label %ifend.i.i119, label %else.i122

ifend.i.i119:                                     ; preds = %while.body.i118
  %117 = load ptr, ptr %115, align 8
  %118 = call i64 @memcmp(ptr %117, ptr nonnull %104, i64 4)
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %while.end.i114, label %ifend.i.i119.else.i122_crit_edge

ifend.i.i119.else.i122_crit_edge:                 ; preds = %ifend.i.i119
  %.pre198 = load i64, ptr %memberidx.i109, align 4
  %.pre199 = load ptr, ptr %103, align 8
  br label %else.i122

else.i122:                                        ; preds = %ifend.i.i119.else.i122_crit_edge, %while.body.i118
  %120 = phi ptr [ %.pre199, %ifend.i.i119.else.i122_crit_edge ], [ %112, %while.body.i118 ]
  %121 = phi i64 [ %.pre198, %ifend.i.i119.else.i122_crit_edge ], [ %113, %while.body.i118 ]
  %122 = add nuw i64 %hash.0.i110180, 1
  %123 = urem i64 %122, %121
  %124 = getelementptr inbounds ptr, ptr %120, i64 %123
  %125 = load ptr, ptr %124, align 8
  %.not.i111 = icmp eq ptr %125, null
  br i1 %.not.i111, label %Map_String_VarId____getitem__.exit, label %while.body.i118

if.entry6.i125:                                   ; preds = %while.end.i114
  %memberidx10.i124 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre201.pre, i64 0, i32 1
  %126 = load ptr, ptr %memberidx10.i124, align 8
  br label %Map_String_VarId____getitem__.exit

Map_String_VarId____getitem__.exit:               ; preds = %else.i122, %if.entry12, %while.end.i114, %if.entry6.i125
  %common.ret.op.i123 = phi ptr [ %126, %if.entry6.i125 ], [ null, %while.end.i114 ], [ null, %if.entry12 ], [ null, %else.i122 ]
  %127 = call fastcc ptr @CodeGen_get_var_from_varid(ptr nonnull %0, ptr %common.ret.op.i123)
  %128 = call ptr @LLVMBuildStore(ptr %87, ptr %90, ptr %127)
  br i1 %common.ret.op.i100, label %if.entry18, label %for.entry34

if.entry18:                                       ; preds = %Map_String_VarId____getitem__.exit
  %129 = load ptr, ptr %memberidx21, align 8
  %.not = icmp eq ptr %129, null
  br i1 %.not, label %for.entry34, label %if.entry22

if.entry22:                                       ; preds = %if.entry18
  %130 = load ptr, ptr %memberidx15, align 8
  %131 = load ptr, ptr %memberidx10, align 8
  %132 = load ptr, ptr %130, align 8
  %133 = load i64, ptr %131, align 4
  %134 = load ptr, ptr %132, align 8
  %135 = getelementptr inbounds ptr, ptr %134, i64 %133
  %136 = load ptr, ptr %135, align 8
  %memberidx2.i126 = getelementptr inbounds %Module, ptr %136, i64 0, i32 7
  %137 = load ptr, ptr %memberidx2.i126, align 8
  %memberidx3.i127 = getelementptr inbounds %ScopeId, ptr %131, i64 0, i32 1
  %138 = load i64, ptr %memberidx3.i127, align 4
  %139 = load ptr, ptr %137, align 8
  %140 = getelementptr inbounds ptr, ptr %139, i64 %138
  %141 = load ptr, ptr %140, align 8
  %memberidx27 = getelementptr inbounds %Scope, ptr %141, i64 0, i32 1
  %142 = load ptr, ptr %memberidx27, align 8
  %143 = call ptr @malloc(i32 5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %143, ptr noundef nonnull align 8 dereferenceable(5) @153, i64 5, i1 false)
  %144 = call ptr @malloc(i32 24)
  store ptr %143, ptr %144, align 8
  %memberidx1.i.i128 = getelementptr inbounds %String, ptr %144, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i128, align 4
  %memberidx2.i.i129 = getelementptr inbounds %String, ptr %144, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i129, align 4
  %145 = call fastcc i64 @Map_String_VarId__hash_fnc(ptr nonnull %144)
  %memberidx.i130 = getelementptr inbounds %Map_String_VarId_, ptr %142, i64 0, i32 1
  %146 = load i64, ptr %memberidx.i130, align 4
  %147 = urem i64 %145, %146
  %148 = load ptr, ptr %142, align 8
  %149 = getelementptr inbounds ptr, ptr %148, i64 %147
  %150 = load ptr, ptr %149, align 8
  %.not.i132182 = icmp eq ptr %150, null
  br i1 %.not.i132182, label %for.entry34, label %while.body.i139

while.end.i135:                                   ; preds = %ifend.i.i140
  %.pre204.pre = load ptr, ptr %142, align 8
  %.phi.trans.insert205.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre204.pre, i64 %hash.0.i131183
  %.pre206.pre = load ptr, ptr %.phi.trans.insert205.phi.trans.insert, align 8
  %.not22.i134 = icmp eq ptr %.pre206.pre, null
  br i1 %.not22.i134, label %for.entry34, label %Map_String_VarId____getitem__.exit147

while.body.i139:                                  ; preds = %if.entry22, %else.i143
  %151 = phi ptr [ %159, %else.i143 ], [ %148, %if.entry22 ]
  %152 = phi i64 [ %160, %else.i143 ], [ %146, %if.entry22 ]
  %153 = phi ptr [ %164, %else.i143 ], [ %150, %if.entry22 ]
  %hash.0.i131183 = phi i64 [ %162, %else.i143 ], [ %147, %if.entry22 ]
  %154 = load ptr, ptr %153, align 8
  %memberidx.i.i136 = getelementptr inbounds %String, ptr %154, i64 0, i32 1
  %155 = load i64, ptr %memberidx.i.i136, align 4
  %.not.i.i138 = icmp eq i64 %155, 5
  br i1 %.not.i.i138, label %ifend.i.i140, label %else.i143

ifend.i.i140:                                     ; preds = %while.body.i139
  %156 = load ptr, ptr %154, align 8
  %157 = call i64 @memcmp(ptr %156, ptr %143, i64 5)
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %while.end.i135, label %ifend.i.i140.else.i143_crit_edge

ifend.i.i140.else.i143_crit_edge:                 ; preds = %ifend.i.i140
  %.pre202 = load i64, ptr %memberidx.i130, align 4
  %.pre203 = load ptr, ptr %142, align 8
  br label %else.i143

else.i143:                                        ; preds = %ifend.i.i140.else.i143_crit_edge, %while.body.i139
  %159 = phi ptr [ %.pre203, %ifend.i.i140.else.i143_crit_edge ], [ %151, %while.body.i139 ]
  %160 = phi i64 [ %.pre202, %ifend.i.i140.else.i143_crit_edge ], [ %152, %while.body.i139 ]
  %161 = add nuw i64 %hash.0.i131183, 1
  %162 = urem i64 %161, %160
  %163 = getelementptr inbounds ptr, ptr %159, i64 %162
  %164 = load ptr, ptr %163, align 8
  %.not.i132 = icmp eq ptr %164, null
  br i1 %.not.i132, label %for.entry34, label %while.body.i139

Map_String_VarId____getitem__.exit147:            ; preds = %while.end.i135
  %memberidx10.i145 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre206.pre, i64 0, i32 1
  %165 = load ptr, ptr %memberidx10.i145, align 8
  %.not87 = icmp eq ptr %165, null
  br i1 %.not87, label %for.entry34, label %if.entry28

if.entry28:                                       ; preds = %Map_String_VarId____getitem__.exit147
  %memberidx31 = getelementptr inbounds %ObjectType, ptr %129, i64 0, i32 1
  %166 = load ptr, ptr %memberidx31, align 8
  %167 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %166)
  %.not.i158 = icmp eq ptr %167, null
  br i1 %.not.i158, label %ifend.i163, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i163:                                       ; preds = %if.entry28
  %168 = load ptr, ptr %memberidx15, align 8
  %169 = load ptr, ptr %168, align 8
  %170 = load i64, ptr %166, align 4
  %171 = load ptr, ptr %169, align 8
  %172 = getelementptr inbounds ptr, ptr %171, i64 %170
  %173 = load ptr, ptr %172, align 8
  %memberidx2.i.i161 = getelementptr inbounds %Module, ptr %173, i64 0, i32 3
  %174 = load ptr, ptr %memberidx2.i.i161, align 8
  %memberidx3.i.i162 = getelementptr inbounds %TypeId, ptr %166, i64 0, i32 2
  %175 = load i64, ptr %memberidx3.i.i162, align 4
  %176 = load ptr, ptr %174, align 8
  %177 = getelementptr inbounds ptr, ptr %176, i64 %175
  %178 = load ptr, ptr %177, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %178)
  call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %178)
  %179 = load ptr, ptr %178, align 8
  %180 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %179)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry28, %ifend.i163
  %common.ret.op.i159 = phi ptr [ %180, %ifend.i163 ], [ %167, %if.entry28 ]
  %memberidx32 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i159, i64 0, i32 4
  %181 = load ptr, ptr %memberidx32, align 8
  %182 = call fastcc ptr @CodeGen_get_var_from_varid(ptr nonnull %0, ptr nonnull %165)
  %183 = call ptr @LLVMBuildStore(ptr %87, ptr %181, ptr %182)
  %184 = load ptr, ptr %memberidx33, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %memberidx.i148 = getelementptr inbounds %VarId, ptr %165, i64 0, i32 1
  %185 = load i64, ptr %memberidx.i148, align 4
  %186 = load i64, ptr %165, align 4
  %memberidx2.i149 = getelementptr inbounds %VarId, ptr %165, i64 0, i32 2
  %187 = load i64, ptr %memberidx2.i149, align 4
  %188 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @243, i64 %185, i64 %186, i64 %187)
  %189 = load ptr, ptr %2, align 8
  %190 = call ptr @malloc(i32 24)
  store ptr %189, ptr %190, align 8
  %memberidx1.i.i150 = getelementptr inbounds %String, ptr %190, i64 0, i32 1
  store i64 %188, ptr %memberidx1.i.i150, align 4
  %memberidx2.i.i151 = getelementptr inbounds %String, ptr %190, i64 0, i32 2
  store i64 %188, ptr %memberidx2.i.i151, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %184, ptr nonnull %190, ptr %90)
  br label %for.entry34

for.entry34:                                      ; preds = %else.i143, %if.entry22, %while.end.i135, %Map_String_VarId____getitem__.exit, %if.entry18, %Map_String_VarId____getitem__.exit147, %CodeGen_get_or_codegen_class_from_typeid.exit, %String___eq__.exit
  %offset.0 = phi i64 [ 0, %String___eq__.exit ], [ 1, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ 1, %Map_String_VarId____getitem__.exit147 ], [ 1, %if.entry18 ], [ 1, %Map_String_VarId____getitem__.exit ], [ 1, %while.end.i135 ], [ 1, %if.entry22 ], [ 1, %else.i143 ]
  %memberidx38 = getelementptr inbounds %ClassMethod, ptr %13, i64 0, i32 6
  %191 = load ptr, ptr %memberidx38, align 8
  %memberidx39 = getelementptr inbounds %Array_FunctionArg_, ptr %191, i64 0, i32 1
  %192 = load i64, ptr %memberidx39, align 4
  %193 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %193, align 4
  %memberidx1.i152 = getelementptr inbounds %Range, ptr %193, i64 0, i32 1
  store i64 %192, ptr %memberidx1.i152, align 4
  %194 = call ptr @malloc(i32 17)
  %195 = icmp slt i64 %192, 1
  br i1 %195, label %for.end37, label %for.body36

for.body36:                                       ; preds = %for.entry34, %for.body36
  %196 = phi i64 [ %207, %for.body36 ], [ 1, %for.entry34 ]
  %197 = phi i64 [ %196, %for.body36 ], [ 0, %for.entry34 ]
  %198 = add nuw nsw i64 %197, %offset.0
  %199 = call ptr @LLVMGetParam(ptr %85, i64 %198)
  %200 = load ptr, ptr %memberidx38, align 8
  %201 = load ptr, ptr %200, align 8
  %202 = getelementptr inbounds ptr, ptr %201, i64 %197
  %203 = load ptr, ptr %202, align 8
  %memberidx42 = getelementptr inbounds %FunctionArg, ptr %203, i64 0, i32 4
  %204 = load ptr, ptr %memberidx42, align 8
  %205 = call fastcc ptr @CodeGen_get_var_from_varid(ptr nonnull %0, ptr %204)
  %206 = call ptr @LLVMBuildStore(ptr %87, ptr %199, ptr %205)
  %.not211 = icmp slt i64 %196, %192
  %207 = add nuw nsw i64 %196, 1
  br i1 %.not211, label %for.body36, label %for.end37

for.end37:                                        ; preds = %for.body36, %for.entry34
  tail call void @free(ptr nonnull %194)
  %208 = load ptr, ptr %memberidx43, align 8
  store ptr %85, ptr %memberidx43, align 8
  %memberidx45 = getelementptr inbounds %ClassMethod, ptr %13, i64 0, i32 5
  %209 = load ptr, ptr %memberidx45, align 8
  %210 = call fastcc ptr @CodeGen_codegen_block(ptr nonnull %0, ptr %87, ptr %209)
  store ptr %208, ptr %memberidx43, align 8
  call void @LLVMDisposeBuilder(ptr %87)
  br label %for.next.backedge

for.next.backedge:                                ; preds = %for.end37, %for.body
  %211 = add nuw nsw i64 %12, 1
  %212 = getelementptr inbounds ptr, ptr %9, i64 %12
  %.not212 = icmp slt i64 %12, %10
  br i1 %.not212, label %for.body, label %for.end
}

define internal fastcc ptr @CodeGen_codegen_string_to_cstring(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %args = alloca [1 x ptr], align 8
  %prop_ty = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Module, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = load i64, ptr %8, align 4
  %10 = getelementptr inbounds ptr, ptr %6, i64 %9
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 7
  %12 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %8, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx4 = getelementptr inbounds %Scope, ptr %16, i64 0, i32 2
  %17 = load ptr, ptr %memberidx4, align 8
  %18 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %18, ptr noundef nonnull align 8 dereferenceable(6) @186, i64 6, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i12 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i12, align 4
  %memberidx2.i.i13 = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i13, align 4
  %20 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr nonnull %19)
  %memberidx.i10 = getelementptr inbounds %Map_String_ClassId_, ptr %17, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i10, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %17, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i16 = icmp eq ptr %25, null
  br i1 %.not.i16, label %Map_String_ClassId____getitem__.exit, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre20.pre = load ptr, ptr %17, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre20.pre, i64 %hash.0.i17
  %.pre21.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre21.pre, null
  br i1 %.not22.i, label %Map_String_ClassId____getitem__.exit, label %if.entry6.i

while.body.i:                                     ; preds = %3, %else.i
  %26 = phi ptr [ %34, %else.i ], [ %23, %3 ]
  %27 = phi i64 [ %35, %else.i ], [ %21, %3 ]
  %28 = phi ptr [ %39, %else.i ], [ %25, %3 ]
  %hash.0.i17 = phi i64 [ %37, %else.i ], [ %22, %3 ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %30, 6
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i64 @memcmp(ptr %31, ptr %18, i64 6)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i10, align 4
  %.pre19 = load ptr, ptr %17, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %34 = phi ptr [ %.pre19, %ifend.i.i.else.i_crit_edge ], [ %26, %while.body.i ]
  %35 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %27, %while.body.i ]
  %36 = add nuw i64 %hash.0.i17, 1
  %37 = urem i64 %36, %35
  %38 = getelementptr inbounds ptr, ptr %34, i64 %37
  %39 = load ptr, ptr %38, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %Map_String_ClassId____getitem__.exit, label %while.body.i

if.entry6.i:                                      ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_ClassId_, ptr %.pre21.pre, i64 0, i32 1
  %40 = load ptr, ptr %memberidx10.i, align 8
  br label %Map_String_ClassId____getitem__.exit

Map_String_ClassId____getitem__.exit:             ; preds = %else.i, %3, %while.end.i, %if.entry6.i
  %common.ret.op.i = phi ptr [ %40, %if.entry6.i ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  %41 = alloca %ObjectType, align 8
  store i64 11, ptr %41, align 8
  %memberidx.i = getelementptr inbounds %ObjectType, ptr %41, i64 0, i32 1
  store ptr %common.ret.op.i, ptr %memberidx.i, align 8
  %42 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %42, ptr noundef nonnull align 8 dereferenceable(10) @279, i64 10, i1 false)
  %43 = tail call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 10, ptr %memberidx2.i.i, align 4
  %44 = call fastcc ptr @CodeGen_codgen_get_member_with_name(ptr %0, ptr %1, ptr %2, ptr nonnull %41, ptr nonnull %43, ptr nonnull %prop_ty)
  store ptr %2, ptr %args, align 8
  %45 = load ptr, ptr %prop_ty, align 8
  %46 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %45, i1 false)
  %47 = call ptr @LLVMBuildCall2(ptr %1, ptr %46, ptr %44, ptr nonnull %args, i64 1, ptr nonnull @78)
  ret ptr %47
}

define internal fastcc void @Map_String_CGClassType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx21, align 8
  tail call fastcc void @Map_String_CGClassType____setitem__(ptr nonnull %0, ptr %24, ptr %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_CGClassType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_CGClassType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_CGClassType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_CGClassType__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_get_string_val(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr nocapture %4, i64 %5) unnamed_addr {
  %indices = alloca [1 x ptr], align 8
  %7 = load i64, ptr %3, align 4
  switch i64 %7, label %is_object.exit297 [
    i64 0, label %if.entry
    i64 20, label %if.entry.i294
  ]

common.ret:                                       ; preds = %ifend4, %if.entry.i, %Map_String_LLVMValueRef____getitem__.exit, %if.entry.i124, %Map_String_LLVMValueRef____getitem__.exit209, %CodeGen_get_or_codegen_enum_from_typeid.exit, %Array_LLVMValueRef____sl__.exit103, %Array_LLVMValueRef____sl__.exit150, %CodeGen_createGlobalLLVMString.exit163
  %common.ret.op = phi ptr [ %67, %CodeGen_createGlobalLLVMString.exit163 ], [ %103, %Array_LLVMValueRef____sl__.exit150 ], [ %270, %Array_LLVMValueRef____sl__.exit103 ], [ %379, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %193, %if.entry.i124 ], [ %186, %Map_String_LLVMValueRef____getitem__.exit209 ], [ %358, %if.entry.i ], [ %354, %Map_String_LLVMValueRef____getitem__.exit ], [ %2, %ifend4 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %6
  %8 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  %memberidx1.i.i172 = getelementptr inbounds %String, ptr %9, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i172, align 4
  %memberidx2.i.i173 = getelementptr inbounds %String, ptr %9, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i173, align 4
  %memberidx.i166 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %memberidx.i166, align 8
  %11 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %9)
  %memberidx.i228 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %10, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i228, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %10, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i230326 = icmp eq ptr %16, null
  br i1 %.not.i230326, label %if.entry.i168, label %while.body.i237

while.end.i233:                                   ; preds = %ifend.i.i238
  %.pre340.pre = load ptr, ptr %10, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre340.pre, i64 %hash.0.i229327
  %.pre341.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i232 = icmp eq ptr %.pre341.pre, null
  br i1 %.not22.i232, label %if.entry.i168, label %Map_String_LLVMValueRef____getitem__.exit245

while.body.i237:                                  ; preds = %if.entry, %else.i241
  %17 = phi ptr [ %25, %else.i241 ], [ %14, %if.entry ]
  %18 = phi i64 [ %26, %else.i241 ], [ %12, %if.entry ]
  %19 = phi ptr [ %30, %else.i241 ], [ %16, %if.entry ]
  %hash.0.i229327 = phi i64 [ %28, %else.i241 ], [ %13, %if.entry ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i234 = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i.i234, align 4
  %.not.i.i236 = icmp eq i64 %21, 4
  br i1 %.not.i.i236, label %ifend.i.i238, label %else.i241

ifend.i.i238:                                     ; preds = %while.body.i237
  %22 = load ptr, ptr %20, align 8
  %23 = tail call i64 @memcmp(ptr %22, ptr nonnull %8, i64 4)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i233, label %ifend.i.i238.else.i241_crit_edge

ifend.i.i238.else.i241_crit_edge:                 ; preds = %ifend.i.i238
  %.pre = load i64, ptr %memberidx.i228, align 4
  %.pre339 = load ptr, ptr %10, align 8
  br label %else.i241

else.i241:                                        ; preds = %ifend.i.i238.else.i241_crit_edge, %while.body.i237
  %25 = phi ptr [ %.pre339, %ifend.i.i238.else.i241_crit_edge ], [ %17, %while.body.i237 ]
  %26 = phi i64 [ %.pre, %ifend.i.i238.else.i241_crit_edge ], [ %18, %while.body.i237 ]
  %27 = add nuw i64 %hash.0.i229327, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not.i230 = icmp eq ptr %30, null
  br i1 %.not.i230, label %if.entry.i168, label %while.body.i237

Map_String_LLVMValueRef____getitem__.exit245:     ; preds = %while.end.i233
  %memberidx10.i243 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre341.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx10.i243, align 8
  %32 = icmp eq ptr %31, null
  br i1 %32, label %if.entry.i168, label %CodeGen_createGlobalLLVMString.exit171

if.entry.i168:                                    ; preds = %else.i241, %if.entry, %while.end.i233, %Map_String_LLVMValueRef____getitem__.exit245
  %33 = tail call ptr @malloc(i32 5)
  %34 = load i32, ptr %8, align 8
  store i32 %34, ptr %33, align 8
  %35 = getelementptr inbounds i8, ptr %33, i64 4
  store i8 0, ptr %35, align 1
  %36 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr nonnull %33, ptr nonnull @78)
  %37 = load ptr, ptr %memberidx.i166, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %37, ptr nonnull %9, ptr %36)
  br label %CodeGen_createGlobalLLVMString.exit171

CodeGen_createGlobalLLVMString.exit171:           ; preds = %Map_String_LLVMValueRef____getitem__.exit245, %if.entry.i168
  %str.0.i169 = phi ptr [ %36, %if.entry.i168 ], [ %31, %Map_String_LLVMValueRef____getitem__.exit245 ]
  %38 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %38, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i.i164 = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i164, align 4
  %memberidx2.i.i165 = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i165, align 4
  %40 = load ptr, ptr %memberidx.i166, align 8
  %41 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %39)
  %memberidx.i210 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %40, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i210, align 4
  %43 = urem i64 %41, %42
  %44 = load ptr, ptr %40, align 8
  %45 = getelementptr inbounds ptr, ptr %44, i64 %43
  %46 = load ptr, ptr %45, align 8
  %.not.i212322 = icmp eq ptr %46, null
  br i1 %.not.i212322, label %if.entry.i160, label %while.body.i219

while.end.i215:                                   ; preds = %ifend.i.i220
  %.pre344.pre = load ptr, ptr %40, align 8
  %.phi.trans.insert345.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre344.pre, i64 %hash.0.i211323
  %.pre346.pre = load ptr, ptr %.phi.trans.insert345.phi.trans.insert, align 8
  %.not22.i214 = icmp eq ptr %.pre346.pre, null
  br i1 %.not22.i214, label %if.entry.i160, label %Map_String_LLVMValueRef____getitem__.exit227

while.body.i219:                                  ; preds = %CodeGen_createGlobalLLVMString.exit171, %else.i223
  %47 = phi ptr [ %55, %else.i223 ], [ %44, %CodeGen_createGlobalLLVMString.exit171 ]
  %48 = phi i64 [ %56, %else.i223 ], [ %42, %CodeGen_createGlobalLLVMString.exit171 ]
  %49 = phi ptr [ %60, %else.i223 ], [ %46, %CodeGen_createGlobalLLVMString.exit171 ]
  %hash.0.i211323 = phi i64 [ %58, %else.i223 ], [ %43, %CodeGen_createGlobalLLVMString.exit171 ]
  %50 = load ptr, ptr %49, align 8
  %memberidx.i.i216 = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i.i216, align 4
  %.not.i.i218 = icmp eq i64 %51, 5
  br i1 %.not.i.i218, label %ifend.i.i220, label %else.i223

ifend.i.i220:                                     ; preds = %while.body.i219
  %52 = load ptr, ptr %50, align 8
  %53 = tail call i64 @memcmp(ptr %52, ptr %38, i64 5)
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %while.end.i215, label %ifend.i.i220.else.i223_crit_edge

ifend.i.i220.else.i223_crit_edge:                 ; preds = %ifend.i.i220
  %.pre342 = load i64, ptr %memberidx.i210, align 4
  %.pre343 = load ptr, ptr %40, align 8
  br label %else.i223

else.i223:                                        ; preds = %ifend.i.i220.else.i223_crit_edge, %while.body.i219
  %55 = phi ptr [ %.pre343, %ifend.i.i220.else.i223_crit_edge ], [ %47, %while.body.i219 ]
  %56 = phi i64 [ %.pre342, %ifend.i.i220.else.i223_crit_edge ], [ %48, %while.body.i219 ]
  %57 = add nuw i64 %hash.0.i211323, 1
  %58 = urem i64 %57, %56
  %59 = getelementptr inbounds ptr, ptr %55, i64 %58
  %60 = load ptr, ptr %59, align 8
  %.not.i212 = icmp eq ptr %60, null
  br i1 %.not.i212, label %if.entry.i160, label %while.body.i219

Map_String_LLVMValueRef____getitem__.exit227:     ; preds = %while.end.i215
  %memberidx10.i225 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre346.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx10.i225, align 8
  %62 = icmp eq ptr %61, null
  br i1 %62, label %if.entry.i160, label %CodeGen_createGlobalLLVMString.exit163

if.entry.i160:                                    ; preds = %else.i223, %CodeGen_createGlobalLLVMString.exit171, %while.end.i215, %Map_String_LLVMValueRef____getitem__.exit227
  %63 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %63, ptr noundef nonnull align 8 dereferenceable(5) %38, i64 5, i1 false)
  %64 = getelementptr inbounds i8, ptr %63, i64 5
  store i8 0, ptr %64, align 1
  %65 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %63, ptr nonnull @78)
  %66 = load ptr, ptr %memberidx.i166, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %66, ptr nonnull %39, ptr %65)
  br label %CodeGen_createGlobalLLVMString.exit163

CodeGen_createGlobalLLVMString.exit163:           ; preds = %Map_String_LLVMValueRef____getitem__.exit227, %if.entry.i160
  %str.0.i161 = phi ptr [ %65, %if.entry.i160 ], [ %61, %Map_String_LLVMValueRef____getitem__.exit227 ]
  %67 = tail call ptr @LLVMBuildSelect(ptr %1, ptr %2, ptr %str.0.i169, ptr %str.0.i161, ptr nonnull @78)
  br label %common.ret

if.entry.i294:                                    ; preds = %6, %if.entry.i294
  %.tr5.i292 = phi ptr [ %68, %if.entry.i294 ], [ %3, %6 ]
  %memberidx1.i293 = getelementptr inbounds %GenericType, ptr %.tr5.i292, i64 0, i32 3
  %68 = load ptr, ptr %memberidx1.i293, align 8
  %69 = load i64, ptr %68, align 4
  %70 = icmp eq i64 %69, 20
  br i1 %70, label %if.entry.i294, label %is_object.exit297

is_object.exit297:                                ; preds = %if.entry.i294, %6
  %.lcssa.i295 = phi i64 [ %7, %6 ], [ %69, %if.entry.i294 ]
  %71 = icmp eq i64 %.lcssa.i295, 11
  br i1 %71, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit297
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %72 = load ptr, ptr %memberidx, align 8
  %73 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %73, ptr noundef nonnull align 8 dereferenceable(6) @186, i64 6, i1 false)
  %74 = tail call ptr @malloc(i32 24)
  store ptr %73, ptr %74, align 8
  %memberidx1.i.i156 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i156, align 4
  %memberidx2.i.i157 = getelementptr inbounds %String, ptr %74, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i157, align 4
  %75 = load i64, ptr %3, align 4
  %76 = icmp eq i64 %75, 20
  br i1 %76, label %if.entry.i288, label %is_object.exit291.thread

if.entry.i288:                                    ; preds = %if.entry2, %if.entry.i288
  %.tr5.i286 = phi ptr [ %77, %if.entry.i288 ], [ %3, %if.entry2 ]
  %memberidx1.i287 = getelementptr inbounds %GenericType, ptr %.tr5.i286, i64 0, i32 3
  %77 = load ptr, ptr %memberidx1.i287, align 8
  %78 = load i64, ptr %77, align 4
  switch i64 %78, label %ifend7 [
    i64 20, label %if.entry.i288
    i64 11, label %tailrecurse.i277.preheader
  ]

is_object.exit291.thread:                         ; preds = %if.entry2
  %79 = icmp eq i64 %75, 11
  br i1 %79, label %if.entry3.i284, label %ifend7

tailrecurse.i277.preheader:                       ; preds = %if.entry.i288
  br i1 %76, label %if.entry.i280, label %if.entry3.i284

if.entry.i280:                                    ; preds = %tailrecurse.i277.preheader, %if.entry.i280
  %.tr11.i276316 = phi ptr [ %80, %if.entry.i280 ], [ %3, %tailrecurse.i277.preheader ]
  %memberidx1.i279 = getelementptr inbounds %GenericType, ptr %.tr11.i276316, i64 0, i32 3
  %80 = load ptr, ptr %memberidx1.i279, align 8
  %81 = load i64, ptr %80, align 4
  %switch = icmp eq i64 %81, 20
  br i1 %switch, label %if.entry.i280, label %if.entry3.i284

if.entry3.i284:                                   ; preds = %if.entry.i280, %is_object.exit291.thread, %tailrecurse.i277.preheader
  %.tr11.i276.lcssa = phi ptr [ %3, %tailrecurse.i277.preheader ], [ %3, %is_object.exit291.thread ], [ %80, %if.entry.i280 ]
  %memberidx6.i281 = getelementptr inbounds %ObjectType, ptr %.tr11.i276.lcssa, i64 0, i32 1
  %82 = load ptr, ptr %memberidx6.i281, align 8
  %83 = load ptr, ptr %72, align 8
  %84 = load i64, ptr %82, align 4
  %85 = load ptr, ptr %83, align 8
  %86 = getelementptr inbounds ptr, ptr %85, i64 %84
  %87 = load ptr, ptr %86, align 8
  %memberidx2.i.i282 = getelementptr inbounds %Module, ptr %87, i64 0, i32 3
  %88 = load ptr, ptr %memberidx2.i.i282, align 8
  %memberidx3.i.i283 = getelementptr inbounds %TypeId, ptr %82, i64 0, i32 2
  %89 = load i64, ptr %memberidx3.i.i283, align 4
  %90 = load ptr, ptr %88, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %89
  %92 = load ptr, ptr %91, align 8
  %memberidx.i152 = getelementptr inbounds %Class, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx.i152, align 8
  %memberidx.i.i153 = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  %94 = load i64, ptr %memberidx.i.i153, align 4
  %.not.i.i = icmp eq i64 %94, 6
  br i1 %.not.i.i, label %String___eq__.exit.i, label %ifend7

String___eq__.exit.i:                             ; preds = %if.entry3.i284
  %95 = load ptr, ptr %93, align 8
  %96 = tail call i64 @memcmp(ptr %95, ptr %73, i64 6)
  %97 = icmp eq i64 %96, 0
  %98 = load ptr, ptr %92, align 8
  %99 = load i64, ptr %98, align 4
  %100 = load i64, ptr @BUILTIN_MODULE_ID, align 8
  %101 = icmp eq i64 %99, %100
  %102 = and i1 %97, %101
  br i1 %102, label %if.entry5, label %ifend7

ifend4:                                           ; preds = %is_object.exit297
  switch i64 %7, label %common.ret [
    i64 16, label %if.entry26
    i64 12, label %if.entry30
  ]

if.entry5:                                        ; preds = %String___eq__.exit.i
  %103 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %2)
  %memberidx.i146 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %104 = load i64, ptr %memberidx.i146, align 4
  %105 = add i64 %104, 1
  %memberidx.i.i147 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %106 = load i64, ptr %memberidx.i.i147, align 4
  %107 = icmp slt i64 %106, %105
  %.pre368 = load ptr, ptr %4, align 8
  br i1 %107, label %while.body.i.i149, label %Array_LLVMValueRef____sl__.exit150

while.body.i.i149:                                ; preds = %if.entry5, %while.body.i.i149
  %108 = phi ptr [ %112, %while.body.i.i149 ], [ %.pre368, %if.entry5 ]
  %109 = phi i64 [ %113, %while.body.i.i149 ], [ %106, %if.entry5 ]
  %110 = shl nuw i64 %109, 1
  store i64 %110, ptr %memberidx.i.i147, align 4
  %111 = shl i64 %109, 4
  %112 = tail call ptr @realloc(ptr %108, i64 %111)
  store ptr %112, ptr %4, align 8
  %113 = load i64, ptr %memberidx.i.i147, align 4
  %114 = icmp slt i64 %113, %105
  br i1 %114, label %while.body.i.i149, label %Array_LLVMValueRef____sl__.exit150.loopexit

Array_LLVMValueRef____sl__.exit150.loopexit:      ; preds = %while.body.i.i149
  %.pre369 = load i64, ptr %memberidx.i146, align 4
  %.pre379 = add nsw i64 %.pre369, 1
  br label %Array_LLVMValueRef____sl__.exit150

Array_LLVMValueRef____sl__.exit150:               ; preds = %if.entry5, %Array_LLVMValueRef____sl__.exit150.loopexit
  %.pre-phi = phi i64 [ %.pre379, %Array_LLVMValueRef____sl__.exit150.loopexit ], [ %105, %if.entry5 ]
  %115 = phi ptr [ %112, %Array_LLVMValueRef____sl__.exit150.loopexit ], [ %.pre368, %if.entry5 ]
  %116 = phi i64 [ %.pre369, %Array_LLVMValueRef____sl__.exit150.loopexit ], [ %104, %if.entry5 ]
  store i64 %.pre-phi, ptr %memberidx.i146, align 4
  %117 = getelementptr inbounds ptr, ptr %115, i64 %116
  store ptr %103, ptr %117, align 8
  br label %common.ret

ifend7:                                           ; preds = %if.entry.i288, %is_object.exit291.thread, %if.entry3.i284, %String___eq__.exit.i
  %118 = load ptr, ptr %memberidx, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i272, %ifend7
  %.tr11.i = phi ptr [ %3, %ifend7 ], [ %120, %if.entry.i272 ]
  %119 = load i64, ptr %.tr11.i, align 4
  switch i64 %119, label %get_class_from_type.exit [
    i64 20, label %if.entry.i272
    i64 11, label %if.entry3.i
  ]

if.entry.i272:                                    ; preds = %tailrecurse.i
  %memberidx1.i271 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %120 = load ptr, ptr %memberidx1.i271, align 8
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i273 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %121 = load ptr, ptr %memberidx6.i273, align 8
  %122 = load ptr, ptr %118, align 8
  %123 = load i64, ptr %121, align 4
  %124 = load ptr, ptr %122, align 8
  %125 = getelementptr inbounds ptr, ptr %124, i64 %123
  %126 = load ptr, ptr %125, align 8
  %memberidx2.i.i274 = getelementptr inbounds %Module, ptr %126, i64 0, i32 3
  %127 = load ptr, ptr %memberidx2.i.i274, align 8
  %memberidx3.i.i275 = getelementptr inbounds %TypeId, ptr %121, i64 0, i32 2
  %128 = load i64, ptr %memberidx3.i.i275, align 4
  %129 = load ptr, ptr %127, align 8
  %130 = getelementptr inbounds ptr, ptr %129, i64 %128
  %131 = load ptr, ptr %130, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i270 = phi ptr [ %131, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx9 = getelementptr inbounds %Class, ptr %common.ret.op.i270, i64 0, i32 1
  %132 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %String, ptr %132, i64 0, i32 1
  %133 = load i64, ptr %memberidx10, align 4
  %134 = add nuw i64 %133, 14
  %135 = trunc i64 %134 to i32
  %136 = tail call ptr @malloc(i32 %135)
  %137 = tail call ptr @malloc(i32 24)
  store ptr %136, ptr %137, align 8
  %memberidx1.i.i143 = getelementptr inbounds %String, ptr %137, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i143, align 4
  %memberidx.i145 = getelementptr inbounds %String, ptr %137, i64 0, i32 2
  store i64 %134, ptr %memberidx.i145, align 4
  %138 = load ptr, ptr %memberidx9, align 8
  %memberidx.i142 = getelementptr inbounds %String, ptr %138, i64 0, i32 1
  %139 = load i64, ptr %memberidx.i142, align 4
  %140 = trunc i64 %139 to i32
  %141 = add i32 %140, 1
  %142 = tail call ptr @malloc(i32 %141)
  %143 = load ptr, ptr %138, align 8
  %144 = load i64, ptr %memberidx.i142, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %142, ptr align 8 %143, i64 %144, i1 false)
  %145 = getelementptr inbounds i8, ptr %142, i64 %144
  store i8 0, ptr %145, align 1
  %146 = alloca ptr, align 8
  %147 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %146, ptr nonnull @247, ptr %142)
  %148 = load ptr, ptr %146, align 8
  %149 = tail call ptr @malloc(i32 24)
  store ptr %148, ptr %149, align 8
  %memberidx1.i140 = getelementptr inbounds %String, ptr %149, i64 0, i32 1
  store i64 %147, ptr %memberidx1.i140, align 4
  %memberidx2.i141 = getelementptr inbounds %String, ptr %149, i64 0, i32 2
  store i64 %147, ptr %memberidx2.i141, align 4
  tail call void @free(ptr %142)
  %150 = icmp slt i64 %134, %147
  br i1 %150, label %if.entry.i.i.i138, label %String___adda__.exit139

if.entry.i.i.i138:                                ; preds = %get_class_from_type.exit
  %151 = call ptr @realloc(ptr %136, i64 %147)
  store ptr %151, ptr %137, align 8
  store i64 %147, ptr %memberidx.i145, align 4
  br label %String___adda__.exit139

String___adda__.exit139:                          ; preds = %get_class_from_type.exit, %if.entry.i.i.i138
  %152 = phi i64 [ %134, %get_class_from_type.exit ], [ %147, %if.entry.i.i.i138 ]
  %153 = phi ptr [ %136, %get_class_from_type.exit ], [ %151, %if.entry.i.i.i138 ]
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %153, ptr align 8 %148, i64 %147, i1 false)
  store i64 %147, ptr %memberidx1.i.i143, align 4
  %154 = icmp eq i64 %5, 3
  br i1 %154, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %String___adda__.exit139
  %155 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %155, ptr noundef nonnull align 8 dereferenceable(6) @248, i64 6, i1 false)
  %156 = call ptr @malloc(i32 24)
  store ptr %155, ptr %156, align 8
  %memberidx1.i.i133 = getelementptr inbounds %String, ptr %156, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i133, align 4
  %memberidx2.i.i134 = getelementptr inbounds %String, ptr %156, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i134, align 4
  %157 = add nuw i64 %147, 6
  %158 = icmp slt i64 %152, %157
  br i1 %158, label %if.entry.i.i.i131, label %String___adda__.exit132

if.entry.i.i.i131:                                ; preds = %if.entry12
  %159 = call ptr @realloc(ptr %153, i64 %157)
  store ptr %159, ptr %137, align 8
  store i64 %157, ptr %memberidx.i145, align 4
  br label %String___adda__.exit132

String___adda__.exit132:                          ; preds = %if.entry12, %if.entry.i.i.i131
  %160 = phi ptr [ %153, %if.entry12 ], [ %159, %if.entry.i.i.i131 ]
  %161 = getelementptr inbounds i8, ptr %160, i64 %147
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 536870912 dereferenceable(6) %161, ptr noundef nonnull align 8 dereferenceable(6) %155, i64 6, i1 false)
  %162 = load i64, ptr %memberidx1.i.i143, align 4
  %163 = add nuw i64 %162, 6
  store i64 %163, ptr %memberidx1.i.i143, align 4
  %memberidx.i122 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %164 = load ptr, ptr %memberidx.i122, align 8
  %165 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %137)
  %memberidx.i192 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %164, i64 0, i32 1
  %166 = load i64, ptr %memberidx.i192, align 4
  %167 = urem i64 %165, %166
  %168 = load ptr, ptr %164, align 8
  %169 = getelementptr inbounds ptr, ptr %168, i64 %167
  %170 = load ptr, ptr %169, align 8
  %.not.i194306 = icmp eq ptr %170, null
  br i1 %.not.i194306, label %if.entry.i124, label %while.body.i201

while.end.i197:                                   ; preds = %ifend.i.i202
  %.pre365.pre = load ptr, ptr %164, align 8
  %.phi.trans.insert366.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre365.pre, i64 %hash.0.i193307
  %.pre367.pre = load ptr, ptr %.phi.trans.insert366.phi.trans.insert, align 8
  %.not22.i196 = icmp eq ptr %.pre367.pre, null
  br i1 %.not22.i196, label %if.entry.i124, label %Map_String_LLVMValueRef____getitem__.exit209

while.body.i201:                                  ; preds = %String___adda__.exit132, %else.i205
  %171 = phi ptr [ %180, %else.i205 ], [ %168, %String___adda__.exit132 ]
  %172 = phi i64 [ %181, %else.i205 ], [ %166, %String___adda__.exit132 ]
  %173 = phi ptr [ %185, %else.i205 ], [ %170, %String___adda__.exit132 ]
  %hash.0.i193307 = phi i64 [ %183, %else.i205 ], [ %167, %String___adda__.exit132 ]
  %174 = load ptr, ptr %173, align 8
  %memberidx.i.i198 = getelementptr inbounds %String, ptr %174, i64 0, i32 1
  %175 = load i64, ptr %memberidx.i.i198, align 4
  %.not.i.i200 = icmp eq i64 %175, %163
  br i1 %.not.i.i200, label %ifend.i.i202, label %else.i205

ifend.i.i202:                                     ; preds = %while.body.i201
  %176 = load ptr, ptr %174, align 8
  %177 = load ptr, ptr %137, align 8
  %178 = call i64 @memcmp(ptr %176, ptr %177, i64 %163)
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %while.end.i197, label %ifend.i.i202.else.i205_crit_edge

ifend.i.i202.else.i205_crit_edge:                 ; preds = %ifend.i.i202
  %.pre363 = load i64, ptr %memberidx.i192, align 4
  %.pre364 = load ptr, ptr %164, align 8
  br label %else.i205

else.i205:                                        ; preds = %ifend.i.i202.else.i205_crit_edge, %while.body.i201
  %180 = phi ptr [ %.pre364, %ifend.i.i202.else.i205_crit_edge ], [ %171, %while.body.i201 ]
  %181 = phi i64 [ %.pre363, %ifend.i.i202.else.i205_crit_edge ], [ %172, %while.body.i201 ]
  %182 = add nuw i64 %hash.0.i193307, 1
  %183 = urem i64 %182, %181
  %184 = getelementptr inbounds ptr, ptr %180, i64 %183
  %185 = load ptr, ptr %184, align 8
  %.not.i194 = icmp eq ptr %185, null
  br i1 %.not.i194, label %if.entry.i124, label %while.body.i201

Map_String_LLVMValueRef____getitem__.exit209:     ; preds = %while.end.i197
  %memberidx10.i207 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre367.pre, i64 0, i32 1
  %186 = load ptr, ptr %memberidx10.i207, align 8
  %187 = icmp eq ptr %186, null
  br i1 %187, label %if.entry.i124, label %common.ret

if.entry.i124:                                    ; preds = %else.i205, %String___adda__.exit132, %while.end.i197, %Map_String_LLVMValueRef____getitem__.exit209
  %188 = trunc i64 %163 to i32
  %189 = add i32 %188, 1
  %190 = call ptr @malloc(i32 %189)
  %191 = load ptr, ptr %137, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %190, ptr align 8 %191, i64 %163, i1 false)
  %192 = getelementptr inbounds i8, ptr %190, i64 %163
  store i8 0, ptr %192, align 1
  %193 = call ptr @LLVMBuildGlobalString(ptr %1, ptr %190, ptr nonnull @78)
  %194 = load ptr, ptr %memberidx.i122, align 8
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %194, ptr nonnull %137, ptr %193)
  br label %common.ret

ifend14:                                          ; preds = %String___adda__.exit139
  %memberidx15 = getelementptr inbounds %Class, ptr %common.ret.op.i270, i64 0, i32 6
  %195 = load ptr, ptr %memberidx15, align 8
  %memberidx16 = getelementptr inbounds %Map_String_PropId_, ptr %195, i64 0, i32 2
  %196 = load i64, ptr %memberidx16, align 4
  %197 = alloca ptr, i64 %196, align 8
  %198 = call ptr @malloc(i32 25)
  %199 = load ptr, ptr %195, align 8
  %memberidx1.i118 = getelementptr inbounds %Map_String_PropId_, ptr %195, i64 0, i32 1
  %200 = load i64, ptr %memberidx1.i118, align 4
  %201 = load i64, ptr %memberidx16, align 4
  store i1 false, ptr %198, align 1
  %memberidx1.i.i120 = getelementptr inbounds %MapIterator_String_PropId_, ptr %198, i64 0, i32 1
  store ptr %199, ptr %memberidx1.i.i120, align 8
  %memberidx2.i.i121 = getelementptr inbounds %MapIterator_String_PropId_, ptr %198, i64 0, i32 2
  store i64 %200, ptr %memberidx2.i.i121, align 4
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %198, i64 0, i32 3
  store i64 %201, ptr %memberidx3.i.i, align 4
  %202 = add nuw i64 %5, 1
  %memberidx.i97 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %memberidx.i.i98 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  br label %for.next

for.next:                                         ; preds = %String___adda__.exit, %ifend14
  %203 = phi i64 [ %147, %ifend14 ], [ %330, %String___adda__.exit ]
  %204 = phi i64 [ %201, %ifend14 ], [ %213, %String___adda__.exit ]
  %205 = phi ptr [ %199, %ifend14 ], [ %212, %String___adda__.exit ]
  %.lcssa309311 = phi i64 [ %200, %ifend14 ], [ %.lcssa, %String___adda__.exit ]
  %idx.0 = phi i64 [ 0, %ifend14 ], [ %299, %String___adda__.exit ]
  %smin = call i64 @llvm.smin.i64(i64 %.lcssa309311, i64 0)
  %206 = add i64 %smin, -1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.body.i, %for.next
  %207 = phi ptr [ %incdec.ptr.i, %while.body.i ], [ %205, %for.next ]
  %208 = phi i64 [ %210, %while.body.i ], [ %.lcssa309311, %for.next ]
  %209 = icmp sgt i64 %208, 0
  br i1 %209, label %while.body.i, label %MapIterator_String_PropId__next.exit

while.body.i:                                     ; preds = %while.entry.i
  %210 = add nsw i64 %208, -1
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %207, i64 1
  %211 = load ptr, ptr %207, align 8
  %.not.i = icmp eq ptr %211, null
  br i1 %.not.i, label %while.entry.i, label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %while.entry.i, %while.body.i
  %.lcssa = phi i64 [ %206, %while.entry.i ], [ %210, %while.body.i ]
  %212 = phi ptr [ %207, %while.entry.i ], [ %incdec.ptr.i, %while.body.i ]
  %213 = add nsw i64 %204, -1
  %214 = icmp slt i64 %204, 1
  %215 = getelementptr inbounds ptr, ptr %212, i64 -1
  %216 = load ptr, ptr %215, align 8
  br i1 %214, label %for.end, label %for.body

for.body:                                         ; preds = %MapIterator_String_PropId__next.exit
  %217 = load ptr, ptr %memberidx, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_String_PropId_, ptr %216, i64 0, i32 1
  %218 = load ptr, ptr %memberidx20, align 8
  %memberidx.i.i111 = getelementptr inbounds %PropId, ptr %218, i64 0, i32 1
  %219 = load ptr, ptr %memberidx.i.i111, align 8
  %220 = load ptr, ptr %217, align 8
  %221 = load i64, ptr %219, align 4
  %222 = load ptr, ptr %220, align 8
  %223 = getelementptr inbounds ptr, ptr %222, i64 %221
  %224 = load ptr, ptr %223, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %224, i64 0, i32 3
  %225 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %219, i64 0, i32 2
  %226 = load i64, ptr %memberidx3.i.i.i, align 4
  %227 = load ptr, ptr %225, align 8
  %228 = getelementptr inbounds ptr, ptr %227, i64 %226
  %229 = load ptr, ptr %228, align 8
  %230 = load i64, ptr %218, align 4
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %if.entry.i114, label %ifend.i

if.entry.i114:                                    ; preds = %for.body
  %memberidx1.i112 = getelementptr inbounds %Class, ptr %229, i64 0, i32 5
  %232 = load ptr, ptr %memberidx1.i112, align 8
  %memberidx2.i113 = getelementptr inbounds %PropId, ptr %218, i64 0, i32 2
  %233 = load i64, ptr %memberidx2.i113, align 4
  %234 = load ptr, ptr %232, align 8
  %235 = getelementptr inbounds ptr, ptr %234, i64 %233
  %236 = load ptr, ptr %235, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %236, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %229, i64 0, i32 4
  %237 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %218, i64 0, i32 2
  %238 = load i64, ptr %memberidx5.i, align 4
  %239 = load ptr, ptr %237, align 8
  %240 = getelementptr inbounds ptr, ptr %239, i64 %238
  %241 = load ptr, ptr %240, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %241, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i114, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i114 ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %242 = load ptr, ptr %216, align 8
  %243 = call fastcc ptr @CodeGen_codgen_get_member_with_name(ptr nonnull %0, ptr %1, ptr %2, ptr nonnull %3, ptr %242, ptr null)
  %244 = call fastcc ptr @CodeGen_get_string_val(ptr nonnull %0, ptr %1, ptr %243, ptr %common.ret.op.i, ptr %4, i64 %202)
  %245 = load i64, ptr %common.ret.op.i, align 4
  %246 = icmp eq i64 %245, 20
  br i1 %246, label %if.entry.i268, label %is_object.exit

if.entry.i268:                                    ; preds = %get_class_prop_type.exit, %if.entry.i268
  %.tr5.i = phi ptr [ %247, %if.entry.i268 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i267 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %247 = load ptr, ptr %memberidx1.i267, align 8
  %248 = load i64, ptr %247, align 4
  %249 = icmp eq i64 %248, 20
  br i1 %249, label %if.entry.i268, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i268, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %245, %get_class_prop_type.exit ], [ %248, %if.entry.i268 ]
  %250 = icmp eq i64 %.lcssa.i, 11
  %251 = call ptr @LLVMTypeOf(ptr %244)
  %252 = call i64 @LLVMGetTypeKind(ptr %251)
  %253 = icmp ne i64 %252, 12
  %254 = call i1 @LLVMIsGlobalConstant(ptr %244)
  %255 = or i1 %250, %254
  %256 = or i1 %253, %255
  br i1 %256, label %ifend24, label %if.entry22

for.end:                                          ; preds = %MapIterator_String_PropId__next.exit
  tail call void @free(ptr nonnull %198)
  %257 = call ptr @malloc(i32 1)
  store i8 125, ptr %257, align 8
  %258 = call ptr @malloc(i32 24)
  store ptr %257, ptr %258, align 8
  %memberidx1.i.i109 = getelementptr inbounds %String, ptr %258, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i109, align 4
  %memberidx2.i.i110 = getelementptr inbounds %String, ptr %258, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i110, align 4
  %259 = add nuw i64 %203, 1
  %260 = load i64, ptr %memberidx.i145, align 4
  %261 = icmp slt i64 %260, %259
  %262 = load ptr, ptr %137, align 8
  br i1 %261, label %if.entry.i.i.i107, label %String___adda__.exit108

if.entry.i.i.i107:                                ; preds = %for.end
  %263 = call ptr @realloc(ptr %262, i64 %259)
  store ptr %263, ptr %137, align 8
  store i64 %259, ptr %memberidx.i145, align 4
  %.pre358 = load i64, ptr %memberidx1.i.i143, align 4
  %.pre359 = load i8, ptr %257, align 8
  br label %String___adda__.exit108

String___adda__.exit108:                          ; preds = %for.end, %if.entry.i.i.i107
  %264 = phi i8 [ %.pre359, %if.entry.i.i.i107 ], [ 125, %for.end ]
  %265 = phi i64 [ %.pre358, %if.entry.i.i.i107 ], [ %203, %for.end ]
  %266 = phi ptr [ %263, %if.entry.i.i.i107 ], [ %262, %for.end ]
  %267 = getelementptr inbounds i8, ptr %266, i64 %265
  store i8 %264, ptr %267, align 536870912
  %268 = load i64, ptr %memberidx1.i.i143, align 4
  %269 = add nuw i64 %268, 1
  store i64 %269, ptr %memberidx1.i.i143, align 4
  %270 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr nonnull %137, ptr nonnull %197, i64 %196, ptr null)
  %271 = load i64, ptr %memberidx.i97, align 4
  %272 = add i64 %271, 1
  %273 = load i64, ptr %memberidx.i.i98, align 4
  %274 = icmp slt i64 %273, %272
  %.pre360 = load ptr, ptr %4, align 8
  br i1 %274, label %while.body.i.i102, label %Array_LLVMValueRef____sl__.exit103

while.body.i.i102:                                ; preds = %String___adda__.exit108, %while.body.i.i102
  %275 = phi ptr [ %279, %while.body.i.i102 ], [ %.pre360, %String___adda__.exit108 ]
  %276 = phi i64 [ %280, %while.body.i.i102 ], [ %273, %String___adda__.exit108 ]
  %277 = shl nuw i64 %276, 1
  store i64 %277, ptr %memberidx.i.i98, align 4
  %278 = shl i64 %276, 4
  %279 = call ptr @realloc(ptr %275, i64 %278)
  store ptr %279, ptr %4, align 8
  %280 = load i64, ptr %memberidx.i.i98, align 4
  %281 = icmp slt i64 %280, %272
  br i1 %281, label %while.body.i.i102, label %Array_LLVMValueRef____sl__.exit103.loopexit

Array_LLVMValueRef____sl__.exit103.loopexit:      ; preds = %while.body.i.i102
  %.pre361 = load i64, ptr %memberidx.i97, align 4
  %.pre380 = add nsw i64 %.pre361, 1
  br label %Array_LLVMValueRef____sl__.exit103

Array_LLVMValueRef____sl__.exit103:               ; preds = %String___adda__.exit108, %Array_LLVMValueRef____sl__.exit103.loopexit
  %.pre-phi381 = phi i64 [ %.pre380, %Array_LLVMValueRef____sl__.exit103.loopexit ], [ %272, %String___adda__.exit108 ]
  %282 = phi ptr [ %279, %Array_LLVMValueRef____sl__.exit103.loopexit ], [ %.pre360, %String___adda__.exit108 ]
  %283 = phi i64 [ %.pre361, %Array_LLVMValueRef____sl__.exit103.loopexit ], [ %271, %String___adda__.exit108 ]
  store i64 %.pre-phi381, ptr %memberidx.i97, align 4
  %284 = getelementptr inbounds ptr, ptr %282, i64 %283
  store ptr %270, ptr %284, align 8
  br label %common.ret

if.entry22:                                       ; preds = %is_object.exit
  %285 = load i64, ptr %memberidx.i97, align 4
  %286 = add i64 %285, 1
  %287 = load i64, ptr %memberidx.i.i98, align 4
  %288 = icmp slt i64 %287, %286
  %.pre352 = load ptr, ptr %4, align 8
  br i1 %288, label %while.body.i.i, label %Array_LLVMValueRef____sl__.exit

while.body.i.i:                                   ; preds = %if.entry22, %while.body.i.i
  %289 = phi ptr [ %293, %while.body.i.i ], [ %.pre352, %if.entry22 ]
  %290 = phi i64 [ %294, %while.body.i.i ], [ %287, %if.entry22 ]
  %291 = shl nuw i64 %290, 1
  store i64 %291, ptr %memberidx.i.i98, align 4
  %292 = shl i64 %290, 4
  %293 = call ptr @realloc(ptr %289, i64 %292)
  store ptr %293, ptr %4, align 8
  %294 = load i64, ptr %memberidx.i.i98, align 4
  %295 = icmp slt i64 %294, %286
  br i1 %295, label %while.body.i.i, label %Array_LLVMValueRef____sl__.exit.loopexit

Array_LLVMValueRef____sl__.exit.loopexit:         ; preds = %while.body.i.i
  %.pre353 = load i64, ptr %memberidx.i97, align 4
  %.pre382 = add nsw i64 %.pre353, 1
  br label %Array_LLVMValueRef____sl__.exit

Array_LLVMValueRef____sl__.exit:                  ; preds = %if.entry22, %Array_LLVMValueRef____sl__.exit.loopexit
  %.pre-phi383 = phi i64 [ %.pre382, %Array_LLVMValueRef____sl__.exit.loopexit ], [ %286, %if.entry22 ]
  %296 = phi ptr [ %293, %Array_LLVMValueRef____sl__.exit.loopexit ], [ %.pre352, %if.entry22 ]
  %297 = phi i64 [ %.pre353, %Array_LLVMValueRef____sl__.exit.loopexit ], [ %285, %if.entry22 ]
  store i64 %.pre-phi383, ptr %memberidx.i97, align 4
  %298 = getelementptr inbounds ptr, ptr %296, i64 %297
  store ptr %244, ptr %298, align 8
  br label %ifend24

ifend24:                                          ; preds = %is_object.exit, %Array_LLVMValueRef____sl__.exit
  %299 = add nuw nsw i64 %idx.0, 1
  %300 = getelementptr inbounds ptr, ptr %197, i64 %idx.0
  store ptr %244, ptr %300, align 8
  %301 = load ptr, ptr %216, align 8
  %memberidx.i96 = getelementptr inbounds %String, ptr %301, i64 0, i32 1
  %302 = load i64, ptr %memberidx.i96, align 4
  %303 = trunc i64 %302 to i32
  %304 = add i32 %303, 1
  %305 = call ptr @malloc(i32 %304)
  %306 = load ptr, ptr %301, align 8
  %307 = load i64, ptr %memberidx.i96, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %305, ptr align 8 %306, i64 %307, i1 false)
  %308 = getelementptr inbounds i8, ptr %305, i64 %307
  store i8 0, ptr %308, align 1
  %309 = call fastcc ptr @get_format_from_type(ptr nonnull %common.ret.op.i)
  %memberidx.i95 = getelementptr inbounds %String, ptr %309, i64 0, i32 1
  %310 = load i64, ptr %memberidx.i95, align 4
  %311 = trunc i64 %310 to i32
  %312 = add i32 %311, 1
  %313 = call ptr @malloc(i32 %312)
  %314 = load ptr, ptr %309, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %313, ptr align 8 %314, i64 %310, i1 false)
  %315 = getelementptr inbounds i8, ptr %313, i64 %310
  store i8 0, ptr %315, align 1
  %316 = alloca ptr, align 8
  %317 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %316, ptr nonnull @252, ptr %305, ptr %313)
  %318 = load ptr, ptr %316, align 8
  %319 = tail call ptr @malloc(i32 24)
  store ptr %318, ptr %319, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %319, i64 0, i32 1
  store i64 %317, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %319, i64 0, i32 2
  store i64 %317, ptr %memberidx2.i, align 4
  tail call void @free(ptr %305)
  tail call void @free(ptr %313)
  %320 = load i64, ptr %memberidx1.i.i143, align 4
  %321 = add nuw i64 %320, %317
  %322 = load i64, ptr %memberidx.i145, align 4
  %323 = icmp slt i64 %322, %321
  %324 = load ptr, ptr %137, align 8
  br i1 %323, label %if.entry.i.i.i, label %String___adda__.exit

if.entry.i.i.i:                                   ; preds = %ifend24
  %325 = call ptr @realloc(ptr %324, i64 %321)
  store ptr %325, ptr %137, align 8
  store i64 %321, ptr %memberidx.i145, align 4
  %.pre356 = load i64, ptr %memberidx1.i.i143, align 4
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %ifend24, %if.entry.i.i.i
  %326 = phi i64 [ %.pre356, %if.entry.i.i.i ], [ %320, %ifend24 ]
  %327 = phi ptr [ %325, %if.entry.i.i.i ], [ %324, %ifend24 ]
  %328 = getelementptr inbounds i8, ptr %327, i64 %326
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %328, ptr align 8 %318, i64 %317, i1 false)
  %329 = load i64, ptr %memberidx1.i.i143, align 4
  %330 = add nuw i64 %329, %317
  store i64 %330, ptr %memberidx1.i.i143, align 4
  br label %for.next

if.entry26:                                       ; preds = %ifend4
  %331 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %331, ptr noundef nonnull align 8 dereferenceable(10) @253, i64 10, i1 false)
  %332 = tail call ptr @malloc(i32 24)
  store ptr %331, ptr %332, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %332, i64 0, i32 1
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %332, i64 0, i32 2
  store i64 10, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %333 = load ptr, ptr %memberidx.i, align 8
  %334 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %332)
  %memberidx.i181 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %333, i64 0, i32 1
  %335 = load i64, ptr %memberidx.i181, align 4
  %336 = urem i64 %334, %335
  %337 = load ptr, ptr %333, align 8
  %338 = getelementptr inbounds ptr, ptr %337, i64 %336
  %339 = load ptr, ptr %338, align 8
  %.not.i182318 = icmp eq ptr %339, null
  br i1 %.not.i182318, label %if.entry.i, label %while.body.i187

while.end.i:                                      ; preds = %ifend.i.i188
  %.pre349.pre = load ptr, ptr %333, align 8
  %.phi.trans.insert350.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre349.pre, i64 %hash.0.i319
  %.pre351.pre = load ptr, ptr %.phi.trans.insert350.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre351.pre, null
  br i1 %.not22.i, label %if.entry.i, label %Map_String_LLVMValueRef____getitem__.exit

while.body.i187:                                  ; preds = %if.entry26, %else.i
  %340 = phi ptr [ %348, %else.i ], [ %337, %if.entry26 ]
  %341 = phi i64 [ %349, %else.i ], [ %335, %if.entry26 ]
  %342 = phi ptr [ %353, %else.i ], [ %339, %if.entry26 ]
  %hash.0.i319 = phi i64 [ %351, %else.i ], [ %336, %if.entry26 ]
  %343 = load ptr, ptr %342, align 8
  %memberidx.i.i184 = getelementptr inbounds %String, ptr %343, i64 0, i32 1
  %344 = load i64, ptr %memberidx.i.i184, align 4
  %.not.i.i186 = icmp eq i64 %344, 10
  br i1 %.not.i.i186, label %ifend.i.i188, label %else.i

ifend.i.i188:                                     ; preds = %while.body.i187
  %345 = load ptr, ptr %343, align 8
  %346 = tail call i64 @memcmp(ptr %345, ptr %331, i64 10)
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %while.end.i, label %ifend.i.i188.else.i_crit_edge

ifend.i.i188.else.i_crit_edge:                    ; preds = %ifend.i.i188
  %.pre347 = load i64, ptr %memberidx.i181, align 4
  %.pre348 = load ptr, ptr %333, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i188.else.i_crit_edge, %while.body.i187
  %348 = phi ptr [ %.pre348, %ifend.i.i188.else.i_crit_edge ], [ %340, %while.body.i187 ]
  %349 = phi i64 [ %.pre347, %ifend.i.i188.else.i_crit_edge ], [ %341, %while.body.i187 ]
  %350 = add nuw i64 %hash.0.i319, 1
  %351 = urem i64 %350, %349
  %352 = getelementptr inbounds ptr, ptr %348, i64 %351
  %353 = load ptr, ptr %352, align 8
  %.not.i182 = icmp eq ptr %353, null
  br i1 %.not.i182, label %if.entry.i, label %while.body.i187

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre351.pre, i64 0, i32 1
  %354 = load ptr, ptr %memberidx10.i, align 8
  %355 = icmp eq ptr %354, null
  br i1 %355, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %else.i, %if.entry26, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %356 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %356, ptr noundef nonnull align 8 dereferenceable(10) %331, i64 10, i1 false)
  %357 = getelementptr inbounds i8, ptr %356, i64 10
  store i8 0, ptr %357, align 1
  %358 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %356, ptr nonnull @78)
  %359 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %359, ptr nonnull %332, ptr %358)
  br label %common.ret

if.entry30:                                       ; preds = %ifend4
  %memberidx33 = getelementptr inbounds %EnumType, ptr %3, i64 0, i32 1
  %360 = load ptr, ptr %memberidx33, align 8
  %361 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %360)
  %.not.i174 = icmp eq ptr %361, null
  br i1 %.not.i174, label %ifend.i180, label %CodeGen_get_or_codegen_enum_from_typeid.exit

ifend.i180:                                       ; preds = %if.entry30
  %memberidx.i177 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %362 = load ptr, ptr %memberidx.i177, align 8
  %363 = load ptr, ptr %362, align 8
  %364 = load i64, ptr %360, align 4
  %365 = load ptr, ptr %363, align 8
  %366 = getelementptr inbounds ptr, ptr %365, i64 %364
  %367 = load ptr, ptr %366, align 8
  %memberidx2.i.i178 = getelementptr inbounds %Module, ptr %367, i64 0, i32 6
  %368 = load ptr, ptr %memberidx2.i.i178, align 8
  %memberidx3.i.i179 = getelementptr inbounds %TypeId, ptr %360, i64 0, i32 2
  %369 = load i64, ptr %memberidx3.i.i179, align 4
  %370 = load ptr, ptr %368, align 8
  %371 = getelementptr inbounds ptr, ptr %370, i64 %369
  %372 = load ptr, ptr %371, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %372)
  %373 = load ptr, ptr %372, align 8
  %374 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %373)
  br label %CodeGen_get_or_codegen_enum_from_typeid.exit

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry30, %ifend.i180
  %common.ret.op.i175 = phi ptr [ %374, %ifend.i180 ], [ %361, %if.entry30 ]
  %memberidx34 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i175, i64 0, i32 2
  %375 = load ptr, ptr %memberidx34, align 8
  store ptr %2, ptr %indices, align 8
  %376 = tail call ptr @LLVMTypeOf(ptr %375)
  %377 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %376, ptr %375, ptr nonnull %indices, i64 1, ptr nonnull @78)
  %378 = call ptr @LLVMTypeOf(ptr %377)
  %379 = call ptr @LLVMBuildLoad2(ptr %1, ptr %378, ptr %377, ptr nonnull @78)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_var_expr_mem(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %3)
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  %6 = tail call ptr @malloc(i32 45)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %6, ptr noundef nonnull align 8 dereferenceable(45) @258, i64 45, i1 false)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 24)
  %10 = tail call i64 @write(i64 1, ptr %8, i64 7)
  tail call void @free(ptr %8)
  tail call void @free(ptr %9)
  %11 = tail call i64 @write(i64 1, ptr %6, i64 45)
  %12 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %6)
  tail call void @free(ptr %7)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  ret ptr %4
}

define internal fastcc ptr @CodeGen_get_index_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %indices_1 = alloca [1 x ptr], align 8
  %indices = alloca [2 x ptr], align 8
  %indices1 = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %4)
  %memberidx2 = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 4
  %6 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 13
  br i1 %9, label %true_block, label %false_block

true_block:                                       ; preds = %3
  %memberidx4 = getelementptr inbounds %PointerType, ptr %7, i64 0, i32 1
  %10 = load ptr, ptr %memberidx4, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  br label %end

false_block:                                      ; preds = %3
  %12 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %7, i1 true)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %11, %true_block ], [ %12, %false_block ]
  %13 = load i64, ptr %7, align 4
  switch i64 %13, label %ifend10 [
    i64 14, label %if.entry
    i64 15, label %if.entry8
  ]

common.ret:                                       ; preds = %ifend10, %CodeGen_get_expr_mem.exit, %CodeGen_get_expr_mem.exit48
  %common.ret.op = phi ptr [ %23, %CodeGen_get_expr_mem.exit48 ], [ %34, %CodeGen_get_expr_mem.exit ], [ %37, %ifend10 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %end
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 0, i1 false)
  store ptr %15, ptr %indices, align 8
  %16 = getelementptr inbounds ptr, ptr %indices, i64 1
  store ptr %5, ptr %16, align 8
  %17 = load ptr, ptr %memberidx2, align 8
  %memberidx.i40 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx.i40, align 4
  switch i64 %18, label %ifend8.i47 [
    i64 8, label %if.entry.i42
    i64 14, label %if.entry2.i44
    i64 13, label %if.entry6.i46
  ]

if.entry.i42:                                     ; preds = %if.entry
  %19 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

if.entry2.i44:                                    ; preds = %if.entry
  %20 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

if.entry6.i46:                                    ; preds = %if.entry
  %21 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %17, ptr null)
  br label %CodeGen_get_expr_mem.exit48

ifend8.i47:                                       ; preds = %if.entry
  %22 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

CodeGen_get_expr_mem.exit48:                      ; preds = %if.entry.i42, %if.entry2.i44, %if.entry6.i46, %ifend8.i47
  %common.ret.op.i41 = phi ptr [ %19, %if.entry.i42 ], [ %20, %if.entry2.i44 ], [ %21, %if.entry6.i46 ], [ %22, %ifend8.i47 ]
  %23 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %common.ret.op.i41, ptr nonnull %indices, i64 2, ptr nonnull @78)
  br label %common.ret

if.entry8:                                        ; preds = %end
  %24 = tail call ptr @LLVMInt32Type()
  %25 = tail call ptr @LLVMConstInt(ptr %24, i64 0, i1 false)
  store ptr %25, ptr %indices1, align 8
  %26 = getelementptr inbounds ptr, ptr %indices1, i64 1
  %27 = tail call ptr @LLVMConstIntCast(ptr %5, ptr %24, i1 false)
  store ptr %27, ptr %26, align 8
  %28 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx.i, align 4
  switch i64 %29, label %ifend8.i [
    i64 8, label %if.entry.i
    i64 14, label %if.entry2.i
    i64 13, label %if.entry6.i
  ]

if.entry.i:                                       ; preds = %if.entry8
  %30 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry8
  %31 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry8
  %32 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %28, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry8
  %33 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i = phi ptr [ %30, %if.entry.i ], [ %31, %if.entry2.i ], [ %32, %if.entry6.i ], [ %33, %ifend8.i ]
  %34 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %common.ret.op.i, ptr nonnull %indices1, i64 2, ptr nonnull @78)
  br label %common.ret

ifend10:                                          ; preds = %end
  store ptr %5, ptr %indices_1, align 8
  %35 = load ptr, ptr %memberidx2, align 8
  %36 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %35)
  %37 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %36, ptr nonnull %indices_1, i64 1, ptr nonnull @78)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %indices_buffer = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %PropId, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %.not.i39 = icmp eq ptr %9, null
  br i1 %.not.i39, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %4
  %memberidx.i41 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %10 = load ptr, ptr %memberidx.i41, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = load i64, ptr %8, align 4
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx2.i.i42 = getelementptr inbounds %Module, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2.i.i42, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i, align 4
  %18 = load ptr, ptr %16, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %20)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %20)
  %21 = load ptr, ptr %20, align 8
  %22 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %21)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %4, %ifend.i
  %common.ret.op.i40 = phi ptr [ %22, %ifend.i ], [ %9, %4 ]
  %23 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i = getelementptr inbounds %PropId, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %25 = load i64, ptr %24, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i, align 4
  %28 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %25, i64 %26, i64 %27)
  %29 = load ptr, ptr %5, align 8
  %30 = call ptr @malloc(i32 24)
  store ptr %29, ptr %30, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  store i64 %28, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %31 = trunc i64 %28 to i32
  %32 = add i32 %31, 1
  %33 = call ptr @malloc(i32 %32)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %29, i64 %28, i1 false)
  %34 = getelementptr inbounds i8, ptr %33, i64 %28
  store i8 0, ptr %34, align 1
  %35 = load i64, ptr %23, align 4
  %memberidx2.i = getelementptr inbounds %PropId, ptr %23, i64 0, i32 2
  %36 = load i64, ptr %memberidx2.i, align 4
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @259, ptr %33, i64 %35, i64 %36)
  %38 = load ptr, ptr %6, align 8
  %39 = call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %33)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %40 = load ptr, ptr %common.ret.op.i40, align 8
  %memberidx4 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i40, i64 0, i32 3
  %41 = load ptr, ptr %memberidx4, align 8
  %42 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %39)
  %memberidx.i19 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %41, i64 0, i32 1
  %43 = load i64, ptr %memberidx.i19, align 4
  %44 = urem i64 %42, %43
  %45 = load ptr, ptr %41, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  %47 = load ptr, ptr %46, align 8
  %.not.i55 = icmp eq ptr %47, null
  br i1 %.not.i55, label %ifend, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre60.pre = load ptr, ptr %41, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre60.pre, i64 %hash.0.i56
  %.pre61.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre61.pre, null
  br i1 %.not22.i, label %ifend, label %Map_String_LLVMValueRef____getitem__.exit

while.body.i:                                     ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit, %else.i
  %48 = phi ptr [ %56, %else.i ], [ %45, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %49 = phi i64 [ %57, %else.i ], [ %43, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %50 = phi ptr [ %61, %else.i ], [ %47, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %hash.0.i56 = phi i64 [ %59, %else.i ], [ %44, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %51 = load ptr, ptr %50, align 8
  %memberidx.i.i20 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i.i20, align 4
  %.not.i.i = icmp eq i64 %52, %37
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %53 = load ptr, ptr %51, align 8
  %54 = call i64 @memcmp(ptr %53, ptr %38, i64 %37)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i19, align 4
  %.pre59 = load ptr, ptr %41, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %56 = phi ptr [ %.pre59, %ifend.i.i.else.i_crit_edge ], [ %48, %while.body.i ]
  %57 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %49, %while.body.i ]
  %58 = add nuw i64 %hash.0.i56, 1
  %59 = urem i64 %58, %57
  %60 = getelementptr inbounds ptr, ptr %56, i64 %59
  %61 = load ptr, ptr %60, align 8
  %.not.i = icmp eq ptr %61, null
  br i1 %.not.i, label %ifend, label %while.body.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre61.pre, i64 0, i32 1
  %62 = load ptr, ptr %memberidx10.i, align 8
  %.not = icmp eq ptr %62, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_String_LLVMValueRef____getitem__.exit, %Map_String_uint____getitem__.exit
  %common.ret.op = phi ptr [ %93, %Map_String_uint____getitem__.exit ], [ %62, %Map_String_LLVMValueRef____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %63 = icmp eq ptr %3, null
  br i1 %63, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend
  %memberidx8 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %64 = load ptr, ptr %memberidx8, align 8
  %65 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %64)
  br label %ifend7

ifend7:                                           ; preds = %ifend, %if.entry5
  %ptr.0 = phi ptr [ %65, %if.entry5 ], [ %3, %ifend ]
  %66 = call ptr @LLVMInt32Type()
  %67 = call ptr @LLVMConstInt(ptr %66, i64 0, i1 false)
  store ptr %67, ptr %indices_buffer, align 8
  %68 = getelementptr inbounds ptr, ptr %indices_buffer, i64 1
  store ptr null, ptr %68, align 8
  %69 = call ptr @LLVMInt32Type()
  %memberidx9 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i40, i64 0, i32 2
  %70 = load ptr, ptr %memberidx9, align 8
  %71 = call fastcc i64 @Map_String_uint__hash_fnc(ptr nonnull %39)
  %memberidx.i22 = getelementptr inbounds %Map_String_uint_, ptr %70, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i22, align 4
  %73 = urem i64 %71, %72
  %74 = load ptr, ptr %70, align 8
  %75 = getelementptr inbounds ptr, ptr %74, i64 %73
  %76 = load ptr, ptr %75, align 8
  %.not.i2452 = icmp eq ptr %76, null
  br i1 %.not.i2452, label %Map_String_uint____getitem__.exit, label %while.body.i31

while.end.i27:                                    ; preds = %ifend.i.i32
  %.pre64.pre = load ptr, ptr %70, align 8
  %.phi.trans.insert65.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre64.pre, i64 %hash.0.i2353
  %.pre66.pre = load ptr, ptr %.phi.trans.insert65.phi.trans.insert, align 8
  %.not22.i26 = icmp eq ptr %.pre66.pre, null
  br i1 %.not22.i26, label %Map_String_uint____getitem__.exit, label %if.entry6.i38

while.body.i31:                                   ; preds = %ifend7, %else.i35
  %77 = phi ptr [ %85, %else.i35 ], [ %74, %ifend7 ]
  %78 = phi i64 [ %86, %else.i35 ], [ %72, %ifend7 ]
  %79 = phi ptr [ %90, %else.i35 ], [ %76, %ifend7 ]
  %hash.0.i2353 = phi i64 [ %88, %else.i35 ], [ %73, %ifend7 ]
  %80 = load ptr, ptr %79, align 8
  %memberidx.i.i28 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  %81 = load i64, ptr %memberidx.i.i28, align 4
  %.not.i.i30 = icmp eq i64 %81, %37
  br i1 %.not.i.i30, label %ifend.i.i32, label %else.i35

ifend.i.i32:                                      ; preds = %while.body.i31
  %82 = load ptr, ptr %80, align 8
  %83 = call i64 @memcmp(ptr %82, ptr %38, i64 %37)
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %while.end.i27, label %ifend.i.i32.else.i35_crit_edge

ifend.i.i32.else.i35_crit_edge:                   ; preds = %ifend.i.i32
  %.pre62 = load i64, ptr %memberidx.i22, align 4
  %.pre63 = load ptr, ptr %70, align 8
  br label %else.i35

else.i35:                                         ; preds = %ifend.i.i32.else.i35_crit_edge, %while.body.i31
  %85 = phi ptr [ %.pre63, %ifend.i.i32.else.i35_crit_edge ], [ %77, %while.body.i31 ]
  %86 = phi i64 [ %.pre62, %ifend.i.i32.else.i35_crit_edge ], [ %78, %while.body.i31 ]
  %87 = add nuw i64 %hash.0.i2353, 1
  %88 = urem i64 %87, %86
  %89 = getelementptr inbounds ptr, ptr %85, i64 %88
  %90 = load ptr, ptr %89, align 8
  %.not.i24 = icmp eq ptr %90, null
  br i1 %.not.i24, label %Map_String_uint____getitem__.exit, label %while.body.i31

if.entry6.i38:                                    ; preds = %while.end.i27
  %memberidx10.i37 = getelementptr inbounds %MapEntry_String_uint_, ptr %.pre66.pre, i64 0, i32 1
  %91 = load i64, ptr %memberidx10.i37, align 4
  br label %Map_String_uint____getitem__.exit

Map_String_uint____getitem__.exit:                ; preds = %else.i35, %ifend7, %while.end.i27, %if.entry6.i38
  %common.ret.op.i36 = phi i64 [ %91, %if.entry6.i38 ], [ 0, %while.end.i27 ], [ 0, %ifend7 ], [ 0, %else.i35 ]
  %92 = call ptr @LLVMConstInt(ptr %69, i64 %common.ret.op.i36, i1 false)
  store ptr %92, ptr %68, align 8
  %93 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %40, ptr %ptr.0, ptr nonnull %indices_buffer, i64 2, ptr nonnull @260)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_builtin_array(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
end:
  %args = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %4, i1 false)
  %memberidx1 = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %8, i1 true)
  %10 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %5, ptr nonnull @78)
  %memberidx2 = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Expression_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx3, align 4
  %13 = tail call i64 @llvm.smax.i64(i64 %12, i64 1)
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 %13, i1 false)
  %16 = tail call ptr @LLVMIntType(i64 64)
  %17 = tail call ptr @LLVMConstInt(ptr %16, i64 %12, i1 false)
  store ptr %10, ptr %args, align 8
  %18 = getelementptr inbounds ptr, ptr %args, i64 1
  %19 = tail call ptr @LLVMSizeOf(ptr %9)
  %20 = tail call ptr @LLVMConstMul(ptr %15, ptr %19)
  store ptr %20, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %21 = load i64, ptr %4, align 4
  %cond43 = icmp eq i64 %21, 20
  br i1 %cond43, label %if.entry.i40, label %get_class_from_type.exit

if.entry.i40:                                     ; preds = %end, %if.entry.i40
  %.tr11.i44 = phi ptr [ %22, %if.entry.i40 ], [ %4, %end ]
  %memberidx1.i39 = getelementptr inbounds %GenericType, ptr %.tr11.i44, i64 0, i32 3
  %22 = load ptr, ptr %memberidx1.i39, align 8
  %23 = load i64, ptr %22, align 4
  %cond = icmp eq i64 %23, 20
  br i1 %cond, label %if.entry.i40, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i40, %end
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %4, i64 0, i32 1
  %24 = load ptr, ptr %memberidx1.i, align 8
  %25 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %24)
  %.not.i30 = icmp eq ptr %25, null
  br i1 %.not.i30, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %26 = load ptr, ptr %memberidx.i, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = load i64, ptr %24, align 4
  %29 = load ptr, ptr %27, align 8
  %30 = getelementptr inbounds ptr, ptr %29, i64 %28
  %31 = load ptr, ptr %30, align 8
  %memberidx2.i.i33 = getelementptr inbounds %Module, ptr %31, i64 0, i32 3
  %32 = load ptr, ptr %memberidx2.i.i33, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 2
  %33 = load i64, ptr %memberidx3.i.i, align 4
  %34 = load ptr, ptr %32, align 8
  %35 = getelementptr inbounds ptr, ptr %34, i64 %33
  %36 = load ptr, ptr %35, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %36)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %36)
  %37 = load ptr, ptr %36, align 8
  %38 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %37)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %38, %ifend.i ], [ %25, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 4
  %39 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %40 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %39)
  %41 = call ptr @LLVMBuildCall2(ptr %1, ptr %40, ptr nonnull %39, ptr nonnull %args, i64 2, ptr nonnull @78)
  br label %CodeGen_build_constructor_call.exit

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %42 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %42, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %43 = tail call ptr @malloc(i32 24)
  %44 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %44, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %45 = tail call ptr @malloc(i32 24)
  %46 = tail call i64 @write(i64 1, ptr %44, i64 7)
  tail call void @free(ptr %44)
  tail call void @free(ptr %45)
  %47 = tail call i64 @write(i64 1, ptr %42, i64 47)
  %48 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %42)
  tail call void @free(ptr %43)
  tail call void @exit(i64 -1)
  br label %CodeGen_build_constructor_call.exit

CodeGen_build_constructor_call.exit:              ; preds = %if.entry.i, %else.i
  %49 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %49, ptr noundef nonnull align 8 dereferenceable(6) @261, i64 6, i1 false)
  %50 = call ptr @malloc(i32 24)
  store ptr %49, ptr %50, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %50, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i, align 4
  %51 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %10, ptr nonnull %4, ptr nonnull %50)
  %52 = call ptr @LLVMPointerType(ptr %9, i64 0)
  %53 = call ptr @LLVMBuildLoad2(ptr %1, ptr %52, ptr %51, ptr nonnull @78)
  %54 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %53, ptr %3)
  %55 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %55, ptr noundef nonnull align 8 dereferenceable(6) @262, i64 6, i1 false)
  %56 = call ptr @malloc(i32 24)
  store ptr %55, ptr %56, align 8
  %memberidx1.i.i28 = getelementptr inbounds %String, ptr %56, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i28, align 4
  %memberidx2.i.i29 = getelementptr inbounds %String, ptr %56, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i29, align 4
  %57 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %10, ptr nonnull %4, ptr nonnull %56)
  %58 = call ptr @LLVMBuildStore(ptr %1, ptr %17, ptr %57)
  ret ptr %10
}

define internal fastcc void @CodeGen_declare_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = tail call ptr @malloc(i32 40)
  %5 = tail call ptr @malloc(i32 24)
  %6 = tail call ptr @malloc(i32 2048)
  store ptr %6, ptr %5, align 8
  %7 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %7, align 4
  %memberidx1.i.i.i62 = getelementptr inbounds %Range, ptr %7, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i.i62, align 4
  %8 = tail call ptr @malloc(i32 17)
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %9 = phi i64 [ 1, %2 ], [ %14, %for.body.i.i ]
  %10 = phi i64 [ 0, %2 ], [ %9, %for.body.i.i ]
  %11 = load ptr, ptr %5, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  store ptr null, ptr %12, align 8
  %13 = icmp ugt i64 %9, 255
  %14 = add nuw nsw i64 %9, 1
  br i1 %13, label %for.body.i12.i.lr.ph, label %for.body.i.i

for.body.i12.i.lr.ph:                             ; preds = %for.body.i.i
  %memberidx.i61 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 1
  tail call void @free(ptr nonnull %8)
  %memberidx3.i.i = getelementptr inbounds %Map_String_uint_, ptr %5, i64 0, i32 1
  store i64 256, ptr %memberidx3.i.i, align 4
  %memberidx4.i.i = getelementptr inbounds %Map_String_uint_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx4.i.i, align 4
  store ptr %5, ptr %memberidx.i61, align 8
  %memberidx1.i64 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 2
  %15 = tail call ptr @malloc(i32 24)
  %16 = tail call ptr @malloc(i32 2048)
  store ptr %16, ptr %15, align 8
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i.i5.i = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i5.i, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i7.i = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i7.i, align 4
  %memberidx1.i.i.i8.i = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i8.i, align 4
  br label %for.body.i12.i

for.body.i12.i:                                   ; preds = %for.body.i12.i.lr.ph, %for.body.i12.i
  %19 = phi i64 [ 1, %for.body.i12.i.lr.ph ], [ %24, %for.body.i12.i ]
  %20 = phi i64 [ 0, %for.body.i12.i.lr.ph ], [ %19, %for.body.i12.i ]
  %21 = load ptr, ptr %15, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  store ptr null, ptr %22, align 8
  %23 = icmp ugt i64 %19, 255
  %24 = add nuw nsw i64 %19, 1
  br i1 %23, label %for.body.i23.i.lr.ph, label %for.body.i12.i

for.body.i23.i.lr.ph:                             ; preds = %for.body.i12.i
  tail call void @free(ptr nonnull %18)
  %memberidx3.i13.i = getelementptr inbounds %Map_String_uint_, ptr %15, i64 0, i32 1
  store i64 256, ptr %memberidx3.i13.i, align 4
  %memberidx4.i14.i = getelementptr inbounds %Map_String_uint_, ptr %15, i64 0, i32 2
  store i64 0, ptr %memberidx4.i14.i, align 4
  store ptr %15, ptr %memberidx1.i64, align 8
  %memberidx2.i65 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 3
  %25 = tail call ptr @malloc(i32 24)
  %26 = tail call ptr @malloc(i32 2048)
  store ptr %26, ptr %25, align 8
  %27 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %27, align 4
  %memberidx1.i.i16.i = getelementptr inbounds %Range, ptr %27, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i16.i, align 4
  %28 = tail call ptr @malloc(i32 17)
  %memberidx.i.i.i18.i = getelementptr inbounds %RangeIterator, ptr %28, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i18.i, align 4
  %memberidx1.i.i.i19.i = getelementptr inbounds %RangeIterator, ptr %28, i64 0, i32 2
  store i64 256, ptr %memberidx1.i.i.i19.i, align 4
  br label %for.body.i23.i

for.body.i23.i:                                   ; preds = %for.body.i23.i.lr.ph, %for.body.i23.i
  %29 = phi i64 [ 1, %for.body.i23.i.lr.ph ], [ %34, %for.body.i23.i ]
  %30 = phi i64 [ 0, %for.body.i23.i.lr.ph ], [ %29, %for.body.i23.i ]
  %31 = load ptr, ptr %25, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 %30
  store ptr null, ptr %32, align 8
  %33 = icmp ugt i64 %29, 255
  %34 = add nuw nsw i64 %29, 1
  br i1 %33, label %CGClassType_constructor.exit, label %for.body.i23.i

CGClassType_constructor.exit:                     ; preds = %for.body.i23.i
  tail call void @free(ptr nonnull %28)
  %memberidx3.i24.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %25, i64 0, i32 1
  store i64 256, ptr %memberidx3.i24.i, align 4
  %memberidx4.i25.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %25, i64 0, i32 2
  store i64 0, ptr %memberidx4.i25.i, align 4
  store ptr %25, ptr %memberidx2.i65, align 8
  %35 = load ptr, ptr %0, align 8
  %36 = tail call ptr @LLVMGetModuleContext(ptr %35)
  %memberidx2 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %37 = load ptr, ptr %memberidx2, align 8
  %memberidx.i60 = getelementptr inbounds %String, ptr %37, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i60, align 4
  %39 = trunc i64 %38 to i32
  %40 = add i32 %39, 1
  %41 = tail call ptr @malloc(i32 %40)
  %42 = load ptr, ptr %37, align 8
  %43 = load i64, ptr %memberidx.i60, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %41, ptr align 8 %42, i64 %43, i1 false)
  %44 = getelementptr inbounds i8, ptr %41, i64 %43
  store i8 0, ptr %44, align 1
  %45 = tail call ptr @LLVMStructCreateNamed(ptr %36, ptr %41)
  store ptr %45, ptr %4, align 8
  %46 = load ptr, ptr %1, align 8
  %memberidx.i58 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %47 = load ptr, ptr %memberidx.i58, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %48 = load i64, ptr %46, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %46, i64 0, i32 1
  %49 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %46, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i.i, align 4
  %51 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %48, i64 %49, i64 %50)
  %52 = load ptr, ptr %3, align 8
  %53 = call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  store i64 %51, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i59 = getelementptr inbounds %String, ptr %53, i64 0, i32 2
  store i64 %51, ptr %memberidx2.i.i.i59, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_String_CGClassType____setitem__(ptr %47, ptr nonnull %53, ptr nonnull %4)
  %54 = tail call ptr @malloc(i32 24)
  %memberidx.i56 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %54, i64 0, i32 1
  %memberidx1.i57 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %54, i64 0, i32 2
  store i64 8, ptr %memberidx1.i57, align 4
  %55 = call ptr @malloc(i32 64)
  store ptr %55, ptr %54, align 8
  store i64 0, ptr %memberidx.i56, align 4
  call fastcc void @CodeGen_declare_static_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1)
  call fastcc void @CodeGen_declare_class_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1, ptr nonnull %54)
  %56 = load ptr, ptr %4, align 8
  %57 = load ptr, ptr %54, align 8
  %58 = load i64, ptr %memberidx.i56, align 4
  call void @LLVMStructSetBody(ptr %56, ptr %57, i64 %58, i1 true)
  call void @free(ptr %57)
  tail call void @free(ptr nonnull %54)
  %memberidx9 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %59 = load ptr, ptr %memberidx9, align 8
  %.not = icmp eq ptr %59, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %CGClassType_constructor.exit
  %memberidx10 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %60 = load ptr, ptr %memberidx10, align 8
  %memberidx.i.i53 = getelementptr inbounds %PropId, ptr %59, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i.i53, align 8
  %62 = load ptr, ptr %60, align 8
  %63 = load i64, ptr %61, align 4
  %64 = load ptr, ptr %62, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %66, i64 0, i32 3
  %67 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %61, i64 0, i32 2
  %68 = load i64, ptr %memberidx3.i.i.i, align 4
  %69 = load ptr, ptr %67, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %72 = load i64, ptr %59, align 4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %if.entry
  %memberidx1.i54 = getelementptr inbounds %Class, ptr %71, i64 0, i32 5
  %74 = load ptr, ptr %memberidx1.i54, align 8
  %memberidx2.i55 = getelementptr inbounds %PropId, ptr %59, i64 0, i32 2
  %75 = load i64, ptr %memberidx2.i55, align 4
  %76 = load ptr, ptr %74, align 8
  %77 = getelementptr inbounds ptr, ptr %76, i64 %75
  %78 = load ptr, ptr %77, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %78, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx4.i = getelementptr inbounds %Class, ptr %71, i64 0, i32 4
  %79 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %59, i64 0, i32 2
  %80 = load i64, ptr %memberidx5.i, align 4
  %81 = load ptr, ptr %79, align 8
  %82 = getelementptr inbounds ptr, ptr %81, i64 %80
  %83 = load ptr, ptr %82, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %83, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %84 = tail call ptr @malloc(i32 24)
  %memberidx.i51 = getelementptr inbounds %Array_Type_, ptr %84, i64 0, i32 1
  store i64 0, ptr %memberidx.i51, align 4
  %memberidx1.i52 = getelementptr inbounds %Array_Type_, ptr %84, i64 0, i32 2
  store i64 8, ptr %memberidx1.i52, align 4
  %85 = call ptr @malloc(i32 64)
  store ptr %85, ptr %84, align 8
  %86 = tail call ptr @malloc(i32 16)
  %87 = load ptr, ptr %1, align 8
  store i64 11, ptr %86, align 4
  %memberidx.i50 = getelementptr inbounds %ObjectType, ptr %86, i64 0, i32 1
  store ptr %87, ptr %memberidx.i50, align 8
  store ptr %86, ptr %85, align 8
  store i64 1, ptr %memberidx.i51, align 4
  %memberidx15 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 1
  %88 = load ptr, ptr %memberidx15, align 8
  %memberidx1.i48 = getelementptr inbounds %Array_Type_, ptr %88, i64 0, i32 1
  %89 = load i64, ptr %memberidx1.i48, align 4
  %90 = add nuw i64 %89, 2
  %91 = icmp sgt i64 %90, 8
  br i1 %91, label %while.body.i.i, label %Array_Type____adda__.exit

while.body.i.i:                                   ; preds = %get_class_prop_type.exit, %while.body.i.i
  %92 = phi ptr [ %96, %while.body.i.i ], [ %85, %get_class_prop_type.exit ]
  %93 = phi i64 [ %94, %while.body.i.i ], [ 8, %get_class_prop_type.exit ]
  %94 = shl nuw i64 %93, 1
  %95 = shl i64 %93, 4
  %96 = call ptr @realloc(ptr %92, i64 %95)
  %97 = icmp slt i64 %94, %90
  br i1 %97, label %while.body.i.i, label %Array_Type____adda__.exit.loopexit

Array_Type____adda__.exit.loopexit:               ; preds = %while.body.i.i
  store i64 %94, ptr %memberidx1.i52, align 4
  store ptr %96, ptr %84, align 8
  %.pre = load i64, ptr %memberidx1.i48, align 4
  br label %Array_Type____adda__.exit

Array_Type____adda__.exit:                        ; preds = %Array_Type____adda__.exit.loopexit, %get_class_prop_type.exit
  %98 = phi i64 [ %.pre, %Array_Type____adda__.exit.loopexit ], [ %89, %get_class_prop_type.exit ]
  %99 = phi ptr [ %96, %Array_Type____adda__.exit.loopexit ], [ %85, %get_class_prop_type.exit ]
  %100 = getelementptr inbounds ptr, ptr %99, i64 1
  %101 = load ptr, ptr %88, align 8
  %102 = shl i64 %98, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 536870912 %100, ptr align 8 %101, i64 %102, i1 false)
  %103 = load i64, ptr %memberidx1.i48, align 4
  %104 = add nuw i64 %103, 1
  store i64 %104, ptr %memberidx.i51, align 4
  %105 = load ptr, ptr %memberidx15, align 8
  %106 = load ptr, ptr %105, align 8
  call void @free(ptr %106)
  tail call void @free(ptr %105)
  store ptr %84, ptr %memberidx15, align 8
  %107 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 false)
  %memberidx18 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 4
  %108 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %108, i64 0, i32 1
  %109 = load i64, ptr %memberidx.i, align 4
  %110 = trunc i64 %109 to i32
  %111 = add i32 %110, 1
  %112 = call ptr @malloc(i32 %111)
  %113 = load ptr, ptr %108, align 8
  %114 = load i64, ptr %memberidx.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %112, ptr align 8 %113, i64 %114, i1 false)
  %115 = getelementptr inbounds i8, ptr %112, i64 %114
  store i8 0, ptr %115, align 1
  %116 = alloca ptr, align 8
  %117 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %116, ptr nonnull @291, ptr %112)
  %118 = load ptr, ptr %116, align 8
  %119 = tail call ptr @malloc(i32 24)
  store ptr %118, ptr %119, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %119, i64 0, i32 1
  store i64 %117, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %119, i64 0, i32 2
  store i64 %117, ptr %memberidx2.i, align 4
  tail call void @free(ptr %112)
  %120 = load ptr, ptr %0, align 8
  %121 = trunc i64 %117 to i32
  %122 = add i32 %121, 1
  %123 = call ptr @malloc(i32 %122)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %123, ptr align 8 %118, i64 %117, i1 false)
  %124 = getelementptr inbounds i8, ptr %123, i64 %117
  store i8 0, ptr %124, align 1
  %125 = call ptr @LLVMAddFunction(ptr %120, ptr %123, ptr %107)
  store ptr %125, ptr %memberidx18, align 8
  br label %ifend

else:                                             ; preds = %CGClassType_constructor.exit
  %memberidx20 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 4
  store ptr null, ptr %memberidx20, align 8
  br label %ifend

ifend:                                            ; preds = %else, %Array_Type____adda__.exit
  ret void
}

define internal fastcc void @CodeGen_codegen_match_case(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr %4) unnamed_addr {
  %memberidx23 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 2
  %6 = load i64, ptr %memberidx23, align 4
  %7 = icmp eq i64 %6, 9
  br i1 %7, label %if.entry, label %ifend

if.entry:                                         ; preds = %5, %if.entry2
  %.tr2124 = phi ptr [ %12, %if.entry2 ], [ %3, %5 ]
  %memberidx1 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 5
  %8 = load i64, ptr %memberidx1, align 4
  %9 = icmp eq i64 %8, 15
  br i1 %9, label %if.entry2, label %ifend

ifend:                                            ; preds = %if.entry2, %if.entry, %5
  %.tr21.lcssa = phi ptr [ %3, %5 ], [ %.tr2124, %if.entry ], [ %12, %if.entry2 ]
  %10 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %.tr21.lcssa)
  tail call void @LLVMAddCase(ptr %2, ptr %10, ptr %4)
  ret void

if.entry2:                                        ; preds = %if.entry
  %memberidx5 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 4
  %11 = load ptr, ptr %memberidx5, align 8
  tail call fastcc void @CodeGen_codegen_match_case(ptr %0, ptr %1, ptr %2, ptr %11, ptr %4)
  %memberidx6 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 6
  %12 = load ptr, ptr %memberidx6, align 8
  %memberidx = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp eq i64 %13, 9
  br i1 %14, label %if.entry, label %ifend
}

define internal fastcc ptr @CodeGen_get_class_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 24)
  store ptr %9, ptr %10, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_String_CGClassType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_String_CGClassType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i4 = icmp eq ptr %16, null
  br i1 %.not.i4, label %Map_String_CGClassType____getitem__.exit, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre8.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre8.pre, i64 %hash.0.i5
  %.pre9.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre9.pre, null
  br i1 %.not22.i, label %Map_String_CGClassType____getitem__.exit, label %if.entry6.i

while.body.i:                                     ; preds = %2, %else.i
  %17 = phi ptr [ %25, %else.i ], [ %14, %2 ]
  %18 = phi i64 [ %26, %else.i ], [ %12, %2 ]
  %19 = phi ptr [ %30, %else.i ], [ %16, %2 ]
  %hash.0.i5 = phi i64 [ %28, %else.i ], [ %13, %2 ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %21, %8
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %22 = load ptr, ptr %20, align 8
  %23 = call i64 @memcmp(ptr %22, ptr %9, i64 %8)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre7 = load ptr, ptr %4, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %25 = phi ptr [ %.pre7, %ifend.i.i.else.i_crit_edge ], [ %17, %while.body.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %18, %while.body.i ]
  %27 = add nuw i64 %hash.0.i5, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not.i = icmp eq ptr %30, null
  br i1 %.not.i, label %Map_String_CGClassType____getitem__.exit, label %while.body.i

if.entry6.i:                                      ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %.pre9.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx10.i, align 8
  br label %Map_String_CGClassType____getitem__.exit

Map_String_CGClassType____getitem__.exit:         ; preds = %else.i, %2, %while.end.i, %if.entry6.i
  %common.ret.op.i = phi ptr [ %31, %if.entry6.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_enum_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 24)
  store ptr %9, ptr %10, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_String_CGEnumType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i4 = icmp eq ptr %16, null
  br i1 %.not.i4, label %Map_String_CGEnumType____getitem__.exit, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre8.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre8.pre, i64 %hash.0.i5
  %.pre9.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre9.pre, null
  br i1 %.not22.i, label %Map_String_CGEnumType____getitem__.exit, label %if.entry6.i

while.body.i:                                     ; preds = %2, %else.i
  %17 = phi ptr [ %25, %else.i ], [ %14, %2 ]
  %18 = phi i64 [ %26, %else.i ], [ %12, %2 ]
  %19 = phi ptr [ %30, %else.i ], [ %16, %2 ]
  %hash.0.i5 = phi i64 [ %28, %else.i ], [ %13, %2 ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %21, %8
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %22 = load ptr, ptr %20, align 8
  %23 = call i64 @memcmp(ptr %22, ptr %9, i64 %8)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre7 = load ptr, ptr %4, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %25 = phi ptr [ %.pre7, %ifend.i.i.else.i_crit_edge ], [ %17, %while.body.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %18, %while.body.i ]
  %27 = add nuw i64 %hash.0.i5, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not.i = icmp eq ptr %30, null
  br i1 %.not.i, label %Map_String_CGEnumType____getitem__.exit, label %while.body.i

if.entry6.i:                                      ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %.pre9.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx10.i, align 8
  br label %Map_String_CGEnumType____getitem__.exit

Map_String_CGEnumType____getitem__.exit:          ; preds = %else.i, %2, %while.end.i, %if.entry6.i
  %common.ret.op.i = phi ptr [ %31, %if.entry6.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_member_mem_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3, ptr nocapture readonly %4) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx, align 8
  %7 = load i64, ptr %3, align 4
  %switch9 = icmp eq i64 %7, 20
  br i1 %switch9, label %if.entry.i3, label %if.entry3.i

if.entry.i3:                                      ; preds = %5, %if.entry.i3
  %.tr11.i10 = phi ptr [ %8, %if.entry.i3 ], [ %3, %5 ]
  %memberidx1.i2 = getelementptr inbounds %GenericType, ptr %.tr11.i10, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1.i2, align 8
  %9 = load i64, ptr %8, align 4
  %switch = icmp eq i64 %9, 20
  br i1 %switch, label %if.entry.i3, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i3, %5
  %.tr11.i.lcssa = phi ptr [ %3, %5 ], [ %8, %if.entry.i3 ]
  %memberidx6.i4 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %10 = load ptr, ptr %memberidx6.i4, align 8
  %11 = load ptr, ptr %6, align 8
  %12 = load i64, ptr %10, align 4
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %10, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i, align 4
  %18 = load ptr, ptr %16, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %20, i64 0, i32 6
  %21 = load ptr, ptr %memberidx1, align 8
  %22 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i, align 4
  %24 = urem i64 %22, %23
  %25 = load ptr, ptr %21, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  %.not.i6 = icmp eq ptr %27, null
  br i1 %.not.i6, label %common.ret, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre13.pre = load ptr, ptr %21, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre13.pre, i64 %hash.0.i7
  %.pre14.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre14.pre, null
  br i1 %.not22.i, label %common.ret, label %Map_String_PropId____getitem__.exit

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %28 = phi ptr [ %25, %while.body.i.lr.ph ], [ %38, %else.i ]
  %29 = phi i64 [ %23, %while.body.i.lr.ph ], [ %39, %else.i ]
  %30 = phi ptr [ %27, %while.body.i.lr.ph ], [ %43, %else.i ]
  %hash.0.i7 = phi i64 [ %24, %while.body.i.lr.ph ], [ %41, %else.i ]
  %31 = load ptr, ptr %30, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %31, i64 0, i32 1
  %32 = load i64, ptr %memberidx.i.i, align 4
  %33 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %32, %33
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %34 = load ptr, ptr %31, align 8
  %35 = load ptr, ptr %4, align 8
  %36 = tail call i64 @memcmp(ptr %34, ptr %35, i64 %32)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre12 = load ptr, ptr %21, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %38 = phi ptr [ %.pre12, %ifend.i.i.else.i_crit_edge ], [ %28, %while.body.i ]
  %39 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %29, %while.body.i ]
  %40 = add nuw i64 %hash.0.i7, 1
  %41 = urem i64 %40, %39
  %42 = getelementptr inbounds ptr, ptr %38, i64 %41
  %43 = load ptr, ptr %42, align 8
  %.not.i = icmp eq ptr %43, null
  br i1 %.not.i, label %common.ret, label %while.body.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre14.pre, i64 0, i32 1
  %44 = load ptr, ptr %memberidx10.i, align 8
  %45 = icmp eq ptr %44, null
  br i1 %45, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_String_PropId____getitem__.exit, %ifend5
  %common.ret.op = phi ptr [ %71, %ifend5 ], [ null, %Map_String_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %46 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i12 = getelementptr inbounds %PropId, ptr %44, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i12, align 8
  %48 = load ptr, ptr %46, align 8
  %49 = load i64, ptr %47, align 4
  %50 = load ptr, ptr %48, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %49
  %52 = load ptr, ptr %51, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %52, i64 0, i32 3
  %53 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %47, i64 0, i32 2
  %54 = load i64, ptr %memberidx3.i.i.i, align 4
  %55 = load ptr, ptr %53, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 %54
  %57 = load ptr, ptr %56, align 8
  %58 = load i64, ptr %44, align 4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %57, i64 0, i32 5
  %60 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  %61 = load i64, ptr %memberidx2.i, align 4
  %62 = load ptr, ptr %60, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %64, i64 0, i32 4
  br label %ifend5

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %57, i64 0, i32 4
  %65 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  %66 = load i64, ptr %memberidx5.i, align 4
  %67 = load ptr, ptr %65, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %69, i64 0, i32 4
  br label %ifend5

ifend5:                                           ; preds = %ifend.i, %if.entry.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i13 = load ptr, ptr %common.ret.op.in.i, align 8
  %70 = alloca %MemberExpression, align 8
  store i64 8, ptr %70, align 8
  %memberidx.i.i14 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i14, align 4
  %memberidx1.i.i15 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i15, align 8
  %memberidx.i16 = getelementptr inbounds %MemberExpression, ptr %70, i64 0, i32 4
  store ptr null, ptr %memberidx.i16, align 8
  %memberidx1.i17 = getelementptr inbounds %MemberExpression, ptr %70, i64 0, i32 5
  store ptr %44, ptr %memberidx1.i17, align 8
  %memberidx2.i18 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 3
  store ptr %common.ret.op.i13, ptr %memberidx2.i18, align 8
  %71 = call fastcc ptr @CodeGen_get_member_expr_mem(ptr nonnull %0, ptr %1, ptr nonnull %70, ptr %2)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codgen_get_member_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr nocapture readonly %4, ptr writeonly %5) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %3, align 4
  %switch35 = icmp eq i64 %8, 20
  br i1 %switch35, label %if.entry.i29, label %if.entry3.i

if.entry.i29:                                     ; preds = %6, %if.entry.i29
  %.tr11.i36 = phi ptr [ %9, %if.entry.i29 ], [ %3, %6 ]
  %memberidx1.i28 = getelementptr inbounds %GenericType, ptr %.tr11.i36, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i28, align 8
  %10 = load i64, ptr %9, align 4
  %switch = icmp eq i64 %10, 20
  br i1 %switch, label %if.entry.i29, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i29, %6
  %.tr11.i.lcssa = phi ptr [ %3, %6 ], [ %9, %if.entry.i29 ]
  %memberidx6.i30 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i30, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load i64, ptr %11, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %16, i64 0, i32 3
  %17 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %18 = load i64, ptr %memberidx3.i.i, align 4
  %19 = load ptr, ptr %17, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %18
  %21 = load ptr, ptr %20, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %21, i64 0, i32 6
  %22 = load ptr, ptr %memberidx1, align 8
  %23 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %4)
  %memberidx.i20 = getelementptr inbounds %Map_String_PropId_, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i20, align 4
  %25 = urem i64 %23, %24
  %26 = load ptr, ptr %22, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %.not.i32 = icmp eq ptr %28, null
  br i1 %.not.i32, label %common.ret, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %if.entry3.i
  %memberidx1.i.i22 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre39.pre = load ptr, ptr %22, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre39.pre, i64 %hash.0.i33
  %.pre40.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre40.pre, null
  br i1 %.not22.i, label %common.ret, label %Map_String_PropId____getitem__.exit

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i
  %29 = phi ptr [ %26, %while.body.i.lr.ph ], [ %39, %else.i ]
  %30 = phi i64 [ %24, %while.body.i.lr.ph ], [ %40, %else.i ]
  %31 = phi ptr [ %28, %while.body.i.lr.ph ], [ %44, %else.i ]
  %hash.0.i33 = phi i64 [ %25, %while.body.i.lr.ph ], [ %42, %else.i ]
  %32 = load ptr, ptr %31, align 8
  %memberidx.i.i21 = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i.i21, align 4
  %34 = load i64, ptr %memberidx1.i.i22, align 4
  %.not.i.i = icmp eq i64 %33, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %35 = load ptr, ptr %32, align 8
  %36 = load ptr, ptr %4, align 8
  %37 = tail call i64 @memcmp(ptr %35, ptr %36, i64 %33)
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i20, align 4
  %.pre38 = load ptr, ptr %22, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %39 = phi ptr [ %.pre38, %ifend.i.i.else.i_crit_edge ], [ %29, %while.body.i ]
  %40 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %30, %while.body.i ]
  %41 = add nuw i64 %hash.0.i33, 1
  %42 = urem i64 %41, %40
  %43 = getelementptr inbounds ptr, ptr %39, i64 %42
  %44 = load ptr, ptr %43, align 8
  %.not.i = icmp eq ptr %44, null
  br i1 %.not.i, label %common.ret, label %while.body.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre40.pre, i64 0, i32 1
  %45 = load ptr, ptr %memberidx10.i, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_String_PropId____getitem__.exit, %ifend5
  %common.ret.op = phi ptr [ %73, %ifend5 ], [ null, %Map_String_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %47 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i17 = getelementptr inbounds %PropId, ptr %45, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i.i17, align 8
  %49 = load ptr, ptr %47, align 8
  %50 = load i64, ptr %48, align 4
  %51 = load ptr, ptr %49, align 8
  %52 = getelementptr inbounds ptr, ptr %51, i64 %50
  %53 = load ptr, ptr %52, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %53, i64 0, i32 3
  %54 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %48, i64 0, i32 2
  %55 = load i64, ptr %memberidx3.i.i.i, align 4
  %56 = load ptr, ptr %54, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %55
  %58 = load ptr, ptr %57, align 8
  %59 = load i64, ptr %45, align 4
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i18 = getelementptr inbounds %Class, ptr %58, i64 0, i32 5
  %61 = load ptr, ptr %memberidx1.i18, align 8
  %memberidx2.i19 = getelementptr inbounds %PropId, ptr %45, i64 0, i32 2
  %62 = load i64, ptr %memberidx2.i19, align 4
  %63 = load ptr, ptr %61, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %65, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %58, i64 0, i32 4
  %66 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %45, i64 0, i32 2
  %67 = load i64, ptr %memberidx5.i, align 4
  %68 = load ptr, ptr %66, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %70, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend5, label %if.entry3

if.entry3:                                        ; preds = %get_class_prop_type.exit
  store ptr %common.ret.op.i, ptr %5, align 8
  br label %ifend5

ifend5:                                           ; preds = %get_class_prop_type.exit, %if.entry3
  %71 = alloca %Expression, align 8
  store i64 8, ptr %71, align 8
  %memberidx.i15 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 2
  store i64 8, ptr %memberidx.i15, align 4
  %memberidx1.i16 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 1
  store i1 false, ptr %memberidx1.i16, align 8
  %memberidx6 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 3
  store ptr %3, ptr %memberidx6, align 8
  %72 = alloca %MemberExpression, align 8
  store i64 8, ptr %72, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 8
  %memberidx.i = getelementptr inbounds %MemberExpression, ptr %72, i64 0, i32 4
  store ptr %71, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %MemberExpression, ptr %72, i64 0, i32 5
  store ptr %45, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  store ptr %common.ret.op.i, ptr %memberidx2.i, align 8
  %73 = call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %72, ptr %2)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_member_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %7, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = load i64, ptr %8, align 4
  %10 = icmp eq i64 %9, 20
  br i1 %10, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %4, %if.entry.i
  %.tr5.i = phi ptr [ %11, %if.entry.i ], [ %8, %4 ]
  %memberidx1.i120 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %11 = load ptr, ptr %memberidx1.i120, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 20
  br i1 %13, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %4
  %.lcssa.i = phi i64 [ %9, %4 ], [ %12, %if.entry.i ]
  %14 = icmp eq i64 %.lcssa.i, 11
  br i1 %14, label %if.entry, label %ifend

if.entry:                                         ; preds = %is_object.exit
  %15 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr %2, ptr %3)
  %memberidx2 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 16
  br i1 %18, label %common.ret, label %ifend5

ifend:                                            ; preds = %is_object.exit
  %memberidx8 = getelementptr inbounds %VarAccessExpression, ptr %7, i64 0, i32 4
  %19 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %20 = load ptr, ptr %memberidx9, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i92 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i92, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %22 = load i64, ptr %21, align 4
  %memberidx1.i.i93 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx1.i.i93, align 4
  %memberidx2.i.i94 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 2
  %24 = load i64, ptr %memberidx2.i.i94, align 4
  %25 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %22, i64 %23, i64 %24)
  %26 = load ptr, ptr %5, align 8
  %27 = call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i.i95 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i.i.i95, align 4
  %memberidx2.i.i.i96 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 %25, ptr %memberidx2.i.i.i96, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %28 = trunc i64 %25 to i32
  %29 = add i32 %28, 1
  %30 = call ptr @malloc(i32 %29)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr align 8 %26, i64 %25, i1 false)
  %31 = getelementptr inbounds i8, ptr %30, i64 %25
  store i8 0, ptr %31, align 1
  %32 = load i64, ptr %20, align 4
  %memberidx2.i = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %33 = load i64, ptr %memberidx2.i, align 4
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @259, ptr %30, i64 %32, i64 %33)
  %35 = load ptr, ptr %6, align 8
  %36 = call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %37 = load i64, ptr %19, align 4
  switch i64 %37, label %common.ret [
    i64 3, label %if.entry11
    i64 4, label %if.entry27
  ]

common.ret:                                       ; preds = %else.i, %ifend32, %if.entry6.i, %while.end.i, %ifend20, %ifend, %if.entry, %ifend24, %ifend5
  %common.ret.op = phi ptr [ %39, %ifend5 ], [ %97, %ifend24 ], [ %15, %if.entry ], [ null, %ifend ], [ %common.ret.op.i79125, %ifend20 ], [ %142, %if.entry6.i ], [ null, %while.end.i ], [ null, %ifend32 ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend5:                                           ; preds = %if.entry
  %38 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %16, i1 true)
  %39 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %38, ptr %15, ptr nonnull @78)
  br label %common.ret

if.entry11:                                       ; preds = %ifend
  %40 = call ptr @malloc(i32 24)
  %memberidx.i88 = getelementptr inbounds %VarId, ptr %19, i64 0, i32 1
  %41 = load i64, ptr %memberidx.i88, align 4
  %memberidx1.i89 = getelementptr inbounds %VarId, ptr %19, i64 0, i32 2
  %42 = load i64, ptr %memberidx1.i89, align 4
  store i64 %41, ptr %40, align 4
  %memberidx1.i.i.i90 = getelementptr inbounds %TypeId, ptr %40, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i90, align 4
  %memberidx2.i.i.i91 = getelementptr inbounds %TypeId, ptr %40, i64 0, i32 2
  store i64 %42, ptr %memberidx2.i.i.i91, align 4
  %43 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr nonnull %40)
  %.not.i98 = icmp eq ptr %43, null
  br i1 %.not.i98, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %ifend16

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry11
  %memberidx.i100 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %44 = load ptr, ptr %memberidx.i100, align 8
  %45 = load ptr, ptr %44, align 8
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %41
  %48 = load ptr, ptr %47, align 8
  %memberidx2.i.i101 = getelementptr inbounds %Module, ptr %48, i64 0, i32 3
  %49 = load ptr, ptr %memberidx2.i.i101, align 8
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %42
  %52 = load ptr, ptr %51, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %52)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %52)
  %53 = load ptr, ptr %52, align 8
  %54 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %53)
  %55 = icmp eq ptr %54, null
  br i1 %55, label %if.entry14, label %ifend16

if.entry14:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %56 = call ptr @malloc(i32 51)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(51) %56, ptr noundef nonnull align 8 dereferenceable(51) @276, i64 51, i1 false)
  %57 = call ptr @malloc(i32 24)
  %58 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %58, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %59 = call ptr @malloc(i32 24)
  %60 = call i64 @write(i64 1, ptr %58, i64 7)
  call void @free(ptr %58)
  call void @free(ptr %59)
  %61 = call i64 @write(i64 1, ptr %56, i64 51)
  %62 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %56)
  call void @free(ptr %57)
  call void @exit(i64 -1)
  unreachable

ifend16:                                          ; preds = %if.entry11, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i99123 = phi ptr [ %54, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %43, %if.entry11 ]
  %memberidx17 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i99123, i64 0, i32 3
  %63 = load ptr, ptr %memberidx17, align 8
  %64 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %36)
  %memberidx.i65 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i65, align 4
  %66 = urem i64 %64, %65
  %67 = load ptr, ptr %63, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %.not.i67129 = icmp eq ptr %69, null
  br i1 %.not.i67129, label %if.entry18, label %while.body.i74

while.end.i70:                                    ; preds = %ifend.i.i75
  %.pre141.pre = load ptr, ptr %63, align 8
  %.phi.trans.insert142.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre141.pre, i64 %hash.0.i66130
  %.pre143.pre = load ptr, ptr %.phi.trans.insert142.phi.trans.insert, align 8
  %.not22.i69 = icmp eq ptr %.pre143.pre, null
  br i1 %.not22.i69, label %if.entry18, label %Map_String_LLVMValueRef____getitem__.exit82

while.body.i74:                                   ; preds = %ifend16, %else.i78
  %70 = phi ptr [ %78, %else.i78 ], [ %67, %ifend16 ]
  %71 = phi i64 [ %79, %else.i78 ], [ %65, %ifend16 ]
  %72 = phi ptr [ %83, %else.i78 ], [ %69, %ifend16 ]
  %hash.0.i66130 = phi i64 [ %81, %else.i78 ], [ %66, %ifend16 ]
  %73 = load ptr, ptr %72, align 8
  %memberidx.i.i71 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i.i71, align 4
  %.not.i.i73 = icmp eq i64 %74, %34
  br i1 %.not.i.i73, label %ifend.i.i75, label %else.i78

ifend.i.i75:                                      ; preds = %while.body.i74
  %75 = load ptr, ptr %73, align 8
  %76 = call i64 @memcmp(ptr %75, ptr %35, i64 %34)
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %while.end.i70, label %ifend.i.i75.else.i78_crit_edge

ifend.i.i75.else.i78_crit_edge:                   ; preds = %ifend.i.i75
  %.pre139 = load i64, ptr %memberidx.i65, align 4
  %.pre140 = load ptr, ptr %63, align 8
  br label %else.i78

else.i78:                                         ; preds = %ifend.i.i75.else.i78_crit_edge, %while.body.i74
  %78 = phi ptr [ %.pre140, %ifend.i.i75.else.i78_crit_edge ], [ %70, %while.body.i74 ]
  %79 = phi i64 [ %.pre139, %ifend.i.i75.else.i78_crit_edge ], [ %71, %while.body.i74 ]
  %80 = add nuw i64 %hash.0.i66130, 1
  %81 = urem i64 %80, %79
  %82 = getelementptr inbounds ptr, ptr %78, i64 %81
  %83 = load ptr, ptr %82, align 8
  %.not.i67 = icmp eq ptr %83, null
  br i1 %.not.i67, label %if.entry18, label %while.body.i74

Map_String_LLVMValueRef____getitem__.exit82:      ; preds = %while.end.i70
  %memberidx10.i80 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre143.pre, i64 0, i32 1
  %84 = load ptr, ptr %memberidx10.i80, align 8
  %85 = icmp eq ptr %84, null
  br i1 %85, label %if.entry18, label %ifend20

if.entry18:                                       ; preds = %else.i78, %ifend16, %while.end.i70, %Map_String_LLVMValueRef____getitem__.exit82
  %86 = call ptr @malloc(i32 59)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(59) %86, ptr noundef nonnull align 8 dereferenceable(59) @277, i64 59, i1 false)
  %87 = call ptr @malloc(i32 24)
  %88 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %88, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %89 = call ptr @malloc(i32 24)
  %90 = call i64 @write(i64 1, ptr %88, i64 7)
  call void @free(ptr %88)
  call void @free(ptr %89)
  %91 = call i64 @write(i64 1, ptr %86, i64 59)
  %92 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %86)
  call void @free(ptr %87)
  call void @exit(i64 -1)
  br label %ifend20

ifend20:                                          ; preds = %Map_String_LLVMValueRef____getitem__.exit82, %if.entry18
  %common.ret.op.i79125 = phi ptr [ %84, %Map_String_LLVMValueRef____getitem__.exit82 ], [ null, %if.entry18 ]
  %memberidx21 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %93 = load ptr, ptr %memberidx21, align 8
  %94 = load i64, ptr %93, align 4
  %95 = icmp eq i64 %94, 16
  br i1 %95, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend20
  %96 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %93, i1 true)
  %97 = call ptr @LLVMBuildLoad2(ptr %1, ptr %96, ptr %common.ret.op.i79125, ptr nonnull @78)
  br label %common.ret

if.entry27:                                       ; preds = %ifend
  %98 = call ptr @malloc(i32 24)
  %memberidx.i57 = getelementptr inbounds %VarId, ptr %19, i64 0, i32 1
  %99 = load i64, ptr %memberidx.i57, align 4
  %memberidx1.i = getelementptr inbounds %VarId, ptr %19, i64 0, i32 2
  %100 = load i64, ptr %memberidx1.i, align 4
  store i64 %99, ptr %98, align 4
  %memberidx1.i.i.i58 = getelementptr inbounds %TypeId, ptr %98, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i58, align 4
  %memberidx2.i.i.i59 = getelementptr inbounds %TypeId, ptr %98, i64 0, i32 2
  store i64 %100, ptr %memberidx2.i.i.i59, align 4
  %101 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr nonnull %98)
  %.not.i102 = icmp eq ptr %101, null
  br i1 %.not.i102, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %ifend32

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry27
  %memberidx.i105 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %102 = load ptr, ptr %memberidx.i105, align 8
  %103 = load ptr, ptr %102, align 8
  %104 = load ptr, ptr %103, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %99
  %106 = load ptr, ptr %105, align 8
  %memberidx2.i.i106 = getelementptr inbounds %Module, ptr %106, i64 0, i32 6
  %107 = load ptr, ptr %memberidx2.i.i106, align 8
  %108 = load ptr, ptr %107, align 8
  %109 = getelementptr inbounds ptr, ptr %108, i64 %100
  %110 = load ptr, ptr %109, align 8
  call fastcc void @CodeGen_declare_enum(ptr %0, ptr %110)
  %111 = load ptr, ptr %110, align 8
  %112 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %111)
  %113 = icmp eq ptr %112, null
  br i1 %113, label %if.entry30, label %ifend32

if.entry30:                                       ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit
  %114 = call ptr @malloc(i32 50)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %114, ptr noundef nonnull align 8 dereferenceable(50) @278, i64 50, i1 false)
  %115 = call ptr @malloc(i32 24)
  %116 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %116, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %117 = call ptr @malloc(i32 24)
  %118 = call i64 @write(i64 1, ptr %116, i64 7)
  call void @free(ptr %116)
  call void @free(ptr %117)
  %119 = call i64 @write(i64 1, ptr %114, i64 50)
  %120 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %114)
  call void @free(ptr %115)
  call void @exit(i64 -1)
  unreachable

ifend32:                                          ; preds = %if.entry27, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i103128 = phi ptr [ %112, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %101, %if.entry27 ]
  %memberidx33 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i103128, i64 0, i32 1
  %121 = load ptr, ptr %memberidx33, align 8
  %122 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %36)
  %memberidx.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %121, i64 0, i32 1
  %123 = load i64, ptr %memberidx.i, align 4
  %124 = urem i64 %122, %123
  %125 = load ptr, ptr %121, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %124
  %127 = load ptr, ptr %126, align 8
  %.not.i132 = icmp eq ptr %127, null
  br i1 %.not.i132, label %common.ret, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre137.pre = load ptr, ptr %121, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre137.pre, i64 %hash.0.i133
  %.pre138.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre138.pre, null
  br i1 %.not22.i, label %common.ret, label %if.entry6.i

while.body.i:                                     ; preds = %ifend32, %else.i
  %128 = phi ptr [ %136, %else.i ], [ %125, %ifend32 ]
  %129 = phi i64 [ %137, %else.i ], [ %123, %ifend32 ]
  %130 = phi ptr [ %141, %else.i ], [ %127, %ifend32 ]
  %hash.0.i133 = phi i64 [ %139, %else.i ], [ %124, %ifend32 ]
  %131 = load ptr, ptr %130, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %131, i64 0, i32 1
  %132 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %132, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.body.i
  %133 = load ptr, ptr %131, align 8
  %134 = call i64 @memcmp(ptr %133, ptr %35, i64 %34)
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre136 = load ptr, ptr %121, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.body.i
  %136 = phi ptr [ %.pre136, %ifend.i.i.else.i_crit_edge ], [ %128, %while.body.i ]
  %137 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %129, %while.body.i ]
  %138 = add nuw i64 %hash.0.i133, 1
  %139 = urem i64 %138, %137
  %140 = getelementptr inbounds ptr, ptr %136, i64 %139
  %141 = load ptr, ptr %140, align 8
  %.not.i = icmp eq ptr %141, null
  br i1 %.not.i, label %common.ret, label %while.body.i

if.entry6.i:                                      ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre138.pre, i64 0, i32 1
  %142 = load ptr, ptr %memberidx10.i, align 8
  br label %common.ret
}

define internal fastcc void @CodeGen_declare_static_props(ptr nocapture %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Class, ptr %2, i64 0, i32 7
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr @malloc(i32 25)
  %7 = load ptr, ptr %5, align 8
  %memberidx1.i38 = getelementptr inbounds %Map_String_PropId_, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i38, align 4
  %memberidx2.i39 = getelementptr inbounds %Map_String_PropId_, ptr %5, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i39, align 4
  store i1 false, ptr %6, align 1
  %memberidx1.i.i40 = getelementptr inbounds %MapIterator_String_PropId_, ptr %6, i64 0, i32 1
  store ptr %7, ptr %memberidx1.i.i40, align 8
  %memberidx2.i.i41 = getelementptr inbounds %MapIterator_String_PropId_, ptr %6, i64 0, i32 2
  store i64 %8, ptr %memberidx2.i.i41, align 4
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %6, i64 0, i32 3
  store i64 %9, ptr %memberidx3.i.i, align 4
  %memberidx4 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx5 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx8 = getelementptr inbounds %Class, ptr %2, i64 0, i32 4
  %memberidx11 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.next

for.next:                                         ; preds = %ifend, %for.entry
  %10 = phi ptr [ %18, %ifend ], [ %7, %for.entry ]
  %11 = phi i64 [ %19, %ifend ], [ %9, %for.entry ]
  %.lcssa4547 = phi i64 [ %.lcssa, %ifend ], [ %8, %for.entry ]
  %smin = call i64 @llvm.smin.i64(i64 %.lcssa4547, i64 0)
  %12 = add i64 %smin, -1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.body.i, %for.next
  %13 = phi ptr [ %incdec.ptr.i, %while.body.i ], [ %10, %for.next ]
  %14 = phi i64 [ %16, %while.body.i ], [ %.lcssa4547, %for.next ]
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %while.body.i, label %MapIterator_String_PropId__next.exit

while.body.i:                                     ; preds = %while.entry.i
  %16 = add nsw i64 %14, -1
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %13, i64 1
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i40, align 8
  %17 = load ptr, ptr %13, align 8
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %while.entry.i, label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %while.entry.i, %while.body.i
  %18 = phi ptr [ %13, %while.entry.i ], [ %incdec.ptr.i, %while.body.i ]
  %.lcssa = phi i64 [ %12, %while.entry.i ], [ %16, %while.body.i ]
  %19 = add nsw i64 %11, -1
  %20 = icmp slt i64 %11, 1
  br i1 %20, label %for.end, label %for.body

for.body:                                         ; preds = %MapIterator_String_PropId__next.exit
  %21 = getelementptr inbounds ptr, ptr %18, i64 -1
  %22 = load ptr, ptr %21, align 8
  %memberidx2 = getelementptr inbounds %MapEntry_String_PropId_, ptr %22, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2, align 8
  %24 = load ptr, ptr %22, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i31 = getelementptr inbounds %PropId, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i31, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %26 = load i64, ptr %25, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %25, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %25, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %29 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %26, i64 %27, i64 %28)
  %30 = load ptr, ptr %3, align 8
  %31 = call ptr @malloc(i32 24)
  store ptr %30, ptr %31, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %31, i64 0, i32 1
  store i64 %29, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i32 = getelementptr inbounds %String, ptr %31, i64 0, i32 2
  store i64 %29, ptr %memberidx2.i.i.i32, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %32 = trunc i64 %29 to i32
  %33 = add i32 %32, 1
  %34 = call ptr @malloc(i32 %33)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %30, i64 %29, i1 false)
  %35 = getelementptr inbounds i8, ptr %34, i64 %29
  store i8 0, ptr %35, align 1
  %36 = load i64, ptr %23, align 4
  %memberidx2.i34 = getelementptr inbounds %PropId, ptr %23, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i34, align 4
  %38 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @259, ptr %34, i64 %36, i64 %37)
  %39 = load ptr, ptr %4, align 8
  %40 = call ptr @malloc(i32 24)
  store ptr %39, ptr %40, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %40, i64 0, i32 1
  store i64 %38, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %40, i64 0, i32 2
  store i64 %38, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %34)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %41 = load ptr, ptr %memberidx4, align 8
  %42 = load ptr, ptr %memberidx.i31, align 8
  %43 = load ptr, ptr %41, align 8
  %44 = load i64, ptr %42, align 4
  %45 = load ptr, ptr %43, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  %47 = load ptr, ptr %46, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %47, i64 0, i32 3
  %48 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %42, i64 0, i32 2
  %49 = load i64, ptr %memberidx3.i.i.i, align 4
  %50 = load ptr, ptr %48, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %49
  %52 = load ptr, ptr %51, align 8
  %53 = load i64, ptr %23, align 4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i29 = getelementptr inbounds %Class, ptr %52, i64 0, i32 5
  %55 = load ptr, ptr %memberidx1.i29, align 8
  %56 = load i64, ptr %memberidx2.i34, align 4
  %57 = load ptr, ptr %55, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %59, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %52, i64 0, i32 4
  %60 = load ptr, ptr %memberidx4.i, align 8
  %61 = load i64, ptr %memberidx2.i34, align 4
  %62 = load ptr, ptr %60, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %64, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %65 = load i64, ptr %common.ret.op.i, align 4
  %66 = icmp eq i64 %65, 20
  br i1 %66, label %if.entry.i43, label %is_object.exit

if.entry.i43:                                     ; preds = %get_class_prop_type.exit, %if.entry.i43
  %.tr5.i = phi ptr [ %67, %if.entry.i43 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i42 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %67 = load ptr, ptr %memberidx1.i42, align 8
  %68 = load i64, ptr %67, align 4
  %69 = icmp eq i64 %68, 20
  br i1 %69, label %if.entry.i43, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i43, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %65, %get_class_prop_type.exit ], [ %68, %if.entry.i43 ]
  %70 = icmp eq i64 %.lcssa.i, 11
  %71 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %common.ret.op.i, i1 %70)
  %72 = load ptr, ptr %memberidx5, align 8
  %memberidx.i27 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  %73 = load i64, ptr %memberidx.i27, align 4
  %74 = trunc i64 %73 to i32
  %75 = add i32 %74, 1
  %76 = call ptr @malloc(i32 %75)
  %77 = load ptr, ptr %72, align 8
  %78 = load i64, ptr %memberidx.i27, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %76, ptr align 8 %77, i64 %78, i1 false)
  %79 = getelementptr inbounds i8, ptr %76, i64 %78
  store i8 0, ptr %79, align 1
  %memberidx.i26 = getelementptr inbounds %String, ptr %24, i64 0, i32 1
  %80 = load i64, ptr %memberidx.i26, align 4
  %81 = trunc i64 %80 to i32
  %82 = add i32 %81, 1
  %83 = call ptr @malloc(i32 %82)
  %84 = load ptr, ptr %24, align 8
  %85 = load i64, ptr %memberidx.i26, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %83, ptr align 8 %84, i64 %85, i1 false)
  %86 = getelementptr inbounds i8, ptr %83, i64 %85
  store i8 0, ptr %86, align 1
  %87 = alloca ptr, align 8
  %88 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %87, ptr nonnull @104, ptr %76, ptr %83)
  %89 = load ptr, ptr %87, align 8
  %90 = tail call ptr @malloc(i32 24)
  store ptr %89, ptr %90, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  store i64 %88, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %90, i64 0, i32 2
  store i64 %88, ptr %memberidx2.i, align 4
  tail call void @free(ptr %76)
  tail call void @free(ptr %83)
  %91 = load i64, ptr %23, align 4
  %92 = icmp eq i64 %91, 0
  %93 = load ptr, ptr %0, align 8
  %94 = trunc i64 %88 to i32
  %95 = add i32 %94, 1
  %96 = call ptr @malloc(i32 %95)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %96, ptr align 8 %89, i64 %88, i1 false)
  %97 = getelementptr inbounds i8, ptr %96, i64 %88
  store i8 0, ptr %97, align 1
  br i1 %92, label %if.entry, label %else

for.end:                                          ; preds = %MapIterator_String_PropId__next.exit
  tail call void @free(ptr nonnull %6)
  ret void

if.entry:                                         ; preds = %is_object.exit
  %98 = call ptr @LLVMAddFunction(ptr %93, ptr %96, ptr %71)
  br label %ifend

else:                                             ; preds = %is_object.exit
  %99 = call ptr @LLVMAddGlobal(ptr %93, ptr %71, ptr %96)
  %100 = load ptr, ptr %memberidx8, align 8
  %101 = load i64, ptr %memberidx2.i34, align 4
  %102 = load ptr, ptr %100, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8
  %memberidx10 = getelementptr inbounds %ClassField, ptr %104, i64 0, i32 6
  %105 = load ptr, ptr %memberidx10, align 8
  %106 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr null, ptr %105)
  call void @LLVMSetInitializer(ptr %99, ptr %106)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %static_prop_value.0 = phi ptr [ %98, %if.entry ], [ %99, %else ]
  %107 = load ptr, ptr %memberidx11, align 8
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %107, ptr nonnull %40, ptr %static_prop_value.0)
  br label %for.next
}

define internal fastcc void @CodeGen_codegen_function(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Function, ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx.i, align 4
  %6 = trunc i64 %5 to i32
  %7 = add i32 %6, 1
  %8 = tail call ptr @malloc(i32 %7)
  %9 = load ptr, ptr %4, align 8
  %10 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %9, i64 %10, i1 false)
  %11 = getelementptr inbounds i8, ptr %8, i64 %10
  store i8 0, ptr %11, align 1
  %12 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Function, ptr %1, i64 0, i32 4
  %13 = load ptr, ptr %memberidx2, align 8
  %14 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %13, i1 false)
  %15 = tail call ptr @LLVMAddFunction(ptr %12, ptr %8, ptr %14)
  %16 = load ptr, ptr %1, align 8
  %memberidx.i39 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %17 = load ptr, ptr %memberidx.i39, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %16, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i.i, align 4
  %19 = load i64, ptr %16, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %16, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i.i, align 4
  %21 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %18, i64 %19, i64 %20)
  %22 = load ptr, ptr %3, align 8
  %23 = call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  store i64 %21, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %23, i64 0, i32 2
  store i64 %21, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %17, ptr nonnull %23, ptr %15)
  %memberidx4 = getelementptr inbounds %Function, ptr %1, i64 0, i32 6
  %24 = load i1, ptr %memberidx4, align 1
  br i1 %24, label %if.entry, label %ifend

common.ret:                                       ; preds = %for.end, %if.entry
  ret void

if.entry:                                         ; preds = %2
  call void @LLVMSetLinkage(ptr %15, i64 0)
  br label %common.ret

ifend:                                            ; preds = %2
  %25 = call ptr @LLVMCreateBuilder()
  %26 = call ptr @LLVMAppendBasicBlock(ptr %15, ptr nonnull @78)
  call void @LLVMPositionBuilderAtEnd(ptr %25, ptr %26)
  %memberidx5 = getelementptr inbounds %Function, ptr %1, i64 0, i32 5
  %27 = load ptr, ptr %memberidx5, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nonnull %0, ptr %25, ptr %27)
  %memberidx6 = getelementptr inbounds %Function, ptr %1, i64 0, i32 2
  %28 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Array_FunctionArg_, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx7, align 4
  %30 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %30, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %30, i64 0, i32 1
  store i64 %29, ptr %memberidx1.i, align 4
  %31 = call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %31, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i = getelementptr inbounds %RangeIterator, ptr %31, i64 0, i32 2
  store i64 %29, ptr %memberidx1.i.i, align 4
  %32 = icmp slt i64 %29, 1
  br i1 %32, label %for.end, label %for.body

for.body:                                         ; preds = %ifend, %for.body
  %33 = phi i64 [ %43, %for.body ], [ 1, %ifend ]
  %34 = phi i64 [ %33, %for.body ], [ 0, %ifend ]
  %35 = load ptr, ptr %memberidx6, align 8
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %34
  %38 = load ptr, ptr %37, align 8
  %memberidx10 = getelementptr inbounds %FunctionArg, ptr %38, i64 0, i32 4
  %39 = load ptr, ptr %memberidx10, align 8
  %40 = call fastcc ptr @CodeGen_get_var_from_varid(ptr nonnull %0, ptr %39)
  %41 = call ptr @LLVMGetParam(ptr %15, i64 %34)
  %42 = call ptr @LLVMBuildStore(ptr %25, ptr %41, ptr %40)
  %.not = icmp slt i64 %33, %29
  %43 = add nuw nsw i64 %33, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  tail call void @free(ptr nonnull %31)
  %memberidx11 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %44 = load ptr, ptr %memberidx11, align 8
  store ptr %15, ptr %memberidx11, align 8
  %memberidx13 = getelementptr inbounds %Function, ptr %1, i64 0, i32 3
  %45 = load ptr, ptr %memberidx13, align 8
  %46 = call fastcc ptr @CodeGen_codegen_block(ptr nonnull %0, ptr %25, ptr %45)
  call void @LLVMDisposeBuilder(ptr %25)
  store ptr %44, ptr %memberidx11, align 8
  br label %common.ret
}

define internal fastcc void @CodeGen_declare_class_props(ptr nocapture %0, ptr nocapture readonly %1, ptr nocapture readonly %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_LLVMTypeRef_, ptr %6, i64 0, i32 1
  %memberidx1.i = getelementptr inbounds %Array_LLVMTypeRef_, ptr %6, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %6, align 8
  store i64 0, ptr %memberidx.i, align 4
  %memberidx2 = getelementptr inbounds %Class, ptr %2, i64 0, i32 6
  %8 = load ptr, ptr %memberidx2, align 8
  %9 = tail call ptr @malloc(i32 25)
  %10 = load ptr, ptr %8, align 8
  %memberidx1.i58 = getelementptr inbounds %Map_String_PropId_, ptr %8, i64 0, i32 1
  %11 = load i64, ptr %memberidx1.i58, align 4
  %memberidx2.i = getelementptr inbounds %Map_String_PropId_, ptr %8, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i, align 4
  store i1 false, ptr %9, align 1
  %memberidx1.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %9, i64 0, i32 1
  store ptr %10, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %9, i64 0, i32 2
  store i64 %11, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %9, i64 0, i32 3
  store i64 %12, ptr %memberidx3.i.i, align 4
  %memberidx6 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx9 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 2
  %memberidx21 = getelementptr inbounds %Class, ptr %2, i64 0, i32 5
  %memberidx27 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx28 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.next.outer

for.next.outer:                                   ; preds = %for.next.outer.backedge, %for.entry
  %.ph = phi i64 [ 0, %for.entry ], [ %.ph.be, %for.next.outer.backedge ]
  %.promoted.ph = phi ptr [ %7, %for.entry ], [ %98, %for.next.outer.backedge ]
  %memberidx1.i.promoted.ph = phi i64 [ 8, %for.entry ], [ %.lcssa103, %for.next.outer.backedge ]
  %.ph137 = phi ptr [ %10, %for.entry ], [ %21, %for.next.outer.backedge ]
  %.ph138 = phi i64 [ %12, %for.entry ], [ %22, %for.next.outer.backedge ]
  %.lcssa106.ph = phi i64 [ %11, %for.entry ], [ %.lcssa, %for.next.outer.backedge ]
  br label %for.next

for.next:                                         ; preds = %for.next.outer, %ifend26
  %13 = phi ptr [ %21, %ifend26 ], [ %.ph137, %for.next.outer ]
  %14 = phi i64 [ %22, %ifend26 ], [ %.ph138, %for.next.outer ]
  %.lcssa106 = phi i64 [ %.lcssa, %ifend26 ], [ %.lcssa106.ph, %for.next.outer ]
  %smin = call i64 @llvm.smin.i64(i64 %.lcssa106, i64 0)
  %15 = add i64 %smin, -1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.body.i, %for.next
  %16 = phi ptr [ %incdec.ptr.i, %while.body.i ], [ %13, %for.next ]
  %17 = phi i64 [ %19, %while.body.i ], [ %.lcssa106, %for.next ]
  %18 = icmp sgt i64 %17, 0
  br i1 %18, label %while.body.i, label %MapIterator_String_PropId__next.exit

while.body.i:                                     ; preds = %while.entry.i
  %19 = add nsw i64 %17, -1
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %16, i64 1
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  %20 = load ptr, ptr %16, align 8
  %.not.i = icmp eq ptr %20, null
  br i1 %.not.i, label %while.entry.i, label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %while.entry.i, %while.body.i
  %21 = phi ptr [ %16, %while.entry.i ], [ %incdec.ptr.i, %while.body.i ]
  %.lcssa = phi i64 [ %15, %while.entry.i ], [ %19, %while.body.i ]
  %22 = add nsw i64 %14, -1
  %23 = icmp slt i64 %14, 1
  br i1 %23, label %for.end, label %for.body

for.body:                                         ; preds = %MapIterator_String_PropId__next.exit
  %24 = getelementptr inbounds ptr, ptr %21, i64 -1
  %25 = load ptr, ptr %24, align 8
  %memberidx4 = getelementptr inbounds %MapEntry_String_PropId_, ptr %25, i64 0, i32 1
  %26 = load ptr, ptr %memberidx4, align 8
  %27 = load ptr, ptr %25, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %memberidx.i61 = getelementptr inbounds %PropId, ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %memberidx.i61, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %29 = load i64, ptr %28, align 4
  %memberidx1.i.i62 = getelementptr inbounds %TypeId, ptr %28, i64 0, i32 1
  %30 = load i64, ptr %memberidx1.i.i62, align 4
  %memberidx2.i.i63 = getelementptr inbounds %TypeId, ptr %28, i64 0, i32 2
  %31 = load i64, ptr %memberidx2.i.i63, align 4
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %29, i64 %30, i64 %31)
  %33 = load ptr, ptr %4, align 8
  %34 = call ptr @malloc(i32 24)
  store ptr %33, ptr %34, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %34, i64 0, i32 1
  store i64 %32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %35 = trunc i64 %32 to i32
  %36 = add i32 %35, 1
  %37 = call ptr @malloc(i32 %36)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %33, i64 %32, i1 false)
  %38 = getelementptr inbounds i8, ptr %37, i64 %32
  store i8 0, ptr %38, align 1
  %39 = load i64, ptr %26, align 4
  %memberidx2.i64 = getelementptr inbounds %PropId, ptr %26, i64 0, i32 2
  %40 = load i64, ptr %memberidx2.i64, align 4
  %41 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @259, ptr %37, i64 %39, i64 %40)
  %42 = load ptr, ptr %5, align 8
  %43 = call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 %41, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 %41, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %37)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %44 = load ptr, ptr %memberidx6, align 8
  %45 = load ptr, ptr %memberidx.i61, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = load i64, ptr %45, align 4
  %48 = load ptr, ptr %46, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %memberidx2.i.i.i66 = getelementptr inbounds %Module, ptr %50, i64 0, i32 3
  %51 = load ptr, ptr %memberidx2.i.i.i66, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %45, i64 0, i32 2
  %52 = load i64, ptr %memberidx3.i.i.i, align 4
  %53 = load ptr, ptr %51, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 %52
  %55 = load ptr, ptr %54, align 8
  %56 = load i64, ptr %26, align 4
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %get_class_prop_type.exit.thread, label %get_class_prop_type.exit

get_class_prop_type.exit.thread:                  ; preds = %for.body
  %memberidx1.i67 = getelementptr inbounds %Class, ptr %55, i64 0, i32 5
  %58 = load ptr, ptr %memberidx1.i67, align 8
  %59 = load i64, ptr %memberidx2.i64, align 4
  %60 = load ptr, ptr %58, align 8
  %61 = getelementptr inbounds ptr, ptr %60, i64 %59
  %62 = load ptr, ptr %61, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %62, i64 0, i32 4
  %common.ret.op.i101 = load ptr, ptr %memberidx3.i, align 8
  br label %else

get_class_prop_type.exit:                         ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 4
  %63 = load ptr, ptr %memberidx4.i, align 8
  %64 = load i64, ptr %memberidx2.i64, align 4
  %65 = load ptr, ptr %63, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  %memberidx6.i69 = getelementptr inbounds %ClassField, ptr %67, i64 0, i32 4
  %common.ret.op.i = load ptr, ptr %memberidx6.i69, align 8
  %68 = icmp eq i64 %56, 1
  br i1 %68, label %get_field_offset.exit, label %else

for.end:                                          ; preds = %MapIterator_String_PropId__next.exit
  tail call void @free(ptr nonnull %9)
  %memberidx.i70 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %69 = load i64, ptr %memberidx.i70, align 4
  %70 = add i64 %69, 1
  %71 = add i64 %70, %.ph
  %memberidx.i.i72 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 2
  %72 = load i64, ptr %memberidx.i.i72, align 4
  %73 = icmp slt i64 %72, %71
  %.pre121 = load ptr, ptr %3, align 8
  br i1 %73, label %while.body.i.i, label %Array_LLVMTypeRef____adda__.exit

while.body.i.i:                                   ; preds = %for.end, %while.body.i.i
  %74 = phi ptr [ %78, %while.body.i.i ], [ %.pre121, %for.end ]
  %75 = phi i64 [ %79, %while.body.i.i ], [ %72, %for.end ]
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx.i.i72, align 4
  %77 = shl i64 %75, 4
  %78 = call ptr @realloc(ptr %74, i64 %77)
  store ptr %78, ptr %3, align 8
  %79 = load i64, ptr %memberidx.i.i72, align 4
  %80 = icmp slt i64 %79, %71
  br i1 %80, label %while.body.i.i, label %Array_LLVMTypeRef____adda__.exit.loopexit

Array_LLVMTypeRef____adda__.exit.loopexit:        ; preds = %while.body.i.i
  %.pre123 = load i64, ptr %memberidx.i70, align 4
  br label %Array_LLVMTypeRef____adda__.exit

Array_LLVMTypeRef____adda__.exit:                 ; preds = %for.end, %Array_LLVMTypeRef____adda__.exit.loopexit
  %81 = phi i64 [ %.pre123, %Array_LLVMTypeRef____adda__.exit.loopexit ], [ %69, %for.end ]
  %82 = phi ptr [ %78, %Array_LLVMTypeRef____adda__.exit.loopexit ], [ %.pre121, %for.end ]
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = shl i64 %.ph, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %83, ptr align 8 %.promoted.ph, i64 %84, i1 false)
  %85 = load i64, ptr %memberidx.i70, align 4
  %86 = add nuw i64 %85, %.ph
  store i64 %86, ptr %memberidx.i70, align 4
  call void @free(ptr %.promoted.ph)
  tail call void @free(ptr %6)
  ret void

get_field_offset.exit:                            ; preds = %get_class_prop_type.exit
  %memberidx3.i79 = getelementptr inbounds %ClassField, ptr %67, i64 0, i32 5
  %87 = load i64, ptr %memberidx3.i79, align 4
  %88 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 true)
  %89 = load ptr, ptr %memberidx9, align 8
  call fastcc void @Map_String_uint____setitem__(ptr %89, ptr nonnull %43, i64 %87)
  %90 = add nuw i64 %87, 1
  %91 = icmp slt i64 %memberidx1.i.promoted.ph, %90
  br i1 %91, label %while.body.i83, label %Array_LLVMTypeRef__ensure_capacity.exit

while.body.i83:                                   ; preds = %get_field_offset.exit, %while.body.i83
  %92 = phi ptr [ %96, %while.body.i83 ], [ %.promoted.ph, %get_field_offset.exit ]
  %93 = phi i64 [ %94, %while.body.i83 ], [ %memberidx1.i.promoted.ph, %get_field_offset.exit ]
  %94 = shl nuw i64 %93, 1
  %95 = shl i64 %93, 4
  %96 = call ptr @realloc(ptr %92, i64 %95)
  %97 = icmp slt i64 %94, %90
  br i1 %97, label %while.body.i83, label %while.entry.i82.Array_LLVMTypeRef__ensure_capacity.exit_crit_edge

while.entry.i82.Array_LLVMTypeRef__ensure_capacity.exit_crit_edge: ; preds = %while.body.i83
  store ptr %96, ptr %6, align 8
  br label %Array_LLVMTypeRef__ensure_capacity.exit

Array_LLVMTypeRef__ensure_capacity.exit:          ; preds = %while.entry.i82.Array_LLVMTypeRef__ensure_capacity.exit_crit_edge, %get_field_offset.exit
  %98 = phi ptr [ %96, %while.entry.i82.Array_LLVMTypeRef__ensure_capacity.exit_crit_edge ], [ %.promoted.ph, %get_field_offset.exit ]
  %.lcssa103 = phi i64 [ %94, %while.entry.i82.Array_LLVMTypeRef__ensure_capacity.exit_crit_edge ], [ %memberidx1.i.promoted.ph, %get_field_offset.exit ]
  store i64 %.lcssa103, ptr %memberidx1.i, align 4
  %99 = getelementptr inbounds ptr, ptr %98, i64 %87
  store ptr %88, ptr %99, align 8
  %100 = load i64, ptr %memberidx.i, align 4
  %101 = icmp sgt i64 %90, %100
  br i1 %101, label %if.entry11, label %for.next.outer.backedge

else:                                             ; preds = %get_class_prop_type.exit.thread, %get_class_prop_type.exit
  %common.ret.op.i102 = phi ptr [ %common.ret.op.i101, %get_class_prop_type.exit.thread ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %102 = tail call ptr @malloc(i32 24)
  %memberidx.i84 = getelementptr inbounds %Array_Type_, ptr %102, i64 0, i32 1
  store i64 0, ptr %memberidx.i84, align 4
  %memberidx1.i85 = getelementptr inbounds %Array_Type_, ptr %102, i64 0, i32 2
  store i64 8, ptr %memberidx1.i85, align 4
  %103 = call ptr @malloc(i32 64)
  store ptr %103, ptr %102, align 8
  %104 = tail call ptr @malloc(i32 16)
  %105 = load ptr, ptr %2, align 8
  store i64 11, ptr %104, align 4
  %memberidx.i86 = getelementptr inbounds %ObjectType, ptr %104, i64 0, i32 1
  store ptr %105, ptr %memberidx.i86, align 8
  store ptr %104, ptr %103, align 8
  store i64 1, ptr %memberidx.i84, align 4
  %memberidx18 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i102, i64 0, i32 1
  %106 = load ptr, ptr %memberidx18, align 8
  %memberidx1.i88 = getelementptr inbounds %Array_Type_, ptr %106, i64 0, i32 1
  %107 = load i64, ptr %memberidx1.i88, align 4
  %108 = add nuw i64 %107, 2
  %109 = load i64, ptr %memberidx1.i85, align 4
  %110 = icmp slt i64 %109, %108
  %.pre = load ptr, ptr %102, align 8
  br i1 %110, label %while.body.i.i91, label %Array_Type____adda__.exit

while.body.i.i91:                                 ; preds = %else, %while.body.i.i91
  %111 = phi ptr [ %115, %while.body.i.i91 ], [ %.pre, %else ]
  %112 = phi i64 [ %116, %while.body.i.i91 ], [ %109, %else ]
  %113 = shl nuw i64 %112, 1
  store i64 %113, ptr %memberidx1.i85, align 4
  %114 = shl i64 %112, 4
  %115 = call ptr @realloc(ptr %111, i64 %114)
  store ptr %115, ptr %102, align 8
  %116 = load i64, ptr %memberidx1.i85, align 4
  %117 = icmp slt i64 %116, %108
  br i1 %117, label %while.body.i.i91, label %Array_Type____adda__.exit.loopexit

Array_Type____adda__.exit.loopexit:               ; preds = %while.body.i.i91
  %.pre119 = load i64, ptr %memberidx.i84, align 4
  %.pre120 = load i64, ptr %memberidx1.i88, align 4
  br label %Array_Type____adda__.exit

Array_Type____adda__.exit:                        ; preds = %else, %Array_Type____adda__.exit.loopexit
  %118 = phi i64 [ %.pre120, %Array_Type____adda__.exit.loopexit ], [ %107, %else ]
  %119 = phi i64 [ %.pre119, %Array_Type____adda__.exit.loopexit ], [ 1, %else ]
  %120 = phi ptr [ %115, %Array_Type____adda__.exit.loopexit ], [ %.pre, %else ]
  %121 = getelementptr inbounds ptr, ptr %120, i64 %119
  %122 = load ptr, ptr %106, align 8
  %123 = shl i64 %118, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %121, ptr align 8 %122, i64 %123, i1 false)
  %124 = load i64, ptr %memberidx.i84, align 4
  %125 = load i64, ptr %memberidx1.i88, align 4
  %126 = add nuw i64 %125, %124
  store i64 %126, ptr %memberidx.i84, align 4
  %127 = load ptr, ptr %memberidx18, align 8
  %128 = load ptr, ptr %127, align 8
  call void @free(ptr %128)
  tail call void @free(ptr %127)
  store ptr %102, ptr %memberidx18, align 8
  %129 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i102, i1 false)
  %130 = load ptr, ptr %memberidx21, align 8
  %131 = load i64, ptr %memberidx2.i64, align 4
  %132 = load ptr, ptr %130, align 8
  %133 = getelementptr inbounds ptr, ptr %132, i64 %131
  %134 = load ptr, ptr %133, align 8
  %memberidx23 = getelementptr inbounds %ClassMethod, ptr %134, i64 0, i32 7
  %135 = load i1, ptr %memberidx23, align 1
  br i1 %135, label %ifend26, label %if.entry24

if.entry11:                                       ; preds = %Array_LLVMTypeRef__ensure_capacity.exit
  store i64 %90, ptr %memberidx.i, align 4
  br label %for.next.outer.backedge

for.next.outer.backedge:                          ; preds = %if.entry11, %Array_LLVMTypeRef__ensure_capacity.exit
  %.ph.be = phi i64 [ %100, %Array_LLVMTypeRef__ensure_capacity.exit ], [ %90, %if.entry11 ]
  br label %for.next.outer

if.entry24:                                       ; preds = %Array_Type____adda__.exit
  %136 = load ptr, ptr %memberidx27, align 8
  %memberidx.i92 = getelementptr inbounds %String, ptr %136, i64 0, i32 1
  %137 = load i64, ptr %memberidx.i92, align 4
  %138 = trunc i64 %137 to i32
  %139 = add i32 %138, 1
  %140 = call ptr @malloc(i32 %139)
  %141 = load ptr, ptr %136, align 8
  %142 = load i64, ptr %memberidx.i92, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %140, ptr align 8 %141, i64 %142, i1 false)
  %143 = getelementptr inbounds i8, ptr %140, i64 %142
  store i8 0, ptr %143, align 1
  %memberidx.i93 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  %144 = load i64, ptr %memberidx.i93, align 4
  %145 = trunc i64 %144 to i32
  %146 = add i32 %145, 1
  %147 = call ptr @malloc(i32 %146)
  %148 = load ptr, ptr %27, align 8
  %149 = load i64, ptr %memberidx.i93, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %147, ptr align 8 %148, i64 %149, i1 false)
  %150 = getelementptr inbounds i8, ptr %147, i64 %149
  store i8 0, ptr %150, align 1
  %151 = alloca ptr, align 8
  %152 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %151, ptr nonnull @104, ptr %140, ptr %147)
  %153 = load ptr, ptr %151, align 8
  %154 = tail call ptr @malloc(i32 24)
  store ptr %153, ptr %154, align 8
  %memberidx1.i94 = getelementptr inbounds %String, ptr %154, i64 0, i32 1
  store i64 %152, ptr %memberidx1.i94, align 4
  %memberidx2.i95 = getelementptr inbounds %String, ptr %154, i64 0, i32 2
  store i64 %152, ptr %memberidx2.i95, align 4
  tail call void @free(ptr %140)
  tail call void @free(ptr %147)
  %155 = load ptr, ptr %0, align 8
  %156 = trunc i64 %152 to i32
  %157 = add i32 %156, 1
  %158 = call ptr @malloc(i32 %157)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %158, ptr align 8 %153, i64 %152, i1 false)
  %159 = getelementptr inbounds i8, ptr %158, i64 %152
  store i8 0, ptr %159, align 1
  %160 = call ptr @LLVMAddFunction(ptr %155, ptr %158, ptr %129)
  br label %ifend26

ifend26:                                          ; preds = %Array_Type____adda__.exit, %if.entry24
  %llvm_method_val.0 = phi ptr [ %160, %if.entry24 ], [ null, %Array_Type____adda__.exit ]
  %161 = load ptr, ptr %memberidx28, align 8
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %161, ptr nonnull %43, ptr %llvm_method_val.0)
  br label %for.next
}

define internal fastcc ptr @CodeGen_get_or_codegen_var(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call fastcc ptr @CodeGen_get_var_from_varid(ptr %0, ptr %1)
  %.not = icmp eq ptr %3, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %2, %for.end38, %ifend18, %if.entry44, %if.entry28, %if.entry12
  %common.ret.op = phi ptr [ %26, %if.entry12 ], [ %41, %if.entry28 ], [ %54, %if.entry44 ], [ null, %ifend18 ], [ null, %for.end38 ], [ %3, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %4, align 8
  %memberidx2 = getelementptr inbounds %VarId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx2, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %10 = load i64, ptr %1, align 4
  %11 = icmp eq i64 %10, 2
  br i1 %11, label %for.entry, label %ifend6

ifend6:                                           ; preds = %ifend, %for.end
  %12 = phi i64 [ %10, %ifend ], [ %.pr, %for.end ]
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %for.entry19, label %ifend18

for.entry:                                        ; preds = %ifend
  %memberidx7 = getelementptr inbounds %Module, ptr %9, i64 0, i32 8
  %14 = load ptr, ptr %memberidx7, align 8
  %15 = tail call ptr @malloc(i32 25)
  %16 = load ptr, ptr %14, align 8
  %memberidx1.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %14, i64 0, i32 1
  %17 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %15, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %15, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %15, i64 0, i32 3
  store ptr %16, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %15, i64 0, i32 2
  store i64 %17, ptr %memberidx3.i.i, align 4
  %memberidx11 = getelementptr inbounds %VarId, ptr %1, i64 0, i32 2
  br label %for.next

for.next:                                         ; preds = %for.body, %for.entry
  %18 = phi i64 [ %19, %for.body ], [ 0, %for.entry ]
  %.not114 = icmp slt i64 %18, %17
  br i1 %.not114, label %for.body, label %for.end

for.body:                                         ; preds = %for.next
  %19 = add nuw nsw i64 %18, 1
  %20 = getelementptr inbounds ptr, ptr %16, i64 %18
  %21 = load ptr, ptr %20, align 8
  %memberidx9 = getelementptr inbounds %ConstDeclaration, ptr %21, i64 0, i32 2
  %22 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %VarId, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx10, align 4
  %24 = load i64, ptr %memberidx11, align 4
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %if.entry12, label %for.next

for.end:                                          ; preds = %for.next
  tail call void @free(ptr nonnull %15)
  %.pr = load i64, ptr %1, align 4
  br label %ifend6

if.entry12:                                       ; preds = %for.body
  store i64 %19, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %15, align 1
  tail call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr null, ptr nonnull %21)
  %26 = tail call fastcc ptr @CodeGen_get_var_from_varid(ptr %0, ptr nonnull %1)
  br label %common.ret

ifend18:                                          ; preds = %ifend6, %for.end22
  %27 = phi i64 [ %12, %ifend6 ], [ %.pre, %for.end22 ]
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %for.entry35, label %common.ret

for.entry19:                                      ; preds = %ifend6
  %memberidx23 = getelementptr inbounds %Module, ptr %9, i64 0, i32 9
  %29 = load ptr, ptr %memberidx23, align 8
  %30 = tail call ptr @malloc(i32 25)
  %31 = load ptr, ptr %29, align 8
  %memberidx1.i70 = getelementptr inbounds %Array_VarDeclaration_, ptr %29, i64 0, i32 1
  %32 = load i64, ptr %memberidx1.i70, align 4
  store i1 false, ptr %30, align 1
  %memberidx1.i.i71 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %30, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i71, align 4
  %memberidx2.i.i72 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %30, i64 0, i32 3
  store ptr %31, ptr %memberidx2.i.i72, align 8
  %memberidx3.i.i73 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %30, i64 0, i32 2
  store i64 %32, ptr %memberidx3.i.i73, align 4
  %memberidx27 = getelementptr inbounds %VarId, ptr %1, i64 0, i32 2
  br label %for.next20

for.next20:                                       ; preds = %for.body21, %for.entry19
  %33 = phi i64 [ %34, %for.body21 ], [ 0, %for.entry19 ]
  %.not113 = icmp slt i64 %33, %32
  br i1 %.not113, label %for.body21, label %for.end22

for.body21:                                       ; preds = %for.next20
  %34 = add nuw nsw i64 %33, 1
  %35 = getelementptr inbounds ptr, ptr %31, i64 %33
  %36 = load ptr, ptr %35, align 8
  %memberidx25 = getelementptr inbounds %VarDeclaration, ptr %36, i64 0, i32 2
  %37 = load ptr, ptr %memberidx25, align 8
  %memberidx26 = getelementptr inbounds %VarId, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx26, align 4
  %39 = load i64, ptr %memberidx27, align 4
  %40 = icmp eq i64 %38, %39
  br i1 %40, label %if.entry28, label %for.next20

for.end22:                                        ; preds = %for.next20
  tail call void @free(ptr nonnull %30)
  %.pre = load i64, ptr %1, align 4
  br label %ifend18

if.entry28:                                       ; preds = %for.body21
  store i64 %34, ptr %memberidx1.i.i71, align 4
  store i1 false, ptr %30, align 1
  tail call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr null, ptr nonnull %36)
  %41 = tail call fastcc ptr @CodeGen_get_var_from_varid(ptr %0, ptr nonnull %1)
  br label %common.ret

for.entry35:                                      ; preds = %ifend18
  %memberidx39 = getelementptr inbounds %Module, ptr %9, i64 0, i32 4
  %42 = load ptr, ptr %memberidx39, align 8
  %43 = tail call ptr @malloc(i32 25)
  %44 = load ptr, ptr %42, align 8
  %memberidx1.i77 = getelementptr inbounds %Array_Function_, ptr %42, i64 0, i32 1
  %45 = load i64, ptr %memberidx1.i77, align 4
  store i1 false, ptr %43, align 1
  %memberidx1.i.i78 = getelementptr inbounds %ArrayIterator_Function_, ptr %43, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i78, align 4
  %memberidx2.i.i79 = getelementptr inbounds %ArrayIterator_Function_, ptr %43, i64 0, i32 3
  store ptr %44, ptr %memberidx2.i.i79, align 8
  %memberidx3.i.i80 = getelementptr inbounds %ArrayIterator_Function_, ptr %43, i64 0, i32 2
  store i64 %45, ptr %memberidx3.i.i80, align 4
  %memberidx43 = getelementptr inbounds %VarId, ptr %1, i64 0, i32 2
  br label %for.next36

for.next36:                                       ; preds = %for.body37, %for.entry35
  %46 = phi i64 [ %47, %for.body37 ], [ 0, %for.entry35 ]
  %.not112 = icmp slt i64 %46, %45
  br i1 %.not112, label %for.body37, label %for.end38

for.body37:                                       ; preds = %for.next36
  %47 = add nuw nsw i64 %46, 1
  %48 = getelementptr inbounds ptr, ptr %44, i64 %46
  %49 = load ptr, ptr %48, align 8
  %50 = load ptr, ptr %49, align 8
  %memberidx42 = getelementptr inbounds %VarId, ptr %50, i64 0, i32 2
  %51 = load i64, ptr %memberidx42, align 4
  %52 = load i64, ptr %memberidx43, align 4
  %53 = icmp eq i64 %51, %52
  br i1 %53, label %if.entry44, label %for.next36

for.end38:                                        ; preds = %for.next36
  tail call void @free(ptr nonnull %43)
  br label %common.ret

if.entry44:                                       ; preds = %for.body37
  store i64 %47, ptr %memberidx1.i.i78, align 4
  store i1 false, ptr %43, align 1
  tail call fastcc void @CodeGen_codegen_function(ptr %0, ptr nonnull %49)
  %54 = tail call fastcc ptr @CodeGen_get_var_from_varid(ptr %0, ptr nonnull %1)
  br label %common.ret
}

define internal fastcc void @CodeGen_declare_enum(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call ptr @malloc(i32 2048)
  store ptr %8, ptr %7, align 8
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i.i.i64 = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 256, ptr %memberidx1.i.i.i64, align 4
  %10 = tail call ptr @malloc(i32 17)
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %11 = phi i64 [ 1, %2 ], [ %16, %for.body.i.i ]
  %12 = phi i64 [ 0, %2 ], [ %11, %for.body.i.i ]
  %13 = load ptr, ptr %7, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  store ptr null, ptr %14, align 8
  %15 = icmp ugt i64 %11, 255
  %16 = add nuw nsw i64 %11, 1
  br i1 %15, label %CGEnumType_constructor.exit, label %for.body.i.i

CGEnumType_constructor.exit:                      ; preds = %for.body.i.i
  %memberidx.i63 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 1
  tail call void @free(ptr nonnull %10)
  %memberidx3.i.i66 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %7, i64 0, i32 1
  store i64 256, ptr %memberidx3.i.i66, align 4
  %memberidx4.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %7, i64 0, i32 2
  store i64 0, ptr %memberidx4.i.i, align 4
  store ptr %7, ptr %memberidx.i63, align 8
  %memberidx = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  %17 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_EnumField_, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx1, align 4
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %if.entry, label %else

if.entry:                                         ; preds = %CGEnumType_constructor.exit
  %20 = load ptr, ptr %17, align 8
  %21 = load ptr, ptr %20, align 8
  %memberidx4 = getelementptr inbounds %EnumField, ptr %21, i64 0, i32 2
  %22 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 3
  %23 = load ptr, ptr %memberidx5, align 8
  %24 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %23, i1 true)
  br label %ifend

else:                                             ; preds = %CGEnumType_constructor.exit
  %25 = tail call ptr @LLVMIntType(i64 64)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %storemerge = phi ptr [ %25, %else ], [ %24, %if.entry ]
  store ptr %storemerge, ptr %6, align 8
  %26 = load ptr, ptr %memberidx, align 8
  %memberidx8 = getelementptr inbounds %Array_EnumField_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx8, align 4
  %28 = alloca ptr, i64 %27, align 8
  %29 = tail call ptr @malloc(i32 25)
  %30 = load ptr, ptr %26, align 8
  %31 = load i64, ptr %memberidx8, align 4
  store i1 false, ptr %29, align 1
  %memberidx1.i.i61 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %29, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i61, align 4
  %memberidx2.i.i62 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %29, i64 0, i32 3
  store ptr %30, ptr %memberidx2.i.i62, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_EnumField_, ptr %29, i64 0, i32 2
  store i64 %31, ptr %memberidx3.i.i, align 4
  %32 = icmp slt i64 %31, 1
  br i1 %32, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx14 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.in = phi ptr [ %30, %for.body.lr.ph ], [ %86, %for.body ]
  %33 = phi i64 [ 1, %for.body.lr.ph ], [ %85, %for.body ]
  %idx.068 = phi i64 [ 0, %for.body.lr.ph ], [ %83, %for.body ]
  %34 = load ptr, ptr %.in, align 8
  %35 = load ptr, ptr %34, align 8
  %36 = load ptr, ptr %memberidx.i63, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i52 = getelementptr inbounds %PropId, ptr %35, i64 0, i32 1
  %37 = load ptr, ptr %memberidx.i52, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %38 = load i64, ptr %37, align 4
  %memberidx1.i.i53 = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 1
  %39 = load i64, ptr %memberidx1.i.i53, align 4
  %memberidx2.i.i54 = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 2
  %40 = load i64, ptr %memberidx2.i.i54, align 4
  %41 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %38, i64 %39, i64 %40)
  %42 = load ptr, ptr %3, align 8
  %43 = call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i.i.i55 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 %41, ptr %memberidx1.i.i.i55, align 4
  %memberidx2.i.i.i56 = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 %41, ptr %memberidx2.i.i.i56, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %44 = trunc i64 %41 to i32
  %45 = add i32 %44, 1
  %46 = call ptr @malloc(i32 %45)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %46, ptr align 8 %42, i64 %41, i1 false)
  %47 = getelementptr inbounds i8, ptr %46, i64 %41
  store i8 0, ptr %47, align 1
  %48 = load i64, ptr %35, align 4
  %memberidx2.i57 = getelementptr inbounds %PropId, ptr %35, i64 0, i32 2
  %49 = load i64, ptr %memberidx2.i57, align 4
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @259, ptr %46, i64 %48, i64 %49)
  %51 = load ptr, ptr %4, align 8
  %52 = call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 %50, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %46)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %memberidx13 = getelementptr inbounds %EnumField, ptr %34, i64 0, i32 2
  %53 = load ptr, ptr %memberidx13, align 8
  %54 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr null, ptr %53)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %36, ptr nonnull %52, ptr %54)
  %55 = load ptr, ptr %memberidx14, align 8
  %memberidx.i51 = getelementptr inbounds %String, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx.i51, align 4
  %57 = trunc i64 %56 to i32
  %58 = add i32 %57, 1
  %59 = call ptr @malloc(i32 %58)
  %60 = load ptr, ptr %55, align 8
  %61 = load i64, ptr %memberidx.i51, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %59, ptr align 8 %60, i64 %61, i1 false)
  %62 = getelementptr inbounds i8, ptr %59, i64 %61
  store i8 0, ptr %62, align 1
  %memberidx15 = getelementptr inbounds %EnumField, ptr %34, i64 0, i32 1
  %63 = load ptr, ptr %memberidx15, align 8
  %memberidx.i50 = getelementptr inbounds %String, ptr %63, i64 0, i32 1
  %64 = load i64, ptr %memberidx.i50, align 4
  %65 = trunc i64 %64 to i32
  %66 = add i32 %65, 1
  %67 = call ptr @malloc(i32 %66)
  %68 = load ptr, ptr %63, align 8
  %69 = load i64, ptr %memberidx.i50, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %67, ptr align 8 %68, i64 %69, i1 false)
  %70 = getelementptr inbounds i8, ptr %67, i64 %69
  store i8 0, ptr %70, align 1
  %71 = alloca ptr, align 8
  %72 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %71, ptr nonnull @292, ptr %59, ptr %67)
  %73 = load ptr, ptr %71, align 8
  %74 = tail call ptr @malloc(i32 24)
  store ptr %73, ptr %74, align 8
  %memberidx1.i48 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  store i64 %72, ptr %memberidx1.i48, align 4
  %memberidx2.i49 = getelementptr inbounds %String, ptr %74, i64 0, i32 2
  store i64 %72, ptr %memberidx2.i49, align 4
  tail call void @free(ptr %59)
  tail call void @free(ptr %67)
  %75 = trunc i64 %72 to i32
  %76 = add i32 %75, 1
  %77 = call ptr @malloc(i32 %76)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %77, ptr align 8 %73, i64 %72, i1 false)
  %78 = getelementptr inbounds i8, ptr %77, i64 %72
  store i8 0, ptr %78, align 1
  %79 = call ptr @LLVMConstString(ptr %77, i64 %72, i1 false)
  %80 = load ptr, ptr %0, align 8
  %81 = call ptr @LLVMTypeOf(ptr %79)
  %82 = call ptr @LLVMAddGlobal(ptr %80, ptr %81, ptr nonnull @78)
  call void @LLVMSetInitializer(ptr %82, ptr %79)
  %83 = add nuw nsw i64 %idx.068, 1
  %84 = getelementptr inbounds ptr, ptr %28, i64 %idx.068
  store ptr %82, ptr %84, align 8
  %85 = add nuw nsw i64 %33, 1
  %86 = getelementptr inbounds ptr, ptr %30, i64 %33
  %.not = icmp slt i64 %33, %31
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  %idx.0.lcssa = phi i64 [ 0, %ifend ], [ %83, %for.body ]
  tail call void @free(ptr nonnull %29)
  %87 = call ptr @LLVMInt8Type()
  %88 = call ptr @LLVMPointerType(ptr %87, i64 0)
  %89 = call ptr @LLVMConstArray(ptr %88, ptr nonnull %28, i64 %idx.0.lcssa)
  %90 = load ptr, ptr %0, align 8
  %91 = call ptr @LLVMTypeOf(ptr %89)
  %memberidx19 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 1
  %92 = load ptr, ptr %memberidx19, align 8
  %memberidx.i46 = getelementptr inbounds %String, ptr %92, i64 0, i32 1
  %93 = load i64, ptr %memberidx.i46, align 4
  %94 = trunc i64 %93 to i32
  %95 = add i32 %94, 1
  %96 = call ptr @malloc(i32 %95)
  %97 = load ptr, ptr %92, align 8
  %98 = load i64, ptr %memberidx.i46, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %96, ptr align 8 %97, i64 %98, i1 false)
  %99 = getelementptr inbounds i8, ptr %96, i64 %98
  store i8 0, ptr %99, align 1
  %100 = alloca ptr, align 8
  %101 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %100, ptr nonnull @293, ptr %96)
  %102 = load ptr, ptr %100, align 8
  %103 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %96)
  %104 = trunc i64 %101 to i32
  %105 = add i32 %104, 1
  %106 = call ptr @malloc(i32 %105)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %106, ptr align 8 %102, i64 %101, i1 false)
  %107 = getelementptr inbounds i8, ptr %106, i64 %101
  store i8 0, ptr %107, align 1
  %108 = call ptr @LLVMAddGlobal(ptr %90, ptr %91, ptr %106)
  call void @LLVMSetInitializer(ptr %108, ptr %89)
  %memberidx20 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 2
  store ptr %108, ptr %memberidx20, align 8
  %109 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %110 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %111 = load i64, ptr %109, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %109, i64 0, i32 1
  %112 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %109, i64 0, i32 2
  %113 = load i64, ptr %memberidx2.i.i, align 4
  %114 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %111, i64 %112, i64 %113)
  %115 = load ptr, ptr %5, align 8
  %116 = call ptr @malloc(i32 24)
  store ptr %115, ptr %116, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %116, i64 0, i32 1
  store i64 %114, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %116, i64 0, i32 2
  store i64 %114, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call fastcc void @Map_String_CGEnumType____setitem__(ptr %110, ptr nonnull %116, ptr nonnull %6)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr nocapture readonly %0, ptr %1, ptr %2, ptr nocapture readonly %3, i64 %4, ptr writeonly %5) unnamed_addr {
  %arg_types = alloca [2 x ptr], align 8
  %7 = tail call ptr @LLVMInt8Type()
  %8 = tail call ptr @LLVMPointerType(ptr %7, i64 0)
  %9 = tail call ptr @LLVMIntType(i64 64)
  %10 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %8, ptr nonnull @78)
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %memberidx.i, align 8
  %12 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr %2)
  %memberidx.i22 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %11, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i22, align 4
  %14 = urem i64 %12, %13
  %15 = load ptr, ptr %11, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %.not.i2332 = icmp eq ptr %17, null
  br i1 %.not.i2332, label %if.entry.i, label %while.body.i.lr.ph

while.body.i.lr.ph:                               ; preds = %6
  %memberidx1.i.i25 = getelementptr inbounds %String, ptr %2, i64 0, i32 1
  br label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre36.pre = load ptr, ptr %11, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre36.pre, i64 %hash.0.i33
  %.pre37.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre37.pre, null
  br i1 %.not22.i, label %if.entry.i, label %Map_String_LLVMValueRef____getitem__.exit

while.body.i:                                     ; preds = %while.body.i.lr.ph, %else.i26
  %18 = phi ptr [ %15, %while.body.i.lr.ph ], [ %28, %else.i26 ]
  %19 = phi i64 [ %13, %while.body.i.lr.ph ], [ %29, %else.i26 ]
  %20 = phi ptr [ %17, %while.body.i.lr.ph ], [ %33, %else.i26 ]
  %hash.0.i33 = phi i64 [ %14, %while.body.i.lr.ph ], [ %31, %else.i26 ]
  %21 = load ptr, ptr %20, align 8
  %memberidx.i.i24 = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i.i24, align 4
  %23 = load i64, ptr %memberidx1.i.i25, align 4
  %.not.i.i = icmp eq i64 %22, %23
  br i1 %.not.i.i, label %ifend.i.i, label %else.i26

ifend.i.i:                                        ; preds = %while.body.i
  %24 = load ptr, ptr %21, align 8
  %25 = load ptr, ptr %2, align 8
  %26 = tail call i64 @memcmp(ptr %24, ptr %25, i64 %22)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %while.end.i, label %ifend.i.i.else.i26_crit_edge

ifend.i.i.else.i26_crit_edge:                     ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i22, align 4
  %.pre35 = load ptr, ptr %11, align 8
  br label %else.i26

else.i26:                                         ; preds = %ifend.i.i.else.i26_crit_edge, %while.body.i
  %28 = phi ptr [ %.pre35, %ifend.i.i.else.i26_crit_edge ], [ %18, %while.body.i ]
  %29 = phi i64 [ %.pre, %ifend.i.i.else.i26_crit_edge ], [ %19, %while.body.i ]
  %30 = add nuw i64 %hash.0.i33, 1
  %31 = urem i64 %30, %29
  %32 = getelementptr inbounds ptr, ptr %28, i64 %31
  %33 = load ptr, ptr %32, align 8
  %.not.i23 = icmp eq ptr %33, null
  br i1 %.not.i23, label %if.entry.i, label %while.body.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre37.pre, i64 0, i32 1
  %34 = load ptr, ptr %memberidx10.i, align 8
  %35 = icmp eq ptr %34, null
  br i1 %35, label %if.entry.i, label %CodeGen_createGlobalLLVMString.exit

if.entry.i:                                       ; preds = %else.i26, %6, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %memberidx.i.i = getelementptr inbounds %String, ptr %2, i64 0, i32 1
  %36 = load i64, ptr %memberidx.i.i, align 4
  %37 = trunc i64 %36 to i32
  %38 = add i32 %37, 1
  %39 = tail call ptr @malloc(i32 %38)
  %40 = load ptr, ptr %2, align 8
  %41 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %40, i64 %41, i1 false)
  %42 = getelementptr inbounds i8, ptr %39, i64 %41
  store i8 0, ptr %42, align 1
  %43 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %39, ptr nonnull @78)
  %44 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %44, ptr nonnull %2, ptr %43)
  br label %CodeGen_createGlobalLLVMString.exit

CodeGen_createGlobalLLVMString.exit:              ; preds = %Map_String_LLVMValueRef____getitem__.exit, %if.entry.i
  %str.0.i = phi ptr [ %43, %if.entry.i ], [ %34, %Map_String_LLVMValueRef____getitem__.exit ]
  %45 = add nuw i64 %4, 2
  %46 = alloca ptr, i64 %45, align 8
  store ptr %10, ptr %46, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 1
  store ptr %str.0.i, ptr %47, align 8
  %48 = getelementptr inbounds ptr, ptr %46, i64 2
  %49 = shl i64 %4, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 536870912 %48, ptr align 8 %3, i64 %49, i1 false)
  store ptr %8, ptr %arg_types, align 8
  %50 = getelementptr inbounds ptr, ptr %arg_types, i64 1
  store ptr %8, ptr %50, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = tail call ptr @malloc(i32 8)
  store i64 7382647088337679201, ptr %52, align 8
  %53 = tail call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %53, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i, align 4
  %54 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i18 = getelementptr inbounds %IntrinsicResult, ptr %54, i64 0, i32 1
  store i64 0, ptr %54, align 8
  %55 = call ptr @LLVMFunctionType(ptr %9, ptr nonnull %arg_types, i64 2, i1 true)
  store ptr %55, ptr %memberidx1.i.i18, align 8
  %56 = call ptr @malloc(i32 9)
  %57 = load i64, ptr %52, align 8
  store i64 %57, ptr %56, align 8
  %58 = getelementptr inbounds i8, ptr %56, i64 8
  store i8 0, ptr %58, align 1
  %59 = call ptr @LLVMGetNamedFunction(ptr %51, ptr nonnull %56)
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %else.i, label %get_intrinsic.exit

else.i:                                           ; preds = %CodeGen_createGlobalLLVMString.exit
  %60 = call ptr @LLVMAddFunction(ptr %51, ptr nonnull %56, ptr %55)
  br label %get_intrinsic.exit

get_intrinsic.exit:                               ; preds = %CodeGen_createGlobalLLVMString.exit, %else.i
  %storemerge.i = phi ptr [ %60, %else.i ], [ %59, %CodeGen_createGlobalLLVMString.exit ]
  store ptr %storemerge.i, ptr %54, align 8
  %61 = call ptr @LLVMBuildCall2(ptr %1, ptr %55, ptr %storemerge.i, ptr nonnull %46, i64 %45, ptr nonnull @78)
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %get_intrinsic.exit
  store ptr %61, ptr %5, align 8
  br label %ifend

ifend:                                            ; preds = %get_intrinsic.exit, %if.entry
  %62 = call ptr @LLVMBuildLoad2(ptr %1, ptr %8, ptr %10, ptr nonnull @78)
  ret ptr %62
}

define internal fastcc ptr @CodeGen_codegen_string(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %str_len = alloca ptr, align 8
  %args = alloca [2 x ptr], align 8
  %args1 = alloca [3 x ptr], align 8
  %memberidx = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx2 = getelementptr inbounds %String, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx2, align 4
  %memberidx3 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 5
  %5 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_uint_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx4, align 4
  %7 = shl nuw i64 %6, 1
  %8 = add nuw i64 %7, %4
  %9 = trunc i64 %8 to i32
  %10 = tail call ptr @malloc(i32 %9)
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  %memberidx1.i.i101 = getelementptr inbounds %String, ptr %11, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i101, align 4
  %memberidx.i103 = getelementptr inbounds %String, ptr %11, i64 0, i32 2
  store i64 %8, ptr %memberidx.i103, align 4
  %12 = load ptr, ptr %3, align 8
  %13 = tail call ptr @malloc(i32 24)
  %memberidx.i99 = getelementptr inbounds %Array_LLVMValueRef_, ptr %13, i64 0, i32 1
  %memberidx1.i100 = getelementptr inbounds %Array_LLVMValueRef_, ptr %13, i64 0, i32 2
  store i64 8, ptr %memberidx1.i100, align 4
  %14 = tail call ptr @malloc(i32 64)
  store ptr %14, ptr %13, align 8
  store i64 0, ptr %memberidx.i99, align 4
  %memberidx7 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 6
  %15 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_Expression_, ptr %15, i64 0, i32 1
  %16 = load i64, ptr %memberidx8, align 4
  %17 = alloca ptr, i64 %16, align 8
  %18 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %18, align 4
  %memberidx1.i98 = getelementptr inbounds %Range, ptr %18, i64 0, i32 1
  store i64 %16, ptr %memberidx1.i98, align 4
  %19 = tail call ptr @malloc(i32 17)
  %20 = icmp slt i64 %16, 1
  br i1 %20, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %String___adda__.exit
  %21 = phi i64 [ %56, %String___adda__.exit ], [ 0, %for.entry ]
  %22 = phi i64 [ %61, %String___adda__.exit ], [ 1, %for.entry ]
  %chars.0155 = phi ptr [ %57, %String___adda__.exit ], [ %12, %for.entry ]
  %curr_ind.0154 = phi i64 [ %33, %String___adda__.exit ], [ 0, %for.entry ]
  %23 = phi i64 [ %22, %String___adda__.exit ], [ 0, %for.entry ]
  %24 = load ptr, ptr %memberidx7, align 8
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %23
  %27 = load ptr, ptr %26, align 8
  %memberidx11 = getelementptr inbounds %Expression, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx11, align 8
  %29 = tail call fastcc ptr @get_format_from_type(ptr %28)
  %30 = load ptr, ptr %memberidx3, align 8
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds i64, ptr %31, i64 %23
  %33 = load i64, ptr %32, align 4
  %34 = sub nuw i64 %33, %curr_ind.0154
  %35 = add nuw i64 %21, %34
  %36 = load i64, ptr %memberidx.i103, align 4
  %37 = icmp slt i64 %36, %35
  %38 = load ptr, ptr %11, align 8
  br i1 %37, label %if.entry.i.i91, label %String_append_bytes_length.exit92

if.entry.i.i91:                                   ; preds = %for.body
  %39 = tail call ptr @realloc(ptr %38, i64 %35)
  store ptr %39, ptr %11, align 8
  store i64 %35, ptr %memberidx.i103, align 4
  %.pre166 = load i64, ptr %memberidx1.i.i101, align 4
  br label %String_append_bytes_length.exit92

String_append_bytes_length.exit92:                ; preds = %for.body, %if.entry.i.i91
  %40 = phi i64 [ %.pre166, %if.entry.i.i91 ], [ %21, %for.body ]
  %41 = phi ptr [ %39, %if.entry.i.i91 ], [ %38, %for.body ]
  %42 = getelementptr inbounds i8, ptr %41, i64 %40
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %42, ptr align 8 %chars.0155, i64 %34, i1 false)
  %43 = load i64, ptr %memberidx1.i.i101, align 4
  %44 = add nuw i64 %43, %34
  store i64 %44, ptr %memberidx1.i.i101, align 4
  %45 = load ptr, ptr %29, align 8
  %memberidx.i86 = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %46 = load i64, ptr %memberidx.i86, align 4
  %47 = add nuw i64 %46, %44
  %48 = load i64, ptr %memberidx.i103, align 4
  %49 = icmp slt i64 %48, %47
  %50 = load ptr, ptr %11, align 8
  br i1 %49, label %if.entry.i.i.i, label %String___adda__.exit

if.entry.i.i.i:                                   ; preds = %String_append_bytes_length.exit92
  %51 = tail call ptr @realloc(ptr %50, i64 %47)
  store ptr %51, ptr %11, align 8
  store i64 %47, ptr %memberidx.i103, align 4
  %.pre168 = load i64, ptr %memberidx1.i.i101, align 4
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %String_append_bytes_length.exit92, %if.entry.i.i.i
  %52 = phi i64 [ %.pre168, %if.entry.i.i.i ], [ %44, %String_append_bytes_length.exit92 ]
  %53 = phi ptr [ %51, %if.entry.i.i.i ], [ %50, %String_append_bytes_length.exit92 ]
  %54 = getelementptr inbounds i8, ptr %53, i64 %52
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %54, ptr align 8 %45, i64 %46, i1 false)
  %55 = load i64, ptr %memberidx1.i.i101, align 4
  %56 = add nuw i64 %55, %46
  store i64 %56, ptr %memberidx1.i.i101, align 4
  %57 = getelementptr inbounds i8, ptr %chars.0155, i64 %34
  %58 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %27)
  %59 = getelementptr inbounds ptr, ptr %17, i64 %23
  %60 = tail call fastcc ptr @CodeGen_get_string_val(ptr %0, ptr %1, ptr %58, ptr %28, ptr nonnull %13, i64 0)
  store ptr %60, ptr %59, align 8
  %.not = icmp slt i64 %22, %16
  %61 = add nuw nsw i64 %22, 1
  br i1 %.not, label %for.body, label %for.end.loopexit

for.end.loopexit:                                 ; preds = %String___adda__.exit
  %.pre169 = load i64, ptr %memberidx.i103, align 4
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.entry
  %62 = phi i64 [ %8, %for.entry ], [ %.pre169, %for.end.loopexit ]
  %63 = phi i64 [ 0, %for.entry ], [ %56, %for.end.loopexit ]
  %curr_ind.0.lcssa = phi i64 [ 0, %for.entry ], [ %33, %for.end.loopexit ]
  %chars.0.lcssa = phi ptr [ %12, %for.entry ], [ %57, %for.end.loopexit ]
  tail call void @free(ptr nonnull %19)
  %64 = load i64, ptr %memberidx2, align 4
  %65 = sub nuw i64 %64, %curr_ind.0.lcssa
  %66 = add nuw i64 %63, %65
  %67 = icmp slt i64 %62, %66
  %68 = load ptr, ptr %11, align 8
  br i1 %67, label %if.entry.i.i, label %String_append_bytes_length.exit

if.entry.i.i:                                     ; preds = %for.end
  %69 = tail call ptr @realloc(ptr %68, i64 %66)
  store ptr %69, ptr %11, align 8
  store i64 %66, ptr %memberidx.i103, align 4
  %.pre171 = load i64, ptr %memberidx1.i.i101, align 4
  br label %String_append_bytes_length.exit

String_append_bytes_length.exit:                  ; preds = %for.end, %if.entry.i.i
  %70 = phi i64 [ %.pre171, %if.entry.i.i ], [ %63, %for.end ]
  %71 = phi ptr [ %69, %if.entry.i.i ], [ %68, %for.end ]
  %72 = getelementptr inbounds i8, ptr %71, i64 %70
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %72, ptr align 8 %chars.0.lcssa, i64 %65, i1 false)
  %73 = load i64, ptr %memberidx1.i.i101, align 4
  %74 = add nuw i64 %73, %65
  store i64 %74, ptr %memberidx1.i.i101, align 4
  %75 = tail call ptr @LLVMIntType(i64 64)
  %76 = tail call ptr @LLVMConstInt(ptr %75, i64 %74, i1 false)
  store ptr %76, ptr %str_len, align 8
  %77 = icmp sgt i64 %16, 0
  br i1 %77, label %true_block, label %false_block

true_block:                                       ; preds = %String_append_bytes_length.exit
  %78 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr nonnull %11, ptr nonnull %17, i64 %16, ptr nonnull %str_len)
  br label %end

false_block:                                      ; preds = %String_append_bytes_length.exit
  %memberidx.i83 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %79 = load ptr, ptr %memberidx.i83, align 8
  %80 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %11)
  %memberidx.i109 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %79, i64 0, i32 1
  %81 = load i64, ptr %memberidx.i109, align 4
  %82 = urem i64 %80, %81
  %83 = load ptr, ptr %79, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  %.not.i110148 = icmp eq ptr %85, null
  br i1 %.not.i110148, label %if.entry.i, label %while.body.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre174.pre = load ptr, ptr %79, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre174.pre, i64 %hash.0.i149
  %.pre175.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i = icmp eq ptr %.pre175.pre, null
  br i1 %.not22.i, label %if.entry.i, label %Map_String_LLVMValueRef____getitem__.exit

while.body.i:                                     ; preds = %false_block, %else.i113
  %86 = phi ptr [ %95, %else.i113 ], [ %83, %false_block ]
  %87 = phi i64 [ %96, %else.i113 ], [ %81, %false_block ]
  %88 = phi ptr [ %100, %else.i113 ], [ %85, %false_block ]
  %hash.0.i149 = phi i64 [ %98, %else.i113 ], [ %82, %false_block ]
  %89 = load ptr, ptr %88, align 8
  %memberidx.i.i111 = getelementptr inbounds %String, ptr %89, i64 0, i32 1
  %90 = load i64, ptr %memberidx.i.i111, align 4
  %.not.i.i = icmp eq i64 %90, %74
  br i1 %.not.i.i, label %ifend.i.i, label %else.i113

ifend.i.i:                                        ; preds = %while.body.i
  %91 = load ptr, ptr %89, align 8
  %92 = load ptr, ptr %11, align 8
  %93 = tail call i64 @memcmp(ptr %91, ptr %92, i64 %74)
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %while.end.i, label %ifend.i.i.else.i113_crit_edge

ifend.i.i.else.i113_crit_edge:                    ; preds = %ifend.i.i
  %.pre172 = load i64, ptr %memberidx.i109, align 4
  %.pre173 = load ptr, ptr %79, align 8
  br label %else.i113

else.i113:                                        ; preds = %ifend.i.i.else.i113_crit_edge, %while.body.i
  %95 = phi ptr [ %.pre173, %ifend.i.i.else.i113_crit_edge ], [ %86, %while.body.i ]
  %96 = phi i64 [ %.pre172, %ifend.i.i.else.i113_crit_edge ], [ %87, %while.body.i ]
  %97 = add nuw i64 %hash.0.i149, 1
  %98 = urem i64 %97, %96
  %99 = getelementptr inbounds ptr, ptr %95, i64 %98
  %100 = load ptr, ptr %99, align 8
  %.not.i110 = icmp eq ptr %100, null
  br i1 %.not.i110, label %if.entry.i, label %while.body.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx10.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre175.pre, i64 0, i32 1
  %101 = load ptr, ptr %memberidx10.i, align 8
  %102 = icmp eq ptr %101, null
  br i1 %102, label %if.entry.i, label %end

if.entry.i:                                       ; preds = %else.i113, %false_block, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %103 = trunc i64 %74 to i32
  %104 = add i32 %103, 1
  %105 = tail call ptr @malloc(i32 %104)
  %106 = load ptr, ptr %11, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %105, ptr align 8 %106, i64 %74, i1 false)
  %107 = getelementptr inbounds i8, ptr %105, i64 %74
  store i8 0, ptr %107, align 1
  %108 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %105, ptr nonnull @78)
  %109 = load ptr, ptr %memberidx.i83, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %109, ptr nonnull %11, ptr %108)
  br label %end

end:                                              ; preds = %if.entry.i, %Map_String_LLVMValueRef____getitem__.exit, %true_block
  %ternary = phi ptr [ %78, %true_block ], [ %108, %if.entry.i ], [ %101, %Map_String_LLVMValueRef____getitem__.exit ]
  %memberidx15 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %110 = load ptr, ptr %memberidx15, align 8
  %111 = load i64, ptr %110, align 4
  %112 = icmp eq i64 %111, 20
  br i1 %112, label %if.entry.i140, label %is_object.exit

if.entry.i140:                                    ; preds = %end, %if.entry.i140
  %.tr5.i = phi ptr [ %113, %if.entry.i140 ], [ %110, %end ]
  %memberidx1.i139 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %113 = load ptr, ptr %memberidx1.i139, align 8
  %114 = load i64, ptr %113, align 4
  %115 = icmp eq i64 %114, 20
  br i1 %115, label %if.entry.i140, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i140, %end
  %.lcssa.i = phi i64 [ %111, %end ], [ %114, %if.entry.i140 ]
  %116 = icmp eq i64 %.lcssa.i, 11
  br i1 %116, label %if.entry, label %for.entry25

if.entry:                                         ; preds = %is_object.exit
  %117 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %110, i1 false)
  %118 = call i1 @LLVMIsConstant(ptr %ternary)
  %119 = call i1 @LLVMIsGlobalConstant(ptr %ternary)
  %120 = and i1 %118, %119
  br i1 %120, label %if.entry17, label %else18

if.entry17:                                       ; preds = %if.entry
  %121 = load ptr, ptr %0, align 8
  %122 = call ptr @LLVMGetNamedFunction(ptr %121, ptr nonnull @254)
  %123 = icmp eq ptr %122, null
  br i1 %123, label %if.entry21, label %ifend23

else18:                                           ; preds = %if.entry
  %124 = call ptr @LLVMBuildMalloc(ptr %1, ptr %117, ptr nonnull @78)
  store ptr %124, ptr %args1, align 8
  %125 = getelementptr inbounds ptr, ptr %args1, i64 1
  store ptr %ternary, ptr %125, align 8
  %126 = getelementptr inbounds ptr, ptr %args1, i64 2
  %127 = load ptr, ptr %str_len, align 8
  store ptr %127, ptr %126, align 8
  %128 = load ptr, ptr %memberidx15, align 8
  %memberidx.i104 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %129 = load i64, ptr %128, align 4
  %cond146 = icmp eq i64 %129, 20
  br i1 %cond146, label %if.entry.i136, label %get_class_from_type.exit

if.entry.i136:                                    ; preds = %else18, %if.entry.i136
  %.tr11.i147 = phi ptr [ %130, %if.entry.i136 ], [ %128, %else18 ]
  %memberidx1.i135 = getelementptr inbounds %GenericType, ptr %.tr11.i147, i64 0, i32 3
  %130 = load ptr, ptr %memberidx1.i135, align 8
  %131 = load i64, ptr %130, align 4
  %cond = icmp eq i64 %131, 20
  br i1 %cond, label %if.entry.i136, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i136, %else18
  %memberidx1.i105 = getelementptr inbounds %ObjectType, ptr %128, i64 0, i32 1
  %132 = load ptr, ptr %memberidx1.i105, align 8
  %133 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %132)
  %.not.i114 = icmp eq ptr %133, null
  br i1 %.not.i114, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %134 = load ptr, ptr %memberidx.i104, align 8
  %135 = load ptr, ptr %134, align 8
  %136 = load i64, ptr %132, align 4
  %137 = load ptr, ptr %135, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %136
  %139 = load ptr, ptr %138, align 8
  %memberidx2.i.i118 = getelementptr inbounds %Module, ptr %139, i64 0, i32 3
  %140 = load ptr, ptr %memberidx2.i.i118, align 8
  %memberidx3.i.i119 = getelementptr inbounds %TypeId, ptr %132, i64 0, i32 2
  %141 = load i64, ptr %memberidx3.i.i119, align 4
  %142 = load ptr, ptr %140, align 8
  %143 = getelementptr inbounds ptr, ptr %142, i64 %141
  %144 = load ptr, ptr %143, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %144)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %144)
  %145 = load ptr, ptr %144, align 8
  %146 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %145)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i115 = phi ptr [ %146, %ifend.i ], [ %133, %get_class_from_type.exit ]
  %memberidx2.i106 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i115, i64 0, i32 4
  %147 = load ptr, ptr %memberidx2.i106, align 8
  %.not.i = icmp eq ptr %147, null
  br i1 %.not.i, label %else.i, label %if.entry.i107

if.entry.i107:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %148 = call ptr @LLVM_GetFunctionType(ptr nonnull %147)
  %149 = call ptr @LLVMBuildCall2(ptr %1, ptr %148, ptr nonnull %147, ptr nonnull %args1, i64 3, ptr nonnull @78)
  br label %for.entry25

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %150 = call ptr @malloc(i32 47)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %150, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %151 = call ptr @malloc(i32 24)
  %152 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %152, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %153 = call ptr @malloc(i32 24)
  %154 = call i64 @write(i64 1, ptr %152, i64 7)
  call void @free(ptr %152)
  call void @free(ptr %153)
  %155 = call i64 @write(i64 1, ptr %150, i64 47)
  %156 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %150)
  call void @free(ptr %151)
  call void @exit(i64 -1)
  br label %for.entry25

if.entry21:                                       ; preds = %if.entry17
  %157 = call ptr @malloc(i32 54)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %157, ptr noundef nonnull align 8 dereferenceable(54) @255, i64 54, i1 false)
  %158 = call ptr @malloc(i32 24)
  %159 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %159, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %160 = call ptr @malloc(i32 24)
  %161 = call i64 @write(i64 1, ptr %159, i64 7)
  call void @free(ptr %159)
  call void @free(ptr %160)
  %162 = call i64 @write(i64 1, ptr %157, i64 54)
  %163 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %157)
  call void @free(ptr %158)
  call void @exit(i64 -1)
  br label %ifend23

ifend23:                                          ; preds = %if.entry17, %if.entry21
  store ptr %ternary, ptr %args, align 8
  %164 = getelementptr inbounds ptr, ptr %args, i64 1
  %165 = load ptr, ptr %str_len, align 8
  store ptr %165, ptr %164, align 8
  %166 = call ptr @LLVM_GetFunctionType(ptr %122)
  %167 = call ptr @LLVMBuildCall2(ptr %1, ptr %166, ptr %122, ptr nonnull %args, i64 2, ptr nonnull @78)
  br label %for.entry25

for.entry25:                                      ; preds = %else.i, %if.entry.i107, %ifend23, %is_object.exit
  %str.0 = phi ptr [ %167, %ifend23 ], [ %ternary, %is_object.exit ], [ %124, %if.entry.i107 ], [ %124, %else.i ]
  %168 = call ptr @malloc(i32 25)
  %169 = load ptr, ptr %13, align 8
  %170 = load i64, ptr %memberidx.i99, align 4
  store i1 false, ptr %168, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %168, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %168, i64 0, i32 3
  store ptr %169, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %168, i64 0, i32 2
  store i64 %170, ptr %memberidx3.i.i, align 4
  %171 = icmp slt i64 %170, 1
  br i1 %171, label %for.end28, label %for.body27

for.body27:                                       ; preds = %for.entry25, %for.body27
  %.in = phi ptr [ %176, %for.body27 ], [ %169, %for.entry25 ]
  %172 = phi i64 [ %175, %for.body27 ], [ 1, %for.entry25 ]
  %173 = load ptr, ptr %.in, align 8
  %174 = call ptr @LLVMBuildFree(ptr %1, ptr %173)
  %175 = add nuw nsw i64 %172, 1
  %176 = getelementptr inbounds ptr, ptr %169, i64 %172
  %.not178 = icmp slt i64 %172, %170
  br i1 %.not178, label %for.body27, label %for.end28

for.end28:                                        ; preds = %for.body27, %for.entry25
  tail call void @free(ptr nonnull %168)
  call void @free(ptr %169)
  tail call void @free(ptr %13)
  ret ptr %str.0
}

define internal fastcc ptr @CodeGen_codegen_expression(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %args.i289 = alloca [1 x ptr], align 8
  %func_ty.i = alloca ptr, align 8
  %args.i = alloca [3 x ptr], align 8
  %4 = alloca ptr, align 8
  %args.i.i = alloca [2 x ptr], align 8
  %arg_types.i.i = alloca [2 x ptr], align 8
  %5 = alloca ptr, align 8
  %indices.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 2
  %6 = load i64, ptr %memberidx, align 4
  switch i64 %6, label %common.ret296 [
    i64 4, label %if.entry
    i64 0, label %if.entry2
    i64 1, label %if.entry6
    i64 5, label %if.entry10
    i64 2, label %if.entry14
    i64 8, label %if.entry18
    i64 9, label %if.entry22
    i64 10, label %if.entry26
    i64 15, label %if.entry30
    i64 14, label %CodeGen_get_expr_mem.exit232
    i64 13, label %if.entry38
    i64 12, label %if.entry42
    i64 16, label %if.entry46
    i64 11, label %if.entry50
    i64 6, label %if.entry54
    i64 7, label %if.entry58
    i64 18, label %if.entry62
    i64 19, label %if.entry66
    i64 17, label %if.entry70
  ]

common.ret296:                                    ; preds = %if.entry, %if.entry2, %if.entry6, %if.entry10, %if.entry14, %CodeGen_codegen_bin_exp.exit, %CodeGen_codegen_unary_exp.exit, %CodeGen_codegen_call_exp.exit, %CodeGen_get_expr_mem.exit232, %if.entry38, %if.entry42, %if.entry54, %if.entry58, %if.entry62, %if.entry66, %CodeGen_build_constructor_call.exit, %ifend.i, %if.entry8.i, %ifend10.i, %true_block.i202, %false_block.i203, %true_block6.i, %false_block7.i, %true_block14.i, %false_block15.i, %true_block22.i, %false_block23.i, %true_block32.i, %false_block33.i, %true_block36.i, %false_block37.i, %3, %if.entry46
  %common.ret296.op = phi ptr [ %404, %if.entry46 ], [ %9, %if.entry ], [ %13, %if.entry2 ], [ %17, %if.entry6 ], [ %20, %if.entry10 ], [ %21, %if.entry14 ], [ %common.ret.op.i152, %CodeGen_codegen_bin_exp.exit ], [ %common.ret.op.i165, %CodeGen_codegen_unary_exp.exit ], [ %379, %CodeGen_codegen_call_exp.exit ], [ %383, %CodeGen_get_expr_mem.exit232 ], [ %384, %if.entry38 ], [ %385, %if.entry42 ], [ %444, %if.entry54 ], [ %445, %if.entry58 ], [ %446, %if.entry62 ], [ %447, %if.entry66 ], [ %454, %CodeGen_build_constructor_call.exit ], [ %38, %if.entry8.i ], [ %39, %ifend10.i ], [ %23, %ifend.i ], [ %424, %true_block.i202 ], [ %425, %false_block.i203 ], [ %431, %true_block6.i ], [ %432, %false_block7.i ], [ %434, %true_block14.i ], [ %435, %false_block15.i ], [ %438, %true_block22.i ], [ %439, %false_block23.i ], [ %440, %true_block32.i ], [ %441, %false_block33.i ], [ %442, %true_block36.i ], [ %443, %false_block37.i ], [ null, %3 ]
  ret ptr %common.ret296.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %BooleanExpression, ptr %2, i64 0, i32 4
  %7 = load i1, ptr %memberidx.i, align 1
  %8 = tail call ptr @LLVMInt1Type()
  %..i.i = zext i1 %7 to i64
  %9 = tail call ptr @LLVMConstInt(ptr %8, i64 %..i.i, i1 false)
  br label %common.ret296

if.entry2:                                        ; preds = %3
  %memberidx.i142 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %memberidx.i142, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  %memberidx1.i = getelementptr inbounds %IntExpression, ptr %2, i64 0, i32 4
  %12 = load i64, ptr %memberidx1.i, align 4
  %13 = tail call ptr @LLVMConstInt(ptr %11, i64 %12, i1 true)
  br label %common.ret296

if.entry6:                                        ; preds = %3
  %memberidx.i143 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %14 = load ptr, ptr %memberidx.i143, align 8
  %15 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %14, i1 true)
  %memberidx1.i144 = getelementptr inbounds %FloatExpression, ptr %2, i64 0, i32 4
  %16 = load double, ptr %memberidx1.i144, align 8
  %17 = tail call ptr @LLVMConstReal(ptr %15, double %16)
  br label %common.ret296

if.entry10:                                       ; preds = %3
  %memberidx.i145 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %18 = load ptr, ptr %memberidx.i145, align 8
  %19 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %18, i1 true)
  %20 = tail call ptr @LLVMConstNull(ptr %19)
  br label %common.ret296

if.entry14:                                       ; preds = %3
  %21 = tail call fastcc ptr @CodeGen_codegen_string(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret296

if.entry18:                                       ; preds = %3
  %memberidx.i146 = getelementptr inbounds %VarAccessExpression, ptr %2, i64 0, i32 4
  %22 = load ptr, ptr %memberidx.i146, align 8
  %23 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %22)
  %memberidx1.i147 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %24 = load ptr, ptr %memberidx1.i147, align 8
  %25 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %24, i1 true)
  %26 = icmp eq ptr %23, null
  br i1 %26, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %if.entry18
  %27 = tail call ptr @malloc(i32 50)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %27, ptr noundef nonnull align 8 dereferenceable(50) @266, i64 50, i1 false)
  %28 = tail call ptr @malloc(i32 24)
  %29 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %29, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %30 = tail call ptr @malloc(i32 24)
  %31 = tail call i64 @write(i64 1, ptr %29, i64 7)
  tail call void @free(ptr %29)
  tail call void @free(ptr %30)
  %32 = tail call i64 @write(i64 1, ptr %27, i64 50)
  %33 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %27)
  tail call void @free(ptr %28)
  tail call void @exit(i64 -1)
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry.i, %if.entry18
  %34 = load ptr, ptr %memberidx.i146, align 8
  %35 = load i64, ptr %34, align 4
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %common.ret296, label %ifend6.i

ifend6.i:                                         ; preds = %ifend.i
  %memberidx7.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %37 = load i1, ptr %memberidx7.i, align 1
  br i1 %37, label %if.entry8.i, label %ifend10.i

if.entry8.i:                                      ; preds = %ifend6.i
  %38 = tail call ptr @LLVMGetInitializer(ptr %23)
  br label %common.ret296

ifend10.i:                                        ; preds = %ifend6.i
  %39 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %25, ptr %23, ptr nonnull @78)
  br label %common.ret296

if.entry22:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %indices.i)
  %memberidx.i148 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 5
  %40 = load i64, ptr %memberidx.i148, align 4
  %memberidx1.i149 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 4
  %41 = load ptr, ptr %memberidx1.i149, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %41, i64 0, i32 3
  %42 = load ptr, ptr %memberidx2.i, align 8
  %43 = load i64, ptr %42, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 6
  %44 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %44, i64 0, i32 3
  %45 = load ptr, ptr %memberidx5.i, align 8
  %46 = load i64, ptr %45, align 4
  %.not.i = icmp eq i64 %43, %46
  br i1 %.not.i, label %ifend.i151, label %if.entry.i150

if.entry.i150:                                    ; preds = %if.entry22
  switch i64 %40, label %ifend15.i [
    i64 11, label %if.entry7.i
    i64 12, label %if.entry10.i
    i64 19, label %if.entry13.i
  ]

ifend.i151:                                       ; preds = %if.entry22
  %47 = icmp eq i64 %40, 19
  br i1 %47, label %if.entry13.i, label %ifend15.i

if.entry7.i:                                      ; preds = %if.entry.i150
  %48 = tail call ptr @LLVMInt1Type()
  %49 = tail call ptr @LLVMConstInt(ptr %48, i64 0, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

if.entry10.i:                                     ; preds = %if.entry.i150
  %50 = tail call ptr @LLVMInt1Type()
  %51 = tail call ptr @LLVMConstInt(ptr %50, i64 1, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

if.entry13.i:                                     ; preds = %if.entry.i150, %ifend.i151
  %memberidx.i214 = getelementptr inbounds %Expression, ptr %41, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i214, align 4
  switch i64 %52, label %ifend8.i [
    i64 8, label %if.entry.i216
    i64 14, label %if.entry2.i
    i64 13, label %if.entry6.i
  ]

if.entry.i216:                                    ; preds = %if.entry13.i
  %53 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %41)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry13.i
  %54 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %41)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry13.i
  %55 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %41, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry13.i
  %56 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %41)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i216, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i215 = phi ptr [ %53, %if.entry.i216 ], [ %54, %if.entry2.i ], [ %55, %if.entry6.i ], [ %56, %ifend8.i ]
  %57 = load ptr, ptr %memberidx4.i, align 8
  %58 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i215, ptr %57)
  br label %CodeGen_codegen_bin_exp.exit

ifend15.i:                                        ; preds = %if.entry.i150, %ifend.i151
  %59 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %41)
  %60 = load ptr, ptr %memberidx4.i, align 8
  %61 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %60)
  %62 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i, align 4
  %64 = icmp eq i64 %63, 5
  %65 = icmp eq i64 %40, 11
  %66 = icmp eq i64 %40, 12
  %67 = add i64 %40, -11
  %68 = icmp ult i64 %67, 2
  %69 = and i1 %68, %64
  br i1 %69, label %if.entry19.i, label %ifend21.i

if.entry19.i:                                     ; preds = %ifend15.i
  %70 = tail call i1 @LLVMIsConstant(ptr %59)
  br i1 %70, label %if.entry22.i, label %ifend24.i

ifend21.i:                                        ; preds = %ifend15.i
  %71 = load ptr, ptr %memberidx1.i149, align 8
  %memberidx30.i = getelementptr inbounds %Expression, ptr %71, i64 0, i32 3
  %72 = load ptr, ptr %memberidx30.i, align 8
  %memberidx32.i = getelementptr inbounds %Expression, ptr %62, i64 0, i32 3
  %73 = load ptr, ptr %memberidx32.i, align 8
  %74 = load i64, ptr %73, align 4
  %75 = add i64 %74, -1
  %76 = icmp ult i64 %75, 9
  %77 = icmp eq i64 %40, 6
  %78 = and i1 %77, %76
  br i1 %78, label %if.entry33.i, label %ifend35.i

if.entry22.i:                                     ; preds = %if.entry19.i
  %79 = tail call i1 @LLVMIsNull(ptr %59)
  %80 = tail call ptr @LLVMInt1Type()
  %..i.i153 = zext i1 %79 to i64
  %81 = tail call ptr @LLVMConstInt(ptr %80, i64 %..i.i153, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

ifend24.i:                                        ; preds = %if.entry19.i
  br i1 %65, label %true_block25.i, label %false_block26.i

true_block25.i:                                   ; preds = %ifend24.i
  %82 = tail call ptr @LLVMBuildIsNull(ptr %1, ptr %59, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

false_block26.i:                                  ; preds = %ifend24.i
  %83 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %59, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry33.i:                                     ; preds = %ifend21.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store ptr %59, ptr %args.i.i, align 8
  %84 = getelementptr inbounds ptr, ptr %args.i.i, i64 1
  store ptr %61, ptr %84, align 8
  %85 = tail call fastcc ptr @dump_type(ptr nonnull %73, i1 true)
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  %86 = load i64, ptr %memberidx.i.i.i, align 4
  %87 = trunc i64 %86 to i32
  %88 = add i32 %87, 1
  %89 = tail call ptr @malloc(i32 %88)
  %90 = load ptr, ptr %85, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %89, ptr align 8 %90, i64 %86, i1 false)
  %91 = getelementptr inbounds i8, ptr %89, i64 %86
  store i8 0, ptr %91, align 1
  %92 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @263, ptr %89)
  %93 = load ptr, ptr %5, align 8
  %94 = call ptr @malloc(i32 24)
  store ptr %93, ptr %94, align 8
  %memberidx1.i.i455.i = getelementptr inbounds %String, ptr %94, i64 0, i32 1
  store i64 %92, ptr %memberidx1.i.i455.i, align 4
  %memberidx2.i.i456.i = getelementptr inbounds %String, ptr %94, i64 0, i32 2
  store i64 %92, ptr %memberidx2.i.i456.i, align 4
  call void @free(ptr %89)
  %95 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %73, i1 true)
  store ptr %95, ptr %arg_types.i.i, align 8
  %96 = getelementptr inbounds ptr, ptr %arg_types.i.i, i64 1
  store ptr %95, ptr %96, align 8
  %97 = load ptr, ptr %0, align 8
  %98 = call ptr @malloc(i32 16)
  %memberidx1.i.i.i457.i = getelementptr inbounds %IntrinsicResult, ptr %98, i64 0, i32 1
  store i64 0, ptr %98, align 8
  %99 = call ptr @LLVMFunctionType(ptr %95, ptr nonnull %arg_types.i.i, i64 2, i1 false)
  store ptr %99, ptr %memberidx1.i.i.i457.i, align 8
  %100 = trunc i64 %92 to i32
  %101 = add i32 %100, 1
  %102 = call ptr @malloc(i32 %101)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %102, ptr align 8 %93, i64 %92, i1 false)
  %103 = getelementptr inbounds i8, ptr %102, i64 %92
  store i8 0, ptr %103, align 1
  %104 = call ptr @LLVMGetNamedFunction(ptr %97, ptr %102)
  %.not.i.i.i = icmp eq ptr %104, null
  br i1 %.not.i.i.i, label %else.i.i.i, label %CodeGen_codegen_pow_expr.exit.i

else.i.i.i:                                       ; preds = %if.entry33.i
  %105 = call ptr @LLVMAddFunction(ptr %97, ptr nonnull %102, ptr %99)
  br label %CodeGen_codegen_pow_expr.exit.i

CodeGen_codegen_pow_expr.exit.i:                  ; preds = %if.entry33.i, %else.i.i.i
  %storemerge.i.i.i = phi ptr [ %105, %else.i.i.i ], [ %104, %if.entry33.i ]
  store ptr %storemerge.i.i.i, ptr %98, align 8
  %106 = call ptr @LLVMBuildCall2(ptr %1, ptr %99, ptr %storemerge.i.i.i, ptr nonnull %args.i.i, i64 2, ptr nonnull @78)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %CodeGen_codegen_bin_exp.exit

ifend35.i:                                        ; preds = %ifend21.i
  %107 = load i64, ptr %72, align 4
  %108 = icmp eq i64 %107, 13
  br i1 %108, label %if.entry36.i, label %ifend38.i

if.entry36.i:                                     ; preds = %ifend35.i
  %109 = icmp eq i64 %40, 1
  br i1 %109, label %end41.i, label %false_block40.i

ifend38.i:                                        ; preds = %ifend35.i
  %110 = tail call i1 @LLVMIsConstant(ptr %59)
  %111 = tail call i1 @LLVMIsConstant(ptr %61)
  %112 = and i1 %110, %111
  %113 = load i64, ptr %73, align 4
  %114 = load i64, ptr %72, align 4
  %115 = icmp eq i64 %114, 20
  br i1 %115, label %if.entry.i285, label %is_object.exit288

if.entry.i285:                                    ; preds = %ifend38.i, %if.entry.i285
  %.tr5.i283 = phi ptr [ %116, %if.entry.i285 ], [ %72, %ifend38.i ]
  %memberidx1.i284 = getelementptr inbounds %GenericType, ptr %.tr5.i283, i64 0, i32 3
  %116 = load ptr, ptr %memberidx1.i284, align 8
  %117 = load i64, ptr %116, align 4
  %118 = icmp eq i64 %117, 20
  br i1 %118, label %if.entry.i285, label %is_object.exit288

is_object.exit288:                                ; preds = %if.entry.i285, %ifend38.i
  %.lcssa.i286 = phi i64 [ %114, %ifend38.i ], [ %117, %if.entry.i285 ]
  %119 = icmp eq i64 %.lcssa.i286, 11
  %120 = icmp eq i64 %113, 20
  br i1 %120, label %if.entry.i279, label %is_object.exit282

if.entry.i279:                                    ; preds = %is_object.exit288, %if.entry.i279
  %.tr5.i277 = phi ptr [ %121, %if.entry.i279 ], [ %73, %is_object.exit288 ]
  %memberidx1.i278 = getelementptr inbounds %GenericType, ptr %.tr5.i277, i64 0, i32 3
  %121 = load ptr, ptr %memberidx1.i278, align 8
  %122 = load i64, ptr %121, align 4
  %123 = icmp eq i64 %122, 20
  br i1 %123, label %if.entry.i279, label %is_object.exit282

is_object.exit282:                                ; preds = %if.entry.i279, %is_object.exit288
  %.lcssa.i280 = phi i64 [ %113, %is_object.exit288 ], [ %122, %if.entry.i279 ]
  %124 = icmp eq i64 %.lcssa.i280, 11
  %125 = and i1 %119, %124
  %126 = and i1 %68, %125
  %127 = freeze i1 %126
  br i1 %127, label %if.entry45.i, label %switch.early.test

switch.early.test:                                ; preds = %is_object.exit282
  switch i64 %113, label %else46.i [
    i64 12, label %if.entry45.i
    i64 7, label %if.entry45.i
    i64 6, label %if.entry45.i
    i64 5, label %if.entry45.i
    i64 4, label %if.entry45.i
    i64 3, label %if.entry45.i
    i64 2, label %if.entry45.i
    i64 1, label %if.entry45.i
  ]

false_block40.i:                                  ; preds = %if.entry36.i
  %128 = tail call i1 @LLVMIsConstant(ptr %61)
  br i1 %128, label %true_block.i.i, label %false_block.i.i

true_block.i.i:                                   ; preds = %false_block40.i
  %129 = tail call ptr @LLVMConstNeg(ptr %61)
  br label %end41.i

false_block.i.i:                                  ; preds = %false_block40.i
  %130 = tail call ptr @LLVMBuildNeg(ptr %1, ptr %61, ptr nonnull @78)
  br label %end41.i

end41.i:                                          ; preds = %true_block.i.i, %false_block.i.i, %if.entry36.i
  %ternary42.i = phi ptr [ %61, %if.entry36.i ], [ %129, %true_block.i.i ], [ %130, %false_block.i.i ]
  store ptr %ternary42.i, ptr %indices.i, align 8
  %memberidx43.i = getelementptr inbounds %PointerType, ptr %72, i64 0, i32 1
  %131 = load ptr, ptr %memberidx43.i, align 8
  %132 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %131, i1 true)
  %133 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %132, ptr %59, ptr nonnull %indices.i, i64 1, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry45.i:                                     ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %is_object.exit282
  switch i64 %40, label %else105.i [
    i64 1, label %if.entry48.i
    i64 2, label %if.entry64.i
    i64 3, label %if.entry80.i
    i64 4, label %if.entry96.i
    i64 5, label %if.entry104.i
  ]

else46.i:                                         ; preds = %switch.early.test
  %134 = and i64 %113, -2
  %135 = icmp eq i64 %134, 8
  br i1 %135, label %if.entry166.i, label %else167.i

ifend47.i:                                        ; preds = %else125.i, %else213.i, %else185.i, %else167.i
  %136 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %136, ptr noundef nonnull align 8 dereferenceable(33) @264, i64 33, i1 false)
  %137 = tail call ptr @malloc(i32 24)
  %138 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %138, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %139 = tail call ptr @malloc(i32 24)
  %140 = tail call i64 @write(i64 1, ptr %138, i64 7)
  tail call void @free(ptr %138)
  tail call void @free(ptr %139)
  %141 = tail call i64 @write(i64 1, ptr %136, i64 33)
  %142 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %136)
  tail call void @free(ptr %137)
  tail call void @exit(i64 -1)
  br label %CodeGen_codegen_bin_exp.exit

if.entry48.i:                                     ; preds = %if.entry45.i
  %memberidx51.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %143 = load ptr, ptr %memberidx51.i, align 8
  %memberidx52.i = getelementptr inbounds %IntType, ptr %143, i64 0, i32 1
  %144 = load i1, ptr %memberidx52.i, align 1
  br i1 %144, label %if.entry53.i, label %ifend55.i

if.entry53.i:                                     ; preds = %if.entry48.i
  br i1 %112, label %true_block56.i, label %false_block57.i

ifend55.i:                                        ; preds = %if.entry48.i
  br i1 %112, label %true_block60.i, label %false_block61.i

true_block56.i:                                   ; preds = %if.entry53.i
  %145 = tail call ptr @LLVMConstNSWAdd(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block57.i:                                  ; preds = %if.entry53.i
  %146 = tail call ptr @LLVMBuildNSWAdd(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

true_block60.i:                                   ; preds = %ifend55.i
  %147 = tail call ptr @LLVMConstNUWAdd(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block61.i:                                  ; preds = %ifend55.i
  %148 = tail call ptr @LLVMBuildNUWAdd(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry64.i:                                     ; preds = %if.entry45.i
  %memberidx67.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %149 = load ptr, ptr %memberidx67.i, align 8
  %memberidx68.i = getelementptr inbounds %IntType, ptr %149, i64 0, i32 1
  %150 = load i1, ptr %memberidx68.i, align 1
  br i1 %150, label %if.entry69.i, label %ifend71.i

if.entry69.i:                                     ; preds = %if.entry64.i
  br i1 %112, label %true_block72.i, label %false_block73.i

ifend71.i:                                        ; preds = %if.entry64.i
  br i1 %112, label %true_block76.i, label %false_block77.i

true_block72.i:                                   ; preds = %if.entry69.i
  %151 = tail call ptr @LLVMConstNSWSub(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block73.i:                                  ; preds = %if.entry69.i
  %152 = tail call ptr @LLVMBuildNSWSub(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

true_block76.i:                                   ; preds = %ifend71.i
  %153 = tail call ptr @LLVMConstNUWSub(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block77.i:                                  ; preds = %ifend71.i
  %154 = tail call ptr @LLVMBuildNUWSub(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry80.i:                                     ; preds = %if.entry45.i
  %memberidx83.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %155 = load ptr, ptr %memberidx83.i, align 8
  %memberidx84.i = getelementptr inbounds %IntType, ptr %155, i64 0, i32 1
  %156 = load i1, ptr %memberidx84.i, align 1
  br i1 %156, label %if.entry85.i, label %ifend87.i

if.entry85.i:                                     ; preds = %if.entry80.i
  br i1 %112, label %true_block88.i, label %false_block89.i

ifend87.i:                                        ; preds = %if.entry80.i
  br i1 %112, label %true_block92.i, label %false_block93.i

true_block88.i:                                   ; preds = %if.entry85.i
  %157 = tail call ptr @LLVMConstNSWMul(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block89.i:                                  ; preds = %if.entry85.i
  %158 = tail call ptr @LLVMBuildNSWMul(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

true_block92.i:                                   ; preds = %ifend87.i
  %159 = tail call ptr @LLVMConstNUWMul(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block93.i:                                  ; preds = %ifend87.i
  %160 = tail call ptr @LLVMBuildNUWMul(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry96.i:                                     ; preds = %if.entry45.i
  %memberidx99.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %161 = load ptr, ptr %memberidx99.i, align 8
  %memberidx100.i = getelementptr inbounds %IntType, ptr %161, i64 0, i32 1
  %162 = load i1, ptr %memberidx100.i, align 1
  br i1 %162, label %if.entry101.i, label %ifend103.i

if.entry101.i:                                    ; preds = %if.entry96.i
  %163 = tail call ptr @LLVMBuildSDiv(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

ifend103.i:                                       ; preds = %if.entry96.i
  %164 = tail call ptr @LLVMBuildUDiv(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry104.i:                                    ; preds = %if.entry45.i
  %memberidx107.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %165 = load ptr, ptr %memberidx107.i, align 8
  %memberidx108.i = getelementptr inbounds %IntType, ptr %165, i64 0, i32 1
  %166 = load i1, ptr %memberidx108.i, align 1
  br i1 %166, label %if.entry109.i, label %ifend111.i

else105.i:                                        ; preds = %if.entry45.i
  %167 = add i64 %40, -7
  %168 = icmp ult i64 %167, 4
  br i1 %168, label %if.entry112.i, label %else113.i

if.entry109.i:                                    ; preds = %if.entry104.i
  %169 = tail call ptr @LLVMBuildSRem(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

ifend111.i:                                       ; preds = %if.entry104.i
  %170 = tail call ptr @LLVMBuildURem(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry112.i:                                    ; preds = %else105.i
  %171 = add nuw nsw i64 %40, 31
  br i1 %112, label %true_block120.i, label %false_block121.i

else113.i:                                        ; preds = %else105.i
  br i1 %68, label %if.entry124.i, label %else125.i

true_block120.i:                                  ; preds = %if.entry112.i
  %172 = tail call ptr @LLVMConstICmp(i64 %171, ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block121.i:                                 ; preds = %if.entry112.i
  %173 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %171, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry124.i:                                    ; preds = %else113.i
  %174 = add nuw nsw i64 %40, 21
  br i1 %112, label %true_block127.i, label %false_block128.i

else125.i:                                        ; preds = %else113.i
  switch i64 %40, label %ifend47.i [
    i64 13, label %if.entry131.i
    i64 14, label %if.entry138.i
    i64 15, label %if.entry145.i
    i64 16, label %if.entry152.i
    i64 17, label %if.entry159.i
  ]

true_block127.i:                                  ; preds = %if.entry124.i
  %175 = tail call ptr @LLVMConstICmp(i64 %174, ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block128.i:                                 ; preds = %if.entry124.i
  %176 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %174, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry131.i:                                    ; preds = %else125.i
  br i1 %112, label %true_block134.i, label %false_block135.i

true_block134.i:                                  ; preds = %if.entry131.i
  %177 = tail call ptr @LLVMConstShl(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block135.i:                                 ; preds = %if.entry131.i
  %178 = tail call ptr @LLVMBuildShl(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry138.i:                                    ; preds = %else125.i
  br i1 %112, label %true_block141.i, label %false_block142.i

true_block141.i:                                  ; preds = %if.entry138.i
  %179 = tail call ptr @LLVMConstLShr(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block142.i:                                 ; preds = %if.entry138.i
  %180 = tail call ptr @LLVMBuildLShr(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry145.i:                                    ; preds = %else125.i
  br i1 %112, label %true_block148.i, label %false_block149.i

true_block148.i:                                  ; preds = %if.entry145.i
  %181 = tail call ptr @LLVMConstOr(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block149.i:                                 ; preds = %if.entry145.i
  %182 = tail call ptr @LLVMBuildOr(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry152.i:                                    ; preds = %else125.i
  br i1 %112, label %true_block155.i, label %false_block156.i

true_block155.i:                                  ; preds = %if.entry152.i
  %183 = tail call ptr @LLVMConstAnd(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block156.i:                                 ; preds = %if.entry152.i
  %184 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry159.i:                                    ; preds = %else125.i
  br i1 %112, label %true_block162.i, label %false_block163.i

true_block162.i:                                  ; preds = %if.entry159.i
  %185 = tail call ptr @LLVMConstXor(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block163.i:                                 ; preds = %if.entry159.i
  %186 = tail call ptr @LLVMBuildXor(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry166.i:                                    ; preds = %else46.i
  switch i64 %40, label %else182.i [
    i64 1, label %if.entry169.i
    i64 2, label %if.entry172.i
    i64 3, label %if.entry175.i
    i64 4, label %if.entry178.i
    i64 5, label %if.entry181.i
  ]

else167.i:                                        ; preds = %else46.i
  %187 = icmp eq i64 %113, 0
  br i1 %187, label %if.entry202.i, label %ifend47.i

if.entry169.i:                                    ; preds = %if.entry166.i
  %188 = tail call ptr @LLVMBuildFAdd(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry172.i:                                    ; preds = %if.entry166.i
  %189 = tail call ptr @LLVMBuildFSub(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry175.i:                                    ; preds = %if.entry166.i
  %190 = tail call ptr @LLVMBuildFMul(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry178.i:                                    ; preds = %if.entry166.i
  %191 = tail call ptr @LLVMBuildFDiv(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry181.i:                                    ; preds = %if.entry166.i
  %192 = tail call ptr @LLVMBuildFRem(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

else182.i:                                        ; preds = %if.entry166.i
  %193 = add i64 %40, -7
  %194 = icmp ult i64 %193, 4
  br i1 %194, label %if.entry184.i, label %else185.i

if.entry184.i:                                    ; preds = %else182.i
  %195 = add nsw i64 %40, -5
  br i1 %112, label %true_block187.i, label %false_block188.i

else185.i:                                        ; preds = %else182.i
  br i1 %68, label %if.entry191.i, label %ifend47.i

true_block187.i:                                  ; preds = %if.entry184.i
  %196 = tail call ptr @LLVMConstFCmp(i64 %195, ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block188.i:                                 ; preds = %if.entry184.i
  %197 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %195, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry191.i:                                    ; preds = %else185.i
  %.226.i = select i1 %66, i64 6, i64 1
  br i1 %112, label %true_block198.i, label %false_block199.i

true_block198.i:                                  ; preds = %if.entry191.i
  %198 = tail call ptr @LLVMConstFCmp(i64 %.226.i, ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block199.i:                                 ; preds = %if.entry191.i
  %199 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %.226.i, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry202.i:                                    ; preds = %else167.i
  switch i64 %40, label %else213.i [
    i64 16, label %if.entry205.i
    i64 11, label %if.entry205.i
    i64 15, label %if.entry212.i
  ]

if.entry205.i:                                    ; preds = %if.entry202.i, %if.entry202.i
  br i1 %112, label %true_block208.i, label %false_block209.i

true_block208.i:                                  ; preds = %if.entry205.i
  %200 = tail call ptr @LLVMConstAnd(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block209.i:                                 ; preds = %if.entry205.i
  %201 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry212.i:                                    ; preds = %if.entry202.i
  br i1 %112, label %true_block215.i, label %false_block216.i

else213.i:                                        ; preds = %if.entry202.i
  br i1 %66, label %if.entry219.i, label %ifend47.i

true_block215.i:                                  ; preds = %if.entry212.i
  %202 = tail call ptr @LLVMConstOr(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block216.i:                                 ; preds = %if.entry212.i
  %203 = tail call ptr @LLVMBuildOr(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

if.entry219.i:                                    ; preds = %else213.i
  br i1 %112, label %true_block222.i, label %false_block223.i

true_block222.i:                                  ; preds = %if.entry219.i
  %204 = tail call ptr @LLVMConstXor(ptr %59, ptr %61)
  br label %CodeGen_codegen_bin_exp.exit

false_block223.i:                                 ; preds = %if.entry219.i
  %205 = tail call ptr @LLVMBuildXor(ptr %1, ptr %59, ptr %61, ptr nonnull @78)
  br label %CodeGen_codegen_bin_exp.exit

CodeGen_codegen_bin_exp.exit:                     ; preds = %if.entry7.i, %if.entry10.i, %CodeGen_get_expr_mem.exit, %if.entry22.i, %true_block25.i, %false_block26.i, %CodeGen_codegen_pow_expr.exit.i, %end41.i, %ifend47.i, %true_block56.i, %false_block57.i, %true_block60.i, %false_block61.i, %true_block72.i, %false_block73.i, %true_block76.i, %false_block77.i, %true_block88.i, %false_block89.i, %true_block92.i, %false_block93.i, %if.entry101.i, %ifend103.i, %if.entry109.i, %ifend111.i, %true_block120.i, %false_block121.i, %true_block127.i, %false_block128.i, %true_block134.i, %false_block135.i, %true_block141.i, %false_block142.i, %true_block148.i, %false_block149.i, %true_block155.i, %false_block156.i, %true_block162.i, %false_block163.i, %if.entry169.i, %if.entry172.i, %if.entry175.i, %if.entry178.i, %if.entry181.i, %true_block187.i, %false_block188.i, %true_block198.i, %false_block199.i, %true_block208.i, %false_block209.i, %true_block215.i, %false_block216.i, %true_block222.i, %false_block223.i
  %common.ret.op.i152 = phi ptr [ %49, %if.entry7.i ], [ %51, %if.entry10.i ], [ %58, %CodeGen_get_expr_mem.exit ], [ %81, %if.entry22.i ], [ %106, %CodeGen_codegen_pow_expr.exit.i ], [ %133, %end41.i ], [ %59, %ifend47.i ], [ %163, %if.entry101.i ], [ %164, %ifend103.i ], [ %169, %if.entry109.i ], [ %170, %ifend111.i ], [ %188, %if.entry169.i ], [ %189, %if.entry172.i ], [ %190, %if.entry175.i ], [ %191, %if.entry178.i ], [ %192, %if.entry181.i ], [ %82, %true_block25.i ], [ %83, %false_block26.i ], [ %145, %true_block56.i ], [ %146, %false_block57.i ], [ %147, %true_block60.i ], [ %148, %false_block61.i ], [ %151, %true_block72.i ], [ %152, %false_block73.i ], [ %153, %true_block76.i ], [ %154, %false_block77.i ], [ %157, %true_block88.i ], [ %158, %false_block89.i ], [ %159, %true_block92.i ], [ %160, %false_block93.i ], [ %172, %true_block120.i ], [ %173, %false_block121.i ], [ %175, %true_block127.i ], [ %176, %false_block128.i ], [ %177, %true_block134.i ], [ %178, %false_block135.i ], [ %179, %true_block141.i ], [ %180, %false_block142.i ], [ %181, %true_block148.i ], [ %182, %false_block149.i ], [ %183, %true_block155.i ], [ %184, %false_block156.i ], [ %185, %true_block162.i ], [ %186, %false_block163.i ], [ %196, %true_block187.i ], [ %197, %false_block188.i ], [ %198, %true_block198.i ], [ %199, %false_block199.i ], [ %200, %true_block208.i ], [ %201, %false_block209.i ], [ %202, %true_block215.i ], [ %203, %false_block216.i ], [ %204, %true_block222.i ], [ %205, %false_block223.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %indices.i)
  br label %common.ret296

if.entry26:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %indices.i)
  %memberidx.i160 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 4
  %206 = load i64, ptr %memberidx.i160, align 4
  %memberidx1.i161 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 5
  %207 = load ptr, ptr %memberidx1.i161, align 8
  %208 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %207)
  switch i64 %206, label %ifend29.i [
    i64 1, label %if.entry.i163
    i64 6, label %if.entry7.i166
    i64 7, label %if.entry27.i
  ]

if.entry.i163:                                    ; preds = %if.entry26
  %memberidx2.i162 = getelementptr inbounds %Expression, ptr %207, i64 0, i32 3
  %209 = load ptr, ptr %memberidx2.i162, align 8
  %210 = load i64, ptr %209, align 4
  %211 = icmp eq i64 %210, 20
  br i1 %211, label %if.entry.i275, label %is_object.exit

if.entry.i275:                                    ; preds = %if.entry.i163, %if.entry.i275
  %.tr5.i = phi ptr [ %212, %if.entry.i275 ], [ %209, %if.entry.i163 ]
  %memberidx1.i274 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %212 = load ptr, ptr %memberidx1.i274, align 8
  %213 = load i64, ptr %212, align 4
  %214 = icmp eq i64 %213, 20
  br i1 %214, label %if.entry.i275, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i275, %if.entry.i163
  %.lcssa.i = phi i64 [ %210, %if.entry.i163 ], [ %213, %if.entry.i275 ]
  %215 = icmp eq i64 %.lcssa.i, 11
  br i1 %215, label %if.entry3.i, label %ifend5.i

if.entry3.i:                                      ; preds = %is_object.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i289)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %func_ty.i)
  %216 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %216, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %217 = tail call ptr @malloc(i32 24)
  store ptr %216, ptr %217, align 8
  %memberidx1.i.i.i290 = getelementptr inbounds %String, ptr %217, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i.i290, align 4
  %memberidx2.i.i.i291 = getelementptr inbounds %String, ptr %217, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i.i291, align 4
  %218 = call fastcc ptr @CodeGen_codgen_get_member_with_name(ptr %0, ptr %1, ptr %208, ptr nonnull %209, ptr nonnull %217, ptr nonnull %func_ty.i)
  %219 = icmp eq ptr %218, null
  br i1 %219, label %CodeGen_codegen_del_call.exit, label %ifend.i292

ifend.i292:                                       ; preds = %if.entry3.i
  store ptr %208, ptr %args.i289, align 8
  %220 = load ptr, ptr %func_ty.i, align 8
  %221 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %220, i1 false)
  %222 = call ptr @LLVMBuildCall2(ptr %1, ptr %221, ptr nonnull %218, ptr nonnull %args.i289, i64 1, ptr nonnull @78)
  br label %CodeGen_codegen_del_call.exit

CodeGen_codegen_del_call.exit:                    ; preds = %if.entry3.i, %ifend.i292
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i289)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %func_ty.i)
  br label %ifend5.i

ifend5.i:                                         ; preds = %CodeGen_codegen_del_call.exit, %is_object.exit
  %223 = call ptr @LLVMBuildFree(ptr %1, ptr %208)
  br label %CodeGen_codegen_unary_exp.exit

if.entry7.i166:                                   ; preds = %if.entry26
  %memberidx10.i = getelementptr inbounds %Expression, ptr %207, i64 0, i32 3
  %224 = load ptr, ptr %memberidx10.i, align 8
  %225 = load i64, ptr %224, align 4
  %226 = add i64 %225, -1
  %227 = icmp ult i64 %226, 7
  br i1 %227, label %if.entry11.i, label %else12.i

if.entry11.i:                                     ; preds = %if.entry7.i166
  %memberidx15.i = getelementptr inbounds %IntType, ptr %224, i64 0, i32 1
  %228 = load i1, ptr %memberidx15.i, align 1
  %229 = tail call i1 @LLVMIsConstant(ptr %208)
  br i1 %228, label %if.entry16.i, label %ifend18.i

else12.i:                                         ; preds = %if.entry7.i166
  %230 = and i64 %225, -2
  %231 = icmp eq i64 %230, 8
  br i1 %231, label %if.entry24.i, label %CodeGen_codegen_unary_exp.exit

if.entry16.i:                                     ; preds = %if.entry11.i
  br i1 %229, label %true_block.i167, label %false_block.i168

ifend18.i:                                        ; preds = %if.entry11.i
  br i1 %229, label %true_block19.i, label %false_block20.i

true_block.i167:                                  ; preds = %if.entry16.i
  %232 = tail call ptr @LLVMConstNSWNeg(ptr %208)
  br label %CodeGen_codegen_unary_exp.exit

false_block.i168:                                 ; preds = %if.entry16.i
  %233 = tail call ptr @LLVMBuildNSWNeg(ptr %1, ptr %208, ptr nonnull @78)
  br label %CodeGen_codegen_unary_exp.exit

true_block19.i:                                   ; preds = %ifend18.i
  %234 = tail call ptr @LLVMConstNUWNeg(ptr %208)
  br label %CodeGen_codegen_unary_exp.exit

false_block20.i:                                  ; preds = %ifend18.i
  %235 = tail call ptr @LLVMBuildNUWNeg(ptr %1, ptr %208, ptr nonnull @78)
  br label %CodeGen_codegen_unary_exp.exit

if.entry24.i:                                     ; preds = %else12.i
  %236 = tail call ptr @LLVMBuildFNeg(ptr %1, ptr %208, ptr nonnull @78)
  br label %CodeGen_codegen_unary_exp.exit

if.entry27.i:                                     ; preds = %if.entry26
  %237 = tail call i1 @LLVMIsConstant(ptr %208)
  br i1 %237, label %true_block30.i, label %false_block31.i

ifend29.i:                                        ; preds = %if.entry26
  %238 = icmp eq i64 %206, 8
  switch i64 %206, label %CodeGen_codegen_unary_exp.exit [
    i64 8, label %if.entry34.i
    i64 5, label %if.entry34.i
    i64 4, label %if.entry34.i
    i64 3, label %if.entry34.i
    i64 2, label %if.entry34.i
  ]

true_block30.i:                                   ; preds = %if.entry27.i
  %239 = tail call ptr @LLVMConstNot(ptr %208)
  br label %CodeGen_codegen_unary_exp.exit

false_block31.i:                                  ; preds = %if.entry27.i
  %240 = tail call ptr @LLVMBuildNot(ptr %1, ptr %208, ptr nonnull @78)
  br label %CodeGen_codegen_unary_exp.exit

if.entry34.i:                                     ; preds = %ifend29.i, %ifend29.i, %ifend29.i, %ifend29.i, %ifend29.i
  %memberidx.i.i169 = getelementptr inbounds %Expression, ptr %207, i64 0, i32 2
  %241 = load i64, ptr %memberidx.i.i169, align 4
  switch i64 %241, label %ifend8.i.i [
    i64 8, label %if.entry.i.i
    i64 14, label %if.entry2.i.i
    i64 13, label %if.entry6.i.i
  ]

if.entry.i.i:                                     ; preds = %if.entry34.i
  %242 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %207)
  br label %CodeGen_get_expr_mem.exit.i

if.entry2.i.i:                                    ; preds = %if.entry34.i
  %243 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %207)
  br label %CodeGen_get_expr_mem.exit.i

if.entry6.i.i:                                    ; preds = %if.entry34.i
  %244 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %207, ptr null)
  br label %CodeGen_get_expr_mem.exit.i

ifend8.i.i:                                       ; preds = %if.entry34.i
  %245 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %207)
  br label %CodeGen_get_expr_mem.exit.i

CodeGen_get_expr_mem.exit.i:                      ; preds = %ifend8.i.i, %if.entry6.i.i, %if.entry2.i.i, %if.entry.i.i
  %common.ret.op.i.i = phi ptr [ %242, %if.entry.i.i ], [ %243, %if.entry2.i.i ], [ %244, %if.entry6.i.i ], [ %245, %ifend8.i.i ]
  br i1 %238, label %CodeGen_codegen_unary_exp.exit, label %ifend39.i

ifend39.i:                                        ; preds = %CodeGen_get_expr_mem.exit.i
  %memberidx40.i = getelementptr inbounds %Expression, ptr %207, i64 0, i32 3
  %246 = load ptr, ptr %memberidx40.i, align 8
  %247 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %246, i1 true)
  %248 = icmp eq i64 %206, 2
  %249 = icmp eq i64 %206, 4
  %250 = or i1 %248, %249
  %..i = select i1 %250, i64 1, i64 -1
  %251 = load ptr, ptr %memberidx40.i, align 8
  %252 = load i64, ptr %251, align 4
  %253 = icmp eq i64 %252, 13
  br i1 %253, label %if.entry46.i, label %else47.i

if.entry46.i:                                     ; preds = %ifend39.i
  %memberidx50.i = getelementptr inbounds %PointerType, ptr %251, i64 0, i32 1
  %254 = load ptr, ptr %memberidx50.i, align 8
  %255 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %254, i1 true)
  %256 = tail call ptr @LLVMInt32Type()
  %257 = tail call ptr @LLVMConstInt(ptr %256, i64 %..i, i1 true)
  store ptr %257, ptr %indices.i, align 8
  %258 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %255, ptr %208, ptr nonnull %indices.i, i64 1, ptr nonnull @265)
  br label %ifend48.i

else47.i:                                         ; preds = %ifend39.i
  %259 = add i64 %252, -1
  %260 = icmp ult i64 %259, 9
  br i1 %260, label %if.entry52.i, label %ifend48.i

ifend48.i:                                        ; preds = %end57.i, %else47.i, %if.entry46.i
  %new_value.0.i = phi ptr [ %258, %if.entry46.i ], [ %267, %end57.i ], [ null, %else47.i ]
  %261 = call ptr @LLVMBuildStore(ptr %1, ptr %new_value.0.i, ptr %common.ret.op.i.i)
  %262 = icmp ugt i64 %206, 2
  %ternary63.i = select i1 %262, ptr %208, ptr %new_value.0.i
  br label %CodeGen_codegen_unary_exp.exit

if.entry52.i:                                     ; preds = %else47.i
  %263 = icmp ult i64 %259, 7
  br i1 %263, label %true_block55.i, label %false_block56.i

true_block55.i:                                   ; preds = %if.entry52.i
  %264 = tail call ptr @LLVMConstInt(ptr %247, i64 %..i, i1 false)
  br label %end57.i

false_block56.i:                                  ; preds = %if.entry52.i
  %265 = sitofp i64 %..i to double
  %266 = tail call ptr @LLVMConstReal(ptr %247, double %265)
  br label %end57.i

end57.i:                                          ; preds = %false_block56.i, %true_block55.i
  %ternary59.i = phi ptr [ %264, %true_block55.i ], [ %266, %false_block56.i ]
  %267 = tail call ptr @LLVMBuildNSWAdd(ptr %1, ptr %208, ptr %ternary59.i, ptr nonnull @78)
  br label %ifend48.i

CodeGen_codegen_unary_exp.exit:                   ; preds = %else12.i, %CodeGen_get_expr_mem.exit.i, %ifend29.i, %ifend5.i, %true_block.i167, %false_block.i168, %true_block19.i, %false_block20.i, %if.entry24.i, %true_block30.i, %false_block31.i, %ifend48.i
  %common.ret.op.i165 = phi ptr [ %208, %ifend5.i ], [ %236, %if.entry24.i ], [ %ternary63.i, %ifend48.i ], [ %232, %true_block.i167 ], [ %233, %false_block.i168 ], [ %234, %true_block19.i ], [ %235, %false_block20.i ], [ %239, %true_block30.i ], [ %240, %false_block31.i ], [ %208, %ifend29.i ], [ %common.ret.op.i.i, %CodeGen_get_expr_mem.exit.i ], [ %208, %else12.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %indices.i)
  br label %common.ret296

if.entry30:                                       ; preds = %3
  %268 = tail call ptr @malloc(i32 24)
  %memberidx.i.i170 = getelementptr inbounds %Array_LLVMValueRef_, ptr %268, i64 0, i32 1
  %memberidx1.i.i171 = getelementptr inbounds %Array_LLVMValueRef_, ptr %268, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i171, align 4
  %269 = tail call ptr @malloc(i32 64)
  store ptr %269, ptr %268, align 8
  store i64 0, ptr %memberidx.i.i170, align 4
  %memberidx2.i173 = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 4
  %270 = load ptr, ptr %memberidx2.i173, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %270, i64 0, i32 2
  %271 = load i64, ptr %memberidx3.i, align 4
  %272 = icmp eq i64 %271, 13
  br i1 %272, label %if.entry.i178, label %if.entry14.i

if.entry.i178:                                    ; preds = %if.entry30
  %memberidx5.i174 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %273 = load ptr, ptr %memberidx5.i174, align 8
  %memberidx6.i = getelementptr inbounds %MemberExpression, ptr %270, i64 0, i32 5
  %274 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i.i175 = getelementptr inbounds %PropId, ptr %274, i64 0, i32 1
  %275 = load ptr, ptr %memberidx.i.i.i175, align 8
  %276 = load ptr, ptr %273, align 8
  %277 = load i64, ptr %275, align 4
  %278 = load ptr, ptr %276, align 8
  %279 = getelementptr inbounds ptr, ptr %278, i64 %277
  %280 = load ptr, ptr %279, align 8
  %memberidx2.i.i.i.i176 = getelementptr inbounds %Module, ptr %280, i64 0, i32 3
  %281 = load ptr, ptr %memberidx2.i.i.i.i176, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %275, i64 0, i32 2
  %282 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %283 = load ptr, ptr %281, align 8
  %284 = getelementptr inbounds ptr, ptr %283, i64 %282
  %285 = load ptr, ptr %284, align 8
  %memberidx.i62.i = getelementptr inbounds %Class, ptr %285, i64 0, i32 5
  %286 = load ptr, ptr %memberidx.i62.i, align 8
  %memberidx1.i63.i = getelementptr inbounds %PropId, ptr %274, i64 0, i32 2
  %287 = load i64, ptr %memberidx1.i63.i, align 4
  %288 = load ptr, ptr %286, align 8
  %289 = getelementptr inbounds ptr, ptr %288, i64 %287
  %290 = load ptr, ptr %289, align 8
  %memberidx7.i177 = getelementptr inbounds %ClassMethod, ptr %290, i64 0, i32 1
  %291 = load i1, ptr %memberidx7.i177, align 1
  br i1 %291, label %ifend21.i188, label %if.entry8.i180

ifend.i179:                                       ; preds = %ifend.i223, %if.entry8.i180
  %memberidx13.i = getelementptr inbounds %MemberExpression, ptr %270, i64 0, i32 4
  %292 = load ptr, ptr %memberidx13.i, align 8
  %293 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %292)
  %294 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %270, ptr %293)
  store i64 1, ptr %memberidx.i.i170, align 4
  store ptr %293, ptr %269, align 8
  %295 = icmp eq ptr %294, null
  br i1 %295, label %ifend.i179.if.entry14.i_crit_edge, label %for.entry.i

ifend.i179.if.entry14.i_crit_edge:                ; preds = %ifend.i179
  %.pre = load ptr, ptr %memberidx2.i173, align 8
  %memberidx18.i.phi.trans.insert = getelementptr inbounds %Expression, ptr %.pre, i64 0, i32 2
  %.pre329 = load i64, ptr %memberidx18.i.phi.trans.insert, align 4
  br label %if.entry14.i

if.entry8.i180:                                   ; preds = %if.entry.i178
  %296 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr nonnull %275)
  %.not.i218 = icmp eq ptr %296, null
  br i1 %.not.i218, label %ifend.i223, label %ifend.i179

ifend.i223:                                       ; preds = %if.entry8.i180
  %297 = load ptr, ptr %memberidx5.i174, align 8
  %298 = load ptr, ptr %297, align 8
  %299 = load i64, ptr %275, align 4
  %300 = load ptr, ptr %298, align 8
  %301 = getelementptr inbounds ptr, ptr %300, i64 %299
  %302 = load ptr, ptr %301, align 8
  %memberidx2.i.i222 = getelementptr inbounds %Module, ptr %302, i64 0, i32 3
  %303 = load ptr, ptr %memberidx2.i.i222, align 8
  %304 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %305 = load ptr, ptr %303, align 8
  %306 = getelementptr inbounds ptr, ptr %305, i64 %304
  %307 = load ptr, ptr %306, align 8
  tail call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %307)
  tail call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %307)
  %308 = load ptr, ptr %307, align 8
  %309 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %308)
  br label %ifend.i179

if.entry14.i:                                     ; preds = %ifend.i179.if.entry14.i_crit_edge, %if.entry30
  %310 = phi i64 [ 1, %ifend.i179.if.entry14.i_crit_edge ], [ 0, %if.entry30 ]
  %311 = phi i64 [ %.pre329, %ifend.i179.if.entry14.i_crit_edge ], [ %271, %if.entry30 ]
  %312 = phi ptr [ %.pre, %ifend.i179.if.entry14.i_crit_edge ], [ %270, %if.entry30 ]
  %313 = icmp eq i64 %311, 8
  br i1 %313, label %if.entry19.i183, label %ifend21.i188

if.entry19.i183:                                  ; preds = %if.entry14.i
  %memberidx23.i = getelementptr inbounds %VarAccessExpression, ptr %312, i64 0, i32 4
  %314 = load ptr, ptr %memberidx23.i, align 8
  %memberidx24.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %315 = load ptr, ptr %memberidx24.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i66.i = getelementptr inbounds %VarId, ptr %314, i64 0, i32 1
  %316 = load i64, ptr %memberidx.i66.i, align 4
  %317 = load i64, ptr %314, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %314, i64 0, i32 2
  %318 = load i64, ptr %memberidx2.i.i, align 4
  %319 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %316, i64 %317, i64 %318)
  %320 = load ptr, ptr %4, align 8
  %321 = call ptr @malloc(i32 24)
  store ptr %320, ptr %321, align 8
  %memberidx1.i.i.i181 = getelementptr inbounds %String, ptr %321, i64 0, i32 1
  store i64 %319, ptr %memberidx1.i.i.i181, align 4
  %memberidx2.i.i.i182 = getelementptr inbounds %String, ptr %321, i64 0, i32 2
  store i64 %319, ptr %memberidx2.i.i.i182, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %322 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %321)
  %memberidx.i67.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %315, i64 0, i32 1
  %323 = load i64, ptr %memberidx.i67.i, align 4
  %324 = urem i64 %322, %323
  %325 = load ptr, ptr %315, align 8
  %326 = getelementptr inbounds ptr, ptr %325, i64 %324
  %327 = load ptr, ptr %326, align 8
  %.not.i.i310 = icmp eq ptr %327, null
  br i1 %.not.i.i310, label %ifend21.i188, label %while.body.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre332.pre = load ptr, ptr %315, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre332.pre, i64 %hash.0.i.i311
  %.pre333.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not22.i.i = icmp eq ptr %.pre333.pre, null
  br i1 %.not22.i.i, label %ifend21.i188, label %Map_String_LLVMValueRef____getitem__.exit.i

while.body.i.i:                                   ; preds = %if.entry19.i183, %else.i.i
  %328 = phi ptr [ %336, %else.i.i ], [ %325, %if.entry19.i183 ]
  %329 = phi i64 [ %337, %else.i.i ], [ %323, %if.entry19.i183 ]
  %330 = phi ptr [ %341, %else.i.i ], [ %327, %if.entry19.i183 ]
  %hash.0.i.i311 = phi i64 [ %339, %else.i.i ], [ %324, %if.entry19.i183 ]
  %331 = load ptr, ptr %330, align 8
  %memberidx.i.i68.i = getelementptr inbounds %String, ptr %331, i64 0, i32 1
  %332 = load i64, ptr %memberidx.i.i68.i, align 4
  %.not.i.i.i184 = icmp eq i64 %332, %319
  br i1 %.not.i.i.i184, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.body.i.i
  %333 = load ptr, ptr %331, align 8
  %334 = call i64 @memcmp(ptr %333, ptr %320, i64 %319)
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre330 = load i64, ptr %memberidx.i67.i, align 4
  %.pre331 = load ptr, ptr %315, align 8
  br label %else.i.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.body.i.i
  %336 = phi ptr [ %.pre331, %ifend.i.i.i.else.i.i_crit_edge ], [ %328, %while.body.i.i ]
  %337 = phi i64 [ %.pre330, %ifend.i.i.i.else.i.i_crit_edge ], [ %329, %while.body.i.i ]
  %338 = add nuw i64 %hash.0.i.i311, 1
  %339 = urem i64 %338, %337
  %340 = getelementptr inbounds ptr, ptr %336, i64 %339
  %341 = load ptr, ptr %340, align 8
  %.not.i.i = icmp eq ptr %341, null
  br i1 %.not.i.i, label %ifend21.i188, label %while.body.i.i

Map_String_LLVMValueRef____getitem__.exit.i:      ; preds = %while.end.i.i
  %memberidx10.i.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre333.pre, i64 0, i32 1
  %342 = load ptr, ptr %memberidx10.i.i, align 8
  %.not.i187 = icmp eq ptr %342, null
  br i1 %.not.i187, label %ifend21.i188, label %Array_LLVMValueRef____sl__.exit74.i

ifend21.i188:                                     ; preds = %else.i.i, %if.entry19.i183, %if.entry.i178, %while.end.i.i, %Array_LLVMValueRef____sl__.exit74.i, %Map_String_LLVMValueRef____getitem__.exit.i, %if.entry14.i
  %343 = phi i64 [ %310, %while.end.i.i ], [ %346, %Array_LLVMValueRef____sl__.exit74.i ], [ %310, %Map_String_LLVMValueRef____getitem__.exit.i ], [ %310, %if.entry14.i ], [ 0, %if.entry.i178 ], [ %310, %if.entry19.i183 ], [ %310, %else.i.i ]
  %344 = load ptr, ptr %memberidx2.i173, align 8
  %345 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %344)
  br label %for.entry.i

Array_LLVMValueRef____sl__.exit74.i:              ; preds = %Map_String_LLVMValueRef____getitem__.exit.i
  %346 = add nuw nsw i64 %310, 1
  store i64 8, ptr %memberidx1.i.i171, align 4
  store i64 %346, ptr %memberidx.i.i170, align 4
  %347 = getelementptr inbounds ptr, ptr %269, i64 %310
  store ptr %342, ptr %347, align 8
  br label %ifend21.i188

for.entry.i:                                      ; preds = %ifend21.i188, %ifend.i179
  %348 = phi i64 [ %343, %ifend21.i188 ], [ 1, %ifend.i179 ]
  %func.1.i = phi ptr [ %345, %ifend21.i188 ], [ %294, %ifend.i179 ]
  %memberidx29.i = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 5
  %349 = load ptr, ptr %memberidx29.i, align 8
  %350 = call ptr @malloc(i32 25)
  %351 = load ptr, ptr %349, align 8
  %memberidx1.i75.i = getelementptr inbounds %Array_Expression_, ptr %349, i64 0, i32 1
  %352 = load i64, ptr %memberidx1.i75.i, align 4
  store i1 false, ptr %350, align 1
  %memberidx1.i.i76.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %350, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i76.i, align 4
  %memberidx2.i.i77.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %350, i64 0, i32 3
  store ptr %351, ptr %memberidx2.i.i77.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %350, i64 0, i32 2
  store i64 %352, ptr %memberidx3.i.i.i, align 4
  %353 = icmp slt i64 %352, 1
  br i1 %353, label %CodeGen_codegen_call_exp.exit, label %for.body.i

for.body.i:                                       ; preds = %for.entry.i, %Array_LLVMValueRef____sl__.exit84.i
  %354 = phi ptr [ %367, %Array_LLVMValueRef____sl__.exit84.i ], [ %269, %for.entry.i ]
  %memberidx1.i.i171.promoted = phi i64 [ %.lcssa299, %Array_LLVMValueRef____sl__.exit84.i ], [ 8, %for.entry.i ]
  %355 = phi i64 [ %.pre-phi, %Array_LLVMValueRef____sl__.exit84.i ], [ %348, %for.entry.i ]
  %.in = phi ptr [ %372, %Array_LLVMValueRef____sl__.exit84.i ], [ %351, %for.entry.i ]
  %356 = phi i64 [ %370, %Array_LLVMValueRef____sl__.exit84.i ], [ 1, %for.entry.i ]
  %357 = load ptr, ptr %.in, align 8
  %358 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %357)
  %359 = add i64 %355, 1
  %360 = icmp slt i64 %memberidx1.i.i171.promoted, %359
  br i1 %360, label %while.body.i.i83.i, label %Array_LLVMValueRef____sl__.exit84.i

while.body.i.i83.i:                               ; preds = %for.body.i, %while.body.i.i83.i
  %361 = phi ptr [ %365, %while.body.i.i83.i ], [ %354, %for.body.i ]
  %362 = phi i64 [ %363, %while.body.i.i83.i ], [ %memberidx1.i.i171.promoted, %for.body.i ]
  %363 = shl nuw i64 %362, 1
  %364 = shl i64 %362, 4
  %365 = call ptr @realloc(ptr %361, i64 %364)
  %366 = icmp slt i64 %363, %359
  br i1 %366, label %while.body.i.i83.i, label %while.entry.i.i82.i.Array_LLVMValueRef____sl__.exit84.i_crit_edge

while.entry.i.i82.i.Array_LLVMValueRef____sl__.exit84.i_crit_edge: ; preds = %while.body.i.i83.i
  store ptr %365, ptr %268, align 8
  %.pre340 = load i64, ptr %memberidx.i.i170, align 4
  %.pre343 = add nsw i64 %.pre340, 1
  br label %Array_LLVMValueRef____sl__.exit84.i

Array_LLVMValueRef____sl__.exit84.i:              ; preds = %while.entry.i.i82.i.Array_LLVMValueRef____sl__.exit84.i_crit_edge, %for.body.i
  %.pre-phi = phi i64 [ %.pre343, %while.entry.i.i82.i.Array_LLVMValueRef____sl__.exit84.i_crit_edge ], [ %359, %for.body.i ]
  %367 = phi ptr [ %365, %while.entry.i.i82.i.Array_LLVMValueRef____sl__.exit84.i_crit_edge ], [ %354, %for.body.i ]
  %368 = phi i64 [ %.pre340, %while.entry.i.i82.i.Array_LLVMValueRef____sl__.exit84.i_crit_edge ], [ %355, %for.body.i ]
  %.lcssa299 = phi i64 [ %363, %while.entry.i.i82.i.Array_LLVMValueRef____sl__.exit84.i_crit_edge ], [ %memberidx1.i.i171.promoted, %for.body.i ]
  store i64 %.lcssa299, ptr %memberidx1.i.i171, align 4
  store i64 %.pre-phi, ptr %memberidx.i.i170, align 4
  %369 = getelementptr inbounds ptr, ptr %367, i64 %368
  store ptr %358, ptr %369, align 8
  %370 = add nuw nsw i64 %356, 1
  %371 = load ptr, ptr %memberidx2.i.i77.i, align 8
  %372 = getelementptr inbounds ptr, ptr %371, i64 %356
  %373 = load i64, ptr %memberidx3.i.i.i, align 4
  %.not = icmp slt i64 %356, %373
  br i1 %.not, label %for.body.i, label %CodeGen_codegen_call_exp.exit

CodeGen_codegen_call_exp.exit:                    ; preds = %Array_LLVMValueRef____sl__.exit84.i, %for.entry.i
  %374 = phi ptr [ %269, %for.entry.i ], [ %367, %Array_LLVMValueRef____sl__.exit84.i ]
  call void @free(ptr nonnull %350)
  %375 = load ptr, ptr %memberidx2.i173, align 8
  %memberidx32.i189 = getelementptr inbounds %Expression, ptr %375, i64 0, i32 3
  %376 = load ptr, ptr %memberidx32.i189, align 8
  %377 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %376, i1 false)
  %378 = load i64, ptr %memberidx.i.i170, align 4
  %379 = call ptr @LLVMBuildCall2(ptr %1, ptr %377, ptr %func.1.i, ptr %374, i64 %378, ptr nonnull @78)
  br label %common.ret296

CodeGen_get_expr_mem.exit232:                     ; preds = %3
  %380 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %2)
  %memberidx.i190 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %381 = load ptr, ptr %memberidx.i190, align 8
  %382 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %381, i1 true)
  %383 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %382, ptr %380, ptr nonnull @78)
  br label %common.ret296

if.entry38:                                       ; preds = %3
  %384 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr %0, ptr %1, ptr nonnull %2, ptr null)
  br label %common.ret296

if.entry42:                                       ; preds = %3
  %385 = tail call fastcc ptr @CodeGen_codegen_new_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret296

if.entry46:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i.i)
  %memberidx.i191 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %386 = load ptr, ptr %memberidx.i191, align 8
  %387 = tail call ptr @LLVMAppendBasicBlock(ptr %386, ptr nonnull @267)
  %388 = load ptr, ptr %memberidx.i191, align 8
  %389 = tail call ptr @LLVMAppendBasicBlock(ptr %388, ptr nonnull @268)
  %390 = load ptr, ptr %memberidx.i191, align 8
  %391 = tail call ptr @LLVMAppendBasicBlock(ptr %390, ptr nonnull @269)
  %memberidx3.i192 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 4
  %392 = load ptr, ptr %memberidx3.i192, align 8
  %393 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %392)
  %394 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %393, ptr %387, ptr %389)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %387)
  %memberidx4.i193 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 5
  %395 = load ptr, ptr %memberidx4.i193, align 8
  %396 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %395)
  %397 = tail call ptr @LLVMBuildBr(ptr %1, ptr %391)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %389)
  %memberidx5.i194 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 6
  %398 = load ptr, ptr %memberidx5.i194, align 8
  %399 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %398)
  %400 = tail call ptr @LLVMBuildBr(ptr %1, ptr %391)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %391)
  %401 = load ptr, ptr %memberidx4.i193, align 8
  %memberidx7.i195 = getelementptr inbounds %Expression, ptr %401, i64 0, i32 3
  %402 = load ptr, ptr %memberidx7.i195, align 8
  %403 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %402, i1 true)
  %404 = tail call ptr @LLVMBuildPhi(ptr %1, ptr %403, ptr nonnull @270)
  store ptr %396, ptr %arg_types.i.i, align 8
  %405 = getelementptr inbounds ptr, ptr %arg_types.i.i, i64 1
  store ptr %399, ptr %405, align 8
  store ptr %387, ptr %args.i.i, align 8
  %406 = getelementptr inbounds ptr, ptr %args.i.i, i64 1
  store ptr %389, ptr %406, align 8
  call void @LLVMAddIncoming(ptr %404, ptr nonnull %arg_types.i.i, ptr nonnull %args.i.i, i64 2)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i.i)
  br label %common.ret296

if.entry50:                                       ; preds = %3
  %memberidx.i196 = getelementptr inbounds %TypeCastExpression, ptr %2, i64 0, i32 4
  %407 = load ptr, ptr %memberidx.i196, align 8
  %memberidx1.i197 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %408 = load ptr, ptr %memberidx1.i197, align 8
  %409 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %407)
  %410 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %408, i1 true)
  %411 = tail call i1 @LLVMIsConstant(ptr %409)
  %412 = load i64, ptr %408, align 4
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %if.entry.i198, label %ifend.i200

if.entry.i198:                                    ; preds = %if.entry50
  br i1 %411, label %true_block.i202, label %false_block.i203

ifend.i200:                                       ; preds = %if.entry50
  %memberidx2.i199 = getelementptr inbounds %Expression, ptr %407, i64 0, i32 3
  %414 = load ptr, ptr %memberidx2.i199, align 8
  %415 = load i64, ptr %414, align 4
  %416 = add i64 %415, -1
  %417 = icmp ult i64 %416, 7
  %418 = and i64 %412, -2
  %419 = icmp eq i64 %418, 8
  %420 = and i1 %419, %417
  br i1 %420, label %if.entry3.i205, label %else4.i

true_block.i202:                                  ; preds = %if.entry.i198
  %421 = tail call i1 @LLVMIsNull(ptr %409)
  %422 = xor i1 %421, true
  %423 = tail call ptr @LLVMInt1Type()
  %..i.i201 = zext i1 %422 to i64
  %424 = tail call ptr @LLVMConstInt(ptr %423, i64 %..i.i201, i1 false)
  br label %common.ret296

false_block.i203:                                 ; preds = %if.entry.i198
  %425 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %409, ptr nonnull @78)
  br label %common.ret296

if.entry3.i205:                                   ; preds = %ifend.i200
  br i1 %411, label %true_block6.i, label %false_block7.i

else4.i:                                          ; preds = %ifend.i200
  %426 = and i64 %415, -2
  %427 = icmp eq i64 %426, 8
  %428 = add i64 %412, -1
  %429 = icmp ult i64 %428, 7
  %430 = and i1 %429, %427
  br i1 %430, label %if.entry11.i206, label %else12.i207

true_block6.i:                                    ; preds = %if.entry3.i205
  %431 = tail call ptr @LLVMConstSIToFP(ptr %409, ptr %410)
  br label %common.ret296

false_block7.i:                                   ; preds = %if.entry3.i205
  %432 = tail call ptr @LLVMBuildSIToFP(ptr %1, ptr %409, ptr %410, ptr nonnull @78)
  br label %common.ret296

if.entry11.i206:                                  ; preds = %else4.i
  br i1 %411, label %true_block14.i, label %false_block15.i

else12.i207:                                      ; preds = %else4.i
  %433 = and i1 %429, %417
  br i1 %433, label %if.entry19.i208, label %else20.i

true_block14.i:                                   ; preds = %if.entry11.i206
  %434 = tail call ptr @LLVMConstFPToSI(ptr %409, ptr %410)
  br label %common.ret296

false_block15.i:                                  ; preds = %if.entry11.i206
  %435 = tail call ptr @LLVMBuildFPToSI(ptr %1, ptr %409, ptr %410, ptr nonnull @78)
  br label %common.ret296

if.entry19.i208:                                  ; preds = %else12.i207
  %memberidx25.i = getelementptr inbounds %IntType, ptr %408, i64 0, i32 1
  %436 = load i1, ptr %memberidx25.i, align 1
  br i1 %411, label %true_block22.i, label %false_block23.i

else20.i:                                         ; preds = %else12.i207
  %437 = and i1 %419, %427
  br i1 %437, label %if.entry29.i, label %ifend31.i

true_block22.i:                                   ; preds = %if.entry19.i208
  %438 = tail call ptr @LLVMConstIntCast(ptr %409, ptr %410, i1 %436)
  br label %common.ret296

false_block23.i:                                  ; preds = %if.entry19.i208
  %439 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %409, ptr %410, i1 %436, ptr nonnull @78)
  br label %common.ret296

if.entry29.i:                                     ; preds = %else20.i
  br i1 %411, label %true_block32.i, label %false_block33.i

ifend31.i:                                        ; preds = %else20.i
  br i1 %411, label %true_block36.i, label %false_block37.i

true_block32.i:                                   ; preds = %if.entry29.i
  %440 = tail call ptr @LLVMConstFPCast(ptr %409, ptr %410)
  br label %common.ret296

false_block33.i:                                  ; preds = %if.entry29.i
  %441 = tail call ptr @LLVMBuildFPCast(ptr %1, ptr %409, ptr %410, ptr nonnull @78)
  br label %common.ret296

true_block36.i:                                   ; preds = %ifend31.i
  %442 = tail call ptr @LLVMConstBitCast(ptr %409, ptr %410)
  br label %common.ret296

false_block37.i:                                  ; preds = %ifend31.i
  %443 = tail call ptr @LLVMBuildBitCast(ptr %1, ptr %409, ptr %410, ptr nonnull @78)
  br label %common.ret296

if.entry54:                                       ; preds = %3
  %444 = tail call fastcc ptr @CodeGen_codegen_array_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret296

if.entry58:                                       ; preds = %3
  %445 = tail call fastcc ptr @CodeGen_codegen_tuple_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret296

if.entry62:                                       ; preds = %3
  %446 = tail call fastcc ptr @CodeGen_codegen_match_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret296

if.entry66:                                       ; preds = %3
  %447 = tail call fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret296

if.entry70:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args.i)
  %memberidx.i209 = getelementptr inbounds %RangeExpression, ptr %2, i64 0, i32 4
  %448 = load ptr, ptr %memberidx.i209, align 8
  %449 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %448)
  %memberidx1.i210 = getelementptr inbounds %RangeExpression, ptr %2, i64 0, i32 5
  %450 = load ptr, ptr %memberidx1.i210, align 8
  %451 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %450)
  %memberidx2.i211 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %452 = load ptr, ptr %memberidx2.i211, align 8
  %453 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %452, i1 false)
  %454 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %453, ptr nonnull @78)
  store ptr %454, ptr %args.i, align 8
  %455 = getelementptr inbounds ptr, ptr %args.i, i64 1
  store ptr %449, ptr %455, align 8
  %456 = getelementptr inbounds ptr, ptr %args.i, i64 2
  store ptr %451, ptr %456, align 8
  %457 = load ptr, ptr %memberidx2.i211, align 8
  %memberidx.i233 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %458 = load i64, ptr %457, align 4
  %cond317 = icmp eq i64 %458, 20
  br i1 %cond317, label %if.entry.i269, label %get_class_from_type.exit

if.entry.i269:                                    ; preds = %if.entry70, %if.entry.i269
  %.tr11.i318 = phi ptr [ %459, %if.entry.i269 ], [ %457, %if.entry70 ]
  %memberidx1.i268 = getelementptr inbounds %GenericType, ptr %.tr11.i318, i64 0, i32 3
  %459 = load ptr, ptr %memberidx1.i268, align 8
  %460 = load i64, ptr %459, align 4
  %cond = icmp eq i64 %460, 20
  br i1 %cond, label %if.entry.i269, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i269, %if.entry70
  %memberidx1.i234 = getelementptr inbounds %ObjectType, ptr %457, i64 0, i32 1
  %461 = load ptr, ptr %memberidx1.i234, align 8
  %462 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %461)
  %.not.i239 = icmp eq ptr %462, null
  br i1 %.not.i239, label %ifend.i245, label %CodeGen_get_or_codegen_class_from_typeid.exit246

ifend.i245:                                       ; preds = %get_class_from_type.exit
  %463 = load ptr, ptr %memberidx.i233, align 8
  %464 = load ptr, ptr %463, align 8
  %465 = load i64, ptr %461, align 4
  %466 = load ptr, ptr %464, align 8
  %467 = getelementptr inbounds ptr, ptr %466, i64 %465
  %468 = load ptr, ptr %467, align 8
  %memberidx2.i.i243 = getelementptr inbounds %Module, ptr %468, i64 0, i32 3
  %469 = load ptr, ptr %memberidx2.i.i243, align 8
  %memberidx3.i.i244 = getelementptr inbounds %TypeId, ptr %461, i64 0, i32 2
  %470 = load i64, ptr %memberidx3.i.i244, align 4
  %471 = load ptr, ptr %469, align 8
  %472 = getelementptr inbounds ptr, ptr %471, i64 %470
  %473 = load ptr, ptr %472, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %473)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %473)
  %474 = load ptr, ptr %473, align 8
  %475 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %474)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit246

CodeGen_get_or_codegen_class_from_typeid.exit246: ; preds = %get_class_from_type.exit, %ifend.i245
  %common.ret.op.i240 = phi ptr [ %475, %ifend.i245 ], [ %462, %get_class_from_type.exit ]
  %memberidx2.i235 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i240, i64 0, i32 4
  %476 = load ptr, ptr %memberidx2.i235, align 8
  %.not.i236 = icmp eq ptr %476, null
  br i1 %.not.i236, label %else.i, label %if.entry.i237

if.entry.i237:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit246
  %477 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %476)
  %478 = call ptr @LLVMBuildCall2(ptr %1, ptr %477, ptr nonnull %476, ptr nonnull %args.i, i64 3, ptr nonnull @78)
  br label %CodeGen_build_constructor_call.exit

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit246
  %479 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %479, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %480 = tail call ptr @malloc(i32 24)
  %481 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %481, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %482 = tail call ptr @malloc(i32 24)
  %483 = tail call i64 @write(i64 1, ptr %481, i64 7)
  tail call void @free(ptr %481)
  tail call void @free(ptr %482)
  %484 = tail call i64 @write(i64 1, ptr %479, i64 47)
  %485 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %479)
  tail call void @free(ptr %480)
  tail call void @exit(i64 -1)
  br label %CodeGen_build_constructor_call.exit

CodeGen_build_constructor_call.exit:              ; preds = %if.entry.i237, %else.i
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args.i)
  br label %common.ret296
}

define internal fastcc void @Map_String_CGEnumType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx8 = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx8, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %9, align 4
  %memberidx1.i = getelementptr inbounds %Range, ptr %9, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i, align 4
  %10 = tail call ptr @malloc(i32 17)
  %11 = icmp slt i64 %8, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %13 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %14 = load ptr, ptr %0, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  store ptr null, ptr %15, align 8
  %.not55 = icmp slt i64 %12, %8
  %16 = add nuw nsw i64 %12, 1
  br i1 %.not55, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %10)
  %17 = tail call ptr @malloc(i32 16)
  store i64 0, ptr %17, align 4
  %memberidx1.i39 = getelementptr inbounds %Range, ptr %17, i64 0, i32 1
  store i64 %1, ptr %memberidx1.i39, align 4
  %18 = tail call ptr @malloc(i32 17)
  %memberidx.i.i41 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i41, align 4
  %memberidx1.i.i42 = getelementptr inbounds %RangeIterator, ptr %18, i64 0, i32 2
  store i64 %1, ptr %memberidx1.i.i42, align 4
  %19 = icmp slt i64 %1, 1
  br i1 %19, label %for.end18, label %for.body17

for.body17:                                       ; preds = %for.end, %ifend
  %20 = phi i64 [ %26, %ifend ], [ 1, %for.end ]
  %21 = phi i64 [ %20, %ifend ], [ 0, %for.end ]
  %22 = getelementptr inbounds ptr, ptr %2, i64 %21
  %23 = load ptr, ptr %22, align 8
  %.not = icmp eq ptr %23, null
  br i1 %.not, label %ifend, label %if.entry

for.end18:                                        ; preds = %ifend, %for.end
  tail call void @free(ptr nonnull %18)
  ret void

if.entry:                                         ; preds = %for.body17
  %24 = load ptr, ptr %23, align 8
  %memberidx21 = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx21, align 8
  tail call fastcc void @Map_String_CGEnumType____setitem__(ptr nonnull %0, ptr %24, ptr %25)
  br label %ifend

ifend:                                            ; preds = %for.body17, %if.entry
  %.not56 = icmp slt i64 %20, %1
  %26 = add nuw nsw i64 %20, 1
  br i1 %.not56, label %for.body17, label %for.end18
}

define internal fastcc void @Map_String_CGEnumType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_CGEnumType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_CGEnumType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not35 = icmp eq ptr %15, null
  br i1 %.not35, label %if.entry10, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %ifend
  %memberidx1.i31 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %ifend8
  %16 = phi ptr [ %13, %while.body.lr.ph ], [ %26, %ifend8 ]
  %17 = phi i64 [ %11, %while.body.lr.ph ], [ %27, %ifend8 ]
  %18 = phi ptr [ %15, %while.body.lr.ph ], [ %31, %ifend8 ]
  %hash.036 = phi i64 [ %12, %while.body.lr.ph ], [ %29, %ifend8 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i31, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.body
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend12.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre38 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.body
  %26 = phi ptr [ %.pre38, %ifend.i.ifend8_crit_edge ], [ %16, %while.body ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.body ]
  %28 = add nuw i64 %hash.036, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not = icmp eq ptr %31, null
  br i1 %.not, label %if.entry10, label %while.body

if.entry10:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.0.lcssa = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend12

ifend12.loopexit:                                 ; preds = %ifend.i
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend12

ifend12:                                          ; preds = %ifend12.loopexit, %if.entry10
  %35 = phi ptr [ %32, %if.entry10 ], [ %.pre39, %ifend12.loopexit ]
  %hash.034 = phi i64 [ %hash.0.lcssa, %if.entry10 ], [ %hash.036, %ifend12.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.034
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_CGEnumType__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = tail call ptr @malloc(i32 16)
  %13 = call ptr @malloc(i32 17)
  %14 = icmp slt i64 %9, 1
  br i1 %14, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %15 = phi i64 [ %22, %for.body ], [ 1, %for.entry ]
  %hash.02 = phi i64 [ %21, %for.body ], [ 0, %for.entry ]
  %16 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %17 = shl i64 %hash.02, 1
  %18 = getelementptr inbounds i8, ptr %10, i64 %16
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i64
  %21 = add nuw i64 %17, %20
  %.not = icmp slt i64 %15, %9
  %22 = add nuw nsw i64 %15, 1
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %21, %for.body ]
  tail call void @free(ptr nonnull %13)
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_codegen_new_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 6
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 13
  br i1 %7, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %8 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %4, i1 true)
  %memberidx2 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %11)
  %memberidx3 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %13 = load i1, ptr %memberidx3, align 1
  br i1 %13, label %if.entry4, label %else5

else:                                             ; preds = %3
  %14 = load i64, ptr %4, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i55, label %is_object.exit

if.entry.i55:                                     ; preds = %else, %if.entry.i55
  %.tr5.i = phi ptr [ %16, %if.entry.i55 ], [ %4, %else ]
  %memberidx1.i54 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i54, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 20
  br i1 %18, label %if.entry.i55, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i55, %else
  %.lcssa.i = phi i64 [ %14, %else ], [ %17, %if.entry.i55 ]
  %19 = icmp eq i64 %.lcssa.i, 11
  br i1 %19, label %if.entry7, label %ifend

ifend:                                            ; preds = %else.i, %if.entry.i, %is_object.exit, %if.entry4, %else5
  %ptr.0 = phi ptr [ %20, %if.entry4 ], [ %21, %else5 ], [ null, %is_object.exit ], [ %ptr.1, %if.entry.i ], [ %ptr.1, %else.i ]
  ret ptr %ptr.0

if.entry4:                                        ; preds = %if.entry
  %20 = tail call ptr @LLVMBuildArrayMalloc(ptr %1, ptr %8, ptr %12, ptr nonnull @78)
  br label %ifend

else5:                                            ; preds = %if.entry
  %21 = tail call ptr @LLVMBuildArrayAlloca(ptr %1, ptr %8, ptr %12, ptr nonnull @78)
  br label %ifend

if.entry7:                                        ; preds = %is_object.exit
  %memberidx10 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %22 = load ptr, ptr %memberidx10, align 8
  %memberidx11 = getelementptr inbounds %Array_Expression_, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx11, align 4
  %24 = add nuw i64 %23, 1
  %25 = alloca ptr, i64 %24, align 8
  %26 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %4, i1 false)
  %memberidx12 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %27 = load i1, ptr %memberidx12, align 1
  br i1 %27, label %if.entry13, label %else14

if.entry13:                                       ; preds = %if.entry7
  %28 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %26, ptr nonnull @78)
  br label %ifend15

else14:                                           ; preds = %if.entry7
  %29 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %26, ptr nonnull @78)
  br label %ifend15

ifend15:                                          ; preds = %else14, %if.entry13
  %ptr.1 = phi ptr [ %28, %if.entry13 ], [ %29, %else14 ]
  store ptr %ptr.1, ptr %25, align 8
  %30 = load ptr, ptr %memberidx10, align 8
  %31 = tail call ptr @malloc(i32 25)
  %32 = load ptr, ptr %30, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Expression_, ptr %30, i64 0, i32 1
  %33 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %31, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 3
  store ptr %32, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 2
  store i64 %33, ptr %memberidx3.i.i.i, align 4
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend15, %for.body.i
  %.in = phi ptr [ %40, %for.body.i ], [ %32, %ifend15 ]
  %35 = phi i64 [ %37, %for.body.i ], [ 1, %ifend15 ]
  %36 = load ptr, ptr %.in, align 8
  %37 = add nuw nsw i64 %35, 1
  %38 = getelementptr inbounds ptr, ptr %25, i64 %35
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %36)
  store ptr %39, ptr %38, align 8
  %40 = getelementptr inbounds ptr, ptr %32, i64 %35
  %.not = icmp slt i64 %35, %33
  br i1 %.not, label %for.body.i, label %CodeGen_evaluate_expression_list.exit

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend15
  tail call void @free(ptr nonnull %31)
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %41 = load i64, ptr %4, align 4
  %cond62 = icmp eq i64 %41, 20
  br i1 %cond62, label %if.entry.i59, label %get_class_from_type.exit

if.entry.i59:                                     ; preds = %CodeGen_evaluate_expression_list.exit, %if.entry.i59
  %.tr11.i63 = phi ptr [ %42, %if.entry.i59 ], [ %4, %CodeGen_evaluate_expression_list.exit ]
  %memberidx1.i58 = getelementptr inbounds %GenericType, ptr %.tr11.i63, i64 0, i32 3
  %42 = load ptr, ptr %memberidx1.i58, align 8
  %43 = load i64, ptr %42, align 4
  %cond = icmp eq i64 %43, 20
  br i1 %cond, label %if.entry.i59, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i59, %CodeGen_evaluate_expression_list.exit
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %4, i64 0, i32 1
  %44 = load ptr, ptr %memberidx1.i, align 8
  %45 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %44)
  %.not.i44 = icmp eq ptr %45, null
  br i1 %.not.i44, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %46 = load ptr, ptr %memberidx.i, align 8
  %47 = load ptr, ptr %46, align 8
  %48 = load i64, ptr %44, align 4
  %49 = load ptr, ptr %47, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  %51 = load ptr, ptr %50, align 8
  %memberidx2.i.i47 = getelementptr inbounds %Module, ptr %51, i64 0, i32 3
  %52 = load ptr, ptr %memberidx2.i.i47, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %44, i64 0, i32 2
  %53 = load i64, ptr %memberidx3.i.i, align 4
  %54 = load ptr, ptr %52, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %56)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %56)
  %57 = load ptr, ptr %56, align 8
  %58 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %57)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %58, %ifend.i ], [ %45, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 4
  %59 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %60 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %59)
  %61 = call ptr @LLVMBuildCall2(ptr %1, ptr %60, ptr nonnull %59, ptr nonnull %25, i64 %24, ptr nonnull @78)
  br label %ifend

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %62 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %62, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %63 = tail call ptr @malloc(i32 24)
  %64 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %64, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %65 = tail call ptr @malloc(i32 24)
  %66 = tail call i64 @write(i64 1, ptr %64, i64 7)
  tail call void @free(ptr %64)
  tail call void @free(ptr %65)
  %67 = tail call i64 @write(i64 1, ptr %62, i64 47)
  %68 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %62)
  tail call void @free(ptr %63)
  tail call void @exit(i64 -1)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %arg_types.i124 = alloca [3 x ptr], align 8
  %arg_types.i114 = alloca [2 x ptr], align 8
  %args.i = alloca [1 x ptr], align 8
  %arg_types.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = icmp slt i64 %4, 3
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %memberidx1, align 8
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %8)
  %10 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %9)
  switch i64 %4, label %ifend10 [
    i64 0, label %if.entry2
    i64 1, label %if.entry5
    i64 2, label %if.entry8
  ]

ifend:                                            ; preds = %3
  %memberidx12 = getelementptr inbounds %Array_Expression_, ptr %6, i64 0, i32 1
  %11 = load i64, ptr %memberidx12, align 4
  %12 = alloca ptr, i64 %11, align 8
  %13 = tail call ptr @malloc(i32 25)
  %14 = load ptr, ptr %6, align 8
  %15 = load i64, ptr %memberidx12, align 4
  store i1 false, ptr %13, align 1
  %memberidx1.i.i.i138 = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i138, align 4
  %memberidx2.i.i.i139 = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 3
  store ptr %14, ptr %memberidx2.i.i.i139, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 2
  store i64 %15, ptr %memberidx3.i.i.i, align 4
  %16 = icmp slt i64 %15, 1
  br i1 %16, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend, %for.body.i
  %.in = phi ptr [ %23, %for.body.i ], [ %14, %ifend ]
  %17 = phi i64 [ %22, %for.body.i ], [ 1, %ifend ]
  %start.0.i151 = phi i64 [ %19, %for.body.i ], [ 0, %ifend ]
  %18 = load ptr, ptr %.in, align 8
  %19 = add nuw nsw i64 %start.0.i151, 1
  %20 = getelementptr inbounds ptr, ptr %12, i64 %start.0.i151
  %21 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %18)
  store ptr %21, ptr %20, align 8
  %22 = add nuw nsw i64 %17, 1
  %23 = getelementptr inbounds ptr, ptr %14, i64 %17
  %.not = icmp slt i64 %17, %15
  br i1 %.not, label %for.body.i, label %CodeGen_evaluate_expression_list.exit

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend
  tail call void @free(ptr nonnull %13)
  %24 = load ptr, ptr %memberidx1, align 8
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %25, align 8
  %memberidx15 = getelementptr inbounds %Expression, ptr %26, i64 0, i32 3
  %27 = load ptr, ptr %memberidx15, align 8
  %memberidx16 = getelementptr inbounds %PointerType, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx16, align 8
  %29 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %28, i1 true)
  %30 = tail call ptr @LLVMSizeOf(ptr %29)
  %31 = icmp eq i64 %4, 6
  br i1 %31, label %if.entry17, label %ifend19

if.entry2:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %32 = tail call ptr @LLVMInt8Type()
  %33 = tail call ptr @LLVMPointerType(ptr %32, i64 0)
  store ptr %33, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %34 = tail call ptr @LLVMDoubleType()
  %35 = load ptr, ptr %0, align 8
  %36 = tail call ptr @malloc(i32 4)
  store i32 1718580321, ptr %36, align 8
  %37 = tail call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %37, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %37, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i, align 4
  %38 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i = getelementptr inbounds %IntrinsicResult, ptr %38, i64 0, i32 1
  store i64 0, ptr %38, align 8
  %39 = call ptr @LLVMFunctionType(ptr %34, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %39, ptr %memberidx1.i.i4.i, align 8
  %40 = call ptr @malloc(i32 5)
  %41 = load i32, ptr %36, align 8
  store i32 %41, ptr %40, align 8
  %42 = getelementptr inbounds i8, ptr %40, i64 4
  store i8 0, ptr %42, align 1
  %43 = call ptr @LLVMGetNamedFunction(ptr %35, ptr nonnull %40)
  %.not.i.i = icmp eq ptr %43, null
  br i1 %.not.i.i, label %else.i.i, label %ifend4.thread

else.i.i:                                         ; preds = %if.entry2
  %44 = call ptr @LLVMAddFunction(ptr %35, ptr nonnull %40, ptr %39)
  br label %ifend4.thread

ifend4.thread:                                    ; preds = %else.i.i, %if.entry2
  %storemerge.i.i = phi ptr [ %44, %else.i.i ], [ %43, %if.entry2 ]
  store ptr %storemerge.i.i, ptr %38, align 8
  %45 = call ptr @LLVMBuildCall2(ptr %1, ptr %39, ptr %storemerge.i.i, ptr nonnull %args.i, i64 1, ptr nonnull @78)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

if.entry5:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %46 = tail call ptr @LLVMInt8Type()
  %47 = tail call ptr @LLVMPointerType(ptr %46, i64 0)
  store ptr %47, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %48 = tail call ptr @LLVMInt32Type()
  %49 = load ptr, ptr %0, align 8
  %50 = tail call ptr @malloc(i32 4)
  store i32 1768911969, ptr %50, align 8
  %51 = tail call ptr @malloc(i32 24)
  store ptr %50, ptr %51, align 8
  %memberidx1.i.i.i92 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i92, align 4
  %memberidx2.i.i.i93 = getelementptr inbounds %String, ptr %51, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i93, align 4
  %52 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i94 = getelementptr inbounds %IntrinsicResult, ptr %52, i64 0, i32 1
  store i64 0, ptr %52, align 8
  %53 = call ptr @LLVMFunctionType(ptr %48, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %53, ptr %memberidx1.i.i4.i94, align 8
  %54 = call ptr @malloc(i32 5)
  %55 = load i32, ptr %50, align 8
  store i32 %55, ptr %54, align 8
  %56 = getelementptr inbounds i8, ptr %54, i64 4
  store i8 0, ptr %56, align 1
  %57 = call ptr @LLVMGetNamedFunction(ptr %49, ptr nonnull %54)
  %.not.i.i97 = icmp eq ptr %57, null
  br i1 %.not.i.i97, label %else.i.i99, label %CodeGen_codegen_atoi_call.exit

else.i.i99:                                       ; preds = %if.entry5
  %58 = call ptr @LLVMAddFunction(ptr %49, ptr nonnull %54, ptr %53)
  br label %CodeGen_codegen_atoi_call.exit

CodeGen_codegen_atoi_call.exit:                   ; preds = %if.entry5, %else.i.i99
  %storemerge.i.i100 = phi ptr [ %58, %else.i.i99 ], [ %57, %if.entry5 ]
  store ptr %storemerge.i.i100, ptr %52, align 8
  %59 = call ptr @LLVMBuildCall2(ptr %1, ptr %53, ptr %storemerge.i.i100, ptr nonnull %args.i, i64 1, ptr nonnull @78)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

if.entry8:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %60 = tail call ptr @LLVMInt8Type()
  %61 = tail call ptr @LLVMPointerType(ptr %60, i64 0)
  store ptr %61, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %62 = tail call ptr @LLVMInt64Type()
  %63 = load ptr, ptr %0, align 8
  %64 = tail call ptr @malloc(i32 4)
  store i32 1819243617, ptr %64, align 8
  %65 = tail call ptr @malloc(i32 24)
  store ptr %64, ptr %65, align 8
  %memberidx1.i.i.i104 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i104, align 4
  %memberidx2.i.i.i105 = getelementptr inbounds %String, ptr %65, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i105, align 4
  %66 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i106 = getelementptr inbounds %IntrinsicResult, ptr %66, i64 0, i32 1
  store i64 0, ptr %66, align 8
  %67 = call ptr @LLVMFunctionType(ptr %62, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %67, ptr %memberidx1.i.i4.i106, align 8
  %68 = call ptr @malloc(i32 5)
  %69 = load i32, ptr %64, align 8
  store i32 %69, ptr %68, align 8
  %70 = getelementptr inbounds i8, ptr %68, i64 4
  store i8 0, ptr %70, align 1
  %71 = call ptr @LLVMGetNamedFunction(ptr %63, ptr nonnull %68)
  %.not.i.i109 = icmp eq ptr %71, null
  br i1 %.not.i.i109, label %else.i.i111, label %CodeGen_codegen_atol_call.exit

else.i.i111:                                      ; preds = %if.entry8
  %72 = call ptr @LLVMAddFunction(ptr %63, ptr nonnull %68, ptr %67)
  br label %CodeGen_codegen_atol_call.exit

CodeGen_codegen_atol_call.exit:                   ; preds = %if.entry8, %else.i.i111
  %storemerge.i.i112 = phi ptr [ %72, %else.i.i111 ], [ %71, %if.entry8 ]
  store ptr %storemerge.i.i112, ptr %66, align 8
  %73 = call ptr @LLVMBuildCall2(ptr %1, ptr %67, ptr %storemerge.i.i112, ptr nonnull %args.i, i64 1, ptr nonnull @78)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

common.ret:                                       ; preds = %ifend31, %if.entry29, %if.entry26, %if.entry23, %CodeGen_codegen_memcmp_call.exit, %CodeGen_codegen_realloc_call.exit, %ifend10
  %common.ret.op = phi ptr [ %value.2, %ifend10 ], [ %91, %CodeGen_codegen_realloc_call.exit ], [ %110, %CodeGen_codegen_memcmp_call.exit ], [ %118, %if.entry23 ], [ %120, %if.entry26 ], [ %121, %if.entry29 ], [ null, %ifend31 ]
  ret ptr %common.ret.op

ifend10:                                          ; preds = %if.entry, %CodeGen_codegen_atoi_call.exit, %ifend4.thread, %CodeGen_codegen_atol_call.exit
  %value.2 = phi ptr [ %73, %CodeGen_codegen_atol_call.exit ], [ %45, %ifend4.thread ], [ %59, %CodeGen_codegen_atoi_call.exit ], [ null, %if.entry ]
  %74 = call ptr @LLVMBuildFree(ptr %1, ptr %10)
  br label %common.ret

if.entry17:                                       ; preds = %CodeGen_evaluate_expression_list.exit
  %75 = getelementptr inbounds ptr, ptr %12, i64 1
  %76 = load ptr, ptr %75, align 8
  %77 = tail call ptr @LLVMBuildMul(ptr %1, ptr %76, ptr %30, ptr nonnull @78)
  store ptr %77, ptr %75, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i114)
  %78 = tail call ptr @LLVMInt8Type()
  %79 = tail call ptr @LLVMPointerType(ptr %78, i64 0)
  store ptr %79, ptr %arg_types.i114, align 8
  %80 = getelementptr inbounds ptr, ptr %arg_types.i114, i64 1
  %81 = tail call ptr @LLVMIntType(i64 64)
  store ptr %81, ptr %80, align 8
  %82 = load ptr, ptr %0, align 8
  %83 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %83, ptr noundef nonnull align 8 dereferenceable(7) @245, i64 7, i1 false)
  %84 = tail call ptr @malloc(i32 24)
  store ptr %83, ptr %84, align 8
  %memberidx1.i.i.i115 = getelementptr inbounds %String, ptr %84, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i.i115, align 4
  %memberidx2.i.i.i116 = getelementptr inbounds %String, ptr %84, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i.i116, align 4
  %85 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i5.i = getelementptr inbounds %IntrinsicResult, ptr %85, i64 0, i32 1
  store i64 0, ptr %85, align 8
  %86 = call ptr @LLVMFunctionType(ptr %79, ptr nonnull %arg_types.i114, i64 2, i1 false)
  store ptr %86, ptr %memberidx1.i.i5.i, align 8
  %87 = call ptr @malloc(i32 8)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %87, ptr noundef nonnull align 8 dereferenceable(7) %83, i64 7, i1 false)
  %88 = getelementptr inbounds i8, ptr %87, i64 7
  store i8 0, ptr %88, align 1
  %89 = call ptr @LLVMGetNamedFunction(ptr %82, ptr %87)
  %.not.i.i119 = icmp eq ptr %89, null
  br i1 %.not.i.i119, label %else.i.i121, label %CodeGen_codegen_realloc_call.exit

else.i.i121:                                      ; preds = %if.entry17
  %90 = call ptr @LLVMAddFunction(ptr %82, ptr nonnull %87, ptr %86)
  br label %CodeGen_codegen_realloc_call.exit

CodeGen_codegen_realloc_call.exit:                ; preds = %if.entry17, %else.i.i121
  %storemerge.i.i122 = phi ptr [ %90, %else.i.i121 ], [ %89, %if.entry17 ]
  store ptr %storemerge.i.i122, ptr %85, align 8
  %91 = call ptr @LLVMBuildCall2(ptr %1, ptr %86, ptr %storemerge.i.i122, ptr nonnull %12, i64 2, ptr nonnull @78)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i114)
  br label %common.ret

ifend19:                                          ; preds = %CodeGen_evaluate_expression_list.exit
  %92 = getelementptr inbounds ptr, ptr %12, i64 2
  %93 = load ptr, ptr %92, align 8
  %94 = tail call ptr @LLVMBuildMul(ptr %1, ptr %93, ptr %30, ptr nonnull @78)
  store ptr %94, ptr %92, align 8
  %95 = icmp eq i64 %4, 7
  br i1 %95, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %ifend19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %arg_types.i124)
  %96 = tail call ptr @LLVMInt8Type()
  %97 = tail call ptr @LLVMPointerType(ptr %96, i64 0)
  %98 = tail call ptr @LLVMIntType(i64 64)
  store ptr %97, ptr %arg_types.i124, align 8
  %99 = getelementptr inbounds ptr, ptr %arg_types.i124, i64 1
  store ptr %97, ptr %99, align 8
  %100 = getelementptr inbounds ptr, ptr %arg_types.i124, i64 2
  store ptr %98, ptr %100, align 8
  %101 = load ptr, ptr %0, align 8
  %102 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %102, ptr noundef nonnull align 8 dereferenceable(6) @246, i64 6, i1 false)
  %103 = tail call ptr @malloc(i32 24)
  store ptr %102, ptr %103, align 8
  %memberidx1.i.i.i125 = getelementptr inbounds %String, ptr %103, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i.i125, align 4
  %memberidx2.i.i.i126 = getelementptr inbounds %String, ptr %103, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i.i126, align 4
  %104 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i6.i = getelementptr inbounds %IntrinsicResult, ptr %104, i64 0, i32 1
  store i64 0, ptr %104, align 8
  %105 = call ptr @LLVMFunctionType(ptr %98, ptr nonnull %arg_types.i124, i64 3, i1 false)
  store ptr %105, ptr %memberidx1.i.i6.i, align 8
  %106 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %106, ptr noundef nonnull align 8 dereferenceable(6) %102, i64 6, i1 false)
  %107 = getelementptr inbounds i8, ptr %106, i64 6
  store i8 0, ptr %107, align 1
  %108 = call ptr @LLVMGetNamedFunction(ptr %101, ptr %106)
  %.not.i.i129 = icmp eq ptr %108, null
  br i1 %.not.i.i129, label %else.i.i131, label %CodeGen_codegen_memcmp_call.exit

else.i.i131:                                      ; preds = %if.entry20
  %109 = call ptr @LLVMAddFunction(ptr %101, ptr nonnull %106, ptr %105)
  br label %CodeGen_codegen_memcmp_call.exit

CodeGen_codegen_memcmp_call.exit:                 ; preds = %if.entry20, %else.i.i131
  %storemerge.i.i132 = phi ptr [ %109, %else.i.i131 ], [ %108, %if.entry20 ]
  store ptr %storemerge.i.i132, ptr %104, align 8
  %110 = call ptr @LLVMBuildCall2(ptr %1, ptr %105, ptr %storemerge.i.i132, ptr nonnull %12, i64 3, ptr nonnull @78)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %arg_types.i124)
  br label %common.ret

ifend22:                                          ; preds = %ifend19
  %111 = load ptr, ptr %12, align 8
  %112 = tail call i64 @LLVMGetAlignment(ptr %111)
  %113 = icmp eq i64 %4, 5
  %114 = getelementptr inbounds ptr, ptr %12, i64 1
  %115 = load ptr, ptr %114, align 8
  br i1 %113, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %ifend22
  %116 = tail call ptr @LLVMInt8Type()
  %117 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %115, ptr %116, i1 false, ptr nonnull @78)
  %118 = tail call ptr @LLVMBuildMemSet(ptr %1, ptr %111, ptr %117, ptr %94, i64 %112)
  br label %common.ret

ifend25:                                          ; preds = %ifend22
  %119 = tail call i64 @LLVMGetAlignment(ptr %115)
  switch i64 %4, label %ifend31 [
    i64 3, label %if.entry26
    i64 4, label %if.entry29
  ]

if.entry26:                                       ; preds = %ifend25
  %120 = tail call ptr @LLVMBuildMemCpy(ptr %1, ptr %111, i64 %112, ptr %115, i64 %119, ptr %94)
  br label %common.ret

if.entry29:                                       ; preds = %ifend25
  %121 = tail call ptr @LLVMBuildMemMove(ptr %1, ptr %111, i64 %112, ptr %115, i64 %119, ptr %94)
  br label %common.ret

ifend31:                                          ; preds = %ifend25
  %122 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %122, ptr noundef nonnull align 8 dereferenceable(21) @280, i64 21, i1 false)
  %123 = tail call ptr @malloc(i32 24)
  %124 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %124, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %125 = tail call ptr @malloc(i32 24)
  %126 = tail call i64 @write(i64 1, ptr %124, i64 7)
  tail call void @free(ptr %124)
  tail call void @free(ptr %125)
  %127 = tail call i64 @write(i64 1, ptr %122, i64 21)
  %128 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %122)
  tail call void @free(ptr %123)
  tail call void @exit(i64 -1)
  br label %common.ret
}

declare ptr @LLVMModuleCreateWithName(ptr) local_unnamed_addr

declare i1 @LLVMIsConstant(ptr) local_unnamed_addr

declare ptr @LLVMConstNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstInt(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMInt1Type() local_unnamed_addr

declare ptr @LLVMIntType(i64) local_unnamed_addr

declare ptr @LLVMVoidType() local_unnamed_addr

declare ptr @LLVMInt8Type() local_unnamed_addr

declare ptr @LLVMInt16Type() local_unnamed_addr

declare ptr @LLVMInt32Type() local_unnamed_addr

declare ptr @LLVMInt64Type() local_unnamed_addr

declare ptr @LLVMInt128Type() local_unnamed_addr

declare ptr @LLVMFloatType() local_unnamed_addr

declare ptr @LLVMDoubleType() local_unnamed_addr

declare ptr @LLVMPointerType(ptr, i64) local_unnamed_addr

declare ptr @LLVMArrayType(ptr, i64) local_unnamed_addr

declare ptr @LLVMFunctionType(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMStructType(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMBuildRet(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildRetVoid(ptr) local_unnamed_addr

declare ptr @LLVMConstReal(ptr, double) local_unnamed_addr

declare ptr @LLVMAddFunction(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCall2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildGlobalString(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAlloca(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLoad2(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSelect(ptr, ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetTypeKind(ptr) local_unnamed_addr

declare ptr @LLVMTypeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsGlobalConstant(ptr) local_unnamed_addr

define internal fastcc noalias ptr @get_format_from_type(ptr nocapture readonly %0) unnamed_addr {
  %2 = load i64, ptr %0, align 4
  %3 = add i64 %2, -1
  %4 = icmp ult i64 %3, 7
  br i1 %4, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  %memberidx = getelementptr inbounds %IntType, ptr %0, i64 0, i32 1
  %5 = load i1, ptr %memberidx, align 1
  switch i64 %2, label %ifend8 [
    i64 7, label %if.entry2
    i64 5, label %if.entry6
  ]

ifend:                                            ; preds = %1
  switch i64 %2, label %ifend27 [
    i64 8, label %if.entry18
    i64 9, label %if.entry22
    i64 13, label %if.entry25
  ]

if.entry2:                                        ; preds = %if.entry
  %6 = tail call ptr @malloc(i32 4)
  br i1 %5, label %true_block, label %false_block

true_block:                                       ; preds = %if.entry2
  store i32 1684827173, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret

false_block:                                      ; preds = %if.entry2
  store i32 1970039845, ptr %6, align 8
  %8 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %8, align 8
  br label %common.ret

common.ret:                                       ; preds = %true_block13, %false_block14, %true_block9, %false_block10, %true_block, %false_block, %ifend27, %if.entry25, %if.entry22, %if.entry18
  %.sink57 = phi ptr [ %13, %true_block13 ], [ %14, %false_block14 ], [ %11, %true_block9 ], [ %12, %false_block10 ], [ %7, %true_block ], [ %8, %false_block ], [ %22, %ifend27 ], [ %20, %if.entry25 ], [ %18, %if.entry22 ], [ %16, %if.entry18 ]
  %.sink56 = phi i64 [ 2, %true_block13 ], [ 2, %false_block14 ], [ 3, %true_block9 ], [ 3, %false_block10 ], [ 4, %true_block ], [ 4, %false_block ], [ 2, %ifend27 ], [ 4, %if.entry25 ], [ 3, %if.entry22 ], [ 2, %if.entry18 ]
  %memberidx1.i.i44 = getelementptr inbounds %String, ptr %.sink57, i64 0, i32 1
  store i64 %.sink56, ptr %memberidx1.i.i44, align 4
  %memberidx2.i.i45 = getelementptr inbounds %String, ptr %.sink57, i64 0, i32 2
  store i64 %.sink56, ptr %memberidx2.i.i45, align 4
  ret ptr %.sink57

if.entry6:                                        ; preds = %if.entry
  %9 = tail call ptr @malloc(i32 3)
  br i1 %5, label %true_block9, label %false_block10

ifend8:                                           ; preds = %if.entry
  %10 = tail call ptr @malloc(i32 2)
  br i1 %5, label %true_block13, label %false_block14

true_block9:                                      ; preds = %if.entry6
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %9, ptr noundef nonnull align 8 dereferenceable(3) @249, i64 3, i1 false)
  %11 = tail call ptr @malloc(i32 24)
  store ptr %9, ptr %11, align 8
  br label %common.ret

false_block10:                                    ; preds = %if.entry6
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %9, ptr noundef nonnull align 8 dereferenceable(3) @250, i64 3, i1 false)
  %12 = tail call ptr @malloc(i32 24)
  store ptr %9, ptr %12, align 8
  br label %common.ret

true_block13:                                     ; preds = %ifend8
  store i16 25637, ptr %10, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %13, align 8
  br label %common.ret

false_block14:                                    ; preds = %ifend8
  store i16 29989, ptr %10, align 8
  %14 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %14, align 8
  br label %common.ret

if.entry18:                                       ; preds = %ifend
  %15 = tail call ptr @malloc(i32 2)
  store i16 26149, ptr %15, align 8
  %16 = tail call ptr @malloc(i32 24)
  store ptr %15, ptr %16, align 8
  br label %common.ret

if.entry22:                                       ; preds = %ifend
  %17 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %17, ptr noundef nonnull align 8 dereferenceable(3) @251, i64 3, i1 false)
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  br label %common.ret

if.entry25:                                       ; preds = %ifend
  %19 = tail call ptr @malloc(i32 4)
  store i32 1478850608, ptr %19, align 8
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  br label %common.ret

ifend27:                                          ; preds = %ifend
  %21 = tail call ptr @malloc(i32 2)
  store i16 29477, ptr %21, align 8
  %22 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  br label %common.ret
}

declare ptr @LLVMBuildInBoundsGEP2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVM_GetFunctionType(ptr) local_unnamed_addr

declare ptr @LLVMBuildMalloc(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFree(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildStore(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstArray(ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMConstStruct(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstIntCast(ptr, ptr, i1) local_unnamed_addr

declare ptr @LLVMConstMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMSizeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsNull(ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNotNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildUDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildURem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstICmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildICmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstShl(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildShl(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstLShr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLShr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstOr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildOr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstAnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAnd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstXor(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildXor(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFCmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFCmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstSIToFP(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSIToFP(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFPToSI(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPToSI(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildIntCast2(ptr, ptr, ptr, i1, ptr) local_unnamed_addr

declare ptr @LLVMConstFPCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstBitCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBitCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNot(ptr) local_unnamed_addr

declare ptr @LLVMBuildNot(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetInitializer(ptr) local_unnamed_addr

declare ptr @LLVMConstNull(ptr) local_unnamed_addr

declare ptr @LLVMAppendBasicBlock(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCondBr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMPositionBuilderAtEnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildPhi(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMAddIncoming(ptr, ptr, ptr, i64) local_unnamed_addr

declare void @LLVMAddCase(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSwitch(ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildArrayMalloc(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildArrayAlloca(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetAlignment(ptr) local_unnamed_addr

declare ptr @LLVMBuildMemSet(ptr, ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildMemCpy(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildMemMove(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare void @LLVMDeleteBasicBlock(ptr) local_unnamed_addr

declare ptr @LLVMAddGlobal(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMSetInitializer(ptr, ptr) local_unnamed_addr

declare void @LLVMSetGlobalConstant(ptr, i1) local_unnamed_addr

declare void @LLVMSetLinkage(ptr, i64) local_unnamed_addr

declare ptr @LLVMCreateBuilder() local_unnamed_addr

declare ptr @LLVMGetParam(ptr, i64) local_unnamed_addr

declare void @LLVMDisposeBuilder(ptr) local_unnamed_addr

declare ptr @LLVMStructCreateNamed(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetModuleContext(ptr) local_unnamed_addr

declare void @LLVMStructSetBody(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstString(ptr, i64, i1) local_unnamed_addr

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #9

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #10

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #10

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smin.i64(i64, i64) #12

attributes #0 = { nofree }
attributes #1 = { argmemonly mustprogress nocallback nofree nounwind willreturn }
attributes #2 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free") "alloc-family"="malloc" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn }
attributes #4 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1) "alloc-family"="malloc" }
attributes #5 = { nofree nounwind }
attributes #6 = { mustprogress nounwind willreturn }
attributes #7 = { mustprogress nofree nounwind readonly willreturn }
attributes #8 = { nofree nosync nounwind readonly }
attributes #9 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }
attributes #11 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #12 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
