; ModuleID = '../src/main.flo'
source_filename = "../src/main.flo"
target triple = "x86_64-pc-linux-gnu"

%CodeGen = type <{ ptr, ptr, ptr, ptr, ptr, i1, ptr, ptr, ptr, ptr, ptr }>
%TypeChecker = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1, i1, ptr }>
%String = type <{ ptr, i64, i64 }>
%FlagBool = type <{ i64, ptr, ptr, i1 }>
%Flag = type <{ i64, ptr, ptr }>
%FlagString = type <{ i64, ptr, ptr, ptr }>
%FlagInt = type <{ i64, ptr, ptr, i64 }>
%Compiler = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_FloFile_ = type <{ ptr, i64, i64 }>
%Array_FloError_ = type <{ ptr, i64, i64 }>
%Map_String_FileId_ = type <{ ptr, i64, i64 }>
%Array_Module_ = type <{ ptr, i64, i64 }>
%Map_String_Generic_ = type <{ ptr, i64, i64 }>
%Module = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Map_String_LLVMValueRef_ = type <{ ptr, i64, i64 }>
%Map_String_CGClassType_ = type <{ ptr, i64, i64 }>
%Map_String_CGEnumType_ = type <{ ptr, i64, i64 }>
%Array_Enum_ = type <{ ptr, i64, i64 }>
%ArrayIterator_Enum_ = type <{ i1, i64, i64, ptr }>
%Array_Class_ = type <{ ptr, i64, i64 }>
%ArrayIterator_Class_ = type <{ i1, i64, i64, ptr }>
%Array_ConstDeclaration_ = type <{ ptr, i64, i64 }>
%ArrayIterator_ConstDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_VarDeclaration_ = type <{ ptr, i64, i64 }>
%ArrayIterator_VarDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_Function_ = type <{ ptr, i64, i64 }>
%ArrayIterator_Function_ = type <{ i1, i64, i64, ptr }>
%MapIterator_String_LLVMValueRef_ = type <{ i1, ptr, i64, i64 }>
%MapIterator_String_CGClassType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_String_CGClassType_ = type <{ ptr, ptr }>
%MapIterator_String_CGEnumType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_String_CGEnumType_ = type <{ ptr, ptr }>
%ArrayIterator_Module_ = type <{ i1, i64, i64, ptr }>
%Array_Var_ = type <{ ptr, i64, i64 }>
%Class = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i1 }>
%Array_ClassField_ = type <{ ptr, i64, i64 }>
%Array_ClassMethod_ = type <{ ptr, i64, i64 }>
%Enum = type <{ ptr, ptr, ptr, ptr }>
%Array_EnumField_ = type <{ ptr, i64, i64 }>
%EnumField = type <{ ptr, ptr, ptr }>
%ScopeId = type <{ i64, i64 }>
%GeneratedModule = type <{ ptr, ptr, ptr }>
%FloFile = type <{ ptr, ptr }>
%FloError = type <{ i64, ptr, ptr }>
%FloRange = type <{ i64, i64, i64, i64 }>
%Range = type <{ i64, i64 }>
%RangeIterator = type <{ i1, i64, i64 }>
%MapEntry_String_FileId_ = type <{ ptr, ptr }>
%Map_String_VarId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_VarId_ = type <{ ptr, ptr }>
%Scope = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Map_String_EnumId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_EnumId_ = type <{ ptr, ptr }>
%Map_String_Type_ = type <{ ptr, i64, i64 }>
%MapEntry_String_Type_ = type <{ ptr, ptr }>
%Map_String_ClassId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_ClassId_ = type <{ ptr, ptr }>
%Map_String_PropId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_PropId_ = type <{ ptr, ptr }>
%Array_FunctionDeclarationNode_ = type <{ ptr, i64, i64 }>
%ModuleAST = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_ClassDeclarationNode_ = type <{ ptr, i64, i64 }>
%Array_ImportNode_ = type <{ ptr, i64, i64 }>
%Array_ConstDeclarationStatement_ = type <{ ptr, i64, i64 }>
%Array_VarDeclarationStatement_ = type <{ ptr, i64, i64 }>
%Array_EnumNode_ = type <{ ptr, i64, i64 }>
%Array_TypeAliasNode_ = type <{ ptr, i64, i64 }>
%Lexer = type <{ i8, ptr, ptr, i64, i64, i64 }>
%Array_Token_ = type <{ ptr, i64, i64 }>
%Token = type <{ i64, ptr }>
%IntToken = type <{ i64, ptr, i64 }>
%IdentifierToken = type <{ i64, ptr, ptr }>
%Array_Array_Token__ = type <{ ptr, i64, i64 }>
%Array_uint_ = type <{ ptr, i64, i64 }>
%StrToken = type <{ i64, ptr, ptr, ptr, ptr }>
%FloatToken = type <{ i64, ptr, double }>
%CharToken = type <{ i64, ptr, i8 }>
%Parser = type <{ ptr, ptr, ptr, i64 }>
%FunctionDeclarationNode = type <{ ptr, ptr, ptr, ptr, i1 }>
%Array_ArgNode_ = type <{ ptr, i64, i64 }>
%TypeNode = type <{ ptr, i64 }>
%RecordTypeNode = type <{ ptr, i64, ptr, ptr }>
%Array_TypeNode_ = type <{ ptr, i64, i64 }>
%ClassDeclarationNode = type <{ ptr, ptr, ptr, ptr, ptr }>
%Array_FieldNode_ = type <{ ptr, i64, i64 }>
%Array_MethodNode_ = type <{ ptr, i64, i64 }>
%Array_GenericParameterNode_ = type <{ ptr, i64, i64 }>
%FieldNode = type <{ ptr, i64, ptr, ptr }>
%MethodNode = type <{ ptr, ptr, ptr, i64, ptr, i1, i1 }>
%EnumNode = type <{ ptr, ptr, ptr }>
%Array_EnumNodeField_ = type <{ ptr, i64, i64 }>
%EnumNodeField = type <{ ptr, ptr }>
%Array_ImportClause_ = type <{ ptr, i64, i64 }>
%ImportNode = type <{ ptr, ptr, ptr }>
%ImportClause = type <{ ptr, ptr }>
%TypeAliasNode = type <{ ptr, ptr }>
%BlockNode = type <{ ptr, ptr }>
%Array_StatementNode_ = type <{ ptr, i64, i64 }>
%TupleTypeNode = type <{ ptr, i64, ptr }>
%FunctionTypeNode = type <{ ptr, i64, ptr, ptr }>
%PointerTypeNode = type <{ ptr, i64, ptr }>
%ArrayTypeNode = type <{ ptr, i64, ptr, ptr }>
%Array_ExpressionNode_ = type <{ ptr, i64, i64 }>
%StatementNode = type <{ ptr, i64 }>
%ExpressionNode = type <{ ptr, i64, i64 }>
%StringExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%VarDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%NewExpressionNode = type <{ ptr, i64, i64, ptr, i1, ptr }>
%IfStatementNode = type <{ ptr, i64, ptr, ptr, ptr }>
%WhileStatementNode = type <{ ptr, i64, ptr, ptr }>
%ForStatementNode = type <{ ptr, i64, ptr, ptr, ptr, ptr, i64, ptr, ptr }>
%ReturnStatementNode = type <{ ptr, i64, ptr }>
%ConstDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%TupleExpressionNode = type <{ ptr, i64, i64, ptr }>
%ArgNode = type <{ ptr, ptr, ptr }>
%IntExpressionNode = type <{ ptr, i64, i64, ptr }>
%FloatExpressionNode = type <{ ptr, i64, i64, ptr }>
%CharExpressionNode = type <{ ptr, i64, i64, ptr }>
%VarAccessExpressionNode = type <{ ptr, i64, i64, ptr }>
%CallExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%ExpressionIndexNode = type <{ ptr, i64, i64, ptr, ptr }>
%MemberExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%UnaryExpressionNode = type <{ ptr, i64, i64, i64, ptr }>
%ArrayExpressionNode = type <{ ptr, i64, i64, ptr }>
%BinaryExpressionNode = type <{ ptr, i64, i64, ptr, i64, ptr }>
%MatchExpressionNode = type <{ ptr, i64, i64, ptr, ptr, ptr }>
%Array_MatchExpressionCaseNode_ = type <{ ptr, i64, i64 }>
%MatchExpressionCaseNode = type <{ ptr, ptr }>
%TypeCastExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%TernaryExpressionNode = type <{ ptr, i64, i64, ptr, ptr, ptr }>
%Array_Scope_ = type <{ ptr, i64, i64 }>
%Array_Const_ = type <{ ptr, i64, i64 }>
%ArrayIterator_ImportNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_EnumNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ClassDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_TypeAliasNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ConstDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%ConstDeclaration = type <{ i64, ptr, ptr, i1 }>
%ArrayIterator_VarDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%VarDeclaration = type <{ i64, ptr, ptr, i1 }>
%VarId = type <{ i64, i64, i64 }>
%Var = type <{ ptr, ptr, ptr }>
%Expression = type <{ i64, i1, i64, ptr }>
%ArrayIterator_FunctionDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%Function = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1 }>
%Block = type <{ ptr, i1, i1, i1, ptr }>
%FunctionType = type <{ i64, ptr, ptr, i1 }>
%ReturnStatement = type <{ i64, ptr }>
%Array_Statement_ = type <{ ptr, i64, i64 }>
%TypeId = type <{ i64, i64, i64 }>
%MapIterator_String_Type_ = type <{ i1, ptr, i64, i64 }>
%GenericType = type <{ i64, ptr, ptr, ptr }>
%ObjectType = type <{ i64, ptr }>
%Array_Expression_ = type <{ ptr, i64, i64 }>
%StringExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%IntrinsicCall = type <{ i64, i1, i64, ptr, i64, ptr }>
%TypeCastExpression = type <{ i64, i1, i64, ptr, ptr }>
%Array_Type_ = type <{ ptr, i64, i64 }>
%Array_FunctionArg_ = type <{ ptr, i64, i64 }>
%FunctionArg = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapIterator_String_PropId_ = type <{ i1, ptr, i64, i64 }>
%PropId = type <{ i64, ptr, i64 }>
%ClassMethod = type <{ ptr, i1, i64, ptr, ptr, ptr, ptr, i1, ptr }>
%ClassField = type <{ ptr, i1, i64, ptr, ptr, i64, ptr }>
%Type = type <{ i64 }>
%MatchExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr, i1 }>
%Array_MatchExpressionCase_ = type <{ ptr, i64, i64 }>
%ArrayIterator_MatchExpressionCaseNode_ = type <{ i1, i64, i64, ptr }>
%MatchExpressionCase = type <{ i64, ptr, ptr }>
%Const = type <{ ptr, ptr, ptr }>
%EnumType = type <{ i64, ptr }>
%MemberExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%CallExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%BinaryExpression = type <{ i64, i1, i64, ptr, ptr, i64, ptr }>
%IntType = type <{ i64, i1 }>
%NewExpression = type <{ i64, i1, i64, ptr, ptr, i1, ptr }>
%VarAccessExpression = type <{ i64, i1, i64, ptr, ptr }>
%PointerType = type <{ i64, ptr }>
%ArrayType = type <{ i64, ptr, i64 }>
%ArrayIterator_TypeNode_ = type <{ i1, i64, i64, ptr }>
%TupleType = type <{ i64, ptr }>
%IfStatement = type <{ i64, ptr, ptr, ptr }>
%ForStatement = type <{ i64, ptr, ptr, ptr, ptr, ptr }>
%Array_ScopeId_ = type <{ ptr, i64, i64 }>
%UnaryExpression = type <{ i64, i1, i64, ptr, i64, ptr }>
%WhileStatement = type <{ i64, ptr, ptr }>
%IndexExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%TernaryExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapEntry_String_Generic_ = type <{ ptr, ptr }>
%Generic = type <{ i64, ptr }>
%IntExpression = type <{ i64, i1, i64, ptr, i64 }>
%ArrayIterator_StatementNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ImportClause_ = type <{ i1, i64, i64, ptr }>
%ModuleVarId = type <{ i64, i64, i64, ptr }>
%ArrayIterator_ArgNode_ = type <{ i1, i64, i64, ptr }>
%ArrayExpression = type <{ i64, i1, i64, ptr, ptr }>
%FloatExpression = type <{ i64, i1, i64, ptr, double }>
%ArrayIterator_ExpressionNode_ = type <{ i1, i64, i64, ptr }>
%TupleExpression = type <{ i64, i1, i64, ptr, ptr }>
%BooleanExpression = type <{ i64, i1, i64, ptr, i1 }>
%ArrayIterator_Expression_ = type <{ i1, i64, i64, ptr }>
%MapEntry_String_LLVMValueRef_ = type <{ ptr, ptr }>
%MapIterator_String_VarId_ = type <{ i1, ptr, i64, i64 }>
%ArrayIterator_ScopeId_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_Type_ = type <{ i1, i64, i64, ptr }>
%Map_String_uint_ = type <{ ptr, i64, i64 }>
%MapEntry_String_uint_ = type <{ ptr, i64 }>
%ArrayIterator_MatchExpressionCase_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_Statement_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ClassMethod_ = type <{ i1, i64, i64, ptr }>
%CGClassType = type <{ ptr, ptr, ptr, ptr, ptr }>
%Array_LLVMValueRef_ = type <{ ptr, i64, i64 }>
%CGEnumType = type <{ ptr, ptr, ptr }>
%Array_LLVMTypeRef_ = type <{ ptr, i64, i64 }>
%ArrayIterator_EnumField_ = type <{ i1, i64, i64, ptr }>
%IntrinsicResult = type <{ ptr, ptr }>
%ArrayIterator_LLVMValueRef_ = type <{ i1, i64, i64, ptr }>

@0 = private unnamed_addr constant [8 x i8] c"Panic: \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [10 x i8] c"error: %s\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@4 = private unnamed_addr constant [49 x i8] c"Main function not found in module; can't execute\00", align 1
@5 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@6 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@7 = private unnamed_addr constant [22 x i8] c"builtins/builtins.flo\00", align 1
@8 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@9 = private unnamed_addr constant [8 x i8] c"\1B[1;31m\00", align 1
@10 = private unnamed_addr constant [22 x i8] c"[Illegal Character]: \00", align 1
@11 = private unnamed_addr constant [17 x i8] c"[Syntax Error]: \00", align 1
@12 = private unnamed_addr constant [13 x i8] c"[IO Error]: \00", align 1
@13 = private unnamed_addr constant [15 x i8] c"[Type Error]: \00", align 1
@14 = private unnamed_addr constant [15 x i8] c"[Name Error]: \00", align 1
@15 = private unnamed_addr constant [10 x i8] c"[Error]: \00", align 1
@16 = private unnamed_addr constant [19 x i8] c"File '%s', line %u\00", align 1
@17 = internal global [13 x i8] c"FlagType.INT\00"
@18 = internal global [14 x i8] c"FlagType.BOOL\00"
@19 = internal global [13 x i8] c"FlagType.STR\00"
@FlagType_names = internal unnamed_addr constant [3 x ptr] [ptr @17, ptr @18, ptr @19]
@flags_length = internal unnamed_addr global i64 0
@flags_buffer = internal unnamed_addr global [250 x ptr] zeroinitializer
@20 = private unnamed_addr constant [6 x i8] c"0.0.1\00", align 1
@21 = private unnamed_addr constant [23 x i8] c"Show this help message\00", align 1
@22 = private unnamed_addr constant [6 x i8] c"-emit\00", align 1
@23 = private unnamed_addr constant [276 x i8] c"Emit output in a particular format. Options are:\0A\09\09 \E2\80\A2 exe - Generates an executable.\0A\09\09 \E2\80\A2 llvm-ir - Generates a file containing LLVM IR.\0A\09\09 \E2\80\A2 llvm-bc - Generates a file containing LLVM bitcode.\0A\09\09 \E2\80\A2 obj - Generates an object file\0A\09\09 \E2\80\A2 asm - Generates Assembly code.\00", align 1
@24 = private unnamed_addr constant [36 x i8] c"Specify file to put the output into\00", align 1
@25 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@26 = private unnamed_addr constant [26 x i8] c"Specify runtime directory\00", align 1
@27 = private unnamed_addr constant [20 x i8] c"/usr/local/flo/lib/\00", align 1
@28 = private unnamed_addr constant [8 x i8] c"-target\00", align 1
@29 = private unnamed_addr constant [34 x i8] c"Compile to specific target triple\00", align 1
@30 = private unnamed_addr constant [69 x i8] c"Specify a library to link against (should be a comma seperated list)\00", align 1
@31 = private unnamed_addr constant [42 x i8] c"Specify the compiler's optimization level\00", align 1
@32 = private unnamed_addr constant [13 x i8] c"Show version\00", align 1
@33 = private unnamed_addr constant [34 x i8] c"Missing value after -%s argument.\00", align 1
@34 = private unnamed_addr constant [8 x i8] c"Usage: \00", align 1
@35 = private unnamed_addr constant [30 x i8] c" [OPTIONS]? <file>\0A\0AOPTIONS:\0A\00", align 1
@36 = private unnamed_addr constant [4 x i8] c"-%s\00", align 1
@37 = private unnamed_addr constant [7 x i8] c" <val>\00", align 1
@38 = private unnamed_addr constant [25 x i8] c"No input file specified.\00", align 1
@39 = private unnamed_addr constant [33 x i8] c"Runtime directory not found '%s'\00", align 1
@40 = private unnamed_addr constant [32 x i8] c"No such file or directory: '%s'\00", align 1
@41 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@42 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@43 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@44 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@45 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@46 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@47 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@48 = private unnamed_addr constant [4 x i8] c"fnc\00", align 1
@49 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@50 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@51 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@52 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@53 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@54 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@55 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@56 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@57 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@58 = private unnamed_addr constant [4 x i8] c"033\00", align 1
@59 = private unnamed_addr constant [4 x i8] c"x1b\00", align 1
@60 = private unnamed_addr constant [6 x i8] c"u001b\00", align 1
@61 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@62 = private unnamed_addr constant [24 x i8] c"Illegal character: '%s'\00", align 1
@63 = private unnamed_addr constant [23 x i8] c"Expected an Identifier\00", align 1
@64 = private unnamed_addr constant [13 x i8] c"Expected '='\00", align 1
@65 = private unnamed_addr constant [13 x i8] c"Expected ':'\00", align 1
@66 = private unnamed_addr constant [13 x i8] c"Expected '('\00", align 1
@67 = private unnamed_addr constant [13 x i8] c"Expected ')'\00", align 1
@68 = private unnamed_addr constant [13 x i8] c"Expected '{'\00", align 1
@69 = private unnamed_addr constant [13 x i8] c"Expected '}'\00", align 1
@70 = private unnamed_addr constant [13 x i8] c"Expected ','\00", align 1
@71 = private unnamed_addr constant [13 x i8] c"Expected '<'\00", align 1
@72 = private unnamed_addr constant [13 x i8] c"Expected '>'\00", align 1
@73 = private unnamed_addr constant [14 x i8] c"Expected '->'\00", align 1
@74 = private unnamed_addr constant [4 x i8] c"Map\00", align 1
@75 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@76 = private unnamed_addr constant [29 x i8] c"Expected an Expression value\00", align 1
@77 = private unnamed_addr constant [29 x i8] c"'%s' has no type information\00", align 1
@78 = private unnamed_addr constant [20 x i8] c"Expected ':' or '('\00", align 1
@79 = private unnamed_addr constant [88 x i8] c"Illegal expression expected: 'fnc', 'class', 'type', 'enum', 'import', 'const' or 'let'\00", align 1
@80 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@81 = private unnamed_addr constant [11 x i8] c"(%s) => %s\00", align 1
@82 = private unnamed_addr constant [4 x i8] c"%s*\00", align 1
@83 = private unnamed_addr constant [7 x i8] c"%s[%u]\00", align 1
@84 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@85 = private unnamed_addr constant [10 x i8] c"Namespace\00", align 1
@86 = private unnamed_addr constant [7 x i8] c"Record\00", align 1
@87 = private unnamed_addr constant [4 x i8] c"i%u\00", align 1
@88 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@89 = private unnamed_addr constant [4 x i8] c"%s4\00", align 1
@90 = private unnamed_addr constant [4 x i8] c"%s8\00", align 1
@91 = private unnamed_addr constant [5 x i8] c"%s16\00", align 1
@92 = private unnamed_addr constant [5 x i8] c"%s32\00", align 1
@93 = private unnamed_addr constant [5 x i8] c"%s64\00", align 1
@94 = private unnamed_addr constant [6 x i8] c"%s128\00", align 1
@95 = private unnamed_addr constant [4 x i8] c"f32\00", align 1
@96 = private unnamed_addr constant [4 x i8] c"f64\00", align 1
@97 = private unnamed_addr constant [7 x i8] c"record\00", align 1
@98 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@99 = private unnamed_addr constant [13 x i8] c"__generics__\00", align 1
@100 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@101 = private unnamed_addr constant [68 x i8] c"Name '%s' has already been used for another type. consider renaming\00", align 1
@102 = private unnamed_addr constant [41 x i8] c"Generic expects %u parameters but got %u\00", align 1
@103 = private unnamed_addr constant [4 x i8] c"%s_\00", align 1
@104 = private unnamed_addr constant [6 x i8] c"%s_%s\00", align 1
@105 = private unnamed_addr constant [55 x i8] c"Initilializer for global variable has to be a constant\00", align 1
@106 = private unnamed_addr constant [56 x i8] c"Expected type of '%s' but got type of '%s' on signature\00", align 1
@107 = private unnamed_addr constant [50 x i8] c"Import statement path can't be a formatted string\00", align 1
@108 = private unnamed_addr constant [28 x i8] c"%s not found in module \22\22%s\00", align 1
@109 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s'\00", align 1
@110 = private unnamed_addr constant [48 x i8] c"Illegal re-declaration of type '%s' as function\00", align 1
@111 = private unnamed_addr constant [53 x i8] c"Expected an int type for enum type but got type '%s'\00", align 1
@112 = private unnamed_addr constant [38 x i8] c"Enum initializer has to be a constant\00", align 1
@113 = private unnamed_addr constant [36 x i8] c"Expected type '%s' but got type '%s\00", align 1
@114 = private unnamed_addr constant [7 x i8] c"__eq__\00", align 1
@115 = private unnamed_addr constant [8 x i8] c"__add__\00", align 1
@116 = private unnamed_addr constant [8 x i8] c"__sub__\00", align 1
@117 = private unnamed_addr constant [8 x i8] c"__mul__\00", align 1
@118 = private unnamed_addr constant [8 x i8] c"__div__\00", align 1
@119 = private unnamed_addr constant [7 x i8] c"__or__\00", align 1
@120 = private unnamed_addr constant [8 x i8] c"__ora__\00", align 1
@121 = private unnamed_addr constant [12 x i8] c"__getitem__\00", align 1
@122 = private unnamed_addr constant [12 x i8] c"__setitem__\00", align 1
@123 = private unnamed_addr constant [7 x i8] c"__sl__\00", align 1
@124 = private unnamed_addr constant [7 x i8] c"__sr__\00", align 1
@125 = private unnamed_addr constant [8 x i8] c"__sla__\00", align 1
@126 = private unnamed_addr constant [8 x i8] c"__sra__\00", align 1
@127 = private unnamed_addr constant [7 x i8] c"__in__\00", align 1
@128 = private unnamed_addr constant [7 x i8] c"__lt__\00", align 1
@129 = private unnamed_addr constant [7 x i8] c"__lg__\00", align 1
@130 = private unnamed_addr constant [7 x i8] c"__ne__\00", align 1
@131 = private unnamed_addr constant [7 x i8] c"__le__\00", align 1
@132 = private unnamed_addr constant [7 x i8] c"__ge__\00", align 1
@133 = private unnamed_addr constant [8 x i8] c"__pow__\00", align 1
@134 = private unnamed_addr constant [8 x i8] c"__mod__\00", align 1
@135 = private unnamed_addr constant [8 x i8] c"__del__\00", align 1
@136 = private unnamed_addr constant [76 x i8] c" is reserved only for operator overloads and cannot be used as a field name\00", align 1
@137 = private unnamed_addr constant [36 x i8] c"Field %s in class %s already exists\00", align 1
@138 = private unnamed_addr constant [89 x i8] c"Signature of inherited field %s in class %s does not match expected parent signature '%s\00", align 1
@139 = private unnamed_addr constant [49 x i8] c"Expected inherited field %s in class %s to be %s\00", align 1
@140 = private unnamed_addr constant [68 x i8] c"Expected type '%s' but got type '%s' on static field initialization\00", align 1
@141 = private unnamed_addr constant [46 x i8] c"Static field initializer has to be a constant\00", align 1
@142 = private unnamed_addr constant [65 x i8] c"Expected %u arguments for binary operator overload %s but got %u\00", align 1
@143 = private unnamed_addr constant [45 x i8] c"Binary operator overload %s cannot be static\00", align 1
@144 = private unnamed_addr constant [75 x i8] c"__iter__ method must return an iteratable object {done: bool, next(): any}\00", align 1
@145 = private unnamed_addr constant [37 x i8] c"Method %s in class %s already exists\00", align 1
@146 = private unnamed_addr constant [91 x i8] c"Signature of inherited method %s in class %s does not match expected parent signature '%s'\00", align 1
@147 = private unnamed_addr constant [50 x i8] c"Expected inherited method %s in class %s to be %s\00", align 1
@148 = private unnamed_addr constant [32 x i8] c"Static method can't be abstract\00", align 1
@149 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@150 = private unnamed_addr constant [34 x i8] c"Class constructor can't be static\00", align 1
@151 = private unnamed_addr constant [36 x i8] c"Class constructor can't be abstract\00", align 1
@152 = private unnamed_addr constant [59 x i8] c"Can't have a abstract private method use protected instead\00", align 1
@153 = private unnamed_addr constant [6 x i8] c"super\00", align 1
@154 = private unnamed_addr constant [42 x i8] c"Can only inherit from class not type '%s'\00", align 1
@155 = private unnamed_addr constant [81 x i8] c"Class with constructor must implement all it's methods missing %s implementation\00", align 1
@156 = private unnamed_addr constant [39 x i8] c"Method missing ending return statement\00", align 1
@157 = private unnamed_addr constant [41 x i8] c"Function missing ending return statement\00", align 1
@158 = private unnamed_addr constant [24 x i8] c"length has to be an int\00", align 1
@159 = private unnamed_addr constant [24 x i8] c"length has to be a uint\00", align 1
@160 = private unnamed_addr constant [31 x i8] c"length is a non-constant value\00", align 1
@161 = private unnamed_addr constant [29 x i8] c"length should be an unsigned\00", align 1
@162 = private unnamed_addr constant [4 x i8] c"u16\00", align 1
@163 = private unnamed_addr constant [4 x i8] c"u32\00", align 1
@164 = private unnamed_addr constant [4 x i8] c"u64\00", align 1
@165 = private unnamed_addr constant [4 x i8] c"i16\00", align 1
@166 = private unnamed_addr constant [4 x i8] c"i32\00", align 1
@167 = private unnamed_addr constant [4 x i8] c"i64\00", align 1
@168 = private unnamed_addr constant [20 x i8] c"Undefined type '%s'\00", align 1
@169 = private unnamed_addr constant [48 x i8] c"Expected element type of '%s' but got type '%s'\00", align 1
@170 = private unnamed_addr constant [38 x i8] c"Const 'null' cannot be of type 'void'\00", align 1
@171 = private unnamed_addr constant [24 x i8] c"Undefined variable '%s'\00", align 1
@172 = private unnamed_addr constant [34 x i8] c"Assigment target is not a mutable\00", align 1
@173 = private unnamed_addr constant [52 x i8] c"Illegal assignment of variable of type '%s' to '%s'\00", align 1
@174 = private unnamed_addr constant [7 x i8] c"__gt__\00", align 1
@175 = private unnamed_addr constant [8 x i8] c"__and__\00", align 1
@176 = private unnamed_addr constant [8 x i8] c"__xor__\00", align 1
@177 = private unnamed_addr constant [37 x i8] c"Expected type '%s' but got type '%s'\00", align 1
@178 = private unnamed_addr constant [55 x i8] c"Unsupported binary operator overload for operator '%s'\00", align 1
@179 = private unnamed_addr constant [108 x i8] c"No binary operator overload for '%s' in object of class '%s' please implement the method %s to support this\00", align 1
@180 = private unnamed_addr constant [114 x i8] c"No operator overload for index set operator on %s object please implement method __setitem__ to use in this class\00", align 1
@181 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@182 = private unnamed_addr constant [58 x i8] c"Illegal binary operation '%s' between types '%s' and '%s'\00", align 1
@183 = private unnamed_addr constant [8 x i8] c"++(pre)\00", align 1
@184 = private unnamed_addr constant [8 x i8] c"--(pre)\00", align 1
@185 = private unnamed_addr constant [39 x i8] c"Illegal unary operation %s on constant\00", align 1
@186 = private unnamed_addr constant [40 x i8] c"Illegal unary operation %s on type '%s'\00", align 1
@187 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@188 = private unnamed_addr constant [30 x i8] c"Cannot cast type '%s' to '%s'\00", align 1
@189 = private unnamed_addr constant [45 x i8] c"Cannot construct an object of abstract class\00", align 1
@190 = private unnamed_addr constant [55 x i8] c"Expected %u argument(s) on constructor call but got %u\00", align 1
@191 = private unnamed_addr constant [71 x i8] c"Expected type '%s' but got type '%s' as constructor call argument (%d)\00", align 1
@192 = private unnamed_addr constant [68 x i8] c"New operator expects 1 argument for pointers but got %u argument(s)\00", align 1
@193 = private unnamed_addr constant [74 x i8] c"New operator for pointers expects argument of type '%s' but got type '%s'\00", align 1
@194 = private unnamed_addr constant [68 x i8] c"New operator expects either an a pointer or an object not a(n) '%s'\00", align 1
@195 = private unnamed_addr constant [76 x i8] c"Property '%s' is defined as private and only accessible within the class %s\00", align 1
@196 = private unnamed_addr constant [71 x i8] c"Property '%s' is defined as %s and only accessible within the class %s\00", align 1
@197 = private unnamed_addr constant [52 x i8] c"Property '%s' doesn't exist in object of class '%s'\00", align 1
@198 = private unnamed_addr constant [51 x i8] c"Property '%s' is not a static member in class '%s'\00", align 1
@199 = private unnamed_addr constant [40 x i8] c"'%s' is not an element of enum the '%s'\00", align 1
@200 = private unnamed_addr constant [10 x i8] c"copy_from\00", align 1
@201 = private unnamed_addr constant [10 x i8] c"move_from\00", align 1
@202 = private unnamed_addr constant [10 x i8] c"fill_with\00", align 1
@203 = private unnamed_addr constant [7 x i8] c"resize\00", align 1
@204 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@205 = private unnamed_addr constant [28 x i8] c"intrinsic %s is not defined\00", align 1
@206 = private unnamed_addr constant [38 x i8] c"Cannot get property '%s' of type '%s'\00", align 1
@207 = private unnamed_addr constant [53 x i8] c"Expected type '%s' from first case but got type '%s'\00", align 1
@208 = private unnamed_addr constant [122 x i8] c"No operator overload for indexing operator on %s object please implement method __getitem__ to use indexing in this class\00", align 1
@209 = private unnamed_addr constant [35 x i8] c"Expected an integer type for index\00", align 1
@210 = private unnamed_addr constant [87 x i8] c"Expected an unsigned integer for tuple index but index value is '%s' (which is signed)\00", align 1
@211 = private unnamed_addr constant [41 x i8] c"Expected an constant int for tuple index\00", align 1
@212 = private unnamed_addr constant [37 x i8] c"Index out of range for tuple type %s\00", align 1
@213 = private unnamed_addr constant [39 x i8] c"Cannot index into a value of type '%s'\00", align 1
@214 = private unnamed_addr constant [47 x i8] c"Expected a function type for call but got '%s'\00", align 1
@215 = private unnamed_addr constant [52 x i8] c"Expected %u argument(s) on function call but got %u\00", align 1
@216 = private unnamed_addr constant [63 x i8] c"Expected type '%s' but got type '%s' as function call argument\00", align 1
@217 = private unnamed_addr constant [58 x i8] c"Expected argument %u to be of type '%s' but got type '%s'\00", align 1
@218 = private unnamed_addr constant [66 x i8] c"Expected argument 1 to be of type to be of a pointer but got '%s'\00", align 1
@219 = private unnamed_addr constant [49 x i8] c"Expected 2 arguments on function call but got %u\00", align 1
@220 = private unnamed_addr constant [49 x i8] c"Expected 3 arguments on function call but got %u\00", align 1
@221 = private unnamed_addr constant [7 x i8] c"3.4E38\00", align 1
@222 = private unnamed_addr constant [32 x i8] c"Cannot match on constant 'null'\00", align 1
@223 = private unnamed_addr constant [85 x i8] c"Operator overload == for '%s' should return a boolean to be used in match expression\00", align 1
@224 = private unnamed_addr constant [67 x i8] c"Expected type '%s' from match expression subject but got type '%s'\00", align 1
@225 = private unnamed_addr constant [57 x i8] c"Expected match case block to yield '%s' but yielded '%s'\00", align 1
@226 = private unnamed_addr constant [56 x i8] c"Non-exhaustable match expression, expected an else-case\00", align 1
@227 = private unnamed_addr constant [62 x i8] c"Expected match else-case block to yield '%s' but yielded '%s'\00", align 1
@228 = private unnamed_addr constant [26 x i8] c"Variable '%s' has no type\00", align 1
@229 = private unnamed_addr constant [70 x i8] c"Cannot declare a value as null without any type hint for future usage\00", align 1
@230 = private unnamed_addr constant [61 x i8] c"Expected type '%s' but got type '%s' on variable declaration\00", align 1
@231 = private unnamed_addr constant [39 x i8] c"Cannot declare a variable of type void\00", align 1
@232 = private unnamed_addr constant [57 x i8] c"Illegal re-declaration of already declared variable '%s'\00", align 1
@233 = private unnamed_addr constant [49 x i8] c"Cannot assign a non-constant value to a constant\00", align 1
@234 = private unnamed_addr constant [58 x i8] c"Expected type '%s' but got type '%s' on const declaration\00", align 1
@235 = private unnamed_addr constant [36 x i8] c"Cannot declare a const of type void\00", align 1
@236 = private unnamed_addr constant [29 x i8] c"Iterator has to be an object\00", align 1
@237 = private unnamed_addr constant [47 x i8] c"Iterator type has to have __iter__ as property\00", align 1
@238 = private unnamed_addr constant [7 x i8] c"tmp_it\00", align 1
@239 = private unnamed_addr constant [30 x i8] c"Illegal break outside of loop\00", align 1
@240 = private unnamed_addr constant [33 x i8] c"Illegal continue outside of loop\00", align 1
@241 = private unnamed_addr constant [57 x i8] c"Expected return type of '%s' but got return type of '%s'\00", align 1
@242 = private unnamed_addr constant [33 x i8] c"Function return type is not void\00", align 1
@243 = private unnamed_addr constant [9 x i8] c"%u;%d;%u\00", align 1
@244 = private unnamed_addr constant [33 x i8] c"Type could not be code generated\00", align 1
@245 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1
@246 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@247 = private unnamed_addr constant [6 x i8] c"%s {\0A\00", align 1
@248 = private unnamed_addr constant [7 x i8] c" ... }\00", align 1
@249 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@250 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@251 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@252 = private unnamed_addr constant [13 x i8] c" '%s': %s, \0A\00", align 1
@253 = private unnamed_addr constant [11 x i8] c"<function>\00", align 1
@254 = private unnamed_addr constant [18 x i8] c"String_from_bytes\00", align 1
@255 = private unnamed_addr constant [55 x i8] c"Could not find function 'String.from_bytes' in program\00", align 1
@256 = private unnamed_addr constant [55 x i8] c"Array expression is not a constant (codegen_array_exp)\00", align 1
@257 = private unnamed_addr constant [55 x i8] c"Array expression is not a constant (codegen_tuple_exp)\00", align 1
@258 = private unnamed_addr constant [46 x i8] c"This should never happen! (get_expr_mem: var)\00", align 1
@259 = private unnamed_addr constant [9 x i8] c"%s;%d;%u\00", align 1
@260 = private unnamed_addr constant [10 x i8] c"memberidx\00", align 1
@261 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@262 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@263 = private unnamed_addr constant [12 x i8] c"llvm.pow.%s\00", align 1
@264 = private unnamed_addr constant [34 x i8] c"Unknown bin expression case case!\00", align 1
@265 = private unnamed_addr constant [11 x i8] c"incdec.ptr\00", align 1
@266 = private unnamed_addr constant [51 x i8] c"This should never happen; (codegen_var_access_exp)\00", align 1
@267 = private unnamed_addr constant [11 x i8] c"true_block\00", align 1
@268 = private unnamed_addr constant [12 x i8] c"false_block\00", align 1
@269 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@270 = private unnamed_addr constant [8 x i8] c"ternary\00", align 1
@271 = private unnamed_addr constant [11 x i8] c"match.else\00", align 1
@272 = private unnamed_addr constant [10 x i8] c"match.end\00", align 1
@273 = private unnamed_addr constant [11 x i8] c"match.case\00", align 1
@274 = private unnamed_addr constant [16 x i8] c"match.case.else\00", align 1
@275 = private unnamed_addr constant [15 x i8] c"match.phi.node\00", align 1
@276 = private unnamed_addr constant [52 x i8] c"this should not happen; (codegen_member_exp); class\00", align 1
@277 = private unnamed_addr constant [60 x i8] c"This should never happen; (codegen_member_expr; class prop)\00", align 1
@278 = private unnamed_addr constant [51 x i8] c"this should not happen; (codegen_member_exp); enum\00", align 1
@279 = private unnamed_addr constant [11 x i8] c"to_cstring\00", align 1
@280 = private unnamed_addr constant [22 x i8] c"instrinsic not found!\00", align 1
@281 = private unnamed_addr constant [9 x i8] c"if.entry\00", align 1
@282 = private unnamed_addr constant [6 x i8] c"ifend\00", align 1
@283 = private unnamed_addr constant [10 x i8] c"for.entry\00", align 1
@284 = private unnamed_addr constant [9 x i8] c"for.cond\00", align 1
@285 = private unnamed_addr constant [9 x i8] c"for.body\00", align 1
@286 = private unnamed_addr constant [9 x i8] c"for.incr\00", align 1
@287 = private unnamed_addr constant [8 x i8] c"for.end\00", align 1
@288 = private unnamed_addr constant [12 x i8] c"while.entry\00", align 1
@289 = private unnamed_addr constant [10 x i8] c"while.end\00", align 1
@290 = private unnamed_addr constant [48 x i8] c"Could not find constructor for constructor call\00", align 1
@291 = private unnamed_addr constant [15 x i8] c"%s_constructor\00", align 1
@292 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@293 = private unnamed_addr constant [9 x i8] c"%s_names\00", align 1
@294 = private unnamed_addr constant [4 x i8] c"exe\00", align 1
@295 = private unnamed_addr constant [14 x i8] c"/tmp/output.o\00", align 1
@296 = private unnamed_addr constant [5 x i8] c"-l%s\00", align 1
@297 = private unnamed_addr constant [11 x i8] c"-target %s\00", align 1
@298 = private unnamed_addr constant [79 x i8] c"FlagString {\0A 'name': %s, \0A 'value': %s, \0A 'description': %s, \0A 'type': %s, \0A}\00", align 1
@299 = private unnamed_addr constant [37 x i8] c"%s -no-pie %s /tmp/output.o %s -o %s\00", align 1
@300 = private unnamed_addr constant [8 x i8] c"llvm-ir\00", align 1
@301 = private unnamed_addr constant [8 x i8] c"llvm-bc\00", align 1
@302 = private unnamed_addr constant [4 x i8] c"obj\00", align 1
@303 = private unnamed_addr constant [4 x i8] c"asm\00", align 1

; Function Attrs: nofree
declare void @system(ptr nocapture noundef readonly) local_unnamed_addr #0

define i64 @main(i64 %0, ptr nocapture readonly %1) local_unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %engine.i = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca %CodeGen, align 8
  %10 = alloca %TypeChecker, align 8
  %11 = alloca ptr, align 8
  %12 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %12, ptr noundef nonnull align 8 dereferenceable(5) @20, i64 5, i1 false)
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i, align 4
  %14 = alloca %FlagBool, align 8
  %15 = tail call ptr @malloc(i32 1)
  store i8 104, ptr %15, align 8
  %16 = tail call ptr @malloc(i32 24)
  store ptr %15, ptr %16, align 8
  %memberidx1.i.i96 = getelementptr inbounds %String, ptr %16, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i96, align 4
  %memberidx2.i.i97 = getelementptr inbounds %String, ptr %16, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i97, align 4
  %17 = tail call ptr @malloc(i32 22)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %17, ptr noundef nonnull align 8 dereferenceable(22) @21, i64 22, i1 false)
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  %memberidx1.i.i98 = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  store i64 22, ptr %memberidx1.i.i98, align 4
  %memberidx2.i.i99 = getelementptr inbounds %String, ptr %18, i64 0, i32 2
  store i64 22, ptr %memberidx2.i.i99, align 4
  store i64 1, ptr %14, align 8
  %memberidx1.i.i100 = getelementptr inbounds %Flag, ptr %14, i64 0, i32 1
  store ptr %16, ptr %memberidx1.i.i100, align 8
  %memberidx2.i.i101 = getelementptr inbounds %Flag, ptr %14, i64 0, i32 2
  store ptr %18, ptr %memberidx2.i.i101, align 8
  %19 = load i64, ptr @flags_length, align 8
  %20 = icmp slt i64 %19, 250
  br i1 %20, label %if.entry.i.i.i, label %FlagBool_constructor.exit

if.entry.i.i.i:                                   ; preds = %2
  %21 = add nsw i64 %19, 1
  store i64 %21, ptr @flags_length, align 8
  %22 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %19
  store ptr %14, ptr %22, align 8
  br label %FlagBool_constructor.exit

FlagBool_constructor.exit:                        ; preds = %2, %if.entry.i.i.i
  %memberidx.i = getelementptr inbounds %FlagBool, ptr %14, i64 0, i32 3
  store i1 false, ptr %memberidx.i, align 8
  %23 = alloca %FlagString, align 8
  %24 = call ptr @malloc(i32 5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %24, ptr noundef nonnull align 8 dereferenceable(5) @22, i64 5, i1 false)
  %25 = call ptr @malloc(i32 24)
  store ptr %24, ptr %25, align 8
  %memberidx1.i.i102 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i102, align 4
  %memberidx2.i.i103 = getelementptr inbounds %String, ptr %25, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i103, align 4
  %26 = call ptr @malloc(i32 275)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(275) %26, ptr noundef nonnull align 8 dereferenceable(275) @23, i64 275, i1 false)
  %27 = call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i104 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 275, ptr %memberidx1.i.i104, align 4
  %memberidx2.i.i105 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 275, ptr %memberidx2.i.i105, align 4
  %28 = call ptr @malloc(i32 4)
  store i32 1667594341, ptr %28, align 8
  %29 = call ptr @malloc(i32 24)
  store ptr %28, ptr %29, align 8
  %memberidx1.i.i106 = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i106, align 4
  %memberidx2.i.i107 = getelementptr inbounds %String, ptr %29, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i107, align 4
  store i64 2, ptr %23, align 8
  %memberidx1.i.i108 = getelementptr inbounds %Flag, ptr %23, i64 0, i32 1
  store ptr %25, ptr %memberidx1.i.i108, align 8
  %memberidx2.i.i109 = getelementptr inbounds %Flag, ptr %23, i64 0, i32 2
  store ptr %27, ptr %memberidx2.i.i109, align 8
  %30 = load i64, ptr @flags_length, align 8
  %31 = icmp slt i64 %30, 250
  br i1 %31, label %if.entry.i.i.i110, label %FlagString_constructor.exit

if.entry.i.i.i110:                                ; preds = %FlagBool_constructor.exit
  %32 = add nsw i64 %30, 1
  store i64 %32, ptr @flags_length, align 8
  %33 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %30
  store ptr %23, ptr %33, align 8
  br label %FlagString_constructor.exit

FlagString_constructor.exit:                      ; preds = %FlagBool_constructor.exit, %if.entry.i.i.i110
  %memberidx.i111 = getelementptr inbounds %FlagString, ptr %23, i64 0, i32 3
  store ptr %29, ptr %memberidx.i111, align 8
  %34 = alloca %FlagString, align 8
  %35 = call ptr @malloc(i32 1)
  store i8 111, ptr %35, align 8
  %36 = call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i.i112 = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i112, align 4
  %memberidx2.i.i113 = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i113, align 4
  %37 = call ptr @malloc(i32 35)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %37, ptr noundef nonnull align 8 dereferenceable(35) @24, i64 35, i1 false)
  %38 = call ptr @malloc(i32 24)
  store ptr %37, ptr %38, align 8
  %memberidx1.i.i114 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  store i64 35, ptr %memberidx1.i.i114, align 4
  %memberidx2.i.i115 = getelementptr inbounds %String, ptr %38, i64 0, i32 2
  store i64 35, ptr %memberidx2.i.i115, align 4
  %39 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %39, ptr noundef nonnull align 8 dereferenceable(6) @25, i64 6, i1 false)
  %40 = call ptr @malloc(i32 24)
  store ptr %39, ptr %40, align 8
  %memberidx1.i.i116 = getelementptr inbounds %String, ptr %40, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i116, align 4
  %memberidx2.i.i117 = getelementptr inbounds %String, ptr %40, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i117, align 4
  store i64 2, ptr %34, align 8
  %memberidx1.i.i118 = getelementptr inbounds %Flag, ptr %34, i64 0, i32 1
  store ptr %36, ptr %memberidx1.i.i118, align 8
  %memberidx2.i.i119 = getelementptr inbounds %Flag, ptr %34, i64 0, i32 2
  store ptr %38, ptr %memberidx2.i.i119, align 8
  %41 = load i64, ptr @flags_length, align 8
  %42 = icmp slt i64 %41, 250
  br i1 %42, label %if.entry.i.i.i120, label %FlagString_constructor.exit122

if.entry.i.i.i120:                                ; preds = %FlagString_constructor.exit
  %43 = add nsw i64 %41, 1
  store i64 %43, ptr @flags_length, align 8
  %44 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %41
  store ptr %34, ptr %44, align 8
  br label %FlagString_constructor.exit122

FlagString_constructor.exit122:                   ; preds = %FlagString_constructor.exit, %if.entry.i.i.i120
  %memberidx.i121 = getelementptr inbounds %FlagString, ptr %34, i64 0, i32 3
  store ptr %40, ptr %memberidx.i121, align 8
  %45 = alloca %FlagString, align 8
  %46 = call ptr @malloc(i32 1)
  store i8 73, ptr %46, align 8
  %47 = call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  %memberidx1.i.i123 = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i123, align 4
  %memberidx2.i.i124 = getelementptr inbounds %String, ptr %47, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i124, align 4
  %48 = call ptr @malloc(i32 25)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(25) %48, ptr noundef nonnull align 8 dereferenceable(25) @26, i64 25, i1 false)
  %49 = call ptr @malloc(i32 24)
  store ptr %48, ptr %49, align 8
  %memberidx1.i.i125 = getelementptr inbounds %String, ptr %49, i64 0, i32 1
  store i64 25, ptr %memberidx1.i.i125, align 4
  %memberidx2.i.i126 = getelementptr inbounds %String, ptr %49, i64 0, i32 2
  store i64 25, ptr %memberidx2.i.i126, align 4
  %50 = call ptr @malloc(i32 19)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %50, ptr noundef nonnull align 8 dereferenceable(19) @27, i64 19, i1 false)
  %51 = call ptr @malloc(i32 24)
  store ptr %50, ptr %51, align 8
  %memberidx1.i.i127 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  store i64 19, ptr %memberidx1.i.i127, align 4
  %memberidx2.i.i128 = getelementptr inbounds %String, ptr %51, i64 0, i32 2
  store i64 19, ptr %memberidx2.i.i128, align 4
  store i64 2, ptr %45, align 8
  %memberidx1.i.i129 = getelementptr inbounds %Flag, ptr %45, i64 0, i32 1
  store ptr %47, ptr %memberidx1.i.i129, align 8
  %memberidx2.i.i130 = getelementptr inbounds %Flag, ptr %45, i64 0, i32 2
  store ptr %49, ptr %memberidx2.i.i130, align 8
  %52 = load i64, ptr @flags_length, align 8
  %53 = icmp slt i64 %52, 250
  br i1 %53, label %if.entry.i.i.i131, label %FlagString_constructor.exit133

if.entry.i.i.i131:                                ; preds = %FlagString_constructor.exit122
  %54 = add nsw i64 %52, 1
  store i64 %54, ptr @flags_length, align 8
  %55 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %52
  store ptr %45, ptr %55, align 8
  br label %FlagString_constructor.exit133

FlagString_constructor.exit133:                   ; preds = %FlagString_constructor.exit122, %if.entry.i.i.i131
  %memberidx.i132 = getelementptr inbounds %FlagString, ptr %45, i64 0, i32 3
  store ptr %51, ptr %memberidx.i132, align 8
  %56 = alloca %FlagString, align 8
  %57 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %57, ptr noundef nonnull align 8 dereferenceable(7) @28, i64 7, i1 false)
  %58 = call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i134 = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i134, align 4
  %memberidx2.i.i135 = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i135, align 4
  %59 = call ptr @malloc(i32 33)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %59, ptr noundef nonnull align 8 dereferenceable(33) @29, i64 33, i1 false)
  %60 = call ptr @malloc(i32 24)
  store ptr %59, ptr %60, align 8
  %memberidx1.i.i136 = getelementptr inbounds %String, ptr %60, i64 0, i32 1
  store i64 33, ptr %memberidx1.i.i136, align 4
  %memberidx2.i.i137 = getelementptr inbounds %String, ptr %60, i64 0, i32 2
  store i64 33, ptr %memberidx2.i.i137, align 4
  %61 = call ptr @LLVMGetDefaultTargetTriple()
  %62 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %61)
  %63 = trunc i64 %62 to i32
  %64 = call ptr @malloc(i32 %63)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %64, ptr align 8 %61, i64 %62, i1 false)
  %65 = call ptr @malloc(i32 24)
  store ptr %64, ptr %65, align 8
  %memberidx1.i.i138 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  store i64 %62, ptr %memberidx1.i.i138, align 4
  %memberidx2.i.i139 = getelementptr inbounds %String, ptr %65, i64 0, i32 2
  store i64 %62, ptr %memberidx2.i.i139, align 4
  store i64 2, ptr %56, align 8
  %memberidx1.i.i140 = getelementptr inbounds %Flag, ptr %56, i64 0, i32 1
  store ptr %58, ptr %memberidx1.i.i140, align 8
  %memberidx2.i.i141 = getelementptr inbounds %Flag, ptr %56, i64 0, i32 2
  store ptr %60, ptr %memberidx2.i.i141, align 8
  %66 = load i64, ptr @flags_length, align 8
  %67 = icmp slt i64 %66, 250
  br i1 %67, label %if.entry.i.i.i142, label %FlagString_constructor.exit144

if.entry.i.i.i142:                                ; preds = %FlagString_constructor.exit133
  %68 = add nsw i64 %66, 1
  store i64 %68, ptr @flags_length, align 8
  %69 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %66
  store ptr %56, ptr %69, align 8
  br label %FlagString_constructor.exit144

FlagString_constructor.exit144:                   ; preds = %FlagString_constructor.exit133, %if.entry.i.i.i142
  %memberidx.i143 = getelementptr inbounds %FlagString, ptr %56, i64 0, i32 3
  store ptr %65, ptr %memberidx.i143, align 8
  %70 = alloca %FlagString, align 8
  %71 = call ptr @malloc(i32 1)
  store i8 108, ptr %71, align 8
  %72 = call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i.i145 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i145, align 4
  %memberidx2.i.i146 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i146, align 4
  %73 = call ptr @malloc(i32 68)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %73, ptr noundef nonnull align 8 dereferenceable(68) @30, i64 68, i1 false)
  %74 = call ptr @malloc(i32 24)
  store ptr %73, ptr %74, align 8
  %memberidx1.i.i147 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  store i64 68, ptr %memberidx1.i.i147, align 4
  %memberidx2.i.i148 = getelementptr inbounds %String, ptr %74, i64 0, i32 2
  store i64 68, ptr %memberidx2.i.i148, align 4
  store i64 2, ptr %70, align 8
  %memberidx1.i.i149 = getelementptr inbounds %Flag, ptr %70, i64 0, i32 1
  store ptr %72, ptr %memberidx1.i.i149, align 8
  %memberidx2.i.i150 = getelementptr inbounds %Flag, ptr %70, i64 0, i32 2
  store ptr %74, ptr %memberidx2.i.i150, align 8
  %75 = load i64, ptr @flags_length, align 8
  %76 = icmp slt i64 %75, 250
  br i1 %76, label %if.entry.i.i.i151, label %FlagString_constructor.exit153

if.entry.i.i.i151:                                ; preds = %FlagString_constructor.exit144
  %77 = add nsw i64 %75, 1
  store i64 %77, ptr @flags_length, align 8
  %78 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %75
  store ptr %70, ptr %78, align 8
  br label %FlagString_constructor.exit153

FlagString_constructor.exit153:                   ; preds = %FlagString_constructor.exit144, %if.entry.i.i.i151
  %memberidx.i152 = getelementptr inbounds %FlagString, ptr %70, i64 0, i32 3
  store ptr null, ptr %memberidx.i152, align 8
  %79 = alloca %FlagInt, align 8
  %80 = call ptr @malloc(i32 1)
  store i8 79, ptr %80, align 8
  %81 = call ptr @malloc(i32 24)
  store ptr %80, ptr %81, align 8
  %memberidx1.i.i154 = getelementptr inbounds %String, ptr %81, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i154, align 4
  %memberidx2.i.i155 = getelementptr inbounds %String, ptr %81, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i155, align 4
  %82 = call ptr @malloc(i32 41)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(41) %82, ptr noundef nonnull align 8 dereferenceable(41) @31, i64 41, i1 false)
  %83 = call ptr @malloc(i32 24)
  store ptr %82, ptr %83, align 8
  %memberidx1.i.i156 = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  store i64 41, ptr %memberidx1.i.i156, align 4
  %memberidx2.i.i157 = getelementptr inbounds %String, ptr %83, i64 0, i32 2
  store i64 41, ptr %memberidx2.i.i157, align 4
  store i64 0, ptr %79, align 8
  %memberidx1.i.i158 = getelementptr inbounds %Flag, ptr %79, i64 0, i32 1
  store ptr %81, ptr %memberidx1.i.i158, align 8
  %memberidx2.i.i159 = getelementptr inbounds %Flag, ptr %79, i64 0, i32 2
  store ptr %83, ptr %memberidx2.i.i159, align 8
  %84 = load i64, ptr @flags_length, align 8
  %85 = icmp slt i64 %84, 250
  br i1 %85, label %if.entry.i.i.i160, label %FlagInt_constructor.exit

if.entry.i.i.i160:                                ; preds = %FlagString_constructor.exit153
  %86 = add nsw i64 %84, 1
  store i64 %86, ptr @flags_length, align 8
  %87 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %84
  store ptr %79, ptr %87, align 8
  br label %FlagInt_constructor.exit

FlagInt_constructor.exit:                         ; preds = %FlagString_constructor.exit153, %if.entry.i.i.i160
  %memberidx.i161 = getelementptr inbounds %FlagInt, ptr %79, i64 0, i32 3
  store i64 1, ptr %memberidx.i161, align 8
  %88 = alloca %FlagBool, align 8
  %89 = call ptr @malloc(i32 1)
  store i8 118, ptr %89, align 8
  %90 = call ptr @malloc(i32 24)
  store ptr %89, ptr %90, align 8
  %memberidx1.i.i162 = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i162, align 4
  %memberidx2.i.i163 = getelementptr inbounds %String, ptr %90, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i163, align 4
  %91 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %91, ptr noundef nonnull align 8 dereferenceable(12) @32, i64 12, i1 false)
  %92 = call ptr @malloc(i32 24)
  store ptr %91, ptr %92, align 8
  %memberidx1.i.i164 = getelementptr inbounds %String, ptr %92, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i164, align 4
  %memberidx2.i.i165 = getelementptr inbounds %String, ptr %92, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i165, align 4
  store i64 1, ptr %88, align 8
  %memberidx1.i.i166 = getelementptr inbounds %Flag, ptr %88, i64 0, i32 1
  store ptr %90, ptr %memberidx1.i.i166, align 8
  %memberidx2.i.i167 = getelementptr inbounds %Flag, ptr %88, i64 0, i32 2
  store ptr %92, ptr %memberidx2.i.i167, align 8
  %93 = load i64, ptr @flags_length, align 8
  %94 = icmp slt i64 %93, 250
  br i1 %94, label %if.entry.i.i.i168, label %FlagBool_constructor.exit170

if.entry.i.i.i168:                                ; preds = %FlagInt_constructor.exit
  %95 = add nsw i64 %93, 1
  store i64 %95, ptr @flags_length, align 8
  %96 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %93
  store ptr %88, ptr %96, align 8
  br label %FlagBool_constructor.exit170

FlagBool_constructor.exit170:                     ; preds = %FlagInt_constructor.exit, %if.entry.i.i.i168
  %memberidx.i169 = getelementptr inbounds %FlagBool, ptr %88, i64 0, i32 3
  store i1 false, ptr %memberidx.i169, align 8
  %97 = call fastcc ptr @parse_flags(i64 %0, ptr %1)
  %98 = load i1, ptr %memberidx.i169, align 8
  br i1 %98, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_check.exit, %ifend20, %ifend15, %ifend33, %if.entry13, %if.entry9, %if.entry5, %if.entry2, %if.entry
  %common.ret.op = phi i64 [ 0, %if.entry ], [ 0, %if.entry2 ], [ 1, %if.entry5 ], [ 1, %if.entry9 ], [ 1, %if.entry13 ], [ %code.0, %ifend33 ], [ 1, %ifend15 ], [ 1, %ifend20 ], [ 1, %TypeChecker_check.exit ]
  ret i64 %common.ret.op

if.entry:                                         ; preds = %FlagBool_constructor.exit170
  %99 = call i64 @write(i64 1, ptr nonnull %12, i64 5)
  %100 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr nonnull %12)
  call void @free(ptr nonnull %13)
  br label %common.ret

ifend:                                            ; preds = %FlagBool_constructor.exit170
  %101 = load i1, ptr %memberidx.i, align 8
  br i1 %101, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %102 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %102, ptr noundef nonnull align 8 dereferenceable(7) @34, i64 7, i1 false)
  %103 = call ptr @malloc(i32 24)
  %104 = call i64 @write(i64 1, ptr %102, i64 7)
  call void @free(ptr %102)
  call void @free(ptr %103)
  %105 = load ptr, ptr %1, align 8
  %106 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %105)
  %107 = trunc i64 %106 to i32
  %108 = call ptr @malloc(i32 %107)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %108, ptr align 8 %105, i64 %106, i1 false)
  %109 = call ptr @malloc(i32 24)
  %110 = call i64 @write(i64 1, ptr %108, i64 %106)
  call void @free(ptr %108)
  call void @free(ptr %109)
  %111 = call ptr @malloc(i32 29)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %111, ptr noundef nonnull align 8 dereferenceable(29) @35, i64 29, i1 false)
  %112 = call ptr @malloc(i32 24)
  %113 = call i64 @write(i64 1, ptr %111, i64 29)
  %114 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %111)
  call void @free(ptr %112)
  call fastcc void @print_flags()
  br label %common.ret

ifend4:                                           ; preds = %ifend
  %115 = icmp eq ptr %97, null
  br i1 %115, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend4
  %116 = call ptr @malloc(i32 24)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %116, ptr noundef nonnull align 8 dereferenceable(24) @38, i64 24, i1 false)
  %117 = call ptr @malloc(i32 24)
  store ptr %116, ptr %117, align 8
  %memberidx1.i.i179 = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  store i64 24, ptr %memberidx1.i.i179, align 4
  %memberidx2.i.i180 = getelementptr inbounds %String, ptr %117, i64 0, i32 2
  store i64 24, ptr %memberidx2.i.i180, align 4
  call fastcc void @print_message_error(i64 4, ptr nonnull %117)
  br label %common.ret

ifend7:                                           ; preds = %ifend4
  %118 = tail call ptr @malloc(i32 56)
  %memberidx.i181 = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 4
  %119 = call ptr @malloc(i32 24)
  %memberidx.i.i182 = getelementptr inbounds %Array_FloFile_, ptr %119, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i182, align 4
  %memberidx1.i.i183 = getelementptr inbounds %Array_FloFile_, ptr %119, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i183, align 4
  %120 = call ptr @malloc(i32 64)
  store ptr %120, ptr %119, align 8
  store i64 0, ptr %memberidx.i.i182, align 4
  store ptr %119, ptr %memberidx.i181, align 8
  store ptr null, ptr %118, align 8
  %memberidx4.i = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 2
  store ptr null, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 5
  %121 = call ptr @malloc(i32 24)
  %memberidx.i13.i = getelementptr inbounds %Array_FloError_, ptr %121, i64 0, i32 1
  store i64 0, ptr %memberidx.i13.i, align 4
  %memberidx1.i14.i = getelementptr inbounds %Array_FloError_, ptr %121, i64 0, i32 2
  store i64 8, ptr %memberidx1.i14.i, align 4
  %122 = call ptr @malloc(i32 64)
  store ptr %122, ptr %121, align 8
  store i64 0, ptr %memberidx.i13.i, align 4
  store ptr %121, ptr %memberidx5.i, align 8
  %123 = call ptr @malloc(i32 24)
  %124 = call ptr @malloc(i32 2048)
  store ptr %124, ptr %123, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %ifend7, %for.body.i.i
  %i.0.i.i494 = phi i64 [ 0, %ifend7 ], [ %127, %for.body.i.i ]
  %125 = load ptr, ptr %123, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %i.0.i.i494
  store ptr null, ptr %126, align 8
  %127 = add nuw nsw i64 %i.0.i.i494, 1
  %128 = icmp ult i64 %i.0.i.i494, 255
  br i1 %128, label %for.body.i.i, label %Compiler_constructor.exit

Compiler_constructor.exit:                        ; preds = %for.body.i.i
  %memberidx8.i = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 6
  %memberidx2.i.i184 = getelementptr inbounds %Map_String_FileId_, ptr %123, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i184, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_String_FileId_, ptr %123, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %123, ptr %memberidx8.i, align 8
  %129 = load ptr, ptr %memberidx.i132, align 8
  %memberidx.i.i.i185 = getelementptr inbounds %String, ptr %129, i64 0, i32 1
  %130 = load i64, ptr %memberidx.i.i.i185, align 4
  %131 = trunc i64 %130 to i32
  %132 = add i32 %131, 1
  %133 = call ptr @malloc(i32 %132)
  %134 = load ptr, ptr %129, align 8
  %135 = load i64, ptr %memberidx.i.i.i185, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %133, ptr align 8 %134, i64 %135, i1 false)
  %136 = getelementptr inbounds i8, ptr %133, i64 %135
  store i8 0, ptr %136, align 1
  %137 = call i64 @access(ptr %133, i64 0)
  %138 = icmp eq i64 %137, 0
  call void @free(ptr %133)
  br i1 %138, label %ifend.i, label %if.entry9

ifend.i:                                          ; preds = %Compiler_constructor.exit
  %memberidx.i186 = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 1
  store ptr %129, ptr %memberidx.i186, align 8
  %139 = call ptr @malloc(i32 21)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %139, ptr noundef nonnull align 8 dereferenceable(21) @7, i64 21, i1 false)
  %140 = call ptr @malloc(i32 24)
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  %141 = load i64, ptr %memberidx.i.i.i185, align 4
  %142 = trunc i64 %141 to i32
  %143 = add i32 %142, 1
  %144 = call ptr @malloc(i32 %143)
  %145 = load ptr, ptr %129, align 8
  %146 = load i64, ptr %memberidx.i.i.i185, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %144, ptr align 8 %145, i64 %146, i1 false)
  %147 = getelementptr inbounds i8, ptr %144, i64 %146
  store i8 0, ptr %147, align 1
  %148 = call ptr @malloc(i32 22)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %148, ptr noundef nonnull align 8 dereferenceable(21) %139, i64 21, i1 false)
  %149 = getelementptr inbounds i8, ptr %148, i64 21
  store i8 0, ptr %149, align 1
  %150 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %11, ptr nonnull @8, ptr %144, ptr %148)
  %151 = load ptr, ptr %11, align 8
  %152 = call ptr @malloc(i32 24)
  store ptr %151, ptr %152, align 8
  %memberidx1.i.i7.i = getelementptr inbounds %String, ptr %152, i64 0, i32 1
  store i64 %150, ptr %memberidx1.i.i7.i, align 4
  %memberidx2.i.i8.i = getelementptr inbounds %String, ptr %152, i64 0, i32 2
  store i64 %150, ptr %memberidx2.i.i8.i, align 4
  call void @free(ptr %144)
  call void @free(ptr %148)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  store ptr %152, ptr %memberidx1.i, align 8
  call void @free(ptr %139)
  call void @free(ptr %140)
  %153 = call fastcc ptr @Compiler_register_file(ptr nonnull %118, ptr nonnull %97)
  %154 = call fastcc i1 @Compiler_set_current_file(ptr nonnull %118, ptr %153)
  br i1 %154, label %ifend15, label %if.entry13

if.entry9:                                        ; preds = %Compiler_constructor.exit
  %155 = load ptr, ptr %memberidx.i132, align 8
  %memberidx.i187 = getelementptr inbounds %String, ptr %155, i64 0, i32 1
  %156 = load i64, ptr %memberidx.i187, align 4
  %157 = trunc i64 %156 to i32
  %158 = add i32 %157, 1
  %159 = call ptr @malloc(i32 %158)
  %160 = load ptr, ptr %155, align 8
  %161 = load i64, ptr %memberidx.i187, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %159, ptr align 8 %160, i64 %161, i1 false)
  %162 = getelementptr inbounds i8, ptr %159, i64 %161
  store i8 0, ptr %162, align 1
  %163 = alloca ptr, align 8
  %164 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %163, ptr nonnull @39, ptr %159)
  %165 = load ptr, ptr %163, align 8
  %166 = tail call ptr @malloc(i32 24)
  store ptr %165, ptr %166, align 8
  %memberidx1.i188 = getelementptr inbounds %String, ptr %166, i64 0, i32 1
  store i64 %164, ptr %memberidx1.i188, align 4
  %memberidx2.i189 = getelementptr inbounds %String, ptr %166, i64 0, i32 2
  store i64 %164, ptr %memberidx2.i189, align 4
  tail call void @free(ptr %159)
  call fastcc void @print_message_error(i64 3, ptr nonnull %166)
  br label %common.ret

if.entry13:                                       ; preds = %ifend.i
  %memberidx.i190 = getelementptr inbounds %String, ptr %97, i64 0, i32 1
  %167 = load i64, ptr %memberidx.i190, align 4
  %168 = trunc i64 %167 to i32
  %169 = add i32 %168, 1
  %170 = call ptr @malloc(i32 %169)
  %171 = load ptr, ptr %97, align 8
  %172 = load i64, ptr %memberidx.i190, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %170, ptr align 8 %171, i64 %172, i1 false)
  %173 = getelementptr inbounds i8, ptr %170, i64 %172
  store i8 0, ptr %173, align 1
  %174 = alloca ptr, align 8
  %175 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %174, ptr nonnull @40, ptr %170)
  %176 = load ptr, ptr %174, align 8
  %177 = tail call ptr @malloc(i32 24)
  store ptr %176, ptr %177, align 8
  %memberidx1.i191 = getelementptr inbounds %String, ptr %177, i64 0, i32 1
  store i64 %175, ptr %memberidx1.i191, align 4
  %memberidx2.i192 = getelementptr inbounds %String, ptr %177, i64 0, i32 2
  store i64 %175, ptr %memberidx2.i192, align 4
  tail call void @free(ptr %170)
  call fastcc void @print_message_error(i64 3, ptr nonnull %177)
  br label %common.ret

ifend15:                                          ; preds = %ifend.i
  %178 = load ptr, ptr %memberidx4.i, align 8
  %179 = load ptr, ptr %memberidx5.i, align 8
  %180 = call fastcc ptr @Lexer_tokenize(ptr %178, ptr %179)
  %181 = call fastcc i1 @Compiler_print_errors(ptr nonnull %118)
  br i1 %181, label %common.ret, label %ifend20

ifend20:                                          ; preds = %ifend15
  %182 = load ptr, ptr %memberidx5.i, align 8
  %183 = call fastcc ptr @Parser_parse(ptr %180, ptr %182)
  %184 = call fastcc i1 @Compiler_print_errors(ptr nonnull %118)
  br i1 %184, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend20
  call void @llvm.lifetime.start.p0(i64 58, ptr nonnull %10)
  %memberidx.i.i193 = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 5
  store ptr %118, ptr %memberidx.i.i193, align 8
  %memberidx1.i.i194 = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 6
  store i1 false, ptr %memberidx1.i.i194, align 8
  %185 = call ptr @malloc(i32 8)
  %186 = call ptr @malloc(i32 24)
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %186, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %186, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i.i, align 4
  %187 = call ptr @malloc(i32 64)
  store ptr %187, ptr %186, align 8
  store i64 0, ptr %memberidx.i.i.i.i, align 4
  store ptr %186, ptr %185, align 8
  store ptr %185, ptr %10, align 8
  %188 = call ptr @malloc(i32 24)
  %189 = call ptr @malloc(i32 2048)
  store ptr %189, ptr %188, align 8
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %ifend24, %for.body.i.i.i
  %i.0.i.i.i493 = phi i64 [ 0, %ifend24 ], [ %192, %for.body.i.i.i ]
  %190 = load ptr, ptr %188, align 8
  %191 = getelementptr inbounds ptr, ptr %190, i64 %i.0.i.i.i493
  store ptr null, ptr %191, align 8
  %192 = add nuw nsw i64 %i.0.i.i.i493, 1
  %193 = icmp ult i64 %i.0.i.i.i493, 255
  br i1 %193, label %for.body.i.i.i, label %TypeChecker_constructor.exit.i

TypeChecker_constructor.exit.i:                   ; preds = %for.body.i.i.i
  %memberidx3.i.i196 = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 8
  %memberidx2.i7.i.i = getelementptr inbounds %Map_String_Generic_, ptr %188, i64 0, i32 1
  store i64 256, ptr %memberidx2.i7.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %Map_String_Generic_, ptr %188, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i.i, align 4
  store ptr %188, ptr %memberidx3.i.i196, align 8
  %194 = load ptr, ptr %memberidx.i.i193, align 8
  %195 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %195, ptr noundef nonnull align 8 dereferenceable(12) @99, i64 12, i1 false)
  %196 = call ptr @malloc(i32 24)
  store ptr %195, ptr %196, align 8
  %memberidx1.i.i.i13.i = getelementptr inbounds %String, ptr %196, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i.i13.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %String, ptr %196, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i.i.i, align 4
  %197 = call fastcc ptr @Compiler_register_file(ptr %194, ptr nonnull %196)
  %198 = call ptr @malloc(i32 56)
  call fastcc void @ModuleAST_constructor(ptr %198)
  %199 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %199, ptr noundef nonnull align 8 dereferenceable(12) @99, i64 12, i1 false)
  %200 = call ptr @malloc(i32 24)
  store ptr %199, ptr %200, align 8
  %memberidx1.i.i2.i.i = getelementptr inbounds %String, ptr %200, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i2.i.i, align 4
  %memberidx2.i.i3.i.i = getelementptr inbounds %String, ptr %200, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i3.i.i, align 4
  %201 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %10, ptr %198, ptr nonnull %200)
  %202 = load ptr, ptr %memberidx.i.i193, align 8
  %memberidx1.i15.i = getelementptr inbounds %Compiler, ptr %202, i64 0, i32 3
  %203 = load ptr, ptr %memberidx1.i15.i, align 8
  %204 = call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr nonnull %10, ptr %203, ptr null)
  %205 = load ptr, ptr %memberidx.i.i193, align 8
  %memberidx1.i17.i = getelementptr inbounds %Compiler, ptr %205, i64 0, i32 5
  %206 = load ptr, ptr %memberidx1.i17.i, align 8
  %memberidx2.i.i197 = getelementptr inbounds %Array_FloError_, ptr %206, i64 0, i32 1
  %207 = load i64, ptr %memberidx2.i.i197, align 4
  %208 = icmp sgt i64 %207, 0
  br i1 %208, label %TypeChecker_check.exit, label %ifend.i198

ifend.i198:                                       ; preds = %TypeChecker_constructor.exit.i
  %memberidx.i18.i = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 4
  %209 = load ptr, ptr %10, align 8
  %210 = load ptr, ptr %209, align 8
  %211 = load ptr, ptr %210, align 8
  %212 = load ptr, ptr %211, align 8
  %memberidx1.i19.i = getelementptr inbounds %Module, ptr %212, i64 0, i32 5
  %213 = load ptr, ptr %memberidx1.i19.i, align 8
  store ptr %213, ptr %memberidx.i18.i, align 8
  %214 = load ptr, ptr %209, align 8
  %215 = load ptr, ptr %214, align 8
  %216 = getelementptr inbounds ptr, ptr %215, i64 1
  %217 = load ptr, ptr %216, align 8
  call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %10, ptr %217)
  %218 = load ptr, ptr %memberidx.i.i193, align 8
  %memberidx1.i21.i = getelementptr inbounds %Compiler, ptr %218, i64 0, i32 5
  %219 = load ptr, ptr %memberidx1.i21.i, align 8
  %memberidx2.i22.i = getelementptr inbounds %Array_FloError_, ptr %219, i64 0, i32 1
  %220 = load i64, ptr %memberidx2.i22.i, align 4
  %221 = icmp sgt i64 %220, 0
  br i1 %221, label %TypeChecker_check.exit, label %ifend3.i

ifend3.i:                                         ; preds = %ifend.i198
  %222 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %10, ptr %183, ptr nonnull %97)
  %223 = load ptr, ptr %10, align 8
  br label %TypeChecker_check.exit

TypeChecker_check.exit:                           ; preds = %TypeChecker_constructor.exit.i, %ifend.i198, %ifend3.i
  %common.ret.op.i = phi ptr [ %223, %ifend3.i ], [ null, %TypeChecker_constructor.exit.i ], [ null, %ifend.i198 ]
  call void @llvm.lifetime.end.p0(i64 58, ptr nonnull %10)
  %224 = call fastcc i1 @Compiler_print_errors(ptr nonnull %118)
  br i1 %224, label %common.ret, label %ifend27

ifend27:                                          ; preds = %TypeChecker_check.exit
  call void @llvm.lifetime.start.p0(i64 81, ptr nonnull %9)
  %225 = load ptr, ptr %common.ret.op.i, align 8
  %226 = load ptr, ptr %225, align 8
  %227 = getelementptr inbounds ptr, ptr %226, i64 2
  %228 = load ptr, ptr %227, align 8
  %229 = load ptr, ptr %228, align 8
  %memberidx.i.i199 = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 4
  store ptr %common.ret.op.i, ptr %memberidx.i.i199, align 8
  %230 = call ptr @malloc(i32 24)
  %231 = call ptr @malloc(i32 2048)
  store ptr %231, ptr %230, align 8
  br label %for.body.i.i.i202

for.body.i.i.i202:                                ; preds = %ifend27, %for.body.i.i.i202
  %i.0.i.i.i200492 = phi i64 [ 0, %ifend27 ], [ %234, %for.body.i.i.i202 ]
  %232 = load ptr, ptr %230, align 8
  %233 = getelementptr inbounds ptr, ptr %232, i64 %i.0.i.i.i200492
  store ptr null, ptr %233, align 8
  %234 = add nuw nsw i64 %i.0.i.i.i200492, 1
  %235 = icmp ult i64 %i.0.i.i.i200492, 255
  br i1 %235, label %for.body.i.i.i202, label %Map_String_LLVMValueRef__constructor.exit.i.i

Map_String_LLVMValueRef__constructor.exit.i.i:    ; preds = %for.body.i.i.i202
  %memberidx1.i79.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 6
  %memberidx2.i.i.i203 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %230, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i.i203, align 4
  %memberidx3.i.i.i204 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %230, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i.i204, align 4
  store ptr %230, ptr %memberidx1.i79.i, align 8
  %236 = call ptr @malloc(i32 24)
  %237 = call ptr @malloc(i32 2048)
  store ptr %237, ptr %236, align 8
  br label %for.body.i21.i.i

for.body.i21.i.i:                                 ; preds = %Map_String_LLVMValueRef__constructor.exit.i.i, %for.body.i21.i.i
  %i.0.i19.i.i491 = phi i64 [ 0, %Map_String_LLVMValueRef__constructor.exit.i.i ], [ %240, %for.body.i21.i.i ]
  %238 = load ptr, ptr %236, align 8
  %239 = getelementptr inbounds ptr, ptr %238, i64 %i.0.i19.i.i491
  store ptr null, ptr %239, align 8
  %240 = add nuw nsw i64 %i.0.i19.i.i491, 1
  %241 = icmp ult i64 %i.0.i19.i.i491, 255
  br i1 %241, label %for.body.i21.i.i, label %Map_String_LLVMValueRef__constructor.exit24.i.i

Map_String_LLVMValueRef__constructor.exit24.i.i:  ; preds = %for.body.i21.i.i
  %memberidx2.i.i205 = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 7
  %memberidx2.i22.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %236, i64 0, i32 1
  store i64 256, ptr %memberidx2.i22.i.i, align 4
  %memberidx3.i23.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %236, i64 0, i32 2
  store i64 0, ptr %memberidx3.i23.i.i, align 4
  store ptr %236, ptr %memberidx2.i.i205, align 8
  %242 = call ptr @malloc(i32 24)
  %243 = call ptr @malloc(i32 2048)
  store ptr %243, ptr %242, align 8
  br label %for.body.i27.i.i

for.body.i27.i.i:                                 ; preds = %Map_String_LLVMValueRef__constructor.exit24.i.i, %for.body.i27.i.i
  %i.0.i25.i.i490 = phi i64 [ 0, %Map_String_LLVMValueRef__constructor.exit24.i.i ], [ %246, %for.body.i27.i.i ]
  %244 = load ptr, ptr %242, align 8
  %245 = getelementptr inbounds ptr, ptr %244, i64 %i.0.i25.i.i490
  store ptr null, ptr %245, align 8
  %246 = add nuw nsw i64 %i.0.i25.i.i490, 1
  %247 = icmp ult i64 %i.0.i25.i.i490, 255
  br i1 %247, label %for.body.i27.i.i, label %Map_String_CGClassType__constructor.exit.i.i

Map_String_CGClassType__constructor.exit.i.i:     ; preds = %for.body.i27.i.i
  %memberidx3.i.i206 = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 8
  %memberidx2.i28.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %242, i64 0, i32 1
  store i64 256, ptr %memberidx2.i28.i.i, align 4
  %memberidx3.i29.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %242, i64 0, i32 2
  store i64 0, ptr %memberidx3.i29.i.i, align 4
  store ptr %242, ptr %memberidx3.i.i206, align 8
  %248 = call ptr @malloc(i32 24)
  %249 = call ptr @malloc(i32 2048)
  store ptr %249, ptr %248, align 8
  br label %for.body.i32.i.i

for.body.i32.i.i:                                 ; preds = %Map_String_CGClassType__constructor.exit.i.i, %for.body.i32.i.i
  %i.0.i30.i.i489 = phi i64 [ 0, %Map_String_CGClassType__constructor.exit.i.i ], [ %252, %for.body.i32.i.i ]
  %250 = load ptr, ptr %248, align 8
  %251 = getelementptr inbounds ptr, ptr %250, i64 %i.0.i30.i.i489
  store ptr null, ptr %251, align 8
  %252 = add nuw nsw i64 %i.0.i30.i.i489, 1
  %253 = icmp ult i64 %i.0.i30.i.i489, 255
  br i1 %253, label %for.body.i32.i.i, label %Map_String_CGEnumType__constructor.exit.i.i

Map_String_CGEnumType__constructor.exit.i.i:      ; preds = %for.body.i32.i.i
  %memberidx4.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 9
  %memberidx2.i33.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %248, i64 0, i32 1
  store i64 256, ptr %memberidx2.i33.i.i, align 4
  %memberidx3.i34.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %248, i64 0, i32 2
  store i64 0, ptr %memberidx3.i34.i.i, align 4
  store ptr %248, ptr %memberidx4.i.i, align 8
  %254 = call ptr @malloc(i32 24)
  %255 = call ptr @malloc(i32 2048)
  store ptr %255, ptr %254, align 8
  br label %for.body.i37.i.i

for.body.i37.i.i:                                 ; preds = %Map_String_CGEnumType__constructor.exit.i.i, %for.body.i37.i.i
  %i.0.i35.i.i488 = phi i64 [ 0, %Map_String_CGEnumType__constructor.exit.i.i ], [ %258, %for.body.i37.i.i ]
  %256 = load ptr, ptr %254, align 8
  %257 = getelementptr inbounds ptr, ptr %256, i64 %i.0.i35.i.i488
  store ptr null, ptr %257, align 8
  %258 = add nuw nsw i64 %i.0.i35.i.i488, 1
  %259 = icmp ult i64 %i.0.i35.i.i488, 255
  br i1 %259, label %for.body.i37.i.i, label %CodeGen_constructor.exit.i

CodeGen_constructor.exit.i:                       ; preds = %for.body.i37.i.i
  %memberidx5.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 10
  %memberidx2.i38.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %254, i64 0, i32 1
  store i64 256, ptr %memberidx2.i38.i.i, align 4
  %memberidx3.i39.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %254, i64 0, i32 2
  store i64 0, ptr %memberidx3.i39.i.i, align 4
  store ptr %254, ptr %memberidx5.i.i, align 8
  %memberidx6.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 5
  store i1 true, ptr %memberidx6.i.i, align 8
  %memberidx8.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 2
  %memberidx.i.i80.i = getelementptr inbounds %String, ptr %229, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx8.i.i, i8 0, i64 16, i1 false)
  %260 = load i64, ptr %memberidx.i.i80.i, align 4
  %261 = trunc i64 %260 to i32
  %262 = add i32 %261, 1
  %263 = call ptr @malloc(i32 %262)
  %264 = load ptr, ptr %229, align 8
  %265 = load i64, ptr %memberidx.i.i80.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %263, ptr align 8 %264, i64 %265, i1 false)
  %266 = getelementptr inbounds i8, ptr %263, i64 %265
  store i8 0, ptr %266, align 1
  %267 = call ptr @LLVMModuleCreateWithName(ptr %263)
  store ptr %267, ptr %9, align 8
  %memberidx8.i207 = getelementptr inbounds %Module, ptr %228, i64 0, i32 6
  %268 = load ptr, ptr %memberidx8.i207, align 8
  %269 = call ptr @malloc(i32 25)
  %270 = load ptr, ptr %268, align 8
  %memberidx1.i81.i = getelementptr inbounds %Array_Enum_, ptr %268, i64 0, i32 1
  %271 = load i64, ptr %memberidx1.i81.i, align 4
  store i1 false, ptr %269, align 1
  %memberidx1.i.i.i208 = getelementptr inbounds %ArrayIterator_Enum_, ptr %269, i64 0, i32 1
  %memberidx2.i.i82.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %269, i64 0, i32 3
  store ptr %270, ptr %memberidx2.i.i82.i, align 8
  %memberidx3.i.i83.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %269, i64 0, i32 2
  store i64 %271, ptr %memberidx3.i.i83.i, align 4
  store i64 1, ptr %memberidx1.i.i.i208, align 4
  %272 = icmp slt i64 %271, 1
  br i1 %272, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %CodeGen_constructor.exit.i, %for.body.i
  %273 = phi i64 [ %274, %for.body.i ], [ 1, %CodeGen_constructor.exit.i ]
  %enum_.0.i486.in = phi ptr [ %275, %for.body.i ], [ %270, %CodeGen_constructor.exit.i ]
  %enum_.0.i486 = load ptr, ptr %enum_.0.i486.in, align 8
  call fastcc void @CodeGen_declare_enum(ptr nonnull %9, ptr %enum_.0.i486)
  %274 = add nuw nsw i64 %273, 1
  store i64 %274, ptr %memberidx1.i.i.i208, align 4
  %275 = getelementptr inbounds ptr, ptr %270, i64 %273
  %.not558 = icmp slt i64 %273, %271
  br i1 %.not558, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %CodeGen_constructor.exit.i
  call void @free(ptr nonnull %269)
  %memberidx11.i = getelementptr inbounds %Module, ptr %228, i64 0, i32 3
  %276 = load ptr, ptr %memberidx11.i, align 8
  %277 = call ptr @malloc(i32 25)
  %278 = load ptr, ptr %276, align 8
  %memberidx1.i90.i = getelementptr inbounds %Array_Class_, ptr %276, i64 0, i32 1
  %279 = load i64, ptr %memberidx1.i90.i, align 4
  store i1 false, ptr %277, align 1
  %memberidx1.i.i91.i = getelementptr inbounds %ArrayIterator_Class_, ptr %277, i64 0, i32 1
  %memberidx2.i.i92.i = getelementptr inbounds %ArrayIterator_Class_, ptr %277, i64 0, i32 3
  store ptr %278, ptr %memberidx2.i.i92.i, align 8
  %memberidx3.i.i93.i = getelementptr inbounds %ArrayIterator_Class_, ptr %277, i64 0, i32 2
  store i64 %279, ptr %memberidx3.i.i93.i, align 4
  store i64 1, ptr %memberidx1.i.i91.i, align 4
  %280 = icmp slt i64 %279, 1
  br i1 %280, label %for.end15.i, label %for.body13.i

for.body13.i:                                     ; preds = %for.end.i, %for.body13.i
  %281 = phi i64 [ %282, %for.body13.i ], [ 1, %for.end.i ]
  %class_.0.i483.in = phi ptr [ %283, %for.body13.i ], [ %278, %for.end.i ]
  %class_.0.i483 = load ptr, ptr %class_.0.i483.in, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %9, ptr %class_.0.i483)
  %282 = add nuw nsw i64 %281, 1
  store i64 %282, ptr %memberidx1.i.i91.i, align 4
  %283 = getelementptr inbounds ptr, ptr %278, i64 %281
  %.not559 = icmp slt i64 %281, %279
  br i1 %.not559, label %for.body13.i, label %for.end15.i

for.end15.i:                                      ; preds = %for.body13.i, %for.end.i
  call void @free(ptr nonnull %277)
  %memberidx18.i = getelementptr inbounds %Module, ptr %228, i64 0, i32 8
  %284 = load ptr, ptr %memberidx18.i, align 8
  %285 = call ptr @malloc(i32 25)
  %286 = load ptr, ptr %284, align 8
  %memberidx1.i100.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %284, i64 0, i32 1
  %287 = load i64, ptr %memberidx1.i100.i, align 4
  store i1 false, ptr %285, align 1
  %memberidx1.i.i101.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %285, i64 0, i32 1
  %memberidx2.i.i102.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %285, i64 0, i32 3
  store ptr %286, ptr %memberidx2.i.i102.i, align 8
  %memberidx3.i.i103.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %285, i64 0, i32 2
  store i64 %287, ptr %memberidx3.i.i103.i, align 4
  store i64 1, ptr %memberidx1.i.i101.i, align 4
  %288 = icmp slt i64 %287, 1
  br i1 %288, label %for.end22.i, label %for.body20.i

for.body20.i:                                     ; preds = %for.end15.i, %for.body20.i
  %289 = phi i64 [ %290, %for.body20.i ], [ 1, %for.end15.i ]
  %const_.0.i480.in = phi ptr [ %291, %for.body20.i ], [ %286, %for.end15.i ]
  %const_.0.i480 = load ptr, ptr %const_.0.i480.in, align 8
  call fastcc void @CodeGen_codegen_const_declaration(ptr nonnull %9, ptr null, ptr %const_.0.i480)
  %290 = add nuw nsw i64 %289, 1
  store i64 %290, ptr %memberidx1.i.i101.i, align 4
  %291 = getelementptr inbounds ptr, ptr %286, i64 %289
  %.not560 = icmp slt i64 %289, %287
  br i1 %.not560, label %for.body20.i, label %for.end22.i

for.end22.i:                                      ; preds = %for.body20.i, %for.end15.i
  call void @free(ptr nonnull %285)
  %memberidx25.i = getelementptr inbounds %Module, ptr %228, i64 0, i32 9
  %292 = load ptr, ptr %memberidx25.i, align 8
  %293 = call ptr @malloc(i32 25)
  %294 = load ptr, ptr %292, align 8
  %memberidx1.i110.i = getelementptr inbounds %Array_VarDeclaration_, ptr %292, i64 0, i32 1
  %295 = load i64, ptr %memberidx1.i110.i, align 4
  store i1 false, ptr %293, align 1
  %memberidx1.i.i111.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %293, i64 0, i32 1
  %memberidx2.i.i112.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %293, i64 0, i32 3
  store ptr %294, ptr %memberidx2.i.i112.i, align 8
  %memberidx3.i.i113.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %293, i64 0, i32 2
  store i64 %295, ptr %memberidx3.i.i113.i, align 4
  store i64 1, ptr %memberidx1.i.i111.i, align 4
  %296 = icmp slt i64 %295, 1
  br i1 %296, label %for.end29.i, label %for.body27.i

for.body27.i:                                     ; preds = %for.end22.i, %for.body27.i
  %297 = phi i64 [ %298, %for.body27.i ], [ 1, %for.end22.i ]
  %var_.0.i477.in = phi ptr [ %299, %for.body27.i ], [ %294, %for.end22.i ]
  %var_.0.i477 = load ptr, ptr %var_.0.i477.in, align 8
  call fastcc void @CodeGen_codegen_var_declaration(ptr nonnull %9, ptr null, ptr %var_.0.i477)
  %298 = add nuw nsw i64 %297, 1
  store i64 %298, ptr %memberidx1.i.i111.i, align 4
  %299 = getelementptr inbounds ptr, ptr %294, i64 %297
  %.not561 = icmp slt i64 %297, %295
  br i1 %.not561, label %for.body27.i, label %for.end29.i

for.end29.i:                                      ; preds = %for.body27.i, %for.end22.i
  call void @free(ptr nonnull %293)
  %300 = load ptr, ptr %memberidx11.i, align 8
  %301 = call ptr @malloc(i32 25)
  %302 = load ptr, ptr %300, align 8
  %memberidx1.i120.i = getelementptr inbounds %Array_Class_, ptr %300, i64 0, i32 1
  %303 = load i64, ptr %memberidx1.i120.i, align 4
  store i1 false, ptr %301, align 1
  %memberidx1.i.i121.i = getelementptr inbounds %ArrayIterator_Class_, ptr %301, i64 0, i32 1
  %memberidx2.i.i122.i = getelementptr inbounds %ArrayIterator_Class_, ptr %301, i64 0, i32 3
  store ptr %302, ptr %memberidx2.i.i122.i, align 8
  %memberidx3.i.i123.i = getelementptr inbounds %ArrayIterator_Class_, ptr %301, i64 0, i32 2
  store i64 %303, ptr %memberidx3.i.i123.i, align 4
  store i64 1, ptr %memberidx1.i.i121.i, align 4
  %304 = icmp slt i64 %303, 1
  br i1 %304, label %for.end36.i, label %for.body34.i

for.body34.i:                                     ; preds = %for.end29.i, %for.body34.i
  %305 = phi i64 [ %306, %for.body34.i ], [ 1, %for.end29.i ]
  %class_4.0.i474.in = phi ptr [ %307, %for.body34.i ], [ %302, %for.end29.i ]
  %class_4.0.i474 = load ptr, ptr %class_4.0.i474.in, align 8
  call fastcc void @CodeGen_codegen_class(ptr nonnull %9, ptr %class_4.0.i474)
  %306 = add nuw nsw i64 %305, 1
  store i64 %306, ptr %memberidx1.i.i121.i, align 4
  %307 = getelementptr inbounds ptr, ptr %302, i64 %305
  %.not562 = icmp slt i64 %305, %303
  br i1 %.not562, label %for.body34.i, label %for.end36.i

for.end36.i:                                      ; preds = %for.body34.i, %for.end29.i
  call void @free(ptr nonnull %301)
  %memberidx39.i = getelementptr inbounds %Module, ptr %228, i64 0, i32 4
  %308 = load ptr, ptr %memberidx39.i, align 8
  %309 = call ptr @malloc(i32 25)
  %310 = load ptr, ptr %308, align 8
  %memberidx1.i130.i = getelementptr inbounds %Array_Function_, ptr %308, i64 0, i32 1
  %311 = load i64, ptr %memberidx1.i130.i, align 4
  store i1 false, ptr %309, align 1
  %memberidx1.i.i131.i = getelementptr inbounds %ArrayIterator_Function_, ptr %309, i64 0, i32 1
  %memberidx2.i.i132.i = getelementptr inbounds %ArrayIterator_Function_, ptr %309, i64 0, i32 3
  store ptr %310, ptr %memberidx2.i.i132.i, align 8
  %memberidx3.i.i133.i = getelementptr inbounds %ArrayIterator_Function_, ptr %309, i64 0, i32 2
  store i64 %311, ptr %memberidx3.i.i133.i, align 4
  store i64 1, ptr %memberidx1.i.i131.i, align 4
  %312 = icmp slt i64 %311, 1
  br i1 %312, label %for.end43.i, label %for.body41.i

for.body41.i:                                     ; preds = %for.end36.i, %for.body41.i
  %313 = phi i64 [ %314, %for.body41.i ], [ 1, %for.end36.i ]
  %func_.0.i471.in = phi ptr [ %315, %for.body41.i ], [ %310, %for.end36.i ]
  %func_.0.i471 = load ptr, ptr %func_.0.i471.in, align 8
  call fastcc void @CodeGen_codegen_function(ptr nonnull %9, ptr %func_.0.i471)
  %314 = add nuw nsw i64 %313, 1
  store i64 %314, ptr %memberidx1.i.i131.i, align 4
  %315 = getelementptr inbounds ptr, ptr %310, i64 %313
  %.not563 = icmp slt i64 %313, %311
  br i1 %.not563, label %for.body41.i, label %for.end43.i

for.end43.i:                                      ; preds = %for.body41.i, %for.end36.i
  call void @free(ptr nonnull %309)
  %316 = load ptr, ptr %memberidx1.i79.i, align 8
  %317 = call ptr @malloc(i32 25)
  %318 = load ptr, ptr %316, align 8
  %memberidx1.i.i141.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %316, i64 0, i32 1
  %319 = load i64, ptr %memberidx1.i.i141.i, align 4
  %memberidx2.i.i142.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %316, i64 0, i32 2
  %320 = load i64, ptr %memberidx2.i.i142.i, align 4
  store i1 false, ptr %317, align 1
  %memberidx1.i.i.i143.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %317, i64 0, i32 1
  store ptr %318, ptr %memberidx1.i.i.i143.i, align 8
  %memberidx2.i.i.i144.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %317, i64 0, i32 2
  %memberidx3.i.i.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %317, i64 0, i32 3
  store i64 %320, ptr %memberidx3.i.i.i.i, align 4
  %321 = add nsw i64 %319, -1
  store i64 %321, ptr %memberidx2.i.i.i144.i, align 4
  %322 = icmp sgt i64 %319, 0
  br i1 %322, label %while.entry.i.i.i, label %MapIterator_String_LLVMValueRef__next.exit.i.i

while.entry.i.i.i:                                ; preds = %for.end43.i, %ifend.i.i.i
  %323 = phi i64 [ %326, %ifend.i.i.i ], [ %321, %for.end43.i ]
  %324 = phi ptr [ %incdec.ptr.i.i.i, %ifend.i.i.i ], [ %318, %for.end43.i ]
  %incdec.ptr.i.i.i = getelementptr inbounds ptr, ptr %324, i64 1
  %325 = load ptr, ptr %324, align 8
  %.not.i.i.i = icmp eq ptr %325, null
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit

ifend.i.i.i:                                      ; preds = %while.entry.i.i.i
  %326 = add nsw i64 %323, -1
  store i64 %326, ptr %memberidx2.i.i.i144.i, align 4
  %327 = icmp sgt i64 %323, 0
  br i1 %327, label %while.entry.i.i.i, label %MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit

MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit: ; preds = %while.entry.i.i.i, %ifend.i.i.i
  %memberidx2.i.i.i144.i.promoted541 = phi i64 [ %323, %while.entry.i.i.i ], [ %326, %ifend.i.i.i ]
  store ptr %incdec.ptr.i.i.i, ptr %memberidx1.i.i.i143.i, align 8
  br label %MapIterator_String_LLVMValueRef__next.exit.i.i

MapIterator_String_LLVMValueRef__next.exit.i.i:   ; preds = %MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit, %for.end43.i
  %memberidx2.i.i.i144.i.promoted = phi i64 [ %memberidx2.i.i.i144.i.promoted541, %MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit ], [ %321, %for.end43.i ]
  %memberidx1.i.i.i143.i.promoted466 = phi ptr [ %incdec.ptr.i.i.i, %MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit ], [ %318, %for.end43.i ]
  %storemerge362462 = icmp slt i64 %320, 1
  br i1 %storemerge362462, label %for.end.i.i, label %for.body.i.i210

for.body.i.i210:                                  ; preds = %MapIterator_String_LLVMValueRef__next.exit.i.i, %MapIterator_String_LLVMValueRef__next.exit81.i.i
  %328 = phi i64 [ %339, %MapIterator_String_LLVMValueRef__next.exit81.i.i ], [ %memberidx2.i.i.i144.i.promoted, %MapIterator_String_LLVMValueRef__next.exit.i.i ]
  %incdec.ptr.i75.i.i.lcssa468 = phi ptr [ %incdec.ptr.i75.i.i.lcssa467, %MapIterator_String_LLVMValueRef__next.exit81.i.i ], [ %memberidx1.i.i.i143.i.promoted466, %MapIterator_String_LLVMValueRef__next.exit.i.i ]
  %storemerge381463.in = phi i64 [ %storemerge381463, %MapIterator_String_LLVMValueRef__next.exit81.i.i ], [ %320, %MapIterator_String_LLVMValueRef__next.exit.i.i ]
  %storemerge381463 = add nsw i64 %storemerge381463.in, -1
  %var_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i75.i.i.lcssa468, i64 -1
  %var_entry.0.i.i = load ptr, ptr %var_entry.0.i.i.in, align 8
  %329 = load ptr, ptr %var_entry.0.i.i, align 8
  %330 = load ptr, ptr %329, align 8
  call void @free(ptr %330)
  call void @free(ptr %329)
  %331 = add nsw i64 %328, -1
  %332 = icmp sgt i64 %328, 0
  br i1 %332, label %while.entry.i77.i.i.preheader, label %MapIterator_String_LLVMValueRef__next.exit81.i.i

while.entry.i77.i.i.preheader:                    ; preds = %for.body.i.i210
  %333 = shl i64 %328, 3
  %uglygep538 = getelementptr i8, ptr %incdec.ptr.i75.i.i.lcssa468, i64 %333
  br label %while.entry.i77.i.i

while.entry.i77.i.i:                              ; preds = %while.entry.i77.i.i.preheader, %ifend.i80.i.i
  %334 = phi i64 [ %337, %ifend.i80.i.i ], [ %331, %while.entry.i77.i.i.preheader ]
  %335 = phi ptr [ %incdec.ptr.i75.i.i, %ifend.i80.i.i ], [ %incdec.ptr.i75.i.i.lcssa468, %while.entry.i77.i.i.preheader ]
  %incdec.ptr.i75.i.i = getelementptr inbounds ptr, ptr %335, i64 1
  %336 = load ptr, ptr %335, align 8
  %.not.i76.i.i = icmp eq ptr %336, null
  br i1 %.not.i76.i.i, label %ifend.i80.i.i, label %MapIterator_String_LLVMValueRef__next.exit81.i.i

ifend.i80.i.i:                                    ; preds = %while.entry.i77.i.i
  %337 = add nsw i64 %334, -1
  %338 = icmp sgt i64 %334, 0
  br i1 %338, label %while.entry.i77.i.i, label %MapIterator_String_LLVMValueRef__next.exit81.i.i

MapIterator_String_LLVMValueRef__next.exit81.i.i: ; preds = %ifend.i80.i.i, %while.entry.i77.i.i, %for.body.i.i210
  %339 = phi i64 [ %331, %for.body.i.i210 ], [ -1, %ifend.i80.i.i ], [ %334, %while.entry.i77.i.i ]
  %incdec.ptr.i75.i.i.lcssa467 = phi ptr [ %incdec.ptr.i75.i.i.lcssa468, %for.body.i.i210 ], [ %uglygep538, %ifend.i80.i.i ], [ %incdec.ptr.i75.i.i, %while.entry.i77.i.i ]
  %storemerge362 = icmp slt i64 %storemerge381463.in, 2
  br i1 %storemerge362, label %for.cond.i.i209.for.end.i.i_crit_edge, label %for.body.i.i210

for.cond.i.i209.for.end.i.i_crit_edge:            ; preds = %MapIterator_String_LLVMValueRef__next.exit81.i.i
  store ptr %incdec.ptr.i75.i.i.lcssa467, ptr %memberidx1.i.i.i143.i, align 8
  store i64 %339, ptr %memberidx2.i.i.i144.i, align 4
  %.pre = load ptr, ptr %316, align 8
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i209.for.end.i.i_crit_edge, %MapIterator_String_LLVMValueRef__next.exit.i.i
  %340 = phi ptr [ %.pre, %for.cond.i.i209.for.end.i.i_crit_edge ], [ %318, %MapIterator_String_LLVMValueRef__next.exit.i.i ]
  call void @free(ptr nonnull %317)
  call void @free(ptr %340)
  call void @free(ptr %316)
  %341 = load ptr, ptr %memberidx2.i.i205, align 8
  %342 = call ptr @malloc(i32 25)
  %343 = load ptr, ptr %341, align 8
  %memberidx1.i90.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %341, i64 0, i32 1
  %344 = load i64, ptr %memberidx1.i90.i.i, align 4
  %memberidx2.i91.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %341, i64 0, i32 2
  %345 = load i64, ptr %memberidx2.i91.i.i, align 4
  store i1 false, ptr %342, align 1
  %memberidx1.i.i92.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %342, i64 0, i32 1
  store ptr %343, ptr %memberidx1.i.i92.i.i, align 8
  %memberidx2.i.i93.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %342, i64 0, i32 2
  %memberidx3.i.i94.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %342, i64 0, i32 3
  store i64 %345, ptr %memberidx3.i.i94.i.i, align 4
  %346 = add nsw i64 %344, -1
  store i64 %346, ptr %memberidx2.i.i93.i.i, align 4
  %347 = icmp sgt i64 %344, 0
  br i1 %347, label %while.entry.i99.i.i, label %MapIterator_String_LLVMValueRef__next.exit103.i.i

while.entry.i99.i.i:                              ; preds = %for.end.i.i, %ifend.i102.i.i
  %348 = phi i64 [ %351, %ifend.i102.i.i ], [ %346, %for.end.i.i ]
  %349 = phi ptr [ %incdec.ptr.i97.i.i, %ifend.i102.i.i ], [ %343, %for.end.i.i ]
  %incdec.ptr.i97.i.i = getelementptr inbounds ptr, ptr %349, i64 1
  %350 = load ptr, ptr %349, align 8
  %.not.i98.i.i = icmp eq ptr %350, null
  br i1 %.not.i98.i.i, label %ifend.i102.i.i, label %MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit

ifend.i102.i.i:                                   ; preds = %while.entry.i99.i.i
  %351 = add nsw i64 %348, -1
  store i64 %351, ptr %memberidx2.i.i93.i.i, align 4
  %352 = icmp sgt i64 %348, 0
  br i1 %352, label %while.entry.i99.i.i, label %MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit

MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit: ; preds = %while.entry.i99.i.i, %ifend.i102.i.i
  %memberidx2.i.i93.i.i.promoted544 = phi i64 [ %348, %while.entry.i99.i.i ], [ %351, %ifend.i102.i.i ]
  store ptr %incdec.ptr.i97.i.i, ptr %memberidx1.i.i92.i.i, align 8
  br label %MapIterator_String_LLVMValueRef__next.exit103.i.i

MapIterator_String_LLVMValueRef__next.exit103.i.i: ; preds = %MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit, %for.end.i.i
  %memberidx2.i.i93.i.i.promoted = phi i64 [ %memberidx2.i.i93.i.i.promoted544, %MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit ], [ %346, %for.end.i.i ]
  %memberidx1.i.i92.i.i.promoted456 = phi ptr [ %incdec.ptr.i97.i.i, %MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit ], [ %343, %for.end.i.i ]
  %storemerge364452 = icmp slt i64 %345, 1
  br i1 %storemerge364452, label %for.end13.i.i, label %for.body11.i.i

for.body11.i.i:                                   ; preds = %MapIterator_String_LLVMValueRef__next.exit103.i.i, %MapIterator_String_LLVMValueRef__next.exit126.i.i
  %353 = phi i64 [ %364, %MapIterator_String_LLVMValueRef__next.exit126.i.i ], [ %memberidx2.i.i93.i.i.promoted, %MapIterator_String_LLVMValueRef__next.exit103.i.i ]
  %incdec.ptr.i120.i.i.lcssa458 = phi ptr [ %incdec.ptr.i120.i.i.lcssa457, %MapIterator_String_LLVMValueRef__next.exit126.i.i ], [ %memberidx1.i.i92.i.i.promoted456, %MapIterator_String_LLVMValueRef__next.exit103.i.i ]
  %storemerge382453.in = phi i64 [ %storemerge382453, %MapIterator_String_LLVMValueRef__next.exit126.i.i ], [ %345, %MapIterator_String_LLVMValueRef__next.exit103.i.i ]
  %storemerge382453 = add nsw i64 %storemerge382453.in, -1
  %string_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i120.i.i.lcssa458, i64 -1
  %string_entry.0.i.i = load ptr, ptr %string_entry.0.i.i.in, align 8
  %354 = load ptr, ptr %string_entry.0.i.i, align 8
  %355 = load ptr, ptr %354, align 8
  call void @free(ptr %355)
  call void @free(ptr %354)
  %356 = add nsw i64 %353, -1
  %357 = icmp sgt i64 %353, 0
  br i1 %357, label %while.entry.i122.i.i.preheader, label %MapIterator_String_LLVMValueRef__next.exit126.i.i

while.entry.i122.i.i.preheader:                   ; preds = %for.body11.i.i
  %358 = shl i64 %353, 3
  %uglygep537 = getelementptr i8, ptr %incdec.ptr.i120.i.i.lcssa458, i64 %358
  br label %while.entry.i122.i.i

while.entry.i122.i.i:                             ; preds = %while.entry.i122.i.i.preheader, %ifend.i125.i.i
  %359 = phi i64 [ %362, %ifend.i125.i.i ], [ %356, %while.entry.i122.i.i.preheader ]
  %360 = phi ptr [ %incdec.ptr.i120.i.i, %ifend.i125.i.i ], [ %incdec.ptr.i120.i.i.lcssa458, %while.entry.i122.i.i.preheader ]
  %incdec.ptr.i120.i.i = getelementptr inbounds ptr, ptr %360, i64 1
  %361 = load ptr, ptr %360, align 8
  %.not.i121.i.i = icmp eq ptr %361, null
  br i1 %.not.i121.i.i, label %ifend.i125.i.i, label %MapIterator_String_LLVMValueRef__next.exit126.i.i

ifend.i125.i.i:                                   ; preds = %while.entry.i122.i.i
  %362 = add nsw i64 %359, -1
  %363 = icmp sgt i64 %359, 0
  br i1 %363, label %while.entry.i122.i.i, label %MapIterator_String_LLVMValueRef__next.exit126.i.i

MapIterator_String_LLVMValueRef__next.exit126.i.i: ; preds = %ifend.i125.i.i, %while.entry.i122.i.i, %for.body11.i.i
  %364 = phi i64 [ %356, %for.body11.i.i ], [ -1, %ifend.i125.i.i ], [ %359, %while.entry.i122.i.i ]
  %incdec.ptr.i120.i.i.lcssa457 = phi ptr [ %incdec.ptr.i120.i.i.lcssa458, %for.body11.i.i ], [ %uglygep537, %ifend.i125.i.i ], [ %incdec.ptr.i120.i.i, %while.entry.i122.i.i ]
  %storemerge364 = icmp slt i64 %storemerge382453.in, 2
  br i1 %storemerge364, label %for.cond10.i.i.for.end13.i.i_crit_edge, label %for.body11.i.i

for.cond10.i.i.for.end13.i.i_crit_edge:           ; preds = %MapIterator_String_LLVMValueRef__next.exit126.i.i
  store ptr %incdec.ptr.i120.i.i.lcssa457, ptr %memberidx1.i.i92.i.i, align 8
  store i64 %364, ptr %memberidx2.i.i93.i.i, align 4
  %.pre545 = load ptr, ptr %341, align 8
  br label %for.end13.i.i

for.end13.i.i:                                    ; preds = %for.cond10.i.i.for.end13.i.i_crit_edge, %MapIterator_String_LLVMValueRef__next.exit103.i.i
  %365 = phi ptr [ %.pre545, %for.cond10.i.i.for.end13.i.i_crit_edge ], [ %343, %MapIterator_String_LLVMValueRef__next.exit103.i.i ]
  call void @free(ptr nonnull %342)
  call void @free(ptr %365)
  call void @free(ptr %341)
  %366 = load ptr, ptr %memberidx5.i.i, align 8
  %367 = call ptr @malloc(i32 25)
  %368 = load ptr, ptr %366, align 8
  %memberidx1.i127.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %366, i64 0, i32 1
  %369 = load i64, ptr %memberidx1.i127.i.i, align 4
  %memberidx2.i128.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %366, i64 0, i32 2
  %370 = load i64, ptr %memberidx2.i128.i.i, align 4
  store i1 false, ptr %367, align 1
  %memberidx1.i.i129.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %367, i64 0, i32 1
  store ptr %368, ptr %memberidx1.i.i129.i.i, align 8
  %memberidx2.i.i130.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %367, i64 0, i32 2
  %memberidx3.i.i131.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %367, i64 0, i32 3
  store i64 %370, ptr %memberidx3.i.i131.i.i, align 4
  %371 = add nsw i64 %369, -1
  store i64 %371, ptr %memberidx2.i.i130.i.i, align 4
  %372 = icmp sgt i64 %369, 0
  br i1 %372, label %while.entry.i136.i.i, label %MapIterator_String_LLVMValueRef__next.exit140.i.i

while.entry.i136.i.i:                             ; preds = %for.end13.i.i, %ifend.i139.i.i
  %373 = phi i64 [ %376, %ifend.i139.i.i ], [ %371, %for.end13.i.i ]
  %374 = phi ptr [ %incdec.ptr.i134.i.i, %ifend.i139.i.i ], [ %368, %for.end13.i.i ]
  %incdec.ptr.i134.i.i = getelementptr inbounds ptr, ptr %374, i64 1
  %375 = load ptr, ptr %374, align 8
  %.not.i135.i.i = icmp eq ptr %375, null
  br i1 %.not.i135.i.i, label %ifend.i139.i.i, label %MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit

ifend.i139.i.i:                                   ; preds = %while.entry.i136.i.i
  %376 = add nsw i64 %373, -1
  store i64 %376, ptr %memberidx2.i.i130.i.i, align 4
  %377 = icmp sgt i64 %373, 0
  br i1 %377, label %while.entry.i136.i.i, label %MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit

MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit: ; preds = %while.entry.i136.i.i, %ifend.i139.i.i
  %memberidx2.i.i130.i.i.promoted548 = phi i64 [ %373, %while.entry.i136.i.i ], [ %376, %ifend.i139.i.i ]
  store ptr %incdec.ptr.i134.i.i, ptr %memberidx1.i.i129.i.i, align 8
  br label %MapIterator_String_LLVMValueRef__next.exit140.i.i

MapIterator_String_LLVMValueRef__next.exit140.i.i: ; preds = %MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit, %for.end13.i.i
  %memberidx2.i.i130.i.i.promoted = phi i64 [ %memberidx2.i.i130.i.i.promoted548, %MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit ], [ %371, %for.end13.i.i ]
  %memberidx1.i.i129.i.i.promoted446 = phi ptr [ %incdec.ptr.i134.i.i, %MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit ], [ %368, %for.end13.i.i ]
  %storemerge366442 = icmp slt i64 %370, 1
  br i1 %storemerge366442, label %for.end22.i.i, label %for.body20.i.i

for.body20.i.i:                                   ; preds = %MapIterator_String_LLVMValueRef__next.exit140.i.i, %MapIterator_String_LLVMValueRef__next.exit157.i.i
  %378 = phi i64 [ %389, %MapIterator_String_LLVMValueRef__next.exit157.i.i ], [ %memberidx2.i.i130.i.i.promoted, %MapIterator_String_LLVMValueRef__next.exit140.i.i ]
  %incdec.ptr.i151.i.i.lcssa448 = phi ptr [ %incdec.ptr.i151.i.i.lcssa447, %MapIterator_String_LLVMValueRef__next.exit157.i.i ], [ %memberidx1.i.i129.i.i.promoted446, %MapIterator_String_LLVMValueRef__next.exit140.i.i ]
  %storemerge383443.in = phi i64 [ %storemerge383443, %MapIterator_String_LLVMValueRef__next.exit157.i.i ], [ %370, %MapIterator_String_LLVMValueRef__next.exit140.i.i ]
  %storemerge383443 = add nsw i64 %storemerge383443.in, -1
  %func_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i151.i.i.lcssa448, i64 -1
  %func_entry.0.i.i = load ptr, ptr %func_entry.0.i.i.in, align 8
  %379 = load ptr, ptr %func_entry.0.i.i, align 8
  %380 = load ptr, ptr %379, align 8
  call void @free(ptr %380)
  call void @free(ptr %379)
  %381 = add nsw i64 %378, -1
  %382 = icmp sgt i64 %378, 0
  br i1 %382, label %while.entry.i153.i.i.preheader, label %MapIterator_String_LLVMValueRef__next.exit157.i.i

while.entry.i153.i.i.preheader:                   ; preds = %for.body20.i.i
  %383 = shl i64 %378, 3
  %uglygep536 = getelementptr i8, ptr %incdec.ptr.i151.i.i.lcssa448, i64 %383
  br label %while.entry.i153.i.i

while.entry.i153.i.i:                             ; preds = %while.entry.i153.i.i.preheader, %ifend.i156.i.i
  %384 = phi i64 [ %387, %ifend.i156.i.i ], [ %381, %while.entry.i153.i.i.preheader ]
  %385 = phi ptr [ %incdec.ptr.i151.i.i, %ifend.i156.i.i ], [ %incdec.ptr.i151.i.i.lcssa448, %while.entry.i153.i.i.preheader ]
  %incdec.ptr.i151.i.i = getelementptr inbounds ptr, ptr %385, i64 1
  %386 = load ptr, ptr %385, align 8
  %.not.i152.i.i = icmp eq ptr %386, null
  br i1 %.not.i152.i.i, label %ifend.i156.i.i, label %MapIterator_String_LLVMValueRef__next.exit157.i.i

ifend.i156.i.i:                                   ; preds = %while.entry.i153.i.i
  %387 = add nsw i64 %384, -1
  %388 = icmp sgt i64 %384, 0
  br i1 %388, label %while.entry.i153.i.i, label %MapIterator_String_LLVMValueRef__next.exit157.i.i

MapIterator_String_LLVMValueRef__next.exit157.i.i: ; preds = %ifend.i156.i.i, %while.entry.i153.i.i, %for.body20.i.i
  %389 = phi i64 [ %381, %for.body20.i.i ], [ -1, %ifend.i156.i.i ], [ %384, %while.entry.i153.i.i ]
  %incdec.ptr.i151.i.i.lcssa447 = phi ptr [ %incdec.ptr.i151.i.i.lcssa448, %for.body20.i.i ], [ %uglygep536, %ifend.i156.i.i ], [ %incdec.ptr.i151.i.i, %while.entry.i153.i.i ]
  %storemerge366 = icmp slt i64 %storemerge383443.in, 2
  br i1 %storemerge366, label %for.cond19.i.i.for.end22.i.i_crit_edge, label %for.body20.i.i

for.cond19.i.i.for.end22.i.i_crit_edge:           ; preds = %MapIterator_String_LLVMValueRef__next.exit157.i.i
  store ptr %incdec.ptr.i151.i.i.lcssa447, ptr %memberidx1.i.i129.i.i, align 8
  store i64 %389, ptr %memberidx2.i.i130.i.i, align 4
  %.pre549 = load ptr, ptr %366, align 8
  br label %for.end22.i.i

for.end22.i.i:                                    ; preds = %for.cond19.i.i.for.end22.i.i_crit_edge, %MapIterator_String_LLVMValueRef__next.exit140.i.i
  %390 = phi ptr [ %.pre549, %for.cond19.i.i.for.end22.i.i_crit_edge ], [ %368, %MapIterator_String_LLVMValueRef__next.exit140.i.i ]
  call void @free(ptr nonnull %367)
  call void @free(ptr %390)
  call void @free(ptr %366)
  %391 = load ptr, ptr %memberidx3.i.i206, align 8
  %392 = call ptr @malloc(i32 25)
  %393 = load ptr, ptr %391, align 8
  %memberidx1.i167.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %391, i64 0, i32 1
  %394 = load i64, ptr %memberidx1.i167.i.i, align 4
  %memberidx2.i168.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %391, i64 0, i32 2
  %395 = load i64, ptr %memberidx2.i168.i.i, align 4
  store i1 false, ptr %392, align 1
  %memberidx1.i.i169.i.i = getelementptr inbounds %MapIterator_String_CGClassType_, ptr %392, i64 0, i32 1
  store ptr %393, ptr %memberidx1.i.i169.i.i, align 8
  %memberidx2.i.i170.i.i = getelementptr inbounds %MapIterator_String_CGClassType_, ptr %392, i64 0, i32 2
  %memberidx3.i.i171.i.i = getelementptr inbounds %MapIterator_String_CGClassType_, ptr %392, i64 0, i32 3
  store i64 %395, ptr %memberidx3.i.i171.i.i, align 4
  %396 = add nsw i64 %394, -1
  store i64 %396, ptr %memberidx2.i.i170.i.i, align 4
  %397 = icmp sgt i64 %394, 0
  br i1 %397, label %while.entry.i162.i.i, label %MapIterator_String_CGClassType__next.exit166.i.i

while.entry.i162.i.i:                             ; preds = %for.end22.i.i, %ifend.i165.i.i
  %398 = phi i64 [ %401, %ifend.i165.i.i ], [ %396, %for.end22.i.i ]
  %399 = phi ptr [ %incdec.ptr.i160.i.i, %ifend.i165.i.i ], [ %393, %for.end22.i.i ]
  %incdec.ptr.i160.i.i = getelementptr inbounds ptr, ptr %399, i64 1
  %400 = load ptr, ptr %399, align 8
  %.not.i161.i.i = icmp eq ptr %400, null
  br i1 %.not.i161.i.i, label %ifend.i165.i.i, label %MapIterator_String_CGClassType__next.exit166.i.i.loopexit

ifend.i165.i.i:                                   ; preds = %while.entry.i162.i.i
  %401 = add nsw i64 %398, -1
  store i64 %401, ptr %memberidx2.i.i170.i.i, align 4
  %402 = icmp sgt i64 %398, 0
  br i1 %402, label %while.entry.i162.i.i, label %MapIterator_String_CGClassType__next.exit166.i.i.loopexit

MapIterator_String_CGClassType__next.exit166.i.i.loopexit: ; preds = %while.entry.i162.i.i, %ifend.i165.i.i
  %memberidx2.i.i170.i.i.promoted552 = phi i64 [ %398, %while.entry.i162.i.i ], [ %401, %ifend.i165.i.i ]
  store ptr %incdec.ptr.i160.i.i, ptr %memberidx1.i.i169.i.i, align 8
  br label %MapIterator_String_CGClassType__next.exit166.i.i

MapIterator_String_CGClassType__next.exit166.i.i: ; preds = %MapIterator_String_CGClassType__next.exit166.i.i.loopexit, %for.end22.i.i
  %memberidx2.i.i170.i.i.promoted = phi i64 [ %memberidx2.i.i170.i.i.promoted552, %MapIterator_String_CGClassType__next.exit166.i.i.loopexit ], [ %396, %for.end22.i.i ]
  %memberidx1.i.i169.i.i.promoted436 = phi ptr [ %incdec.ptr.i160.i.i, %MapIterator_String_CGClassType__next.exit166.i.i.loopexit ], [ %393, %for.end22.i.i ]
  %storemerge368432 = icmp slt i64 %395, 1
  br i1 %storemerge368432, label %for.end31.i.i, label %for.body29.i.i

for.body29.i.i:                                   ; preds = %MapIterator_String_CGClassType__next.exit166.i.i, %MapIterator_String_CGClassType__next.exit.i.i
  %403 = phi i64 [ %415, %MapIterator_String_CGClassType__next.exit.i.i ], [ %memberidx2.i.i170.i.i.promoted, %MapIterator_String_CGClassType__next.exit166.i.i ]
  %incdec.ptr.i143.i.i.lcssa438 = phi ptr [ %incdec.ptr.i143.i.i.lcssa437, %MapIterator_String_CGClassType__next.exit.i.i ], [ %memberidx1.i.i169.i.i.promoted436, %MapIterator_String_CGClassType__next.exit166.i.i ]
  %storemerge384433.in = phi i64 [ %storemerge384433, %MapIterator_String_CGClassType__next.exit.i.i ], [ %395, %MapIterator_String_CGClassType__next.exit166.i.i ]
  %storemerge384433 = add nsw i64 %storemerge384433.in, -1
  %class_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i143.i.i.lcssa438, i64 -1
  %class_entry.0.i.i = load ptr, ptr %class_entry.0.i.i.in, align 8
  %404 = load ptr, ptr %class_entry.0.i.i, align 8
  %405 = load ptr, ptr %404, align 8
  call void @free(ptr %405)
  call void @free(ptr %404)
  %memberidx34.i.i = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %class_entry.0.i.i, i64 0, i32 1
  %406 = load ptr, ptr %memberidx34.i.i, align 8
  call void @free(ptr %406)
  %407 = add nsw i64 %403, -1
  %408 = icmp sgt i64 %403, 0
  br i1 %408, label %while.entry.i145.i.i.preheader, label %MapIterator_String_CGClassType__next.exit.i.i

while.entry.i145.i.i.preheader:                   ; preds = %for.body29.i.i
  %409 = shl i64 %403, 3
  %uglygep535 = getelementptr i8, ptr %incdec.ptr.i143.i.i.lcssa438, i64 %409
  br label %while.entry.i145.i.i

while.entry.i145.i.i:                             ; preds = %while.entry.i145.i.i.preheader, %ifend.i148.i.i
  %410 = phi i64 [ %413, %ifend.i148.i.i ], [ %407, %while.entry.i145.i.i.preheader ]
  %411 = phi ptr [ %incdec.ptr.i143.i.i, %ifend.i148.i.i ], [ %incdec.ptr.i143.i.i.lcssa438, %while.entry.i145.i.i.preheader ]
  %incdec.ptr.i143.i.i = getelementptr inbounds ptr, ptr %411, i64 1
  %412 = load ptr, ptr %411, align 8
  %.not.i144.i.i = icmp eq ptr %412, null
  br i1 %.not.i144.i.i, label %ifend.i148.i.i, label %MapIterator_String_CGClassType__next.exit.i.i

ifend.i148.i.i:                                   ; preds = %while.entry.i145.i.i
  %413 = add nsw i64 %410, -1
  %414 = icmp sgt i64 %410, 0
  br i1 %414, label %while.entry.i145.i.i, label %MapIterator_String_CGClassType__next.exit.i.i

MapIterator_String_CGClassType__next.exit.i.i:    ; preds = %ifend.i148.i.i, %while.entry.i145.i.i, %for.body29.i.i
  %415 = phi i64 [ %407, %for.body29.i.i ], [ -1, %ifend.i148.i.i ], [ %410, %while.entry.i145.i.i ]
  %incdec.ptr.i143.i.i.lcssa437 = phi ptr [ %incdec.ptr.i143.i.i.lcssa438, %for.body29.i.i ], [ %uglygep535, %ifend.i148.i.i ], [ %incdec.ptr.i143.i.i, %while.entry.i145.i.i ]
  %storemerge368 = icmp slt i64 %storemerge384433.in, 2
  br i1 %storemerge368, label %for.cond28.i.i.for.end31.i.i_crit_edge, label %for.body29.i.i

for.cond28.i.i.for.end31.i.i_crit_edge:           ; preds = %MapIterator_String_CGClassType__next.exit.i.i
  store ptr %incdec.ptr.i143.i.i.lcssa437, ptr %memberidx1.i.i169.i.i, align 8
  store i64 %415, ptr %memberidx2.i.i170.i.i, align 4
  %.pre553 = load ptr, ptr %391, align 8
  br label %for.end31.i.i

for.end31.i.i:                                    ; preds = %for.cond28.i.i.for.end31.i.i_crit_edge, %MapIterator_String_CGClassType__next.exit166.i.i
  %416 = phi ptr [ %.pre553, %for.cond28.i.i.for.end31.i.i_crit_edge ], [ %393, %MapIterator_String_CGClassType__next.exit166.i.i ]
  call void @free(ptr nonnull %392)
  call void @free(ptr %416)
  call void @free(ptr %391)
  %417 = load ptr, ptr %memberidx4.i.i, align 8
  %418 = call ptr @malloc(i32 25)
  %419 = load ptr, ptr %417, align 8
  %memberidx1.i113.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %417, i64 0, i32 1
  %420 = load i64, ptr %memberidx1.i113.i.i, align 4
  %memberidx2.i114.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %417, i64 0, i32 2
  %421 = load i64, ptr %memberidx2.i114.i.i, align 4
  store i1 false, ptr %418, align 1
  %memberidx1.i.i115.i.i = getelementptr inbounds %MapIterator_String_CGEnumType_, ptr %418, i64 0, i32 1
  store ptr %419, ptr %memberidx1.i.i115.i.i, align 8
  %memberidx2.i.i116.i.i = getelementptr inbounds %MapIterator_String_CGEnumType_, ptr %418, i64 0, i32 2
  %memberidx3.i.i117.i.i = getelementptr inbounds %MapIterator_String_CGEnumType_, ptr %418, i64 0, i32 3
  store i64 %421, ptr %memberidx3.i.i117.i.i, align 4
  %422 = add nsw i64 %420, -1
  store i64 %422, ptr %memberidx2.i.i116.i.i, align 4
  %423 = icmp sgt i64 %420, 0
  br i1 %423, label %while.entry.i108.i.i, label %MapIterator_String_CGEnumType__next.exit112.i.i

while.entry.i108.i.i:                             ; preds = %for.end31.i.i, %ifend.i111.i.i
  %424 = phi i64 [ %427, %ifend.i111.i.i ], [ %422, %for.end31.i.i ]
  %425 = phi ptr [ %incdec.ptr.i106.i.i, %ifend.i111.i.i ], [ %419, %for.end31.i.i ]
  %incdec.ptr.i106.i.i = getelementptr inbounds ptr, ptr %425, i64 1
  %426 = load ptr, ptr %425, align 8
  %.not.i107.i.i = icmp eq ptr %426, null
  br i1 %.not.i107.i.i, label %ifend.i111.i.i, label %MapIterator_String_CGEnumType__next.exit112.i.i.loopexit

ifend.i111.i.i:                                   ; preds = %while.entry.i108.i.i
  %427 = add nsw i64 %424, -1
  store i64 %427, ptr %memberidx2.i.i116.i.i, align 4
  %428 = icmp sgt i64 %424, 0
  br i1 %428, label %while.entry.i108.i.i, label %MapIterator_String_CGEnumType__next.exit112.i.i.loopexit

MapIterator_String_CGEnumType__next.exit112.i.i.loopexit: ; preds = %while.entry.i108.i.i, %ifend.i111.i.i
  %memberidx2.i.i116.i.i.promoted556 = phi i64 [ %424, %while.entry.i108.i.i ], [ %427, %ifend.i111.i.i ]
  store ptr %incdec.ptr.i106.i.i, ptr %memberidx1.i.i115.i.i, align 8
  br label %MapIterator_String_CGEnumType__next.exit112.i.i

MapIterator_String_CGEnumType__next.exit112.i.i:  ; preds = %MapIterator_String_CGEnumType__next.exit112.i.i.loopexit, %for.end31.i.i
  %memberidx2.i.i116.i.i.promoted = phi i64 [ %memberidx2.i.i116.i.i.promoted556, %MapIterator_String_CGEnumType__next.exit112.i.i.loopexit ], [ %422, %for.end31.i.i ]
  %memberidx1.i.i115.i.i.promoted426 = phi ptr [ %incdec.ptr.i106.i.i, %MapIterator_String_CGEnumType__next.exit112.i.i.loopexit ], [ %419, %for.end31.i.i ]
  %storemerge370422 = icmp slt i64 %421, 1
  br i1 %storemerge370422, label %CodeGen_destroy.exit.i, label %for.body39.i.i

for.body39.i.i:                                   ; preds = %MapIterator_String_CGEnumType__next.exit112.i.i, %MapIterator_String_CGEnumType__next.exit.i.i
  %429 = phi i64 [ %441, %MapIterator_String_CGEnumType__next.exit.i.i ], [ %memberidx2.i.i116.i.i.promoted, %MapIterator_String_CGEnumType__next.exit112.i.i ]
  %incdec.ptr.i84.i.i.lcssa428 = phi ptr [ %incdec.ptr.i84.i.i.lcssa427, %MapIterator_String_CGEnumType__next.exit.i.i ], [ %memberidx1.i.i115.i.i.promoted426, %MapIterator_String_CGEnumType__next.exit112.i.i ]
  %storemerge385423.in = phi i64 [ %storemerge385423, %MapIterator_String_CGEnumType__next.exit.i.i ], [ %421, %MapIterator_String_CGEnumType__next.exit112.i.i ]
  %storemerge385423 = add nsw i64 %storemerge385423.in, -1
  %enum_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i84.i.i.lcssa428, i64 -1
  %enum_entry.0.i.i = load ptr, ptr %enum_entry.0.i.i.in, align 8
  %430 = load ptr, ptr %enum_entry.0.i.i, align 8
  %431 = load ptr, ptr %430, align 8
  call void @free(ptr %431)
  call void @free(ptr %430)
  %memberidx44.i.i = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %enum_entry.0.i.i, i64 0, i32 1
  %432 = load ptr, ptr %memberidx44.i.i, align 8
  call void @free(ptr %432)
  %433 = add nsw i64 %429, -1
  %434 = icmp sgt i64 %429, 0
  br i1 %434, label %while.entry.i86.i.i.preheader, label %MapIterator_String_CGEnumType__next.exit.i.i

while.entry.i86.i.i.preheader:                    ; preds = %for.body39.i.i
  %435 = shl i64 %429, 3
  %uglygep = getelementptr i8, ptr %incdec.ptr.i84.i.i.lcssa428, i64 %435
  br label %while.entry.i86.i.i

while.entry.i86.i.i:                              ; preds = %while.entry.i86.i.i.preheader, %ifend.i89.i.i
  %436 = phi i64 [ %439, %ifend.i89.i.i ], [ %433, %while.entry.i86.i.i.preheader ]
  %437 = phi ptr [ %incdec.ptr.i84.i.i, %ifend.i89.i.i ], [ %incdec.ptr.i84.i.i.lcssa428, %while.entry.i86.i.i.preheader ]
  %incdec.ptr.i84.i.i = getelementptr inbounds ptr, ptr %437, i64 1
  %438 = load ptr, ptr %437, align 8
  %.not.i85.i.i = icmp eq ptr %438, null
  br i1 %.not.i85.i.i, label %ifend.i89.i.i, label %MapIterator_String_CGEnumType__next.exit.i.i

ifend.i89.i.i:                                    ; preds = %while.entry.i86.i.i
  %439 = add nsw i64 %436, -1
  %440 = icmp sgt i64 %436, 0
  br i1 %440, label %while.entry.i86.i.i, label %MapIterator_String_CGEnumType__next.exit.i.i

MapIterator_String_CGEnumType__next.exit.i.i:     ; preds = %ifend.i89.i.i, %while.entry.i86.i.i, %for.body39.i.i
  %441 = phi i64 [ %433, %for.body39.i.i ], [ -1, %ifend.i89.i.i ], [ %436, %while.entry.i86.i.i ]
  %incdec.ptr.i84.i.i.lcssa427 = phi ptr [ %incdec.ptr.i84.i.i.lcssa428, %for.body39.i.i ], [ %uglygep, %ifend.i89.i.i ], [ %incdec.ptr.i84.i.i, %while.entry.i86.i.i ]
  %storemerge370 = icmp slt i64 %storemerge385423.in, 2
  br i1 %storemerge370, label %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge, label %for.body39.i.i

for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge:  ; preds = %MapIterator_String_CGEnumType__next.exit.i.i
  store ptr %incdec.ptr.i84.i.i.lcssa427, ptr %memberidx1.i.i115.i.i, align 8
  store i64 %441, ptr %memberidx2.i.i116.i.i, align 4
  %.pre557 = load ptr, ptr %417, align 8
  br label %CodeGen_destroy.exit.i

CodeGen_destroy.exit.i:                           ; preds = %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge, %MapIterator_String_CGEnumType__next.exit112.i.i
  %442 = phi ptr [ %.pre557, %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge ], [ %419, %MapIterator_String_CGEnumType__next.exit112.i.i ]
  call void @free(ptr nonnull %418)
  call void @free(ptr %442)
  call void @free(ptr %417)
  %443 = load ptr, ptr %common.ret.op.i, align 8
  %444 = call ptr @malloc(i32 25)
  %445 = load ptr, ptr %443, align 8
  %memberidx1.i.i146.i = getelementptr inbounds %Array_Module_, ptr %443, i64 0, i32 1
  %446 = load i64, ptr %memberidx1.i.i146.i, align 4
  %memberidx1.i.i.i147.i = getelementptr inbounds %ArrayIterator_Module_, ptr %444, i64 0, i32 1
  %memberidx2.i.i.i148.i = getelementptr inbounds %ArrayIterator_Module_, ptr %444, i64 0, i32 3
  store ptr %445, ptr %memberidx2.i.i.i148.i, align 8
  %memberidx3.i.i.i149.i = getelementptr inbounds %ArrayIterator_Module_, ptr %444, i64 0, i32 2
  store i64 %446, ptr %memberidx3.i.i.i149.i, align 4
  store i64 1, ptr %memberidx1.i.i.i147.i, align 4
  %447 = icmp slt i64 %446, 1
  %module.0.i.i418 = load ptr, ptr %445, align 8
  store i1 %447, ptr %444, align 1
  br i1 %447, label %Program___del__.exit.i, label %for.body.i156.i

for.body.i156.i:                                  ; preds = %CodeGen_destroy.exit.i, %Module___del__.exit.i.i
  %448 = phi i64 [ %564, %Module___del__.exit.i.i ], [ 1, %CodeGen_destroy.exit.i ]
  %module.0.i.i419 = phi ptr [ %module.0.i.i, %Module___del__.exit.i.i ], [ %module.0.i.i418, %CodeGen_destroy.exit.i ]
  %memberidx.i7.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 4
  %449 = load ptr, ptr %memberidx.i7.i.i, align 8
  %450 = call ptr @malloc(i32 25)
  %451 = load ptr, ptr %449, align 8
  %memberidx1.i.i8.i.i = getelementptr inbounds %Array_Function_, ptr %449, i64 0, i32 1
  %452 = load i64, ptr %memberidx1.i.i8.i.i, align 4
  %453 = icmp slt i64 %452, 1
  br i1 %453, label %for.end.i.i.i, label %for.body.i.i158.i

for.body.i.i158.i:                                ; preds = %for.body.i156.i, %for.body.i.i158.i
  %454 = phi i64 [ %455, %for.body.i.i158.i ], [ 1, %for.body.i156.i ]
  %func.0.i.i.i387.in = phi ptr [ %456, %for.body.i.i158.i ], [ %451, %for.body.i156.i ]
  %func.0.i.i.i387 = load ptr, ptr %func.0.i.i.i387.in, align 8
  call void @free(ptr %func.0.i.i.i387)
  %455 = add nuw nsw i64 %454, 1
  %456 = getelementptr inbounds ptr, ptr %451, i64 %454
  %.not564 = icmp slt i64 %454, %452
  br i1 %.not564, label %for.body.i.i158.i, label %for.end.i.i.i

for.end.i.i.i:                                    ; preds = %for.body.i.i158.i, %for.body.i156.i
  call void @free(ptr nonnull %450)
  %memberidx8.i.i159.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 1
  %457 = load ptr, ptr %memberidx8.i.i159.i, align 8
  %458 = call ptr @malloc(i32 25)
  %459 = load ptr, ptr %457, align 8
  %memberidx1.i91.i.i.i = getelementptr inbounds %Array_Var_, ptr %457, i64 0, i32 1
  %460 = load i64, ptr %memberidx1.i91.i.i.i, align 4
  %461 = icmp slt i64 %460, 1
  br i1 %461, label %for.end12.i.i.i, label %for.body10.i.i.i

for.body10.i.i.i:                                 ; preds = %for.end.i.i.i, %for.body10.i.i.i
  %462 = phi i64 [ %463, %for.body10.i.i.i ], [ 1, %for.end.i.i.i ]
  %var.0.i.i.i389.in = phi ptr [ %464, %for.body10.i.i.i ], [ %459, %for.end.i.i.i ]
  %var.0.i.i.i389 = load ptr, ptr %var.0.i.i.i389.in, align 8
  call void @free(ptr %var.0.i.i.i389)
  %463 = add nuw nsw i64 %462, 1
  %464 = getelementptr inbounds ptr, ptr %459, i64 %462
  %.not565 = icmp slt i64 %462, %460
  br i1 %.not565, label %for.body10.i.i.i, label %for.end12.i.i.i

for.end12.i.i.i:                                  ; preds = %for.body10.i.i.i, %for.end.i.i.i
  call void @free(ptr nonnull %458)
  %memberidx15.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 3
  %465 = load ptr, ptr %memberidx15.i.i.i, align 8
  %466 = call ptr @malloc(i32 25)
  %467 = load ptr, ptr %465, align 8
  %memberidx1.i101.i.i.i = getelementptr inbounds %Array_Class_, ptr %465, i64 0, i32 1
  %468 = load i64, ptr %memberidx1.i101.i.i.i, align 4
  %memberidx1.i.i102.i.i.i = getelementptr inbounds %ArrayIterator_Class_, ptr %466, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i102.i.i.i, align 4
  %memberidx2.i.i103.i.i.i = getelementptr inbounds %ArrayIterator_Class_, ptr %466, i64 0, i32 3
  store ptr %467, ptr %memberidx2.i.i103.i.i.i, align 8
  %469 = icmp slt i64 %468, 1
  br i1 %469, label %for.end19.i.i.i, label %for.body17.i.i.i

for.body17.i.i.i:                                 ; preds = %for.end12.i.i.i, %Class___del__.exit.i.i.i
  %470 = phi i64 [ %495, %Class___del__.exit.i.i.i ], [ 1, %for.end12.i.i.i ]
  %mod_class.0.i.i.i401.in = phi ptr [ %496, %Class___del__.exit.i.i.i ], [ %467, %for.end12.i.i.i ]
  %mod_class.0.i.i.i401 = load ptr, ptr %mod_class.0.i.i.i401.in, align 8
  %471 = load ptr, ptr %mod_class.0.i.i.i401, align 8
  call void @free(ptr %471)
  %memberidx2.i108.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 1
  %472 = load ptr, ptr %memberidx2.i108.i.i.i, align 8
  %473 = load ptr, ptr %472, align 8
  call void @free(ptr %473)
  call void @free(ptr %472)
  %memberidx3.i.i10.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 2
  %474 = load ptr, ptr %memberidx3.i.i10.i.i, align 8
  %.not.i.i.i.i = icmp eq ptr %474, null
  br i1 %.not.i.i.i.i, label %for.entry.i.i.i.i, label %if.entry.i.i.i.i

if.entry.i.i.i.i:                                 ; preds = %for.body17.i.i.i
  call void @free(ptr nonnull %474)
  br label %for.entry.i.i.i.i

for.entry.i.i.i.i:                                ; preds = %if.entry.i.i.i.i, %for.body17.i.i.i
  %memberidx5.i109.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 4
  %475 = load ptr, ptr %memberidx5.i109.i.i.i, align 8
  %476 = call ptr @malloc(i32 25)
  %477 = load ptr, ptr %475, align 8
  %memberidx1.i.i110.i.i.i = getelementptr inbounds %Array_ClassField_, ptr %475, i64 0, i32 1
  %478 = load i64, ptr %memberidx1.i.i110.i.i.i, align 4
  %479 = icmp slt i64 %478, 1
  br i1 %479, label %for.end.i.i.i.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.entry.i.i.i.i, %for.body.i.i.i.i
  %480 = phi i64 [ %481, %for.body.i.i.i.i ], [ 1, %for.entry.i.i.i.i ]
  %field.0.i.i.i.i393.in = phi ptr [ %482, %for.body.i.i.i.i ], [ %477, %for.entry.i.i.i.i ]
  %field.0.i.i.i.i393 = load ptr, ptr %field.0.i.i.i.i393.in, align 8
  call void @free(ptr %field.0.i.i.i.i393)
  %481 = add nuw nsw i64 %480, 1
  %482 = getelementptr inbounds ptr, ptr %477, i64 %480
  %.not566 = icmp slt i64 %480, %478
  br i1 %.not566, label %for.body.i.i.i.i, label %for.end.i.i.i.i

for.end.i.i.i.i:                                  ; preds = %for.body.i.i.i.i, %for.entry.i.i.i.i
  call void @free(ptr nonnull %476)
  %memberidx8.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 5
  %483 = load ptr, ptr %memberidx8.i.i.i.i, align 8
  %484 = call ptr @malloc(i32 25)
  %485 = load ptr, ptr %483, align 8
  %memberidx1.i32.i.i.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %483, i64 0, i32 1
  %486 = load i64, ptr %memberidx1.i32.i.i.i.i, align 4
  %487 = icmp slt i64 %486, 1
  br i1 %487, label %Class___del__.exit.i.i.i, label %for.body10.i.i.i.i

for.body10.i.i.i.i:                               ; preds = %for.end.i.i.i.i, %for.body10.i.i.i.i
  %488 = phi i64 [ %489, %for.body10.i.i.i.i ], [ 1, %for.end.i.i.i.i ]
  %method.0.i.i.i.i397.in = phi ptr [ %490, %for.body10.i.i.i.i ], [ %485, %for.end.i.i.i.i ]
  %method.0.i.i.i.i397 = load ptr, ptr %method.0.i.i.i.i397.in, align 8
  call void @free(ptr %method.0.i.i.i.i397)
  %489 = add nuw nsw i64 %488, 1
  %490 = getelementptr inbounds ptr, ptr %485, i64 %488
  %.not567 = icmp slt i64 %488, %486
  br i1 %.not567, label %for.body10.i.i.i.i, label %Class___del__.exit.i.i.i

Class___del__.exit.i.i.i:                         ; preds = %for.body10.i.i.i.i, %for.end.i.i.i.i
  call void @free(ptr nonnull %484)
  %memberidx14.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 6
  %491 = load ptr, ptr %memberidx14.i.i.i.i, align 8
  %492 = load ptr, ptr %491, align 8
  call void @free(ptr %492)
  call void @free(ptr %491)
  %memberidx15.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 7
  %493 = load ptr, ptr %memberidx15.i.i.i.i, align 8
  %494 = load ptr, ptr %493, align 8
  call void @free(ptr %494)
  call void @free(ptr %493)
  call void @free(ptr %mod_class.0.i.i.i401)
  %495 = add nuw nsw i64 %470, 1
  store i64 %495, ptr %memberidx1.i.i102.i.i.i, align 4
  %496 = getelementptr inbounds ptr, ptr %467, i64 %470
  %.not568 = icmp slt i64 %470, %468
  br i1 %.not568, label %for.body17.i.i.i, label %for.end19.i.i.i

for.end19.i.i.i:                                  ; preds = %Class___del__.exit.i.i.i, %for.end12.i.i.i
  call void @free(ptr nonnull %466)
  %memberidx22.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 6
  %497 = load ptr, ptr %memberidx22.i.i.i, align 8
  %498 = call ptr @malloc(i32 25)
  %499 = load ptr, ptr %497, align 8
  %memberidx1.i115.i.i.i = getelementptr inbounds %Array_Enum_, ptr %497, i64 0, i32 1
  %500 = load i64, ptr %memberidx1.i115.i.i.i, align 4
  %memberidx1.i.i116.i.i.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %498, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i116.i.i.i, align 4
  %memberidx2.i.i117.i.i.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %498, i64 0, i32 3
  store ptr %499, ptr %memberidx2.i.i117.i.i.i, align 8
  %501 = icmp slt i64 %500, 1
  br i1 %501, label %for.end26.i.i.i, label %for.body24.i.i.i

for.body24.i.i.i:                                 ; preds = %for.end19.i.i.i, %Enum___del__.exit.i.i.i
  %502 = phi i64 [ %522, %Enum___del__.exit.i.i.i ], [ 1, %for.end19.i.i.i ]
  %mod_enum.0.i.i.i408.in = phi ptr [ %523, %Enum___del__.exit.i.i.i ], [ %499, %for.end19.i.i.i ]
  %mod_enum.0.i.i.i408 = load ptr, ptr %mod_enum.0.i.i.i408.in, align 8
  %503 = load ptr, ptr %mod_enum.0.i.i.i408, align 8
  call void @free(ptr %503)
  %memberidx1.i122.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i408, i64 0, i32 1
  %504 = load ptr, ptr %memberidx1.i122.i.i.i, align 8
  %505 = load ptr, ptr %504, align 8
  call void @free(ptr %505)
  call void @free(ptr %504)
  %memberidx2.i123.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i408, i64 0, i32 2
  %506 = load ptr, ptr %memberidx2.i123.i.i.i, align 8
  %507 = call ptr @malloc(i32 25)
  %508 = load ptr, ptr %506, align 8
  %memberidx1.i.i124.i.i.i = getelementptr inbounds %Array_EnumField_, ptr %506, i64 0, i32 1
  %509 = load i64, ptr %memberidx1.i.i124.i.i.i, align 4
  %510 = icmp slt i64 %509, 1
  br i1 %510, label %Enum___del__.exit.i.i.i, label %for.body.i134.i.i.i

for.body.i134.i.i.i:                              ; preds = %for.body24.i.i.i, %for.body.i134.i.i.i
  %511 = phi i64 [ %516, %for.body.i134.i.i.i ], [ 1, %for.body24.i.i.i ]
  %field.0.i132.i.i.i404.in = phi ptr [ %517, %for.body.i134.i.i.i ], [ %508, %for.body24.i.i.i ]
  %field.0.i132.i.i.i404 = load ptr, ptr %field.0.i132.i.i.i404.in, align 8
  %512 = load ptr, ptr %field.0.i132.i.i.i404, align 8
  call void @free(ptr %512)
  %memberidx1.i13.i.i.i.i = getelementptr inbounds %EnumField, ptr %field.0.i132.i.i.i404, i64 0, i32 1
  %513 = load ptr, ptr %memberidx1.i13.i.i.i.i, align 8
  %514 = load ptr, ptr %513, align 8
  call void @free(ptr %514)
  call void @free(ptr %513)
  %memberidx2.i14.i.i.i.i = getelementptr inbounds %EnumField, ptr %field.0.i132.i.i.i404, i64 0, i32 2
  %515 = load ptr, ptr %memberidx2.i14.i.i.i.i, align 8
  call void @free(ptr %515)
  call void @free(ptr %field.0.i132.i.i.i404)
  %516 = add nuw nsw i64 %511, 1
  %517 = getelementptr inbounds ptr, ptr %508, i64 %511
  %.not569 = icmp slt i64 %511, %509
  br i1 %.not569, label %for.body.i134.i.i.i, label %Enum___del__.exit.i.i.i

Enum___del__.exit.i.i.i:                          ; preds = %for.body.i134.i.i.i, %for.body24.i.i.i
  call void @free(ptr nonnull %507)
  %518 = load ptr, ptr %memberidx2.i123.i.i.i, align 8
  %519 = load ptr, ptr %518, align 8
  call void @free(ptr %519)
  call void @free(ptr %518)
  %memberidx5.i135.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i408, i64 0, i32 3
  %520 = load ptr, ptr %memberidx5.i135.i.i.i, align 8
  %521 = load ptr, ptr %520, align 8
  call void @free(ptr %521)
  call void @free(ptr %520)
  call void @free(ptr %mod_enum.0.i.i.i408)
  %522 = add nuw nsw i64 %502, 1
  store i64 %522, ptr %memberidx1.i.i116.i.i.i, align 4
  %523 = getelementptr inbounds ptr, ptr %499, i64 %502
  %.not570 = icmp slt i64 %502, %500
  br i1 %.not570, label %for.body24.i.i.i, label %for.end26.i.i.i

for.end26.i.i.i:                                  ; preds = %Enum___del__.exit.i.i.i, %for.end19.i.i.i
  call void @free(ptr nonnull %498)
  %memberidx29.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 8
  %524 = load ptr, ptr %memberidx29.i.i.i, align 8
  %525 = call ptr @malloc(i32 25)
  %526 = load ptr, ptr %524, align 8
  %memberidx1.i140.i.i.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %524, i64 0, i32 1
  %527 = load i64, ptr %memberidx1.i140.i.i.i, align 4
  %528 = icmp slt i64 %527, 1
  br i1 %528, label %for.end33.i.i.i, label %for.body31.i.i.i

for.body31.i.i.i:                                 ; preds = %for.end26.i.i.i, %for.body31.i.i.i
  %529 = phi i64 [ %530, %for.body31.i.i.i ], [ 1, %for.end26.i.i.i ]
  %global_const.0.i.i.i411.in = phi ptr [ %531, %for.body31.i.i.i ], [ %526, %for.end26.i.i.i ]
  %global_const.0.i.i.i411 = load ptr, ptr %global_const.0.i.i.i411.in, align 8
  call void @free(ptr %global_const.0.i.i.i411)
  %530 = add nuw nsw i64 %529, 1
  %531 = getelementptr inbounds ptr, ptr %526, i64 %529
  %.not571 = icmp slt i64 %529, %527
  br i1 %.not571, label %for.body31.i.i.i, label %for.end33.i.i.i

for.end33.i.i.i:                                  ; preds = %for.body31.i.i.i, %for.end26.i.i.i
  call void @free(ptr nonnull %525)
  %memberidx36.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 9
  %532 = load ptr, ptr %memberidx36.i.i.i, align 8
  %533 = call ptr @malloc(i32 25)
  %534 = load ptr, ptr %532, align 8
  %memberidx1.i150.i.i.i = getelementptr inbounds %Array_VarDeclaration_, ptr %532, i64 0, i32 1
  %535 = load i64, ptr %memberidx1.i150.i.i.i, align 4
  %536 = icmp slt i64 %535, 1
  br i1 %536, label %Module___del__.exit.i.i, label %for.body38.i.i.i

for.body38.i.i.i:                                 ; preds = %for.end33.i.i.i, %for.body38.i.i.i
  %537 = phi i64 [ %538, %for.body38.i.i.i ], [ 1, %for.end33.i.i.i ]
  %global_var.0.i.i.i415.in = phi ptr [ %539, %for.body38.i.i.i ], [ %534, %for.end33.i.i.i ]
  %global_var.0.i.i.i415 = load ptr, ptr %global_var.0.i.i.i415.in, align 8
  call void @free(ptr %global_var.0.i.i.i415)
  %538 = add nuw nsw i64 %537, 1
  %539 = getelementptr inbounds ptr, ptr %534, i64 %537
  %.not572 = icmp slt i64 %537, %535
  br i1 %.not572, label %for.body38.i.i.i, label %Module___del__.exit.i.i

Module___del__.exit.i.i:                          ; preds = %for.body38.i.i.i, %for.end33.i.i.i
  call void @free(ptr nonnull %533)
  %memberidx42.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 7
  %540 = load ptr, ptr %memberidx42.i.i.i, align 8
  %memberidx43.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 5
  %541 = load ptr, ptr %memberidx43.i.i.i, align 8
  %memberidx44.i.i.i = getelementptr inbounds %ScopeId, ptr %541, i64 0, i32 1
  %542 = load i64, ptr %memberidx44.i.i.i, align 4
  %543 = load ptr, ptr %540, align 8
  %544 = getelementptr inbounds ptr, ptr %543, i64 %542
  %545 = load ptr, ptr %544, align 8
  call fastcc void @Scope___del__(ptr %545)
  call void @free(ptr %545)
  %546 = load ptr, ptr %module.0.i.i419, align 8
  %547 = load ptr, ptr %546, align 8
  call void @free(ptr %547)
  call void @free(ptr %546)
  %548 = load ptr, ptr %memberidx.i7.i.i, align 8
  %549 = load ptr, ptr %548, align 8
  call void @free(ptr %549)
  call void @free(ptr %548)
  %550 = load ptr, ptr %memberidx8.i.i159.i, align 8
  %551 = load ptr, ptr %550, align 8
  call void @free(ptr %551)
  call void @free(ptr %550)
  %552 = load ptr, ptr %memberidx15.i.i.i, align 8
  %553 = load ptr, ptr %552, align 8
  call void @free(ptr %553)
  call void @free(ptr %552)
  %554 = load ptr, ptr %memberidx22.i.i.i, align 8
  %555 = load ptr, ptr %554, align 8
  call void @free(ptr %555)
  call void @free(ptr %554)
  %556 = load ptr, ptr %memberidx42.i.i.i, align 8
  %557 = load ptr, ptr %556, align 8
  call void @free(ptr %557)
  call void @free(ptr %556)
  %558 = load ptr, ptr %memberidx29.i.i.i, align 8
  %559 = load ptr, ptr %558, align 8
  call void @free(ptr %559)
  call void @free(ptr %558)
  %560 = load ptr, ptr %memberidx36.i.i.i, align 8
  %561 = load ptr, ptr %560, align 8
  call void @free(ptr %561)
  call void @free(ptr %560)
  %memberidx53.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 2
  %562 = load ptr, ptr %memberidx53.i.i.i, align 8
  %563 = load ptr, ptr %562, align 8
  call void @free(ptr %563)
  call void @free(ptr %562)
  call void @free(ptr %module.0.i.i419)
  %564 = add nuw nsw i64 %448, 1
  store i64 %564, ptr %memberidx1.i.i.i147.i, align 4
  %565 = getelementptr inbounds ptr, ptr %445, i64 %448
  %566 = icmp sge i64 %448, %446
  %module.0.i.i = load ptr, ptr %565, align 8
  store i1 %566, ptr %444, align 1
  br i1 %566, label %Program___del__.exit.i, label %for.body.i156.i

Program___del__.exit.i:                           ; preds = %Module___del__.exit.i.i, %CodeGen_destroy.exit.i
  call void @free(ptr nonnull %444)
  %567 = load ptr, ptr %common.ret.op.i, align 8
  %568 = load ptr, ptr %567, align 8
  call void @free(ptr %568)
  call void @free(ptr %567)
  call void @free(ptr nonnull %common.ret.op.i)
  %569 = call ptr @malloc(i32 24)
  %570 = load ptr, ptr %9, align 8
  store ptr %570, ptr %569, align 8
  %memberidx1.i.i211 = getelementptr inbounds %GeneratedModule, ptr %569, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i211, align 8
  %571 = call i1 @LLVMVerifyModule(ptr %570, i64 1, ptr nonnull %memberidx1.i.i211)
  br i1 %571, label %if.entry.i.i, label %CodeGen_codegen.exit

if.entry.i.i:                                     ; preds = %Program___del__.exit.i
  %572 = call ptr @malloc(i32 8)
  store i64 7812670522611888741, ptr %572, align 8
  %573 = call ptr @malloc(i32 24)
  store ptr %572, ptr %573, align 8
  %memberidx1.i.i.i.i212 = getelementptr inbounds %String, ptr %573, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i.i.i212, align 4
  %memberidx2.i.i.i.i213 = getelementptr inbounds %String, ptr %573, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i.i.i213, align 4
  call fastcc void @GeneratedModule_write_ir(ptr nonnull %569, ptr nonnull %573)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  %574 = load ptr, ptr %memberidx1.i.i211, align 8
  %575 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %574)
  %576 = trunc i64 %575 to i32
  %577 = call ptr @malloc(i32 %576)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %577, ptr align 8 %574, i64 %575, i1 false)
  %578 = call ptr @malloc(i32 24)
  store ptr %577, ptr %578, align 8
  %memberidx1.i.i13.i.i = getelementptr inbounds %String, ptr %578, i64 0, i32 1
  store i64 %575, ptr %memberidx1.i.i13.i.i, align 4
  %memberidx2.i.i14.i.i = getelementptr inbounds %String, ptr %578, i64 0, i32 2
  store i64 %575, ptr %memberidx2.i.i14.i.i, align 4
  %579 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %579)
  %580 = add i32 %576, 1
  %581 = call ptr @malloc(i32 %580)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %581, ptr align 8 %577, i64 %575, i1 false)
  %582 = getelementptr inbounds i8, ptr %581, i64 %575
  store i8 0, ptr %582, align 1
  %583 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @2, ptr %581)
  %584 = load ptr, ptr %8, align 8
  %585 = call ptr @malloc(i32 24)
  call void @free(ptr %581)
  %586 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %586, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %587 = call ptr @malloc(i32 24)
  %588 = call i64 @write(i64 1, ptr %586, i64 7)
  call void @free(ptr %586)
  call void @free(ptr %587)
  %589 = call i64 @write(i64 1, ptr %584, i64 %583)
  %590 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %584)
  call void @free(ptr %585)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  br label %CodeGen_codegen.exit

CodeGen_codegen.exit:                             ; preds = %Program___del__.exit.i, %if.entry.i.i
  call void @LLVM_InitializeAllTargetInfos()
  call void @LLVM_InitializeAllTargets()
  call void @LLVM_InitializeAllTargetMCs()
  call void @LLVM_InitializeAllAsmParsers()
  call void @LLVM_InitializeAllAsmPrinters()
  call void @llvm.lifetime.end.p0(i64 81, ptr nonnull %9)
  %591 = load i64, ptr %memberidx.i161, align 8
  %592 = icmp eq i64 %591, 0
  br i1 %592, label %GeneratedModule_run_passes.exit, label %ifend.i216

ifend.i216:                                       ; preds = %CodeGen_codegen.exit
  %593 = call ptr @LLVMCreatePassManager()
  %594 = load ptr, ptr %569, align 8
  %595 = call ptr @LLVMCreateFunctionPassManagerForModule(ptr %594)
  %596 = call ptr @LLVMPassManagerBuilderCreate()
  call void @LLVMAddInternalizePass(ptr %593, i64 1)
  call void @LLVMAddGlobalDCEPass(ptr %593)
  call void @LLVMAddGlobalOptimizerPass(ptr %593)
  call void @LLVMAddInstructionCombiningPass(ptr %593)
  call void @LLVMAddScalarReplAggregatesPass(ptr %593)
  call void @LLVMAddFunctionInliningPass(ptr %593)
  call void @LLVMPassManagerBuilderSetOptLevel(ptr %596, i64 %591)
  call void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr %596, i64 255)
  call void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr %596, ptr %595)
  %597 = load ptr, ptr %569, align 8
  %598 = call ptr @LLVMGetFirstFunction(ptr %597)
  %.not.i = icmp eq ptr %598, null
  br i1 %.not.i, label %while.end.i, label %while.entry.i

while.entry.i:                                    ; preds = %ifend.i216, %while.entry.i
  %func.0.i = phi ptr [ %600, %while.entry.i ], [ %598, %ifend.i216 ]
  %599 = call i1 @LLVMRunFunctionPassManager(ptr %595, ptr nonnull %func.0.i)
  %600 = call ptr @LLVMGetNextFunction(ptr nonnull %func.0.i)
  %.not23.i = icmp eq ptr %600, null
  br i1 %.not23.i, label %while.end.i, label %while.entry.i

while.end.i:                                      ; preds = %while.entry.i, %ifend.i216
  call void @LLVMPassManagerBuilderPopulateModulePassManager(ptr %596, ptr %593)
  %601 = load ptr, ptr %569, align 8
  %602 = call i1 @LLVMRunPassManager(ptr %593, ptr %601)
  call void @LLVMDisposePassManager(ptr %595)
  call void @LLVMPassManagerBuilderDispose(ptr %596)
  call void @LLVMDisposePassManager(ptr %593)
  br label %GeneratedModule_run_passes.exit

GeneratedModule_run_passes.exit:                  ; preds = %CodeGen_codegen.exit, %while.end.i
  %603 = load ptr, ptr %memberidx.i143, align 8
  call fastcc void @GeneratedModule_set_target_machine(ptr nonnull %569, ptr %603)
  %604 = load ptr, ptr %memberidx.i111, align 8
  %605 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %605, ptr noundef nonnull align 8 dereferenceable(3) @294, i64 3, i1 false)
  %606 = call ptr @malloc(i32 24)
  store ptr %605, ptr %606, align 8
  %memberidx1.i.i217 = getelementptr inbounds %String, ptr %606, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i217, align 4
  %memberidx2.i.i218 = getelementptr inbounds %String, ptr %606, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i218, align 4
  %memberidx.i219 = getelementptr inbounds %String, ptr %604, i64 0, i32 1
  %607 = load i64, ptr %memberidx.i219, align 4
  %.not.i221 = icmp eq i64 %607, 3
  br i1 %.not.i221, label %ifend.i223, label %else32

ifend.i223:                                       ; preds = %GeneratedModule_run_passes.exit
  %608 = load ptr, ptr %604, align 8
  %609 = call i64 @memcmp(ptr %608, ptr nonnull %605, i64 3)
  %610 = icmp eq i64 %609, 0
  br i1 %610, label %if.entry31, label %else32

if.entry31:                                       ; preds = %ifend.i223
  %611 = call ptr @malloc(i32 13)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %611, ptr noundef nonnull align 8 dereferenceable(13) @295, i64 13, i1 false)
  %612 = call ptr @malloc(i32 24)
  store ptr %611, ptr %612, align 8
  %memberidx1.i.i224 = getelementptr inbounds %String, ptr %612, i64 0, i32 1
  store i64 13, ptr %memberidx1.i.i224, align 4
  %memberidx2.i.i225 = getelementptr inbounds %String, ptr %612, i64 0, i32 2
  store i64 13, ptr %memberidx2.i.i225, align 4
  %613 = call ptr @malloc(i32 14)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %613, ptr noundef nonnull align 8 dereferenceable(13) %611, i64 13, i1 false)
  %614 = getelementptr inbounds i8, ptr %613, i64 13
  store i8 0, ptr %614, align 1
  %memberidx.i226 = getelementptr inbounds %GeneratedModule, ptr %569, i64 0, i32 2
  %615 = load ptr, ptr %memberidx.i226, align 8
  %616 = load ptr, ptr %569, align 8
  %617 = call i1 @LLVMTargetMachineEmitToFile(ptr %615, ptr %616, ptr %613, i64 1, ptr nonnull %memberidx1.i.i211)
  br i1 %617, label %if.entry.i, label %GeneratedModule_write_obj.exit

if.entry.i:                                       ; preds = %if.entry31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %618 = load ptr, ptr %memberidx1.i.i211, align 8
  %619 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %618)
  %620 = trunc i64 %619 to i32
  %621 = call ptr @malloc(i32 %620)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %621, ptr align 8 %618, i64 %619, i1 false)
  %622 = call ptr @malloc(i32 24)
  store ptr %621, ptr %622, align 8
  %memberidx1.i.i327 = getelementptr inbounds %String, ptr %622, i64 0, i32 1
  store i64 %619, ptr %memberidx1.i.i327, align 4
  %memberidx2.i.i328 = getelementptr inbounds %String, ptr %622, i64 0, i32 2
  store i64 %619, ptr %memberidx2.i.i328, align 4
  %623 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %623)
  %624 = add i32 %620, 1
  %625 = call ptr @malloc(i32 %624)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %625, ptr align 8 %621, i64 %619, i1 false)
  %626 = getelementptr inbounds i8, ptr %625, i64 %619
  store i8 0, ptr %626, align 1
  %627 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @2, ptr %625)
  %628 = load ptr, ptr %4, align 8
  %629 = call ptr @malloc(i32 24)
  call void @free(ptr %625)
  %630 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %630, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %631 = call ptr @malloc(i32 24)
  %632 = call i64 @write(i64 1, ptr %630, i64 7)
  call void @free(ptr %630)
  call void @free(ptr %631)
  %633 = call i64 @write(i64 1, ptr %628, i64 %627)
  %634 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %628)
  call void @free(ptr %629)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %GeneratedModule_write_obj.exit

GeneratedModule_write_obj.exit:                   ; preds = %if.entry31, %if.entry.i
  call void @free(ptr nonnull %613)
  call void @free(ptr nonnull %611)
  call void @free(ptr nonnull %612)
  %635 = load ptr, ptr %memberidx.i152, align 8
  %.not = icmp eq ptr %635, null
  br i1 %.not, label %false_block, label %true_block

else32:                                           ; preds = %GeneratedModule_run_passes.exit, %ifend.i223
  %636 = load ptr, ptr %memberidx.i111, align 8
  %637 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %637, ptr noundef nonnull align 8 dereferenceable(7) @300, i64 7, i1 false)
  %638 = call ptr @malloc(i32 24)
  store ptr %637, ptr %638, align 8
  %memberidx1.i.i229 = getelementptr inbounds %String, ptr %638, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i229, align 4
  %memberidx2.i.i230 = getelementptr inbounds %String, ptr %638, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i230, align 4
  %memberidx.i231 = getelementptr inbounds %String, ptr %636, i64 0, i32 1
  %639 = load i64, ptr %memberidx.i231, align 4
  %.not.i233 = icmp eq i64 %639, 7
  br i1 %.not.i233, label %ifend.i235, label %else43

ifend.i235:                                       ; preds = %else32
  %640 = load ptr, ptr %636, align 8
  %641 = call i64 @memcmp(ptr %640, ptr nonnull %637, i64 7)
  %642 = icmp eq i64 %641, 0
  br i1 %642, label %if.entry42, label %else43

ifend33:                                          ; preds = %GeneratedModule_write_asm.exit, %GeneratedModule_exec.exit, %GeneratedModule_write_obj.exit283, %if.entry47, %if.entry42, %end
  %code.0 = phi i64 [ 0, %end ], [ 0, %if.entry42 ], [ 0, %if.entry47 ], [ 0, %GeneratedModule_write_obj.exit283 ], [ 0, %GeneratedModule_write_asm.exit ], [ %common.ret.op.i313, %GeneratedModule_exec.exit ]
  tail call void @free(ptr %183)
  br label %common.ret

true_block:                                       ; preds = %GeneratedModule_write_obj.exit
  %memberidx.i237 = getelementptr inbounds %String, ptr %635, i64 0, i32 1
  %643 = load i64, ptr %memberidx.i237, align 4
  %644 = trunc i64 %643 to i32
  %645 = add i32 %644, 1
  %646 = call ptr @malloc(i32 %645)
  %647 = load ptr, ptr %635, align 8
  %648 = load i64, ptr %memberidx.i237, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %646, ptr align 8 %647, i64 %648, i1 false)
  %649 = getelementptr inbounds i8, ptr %646, i64 %648
  store i8 0, ptr %649, align 1
  %650 = alloca ptr, align 8
  %651 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %650, ptr nonnull @296, ptr %646)
  %652 = load ptr, ptr %650, align 8
  %653 = tail call ptr @malloc(i32 24)
  store ptr %652, ptr %653, align 8
  %memberidx1.i238 = getelementptr inbounds %String, ptr %653, i64 0, i32 1
  store i64 %651, ptr %memberidx1.i238, align 4
  %memberidx2.i239 = getelementptr inbounds %String, ptr %653, i64 0, i32 2
  store i64 %651, ptr %memberidx2.i239, align 4
  tail call void @free(ptr %646)
  br label %end

false_block:                                      ; preds = %GeneratedModule_write_obj.exit
  %654 = call ptr @malloc(i32 0)
  %655 = call ptr @malloc(i32 24)
  store ptr %654, ptr %655, align 8
  %memberidx1.i.i240 = getelementptr inbounds %String, ptr %655, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i240, i8 0, i64 16, i1 false)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %653, %true_block ], [ %655, %false_block ]
  %656 = call ptr @malloc(i32 8)
  store i64 3832894680125762659, ptr %656, align 8
  %657 = call ptr @malloc(i32 24)
  store ptr %656, ptr %657, align 8
  %memberidx.i244 = getelementptr inbounds %String, ptr %ternary, i64 0, i32 1
  %658 = load i64, ptr %memberidx.i244, align 4
  %659 = trunc i64 %658 to i32
  %660 = add i32 %659, 1
  %661 = call ptr @malloc(i32 %660)
  %662 = load ptr, ptr %ternary, align 8
  %663 = load i64, ptr %memberidx.i244, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %661, ptr align 8 %662, i64 %663, i1 false)
  %664 = getelementptr inbounds i8, ptr %661, i64 %663
  store i8 0, ptr %664, align 1
  %665 = alloca ptr, align 8
  %666 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %665, ptr nonnull @297, ptr %661)
  %667 = load ptr, ptr %665, align 8
  %668 = tail call ptr @malloc(i32 24)
  store ptr %667, ptr %668, align 8
  tail call void @free(ptr %661)
  %669 = call ptr @malloc(i32 9)
  %670 = load i64, ptr %656, align 8
  store i64 %670, ptr %669, align 8
  %671 = getelementptr inbounds i8, ptr %669, i64 8
  store i8 0, ptr %671, align 1
  %672 = trunc i64 %666 to i32
  %673 = add i32 %672, 1
  %674 = call ptr @malloc(i32 %673)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %674, ptr align 8 %667, i64 %666, i1 false)
  %675 = getelementptr inbounds i8, ptr %674, i64 %666
  store i8 0, ptr %675, align 1
  %676 = load ptr, ptr %memberidx1.i.i149, align 8
  %memberidx.i249 = getelementptr inbounds %String, ptr %676, i64 0, i32 1
  %677 = load i64, ptr %memberidx.i249, align 4
  %678 = trunc i64 %677 to i32
  %679 = add i32 %678, 1
  %680 = call ptr @malloc(i32 %679)
  %681 = load ptr, ptr %676, align 8
  %682 = load i64, ptr %memberidx.i249, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %680, ptr align 8 %681, i64 %682, i1 false)
  %683 = getelementptr inbounds i8, ptr %680, i64 %682
  store i8 0, ptr %683, align 1
  %684 = load ptr, ptr %memberidx.i152, align 8
  %memberidx.i250 = getelementptr inbounds %String, ptr %684, i64 0, i32 1
  %685 = load i64, ptr %memberidx.i250, align 4
  %686 = trunc i64 %685 to i32
  %687 = add i32 %686, 1
  %688 = call ptr @malloc(i32 %687)
  %689 = load ptr, ptr %684, align 8
  %690 = load i64, ptr %memberidx.i250, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %688, ptr align 8 %689, i64 %690, i1 false)
  %691 = getelementptr inbounds i8, ptr %688, i64 %690
  store i8 0, ptr %691, align 1
  %692 = load ptr, ptr %memberidx2.i.i150, align 8
  %memberidx.i251 = getelementptr inbounds %String, ptr %692, i64 0, i32 1
  %693 = load i64, ptr %memberidx.i251, align 4
  %694 = trunc i64 %693 to i32
  %695 = add i32 %694, 1
  %696 = call ptr @malloc(i32 %695)
  %697 = load ptr, ptr %692, align 8
  %698 = load i64, ptr %memberidx.i251, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %696, ptr align 8 %697, i64 %698, i1 false)
  %699 = getelementptr inbounds i8, ptr %696, i64 %698
  store i8 0, ptr %699, align 1
  %700 = load i64, ptr %70, align 8
  %701 = getelementptr inbounds ptr, ptr @FlagType_names, i64 %700
  %702 = load ptr, ptr %701, align 8
  %703 = alloca ptr, align 8
  %704 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %703, ptr nonnull @298, ptr %680, ptr %688, ptr %696, ptr %702)
  %705 = load ptr, ptr %703, align 8
  %706 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i252 = getelementptr inbounds %String, ptr %706, i64 0, i32 1
  %707 = load i64, ptr %memberidx.i252, align 4
  %708 = trunc i64 %707 to i32
  %709 = add i32 %708, 1
  %710 = call ptr @malloc(i32 %709)
  %711 = load ptr, ptr %706, align 8
  %712 = load i64, ptr %memberidx.i252, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %710, ptr align 8 %711, i64 %712, i1 false)
  %713 = getelementptr inbounds i8, ptr %710, i64 %712
  store i8 0, ptr %713, align 1
  %714 = alloca ptr, align 8
  %715 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %714, ptr nonnull @299, ptr nonnull %669, ptr %674, ptr %705, ptr %710)
  %716 = load ptr, ptr %714, align 8
  tail call void @free(ptr %669)
  tail call void @free(ptr %674)
  tail call void @free(ptr %680)
  tail call void @free(ptr %688)
  tail call void @free(ptr %696)
  tail call void @free(ptr %705)
  tail call void @free(ptr %710)
  call void @system(ptr %716)
  call void @free(ptr %667)
  tail call void @free(ptr %668)
  %717 = load ptr, ptr %ternary, align 8
  call void @free(ptr %717)
  tail call void @free(ptr nonnull %ternary)
  call void @free(ptr %656)
  tail call void @free(ptr %657)
  br label %ifend33

if.entry42:                                       ; preds = %ifend.i235
  %718 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i253 = getelementptr inbounds %String, ptr %718, i64 0, i32 1
  %719 = load i64, ptr %memberidx.i253, align 4
  %720 = trunc i64 %719 to i32
  %721 = add i32 %720, 1
  %722 = call ptr @malloc(i32 %721)
  %723 = load ptr, ptr %718, align 8
  %724 = load i64, ptr %memberidx.i253, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %722, ptr align 8 %723, i64 %724, i1 false)
  %725 = getelementptr inbounds i8, ptr %722, i64 %724
  store i8 0, ptr %725, align 1
  %726 = alloca ptr, align 8
  %727 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %726, ptr nonnull @6, ptr %722)
  %728 = load ptr, ptr %726, align 8
  %729 = tail call ptr @malloc(i32 24)
  store ptr %728, ptr %729, align 8
  %memberidx1.i254 = getelementptr inbounds %String, ptr %729, i64 0, i32 1
  store i64 %727, ptr %memberidx1.i254, align 4
  %memberidx2.i255 = getelementptr inbounds %String, ptr %729, i64 0, i32 2
  store i64 %727, ptr %memberidx2.i255, align 4
  tail call void @free(ptr %722)
  call fastcc void @GeneratedModule_write_ir(ptr nonnull %569, ptr nonnull %729)
  br label %ifend33

else43:                                           ; preds = %else32, %ifend.i235
  %730 = load ptr, ptr %memberidx.i111, align 8
  %731 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %731, ptr noundef nonnull align 8 dereferenceable(7) @301, i64 7, i1 false)
  %732 = call ptr @malloc(i32 24)
  store ptr %731, ptr %732, align 8
  %memberidx1.i.i256 = getelementptr inbounds %String, ptr %732, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i256, align 4
  %memberidx2.i.i257 = getelementptr inbounds %String, ptr %732, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i257, align 4
  %memberidx.i258 = getelementptr inbounds %String, ptr %730, i64 0, i32 1
  %733 = load i64, ptr %memberidx.i258, align 4
  %.not.i260 = icmp eq i64 %733, 7
  br i1 %.not.i260, label %ifend.i262, label %else48

ifend.i262:                                       ; preds = %else43
  %734 = load ptr, ptr %730, align 8
  %735 = call i64 @memcmp(ptr %734, ptr nonnull %731, i64 7)
  %736 = icmp eq i64 %735, 0
  br i1 %736, label %if.entry47, label %else48

if.entry47:                                       ; preds = %ifend.i262
  %737 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i264 = getelementptr inbounds %String, ptr %737, i64 0, i32 1
  %738 = load i64, ptr %memberidx.i264, align 4
  %739 = trunc i64 %738 to i32
  %740 = add i32 %739, 1
  %741 = call ptr @malloc(i32 %740)
  %742 = load ptr, ptr %737, align 8
  %743 = load i64, ptr %memberidx.i264, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %741, ptr align 8 %742, i64 %743, i1 false)
  %744 = getelementptr inbounds i8, ptr %741, i64 %743
  store i8 0, ptr %744, align 1
  %745 = alloca ptr, align 8
  %746 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %745, ptr nonnull @6, ptr %741)
  %747 = load ptr, ptr %745, align 8
  %748 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %741)
  %749 = trunc i64 %746 to i32
  %750 = add i32 %749, 1
  %751 = call ptr @malloc(i32 %750)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %751, ptr align 8 %747, i64 %746, i1 false)
  %752 = getelementptr inbounds i8, ptr %751, i64 %746
  store i8 0, ptr %752, align 1
  %753 = load ptr, ptr %569, align 8
  %754 = call i64 @LLVMWriteBitcodeToFile(ptr %753, ptr %751)
  call void @free(ptr %751)
  call void @free(ptr %747)
  call void @free(ptr %748)
  br label %ifend33

else48:                                           ; preds = %else43, %ifend.i262
  %755 = load ptr, ptr %memberidx.i111, align 8
  %756 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %756, ptr noundef nonnull align 8 dereferenceable(3) @302, i64 3, i1 false)
  %757 = call ptr @malloc(i32 24)
  store ptr %756, ptr %757, align 8
  %memberidx1.i.i268 = getelementptr inbounds %String, ptr %757, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i268, align 4
  %memberidx2.i.i269 = getelementptr inbounds %String, ptr %757, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i269, align 4
  %memberidx.i270 = getelementptr inbounds %String, ptr %755, i64 0, i32 1
  %758 = load i64, ptr %memberidx.i270, align 4
  %.not.i272 = icmp eq i64 %758, 3
  br i1 %.not.i272, label %ifend.i274, label %else53

ifend.i274:                                       ; preds = %else48
  %759 = load ptr, ptr %755, align 8
  %760 = call i64 @memcmp(ptr %759, ptr nonnull %756, i64 3)
  %761 = icmp eq i64 %760, 0
  br i1 %761, label %if.entry52, label %else53

if.entry52:                                       ; preds = %ifend.i274
  %762 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i276 = getelementptr inbounds %String, ptr %762, i64 0, i32 1
  %763 = load i64, ptr %memberidx.i276, align 4
  %764 = trunc i64 %763 to i32
  %765 = add i32 %764, 1
  %766 = call ptr @malloc(i32 %765)
  %767 = load ptr, ptr %762, align 8
  %768 = load i64, ptr %memberidx.i276, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %766, ptr align 8 %767, i64 %768, i1 false)
  %769 = getelementptr inbounds i8, ptr %766, i64 %768
  store i8 0, ptr %769, align 1
  %770 = alloca ptr, align 8
  %771 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %770, ptr nonnull @6, ptr %766)
  %772 = load ptr, ptr %770, align 8
  %773 = tail call ptr @malloc(i32 24)
  store ptr %772, ptr %773, align 8
  %memberidx1.i277 = getelementptr inbounds %String, ptr %773, i64 0, i32 1
  store i64 %771, ptr %memberidx1.i277, align 4
  %memberidx2.i278 = getelementptr inbounds %String, ptr %773, i64 0, i32 2
  store i64 %771, ptr %memberidx2.i278, align 4
  tail call void @free(ptr %766)
  %774 = trunc i64 %771 to i32
  %775 = add i32 %774, 1
  %776 = call ptr @malloc(i32 %775)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %776, ptr align 8 %772, i64 %771, i1 false)
  %777 = getelementptr inbounds i8, ptr %776, i64 %771
  store i8 0, ptr %777, align 1
  %memberidx.i279 = getelementptr inbounds %GeneratedModule, ptr %569, i64 0, i32 2
  %778 = load ptr, ptr %memberidx.i279, align 8
  %779 = load ptr, ptr %569, align 8
  %780 = call i1 @LLVMTargetMachineEmitToFile(ptr %778, ptr %779, ptr %776, i64 1, ptr nonnull %memberidx1.i.i211)
  br i1 %780, label %if.entry.i281, label %GeneratedModule_write_obj.exit283

if.entry.i281:                                    ; preds = %if.entry52
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %781 = load ptr, ptr %memberidx1.i.i211, align 8
  %782 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %781)
  %783 = trunc i64 %782 to i32
  %784 = call ptr @malloc(i32 %783)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %784, ptr align 8 %781, i64 %782, i1 false)
  %785 = call ptr @malloc(i32 24)
  store ptr %784, ptr %785, align 8
  %memberidx1.i.i332 = getelementptr inbounds %String, ptr %785, i64 0, i32 1
  store i64 %782, ptr %memberidx1.i.i332, align 4
  %memberidx2.i.i333 = getelementptr inbounds %String, ptr %785, i64 0, i32 2
  store i64 %782, ptr %memberidx2.i.i333, align 4
  %786 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %786)
  %787 = add i32 %783, 1
  %788 = call ptr @malloc(i32 %787)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %788, ptr align 8 %784, i64 %782, i1 false)
  %789 = getelementptr inbounds i8, ptr %788, i64 %782
  store i8 0, ptr %789, align 1
  %790 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %788)
  %791 = load ptr, ptr %3, align 8
  %792 = call ptr @malloc(i32 24)
  call void @free(ptr %788)
  %793 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %793, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %794 = call ptr @malloc(i32 24)
  %795 = call i64 @write(i64 1, ptr %793, i64 7)
  call void @free(ptr %793)
  call void @free(ptr %794)
  %796 = call i64 @write(i64 1, ptr %791, i64 %790)
  %797 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %791)
  call void @free(ptr %792)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %GeneratedModule_write_obj.exit283

GeneratedModule_write_obj.exit283:                ; preds = %if.entry52, %if.entry.i281
  call void @free(ptr nonnull %776)
  call void @free(ptr %772)
  call void @free(ptr nonnull %773)
  br label %ifend33

else53:                                           ; preds = %else48, %ifend.i274
  %798 = load ptr, ptr %memberidx.i111, align 8
  %799 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %799, ptr noundef nonnull align 8 dereferenceable(3) @303, i64 3, i1 false)
  %800 = call ptr @malloc(i32 24)
  store ptr %799, ptr %800, align 8
  %memberidx1.i.i284 = getelementptr inbounds %String, ptr %800, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i284, align 4
  %memberidx2.i.i285 = getelementptr inbounds %String, ptr %800, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i285, align 4
  %memberidx.i286 = getelementptr inbounds %String, ptr %798, i64 0, i32 1
  %801 = load i64, ptr %memberidx.i286, align 4
  %.not.i288 = icmp eq i64 %801, 3
  br i1 %.not.i288, label %ifend.i290, label %else58

ifend.i290:                                       ; preds = %else53
  %802 = load ptr, ptr %798, align 8
  %803 = call i64 @memcmp(ptr %802, ptr nonnull %799, i64 3)
  %804 = icmp eq i64 %803, 0
  br i1 %804, label %if.entry57, label %else58

if.entry57:                                       ; preds = %ifend.i290
  %805 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i292 = getelementptr inbounds %String, ptr %805, i64 0, i32 1
  %806 = load i64, ptr %memberidx.i292, align 4
  %807 = trunc i64 %806 to i32
  %808 = add i32 %807, 1
  %809 = call ptr @malloc(i32 %808)
  %810 = load ptr, ptr %805, align 8
  %811 = load i64, ptr %memberidx.i292, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %809, ptr align 8 %810, i64 %811, i1 false)
  %812 = getelementptr inbounds i8, ptr %809, i64 %811
  store i8 0, ptr %812, align 1
  %813 = alloca ptr, align 8
  %814 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %813, ptr nonnull @6, ptr %809)
  %815 = load ptr, ptr %813, align 8
  %816 = tail call ptr @malloc(i32 24)
  store ptr %815, ptr %816, align 8
  %memberidx1.i293 = getelementptr inbounds %String, ptr %816, i64 0, i32 1
  store i64 %814, ptr %memberidx1.i293, align 4
  %memberidx2.i294 = getelementptr inbounds %String, ptr %816, i64 0, i32 2
  store i64 %814, ptr %memberidx2.i294, align 4
  tail call void @free(ptr %809)
  %817 = trunc i64 %814 to i32
  %818 = add i32 %817, 1
  %819 = call ptr @malloc(i32 %818)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %819, ptr align 8 %815, i64 %814, i1 false)
  %820 = getelementptr inbounds i8, ptr %819, i64 %814
  store i8 0, ptr %820, align 1
  %memberidx.i296 = getelementptr inbounds %GeneratedModule, ptr %569, i64 0, i32 2
  %821 = load ptr, ptr %memberidx.i296, align 8
  %822 = load ptr, ptr %569, align 8
  %823 = call i1 @LLVMTargetMachineEmitToFile(ptr %821, ptr %822, ptr %819, i64 0, ptr nonnull %memberidx1.i.i211)
  br i1 %823, label %if.entry.i304, label %GeneratedModule_write_asm.exit

if.entry.i304:                                    ; preds = %if.entry57
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  %824 = load ptr, ptr %memberidx1.i.i211, align 8
  %825 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %824)
  %826 = trunc i64 %825 to i32
  %827 = call ptr @malloc(i32 %826)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %827, ptr align 8 %824, i64 %825, i1 false)
  %828 = call ptr @malloc(i32 24)
  store ptr %827, ptr %828, align 8
  %memberidx1.i.i11.i = getelementptr inbounds %String, ptr %828, i64 0, i32 1
  store i64 %825, ptr %memberidx1.i.i11.i, align 4
  %memberidx2.i.i12.i = getelementptr inbounds %String, ptr %828, i64 0, i32 2
  store i64 %825, ptr %memberidx2.i.i12.i, align 4
  %829 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %829)
  %830 = add i32 %826, 1
  %831 = call ptr @malloc(i32 %830)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %831, ptr align 8 %827, i64 %825, i1 false)
  %832 = getelementptr inbounds i8, ptr %831, i64 %825
  store i8 0, ptr %832, align 1
  %833 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %7, ptr nonnull @2, ptr %831)
  %834 = load ptr, ptr %7, align 8
  %835 = call ptr @malloc(i32 24)
  call void @free(ptr %831)
  %836 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %836, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %837 = call ptr @malloc(i32 24)
  %838 = call i64 @write(i64 1, ptr %836, i64 7)
  call void @free(ptr %836)
  call void @free(ptr %837)
  %839 = call i64 @write(i64 1, ptr %834, i64 %833)
  %840 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %834)
  call void @free(ptr %835)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  br label %GeneratedModule_write_asm.exit

GeneratedModule_write_asm.exit:                   ; preds = %if.entry57, %if.entry.i304
  call void @free(ptr nonnull %819)
  call void @free(ptr %815)
  call void @free(ptr nonnull %816)
  br label %ifend33

else58:                                           ; preds = %else53, %ifend.i290
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %engine.i)
  call void @LLVMLinkInMCJIT()
  store ptr null, ptr %engine.i, align 8
  %841 = load ptr, ptr %569, align 8
  %842 = call i1 @LLVMCreateExecutionEngineForModule(ptr nonnull %engine.i, ptr %841, ptr nonnull %memberidx1.i.i211)
  br i1 %842, label %if.entry.i311, label %ifend.i312

if.entry.i311:                                    ; preds = %else58
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %843 = load ptr, ptr %memberidx1.i.i211, align 8
  %844 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %843)
  %845 = trunc i64 %844 to i32
  %846 = call ptr @malloc(i32 %845)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %846, ptr align 8 %843, i64 %844, i1 false)
  %847 = call ptr @malloc(i32 24)
  store ptr %846, ptr %847, align 8
  %memberidx1.i.i32.i = getelementptr inbounds %String, ptr %847, i64 0, i32 1
  store i64 %844, ptr %memberidx1.i.i32.i, align 4
  %memberidx2.i.i33.i = getelementptr inbounds %String, ptr %847, i64 0, i32 2
  store i64 %844, ptr %memberidx2.i.i33.i, align 4
  %848 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %848)
  %849 = add i32 %845, 1
  %850 = call ptr @malloc(i32 %849)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %850, ptr align 8 %846, i64 %844, i1 false)
  %851 = getelementptr inbounds i8, ptr %850, i64 %844
  store i8 0, ptr %851, align 1
  %852 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @2, ptr %850)
  %853 = load ptr, ptr %6, align 8
  %854 = call ptr @malloc(i32 24)
  call void @free(ptr %850)
  %855 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %855, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %856 = call ptr @malloc(i32 24)
  %857 = call i64 @write(i64 1, ptr %855, i64 7)
  call void @free(ptr %855)
  call void @free(ptr %856)
  %858 = call i64 @write(i64 1, ptr %853, i64 %852)
  %859 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %853)
  call void @free(ptr %854)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  br label %ifend.i312

ifend.i312:                                       ; preds = %if.entry.i311, %else58
  %860 = load ptr, ptr %569, align 8
  %861 = call ptr @LLVMGetNamedFunction(ptr %860, ptr nonnull @3)
  %862 = icmp eq ptr %861, null
  br i1 %862, label %if.entry4.i, label %ifend6.i

if.entry4.i:                                      ; preds = %ifend.i312
  %863 = call ptr @malloc(i32 48)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %863, ptr noundef nonnull align 8 dereferenceable(48) @4, i64 48, i1 false)
  %864 = call ptr @malloc(i32 24)
  %865 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %865, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %866 = call ptr @malloc(i32 24)
  %867 = call i64 @write(i64 1, ptr %865, i64 7)
  call void @free(ptr %865)
  call void @free(ptr %866)
  %868 = call i64 @write(i64 1, ptr %863, i64 48)
  %869 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %863)
  call void @free(ptr %864)
  call void @exit(i64 -1)
  br label %GeneratedModule_exec.exit

ifend6.i:                                         ; preds = %ifend.i312
  %870 = load ptr, ptr %engine.i, align 8
  %871 = call i64 @LLVMRunFunctionAsMain(ptr %870, ptr nonnull %861, i64 0, ptr null, ptr null)
  %872 = load ptr, ptr %engine.i, align 8
  %873 = load ptr, ptr %569, align 8
  %874 = call i1 @LLVMRemoveModule(ptr %872, ptr %873, ptr nonnull %569, ptr nonnull %memberidx1.i.i211)
  br i1 %874, label %if.entry12.i, label %GeneratedModule_exec.exit

if.entry12.i:                                     ; preds = %ifend6.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %875 = load ptr, ptr %memberidx1.i.i211, align 8
  %876 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %875)
  %877 = trunc i64 %876 to i32
  %878 = call ptr @malloc(i32 %877)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %878, ptr align 8 %875, i64 %876, i1 false)
  %879 = call ptr @malloc(i32 24)
  store ptr %878, ptr %879, align 8
  %memberidx1.i.i38.i = getelementptr inbounds %String, ptr %879, i64 0, i32 1
  store i64 %876, ptr %memberidx1.i.i38.i, align 4
  %memberidx2.i.i39.i = getelementptr inbounds %String, ptr %879, i64 0, i32 2
  store i64 %876, ptr %memberidx2.i.i39.i, align 4
  %880 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %880)
  %881 = add i32 %877, 1
  %882 = call ptr @malloc(i32 %881)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %882, ptr align 8 %878, i64 %876, i1 false)
  %883 = getelementptr inbounds i8, ptr %882, i64 %876
  store i8 0, ptr %883, align 1
  %884 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @2, ptr %882)
  %885 = load ptr, ptr %5, align 8
  %886 = call ptr @malloc(i32 24)
  call void @free(ptr %882)
  %887 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %887, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %888 = call ptr @malloc(i32 24)
  %889 = call i64 @write(i64 1, ptr %887, i64 7)
  call void @free(ptr %887)
  call void @free(ptr %888)
  %890 = call i64 @write(i64 1, ptr %885, i64 %884)
  %891 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %885)
  call void @free(ptr %886)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %GeneratedModule_exec.exit

GeneratedModule_exec.exit:                        ; preds = %ifend6.i, %if.entry12.i, %if.entry4.i
  %common.ret.op.i313 = phi i64 [ 1, %if.entry4.i ], [ %871, %if.entry12.i ], [ %871, %ifend6.i ]
  %.sink = load ptr, ptr %engine.i, align 8
  call void @LLVMDisposeExecutionEngine(ptr %.sink)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %engine.i)
  br label %ifend33
}

declare noalias ptr @malloc(i32) local_unnamed_addr

; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

declare i64 @memcmp(ptr, ptr, i64) local_unnamed_addr

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free")
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(ptr nocapture) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1)
declare noalias noundef ptr @realloc(ptr allocptr nocapture, i64 noundef) local_unnamed_addr #4

define internal fastcc void @GeneratedModule_set_target_machine(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %target = alloca ptr, align 8
  %memberidx = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %4 = load i64, ptr %memberidx, align 4
  %5 = add nuw i64 %4, 1
  %6 = alloca i8, i64 %5, align 1
  %7 = load ptr, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %6, ptr align 8 %7, i64 %4, i1 false)
  %8 = getelementptr inbounds i8, ptr %6, i64 %4
  store i8 0, ptr %8, align 1
  store ptr null, ptr %target, align 8
  %memberidx3 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %9 = call i1 @LLVMGetTargetFromTriple(ptr nonnull %6, ptr nonnull %target, ptr nonnull %memberidx3)
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10)
  %12 = trunc i64 %11 to i32
  %13 = call ptr @malloc(i32 %12)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %10, i64 %11, i1 false)
  %14 = call ptr @malloc(i32 24)
  store ptr %13, ptr %14, align 8
  %memberidx1.i.i23 = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  store i64 %11, ptr %memberidx1.i.i23, align 4
  %memberidx2.i.i24 = getelementptr inbounds %String, ptr %14, i64 0, i32 2
  store i64 %11, ptr %memberidx2.i.i24, align 4
  %15 = load ptr, ptr %memberidx3, align 8
  call void @LLVMDisposeMessage(ptr %15)
  %16 = add i32 %12, 1
  %17 = call ptr @malloc(i32 %16)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %13, i64 %11, i1 false)
  %18 = getelementptr inbounds i8, ptr %17, i64 %11
  store i8 0, ptr %18, align 1
  %19 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %17)
  %20 = load ptr, ptr %3, align 8
  %21 = call ptr @malloc(i32 24)
  call void @free(ptr %17)
  %22 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %22, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %23 = call ptr @malloc(i32 24)
  %24 = call i64 @write(i64 1, ptr %22, i64 7)
  call void @free(ptr %22)
  call void @free(ptr %23)
  %25 = call i64 @write(i64 1, ptr %20, i64 %19)
  %26 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %20)
  call void @free(ptr %21)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  %memberidx5 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %target, align 8
  %28 = call ptr @LLVMGetHostCPUFeatures()
  %29 = call ptr @LLVMCreateTargetMachine(ptr %27, ptr nonnull %6, ptr nonnull @5, ptr %28, i64 3, i64 0, i64 0)
  store ptr %29, ptr %memberidx5, align 8
  %30 = load ptr, ptr %0, align 8
  %31 = call ptr @LLVMCreateTargetDataLayout(ptr %29)
  call void @LLVMSetDataLayout(ptr %30, ptr %31)
  %32 = load ptr, ptr %0, align 8
  %33 = load ptr, ptr %memberidx5, align 8
  %34 = call ptr @LLVMGetTargetMachineTriple(ptr %33)
  call void @LLVMSetTarget(ptr %32, ptr %34)
  ret void
}

define internal fastcc void @GeneratedModule_write_ir(ptr %0, ptr nocapture %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = trunc i64 %4 to i32
  %6 = add i32 %5, 1
  %7 = tail call ptr @malloc(i32 %6)
  %8 = load ptr, ptr %1, align 8
  %9 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %8, i64 %9, i1 false)
  %10 = getelementptr inbounds i8, ptr %7, i64 %9
  store i8 0, ptr %10, align 1
  %11 = load ptr, ptr %0, align 8
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %12 = tail call i1 @LLVMPrintModuleToFile(ptr %11, ptr %7, ptr nonnull %memberidx1)
  br i1 %12, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %13 = load ptr, ptr %memberidx1, align 8
  %14 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %13)
  %15 = trunc i64 %14 to i32
  %16 = tail call ptr @malloc(i32 %15)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %13, i64 %14, i1 false)
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  %memberidx1.i.i9 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  store i64 %14, ptr %memberidx1.i.i9, align 4
  %memberidx2.i.i10 = getelementptr inbounds %String, ptr %17, i64 0, i32 2
  store i64 %14, ptr %memberidx2.i.i10, align 4
  %18 = load ptr, ptr %memberidx1, align 8
  tail call void @LLVMDisposeMessage(ptr %18)
  %19 = add i32 %15, 1
  %20 = tail call ptr @malloc(i32 %19)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %16, i64 %14, i1 false)
  %21 = getelementptr inbounds i8, ptr %20, i64 %14
  store i8 0, ptr %21, align 1
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %20)
  %23 = load ptr, ptr %3, align 8
  %24 = call ptr @malloc(i32 24)
  call void @free(ptr %20)
  %25 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %25, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %26 = call ptr @malloc(i32 24)
  %27 = call i64 @write(i64 1, ptr %25, i64 7)
  call void @free(ptr %25)
  call void @free(ptr %26)
  %28 = call i64 @write(i64 1, ptr %23, i64 %22)
  %29 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %23)
  call void @free(ptr %24)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  tail call void @free(ptr nonnull %7)
  %30 = load ptr, ptr %1, align 8
  call void @free(ptr %30)
  tail call void @free(ptr nonnull %1)
  ret void
}

declare i1 @LLVMVerifyModule(ptr, i64, ptr) local_unnamed_addr

declare void @LLVM_InitializeAllTargetInfos() local_unnamed_addr

declare void @LLVM_InitializeAllTargets() local_unnamed_addr

declare void @LLVM_InitializeAllTargetMCs() local_unnamed_addr

declare void @LLVM_InitializeAllAsmParsers() local_unnamed_addr

declare void @LLVM_InitializeAllAsmPrinters() local_unnamed_addr

declare void @LLVMDisposeMessage(ptr) local_unnamed_addr

; Function Attrs: nofree
declare noundef i64 @write(i64 noundef, ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #0

declare void @exit(i64) local_unnamed_addr

declare i64 @asprintf(ptr, ptr, ...) local_unnamed_addr

declare ptr @LLVMCreatePassManager() local_unnamed_addr

declare ptr @LLVMCreateFunctionPassManagerForModule(ptr) local_unnamed_addr

declare ptr @LLVMPassManagerBuilderCreate() local_unnamed_addr

declare void @LLVMAddInternalizePass(ptr, i64) local_unnamed_addr

declare void @LLVMAddGlobalDCEPass(ptr) local_unnamed_addr

declare void @LLVMAddGlobalOptimizerPass(ptr) local_unnamed_addr

declare void @LLVMAddInstructionCombiningPass(ptr) local_unnamed_addr

declare void @LLVMAddScalarReplAggregatesPass(ptr) local_unnamed_addr

declare void @LLVMAddFunctionInliningPass(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderSetOptLevel(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetFirstFunction(ptr) local_unnamed_addr

declare i1 @LLVMRunFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNextFunction(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateModulePassManager(ptr, ptr) local_unnamed_addr

declare i1 @LLVMRunPassManager(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposePassManager(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderDispose(ptr) local_unnamed_addr

declare void @LLVMLinkInMCJIT() local_unnamed_addr

declare i1 @LLVMCreateExecutionEngineForModule(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNamedFunction(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposeExecutionEngine(ptr) local_unnamed_addr

declare i64 @LLVMRunFunctionAsMain(ptr, ptr, i64, ptr, ptr) local_unnamed_addr

declare i1 @LLVMRemoveModule(ptr, ptr, ptr, ptr) local_unnamed_addr

declare i1 @LLVMGetTargetFromTriple(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetMachine(ptr, ptr, ptr, ptr, i64, i64, i64) local_unnamed_addr

declare ptr @LLVMGetHostCPUFeatures() local_unnamed_addr

declare void @LLVMSetDataLayout(ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetDataLayout(ptr) local_unnamed_addr

declare void @LLVMSetTarget(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetTargetMachineTriple(ptr) local_unnamed_addr

declare i1 @LLVMTargetMachineEmitToFile(ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare i1 @LLVMPrintModuleToFile(ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMWriteBitcodeToFile(ptr, ptr) local_unnamed_addr

define internal fastcc i1 @Compiler_print_errors(ptr nocapture readonly %0) unnamed_addr {
  %2 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_FloError_, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %if.entry, label %common.ret

common.ret:                                       ; preds = %1, %print_error.exit
  ret i1 %5

if.entry:                                         ; preds = %1
  %6 = load ptr, ptr %3, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = load ptr, ptr %0, align 8
  %10 = load i64, ptr %9, align 4
  %11 = load ptr, ptr %8, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx6 = getelementptr inbounds %FloFile, ptr %13, i64 0, i32 1
  %14 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %memberidx7, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %16 = load i64, ptr %7, align 4
  %memberidx1.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 1
  %17 = load ptr, ptr %memberidx1.i, align 8
  tail call fastcc void @print_message_error(i64 %16, ptr %17)
  %memberidx.i.i = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i.i, align 4
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, 1
  %21 = tail call ptr @malloc(i32 %20)
  %22 = load ptr, ptr %14, align 8
  %23 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, ptr %21, i64 %23
  store i8 0, ptr %24, align 1
  %memberidx2.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 2
  %25 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  %26 = load i64, ptr %memberidx3.i, align 4
  %27 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @16, ptr %21, i64 %26)
  %28 = load ptr, ptr %2, align 8
  %29 = call ptr @malloc(i32 24)
  call void @free(ptr %21)
  %30 = call i64 @write(i64 1, ptr %28, i64 %27)
  %31 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %28)
  call void @free(ptr %29)
  %32 = load ptr, ptr %memberidx2.i, align 8
  %memberidx.i8.i = getelementptr inbounds %FloRange, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i8.i, align 4
  %34 = load ptr, ptr %15, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 %33
  %36 = load i8, ptr %35, align 1
  %37 = icmp ne i8 %36, 10
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i.i.i, align 4
  %39 = icmp sgt i64 %38, %33
  %40 = and i1 %37, %39
  br i1 %40, label %while.entry.i.i.i, label %get_next_line_index.exit.i.i

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %start.0.i.i.i = phi i64 [ %41, %while.entry.i.i.i ], [ %33, %if.entry ]
  %41 = add nsw i64 %start.0.i.i.i, 1
  %42 = getelementptr inbounds i8, ptr %34, i64 %41
  %43 = load i8, ptr %42, align 1
  %44 = icmp ne i8 %43, 10
  %45 = icmp slt i64 %41, %38
  %46 = and i1 %44, %45
  br i1 %46, label %while.entry.i.i.i, label %get_next_line_index.exit.i.i

get_next_line_index.exit.i.i:                     ; preds = %while.entry.i.i.i, %if.entry
  %start.1.i.i.i = phi i64 [ %33, %if.entry ], [ %41, %while.entry.i.i.i ]
  %47 = load i64, ptr %32, align 4
  %memberidx4.i.i = getelementptr inbounds %FloRange, ptr %32, i64 0, i32 2
  %48 = load i64, ptr %memberidx4.i.i, align 4
  %49 = sub nsw i64 %47, %48
  %50 = sub nuw i64 %start.1.i.i.i, %49
  %51 = trunc i64 %50 to i32
  %52 = call ptr @malloc(i32 %51)
  %53 = load ptr, ptr %15, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 %49
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %52, ptr align 2147483648 %54, i64 %50, i1 false)
  %55 = call ptr @malloc(i32 24)
  %56 = call i64 @write(i64 1, ptr %52, i64 %50)
  %57 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %52)
  call void @free(ptr %55)
  %58 = load i64, ptr %memberidx4.i.i, align 4
  %59 = load i64, ptr %memberidx.i8.i, align 4
  %60 = load i64, ptr %32, align 4
  %61 = sub nuw i64 %59, %60
  %62 = call ptr @malloc(i32 16)
  store i64 0, ptr %62, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Range, ptr %62, i64 0, i32 1
  store i64 %58, ptr %memberidx1.i.i.i, align 4
  %63 = call ptr @malloc(i32 17)
  %memberidx.i.i29.i.i = getelementptr inbounds %RangeIterator, ptr %63, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i29.i.i, align 4
  %memberidx1.i.i30.i.i = getelementptr inbounds %RangeIterator, ptr %63, i64 0, i32 2
  store i64 %58, ptr %memberidx1.i.i30.i.i, align 4
  %64 = icmp slt i64 %58, 1
  store i1 %64, ptr %63, align 1
  br i1 %64, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %get_next_line_index.exit.i.i, %for.body.i.i
  %storemerge14 = phi i64 [ %69, %for.body.i.i ], [ 1, %get_next_line_index.exit.i.i ]
  %65 = call ptr @malloc(i32 1)
  store i8 32, ptr %65, align 8
  %66 = call ptr @malloc(i32 24)
  %67 = call i64 @write(i64 1, ptr nonnull %65, i64 1)
  call void @free(ptr %65)
  call void @free(ptr %66)
  %68 = icmp sge i64 %storemerge14, %58
  store i1 %68, ptr %63, align 1
  %69 = add nuw nsw i64 %storemerge14, 1
  br i1 %68, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.body.i.i, %get_next_line_index.exit.i.i
  call void @free(ptr nonnull %63)
  %70 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %70, ptr noundef nonnull align 8 dereferenceable(7) @9, i64 7, i1 false)
  %71 = call ptr @malloc(i32 24)
  %72 = call i64 @write(i64 1, ptr %70, i64 7)
  call void @free(ptr %70)
  call void @free(ptr %71)
  %73 = call ptr @malloc(i32 16)
  store i64 0, ptr %73, align 4
  %memberidx1.i38.i.i = getelementptr inbounds %Range, ptr %73, i64 0, i32 1
  store i64 %61, ptr %memberidx1.i38.i.i, align 4
  %74 = call ptr @malloc(i32 17)
  %memberidx.i.i40.i.i = getelementptr inbounds %RangeIterator, ptr %74, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i40.i.i, align 4
  %memberidx1.i.i41.i.i = getelementptr inbounds %RangeIterator, ptr %74, i64 0, i32 2
  store i64 %61, ptr %memberidx1.i.i41.i.i, align 4
  %75 = icmp slt i64 %61, 1
  store i1 %75, ptr %74, align 1
  br i1 %75, label %print_error.exit, label %for.body11.i.i

for.body11.i.i:                                   ; preds = %for.end.i.i, %for.body11.i.i
  %storemerge1213 = phi i64 [ %80, %for.body11.i.i ], [ 1, %for.end.i.i ]
  %76 = call ptr @malloc(i32 1)
  store i8 94, ptr %76, align 8
  %77 = call ptr @malloc(i32 24)
  %78 = call i64 @write(i64 1, ptr nonnull %76, i64 1)
  call void @free(ptr %76)
  call void @free(ptr %77)
  %79 = icmp sge i64 %storemerge1213, %61
  store i1 %79, ptr %74, align 1
  %80 = add nuw nsw i64 %storemerge1213, 1
  br i1 %79, label %print_error.exit, label %for.body11.i.i

print_error.exit:                                 ; preds = %for.body11.i.i, %for.end.i.i
  call void @free(ptr nonnull %74)
  %81 = call ptr @malloc(i32 4)
  store i32 1831885595, ptr %81, align 8
  %82 = call ptr @malloc(i32 24)
  %83 = call i64 @write(i64 1, ptr nonnull %81, i64 4)
  call void @free(ptr %81)
  call void @free(ptr %82)
  %84 = call ptr @malloc(i32 1)
  store i8 10, ptr %84, align 8
  %85 = call ptr @malloc(i32 24)
  %86 = call i64 @write(i64 1, ptr nonnull %84, i64 1)
  call void @free(ptr %84)
  call void @free(ptr %85)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  br label %common.ret
}

define internal fastcc ptr @Compiler_register_file(ptr nocapture readonly %0, ptr %1) unnamed_addr {
  %buf.i.i = alloca [400 x i8], align 1
  %3 = tail call ptr @malloc(i32 1)
  store i8 64, ptr %3, align 8
  %4 = tail call ptr @malloc(i32 24)
  store ptr %3, ptr %4, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i.i, align 4
  %memberidx.i = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i.i.i, align 4
  %7 = add i64 %6, -1
  %.not.i.i.i33 = icmp slt i64 %7, 0
  br i1 %.not.i.i.i33, label %String_replace.exit.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %2, %ifend.i.i.i
  %index.0.i.i.i34 = phi i64 [ %15, %ifend.i.i.i ], [ 0, %2 ]
  %8 = load i8, ptr %3, align 1
  %9 = load ptr, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 %index.0.i.i.i34
  %11 = load i8, ptr %10, align 1
  %12 = icmp eq i8 %8, %11
  br i1 %12, label %if.entry.i.i.i, label %ifend.i.i.i

if.entry.i.i.i:                                   ; preds = %for.body.i.i.i
  %13 = tail call i64 @memcmp(ptr nonnull %3, ptr nonnull %10, i64 1)
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %if.entry.i.i, label %ifend.i.i.i

ifend.i.i.i:                                      ; preds = %if.entry.i.i.i, %for.body.i.i.i
  %15 = add nuw nsw i64 %index.0.i.i.i34, 1
  %.not.i.i.i.not = icmp slt i64 %index.0.i.i.i34, %7
  br i1 %.not.i.i.i.not, label %for.body.i.i.i, label %String_replace.exit.i

if.entry.i.i:                                     ; preds = %if.entry.i.i.i
  %16 = load i64, ptr %memberidx.i.i.i, align 4
  %17 = add i64 %16, -1
  %memberidx2.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %18 = load i64, ptr %memberidx2.i.i, align 4
  %19 = add nuw i64 %17, %18
  %20 = trunc i64 %19 to i32
  %21 = tail call ptr @malloc(i32 %20)
  %22 = load ptr, ptr %1, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %index.0.i.i.i34, i1 false)
  %23 = getelementptr inbounds i8, ptr %21, i64 %index.0.i.i.i34
  %24 = load ptr, ptr %5, align 8
  %25 = load i64, ptr %memberidx2.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %23, ptr align 8 %24, i64 %25, i1 false)
  %26 = add nsw i64 %25, %index.0.i.i.i34
  %27 = getelementptr inbounds i8, ptr %21, i64 %26
  %28 = add nuw nsw i64 %index.0.i.i.i34, 1
  %29 = getelementptr inbounds i8, ptr %22, i64 %28
  %30 = load i64, ptr %memberidx.i.i.i, align 4
  %31 = sub nuw i64 %30, %28
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %27, ptr nonnull align 2147483648 %29, i64 %31, i1 false)
  %32 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %32, align 8
  %memberidx1.i42.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i42.i.i, align 4
  %memberidx2.i.i5.i = getelementptr inbounds %String, ptr %32, i64 0, i32 2
  store i64 %19, ptr %memberidx2.i.i5.i, align 4
  br label %String_replace.exit.i

String_replace.exit.i:                            ; preds = %ifend.i.i.i, %2, %if.entry.i.i
  %common.ret.op.i.i = phi ptr [ %32, %if.entry.i.i ], [ %1, %2 ], [ %1, %ifend.i.i.i ]
  %33 = tail call ptr @malloc(i32 4)
  store i32 1869375022, ptr %33, align 8
  %34 = tail call ptr @malloc(i32 24)
  store ptr %33, ptr %34, align 8
  %memberidx1.i.i6.i = getelementptr inbounds %String, ptr %34, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i6.i, align 4
  %memberidx2.i.i7.i = getelementptr inbounds %String, ptr %34, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i7.i, align 4
  %memberidx.i8.i = getelementptr inbounds %String, ptr %common.ret.op.i.i, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i8.i, align 4
  %36 = icmp slt i64 %35, 4
  br i1 %36, label %if.entry.i, label %ifend.i11.i

ifend.i11.i:                                      ; preds = %String_replace.exit.i
  %37 = load ptr, ptr %common.ret.op.i.i, align 8
  %38 = getelementptr inbounds i8, ptr %37, i64 %35
  %39 = getelementptr inbounds i8, ptr %38, i64 -4
  %40 = tail call i64 @memcmp(ptr nonnull %39, ptr nonnull %33, i64 4)
  %41 = icmp eq i64 %40, 0
  %.pre38 = load i64, ptr %memberidx.i8.i, align 4
  %extract.t52 = trunc i64 %.pre38 to i32
  br i1 %41, label %Compiler_find_module_path.exit, label %if.entry.i

if.entry.i:                                       ; preds = %ifend.i11.i, %String_replace.exit.i
  %42 = phi i64 [ %35, %String_replace.exit.i ], [ %.pre38, %ifend.i11.i ]
  %43 = add nuw i64 %42, 4
  %memberidx.i.i.i.i = getelementptr inbounds %String, ptr %common.ret.op.i.i, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i.i.i.i, align 4
  %45 = icmp slt i64 %44, %43
  %46 = load ptr, ptr %common.ret.op.i.i, align 8
  br i1 %45, label %if.entry.i.i.i.i, label %String___adda__.exit.i

if.entry.i.i.i.i:                                 ; preds = %if.entry.i
  %47 = tail call ptr @realloc(ptr %46, i64 %43)
  store ptr %47, ptr %common.ret.op.i.i, align 8
  store i64 %43, ptr %memberidx.i.i.i.i, align 4
  %.pre37 = load i64, ptr %memberidx.i8.i, align 4
  br label %String___adda__.exit.i

String___adda__.exit.i:                           ; preds = %if.entry.i, %if.entry.i.i.i.i
  %48 = phi i64 [ %.pre37, %if.entry.i.i.i.i ], [ %42, %if.entry.i ]
  %49 = phi ptr [ %47, %if.entry.i.i.i.i ], [ %46, %if.entry.i ]
  %50 = getelementptr inbounds i8, ptr %49, i64 %48
  %51 = load i32, ptr %33, align 8
  store i32 %51, ptr %50, align 2147483648
  %52 = load i64, ptr %memberidx.i8.i, align 4
  %53 = add nuw i64 %52, 4
  store i64 %53, ptr %memberidx.i8.i, align 4
  %extract.t51 = trunc i64 %53 to i32
  br label %Compiler_find_module_path.exit

Compiler_find_module_path.exit:                   ; preds = %ifend.i11.i, %String___adda__.exit.i
  %.pre38.sink.off0 = phi i32 [ %extract.t51, %String___adda__.exit.i ], [ %extract.t52, %ifend.i11.i ]
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %buf.i.i)
  %54 = add i32 %.pre38.sink.off0, 1
  %55 = tail call ptr @malloc(i32 %54)
  %56 = load ptr, ptr %common.ret.op.i.i, align 8
  %57 = load i64, ptr %memberidx.i8.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %55, ptr align 8 %56, i64 %57, i1 false)
  %58 = getelementptr inbounds i8, ptr %55, i64 %57
  store i8 0, ptr %58, align 1
  %59 = call ptr @realpath(ptr %55, ptr nonnull %buf.i.i)
  %60 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %buf.i.i)
  %61 = trunc i64 %60 to i32
  %62 = call ptr @malloc(i32 %61)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %62, ptr nonnull align 8 %buf.i.i, i64 %60, i1 false)
  %63 = call ptr @malloc(i32 24)
  store ptr %62, ptr %63, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %String, ptr %63, i64 0, i32 1
  store i64 %60, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %String, ptr %63, i64 0, i32 2
  store i64 %60, ptr %memberidx2.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %buf.i.i)
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 6
  %64 = load ptr, ptr %memberidx, align 8
  %65 = call fastcc i64 @Map_String_FileId__hash_fnc(ptr nonnull %63)
  %memberidx.i15 = getelementptr inbounds %Map_String_FileId_, ptr %64, i64 0, i32 1
  %66 = load i64, ptr %memberidx.i15, align 4
  %67 = urem i64 %65, %66
  %68 = load ptr, ptr %64, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  %.not.i = icmp eq ptr %70, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %Compiler_find_module_path.exit, %else.i
  %71 = phi ptr [ %79, %else.i ], [ %68, %Compiler_find_module_path.exit ]
  %72 = phi i64 [ %80, %else.i ], [ %66, %Compiler_find_module_path.exit ]
  %73 = phi ptr [ %84, %else.i ], [ %70, %Compiler_find_module_path.exit ]
  %hash.0.i = phi i64 [ %82, %else.i ], [ %67, %Compiler_find_module_path.exit ]
  %74 = load ptr, ptr %73, align 8
  %memberidx.i.i16 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i.i16, align 4
  %.not.i.i = icmp eq i64 %75, %60
  br i1 %.not.i.i, label %ifend.i.i18, label %else.i

ifend.i.i18:                                      ; preds = %while.entry.i
  %76 = load ptr, ptr %74, align 8
  %77 = call i64 @memcmp(ptr %76, ptr %62, i64 %60)
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %while.end.i, label %ifend.i.i18.else.i_crit_edge

ifend.i.i18.else.i_crit_edge:                     ; preds = %ifend.i.i18
  %.pre39 = load i64, ptr %memberidx.i15, align 4
  %.pre40 = load ptr, ptr %64, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i18
  %.pre41.pre = load ptr, ptr %64, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre41.pre, i64 %hash.0.i
  %.pre42.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre42.pre, null
  br i1 %.not25.i, label %ifend, label %Map_String_FileId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i18.else.i_crit_edge, %while.entry.i
  %79 = phi ptr [ %.pre40, %ifend.i.i18.else.i_crit_edge ], [ %71, %while.entry.i ]
  %80 = phi i64 [ %.pre39, %ifend.i.i18.else.i_crit_edge ], [ %72, %while.entry.i ]
  %81 = add nuw i64 %hash.0.i, 1
  %82 = urem i64 %81, %80
  %83 = getelementptr inbounds ptr, ptr %79, i64 %82
  %84 = load ptr, ptr %83, align 8
  %.not26.i = icmp eq ptr %84, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_String_FileId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_FileId_, ptr %.pre42.pre, i64 0, i32 1
  %85 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %85, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_String_FileId____getitem__.exit, %Array_FloFile____sl__.exit
  %common.ret.op = phi ptr [ %86, %Array_FloFile____sl__.exit ], [ %85, %Map_String_FileId____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %Compiler_find_module_path.exit, %while.end.i, %Map_String_FileId____getitem__.exit
  %86 = tail call ptr @malloc(i32 8)
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %87 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FloFile_, ptr %87, i64 0, i32 1
  %88 = load i64, ptr %memberidx2, align 4
  store i64 %88, ptr %86, align 4
  %89 = load ptr, ptr %memberidx, align 8
  call fastcc void @Map_String_FileId____setitem__(ptr %89, ptr nonnull %63, ptr nonnull %86)
  %90 = load ptr, ptr %memberidx1, align 8
  %91 = tail call ptr @malloc(i32 16)
  store ptr %63, ptr %91, align 8
  %memberidx1.i = getelementptr inbounds %FloFile, ptr %91, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx.i20 = getelementptr inbounds %Array_FloFile_, ptr %90, i64 0, i32 1
  %92 = load i64, ptr %memberidx.i20, align 4
  %memberidx1.i21 = getelementptr inbounds %Array_FloFile_, ptr %90, i64 0, i32 2
  %93 = load i64, ptr %memberidx1.i21, align 4
  %.not.i22 = icmp slt i64 %92, %93
  br i1 %.not.i22, label %ifend.Array_FloFile____sl__.exit_crit_edge, label %if.entry.i24

ifend.Array_FloFile____sl__.exit_crit_edge:       ; preds = %ifend
  %.pre44 = load ptr, ptr %90, align 8
  br label %Array_FloFile____sl__.exit

if.entry.i24:                                     ; preds = %ifend
  %94 = shl nuw i64 %93, 1
  store i64 %94, ptr %memberidx1.i21, align 4
  %95 = load ptr, ptr %90, align 8
  %96 = shl i64 %93, 4
  %97 = call ptr @realloc(ptr %95, i64 %96)
  store ptr %97, ptr %90, align 8
  %.pre43 = load i64, ptr %memberidx.i20, align 4
  br label %Array_FloFile____sl__.exit

Array_FloFile____sl__.exit:                       ; preds = %ifend.Array_FloFile____sl__.exit_crit_edge, %if.entry.i24
  %98 = phi ptr [ %.pre44, %ifend.Array_FloFile____sl__.exit_crit_edge ], [ %97, %if.entry.i24 ]
  %99 = phi i64 [ %92, %ifend.Array_FloFile____sl__.exit_crit_edge ], [ %.pre43, %if.entry.i24 ]
  %100 = add nsw i64 %99, 1
  store i64 %100, ptr %memberidx.i20, align 4
  %101 = getelementptr inbounds ptr, ptr %98, i64 %99
  store ptr %91, ptr %101, align 8
  br label %common.ret
}

define internal fastcc i1 @Compiler_set_current_file(ptr nocapture %0, ptr %1) unnamed_addr {
  %buffer.i = alloca [1024 x i8], align 1
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %4 = load i64, ptr %1, align 4
  %5 = load ptr, ptr %3, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i64 %4
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx.i.i, align 4
  %10 = trunc i64 %9 to i32
  %11 = add i32 %10, 1
  %12 = tail call ptr @malloc(i32 %11)
  %13 = load ptr, ptr %8, align 8
  %14 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %13, i64 %14, i1 false)
  %15 = getelementptr inbounds i8, ptr %12, i64 %14
  store i8 0, ptr %15, align 1
  %16 = tail call i64 @access(ptr %12, i64 0)
  %17 = icmp eq i64 %16, 0
  tail call void @free(ptr %12)
  br i1 %17, label %ifend, label %common.ret

common.ret:                                       ; preds = %2, %File_read_all.exit
  ret i1 %17

ifend:                                            ; preds = %2
  %18 = load ptr, ptr %7, align 8
  %memberidx.i.i12 = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i.i12, align 4
  %20 = trunc i64 %19 to i32
  %21 = add i32 %20, 1
  %22 = tail call ptr @malloc(i32 %21)
  %23 = load ptr, ptr %18, align 8
  %24 = load i64, ptr %memberidx.i.i12, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %22, ptr align 8 %23, i64 %24, i1 false)
  %25 = getelementptr inbounds i8, ptr %22, i64 %24
  store i8 0, ptr %25, align 1
  %26 = tail call i64 @open(ptr %22, i64 4, i64 438)
  tail call void @free(ptr %22)
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %File_open_for_reading.exit, label %ifend.i

ifend.i:                                          ; preds = %ifend
  %28 = tail call ptr @malloc(i32 8)
  store i64 %26, ptr %28, align 4
  br label %File_open_for_reading.exit

File_open_for_reading.exit:                       ; preds = %ifend, %ifend.i
  %common.ret.op.i = phi ptr [ %28, %ifend.i ], [ null, %ifend ]
  %memberidx.i = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  %29 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %29, null
  br i1 %.not.i, label %Compiler_unlink_current_file_contents.exit, label %if.entry.i

if.entry.i:                                       ; preds = %File_open_for_reading.exit
  %30 = load ptr, ptr %29, align 8
  tail call void @free(ptr %30)
  tail call void @free(ptr nonnull %29)
  br label %Compiler_unlink_current_file_contents.exit

Compiler_unlink_current_file_contents.exit:       ; preds = %File_open_for_reading.exit, %if.entry.i
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %buffer.i)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1024) %buffer.i, i8 0, i64 1024, i1 false)
  %31 = tail call ptr @malloc(i32 1024)
  %32 = tail call ptr @malloc(i32 24)
  store ptr %31, ptr %32, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i, align 4
  %memberidx.i.i14 = getelementptr inbounds %String, ptr %32, i64 0, i32 2
  store i64 1024, ptr %memberidx.i.i14, align 4
  %33 = load i64, ptr %common.ret.op.i, align 4
  %34 = call i64 @read(i64 %33, ptr nonnull %buffer.i, i64 1024)
  %.not.i15 = icmp eq i64 %34, 0
  br i1 %.not.i15, label %File_read_all.exit, label %while.entry.i

while.entry.i:                                    ; preds = %Compiler_unlink_current_file_contents.exit, %String_append_bytes_length.exit.i
  %35 = phi i64 [ %45, %String_append_bytes_length.exit.i ], [ 0, %Compiler_unlink_current_file_contents.exit ]
  %read_len.0.i = phi i64 [ %47, %String_append_bytes_length.exit.i ], [ %34, %Compiler_unlink_current_file_contents.exit ]
  %36 = add nuw i64 %35, %read_len.0.i
  %37 = load i64, ptr %memberidx.i.i14, align 4
  %38 = icmp slt i64 %37, %36
  %39 = load ptr, ptr %32, align 8
  br i1 %38, label %if.entry.i.i.i, label %String_append_bytes_length.exit.i

if.entry.i.i.i:                                   ; preds = %while.entry.i
  %40 = tail call ptr @realloc(ptr %39, i64 %36)
  store ptr %40, ptr %32, align 8
  store i64 %36, ptr %memberidx.i.i14, align 4
  %.pre20 = load i64, ptr %memberidx1.i.i.i, align 4
  br label %String_append_bytes_length.exit.i

String_append_bytes_length.exit.i:                ; preds = %while.entry.i, %if.entry.i.i.i
  %41 = phi i64 [ %.pre20, %if.entry.i.i.i ], [ %35, %while.entry.i ]
  %42 = phi ptr [ %40, %if.entry.i.i.i ], [ %39, %while.entry.i ]
  %43 = getelementptr inbounds i8, ptr %42, i64 %41
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %43, ptr nonnull align 8 %buffer.i, i64 %read_len.0.i, i1 false)
  %44 = load i64, ptr %memberidx1.i.i.i, align 4
  %45 = add nuw i64 %44, %read_len.0.i
  store i64 %45, ptr %memberidx1.i.i.i, align 4
  %46 = load i64, ptr %common.ret.op.i, align 4
  %47 = call i64 @read(i64 %46, ptr nonnull %buffer.i, i64 1024)
  %.not4.i = icmp eq i64 %47, 0
  br i1 %.not4.i, label %File_read_all.exit, label %while.entry.i

File_read_all.exit:                               ; preds = %String_append_bytes_length.exit.i, %Compiler_unlink_current_file_contents.exit
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %buffer.i)
  store ptr %32, ptr %memberidx.i, align 8
  store ptr %1, ptr %0, align 8
  %48 = load i64, ptr %common.ret.op.i, align 4
  %49 = tail call i64 @close(i64 %48)
  br label %common.ret
}

define internal fastcc void @Map_String_FileId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_FileId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_FileId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_FileId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_FileId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_FileId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_FileId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_FileId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

; Function Attrs: nofree
declare noundef i64 @open(ptr nocapture noundef readonly, i64 noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: nofree
declare noundef i64 @read(i64 noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare noundef i64 @access(ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #5

declare i64 @close(i64) local_unnamed_addr

; Function Attrs: nofree nounwind
declare noundef ptr @realpath(ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #5

declare ptr @dirname(ptr) local_unnamed_addr

define internal fastcc void @print_message_error(i64 %0, ptr nocapture %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @9, i64 7, i1 false)
  %4 = tail call ptr @malloc(i32 24)
  %5 = tail call i64 @write(i64 1, ptr %3, i64 7)
  tail call void @free(ptr %3)
  tail call void @free(ptr %4)
  switch i64 %0, label %else11 [
    i64 0, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 5, label %if.entry7
    i64 1, label %if.entry10
  ]

if.entry:                                         ; preds = %2
  %6 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %6, ptr noundef nonnull align 8 dereferenceable(21) @10, i64 21, i1 false)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call i64 @write(i64 1, ptr %6, i64 21)
  br label %ifend

ifend:                                            ; preds = %if.entry10, %else11, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink34 = phi ptr [ %26, %if.entry10 ], [ %29, %else11 ], [ %23, %if.entry7 ], [ %20, %if.entry4 ], [ %17, %if.entry1 ], [ %6, %if.entry ]
  %.sink = phi ptr [ %27, %if.entry10 ], [ %30, %else11 ], [ %24, %if.entry7 ], [ %21, %if.entry4 ], [ %18, %if.entry1 ], [ %7, %if.entry ]
  tail call void @free(ptr %.sink34)
  tail call void @free(ptr %.sink)
  %9 = tail call ptr @malloc(i32 4)
  store i32 1831885595, ptr %9, align 8
  %10 = tail call ptr @malloc(i32 24)
  %11 = tail call i64 @write(i64 1, ptr nonnull %9, i64 4)
  tail call void @free(ptr %9)
  tail call void @free(ptr %10)
  %12 = load ptr, ptr %1, align 8
  %memberidx.i.i.i18 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i.i.i18, align 4
  %14 = tail call i64 @write(i64 1, ptr %12, i64 %13)
  %15 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %16 = load ptr, ptr %1, align 8
  tail call void @free(ptr %16)
  tail call void @free(ptr %1)
  ret void

if.entry1:                                        ; preds = %2
  %17 = tail call ptr @malloc(i32 16)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) @11, i64 16, i1 false)
  %18 = tail call ptr @malloc(i32 24)
  %19 = tail call i64 @write(i64 1, ptr %17, i64 16)
  br label %ifend

if.entry4:                                        ; preds = %2
  %20 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %20, ptr noundef nonnull align 8 dereferenceable(12) @12, i64 12, i1 false)
  %21 = tail call ptr @malloc(i32 24)
  %22 = tail call i64 @write(i64 1, ptr %20, i64 12)
  br label %ifend

if.entry7:                                        ; preds = %2
  %23 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %23, ptr noundef nonnull align 8 dereferenceable(14) @13, i64 14, i1 false)
  %24 = tail call ptr @malloc(i32 24)
  %25 = tail call i64 @write(i64 1, ptr %23, i64 14)
  br label %ifend

if.entry10:                                       ; preds = %2
  %26 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %26, ptr noundef nonnull align 8 dereferenceable(14) @14, i64 14, i1 false)
  %27 = tail call ptr @malloc(i32 24)
  %28 = tail call i64 @write(i64 1, ptr %26, i64 14)
  br label %ifend

else11:                                           ; preds = %2
  %29 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %29, ptr noundef nonnull align 8 dereferenceable(9) @15, i64 9, i1 false)
  %30 = tail call ptr @malloc(i32 24)
  %31 = tail call i64 @write(i64 1, ptr %29, i64 9)
  br label %ifend
}

define internal fastcc void @Map_String_VarId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_VarId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_VarId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_VarId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_VarId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nounwind willreturn
define internal fastcc void @Scope___del__(ptr nocapture readonly %0) unnamed_addr #6 {
  %2 = load ptr, ptr %0, align 8
  tail call void @free(ptr %2)
  %memberidx1 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load ptr, ptr %3, align 8
  tail call void @free(ptr %4)
  tail call void @free(ptr %3)
  %memberidx2 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %memberidx2, align 8
  %6 = load ptr, ptr %5, align 8
  tail call void @free(ptr %6)
  tail call void @free(ptr %5)
  %memberidx3 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = load ptr, ptr %7, align 8
  tail call void @free(ptr %8)
  tail call void @free(ptr %7)
  %memberidx4 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 4
  %9 = load ptr, ptr %memberidx4, align 8
  %10 = load ptr, ptr %9, align 8
  tail call void @free(ptr %10)
  tail call void @free(ptr %9)
  %memberidx5 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 6
  %11 = load ptr, ptr %memberidx5, align 8
  %12 = load ptr, ptr %11, align 8
  tail call void @free(ptr %12)
  tail call void @free(ptr %11)
  ret void
}

define internal fastcc void @Map_String_EnumId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_EnumId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_EnumId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_EnumId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_EnumId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_EnumId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_EnumId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_String_Type__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_Type_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_Type____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_Type__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_Type__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_Type_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_Type__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_String_ClassId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_ClassId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_ClassId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_ClassId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_ClassId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_ClassId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_String_PropId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_PropId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_PropId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_PropId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_PropId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_PropId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @ModuleAST_constructor(ptr nocapture writeonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 1
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %3 = tail call ptr @malloc(i32 64)
  store ptr %3, ptr %2, align 8
  store i64 0, ptr %memberidx.i, align 4
  store ptr %2, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 1
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i27 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 1
  store i64 0, ptr %memberidx.i27, align 4
  %memberidx1.i28 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i28, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i27, align 4
  store ptr %4, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 3
  %6 = tail call ptr @malloc(i32 24)
  %memberidx.i29 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx.i29, align 4
  %memberidx1.i30 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 2
  store i64 8, ptr %memberidx1.i30, align 4
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %6, align 8
  store i64 0, ptr %memberidx.i29, align 4
  store ptr %6, ptr %memberidx6, align 8
  %memberidx9 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 4
  %8 = tail call ptr @malloc(i32 24)
  %memberidx.i31 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 1
  store i64 0, ptr %memberidx.i31, align 4
  %memberidx1.i32 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 2
  store i64 8, ptr %memberidx1.i32, align 4
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %8, align 8
  store i64 0, ptr %memberidx.i31, align 4
  store ptr %8, ptr %memberidx9, align 8
  %memberidx12 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 5
  %10 = tail call ptr @malloc(i32 24)
  %memberidx.i33 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 1
  store i64 0, ptr %memberidx.i33, align 4
  %memberidx1.i34 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 2
  store i64 8, ptr %memberidx1.i34, align 4
  %11 = tail call ptr @malloc(i32 64)
  store ptr %11, ptr %10, align 8
  store i64 0, ptr %memberidx.i33, align 4
  store ptr %10, ptr %memberidx12, align 8
  %memberidx15 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 2
  %12 = tail call ptr @malloc(i32 24)
  %memberidx.i35 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 1
  store i64 0, ptr %memberidx.i35, align 4
  %memberidx1.i36 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 2
  store i64 8, ptr %memberidx1.i36, align 4
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %12, align 8
  store i64 0, ptr %memberidx.i35, align 4
  store ptr %12, ptr %memberidx15, align 8
  %memberidx18 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 6
  %14 = tail call ptr @malloc(i32 24)
  %memberidx.i37 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 1
  store i64 0, ptr %memberidx.i37, align 4
  %memberidx1.i38 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 2
  store i64 8, ptr %memberidx1.i38, align 4
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %14, align 8
  store i64 0, ptr %memberidx.i37, align 4
  store ptr %14, ptr %memberidx18, align 8
  ret void
}

declare ptr @LLVMGetDefaultTargetTriple() local_unnamed_addr

define internal fastcc ptr @parse_flags(i64 %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = icmp sgt i64 %0, 1
  br i1 %2, label %for.body, label %common.ret

for.body:                                         ; preds = %for.entry, %for.incr
  %arg.068 = phi ptr [ %arg.1, %for.incr ], [ null, %for.entry ]
  %i.067 = phi i64 [ %6, %for.incr ], [ 1, %for.entry ]
  %3 = getelementptr inbounds ptr, ptr %1, i64 %i.067
  %4 = load ptr, ptr %3, align 8
  %5 = load i8, ptr %4, align 1
  %.not = icmp eq i8 %5, 45
  br i1 %.not, label %ifend, label %if.entry

for.incr:                                         ; preds = %if.entry1, %if.entry, %for.end8
  %i.1 = phi i64 [ %i.067, %if.entry1 ], [ %i.067, %if.entry ], [ %i.2, %for.end8 ]
  %arg.1 = phi ptr [ %19, %if.entry1 ], [ %arg.068, %if.entry ], [ %arg.068, %for.end8 ]
  %6 = add nsw i64 %i.1, 1
  %7 = icmp slt i64 %6, %0
  br i1 %7, label %for.body, label %common.ret

common.ret:                                       ; preds = %for.incr, %for.entry, %if.entry17
  %arg.065 = phi ptr [ %arg.068, %if.entry17 ], [ null, %for.entry ], [ %arg.1, %for.incr ]
  ret ptr %arg.065

if.entry:                                         ; preds = %for.body
  %8 = icmp eq ptr %arg.068, null
  br i1 %8, label %if.entry1, label %for.incr

ifend:                                            ; preds = %for.body
  %9 = getelementptr inbounds i8, ptr %4, i64 1
  %10 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %9)
  %11 = trunc i64 %10 to i32
  %12 = tail call ptr @malloc(i32 %11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr nonnull align 8 %9, i64 %10, i1 false)
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %14 = load i64, ptr @flags_length, align 8
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %for.body6, label %for.end8

if.entry1:                                        ; preds = %if.entry
  %16 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4)
  %17 = trunc i64 %16 to i32
  %18 = tail call ptr @malloc(i32 %17)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr nonnull align 8 %4, i64 %16, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i53 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 %16, ptr %memberidx1.i.i53, align 4
  %memberidx2.i.i54 = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 %16, ptr %memberidx2.i.i54, align 4
  br label %for.incr

for.body6:                                        ; preds = %ifend, %for.incr7
  %j.066 = phi i64 [ %27, %for.incr7 ], [ 0, %ifend ]
  %20 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %j.066
  %21 = load ptr, ptr %20, align 8
  %memberidx = getelementptr inbounds %Flag, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %23, %10
  br i1 %.not.i, label %ifend.i, label %for.incr7

ifend.i:                                          ; preds = %for.body6
  %24 = load ptr, ptr %22, align 8
  %25 = tail call i64 @memcmp(ptr %24, ptr %12, i64 %10)
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %if.entry9, label %for.incr7

for.incr7:                                        ; preds = %for.body6, %ifend.i, %if.entry13
  %27 = add nuw nsw i64 %j.066, 1
  %28 = load i64, ptr @flags_length, align 8
  %29 = icmp slt i64 %27, %28
  br i1 %29, label %for.body6, label %for.end8

for.end8:                                         ; preds = %for.incr7, %ifend, %if.entry26, %ifend23
  %i.2 = phi i64 [ %32, %if.entry26 ], [ %32, %ifend23 ], [ %i.067, %ifend ], [ %i.067, %for.incr7 ]
  tail call void @free(ptr %12)
  tail call void @free(ptr %13)
  br label %for.incr

if.entry9:                                        ; preds = %ifend.i
  %30 = load i64, ptr %21, align 4
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %if.entry13, label %ifend15

if.entry13:                                       ; preds = %if.entry9
  %memberidx16 = getelementptr inbounds %FlagBool, ptr %21, i64 0, i32 3
  store i1 true, ptr %memberidx16, align 1
  br label %for.incr7

ifend15:                                          ; preds = %if.entry9
  %32 = add nuw i64 %i.067, 1
  %.not52 = icmp slt i64 %32, %0
  br i1 %.not52, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend15
  %33 = add i32 %11, 1
  %34 = tail call ptr @malloc(i32 %33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %12, i64 %10, i1 false)
  %35 = getelementptr inbounds i8, ptr %34, i64 %10
  store i8 0, ptr %35, align 1
  %36 = alloca ptr, align 8
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %36, ptr nonnull @33, ptr %34)
  %38 = load ptr, ptr %36, align 8
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i56 = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i56, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i, align 4
  tail call void @free(ptr %34)
  %40 = call i64 @write(i64 1, ptr %38, i64 %37)
  %41 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  br label %common.ret

ifend19:                                          ; preds = %ifend15
  %42 = getelementptr inbounds ptr, ptr %1, i64 %32
  %43 = load ptr, ptr %42, align 8
  %44 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %43)
  %45 = trunc i64 %44 to i32
  %46 = tail call ptr @malloc(i32 %45)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %46, ptr align 8 %43, i64 %44, i1 false)
  %47 = tail call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  %memberidx1.i.i57 = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  store i64 %44, ptr %memberidx1.i.i57, align 4
  %memberidx2.i.i58 = getelementptr inbounds %String, ptr %47, i64 0, i32 2
  store i64 %44, ptr %memberidx2.i.i58, align 4
  %48 = load i64, ptr %21, align 4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %if.entry21, label %ifend23

if.entry21:                                       ; preds = %ifend19
  %memberidx24 = getelementptr inbounds %FlagInt, ptr %21, i64 0, i32 3
  %50 = add i32 %45, 1
  %51 = tail call ptr @malloc(i32 %50)
  %52 = load ptr, ptr %47, align 8
  %53 = load i64, ptr %memberidx1.i.i57, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %51, ptr align 8 %52, i64 %53, i1 false)
  %54 = getelementptr inbounds i8, ptr %51, i64 %53
  store i8 0, ptr %54, align 1
  %55 = tail call i64 @atol(ptr nocapture %51)
  tail call void @free(ptr %51)
  store i64 %55, ptr %memberidx24, align 4
  %56 = load ptr, ptr %47, align 8
  tail call void @free(ptr %56)
  tail call void @free(ptr nonnull %47)
  %.pr = load i64, ptr %21, align 4
  br label %ifend23

ifend23:                                          ; preds = %ifend19, %if.entry21
  %57 = phi i64 [ %48, %ifend19 ], [ %.pr, %if.entry21 ]
  %58 = icmp eq i64 %57, 2
  br i1 %58, label %if.entry26, label %for.end8

if.entry26:                                       ; preds = %ifend23
  %memberidx29 = getelementptr inbounds %FlagString, ptr %21, i64 0, i32 3
  store ptr %47, ptr %memberidx29, align 8
  br label %for.end8
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare i64 @atol(ptr nocapture) local_unnamed_addr #7

define internal fastcc void @print_flags() unnamed_addr {
for.entry:
  %0 = load i64, ptr @flags_length, align 8
  %1 = icmp sgt i64 %0, 0
  br i1 %1, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %ifend
  %i.026 = phi i64 [ %39, %ifend ], [ 0, %for.entry ]
  %2 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %i.026
  %3 = load ptr, ptr %2, align 8
  %memberidx = getelementptr inbounds %Flag, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx.i, align 4
  %6 = trunc i64 %5 to i32
  %7 = add i32 %6, 1
  %8 = call ptr @malloc(i32 %7)
  %9 = load ptr, ptr %4, align 8
  %10 = load i64, ptr %memberidx.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %9, i64 %10, i1 false)
  %11 = getelementptr inbounds i8, ptr %8, i64 %10
  store i8 0, ptr %11, align 1
  %12 = alloca ptr, align 8
  %13 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %12, ptr nonnull @36, ptr %8)
  %14 = load ptr, ptr %12, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 %13, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 %13, ptr %memberidx2.i, align 4
  tail call void @free(ptr %8)
  %16 = call i64 @write(i64 1, ptr %14, i64 %13)
  %17 = load i64, ptr %3, align 4
  switch i64 %17, label %else4 [
    i64 0, label %if.entry
    i64 2, label %if.entry3
  ]

for.end:                                          ; preds = %ifend, %for.entry
  ret void

if.entry:                                         ; preds = %for.body
  %18 = call ptr @malloc(i32 4)
  store i32 1047411744, ptr %18, align 8
  %19 = call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  %20 = call i64 @write(i64 1, ptr nonnull %18, i64 4)
  br label %ifend

ifend:                                            ; preds = %if.entry3, %else4, %if.entry
  %21 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %22 = call ptr @malloc(i32 2)
  store i16 2313, ptr %22, align 8
  %23 = call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  %memberidx1.i.i14 = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i14, align 4
  %memberidx2.i.i15 = getelementptr inbounds %String, ptr %23, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i15, align 4
  %24 = call i64 @write(i64 1, ptr nonnull %22, i64 2)
  %memberidx6 = getelementptr inbounds %Flag, ptr %3, i64 0, i32 2
  %25 = load ptr, ptr %memberidx6, align 8
  %memberidx.i17 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i17, align 4
  %27 = trunc i64 %26 to i32
  %28 = add i32 %27, 1
  %29 = call ptr @malloc(i32 %28)
  %30 = load ptr, ptr %25, align 8
  %31 = load i64, ptr %memberidx.i17, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr align 8 %30, i64 %31, i1 false)
  %32 = getelementptr inbounds i8, ptr %29, i64 %31
  store i8 0, ptr %32, align 1
  %33 = alloca ptr, align 8
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %33, ptr nonnull @6, ptr %29)
  %35 = load ptr, ptr %33, align 8
  %36 = tail call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i18 = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i18, align 4
  %memberidx2.i19 = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i19, align 4
  tail call void @free(ptr %29)
  %37 = call i64 @write(i64 1, ptr %35, i64 %34)
  %38 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %39 = add nuw nsw i64 %i.026, 1
  %40 = load i64, ptr @flags_length, align 8
  %41 = icmp slt i64 %39, %40
  br i1 %41, label %for.body, label %for.end

if.entry3:                                        ; preds = %for.body
  %42 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %42, ptr noundef nonnull align 8 dereferenceable(6) @37, i64 6, i1 false)
  %43 = call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i.i21 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i21, align 4
  %memberidx2.i.i22 = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i22, align 4
  %44 = call i64 @write(i64 1, ptr %42, i64 6)
  br label %ifend

else4:                                            ; preds = %for.body
  %45 = call ptr @malloc(i32 1)
  store i8 32, ptr %45, align 8
  %46 = call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i.i24 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i24, align 4
  %memberidx2.i.i25 = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i25, align 4
  %47 = call i64 @write(i64 1, ptr nonnull %45, i64 1)
  br label %ifend
}

define internal fastcc noalias ptr @Lexer_tokenize(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Lexer, align 8
  %memberidx.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 1
  store ptr %0, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 2
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 5
  store i64 1, ptr %memberidx3.i, align 4
  %memberidx4.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 4
  store i64 0, ptr %memberidx4.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx2.i.i, align 4
  %5 = icmp slt i64 %4, 0
  br i1 %5, label %end.i.thread, label %end.i

end.i.thread:                                     ; preds = %2
  store i8 0, ptr %3, align 8
  br label %Lexer_advance.exit

end.i:                                            ; preds = %2
  store i64 0, ptr %memberidx2.i, align 4
  %6 = load ptr, ptr %0, align 8
  %7 = load i8, ptr %6, align 1
  store i8 %7, ptr %3, align 8
  switch i8 %7, label %if.entry9.i [
    i8 10, label %if.entry.i25
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i25:                                     ; preds = %end.i
  store i64 2, ptr %memberidx3.i, align 4
  br label %Lexer_advance.exit

if.entry9.i:                                      ; preds = %end.i
  store i64 1, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i25, %if.entry9.i
  %8 = phi i64 [ -1, %end.i.thread ], [ 0, %end.i ], [ 0, %if.entry.i25 ], [ 0, %if.entry9.i ]
  %9 = tail call ptr @malloc(i32 24)
  %memberidx.i56 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 1
  %memberidx1.i57 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 2
  store i64 8, ptr %memberidx1.i57, align 4
  %10 = tail call ptr @malloc(i32 64)
  store ptr %10, ptr %9, align 8
  store i64 0, ptr %memberidx.i56, align 4
  %11 = load i64, ptr %memberidx2.i.i, align 4
  %12 = icmp sge i64 %8, %11
  %memberidx3 = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 1
  %13 = load i64, ptr %memberidx3, align 4
  %14 = icmp ne i64 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %while.end, label %while.entry

while.entry:                                      ; preds = %Lexer_advance.exit, %Lexer_advance.exit49
  %16 = phi ptr [ %23, %Lexer_advance.exit49 ], [ %10, %Lexer_advance.exit ]
  %17 = phi i64 [ %24, %Lexer_advance.exit49 ], [ 8, %Lexer_advance.exit ]
  %18 = phi i64 [ %25, %Lexer_advance.exit49 ], [ 0, %Lexer_advance.exit ]
  %19 = call fastcc ptr @Lexer_lex_token(ptr nonnull %3)
  %.not.i52 = icmp slt i64 %18, %17
  br i1 %.not.i52, label %Array_Token____sl__.exit55, label %if.entry.i54

if.entry.i54:                                     ; preds = %while.entry
  %20 = shl nuw i64 %17, 1
  store i64 %20, ptr %memberidx1.i57, align 4
  %21 = shl i64 %17, 4
  %22 = call ptr @realloc(ptr %16, i64 %21)
  store ptr %22, ptr %9, align 8
  br label %Array_Token____sl__.exit55

Array_Token____sl__.exit55:                       ; preds = %while.entry, %if.entry.i54
  %23 = phi ptr [ %16, %while.entry ], [ %22, %if.entry.i54 ]
  %24 = phi i64 [ %17, %while.entry ], [ %20, %if.entry.i54 ]
  %25 = add nuw nsw i64 %18, 1
  store i64 %25, ptr %memberidx.i56, align 4
  %26 = getelementptr inbounds ptr, ptr %23, i64 %18
  store ptr %19, ptr %26, align 8
  %27 = load i64, ptr %memberidx2.i, align 4
  %28 = load ptr, ptr %memberidx.i, align 8
  %memberidx2.i.i36 = getelementptr inbounds %String, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx2.i.i36, align 4
  %.not = icmp slt i64 %27, %29
  br i1 %.not, label %end.i41, label %end.i41.thread

end.i41.thread:                                   ; preds = %Array_Token____sl__.exit55
  store i8 0, ptr %3, align 8
  br label %Lexer_advance.exit49

end.i41:                                          ; preds = %Array_Token____sl__.exit55
  %30 = add nsw i64 %27, 1
  store i64 %30, ptr %memberidx2.i, align 4
  %31 = load ptr, ptr %28, align 8
  %32 = getelementptr inbounds i8, ptr %31, i64 %30
  %33 = load i8, ptr %32, align 1
  store i8 %33, ptr %3, align 8
  switch i8 %33, label %if.entry9.i48 [
    i8 10, label %if.entry.i44
    i8 0, label %Lexer_advance.exit49
  ]

if.entry.i44:                                     ; preds = %end.i41
  store i64 0, ptr %memberidx4.i, align 4
  %34 = load i64, ptr %memberidx3.i, align 4
  %35 = add nsw i64 %34, 1
  store i64 %35, ptr %memberidx3.i, align 4
  br label %Lexer_advance.exit49

if.entry9.i48:                                    ; preds = %end.i41
  %36 = load i64, ptr %memberidx4.i, align 4
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit49

Lexer_advance.exit49:                             ; preds = %end.i41.thread, %end.i41, %if.entry.i44, %if.entry9.i48
  %38 = phi i64 [ %27, %end.i41.thread ], [ %30, %end.i41 ], [ %30, %if.entry.i44 ], [ %30, %if.entry9.i48 ]
  %39 = load i64, ptr %memberidx2.i.i36, align 4
  %40 = icmp sge i64 %38, %39
  %41 = load ptr, ptr %memberidx1.i, align 8
  %memberidx5 = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx5, align 4
  %43 = icmp ne i64 %42, 0
  %44 = or i1 %40, %43
  br i1 %44, label %while.end, label %while.entry

while.end:                                        ; preds = %Lexer_advance.exit49, %Lexer_advance.exit
  %45 = phi ptr [ %10, %Lexer_advance.exit ], [ %23, %Lexer_advance.exit49 ]
  %46 = phi i64 [ 8, %Lexer_advance.exit ], [ %24, %Lexer_advance.exit49 ]
  %47 = phi i64 [ 0, %Lexer_advance.exit ], [ %25, %Lexer_advance.exit49 ]
  %48 = tail call ptr @malloc(i32 16)
  %49 = tail call ptr @malloc(i32 32)
  %50 = load i64, ptr %memberidx4.i, align 4
  %51 = load i64, ptr %memberidx3.i, align 4
  %memberidx2.i29 = getelementptr inbounds %FloRange, ptr %49, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %49, i8 0, i64 16, i1 false)
  store i64 %50, ptr %memberidx2.i29, align 4
  %memberidx3.i30 = getelementptr inbounds %FloRange, ptr %49, i64 0, i32 3
  store i64 %51, ptr %memberidx3.i30, align 4
  store i64 46, ptr %48, align 4
  %memberidx1.i27 = getelementptr inbounds %Token, ptr %48, i64 0, i32 1
  store ptr %49, ptr %memberidx1.i27, align 8
  %.not.i = icmp slt i64 %47, %46
  br i1 %.not.i, label %Array_Token____sl__.exit, label %if.entry.i

if.entry.i:                                       ; preds = %while.end
  %52 = shl nuw i64 %46, 1
  store i64 %52, ptr %memberidx1.i57, align 4
  %53 = shl i64 %46, 4
  %54 = call ptr @realloc(ptr %45, i64 %53)
  store ptr %54, ptr %9, align 8
  %.pre = load i64, ptr %memberidx.i56, align 4
  br label %Array_Token____sl__.exit

Array_Token____sl__.exit:                         ; preds = %while.end, %if.entry.i
  %55 = phi ptr [ %45, %while.end ], [ %54, %if.entry.i ]
  %56 = phi i64 [ %47, %while.end ], [ %.pre, %if.entry.i ]
  %57 = add nsw i64 %56, 1
  store i64 %57, ptr %memberidx.i56, align 4
  %58 = getelementptr inbounds ptr, ptr %55, i64 %56
  store ptr %48, ptr %58, align 8
  ret ptr %9
}

define internal fastcc noalias ptr @Lexer_base_int_token(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx2.i.i, align 4
  %.not = icmp slt i64 %3, %5
  br i1 %.not, label %end.i, label %end.i.thread

end.i.thread:                                     ; preds = %2
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit

end.i:                                            ; preds = %2
  %6 = add nsw i64 %3, 1
  store i64 %6, ptr %memberidx.i.i, align 4
  %7 = load ptr, ptr %4, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 %6
  %9 = load i8, ptr %8, align 1
  store i8 %9, ptr %0, align 1
  switch i8 %9, label %if.entry9.i [
    i8 10, label %if.entry.i
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i:                                       ; preds = %end.i
  %memberidx5.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i, align 4
  %memberidx6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %10 = load i64, ptr %memberidx6.i, align 4
  %11 = add nsw i64 %10, 1
  store i64 %11, ptr %memberidx6.i, align 4
  br label %Lexer_advance.exit

if.entry9.i:                                      ; preds = %end.i
  %memberidx12.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %memberidx12.i, align 4
  %13 = add nsw i64 %12, 1
  store i64 %13, ptr %memberidx12.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i, %if.entry9.i
  %14 = phi i64 [ %3, %end.i.thread ], [ %6, %end.i ], [ %6, %if.entry.i ], [ %6, %if.entry9.i ]
  %15 = add nsw i64 %14, 1
  %16 = load i64, ptr %memberidx2.i.i, align 4
  %17 = icmp slt i64 %15, %16
  br i1 %17, label %if.entry.i50, label %Lexer_peek.exit51

if.entry.i50:                                     ; preds = %Lexer_advance.exit
  %18 = load ptr, ptr %4, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 %15
  %20 = load i8, ptr %19, align 1
  br label %Lexer_peek.exit51

Lexer_peek.exit51:                                ; preds = %Lexer_advance.exit, %if.entry.i50
  %common.ret.op.i49 = phi i8 [ %20, %if.entry.i50 ], [ 0, %Lexer_advance.exit ]
  %21 = add i8 %common.ret.op.i49, -97
  %22 = icmp ult i8 %21, 26
  %23 = add i8 %common.ret.op.i49, -32
  %common.ret.op.i59 = select i1 %22, i8 %23, i8 %common.ret.op.i49
  %24 = icmp slt i64 %1, 10
  %25 = icmp sgt i8 %common.ret.op.i59, 47
  %26 = sext i8 %common.ret.op.i59 to i64
  %27 = add nsw i64 %1, 48
  %28 = icmp sge i64 %27, %26
  %29 = and i1 %25, %28
  br i1 %24, label %in_base_range.exit58, label %in_base_range.exit58.thread

in_base_range.exit58:                             ; preds = %Lexer_peek.exit51
  %.not62 = icmp slt i64 %14, %16
  %30 = and i1 %.not62, %29
  br i1 %30, label %while.entry.us.preheader, label %while.end

in_base_range.exit58.thread:                      ; preds = %Lexer_peek.exit51
  %31 = icmp sgt i8 %common.ret.op.i59, 64
  %32 = add nuw nsw i64 %1, 65
  %33 = icmp sge i64 %32, %26
  %34 = and i1 %31, %33
  %35 = or i1 %29, %34
  %.not6275 = icmp slt i64 %14, %16
  %36 = and i1 %.not6275, %35
  br i1 %36, label %while.entry.preheader69, label %while.end

while.entry.preheader69:                          ; preds = %in_base_range.exit58.thread
  %memberidx5.i3176 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i3277 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %37 = add nuw nsw i64 %1, 48
  %38 = add nuw nsw i64 %1, 65
  br label %while.entry

while.entry.us.preheader:                         ; preds = %in_base_range.exit58
  %memberidx5.i31 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i32 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %39 = add nsw i64 %1, 48
  br label %while.entry.us

while.entry.us:                                   ; preds = %while.entry.us.preheader, %Lexer_peek.exit.us
  %40 = phi i64 [ %55, %Lexer_peek.exit.us ], [ %14, %while.entry.us.preheader ]
  %41 = phi i64 [ %57, %Lexer_peek.exit.us ], [ %16, %while.entry.us.preheader ]
  %length.0.us = phi i64 [ %46, %Lexer_peek.exit.us ], [ 3, %while.entry.us.preheader ]
  %current_char.0.us = phi i8 [ %common.ret.op.i17.us, %Lexer_peek.exit.us ], [ %common.ret.op.i59, %while.entry.us.preheader ]
  %value.0.us = phi i64 [ %45, %Lexer_peek.exit.us ], [ 0, %while.entry.us.preheader ]
  %42 = mul nuw i64 %value.0.us, %1
  %43 = icmp ugt i8 %current_char.0.us, 64
  %spec.select.v.us = select i1 %43, i8 -55, i8 -48
  %spec.select.us = add nsw i8 %spec.select.v.us, %current_char.0.us
  %44 = zext i8 %spec.select.us to i64
  %45 = add nuw i64 %42, %44
  %46 = add nuw nsw i64 %length.0.us, 1
  %.not63.us = icmp slt i64 %40, %41
  br i1 %.not63.us, label %end.i30.us, label %end.i30.thread.us

end.i30.thread.us:                                ; preds = %while.entry.us
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit39.us

end.i30.us:                                       ; preds = %while.entry.us
  %47 = add nsw i64 %40, 1
  store i64 %47, ptr %memberidx.i.i, align 4
  %48 = load ptr, ptr %4, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %47
  %50 = load i8, ptr %49, align 1
  store i8 %50, ptr %0, align 1
  switch i8 %50, label %if.entry9.i38.us [
    i8 10, label %if.entry.i33.us
    i8 0, label %Lexer_advance.exit39.us
  ]

if.entry.i33.us:                                  ; preds = %end.i30.us
  store i64 0, ptr %memberidx5.i31, align 4
  %51 = load i64, ptr %memberidx6.i32, align 4
  %52 = add nsw i64 %51, 1
  store i64 %52, ptr %memberidx6.i32, align 4
  br label %Lexer_advance.exit39.us

if.entry9.i38.us:                                 ; preds = %end.i30.us
  %53 = load i64, ptr %memberidx5.i31, align 4
  %54 = add nsw i64 %53, 1
  store i64 %54, ptr %memberidx5.i31, align 4
  br label %Lexer_advance.exit39.us

Lexer_advance.exit39.us:                          ; preds = %if.entry9.i38.us, %if.entry.i33.us, %end.i30.us, %end.i30.thread.us
  %55 = phi i64 [ %47, %if.entry9.i38.us ], [ %47, %if.entry.i33.us ], [ %47, %end.i30.us ], [ %40, %end.i30.thread.us ]
  %56 = add nsw i64 %55, 1
  %57 = load i64, ptr %memberidx2.i.i, align 4
  %58 = icmp slt i64 %56, %57
  br i1 %58, label %if.entry.i22.us, label %Lexer_peek.exit.us

if.entry.i22.us:                                  ; preds = %Lexer_advance.exit39.us
  %59 = load ptr, ptr %4, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 %56
  %61 = load i8, ptr %60, align 1
  br label %Lexer_peek.exit.us

Lexer_peek.exit.us:                               ; preds = %if.entry.i22.us, %Lexer_advance.exit39.us
  %common.ret.op.i21.us = phi i8 [ %61, %if.entry.i22.us ], [ 0, %Lexer_advance.exit39.us ]
  %62 = add i8 %common.ret.op.i21.us, -97
  %63 = icmp ult i8 %62, 26
  %64 = add i8 %common.ret.op.i21.us, -32
  %common.ret.op.i17.us = select i1 %63, i8 %64, i8 %common.ret.op.i21.us
  %65 = icmp sgt i8 %common.ret.op.i17.us, 47
  %66 = sext i8 %common.ret.op.i17.us to i64
  %67 = icmp sge i64 %39, %66
  %68 = and i1 %65, %67
  %.not64.us = icmp slt i64 %55, %57
  %69 = and i1 %.not64.us, %68
  br i1 %69, label %while.entry.us, label %while.end

while.entry:                                      ; preds = %while.entry.preheader69, %Lexer_peek.exit
  %70 = phi i64 [ %94, %Lexer_peek.exit ], [ %14, %while.entry.preheader69 ]
  %71 = phi i64 [ %96, %Lexer_peek.exit ], [ %16, %while.entry.preheader69 ]
  %length.0 = phi i64 [ %76, %Lexer_peek.exit ], [ 3, %while.entry.preheader69 ]
  %current_char.0 = phi i8 [ %common.ret.op.i17, %Lexer_peek.exit ], [ %common.ret.op.i59, %while.entry.preheader69 ]
  %value.0 = phi i64 [ %75, %Lexer_peek.exit ], [ 0, %while.entry.preheader69 ]
  %72 = mul nuw i64 %value.0, %1
  %73 = icmp ugt i8 %current_char.0, 64
  %spec.select.v = select i1 %73, i8 -55, i8 -48
  %spec.select = add nsw i8 %spec.select.v, %current_char.0
  %74 = zext i8 %spec.select to i64
  %75 = add nuw i64 %72, %74
  %76 = add nuw nsw i64 %length.0, 1
  %.not63 = icmp slt i64 %70, %71
  br i1 %.not63, label %end.i30, label %end.i30.thread

end.i30.thread:                                   ; preds = %while.entry
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit39

while.end:                                        ; preds = %Lexer_peek.exit, %Lexer_peek.exit.us, %in_base_range.exit58.thread, %in_base_range.exit58
  %length.1 = phi i64 [ 3, %in_base_range.exit58 ], [ 3, %in_base_range.exit58.thread ], [ %46, %Lexer_peek.exit.us ], [ %76, %Lexer_peek.exit ]
  %value.1 = phi i64 [ 0, %in_base_range.exit58 ], [ 0, %in_base_range.exit58.thread ], [ %45, %Lexer_peek.exit.us ], [ %75, %Lexer_peek.exit ]
  %77 = tail call ptr @malloc(i32 24)
  %78 = tail call ptr @malloc(i32 32)
  %79 = load i64, ptr %memberidx.i.i, align 4
  %80 = sub i64 1, %length.1
  %81 = add i64 %80, %79
  %82 = add nsw i64 %79, 1
  %memberidx2.i43 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %83 = load i64, ptr %memberidx2.i43, align 4
  %84 = sub nuw i64 %83, %length.1
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %85 = load i64, ptr %memberidx3.i, align 4
  store i64 %81, ptr %78, align 4
  %memberidx1.i.i44 = getelementptr inbounds %FloRange, ptr %78, i64 0, i32 1
  store i64 %82, ptr %memberidx1.i.i44, align 4
  %memberidx2.i.i45 = getelementptr inbounds %FloRange, ptr %78, i64 0, i32 2
  store i64 %84, ptr %memberidx2.i.i45, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %78, i64 0, i32 3
  store i64 %85, ptr %memberidx3.i.i, align 4
  store i64 31, ptr %77, align 4
  %memberidx1.i.i40 = getelementptr inbounds %Token, ptr %77, i64 0, i32 1
  store ptr %78, ptr %memberidx1.i.i40, align 8
  %memberidx.i41 = getelementptr inbounds %IntToken, ptr %77, i64 0, i32 2
  store i64 %value.1, ptr %memberidx.i41, align 4
  ret ptr %77

end.i30:                                          ; preds = %while.entry
  %86 = add nsw i64 %70, 1
  store i64 %86, ptr %memberidx.i.i, align 4
  %87 = load ptr, ptr %4, align 8
  %88 = getelementptr inbounds i8, ptr %87, i64 %86
  %89 = load i8, ptr %88, align 1
  store i8 %89, ptr %0, align 1
  switch i8 %89, label %if.entry9.i38 [
    i8 10, label %if.entry.i33
    i8 0, label %Lexer_advance.exit39
  ]

if.entry.i33:                                     ; preds = %end.i30
  store i64 0, ptr %memberidx5.i3176, align 4
  %90 = load i64, ptr %memberidx6.i3277, align 4
  %91 = add nsw i64 %90, 1
  store i64 %91, ptr %memberidx6.i3277, align 4
  br label %Lexer_advance.exit39

if.entry9.i38:                                    ; preds = %end.i30
  %92 = load i64, ptr %memberidx5.i3176, align 4
  %93 = add nsw i64 %92, 1
  store i64 %93, ptr %memberidx5.i3176, align 4
  br label %Lexer_advance.exit39

Lexer_advance.exit39:                             ; preds = %end.i30.thread, %end.i30, %if.entry.i33, %if.entry9.i38
  %94 = phi i64 [ %70, %end.i30.thread ], [ %86, %end.i30 ], [ %86, %if.entry.i33 ], [ %86, %if.entry9.i38 ]
  %95 = add nsw i64 %94, 1
  %96 = load i64, ptr %memberidx2.i.i, align 4
  %97 = icmp slt i64 %95, %96
  br i1 %97, label %if.entry.i22, label %Lexer_peek.exit

if.entry.i22:                                     ; preds = %Lexer_advance.exit39
  %98 = load ptr, ptr %4, align 8
  %99 = getelementptr inbounds i8, ptr %98, i64 %95
  %100 = load i8, ptr %99, align 1
  br label %Lexer_peek.exit

Lexer_peek.exit:                                  ; preds = %Lexer_advance.exit39, %if.entry.i22
  %common.ret.op.i21 = phi i8 [ %100, %if.entry.i22 ], [ 0, %Lexer_advance.exit39 ]
  %101 = add i8 %common.ret.op.i21, -97
  %102 = icmp ult i8 %101, 26
  %103 = add i8 %common.ret.op.i21, -32
  %common.ret.op.i17 = select i1 %102, i8 %103, i8 %common.ret.op.i21
  %104 = icmp sgt i8 %common.ret.op.i17, 47
  %105 = sext i8 %common.ret.op.i17 to i64
  %106 = icmp sge i64 %37, %105
  %107 = and i1 %104, %106
  %108 = icmp sgt i8 %common.ret.op.i17, 64
  %109 = icmp sge i64 %38, %105
  %110 = and i1 %108, %109
  %111 = or i1 %107, %110
  %.not64 = icmp slt i64 %94, %96
  %112 = and i1 %.not64, %111
  br i1 %112, label %while.entry, label %while.end
}

define internal fastcc noalias ptr @Lexer_lex_token(ptr %0) unnamed_addr {
  %2 = load i8, ptr %0, align 1
  switch i8 %2, label %ifend [
    i8 32, label %if.entry
    i8 9, label %if.entry
  ]

common.ret:                                       ; preds = %ifend6.i950, %Lexer_advance.exit53.i942, %ifend3.i918, %Lexer_advance.exit.i880, %ifend6.i849, %Lexer_advance.exit53.i841, %ifend3.i817, %Lexer_advance.exit.i779, %ifend.i748, %Lexer_advance.exit.i740, %ifend.i709, %Lexer_advance.exit.i701, %ifend.i567, %Lexer_advance.exit.i559, %ifend.i478, %Lexer_advance.exit.i470, %ifend.i439, %Lexer_advance.exit.i434, %ifend6.i415, %Lexer_advance.exit53.i407, %ifend3.i383, %Lexer_advance.exit.i350, %ifend6.i, %Lexer_advance.exit53.i, %Lexer_advance.exit88.i, %Lexer_advance.exit.i301, %ifend3.i, %Lexer_advance.exit47.i278, %Lexer_advance.exit.i261, %end.i221, %if.entry6.i, %if.entry2.i193, %if.entry.i191, %ifend4.i, %ifend.i, %Array_FloError____sl__.exit, %if.entry87, %Lexer_dot_token.exit, %if.entry69, %if.entry66, %Lexer_char_token.exit, %if.entry60, %if.entry57, %if.entry54, %if.entry51, %if.entry48, %if.entry45, %if.entry42, %Lexer_advance.exit526, %if.entry18, %if.entry15, %if.entry12, %Lexer_string_token.exit, %Lexer_advance.exit
  %common.ret.op = phi ptr [ %14, %Lexer_advance.exit ], [ %444, %Lexer_string_token.exit ], [ %523, %if.entry12 ], [ %530, %if.entry15 ], [ %537, %if.entry18 ], [ %859, %Lexer_advance.exit526 ], [ %882, %if.entry42 ], [ %889, %if.entry45 ], [ %896, %if.entry48 ], [ %903, %if.entry51 ], [ %910, %if.entry54 ], [ %917, %if.entry57 ], [ %924, %if.entry60 ], [ %962, %Lexer_char_token.exit ], [ %971, %if.entry66 ], [ %978, %if.entry69 ], [ %1174, %Lexer_dot_token.exit ], [ %1183, %if.entry87 ], [ null, %Array_FloError____sl__.exit ], [ %178, %ifend.i ], [ %179, %ifend4.i ], [ %457, %if.entry.i191 ], [ %459, %if.entry2.i193 ], [ %461, %if.entry6.i ], [ %494, %end.i221 ], [ %557, %Lexer_advance.exit.i261 ], [ %578, %ifend3.i ], [ %570, %Lexer_advance.exit47.i278 ], [ %598, %Lexer_advance.exit.i301 ], [ %634, %ifend6.i ], [ %611, %Lexer_advance.exit88.i ], [ %626, %Lexer_advance.exit53.i ], [ %655, %Lexer_advance.exit.i350 ], [ %674, %ifend3.i383 ], [ %686, %Lexer_advance.exit53.i407 ], [ %694, %ifend6.i415 ], [ %715, %Lexer_advance.exit.i434 ], [ %723, %ifend.i439 ], [ %743, %Lexer_advance.exit.i470 ], [ %751, %ifend.i478 ], [ %867, %Lexer_advance.exit.i559 ], [ %875, %ifend.i567 ], [ %998, %Lexer_advance.exit.i701 ], [ %1006, %ifend.i709 ], [ %1026, %Lexer_advance.exit.i740 ], [ %1034, %ifend.i748 ], [ %1054, %Lexer_advance.exit.i779 ], [ %1073, %ifend3.i817 ], [ %1085, %Lexer_advance.exit53.i841 ], [ %1093, %ifend6.i849 ], [ %1114, %Lexer_advance.exit.i880 ], [ %1133, %ifend3.i918 ], [ %1145, %Lexer_advance.exit53.i942 ], [ %1153, %ifend6.i950 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1, %1
  %memberidx.i.i166 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i166, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx2.i.i, align 4
  %.not1179 = icmp slt i64 %3, %5
  br i1 %.not1179, label %end.i, label %end.i.thread

end.i.thread:                                     ; preds = %if.entry
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit

end.i:                                            ; preds = %if.entry
  %6 = add nsw i64 %3, 1
  store i64 %6, ptr %memberidx.i.i166, align 4
  %7 = load ptr, ptr %4, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 %6
  %9 = load i8, ptr %8, align 1
  store i8 %9, ptr %0, align 1
  switch i8 %9, label %if.entry9.i [
    i8 10, label %if.entry.i168
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i168:                                    ; preds = %end.i
  %memberidx5.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i, align 4
  %memberidx6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %10 = load i64, ptr %memberidx6.i, align 4
  %11 = add nsw i64 %10, 1
  store i64 %11, ptr %memberidx6.i, align 4
  br label %Lexer_advance.exit

if.entry9.i:                                      ; preds = %end.i
  %memberidx12.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %memberidx12.i, align 4
  %13 = add nsw i64 %12, 1
  store i64 %13, ptr %memberidx12.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i168, %if.entry9.i
  %14 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

ifend:                                            ; preds = %1
  %15 = and i8 %2, -33
  %16 = add i8 %15, -65
  %17 = icmp ult i8 %16, 26
  %18 = icmp eq i8 %2, 95
  %19 = or i1 %18, %17
  br i1 %19, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %memberidx.i172 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %20 = load i64, ptr %memberidx.i172, align 4
  %21 = add nsw i64 %20, 1
  %memberidx1.i.i174 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %22 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx2.i.i175 = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx2.i.i175, align 4
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %if.entry.i64.i, label %Lexer_peek.exit65.i

if.entry.i64.i:                                   ; preds = %if.entry3
  %25 = load ptr, ptr %22, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 %21
  %27 = load i8, ptr %26, align 1
  br label %Lexer_peek.exit65.i

Lexer_peek.exit65.i:                              ; preds = %if.entry.i64.i, %if.entry3
  %common.ret.op.i63.i = phi i8 [ %27, %if.entry.i64.i ], [ 0, %if.entry3 ]
  %28 = and i8 %common.ret.op.i63.i, -33
  %29 = add i8 %28, -65
  %30 = icmp ult i8 %29, 26
  %31 = icmp eq i8 %common.ret.op.i63.i, 95
  %32 = or i1 %31, %30
  %33 = add i8 %common.ret.op.i63.i, -48
  %34 = icmp ult i8 %33, 10
  %35 = or i1 %34, %32
  %.not1173 = icmp slt i64 %20, %23
  %36 = and i1 %.not1173, %35
  br i1 %36, label %while.entry.i.preheader, label %while.end.i

while.entry.i.preheader:                          ; preds = %Lexer_peek.exit65.i
  %memberidx5.i77.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i78.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Lexer_peek.exit91.i
  %37 = phi i64 [ %48, %Lexer_peek.exit91.i ], [ %20, %while.entry.i.preheader ]
  %38 = phi i64 [ %50, %Lexer_peek.exit91.i ], [ %23, %while.entry.i.preheader ]
  %length.0.i = phi i64 [ %39, %Lexer_peek.exit91.i ], [ 1, %while.entry.i.preheader ]
  %39 = add nuw nsw i64 %length.0.i, 1
  %.not1177 = icmp slt i64 %37, %38
  br i1 %.not1177, label %end.i76.i, label %end.i76.i.thread

end.i76.i.thread:                                 ; preds = %while.entry.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit85.i

end.i76.i:                                        ; preds = %while.entry.i
  %40 = add nsw i64 %37, 1
  store i64 %40, ptr %memberidx.i172, align 4
  %41 = load ptr, ptr %22, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %40
  %43 = load i8, ptr %42, align 1
  store i8 %43, ptr %0, align 1
  switch i8 %43, label %if.entry9.i84.i [
    i8 10, label %if.entry.i79.i
    i8 0, label %Lexer_advance.exit85.i
  ]

if.entry.i79.i:                                   ; preds = %end.i76.i
  store i64 0, ptr %memberidx5.i77.i, align 4
  %44 = load i64, ptr %memberidx6.i78.i, align 4
  %45 = add nsw i64 %44, 1
  store i64 %45, ptr %memberidx6.i78.i, align 4
  br label %Lexer_advance.exit85.i

if.entry9.i84.i:                                  ; preds = %end.i76.i
  %46 = load i64, ptr %memberidx5.i77.i, align 4
  %47 = add nsw i64 %46, 1
  store i64 %47, ptr %memberidx5.i77.i, align 4
  br label %Lexer_advance.exit85.i

Lexer_advance.exit85.i:                           ; preds = %end.i76.i.thread, %end.i76.i, %if.entry9.i84.i, %if.entry.i79.i
  %48 = phi i64 [ %37, %end.i76.i.thread ], [ %40, %end.i76.i ], [ %40, %if.entry9.i84.i ], [ %40, %if.entry.i79.i ]
  %49 = add nsw i64 %48, 1
  %50 = load i64, ptr %memberidx2.i.i175, align 4
  %51 = icmp slt i64 %49, %50
  br i1 %51, label %if.entry.i90.i, label %Lexer_peek.exit91.i

if.entry.i90.i:                                   ; preds = %Lexer_advance.exit85.i
  %52 = load ptr, ptr %22, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 %49
  %54 = load i8, ptr %53, align 1
  br label %Lexer_peek.exit91.i

Lexer_peek.exit91.i:                              ; preds = %if.entry.i90.i, %Lexer_advance.exit85.i
  %common.ret.op.i89.i = phi i8 [ %54, %if.entry.i90.i ], [ 0, %Lexer_advance.exit85.i ]
  %55 = and i8 %common.ret.op.i89.i, -33
  %56 = add i8 %55, -65
  %57 = icmp ult i8 %56, 26
  %58 = icmp eq i8 %common.ret.op.i89.i, 95
  %59 = or i1 %58, %57
  %60 = add i8 %common.ret.op.i89.i, -48
  %61 = icmp ult i8 %60, 10
  %62 = or i1 %61, %59
  %.not1178 = icmp slt i64 %48, %50
  %63 = and i1 %.not1178, %62
  br i1 %63, label %while.entry.i, label %while.end.i

while.end.i:                                      ; preds = %Lexer_peek.exit91.i, %Lexer_peek.exit65.i
  %64 = phi i64 [ 1, %Lexer_peek.exit65.i ], [ %39, %Lexer_peek.exit91.i ]
  %65 = trunc i64 %64 to i32
  %66 = tail call ptr @malloc(i32 %65)
  %67 = load ptr, ptr %22, align 8
  %68 = getelementptr inbounds i8, ptr %67, i64 %20
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %66, ptr align 2147483648 %68, i64 %64, i1 false)
  %69 = tail call ptr @malloc(i32 24)
  store ptr %66, ptr %69, align 8
  %memberidx1.i.i95.i = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  store i64 %64, ptr %memberidx1.i.i95.i, align 4
  %memberidx2.i.i96.i = getelementptr inbounds %String, ptr %69, i64 0, i32 2
  store i64 %64, ptr %memberidx2.i.i96.i, align 4
  %70 = tail call ptr @malloc(i32 32)
  %71 = load i64, ptr %memberidx.i172, align 4
  %72 = sub i64 1, %64
  %73 = add i64 %72, %71
  %74 = add nsw i64 %71, 1
  %memberidx2.i98.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %75 = load i64, ptr %memberidx2.i98.i, align 4
  %76 = sub nuw i64 %75, %64
  %memberidx3.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %77 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %73, ptr %70, align 4
  %memberidx1.i.i99.i = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 1
  store i64 %74, ptr %memberidx1.i.i99.i, align 4
  %memberidx2.i.i100.i = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 2
  store i64 %76, ptr %memberidx2.i.i100.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 3
  store i64 %77, ptr %memberidx3.i.i.i, align 4
  %78 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %78, ptr noundef nonnull align 8 dereferenceable(3) @41, i64 3, i1 false)
  %79 = tail call ptr @malloc(i32 24)
  store ptr %78, ptr %79, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %String, ptr %79, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i.i.i, align 4
  %.not.i.i.i = icmp eq i64 %64, 3
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %ifend.i.i

ifend.i.i.i:                                      ; preds = %while.end.i
  %80 = tail call i64 @memcmp(ptr %66, ptr nonnull %78, i64 3)
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %if.entry.i178, label %ifend.i.i

ifend.i.i:                                        ; preds = %while.end.i, %ifend.i.i.i
  %82 = tail call ptr @malloc(i32 2)
  store i16 29295, ptr %82, align 8
  %83 = tail call ptr @malloc(i32 24)
  store ptr %82, ptr %83, align 8
  %memberidx1.i.i89.i.i = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i89.i.i, align 4
  %memberidx2.i.i90.i.i = getelementptr inbounds %String, ptr %83, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i90.i.i, align 4
  %.not.i93.i.i = icmp eq i64 %64, 2
  br i1 %.not.i93.i.i, label %ifend.i95.i.i, label %ifend3.i.i

ifend.i95.i.i:                                    ; preds = %ifend.i.i
  %84 = tail call i64 @memcmp(ptr %66, ptr nonnull %82, i64 2)
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %if.entry.i178, label %ifend3.i.i

ifend3.i.i:                                       ; preds = %ifend.i.i, %ifend.i95.i.i
  %86 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %86, ptr noundef nonnull align 8 dereferenceable(5) @42, i64 5, i1 false)
  %87 = tail call ptr @malloc(i32 24)
  store ptr %86, ptr %87, align 8
  %memberidx1.i.i97.i.i = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i97.i.i, align 4
  %memberidx2.i.i98.i.i = getelementptr inbounds %String, ptr %87, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i98.i.i, align 4
  %.not.i101.i.i = icmp eq i64 %64, 5
  br i1 %.not.i101.i.i, label %ifend.i103.i.i, label %ifend6.i.i

ifend.i103.i.i:                                   ; preds = %ifend3.i.i
  %88 = tail call i64 @memcmp(ptr %66, ptr nonnull %86, i64 5)
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %if.entry.i178, label %ifend6.i.i

ifend6.i.i:                                       ; preds = %ifend3.i.i, %ifend.i103.i.i
  %90 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %90, ptr noundef nonnull align 8 dereferenceable(3) @43, i64 3, i1 false)
  %91 = tail call ptr @malloc(i32 24)
  store ptr %90, ptr %91, align 8
  %memberidx1.i.i105.i.i = getelementptr inbounds %String, ptr %91, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i105.i.i, align 4
  %memberidx2.i.i106.i.i = getelementptr inbounds %String, ptr %91, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i106.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i111.i.i, label %ifend9.i.i

ifend.i111.i.i:                                   ; preds = %ifend6.i.i
  %92 = tail call i64 @memcmp(ptr %66, ptr nonnull %90, i64 3)
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %if.entry.i178, label %ifend9.i.i

ifend9.i.i:                                       ; preds = %ifend6.i.i, %ifend.i111.i.i
  %94 = tail call ptr @malloc(i32 2)
  store i16 26217, ptr %94, align 8
  %95 = tail call ptr @malloc(i32 24)
  store ptr %94, ptr %95, align 8
  %memberidx1.i.i113.i.i = getelementptr inbounds %String, ptr %95, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i113.i.i, align 4
  %memberidx2.i.i114.i.i = getelementptr inbounds %String, ptr %95, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i114.i.i, align 4
  br i1 %.not.i93.i.i, label %ifend.i119.i.i, label %ifend12.i.i

ifend.i119.i.i:                                   ; preds = %ifend9.i.i
  %96 = tail call i64 @memcmp(ptr %66, ptr nonnull %94, i64 2)
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %if.entry.i178, label %ifend12.i.i

ifend12.i.i:                                      ; preds = %ifend9.i.i, %ifend.i119.i.i
  %98 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %98, ptr noundef nonnull align 8 dereferenceable(5) @44, i64 5, i1 false)
  %99 = tail call ptr @malloc(i32 24)
  store ptr %98, ptr %99, align 8
  %memberidx1.i.i121.i.i = getelementptr inbounds %String, ptr %99, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i121.i.i, align 4
  %memberidx2.i.i122.i.i = getelementptr inbounds %String, ptr %99, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i122.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i127.i.i, label %ifend15.i.i

ifend.i127.i.i:                                   ; preds = %ifend12.i.i
  %100 = tail call i64 @memcmp(ptr %66, ptr nonnull %98, i64 5)
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %if.entry.i178, label %ifend15.i.i

ifend15.i.i:                                      ; preds = %ifend12.i.i, %ifend.i127.i.i
  %102 = tail call ptr @malloc(i32 4)
  store i32 1702063205, ptr %102, align 8
  %103 = tail call ptr @malloc(i32 24)
  store ptr %102, ptr %103, align 8
  %memberidx1.i.i129.i.i = getelementptr inbounds %String, ptr %103, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i129.i.i, align 4
  %memberidx2.i.i130.i.i = getelementptr inbounds %String, ptr %103, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i130.i.i, align 4
  %.not.i133.i.i = icmp eq i64 %64, 4
  br i1 %.not.i133.i.i, label %ifend.i135.i.i, label %ifend18.i.i

ifend.i135.i.i:                                   ; preds = %ifend15.i.i
  %104 = tail call i64 @memcmp(ptr %66, ptr nonnull %102, i64 4)
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %if.entry.i178, label %ifend18.i.i

ifend18.i.i:                                      ; preds = %ifend15.i.i, %ifend.i135.i.i
  %106 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %106, ptr noundef nonnull align 8 dereferenceable(3) @46, i64 3, i1 false)
  %107 = tail call ptr @malloc(i32 24)
  store ptr %106, ptr %107, align 8
  %memberidx1.i.i137.i.i = getelementptr inbounds %String, ptr %107, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i137.i.i, align 4
  %memberidx2.i.i138.i.i = getelementptr inbounds %String, ptr %107, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i138.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i143.i.i, label %ifend21.i.i

ifend.i143.i.i:                                   ; preds = %ifend18.i.i
  %108 = tail call i64 @memcmp(ptr %66, ptr nonnull %106, i64 3)
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %if.entry.i178, label %ifend21.i.i

ifend21.i.i:                                      ; preds = %ifend18.i.i, %ifend.i143.i.i
  %110 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %110, ptr noundef nonnull align 8 dereferenceable(5) @47, i64 5, i1 false)
  %111 = tail call ptr @malloc(i32 24)
  store ptr %110, ptr %111, align 8
  %memberidx1.i.i145.i.i = getelementptr inbounds %String, ptr %111, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i145.i.i, align 4
  %memberidx2.i.i146.i.i = getelementptr inbounds %String, ptr %111, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i146.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i151.i.i, label %ifend24.i.i

ifend.i151.i.i:                                   ; preds = %ifend21.i.i
  %112 = tail call i64 @memcmp(ptr %66, ptr nonnull %110, i64 5)
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %if.entry.i178, label %ifend24.i.i

ifend24.i.i:                                      ; preds = %ifend21.i.i, %ifend.i151.i.i
  %114 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %114, ptr noundef nonnull align 8 dereferenceable(3) @48, i64 3, i1 false)
  %115 = tail call ptr @malloc(i32 24)
  store ptr %114, ptr %115, align 8
  %memberidx1.i.i153.i.i = getelementptr inbounds %String, ptr %115, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i153.i.i, align 4
  %memberidx2.i.i154.i.i = getelementptr inbounds %String, ptr %115, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i154.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i159.i.i, label %ifend27.i.i

ifend.i159.i.i:                                   ; preds = %ifend24.i.i
  %116 = tail call i64 @memcmp(ptr %66, ptr nonnull %114, i64 3)
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %if.entry.i178, label %ifend27.i.i

ifend27.i.i:                                      ; preds = %ifend24.i.i, %ifend.i159.i.i
  %118 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %118, ptr noundef nonnull align 8 dereferenceable(5) @49, i64 5, i1 false)
  %119 = tail call ptr @malloc(i32 24)
  store ptr %118, ptr %119, align 8
  %memberidx1.i.i161.i.i = getelementptr inbounds %String, ptr %119, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i161.i.i, align 4
  %memberidx2.i.i162.i.i = getelementptr inbounds %String, ptr %119, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i162.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i167.i.i, label %ifend30.i.i

ifend.i167.i.i:                                   ; preds = %ifend27.i.i
  %120 = tail call i64 @memcmp(ptr %66, ptr nonnull %118, i64 5)
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %if.entry.i178, label %ifend30.i.i

ifend30.i.i:                                      ; preds = %ifend27.i.i, %ifend.i167.i.i
  %122 = tail call ptr @malloc(i32 8)
  store i64 7310870969309884259, ptr %122, align 8
  %123 = tail call ptr @malloc(i32 24)
  store ptr %122, ptr %123, align 8
  %memberidx1.i.i169.i.i = getelementptr inbounds %String, ptr %123, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i169.i.i, align 4
  %memberidx2.i.i170.i.i = getelementptr inbounds %String, ptr %123, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i170.i.i, align 4
  %.not.i173.i.i = icmp eq i64 %64, 8
  br i1 %.not.i173.i.i, label %ifend.i175.i.i, label %ifend33.i.i

ifend.i175.i.i:                                   ; preds = %ifend30.i.i
  %124 = tail call i64 @memcmp(ptr %66, ptr nonnull %122, i64 8)
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %if.entry.i178, label %ifend33.i.i

ifend33.i.i:                                      ; preds = %ifend30.i.i, %ifend.i175.i.i
  %126 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %126, ptr noundef nonnull align 8 dereferenceable(6) @50, i64 6, i1 false)
  %127 = tail call ptr @malloc(i32 24)
  store ptr %126, ptr %127, align 8
  %memberidx1.i.i177.i.i = getelementptr inbounds %String, ptr %127, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i177.i.i, align 4
  %memberidx2.i.i178.i.i = getelementptr inbounds %String, ptr %127, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i178.i.i, align 4
  %.not.i181.i.i = icmp eq i64 %64, 6
  br i1 %.not.i181.i.i, label %ifend.i183.i.i, label %ifend36.i.i

ifend.i183.i.i:                                   ; preds = %ifend33.i.i
  %128 = tail call i64 @memcmp(ptr %66, ptr nonnull %126, i64 6)
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %if.entry.i178, label %ifend36.i.i

ifend36.i.i:                                      ; preds = %ifend33.i.i, %ifend.i183.i.i
  %130 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %130, ptr noundef nonnull align 8 dereferenceable(6) @51, i64 6, i1 false)
  %131 = tail call ptr @malloc(i32 24)
  store ptr %130, ptr %131, align 8
  %memberidx1.i.i185.i.i = getelementptr inbounds %String, ptr %131, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i185.i.i, align 4
  %memberidx2.i.i186.i.i = getelementptr inbounds %String, ptr %131, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i186.i.i, align 4
  br i1 %.not.i181.i.i, label %ifend.i191.i.i, label %ifend39.i.i

ifend.i191.i.i:                                   ; preds = %ifend36.i.i
  %132 = tail call i64 @memcmp(ptr %66, ptr nonnull %130, i64 6)
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %if.entry.i178, label %ifend39.i.i

ifend39.i.i:                                      ; preds = %ifend36.i.i, %ifend.i191.i.i
  %134 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %134, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  %135 = tail call ptr @malloc(i32 24)
  store ptr %134, ptr %135, align 8
  %memberidx1.i.i193.i.i = getelementptr inbounds %String, ptr %135, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i193.i.i, align 4
  %memberidx2.i.i194.i.i = getelementptr inbounds %String, ptr %135, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i194.i.i, align 4
  %.not.i197.i.i = icmp eq i64 %64, 7
  br i1 %.not.i197.i.i, label %ifend.i199.i.i, label %ifend42.i.i

ifend.i199.i.i:                                   ; preds = %ifend39.i.i
  %136 = tail call i64 @memcmp(ptr %66, ptr nonnull %134, i64 7)
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %if.entry.i178, label %ifend42.i.i

ifend42.i.i:                                      ; preds = %ifend39.i.i, %ifend.i199.i.i
  %138 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %138, ptr noundef nonnull align 8 dereferenceable(6) @53, i64 6, i1 false)
  %139 = tail call ptr @malloc(i32 24)
  store ptr %138, ptr %139, align 8
  %memberidx1.i.i201.i.i = getelementptr inbounds %String, ptr %139, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i201.i.i, align 4
  %memberidx2.i.i202.i.i = getelementptr inbounds %String, ptr %139, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i202.i.i, align 4
  br i1 %.not.i181.i.i, label %ifend.i207.i.i, label %ifend45.i.i

ifend.i207.i.i:                                   ; preds = %ifend42.i.i
  %140 = tail call i64 @memcmp(ptr %66, ptr nonnull %138, i64 6)
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %if.entry.i178, label %ifend45.i.i

ifend45.i.i:                                      ; preds = %ifend42.i.i, %ifend.i207.i.i
  %142 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %142, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  %143 = tail call ptr @malloc(i32 24)
  store ptr %142, ptr %143, align 8
  %memberidx1.i.i209.i.i = getelementptr inbounds %String, ptr %143, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i209.i.i, align 4
  %memberidx2.i.i210.i.i = getelementptr inbounds %String, ptr %143, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i210.i.i, align 4
  %.not.i213.i.i = icmp eq i64 %64, 9
  br i1 %.not.i213.i.i, label %ifend.i215.i.i, label %ifend48.i.i

ifend.i215.i.i:                                   ; preds = %ifend45.i.i
  %144 = tail call i64 @memcmp(ptr %66, ptr nonnull %142, i64 9)
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %if.entry.i178, label %ifend48.i.i

ifend48.i.i:                                      ; preds = %ifend45.i.i, %ifend.i215.i.i
  %146 = tail call ptr @malloc(i32 2)
  store i16 28265, ptr %146, align 8
  %147 = tail call ptr @malloc(i32 24)
  store ptr %146, ptr %147, align 8
  %memberidx1.i.i217.i.i = getelementptr inbounds %String, ptr %147, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i217.i.i, align 4
  %memberidx2.i.i218.i.i = getelementptr inbounds %String, ptr %147, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i218.i.i, align 4
  br i1 %.not.i93.i.i, label %ifend.i223.i.i, label %ifend51.i.i

ifend.i223.i.i:                                   ; preds = %ifend48.i.i
  %148 = tail call i64 @memcmp(ptr %66, ptr nonnull %146, i64 2)
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %if.entry.i178, label %ifend51.i.i

ifend51.i.i:                                      ; preds = %ifend48.i.i, %ifend.i223.i.i
  %150 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %150, ptr noundef nonnull align 8 dereferenceable(5) @55, i64 5, i1 false)
  %151 = tail call ptr @malloc(i32 24)
  store ptr %150, ptr %151, align 8
  %memberidx1.i.i225.i.i = getelementptr inbounds %String, ptr %151, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i225.i.i, align 4
  %memberidx2.i.i226.i.i = getelementptr inbounds %String, ptr %151, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i226.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i231.i.i, label %ifend54.i.i

ifend.i231.i.i:                                   ; preds = %ifend51.i.i
  %152 = tail call i64 @memcmp(ptr %66, ptr nonnull %150, i64 5)
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %if.entry.i178, label %ifend54.i.i

ifend54.i.i:                                      ; preds = %ifend51.i.i, %ifend.i231.i.i
  %154 = tail call ptr @malloc(i32 4)
  store i32 1836412517, ptr %154, align 8
  %155 = tail call ptr @malloc(i32 24)
  store ptr %154, ptr %155, align 8
  %memberidx1.i.i233.i.i = getelementptr inbounds %String, ptr %155, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i233.i.i, align 4
  %memberidx2.i.i234.i.i = getelementptr inbounds %String, ptr %155, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i234.i.i, align 4
  br i1 %.not.i133.i.i, label %ifend.i239.i.i, label %ifend57.i.i

ifend.i239.i.i:                                   ; preds = %ifend54.i.i
  %156 = tail call i64 @memcmp(ptr %66, ptr nonnull %154, i64 4)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %if.entry.i178, label %ifend57.i.i

ifend57.i.i:                                      ; preds = %ifend54.i.i, %ifend.i239.i.i
  %158 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %158, ptr noundef nonnull align 8 dereferenceable(3) @56, i64 3, i1 false)
  %159 = tail call ptr @malloc(i32 24)
  store ptr %158, ptr %159, align 8
  %memberidx1.i.i241.i.i = getelementptr inbounds %String, ptr %159, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i241.i.i, align 4
  %memberidx2.i.i242.i.i = getelementptr inbounds %String, ptr %159, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i242.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i247.i.i, label %ifend60.i.i

ifend.i247.i.i:                                   ; preds = %ifend57.i.i
  %160 = tail call i64 @memcmp(ptr %66, ptr nonnull %158, i64 3)
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %if.entry.i178, label %ifend60.i.i

ifend60.i.i:                                      ; preds = %ifend57.i.i, %ifend.i247.i.i
  %162 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %162, ptr noundef nonnull align 8 dereferenceable(3) @57, i64 3, i1 false)
  %163 = tail call ptr @malloc(i32 24)
  store ptr %162, ptr %163, align 8
  %memberidx1.i.i249.i.i = getelementptr inbounds %String, ptr %163, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i249.i.i, align 4
  %memberidx2.i.i250.i.i = getelementptr inbounds %String, ptr %163, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i250.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i255.i.i, label %ifend63.i.i

ifend.i255.i.i:                                   ; preds = %ifend60.i.i
  %164 = tail call i64 @memcmp(ptr %66, ptr nonnull %162, i64 3)
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %if.entry.i178, label %ifend63.i.i

ifend63.i.i:                                      ; preds = %ifend60.i.i, %ifend.i255.i.i
  %166 = tail call ptr @malloc(i32 2)
  store i16 29537, ptr %166, align 8
  %167 = tail call ptr @malloc(i32 24)
  store ptr %166, ptr %167, align 8
  %memberidx1.i.i257.i.i = getelementptr inbounds %String, ptr %167, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i257.i.i, align 4
  %memberidx2.i.i258.i.i = getelementptr inbounds %String, ptr %167, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i258.i.i, align 4
  br i1 %.not.i93.i.i, label %ifend.i263.i.i, label %ifend.i

ifend.i263.i.i:                                   ; preds = %ifend63.i.i
  %168 = tail call i64 @memcmp(ptr %66, ptr nonnull %166, i64 2)
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %if.entry.i178, label %ifend.i

if.entry.i178:                                    ; preds = %ifend.i263.i.i, %ifend.i.i.i, %ifend.i95.i.i, %ifend.i103.i.i, %ifend.i111.i.i, %ifend.i119.i.i, %ifend.i127.i.i, %ifend.i135.i.i, %ifend.i143.i.i, %ifend.i151.i.i, %ifend.i159.i.i, %ifend.i167.i.i, %ifend.i175.i.i, %ifend.i183.i.i, %ifend.i191.i.i, %ifend.i199.i.i, %ifend.i207.i.i, %ifend.i215.i.i, %ifend.i223.i.i, %ifend.i231.i.i, %ifend.i239.i.i, %ifend.i247.i.i, %ifend.i255.i.i
  %common.ret.op.i59.i.ph = phi i64 [ 73, %ifend.i255.i.i ], [ 72, %ifend.i247.i.i ], [ 71, %ifend.i239.i.i ], [ 70, %ifend.i231.i.i ], [ 69, %ifend.i223.i.i ], [ 68, %ifend.i215.i.i ], [ 67, %ifend.i207.i.i ], [ 66, %ifend.i199.i.i ], [ 65, %ifend.i191.i.i ], [ 64, %ifend.i183.i.i ], [ 63, %ifend.i175.i.i ], [ 62, %ifend.i167.i.i ], [ 61, %ifend.i159.i.i ], [ 60, %ifend.i151.i.i ], [ 59, %ifend.i143.i.i ], [ 58, %ifend.i135.i.i ], [ 57, %ifend.i127.i.i ], [ 56, %ifend.i119.i.i ], [ 55, %ifend.i111.i.i ], [ 54, %ifend.i103.i.i ], [ 9, %ifend.i95.i.i ], [ 8, %ifend.i.i.i ], [ 74, %ifend.i263.i.i ]
  %170 = load i64, ptr %memberidx.i172, align 4
  %171 = add nsw i64 %170, 1
  %172 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx2.i53.i = getelementptr inbounds %String, ptr %172, i64 0, i32 1
  %173 = load i64, ptr %memberidx2.i53.i, align 4
  %174 = icmp slt i64 %171, %173
  br i1 %174, label %if.entry.i55.i, label %ifend4.i

if.entry.i55.i:                                   ; preds = %if.entry.i178
  %175 = load ptr, ptr %172, align 8
  %176 = getelementptr inbounds i8, ptr %175, i64 %171
  %177 = load i8, ptr %176, align 1
  %phi.cmp1174 = icmp eq i8 %177, 61
  br i1 %phi.cmp1174, label %if.entry2.i, label %ifend4.i

ifend.i:                                          ; preds = %ifend63.i.i, %ifend.i263.i.i
  %178 = tail call ptr @malloc(i32 24)
  store i64 53, ptr %178, align 4
  %memberidx1.i.i49.i = getelementptr inbounds %Token, ptr %178, i64 0, i32 1
  store ptr %70, ptr %memberidx1.i.i49.i, align 8
  %memberidx.i50.i = getelementptr inbounds %IdentifierToken, ptr %178, i64 0, i32 2
  store ptr %69, ptr %memberidx.i50.i, align 8
  br label %common.ret

if.entry2.i:                                      ; preds = %if.entry.i55.i
  %trunc = trunc i64 %common.ret.op.i59.i.ph to i7
  switch i7 %trunc, label %ifend4.i [
    i7 8, label %end.i39.i
    i7 9, label %if.entry8.i
  ]

ifend4.i:                                         ; preds = %if.entry2.i, %if.entry.i42.i, %if.entry9.i46.i, %end.i39.i, %end.i.i.thread, %if.entry.i31.i, %if.entry9.i.i, %end.i.i, %if.entry.i178, %if.entry.i55.i
  %keyword.0.i = phi i64 [ %common.ret.op.i59.i.ph, %if.entry.i55.i ], [ %common.ret.op.i59.i.ph, %if.entry.i178 ], [ 19, %end.i.i ], [ 19, %if.entry9.i.i ], [ 19, %if.entry.i31.i ], [ 19, %end.i.i.thread ], [ 18, %end.i39.i ], [ 18, %if.entry9.i46.i ], [ 18, %if.entry.i42.i ], [ %common.ret.op.i59.i.ph, %if.entry2.i ]
  %179 = tail call ptr @malloc(i32 16)
  store i64 %keyword.0.i, ptr %179, align 4
  %memberidx1.i48.i = getelementptr inbounds %Token, ptr %179, i64 0, i32 1
  store ptr %70, ptr %memberidx1.i48.i, align 8
  br label %common.ret

end.i39.i:                                        ; preds = %if.entry2.i
  store i64 %171, ptr %memberidx.i172, align 4
  %180 = load ptr, ptr %172, align 8
  %181 = getelementptr inbounds i8, ptr %180, i64 %171
  %182 = load i8, ptr %181, align 1
  store i8 %182, ptr %0, align 1
  switch i8 %182, label %if.entry9.i46.i [
    i8 10, label %if.entry.i42.i
    i8 0, label %ifend4.i
  ]

if.entry.i42.i:                                   ; preds = %end.i39.i
  store i64 0, ptr %memberidx2.i98.i, align 4
  %183 = load i64, ptr %memberidx3.i.i, align 4
  %184 = add nsw i64 %183, 1
  store i64 %184, ptr %memberidx3.i.i, align 4
  br label %ifend4.i

if.entry9.i46.i:                                  ; preds = %end.i39.i
  %185 = load i64, ptr %memberidx2.i98.i, align 4
  %186 = add nsw i64 %185, 1
  store i64 %186, ptr %memberidx2.i98.i, align 4
  br label %ifend4.i

if.entry8.i:                                      ; preds = %if.entry2.i
  %.not1175 = icmp slt i64 %170, %173
  br i1 %.not1175, label %end.i.i, label %end.i.i.thread

end.i.i.thread:                                   ; preds = %if.entry8.i
  store i8 0, ptr %0, align 1
  br label %ifend4.i

end.i.i:                                          ; preds = %if.entry8.i
  store i64 %171, ptr %memberidx.i172, align 4
  %187 = load ptr, ptr %172, align 8
  %188 = getelementptr inbounds i8, ptr %187, i64 %171
  %189 = load i8, ptr %188, align 1
  store i8 %189, ptr %0, align 1
  switch i8 %189, label %if.entry9.i.i [
    i8 10, label %if.entry.i31.i
    i8 0, label %ifend4.i
  ]

if.entry.i31.i:                                   ; preds = %end.i.i
  store i64 0, ptr %memberidx2.i98.i, align 4
  %190 = load i64, ptr %memberidx3.i.i, align 4
  %191 = add nsw i64 %190, 1
  store i64 %191, ptr %memberidx3.i.i, align 4
  br label %ifend4.i

if.entry9.i.i:                                    ; preds = %end.i.i
  %192 = load i64, ptr %memberidx2.i98.i, align 4
  %193 = add nsw i64 %192, 1
  store i64 %193, ptr %memberidx2.i98.i, align 4
  br label %ifend4.i

ifend5:                                           ; preds = %ifend
  %194 = icmp eq i8 %2, 34
  br i1 %194, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend5
  %195 = tail call ptr @malloc(i32 24)
  %memberidx.i.i993 = getelementptr inbounds %Array_Array_Token__, ptr %195, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i993, align 4
  %memberidx1.i.i994 = getelementptr inbounds %Array_Array_Token__, ptr %195, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i994, align 4
  %196 = tail call ptr @malloc(i32 64)
  store ptr %196, ptr %195, align 8
  store i64 0, ptr %memberidx.i.i993, align 4
  %197 = tail call ptr @malloc(i32 24)
  %memberidx.i69.i = getelementptr inbounds %Array_uint_, ptr %197, i64 0, i32 1
  store i64 0, ptr %memberidx.i69.i, align 4
  %memberidx1.i70.i = getelementptr inbounds %Array_uint_, ptr %197, i64 0, i32 2
  store i64 8, ptr %memberidx1.i70.i, align 4
  %198 = tail call ptr @malloc(i32 64)
  store ptr %198, ptr %197, align 8
  store i64 0, ptr %memberidx.i69.i, align 4
  %memberidx.i.i.i997 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %199 = load i64, ptr %memberidx.i.i.i997, align 4
  %memberidx1.i.i.i998 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %200 = load ptr, ptr %memberidx1.i.i.i998, align 8
  %memberidx2.i.i.i999 = getelementptr inbounds %String, ptr %200, i64 0, i32 1
  %201 = load i64, ptr %memberidx2.i.i.i999, align 4
  %.not1164 = icmp slt i64 %199, %201
  br i1 %.not1164, label %end.i.i1004, label %end.i.i1004.thread

end.i.i1004.thread:                               ; preds = %if.entry6
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i1014

end.i.i1004:                                      ; preds = %if.entry6
  %202 = add nsw i64 %199, 1
  store i64 %202, ptr %memberidx.i.i.i997, align 4
  %203 = load ptr, ptr %200, align 8
  %204 = getelementptr inbounds i8, ptr %203, i64 %202
  %205 = load i8, ptr %204, align 1
  store i8 %205, ptr %0, align 1
  switch i8 %205, label %if.entry9.i.i1011 [
    i8 10, label %if.entry.i.i1007
    i8 0, label %Lexer_advance.exit.i1014
  ]

if.entry.i.i1007:                                 ; preds = %end.i.i1004
  %memberidx5.i.i1005 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i1005, align 4
  %memberidx6.i.i1006 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %206 = load i64, ptr %memberidx6.i.i1006, align 4
  %207 = add nsw i64 %206, 1
  store i64 %207, ptr %memberidx6.i.i1006, align 4
  br label %Lexer_advance.exit.i1014

if.entry9.i.i1011:                                ; preds = %end.i.i1004
  %memberidx12.i.i1010 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %208 = load i64, ptr %memberidx12.i.i1010, align 4
  %209 = add nsw i64 %208, 1
  store i64 %209, ptr %memberidx12.i.i1010, align 4
  br label %Lexer_advance.exit.i1014

Lexer_advance.exit.i1014:                         ; preds = %end.i.i1004.thread, %end.i.i1004, %if.entry9.i.i1011, %if.entry.i.i1007
  %210 = tail call ptr @malloc(i32 1)
  %211 = tail call ptr @malloc(i32 24)
  store ptr %210, ptr %211, align 8
  %memberidx1.i.i72.i = getelementptr inbounds %String, ptr %211, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i72.i, align 4
  %memberidx.i74.i = getelementptr inbounds %String, ptr %211, i64 0, i32 2
  store i64 1, ptr %memberidx.i74.i, align 4
  %212 = load i64, ptr %memberidx.i.i.i997, align 4
  %213 = load ptr, ptr %memberidx1.i.i.i998, align 8
  %memberidx2.i77.i1013 = getelementptr inbounds %String, ptr %213, i64 0, i32 1
  %214 = load i64, ptr %memberidx2.i77.i1013, align 4
  %.not1165 = icmp slt i64 %212, %214
  br i1 %.not1165, label %while.entry.i1016.preheader, label %while.end.i1025

while.entry.i1016.preheader:                      ; preds = %Lexer_advance.exit.i1014
  %memberidx5.i103.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i104.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %.pre1247 = load i8, ptr %0, align 1
  br label %while.entry.i1016.outer

while.entry.i1016.outer:                          ; preds = %while.entry.i1016.preheader, %Lexer_advance.exit132.i
  %215 = phi ptr [ %210, %while.entry.i1016.preheader ], [ %329, %Lexer_advance.exit132.i ]
  %216 = phi i64 [ 1, %while.entry.i1016.preheader ], [ %330, %Lexer_advance.exit132.i ]
  %217 = phi i64 [ 0, %while.entry.i1016.preheader ], [ %326, %Lexer_advance.exit132.i ]
  %218 = phi i8 [ %.pre1247, %while.entry.i1016.preheader ], [ %344, %Lexer_advance.exit132.i ]
  %escape_next.0.i.ph = phi i1 [ false, %while.entry.i1016.preheader ], [ %325, %Lexer_advance.exit132.i ]
  %length.0.i1015.ph = phi i64 [ 2, %while.entry.i1016.preheader ], [ %324, %Lexer_advance.exit132.i ]
  %219 = icmp ne i8 %218, 34
  %220 = or i1 %escape_next.0.i.ph, %219
  br i1 %220, label %ifend.i1032.lr.ph, label %while.end.i1025

ifend.i1032.lr.ph:                                ; preds = %while.entry.i1016.outer
  %221 = add nsw i64 %length.0.i1015.ph, -2
  br label %ifend.i1032

while.end.i1025:                                  ; preds = %while.entry.i1016.outer, %Lexer_advance.exit132.i, %Array_Array_Token_____sl__.exit.i, %Lexer_advance.exit.i1014
  %222 = phi ptr [ %210, %Lexer_advance.exit.i1014 ], [ %215, %Array_Array_Token_____sl__.exit.i ], [ %215, %while.entry.i1016.outer ], [ %329, %Lexer_advance.exit132.i ]
  %223 = phi i64 [ 0, %Lexer_advance.exit.i1014 ], [ %217, %Array_Array_Token_____sl__.exit.i ], [ %217, %while.entry.i1016.outer ], [ %326, %Lexer_advance.exit132.i ]
  %length.1.i1017 = phi i64 [ 2, %Lexer_advance.exit.i1014 ], [ %length.0.i1015.ph, %Array_Array_Token_____sl__.exit.i ], [ %length.0.i1015.ph, %while.entry.i1016.outer ], [ %324, %Lexer_advance.exit132.i ]
  %224 = tail call ptr @malloc(i32 32)
  %225 = load i64, ptr %memberidx.i.i.i997, align 4
  %226 = sub i64 1, %length.1.i1017
  %227 = add i64 %226, %225
  %228 = add nsw i64 %225, 1
  %memberidx2.i79.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %229 = load i64, ptr %memberidx2.i79.i, align 4
  %230 = sub nuw i64 %229, %length.1.i1017
  %memberidx3.i.i1018 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %231 = load i64, ptr %memberidx3.i.i1018, align 4
  store i64 %227, ptr %224, align 4
  %memberidx1.i.i80.i1019 = getelementptr inbounds %FloRange, ptr %224, i64 0, i32 1
  store i64 %228, ptr %memberidx1.i.i80.i1019, align 4
  %memberidx2.i.i81.i1020 = getelementptr inbounds %FloRange, ptr %224, i64 0, i32 2
  store i64 %230, ptr %memberidx2.i.i81.i1020, align 4
  %memberidx3.i.i.i1021 = getelementptr inbounds %FloRange, ptr %224, i64 0, i32 3
  store i64 %231, ptr %memberidx3.i.i.i1021, align 4
  %232 = trunc i64 %223 to i32
  %233 = tail call ptr @malloc(i32 %232)
  %234 = tail call ptr @malloc(i32 24)
  store ptr %233, ptr %234, align 8
  %memberidx1.i.i.i.i1023 = getelementptr inbounds %String, ptr %234, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i.i1023, align 4
  %memberidx.i.i83.i = getelementptr inbounds %String, ptr %234, i64 0, i32 2
  store i64 %223, ptr %memberidx.i.i83.i, align 4
  %235 = icmp sgt i64 %223, 0
  br i1 %235, label %for.body.i.i.lr.ph, label %Lexer_string_token.exit

for.body.i.i.lr.ph:                               ; preds = %while.end.i1025
  %236 = getelementptr i8, ptr %222, i64 1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.lr.ph, %for.incr.i.i
  %237 = phi i64 [ 0, %for.body.i.i.lr.ph ], [ %241, %for.incr.i.i ]
  %i.0.i.i1239 = phi i64 [ 0, %for.body.i.i.lr.ph ], [ %242, %for.incr.i.i ]
  %238 = getelementptr inbounds i8, ptr %222, i64 %i.0.i.i1239
  %239 = load i8, ptr %238, align 1
  %240 = icmp eq i8 %239, 92
  br i1 %240, label %if.entry.i84.i, label %ifend.i.i1026

for.incr.i.i:                                     ; preds = %String___adda__.exit.i.i, %String___adda__.exit48.i.i, %String_append_byte.exit.i.i
  %241 = phi i64 [ %277, %String___adda__.exit48.i.i ], [ %294, %String___adda__.exit.i.i ], [ %255, %String_append_byte.exit.i.i ]
  %i.1.i.i = phi i64 [ %244, %String___adda__.exit48.i.i ], [ %295, %String___adda__.exit.i.i ], [ %i.2.i.i, %String_append_byte.exit.i.i ]
  %242 = add nsw i64 %i.1.i.i, 1
  %243 = icmp slt i64 %242, %223
  br i1 %243, label %for.body.i.i, label %Lexer_string_token.exit

if.entry.i84.i:                                   ; preds = %for.body.i.i
  %244 = add nuw i64 %i.0.i.i1239, 3
  %245 = icmp slt i64 %244, %223
  br i1 %245, label %if.entry3.i.i, label %ifend5.i.i

ifend.i.i1026:                                    ; preds = %ifend27.i.i.i, %get_escape_char.exit.i.i.fold.split, %get_escape_char.exit.i.i.fold.split1180, %get_escape_char.exit.i.i.fold.split1181, %get_escape_char.exit.i.i.fold.split1182, %get_escape_char.exit.i.i.fold.split1183, %get_escape_char.exit.i.i.fold.split1184, %get_escape_char.exit.i.i.fold.split1185, %get_escape_char.exit.i.i.fold.split1186, %get_escape_char.exit.i.i.fold.split1187, %ifend5.i.i, %for.body.i.i
  %char.0.i.i = phi i8 [ %239, %for.body.i.i ], [ 7, %ifend5.i.i ], [ %264, %ifend27.i.i.i ], [ 8, %get_escape_char.exit.i.i.fold.split ], [ 9, %get_escape_char.exit.i.i.fold.split1180 ], [ 12, %get_escape_char.exit.i.i.fold.split1181 ], [ 10, %get_escape_char.exit.i.i.fold.split1182 ], [ 13, %get_escape_char.exit.i.i.fold.split1183 ], [ 11, %get_escape_char.exit.i.i.fold.split1184 ], [ 0, %get_escape_char.exit.i.i.fold.split1185 ], [ %264, %get_escape_char.exit.i.i.fold.split1186 ], [ %264, %get_escape_char.exit.i.i.fold.split1187 ]
  %i.2.i.i = phi i64 [ %i.0.i.i1239, %for.body.i.i ], [ %262, %ifend5.i.i ], [ %262, %ifend27.i.i.i ], [ %262, %get_escape_char.exit.i.i.fold.split ], [ %262, %get_escape_char.exit.i.i.fold.split1180 ], [ %262, %get_escape_char.exit.i.i.fold.split1181 ], [ %262, %get_escape_char.exit.i.i.fold.split1182 ], [ %262, %get_escape_char.exit.i.i.fold.split1183 ], [ %262, %get_escape_char.exit.i.i.fold.split1184 ], [ %262, %get_escape_char.exit.i.i.fold.split1185 ], [ %262, %get_escape_char.exit.i.i.fold.split1186 ], [ %262, %get_escape_char.exit.i.i.fold.split1187 ]
  %246 = add nuw i64 %237, 1
  %247 = load i64, ptr %memberidx.i.i83.i, align 4
  %248 = icmp slt i64 %247, %246
  %249 = load ptr, ptr %234, align 8
  br i1 %248, label %if.entry.i.i.i.i, label %String_append_byte.exit.i.i

if.entry.i.i.i.i:                                 ; preds = %ifend.i.i1026
  %250 = tail call ptr @realloc(ptr %249, i64 %246)
  store ptr %250, ptr %234, align 8
  store i64 %246, ptr %memberidx.i.i83.i, align 4
  %.pre1261 = load i64, ptr %memberidx1.i.i.i.i1023, align 4
  br label %String_append_byte.exit.i.i

String_append_byte.exit.i.i:                      ; preds = %ifend.i.i1026, %if.entry.i.i.i.i
  %251 = phi ptr [ %250, %if.entry.i.i.i.i ], [ %249, %ifend.i.i1026 ]
  %252 = phi i64 [ %.pre1261, %if.entry.i.i.i.i ], [ %237, %ifend.i.i1026 ]
  %253 = getelementptr inbounds i8, ptr %251, i64 %252
  store i8 %char.0.i.i, ptr %253, align 1
  %254 = load i64, ptr %memberidx1.i.i.i.i1023, align 4
  %255 = add nuw i64 %254, 1
  store i64 %255, ptr %memberidx1.i.i.i.i1023, align 4
  br label %for.incr.i.i

if.entry3.i.i:                                    ; preds = %if.entry.i84.i
  %256 = getelementptr i8, ptr %236, i64 %i.0.i.i1239
  %257 = tail call i64 @memcmp(ptr %256, ptr nonnull @58, i64 3)
  %258 = icmp eq i64 %257, 0
  %259 = tail call i64 @memcmp(ptr %256, ptr nonnull @59, i64 3)
  %260 = icmp eq i64 %259, 0
  %261 = or i1 %258, %260
  br i1 %261, label %if.entry6.i.i, label %ifend8.i.i

ifend5.i.i:                                       ; preds = %if.entry10.i.i, %ifend8.i.i, %if.entry.i84.i
  %262 = add nsw i64 %i.0.i.i1239, 1
  %263 = getelementptr inbounds i8, ptr %222, i64 %262
  %264 = load i8, ptr %263, align 1
  switch i8 %264, label %ifend27.i.i.i [
    i8 97, label %ifend.i.i1026
    i8 98, label %get_escape_char.exit.i.i.fold.split
    i8 116, label %get_escape_char.exit.i.i.fold.split1180
    i8 102, label %get_escape_char.exit.i.i.fold.split1181
    i8 110, label %get_escape_char.exit.i.i.fold.split1182
    i8 114, label %get_escape_char.exit.i.i.fold.split1183
    i8 118, label %get_escape_char.exit.i.i.fold.split1184
    i8 48, label %get_escape_char.exit.i.i.fold.split1185
    i8 39, label %get_escape_char.exit.i.i.fold.split1186
    i8 34, label %get_escape_char.exit.i.i.fold.split1187
  ]

ifend27.i.i.i:                                    ; preds = %ifend5.i.i
  br label %ifend.i.i1026

get_escape_char.exit.i.i.fold.split:              ; preds = %ifend5.i.i
  br label %ifend.i.i1026

get_escape_char.exit.i.i.fold.split1180:          ; preds = %ifend5.i.i
  br label %ifend.i.i1026

get_escape_char.exit.i.i.fold.split1181:          ; preds = %ifend5.i.i
  br label %ifend.i.i1026

get_escape_char.exit.i.i.fold.split1182:          ; preds = %ifend5.i.i
  br label %ifend.i.i1026

get_escape_char.exit.i.i.fold.split1183:          ; preds = %ifend5.i.i
  br label %ifend.i.i1026

get_escape_char.exit.i.i.fold.split1184:          ; preds = %ifend5.i.i
  br label %ifend.i.i1026

get_escape_char.exit.i.i.fold.split1185:          ; preds = %ifend5.i.i
  br label %ifend.i.i1026

get_escape_char.exit.i.i.fold.split1186:          ; preds = %ifend5.i.i
  br label %ifend.i.i1026

get_escape_char.exit.i.i.fold.split1187:          ; preds = %ifend5.i.i
  br label %ifend.i.i1026

if.entry6.i.i:                                    ; preds = %if.entry3.i.i
  %265 = tail call ptr @malloc(i32 1)
  store i8 27, ptr %265, align 8
  %266 = tail call ptr @malloc(i32 24)
  store ptr %265, ptr %266, align 8
  %memberidx1.i.i42.i.i = getelementptr inbounds %String, ptr %266, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i42.i.i, align 4
  %memberidx2.i.i43.i.i = getelementptr inbounds %String, ptr %266, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i43.i.i, align 4
  %267 = add nuw i64 %237, 1
  %268 = load i64, ptr %memberidx.i.i83.i, align 4
  %269 = icmp slt i64 %268, %267
  %270 = load ptr, ptr %234, align 8
  br i1 %269, label %if.entry.i.i.i47.i.i, label %String___adda__.exit48.i.i

if.entry.i.i.i47.i.i:                             ; preds = %if.entry6.i.i
  %271 = tail call ptr @realloc(ptr %270, i64 %267)
  store ptr %271, ptr %234, align 8
  store i64 %267, ptr %memberidx.i.i83.i, align 4
  %.pre1266 = load i64, ptr %memberidx1.i.i.i.i1023, align 4
  br label %String___adda__.exit48.i.i

String___adda__.exit48.i.i:                       ; preds = %if.entry6.i.i, %if.entry.i.i.i47.i.i
  %272 = phi i64 [ %.pre1266, %if.entry.i.i.i47.i.i ], [ %237, %if.entry6.i.i ]
  %273 = phi ptr [ %271, %if.entry.i.i.i47.i.i ], [ %270, %if.entry6.i.i ]
  %274 = getelementptr inbounds i8, ptr %273, i64 %272
  %275 = load i8, ptr %265, align 8
  store i8 %275, ptr %274, align 2147483648
  %276 = load i64, ptr %memberidx1.i.i.i.i1023, align 4
  %277 = add nuw i64 %276, 1
  store i64 %277, ptr %memberidx1.i.i.i.i1023, align 4
  br label %for.incr.i.i

ifend8.i.i:                                       ; preds = %if.entry3.i.i
  %278 = add nuw i64 %i.0.i.i1239, 6
  %279 = icmp slt i64 %278, %223
  br i1 %279, label %if.entry10.i.i, label %ifend5.i.i

if.entry10.i.i:                                   ; preds = %ifend8.i.i
  %280 = tail call i64 @memcmp(ptr %256, ptr nonnull @60, i64 5)
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %if.entry13.i.i, label %ifend5.i.i

if.entry13.i.i:                                   ; preds = %if.entry10.i.i
  %282 = tail call ptr @malloc(i32 1)
  store i8 27, ptr %282, align 8
  %283 = tail call ptr @malloc(i32 24)
  store ptr %282, ptr %283, align 8
  %memberidx1.i.i40.i.i = getelementptr inbounds %String, ptr %283, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i40.i.i, align 4
  %memberidx2.i.i41.i.i = getelementptr inbounds %String, ptr %283, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i41.i.i, align 4
  %284 = add nuw i64 %237, 1
  %285 = load i64, ptr %memberidx.i.i83.i, align 4
  %286 = icmp slt i64 %285, %284
  %287 = load ptr, ptr %234, align 8
  br i1 %286, label %if.entry.i.i.i.i.i, label %String___adda__.exit.i.i

if.entry.i.i.i.i.i:                               ; preds = %if.entry13.i.i
  %288 = tail call ptr @realloc(ptr %287, i64 %284)
  store ptr %288, ptr %234, align 8
  store i64 %284, ptr %memberidx.i.i83.i, align 4
  %.pre1264 = load i64, ptr %memberidx1.i.i.i.i1023, align 4
  br label %String___adda__.exit.i.i

String___adda__.exit.i.i:                         ; preds = %if.entry13.i.i, %if.entry.i.i.i.i.i
  %289 = phi i64 [ %.pre1264, %if.entry.i.i.i.i.i ], [ %237, %if.entry13.i.i ]
  %290 = phi ptr [ %288, %if.entry.i.i.i.i.i ], [ %287, %if.entry13.i.i ]
  %291 = getelementptr inbounds i8, ptr %290, i64 %289
  %292 = load i8, ptr %282, align 8
  store i8 %292, ptr %291, align 2147483648
  %293 = load i64, ptr %memberidx1.i.i.i.i1023, align 4
  %294 = add nuw i64 %293, 1
  store i64 %294, ptr %memberidx1.i.i.i.i1023, align 4
  %295 = add nuw i64 %i.0.i.i1239, 5
  br label %for.incr.i.i

ifend.i1032:                                      ; preds = %ifend.i1032.lr.ph, %Array_Array_Token_____sl__.exit.i
  %296 = phi i8 [ %218, %ifend.i1032.lr.ph ], [ %409, %Array_Array_Token_____sl__.exit.i ]
  %escape_next.0.i1240 = phi i1 [ %escape_next.0.i.ph, %ifend.i1032.lr.ph ], [ false, %Array_Array_Token_____sl__.exit.i ]
  %297 = icmp ne i8 %296, 36
  %298 = or i1 %escape_next.0.i1240, %297
  br i1 %298, label %ifend8.i1038, label %if.entry6.i1035

if.entry6.i1035:                                  ; preds = %ifend.i1032
  %299 = load i64, ptr %memberidx.i69.i, align 4
  %300 = load i64, ptr %memberidx1.i70.i, align 4
  %.not.i91.i = icmp slt i64 %299, %300
  br i1 %.not.i91.i, label %if.entry6.i1035.Array_uint____sl__.exit.i_crit_edge, label %if.entry.i93.i1036

if.entry6.i1035.Array_uint____sl__.exit.i_crit_edge: ; preds = %if.entry6.i1035
  %.pre1249 = load ptr, ptr %197, align 8
  br label %Array_uint____sl__.exit.i

if.entry.i93.i1036:                               ; preds = %if.entry6.i1035
  %301 = shl nuw i64 %300, 1
  store i64 %301, ptr %memberidx1.i70.i, align 4
  %302 = load ptr, ptr %197, align 8
  %303 = shl i64 %300, 4
  %304 = tail call ptr @realloc(ptr %302, i64 %303)
  store ptr %304, ptr %197, align 8
  %.pre1248 = load i64, ptr %memberidx.i69.i, align 4
  br label %Array_uint____sl__.exit.i

Array_uint____sl__.exit.i:                        ; preds = %if.entry6.i1035.Array_uint____sl__.exit.i_crit_edge, %if.entry.i93.i1036
  %305 = phi ptr [ %304, %if.entry.i93.i1036 ], [ %.pre1249, %if.entry6.i1035.Array_uint____sl__.exit.i_crit_edge ]
  %306 = phi i64 [ %.pre1248, %if.entry.i93.i1036 ], [ %299, %if.entry6.i1035.Array_uint____sl__.exit.i_crit_edge ]
  %307 = add nsw i64 %306, 1
  store i64 %307, ptr %memberidx.i69.i, align 4
  %308 = getelementptr inbounds i64, ptr %305, i64 %306
  store i64 %221, ptr %308, align 4
  %309 = load i64, ptr %memberidx.i.i.i997, align 4
  %310 = load ptr, ptr %memberidx1.i.i.i998, align 8
  %memberidx2.i.i97.i = getelementptr inbounds %String, ptr %310, i64 0, i32 1
  %311 = load i64, ptr %memberidx2.i.i97.i, align 4
  %.not1166 = icmp slt i64 %309, %311
  br i1 %.not1166, label %end.i102.i, label %end.i102.i.thread

end.i102.i.thread:                                ; preds = %Array_uint____sl__.exit.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit111.i

end.i102.i:                                       ; preds = %Array_uint____sl__.exit.i
  %312 = add nsw i64 %309, 1
  store i64 %312, ptr %memberidx.i.i.i997, align 4
  %313 = load ptr, ptr %310, align 8
  %314 = getelementptr inbounds i8, ptr %313, i64 %312
  %315 = load i8, ptr %314, align 1
  store i8 %315, ptr %0, align 1
  switch i8 %315, label %if.entry9.i110.i [
    i8 10, label %if.entry.i105.i
    i8 0, label %Lexer_advance.exit111.i
  ]

if.entry.i105.i:                                  ; preds = %end.i102.i
  store i64 0, ptr %memberidx5.i103.i, align 4
  %316 = load i64, ptr %memberidx6.i104.i, align 4
  %317 = add nsw i64 %316, 1
  store i64 %317, ptr %memberidx6.i104.i, align 4
  br label %Lexer_advance.exit111.i

if.entry9.i110.i:                                 ; preds = %end.i102.i
  %318 = load i64, ptr %memberidx5.i103.i, align 4
  %319 = add nsw i64 %318, 1
  store i64 %319, ptr %memberidx5.i103.i, align 4
  br label %Lexer_advance.exit111.i

Lexer_advance.exit111.i:                          ; preds = %end.i102.i.thread, %end.i102.i, %if.entry9.i110.i, %if.entry.i105.i
  %320 = tail call ptr @malloc(i32 24)
  %memberidx.i112.i = getelementptr inbounds %Array_Token_, ptr %320, i64 0, i32 1
  store i64 0, ptr %memberidx.i112.i, align 4
  %memberidx1.i113.i = getelementptr inbounds %Array_Token_, ptr %320, i64 0, i32 2
  store i64 8, ptr %memberidx1.i113.i, align 4
  %321 = tail call ptr @malloc(i32 64)
  store ptr %321, ptr %320, align 8
  store i64 0, ptr %memberidx.i112.i, align 4
  %322 = load i8, ptr %0, align 1
  %323 = icmp eq i8 %322, 40
  br i1 %323, label %if.entry12.i, label %else13.i

ifend8.i1038:                                     ; preds = %ifend.i1032
  %324 = add nuw nsw i64 %length.0.i1015.ph, 1
  %325 = icmp eq i8 %296, 92
  %326 = add nuw i64 %217, 1
  %327 = icmp slt i64 %216, %326
  br i1 %327, label %if.entry.i.i.i, label %String_append_byte.exit.i

if.entry.i.i.i:                                   ; preds = %ifend8.i1038
  %328 = tail call ptr @realloc(ptr %215, i64 %326)
  store ptr %328, ptr %211, align 8
  store i64 %326, ptr %memberidx.i74.i, align 4
  br label %String_append_byte.exit.i

String_append_byte.exit.i:                        ; preds = %if.entry.i.i.i, %ifend8.i1038
  %329 = phi ptr [ %328, %if.entry.i.i.i ], [ %215, %ifend8.i1038 ]
  %330 = phi i64 [ %326, %if.entry.i.i.i ], [ %216, %ifend8.i1038 ]
  %331 = getelementptr inbounds i8, ptr %329, i64 %217
  store i8 %296, ptr %331, align 1
  store i64 %326, ptr %memberidx1.i.i72.i, align 4
  %332 = load i64, ptr %memberidx.i.i.i997, align 4
  %333 = load ptr, ptr %memberidx1.i.i.i998, align 8
  %memberidx2.i.i118.i = getelementptr inbounds %String, ptr %333, i64 0, i32 1
  %334 = load i64, ptr %memberidx2.i.i118.i, align 4
  %.not1171 = icmp slt i64 %332, %334
  br i1 %.not1171, label %end.i123.i, label %end.i123.i.thread

end.i123.i.thread:                                ; preds = %String_append_byte.exit.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit132.i

end.i123.i:                                       ; preds = %String_append_byte.exit.i
  %335 = add nsw i64 %332, 1
  store i64 %335, ptr %memberidx.i.i.i997, align 4
  %336 = load ptr, ptr %333, align 8
  %337 = getelementptr inbounds i8, ptr %336, i64 %335
  %338 = load i8, ptr %337, align 1
  store i8 %338, ptr %0, align 1
  switch i8 %338, label %if.entry9.i131.i [
    i8 10, label %if.entry.i126.i
    i8 0, label %Lexer_advance.exit132.i
  ]

if.entry.i126.i:                                  ; preds = %end.i123.i
  store i64 0, ptr %memberidx5.i103.i, align 4
  %339 = load i64, ptr %memberidx6.i104.i, align 4
  %340 = add nsw i64 %339, 1
  store i64 %340, ptr %memberidx6.i104.i, align 4
  br label %Lexer_advance.exit132.i

if.entry9.i131.i:                                 ; preds = %end.i123.i
  %341 = load i64, ptr %memberidx5.i103.i, align 4
  %342 = add nsw i64 %341, 1
  store i64 %342, ptr %memberidx5.i103.i, align 4
  br label %Lexer_advance.exit132.i

Lexer_advance.exit132.i:                          ; preds = %end.i123.i.thread, %end.i123.i, %if.entry9.i131.i, %if.entry.i126.i
  %343 = phi i64 [ %332, %end.i123.i.thread ], [ %335, %end.i123.i ], [ %335, %if.entry9.i131.i ], [ %335, %if.entry.i126.i ]
  %344 = phi i8 [ 0, %end.i123.i.thread ], [ %338, %end.i123.i ], [ %338, %if.entry9.i131.i ], [ 10, %if.entry.i126.i ]
  %345 = load i64, ptr %memberidx2.i.i118.i, align 4
  %.not1172 = icmp slt i64 %343, %345
  br i1 %.not1172, label %while.entry.i1016.outer, label %while.end.i1025

if.entry12.i:                                     ; preds = %Lexer_advance.exit111.i
  %346 = load i64, ptr %memberidx.i.i.i997, align 4
  %347 = load ptr, ptr %memberidx1.i.i.i998, align 8
  %memberidx2.i.i138.i = getelementptr inbounds %String, ptr %347, i64 0, i32 1
  %348 = load i64, ptr %memberidx2.i.i138.i, align 4
  %.not1168 = icmp slt i64 %346, %348
  br i1 %.not1168, label %end.i143.i, label %end.i143.i.thread

end.i143.i.thread:                                ; preds = %if.entry12.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit152.i

end.i143.i:                                       ; preds = %if.entry12.i
  %349 = add nsw i64 %346, 1
  store i64 %349, ptr %memberidx.i.i.i997, align 4
  %350 = load ptr, ptr %347, align 8
  %351 = getelementptr inbounds i8, ptr %350, i64 %349
  %352 = load i8, ptr %351, align 1
  store i8 %352, ptr %0, align 1
  switch i8 %352, label %if.entry9.i151.i [
    i8 10, label %if.entry.i146.i
    i8 0, label %Lexer_advance.exit152.i
  ]

if.entry.i146.i:                                  ; preds = %end.i143.i
  store i64 0, ptr %memberidx5.i103.i, align 4
  %353 = load i64, ptr %memberidx6.i104.i, align 4
  %354 = add nsw i64 %353, 1
  store i64 %354, ptr %memberidx6.i104.i, align 4
  br label %Lexer_advance.exit152.i

if.entry9.i151.i:                                 ; preds = %end.i143.i
  %355 = load i64, ptr %memberidx5.i103.i, align 4
  %356 = add nsw i64 %355, 1
  store i64 %356, ptr %memberidx5.i103.i, align 4
  br label %Lexer_advance.exit152.i

Lexer_advance.exit152.i:                          ; preds = %end.i143.i.thread, %end.i143.i, %if.entry9.i151.i, %if.entry.i146.i
  %357 = phi i8 [ 0, %end.i143.i.thread ], [ %352, %end.i143.i ], [ %352, %if.entry9.i151.i ], [ 10, %if.entry.i146.i ]
  %358 = phi i64 [ %346, %end.i143.i.thread ], [ %349, %end.i143.i ], [ %349, %if.entry9.i151.i ], [ %349, %if.entry.i146.i ]
  %359 = icmp eq i8 %357, 41
  %360 = load i64, ptr %memberidx2.i.i138.i, align 4
  %361 = icmp sge i64 %358, %360
  %362 = or i1 %359, %361
  br i1 %362, label %ifend14.i, label %while.entry15.i

else13.i:                                         ; preds = %Lexer_advance.exit111.i
  %363 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %364 = load i64, ptr %memberidx.i112.i, align 4
  %365 = load i64, ptr %memberidx1.i113.i, align 4
  %.not.i158.i = icmp slt i64 %364, %365
  br i1 %.not.i158.i, label %else13.i.Array_Token____sl__.exit.i_crit_edge, label %if.entry.i160.i

else13.i.Array_Token____sl__.exit.i_crit_edge:    ; preds = %else13.i
  %.pre1251 = load ptr, ptr %320, align 8
  br label %Array_Token____sl__.exit.i

if.entry.i160.i:                                  ; preds = %else13.i
  %366 = shl nuw i64 %365, 1
  store i64 %366, ptr %memberidx1.i113.i, align 4
  %367 = load ptr, ptr %320, align 8
  %368 = shl i64 %365, 4
  %369 = tail call ptr @realloc(ptr %367, i64 %368)
  store ptr %369, ptr %320, align 8
  %.pre1250 = load i64, ptr %memberidx.i112.i, align 4
  br label %Array_Token____sl__.exit.i

Array_Token____sl__.exit.i:                       ; preds = %else13.i.Array_Token____sl__.exit.i_crit_edge, %if.entry.i160.i
  %370 = phi ptr [ %369, %if.entry.i160.i ], [ %.pre1251, %else13.i.Array_Token____sl__.exit.i_crit_edge ]
  %371 = phi i64 [ %.pre1250, %if.entry.i160.i ], [ %364, %else13.i.Array_Token____sl__.exit.i_crit_edge ]
  %372 = add nsw i64 %371, 1
  store i64 %372, ptr %memberidx.i112.i, align 4
  %373 = getelementptr inbounds ptr, ptr %370, i64 %371
  store ptr %363, ptr %373, align 8
  %.pre1254 = load i64, ptr %memberidx.i.i.i997, align 4
  %.pre1255 = load ptr, ptr %memberidx1.i.i.i998, align 8
  %memberidx2.i.i164.i.phi.trans.insert = getelementptr inbounds %String, ptr %.pre1255, i64 0, i32 1
  %.pre1256 = load i64, ptr %memberidx2.i.i164.i.phi.trans.insert, align 4
  br label %ifend14.i

ifend14.i:                                        ; preds = %Lexer_advance.exit219.i, %Array_Token____sl__.exit.i, %Lexer_advance.exit152.i
  %374 = phi i64 [ %.pre1256, %Array_Token____sl__.exit.i ], [ %360, %Lexer_advance.exit152.i ], [ %442, %Lexer_advance.exit219.i ]
  %375 = phi ptr [ %.pre1255, %Array_Token____sl__.exit.i ], [ %347, %Lexer_advance.exit152.i ], [ %427, %Lexer_advance.exit219.i ]
  %376 = phi i64 [ %.pre1254, %Array_Token____sl__.exit.i ], [ %358, %Lexer_advance.exit152.i ], [ %437, %Lexer_advance.exit219.i ]
  %.not1167 = icmp slt i64 %376, %374
  br i1 %.not1167, label %end.i169.i, label %end.i169.i.thread

end.i169.i.thread:                                ; preds = %ifend14.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit178.i

end.i169.i:                                       ; preds = %ifend14.i
  %377 = add nsw i64 %376, 1
  store i64 %377, ptr %memberidx.i.i.i997, align 4
  %378 = load ptr, ptr %375, align 8
  %379 = getelementptr inbounds i8, ptr %378, i64 %377
  %380 = load i8, ptr %379, align 1
  store i8 %380, ptr %0, align 1
  switch i8 %380, label %if.entry9.i177.i [
    i8 10, label %if.entry.i172.i
    i8 0, label %Lexer_advance.exit178.i
  ]

if.entry.i172.i:                                  ; preds = %end.i169.i
  store i64 0, ptr %memberidx5.i103.i, align 4
  %381 = load i64, ptr %memberidx6.i104.i, align 4
  %382 = add nsw i64 %381, 1
  store i64 %382, ptr %memberidx6.i104.i, align 4
  br label %Lexer_advance.exit178.i

if.entry9.i177.i:                                 ; preds = %end.i169.i
  %383 = load i64, ptr %memberidx5.i103.i, align 4
  %384 = add nsw i64 %383, 1
  store i64 %384, ptr %memberidx5.i103.i, align 4
  br label %Lexer_advance.exit178.i

Lexer_advance.exit178.i:                          ; preds = %end.i169.i.thread, %end.i169.i, %if.entry9.i177.i, %if.entry.i172.i
  %385 = tail call ptr @malloc(i32 16)
  %386 = tail call ptr @malloc(i32 32)
  %387 = load i64, ptr %memberidx5.i103.i, align 4
  %388 = load i64, ptr %memberidx6.i104.i, align 4
  %memberidx2.i180.i = getelementptr inbounds %FloRange, ptr %386, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %386, i8 0, i64 16, i1 false)
  store i64 %387, ptr %memberidx2.i180.i, align 4
  %memberidx3.i181.i = getelementptr inbounds %FloRange, ptr %386, i64 0, i32 3
  store i64 %388, ptr %memberidx3.i181.i, align 4
  store i64 46, ptr %385, align 4
  %memberidx1.i182.i = getelementptr inbounds %Token, ptr %385, i64 0, i32 1
  store ptr %386, ptr %memberidx1.i182.i, align 8
  %389 = load i64, ptr %memberidx.i112.i, align 4
  %390 = load i64, ptr %memberidx1.i113.i, align 4
  %.not.i185.i = icmp slt i64 %389, %390
  br i1 %.not.i185.i, label %Lexer_advance.exit178.i.Array_Token____sl__.exit189.i_crit_edge, label %if.entry.i187.i

Lexer_advance.exit178.i.Array_Token____sl__.exit189.i_crit_edge: ; preds = %Lexer_advance.exit178.i
  %.pre1258 = load ptr, ptr %320, align 8
  br label %Array_Token____sl__.exit189.i

if.entry.i187.i:                                  ; preds = %Lexer_advance.exit178.i
  %391 = shl nuw i64 %390, 1
  store i64 %391, ptr %memberidx1.i113.i, align 4
  %392 = load ptr, ptr %320, align 8
  %393 = shl i64 %390, 4
  %394 = tail call ptr @realloc(ptr %392, i64 %393)
  store ptr %394, ptr %320, align 8
  %.pre1257 = load i64, ptr %memberidx.i112.i, align 4
  br label %Array_Token____sl__.exit189.i

Array_Token____sl__.exit189.i:                    ; preds = %Lexer_advance.exit178.i.Array_Token____sl__.exit189.i_crit_edge, %if.entry.i187.i
  %395 = phi ptr [ %394, %if.entry.i187.i ], [ %.pre1258, %Lexer_advance.exit178.i.Array_Token____sl__.exit189.i_crit_edge ]
  %396 = phi i64 [ %.pre1257, %if.entry.i187.i ], [ %389, %Lexer_advance.exit178.i.Array_Token____sl__.exit189.i_crit_edge ]
  %397 = add nsw i64 %396, 1
  store i64 %397, ptr %memberidx.i112.i, align 4
  %398 = getelementptr inbounds ptr, ptr %395, i64 %396
  store ptr %385, ptr %398, align 8
  %399 = load i64, ptr %memberidx.i.i993, align 4
  %400 = load i64, ptr %memberidx1.i.i994, align 4
  %.not.i192.i = icmp slt i64 %399, %400
  br i1 %.not.i192.i, label %Array_Token____sl__.exit189.i.Array_Array_Token_____sl__.exit.i_crit_edge, label %if.entry.i194.i

Array_Token____sl__.exit189.i.Array_Array_Token_____sl__.exit.i_crit_edge: ; preds = %Array_Token____sl__.exit189.i
  %.pre1260 = load ptr, ptr %195, align 8
  br label %Array_Array_Token_____sl__.exit.i

if.entry.i194.i:                                  ; preds = %Array_Token____sl__.exit189.i
  %401 = shl nuw i64 %400, 1
  store i64 %401, ptr %memberidx1.i.i994, align 4
  %402 = load ptr, ptr %195, align 8
  %403 = shl i64 %400, 4
  %404 = tail call ptr @realloc(ptr %402, i64 %403)
  store ptr %404, ptr %195, align 8
  %.pre1259 = load i64, ptr %memberidx.i.i993, align 4
  br label %Array_Array_Token_____sl__.exit.i

Array_Array_Token_____sl__.exit.i:                ; preds = %Array_Token____sl__.exit189.i.Array_Array_Token_____sl__.exit.i_crit_edge, %if.entry.i194.i
  %405 = phi ptr [ %404, %if.entry.i194.i ], [ %.pre1260, %Array_Token____sl__.exit189.i.Array_Array_Token_____sl__.exit.i_crit_edge ]
  %406 = phi i64 [ %.pre1259, %if.entry.i194.i ], [ %399, %Array_Token____sl__.exit189.i.Array_Array_Token_____sl__.exit.i_crit_edge ]
  %407 = add nsw i64 %406, 1
  store i64 %407, ptr %memberidx.i.i993, align 4
  %408 = getelementptr inbounds ptr, ptr %405, i64 %406
  store ptr %320, ptr %408, align 8
  %409 = load i8, ptr %0, align 1
  %.not = icmp eq i8 %409, 34
  br i1 %.not, label %while.end.i1025, label %ifend.i1032

while.entry15.i:                                  ; preds = %Lexer_advance.exit152.i, %Lexer_advance.exit219.i
  %410 = phi i8 [ %438, %Lexer_advance.exit219.i ], [ %357, %Lexer_advance.exit152.i ]
  %active_open_pars.0.i = phi i64 [ %active_open_pars.2.i, %Lexer_advance.exit219.i ], [ 0, %Lexer_advance.exit152.i ]
  %411 = icmp eq i8 %410, 40
  %412 = zext i1 %411 to i64
  %spec.select = add nsw i64 %active_open_pars.0.i, %412
  %413 = icmp eq i8 %410, 41
  %414 = sext i1 %413 to i64
  %active_open_pars.2.i = add nsw i64 %spec.select, %414
  %415 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %416 = load i64, ptr %memberidx.i112.i, align 4
  %417 = load i64, ptr %memberidx1.i113.i, align 4
  %.not.i198.i = icmp slt i64 %416, %417
  br i1 %.not.i198.i, label %while.entry15.i.Array_Token____sl__.exit202.i_crit_edge, label %if.entry.i200.i

while.entry15.i.Array_Token____sl__.exit202.i_crit_edge: ; preds = %while.entry15.i
  %.pre1253 = load ptr, ptr %320, align 8
  br label %Array_Token____sl__.exit202.i

if.entry.i200.i:                                  ; preds = %while.entry15.i
  %418 = shl nuw i64 %417, 1
  store i64 %418, ptr %memberidx1.i113.i, align 4
  %419 = load ptr, ptr %320, align 8
  %420 = shl i64 %417, 4
  %421 = tail call ptr @realloc(ptr %419, i64 %420)
  store ptr %421, ptr %320, align 8
  %.pre1252 = load i64, ptr %memberidx.i112.i, align 4
  br label %Array_Token____sl__.exit202.i

Array_Token____sl__.exit202.i:                    ; preds = %while.entry15.i.Array_Token____sl__.exit202.i_crit_edge, %if.entry.i200.i
  %422 = phi ptr [ %421, %if.entry.i200.i ], [ %.pre1253, %while.entry15.i.Array_Token____sl__.exit202.i_crit_edge ]
  %423 = phi i64 [ %.pre1252, %if.entry.i200.i ], [ %416, %while.entry15.i.Array_Token____sl__.exit202.i_crit_edge ]
  %424 = add nsw i64 %423, 1
  store i64 %424, ptr %memberidx.i112.i, align 4
  %425 = getelementptr inbounds ptr, ptr %422, i64 %423
  store ptr %415, ptr %425, align 8
  %426 = load i64, ptr %memberidx.i.i.i997, align 4
  %427 = load ptr, ptr %memberidx1.i.i.i998, align 8
  %memberidx2.i.i205.i = getelementptr inbounds %String, ptr %427, i64 0, i32 1
  %428 = load i64, ptr %memberidx2.i.i205.i, align 4
  %.not1169 = icmp slt i64 %426, %428
  br i1 %.not1169, label %end.i210.i, label %end.i210.i.thread

end.i210.i.thread:                                ; preds = %Array_Token____sl__.exit202.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit219.i

end.i210.i:                                       ; preds = %Array_Token____sl__.exit202.i
  %429 = add nsw i64 %426, 1
  store i64 %429, ptr %memberidx.i.i.i997, align 4
  %430 = load ptr, ptr %427, align 8
  %431 = getelementptr inbounds i8, ptr %430, i64 %429
  %432 = load i8, ptr %431, align 1
  store i8 %432, ptr %0, align 1
  switch i8 %432, label %if.entry9.i218.i [
    i8 10, label %if.entry.i213.i
    i8 0, label %Lexer_advance.exit219.i
  ]

if.entry.i213.i:                                  ; preds = %end.i210.i
  store i64 0, ptr %memberidx5.i103.i, align 4
  %433 = load i64, ptr %memberidx6.i104.i, align 4
  %434 = add nsw i64 %433, 1
  store i64 %434, ptr %memberidx6.i104.i, align 4
  br label %Lexer_advance.exit219.i

if.entry9.i218.i:                                 ; preds = %end.i210.i
  %435 = load i64, ptr %memberidx5.i103.i, align 4
  %436 = add nsw i64 %435, 1
  store i64 %436, ptr %memberidx5.i103.i, align 4
  br label %Lexer_advance.exit219.i

Lexer_advance.exit219.i:                          ; preds = %end.i210.i.thread, %end.i210.i, %if.entry9.i218.i, %if.entry.i213.i
  %437 = phi i64 [ %426, %end.i210.i.thread ], [ %429, %end.i210.i ], [ %429, %if.entry9.i218.i ], [ %429, %if.entry.i213.i ]
  %438 = phi i8 [ 0, %end.i210.i.thread ], [ %432, %end.i210.i ], [ %432, %if.entry9.i218.i ], [ 10, %if.entry.i213.i ]
  %439 = icmp ne i8 %438, 41
  %440 = icmp ne i64 %active_open_pars.2.i, 0
  %441 = or i1 %440, %439
  %442 = load i64, ptr %memberidx2.i.i205.i, align 4
  %.not1170 = icmp slt i64 %437, %442
  %443 = and i1 %441, %.not1170
  br i1 %443, label %while.entry15.i, label %ifend14.i

Lexer_string_token.exit:                          ; preds = %for.incr.i.i, %while.end.i1025
  %444 = tail call ptr @malloc(i32 40)
  store i64 34, ptr %444, align 4
  %memberidx1.i.i85.i = getelementptr inbounds %Token, ptr %444, i64 0, i32 1
  store ptr %224, ptr %memberidx1.i.i85.i, align 8
  %memberidx.i86.i1029 = getelementptr inbounds %StrToken, ptr %444, i64 0, i32 2
  store ptr %234, ptr %memberidx.i86.i1029, align 8
  %memberidx1.i87.i1030 = getelementptr inbounds %StrToken, ptr %444, i64 0, i32 3
  store ptr %197, ptr %memberidx1.i87.i1030, align 8
  %memberidx2.i88.i1031 = getelementptr inbounds %StrToken, ptr %444, i64 0, i32 4
  store ptr %195, ptr %memberidx2.i88.i1031, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend5
  %445 = add i8 %2, -48
  %446 = icmp ult i8 %445, 10
  br i1 %446, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend8
  %447 = icmp eq i8 %2, 48
  %memberidx.i.i184 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %448 = load i64, ptr %memberidx.i.i184, align 4
  %449 = add nsw i64 %448, 1
  %memberidx1.i.i185 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %450 = load ptr, ptr %memberidx1.i.i185, align 8
  %memberidx2.i.i186 = getelementptr inbounds %String, ptr %450, i64 0, i32 1
  %451 = load i64, ptr %memberidx2.i.i186, align 4
  %452 = icmp slt i64 %449, %451
  br i1 %452, label %Lexer_peek.exit.i189, label %Lexer_peek.exit66.i

Lexer_peek.exit.i189:                             ; preds = %if.entry9
  %453 = load ptr, ptr %450, align 8
  %454 = getelementptr inbounds i8, ptr %453, i64 %449
  %455 = load i8, ptr %454, align 1
  %phi.cmp1158 = icmp eq i8 %455, 98
  %456 = and i1 %447, %phi.cmp1158
  br i1 %456, label %if.entry.i191, label %Lexer_peek.exit49.i

if.entry.i191:                                    ; preds = %Lexer_peek.exit.i189
  %457 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 2)
  br label %common.ret

Lexer_peek.exit49.i:                              ; preds = %Lexer_peek.exit.i189
  %phi.cmp1159 = icmp eq i8 %455, 111
  %458 = and i1 %447, %phi.cmp1159
  br i1 %458, label %if.entry2.i193, label %Lexer_peek.exit57.i

if.entry2.i193:                                   ; preds = %Lexer_peek.exit49.i
  %459 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 8)
  br label %common.ret

Lexer_peek.exit57.i:                              ; preds = %Lexer_peek.exit49.i
  %phi.cmp1160 = icmp eq i8 %455, 120
  %460 = and i1 %447, %phi.cmp1160
  br i1 %460, label %if.entry6.i, label %Lexer_peek.exit66.i

if.entry6.i:                                      ; preds = %Lexer_peek.exit57.i
  %461 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 16)
  br label %common.ret

Lexer_peek.exit66.i:                              ; preds = %Lexer_peek.exit57.i, %if.entry9
  %common.ret.op.i64.i = phi i8 [ 0, %if.entry9 ], [ %455, %Lexer_peek.exit57.i ]
  %462 = add i8 %common.ret.op.i64.i, -48
  %463 = icmp ult i8 %462, 10
  %464 = icmp eq i8 %common.ret.op.i64.i, 46
  %465 = or i1 %464, %463
  %.not1161 = icmp slt i64 %448, %451
  %466 = and i1 %.not1161, %465
  br i1 %466, label %while.entry.i196.preheader, label %while.end.i200

while.entry.i196.preheader:                       ; preds = %Lexer_peek.exit66.i
  %memberidx5.i.i206 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i.i207 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i196

while.entry.i196:                                 ; preds = %while.entry.i196.preheader, %Lexer_peek.exit75.i
  %467 = phi i64 [ %508, %Lexer_peek.exit75.i ], [ %448, %while.entry.i196.preheader ]
  %468 = phi i8 [ %509, %Lexer_peek.exit75.i ], [ %2, %while.entry.i196.preheader ]
  %469 = phi i64 [ %511, %Lexer_peek.exit75.i ], [ %451, %while.entry.i196.preheader ]
  %length.0.i195 = phi i64 [ %499, %Lexer_peek.exit75.i ], [ 1, %while.entry.i196.preheader ]
  %is_float.0.i = phi i1 [ %spec.select1188, %Lexer_peek.exit75.i ], [ false, %while.entry.i196.preheader ]
  %next_char.0.i = phi i8 [ %common.ret.op.i73.i, %Lexer_peek.exit75.i ], [ %common.ret.op.i64.i, %while.entry.i196.preheader ]
  %470 = icmp eq i8 %next_char.0.i, 46
  %471 = add nsw i64 %467, 2
  %472 = icmp slt i64 %471, %469
  br i1 %472, label %if.entry.i93.i, label %Lexer_peek.exit94.i

if.entry.i93.i:                                   ; preds = %while.entry.i196
  %473 = load ptr, ptr %450, align 8
  %474 = getelementptr inbounds i8, ptr %473, i64 %471
  %475 = load i8, ptr %474, align 1
  br label %Lexer_peek.exit94.i

Lexer_peek.exit94.i:                              ; preds = %if.entry.i93.i, %while.entry.i196
  %common.ret.op.i92.i = phi i8 [ %475, %if.entry.i93.i ], [ 0, %while.entry.i196 ]
  %476 = add i8 %common.ret.op.i92.i, -58
  %477 = icmp ult i8 %476, -10
  %478 = or i1 %is_float.0.i, %477
  %479 = and i1 %470, %478
  br i1 %479, label %while.end.i200, label %ifend11.i

while.end.i200:                                   ; preds = %Lexer_peek.exit75.i, %Lexer_peek.exit94.i, %Lexer_peek.exit66.i
  %length.1.i197 = phi i64 [ 1, %Lexer_peek.exit66.i ], [ %499, %Lexer_peek.exit75.i ], [ %length.0.i195, %Lexer_peek.exit94.i ]
  %is_float.1.i = phi i1 [ false, %Lexer_peek.exit66.i ], [ %spec.select1188, %Lexer_peek.exit75.i ], [ %is_float.0.i, %Lexer_peek.exit94.i ]
  %480 = tail call ptr @malloc(i32 32)
  %481 = load i64, ptr %memberidx.i.i184, align 4
  %482 = sub nsw i64 %481, %length.1.i197
  %483 = add nsw i64 %482, 1
  %484 = add nsw i64 %481, 1
  %memberidx2.i86.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %485 = load i64, ptr %memberidx2.i86.i, align 4
  %486 = sub nuw i64 %485, %length.1.i197
  %memberidx3.i.i198 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %487 = load i64, ptr %memberidx3.i.i198, align 4
  store i64 %483, ptr %480, align 4
  %memberidx1.i.i87.i = getelementptr inbounds %FloRange, ptr %480, i64 0, i32 1
  store i64 %484, ptr %memberidx1.i.i87.i, align 4
  %memberidx2.i.i88.i = getelementptr inbounds %FloRange, ptr %480, i64 0, i32 2
  store i64 %486, ptr %memberidx2.i.i88.i, align 4
  %memberidx3.i.i.i199 = getelementptr inbounds %FloRange, ptr %480, i64 0, i32 3
  store i64 %487, ptr %memberidx3.i.i.i199, align 4
  %488 = load ptr, ptr %memberidx1.i.i185, align 8
  %489 = trunc i64 %length.1.i197 to i32
  %490 = tail call ptr @malloc(i32 %489)
  %491 = load ptr, ptr %488, align 8
  %492 = getelementptr inbounds i8, ptr %491, i64 %483
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %490, ptr align 2147483648 %492, i64 %length.1.i197, i1 false)
  %493 = tail call ptr @malloc(i32 24)
  store ptr %490, ptr %493, align 8
  %memberidx1.i.i80.i = getelementptr inbounds %String, ptr %493, i64 0, i32 1
  store i64 %length.1.i197, ptr %memberidx1.i.i80.i, align 4
  %memberidx2.i.i81.i = getelementptr inbounds %String, ptr %493, i64 0, i32 2
  store i64 %length.1.i197, ptr %memberidx2.i.i81.i, align 4
  %494 = tail call ptr @malloc(i32 24)
  %495 = add i32 %489, 1
  %496 = tail call ptr @malloc(i32 %495)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %496, ptr align 8 %490, i64 %length.1.i197, i1 false)
  %497 = getelementptr inbounds i8, ptr %496, i64 %length.1.i197
  store i8 0, ptr %497, align 1
  br i1 %is_float.1.i, label %true_block.i, label %false_block.i219

ifend11.i:                                        ; preds = %Lexer_peek.exit94.i
  %498 = icmp eq i8 %468, 46
  %spec.select1188 = select i1 %498, i1 true, i1 %is_float.0.i
  %499 = add nuw nsw i64 %length.0.i195, 1
  %.not1162 = icmp slt i64 %467, %469
  br i1 %.not1162, label %end.i.i205, label %end.i.i205.thread

end.i.i205.thread:                                ; preds = %ifend11.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i213

end.i.i205:                                       ; preds = %ifend11.i
  %500 = add nsw i64 %467, 1
  store i64 %500, ptr %memberidx.i.i184, align 4
  %501 = load ptr, ptr %450, align 8
  %502 = getelementptr inbounds i8, ptr %501, i64 %500
  %503 = load i8, ptr %502, align 1
  store i8 %503, ptr %0, align 1
  switch i8 %503, label %if.entry9.i.i212 [
    i8 10, label %if.entry.i79.i208
    i8 0, label %Lexer_advance.exit.i213
  ]

if.entry.i79.i208:                                ; preds = %end.i.i205
  store i64 0, ptr %memberidx5.i.i206, align 4
  %504 = load i64, ptr %memberidx6.i.i207, align 4
  %505 = add nsw i64 %504, 1
  store i64 %505, ptr %memberidx6.i.i207, align 4
  br label %Lexer_advance.exit.i213

if.entry9.i.i212:                                 ; preds = %end.i.i205
  %506 = load i64, ptr %memberidx5.i.i206, align 4
  %507 = add nsw i64 %506, 1
  store i64 %507, ptr %memberidx5.i.i206, align 4
  br label %Lexer_advance.exit.i213

Lexer_advance.exit.i213:                          ; preds = %end.i.i205.thread, %end.i.i205, %if.entry9.i.i212, %if.entry.i79.i208
  %508 = phi i64 [ %467, %end.i.i205.thread ], [ %500, %end.i.i205 ], [ %500, %if.entry9.i.i212 ], [ %500, %if.entry.i79.i208 ]
  %509 = phi i8 [ 0, %end.i.i205.thread ], [ %503, %end.i.i205 ], [ %503, %if.entry9.i.i212 ], [ 10, %if.entry.i79.i208 ]
  %510 = add nsw i64 %508, 1
  %511 = load i64, ptr %memberidx2.i.i186, align 4
  %512 = icmp slt i64 %510, %511
  br i1 %512, label %if.entry.i74.i, label %Lexer_peek.exit75.i

if.entry.i74.i:                                   ; preds = %Lexer_advance.exit.i213
  %513 = load ptr, ptr %450, align 8
  %514 = getelementptr inbounds i8, ptr %513, i64 %510
  %515 = load i8, ptr %514, align 1
  br label %Lexer_peek.exit75.i

Lexer_peek.exit75.i:                              ; preds = %if.entry.i74.i, %Lexer_advance.exit.i213
  %common.ret.op.i73.i = phi i8 [ %515, %if.entry.i74.i ], [ 0, %Lexer_advance.exit.i213 ]
  %516 = add i8 %common.ret.op.i73.i, -48
  %517 = icmp ult i8 %516, 10
  %518 = icmp eq i8 %common.ret.op.i73.i, 46
  %519 = or i1 %518, %517
  %.not1163 = icmp slt i64 %508, %511
  %520 = and i1 %.not1163, %519
  br i1 %520, label %while.entry.i196, label %while.end.i200

true_block.i:                                     ; preds = %while.end.i200
  %521 = tail call double @atof(ptr %496)
  tail call void @free(ptr %496)
  store i64 32, ptr %494, align 4
  %memberidx1.i.i58.i215 = getelementptr inbounds %Token, ptr %494, i64 0, i32 1
  store ptr %480, ptr %memberidx1.i.i58.i215, align 8
  %memberidx.i59.i = getelementptr inbounds %FloatToken, ptr %494, i64 0, i32 2
  store double %521, ptr %memberidx.i59.i, align 8
  br label %end.i221

false_block.i219:                                 ; preds = %while.end.i200
  %522 = tail call i64 @atol(ptr nocapture %496)
  tail call void @free(ptr %496)
  store i64 31, ptr %494, align 4
  %memberidx1.i.i.i217 = getelementptr inbounds %Token, ptr %494, i64 0, i32 1
  store ptr %480, ptr %memberidx1.i.i.i217, align 8
  %memberidx.i50.i218 = getelementptr inbounds %IntToken, ptr %494, i64 0, i32 2
  store i64 %522, ptr %memberidx.i50.i218, align 4
  br label %end.i221

end.i221:                                         ; preds = %false_block.i219, %true_block.i
  tail call void @free(ptr %490)
  tail call void @free(ptr nonnull %493)
  br label %common.ret

ifend11:                                          ; preds = %ifend8
  switch i8 %2, label %ifend89 [
    i8 58, label %if.entry12
    i8 59, label %if.entry15
    i8 44, label %if.entry18
    i8 43, label %if.entry21
    i8 45, label %if.entry24
    i8 42, label %if.entry27
    i8 37, label %if.entry30
    i8 94, label %if.entry33
    i8 47, label %if.entry36
    i8 40, label %if.entry42
    i8 41, label %if.entry45
    i8 123, label %if.entry48
    i8 125, label %if.entry51
    i8 91, label %if.entry54
    i8 93, label %if.entry57
    i8 13, label %if.entry60
    i8 10, label %if.entry60
    i8 39, label %if.entry63
    i8 63, label %if.entry66
    i8 38, label %if.entry69
    i8 61, label %if.entry72
    i8 33, label %if.entry75
    i8 62, label %if.entry78
    i8 60, label %if.entry81
    i8 46, label %if.entry84
    i8 0, label %if.entry87
  ]

if.entry12:                                       ; preds = %ifend11
  %523 = tail call ptr @malloc(i32 16)
  %524 = tail call ptr @malloc(i32 32)
  %memberidx.i222 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %525 = load i64, ptr %memberidx.i222, align 4
  %526 = add nsw i64 %525, 1
  %memberidx2.i223 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %527 = load i64, ptr %memberidx2.i223, align 4
  %528 = add i64 %527, -1
  %memberidx3.i224 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %529 = load i64, ptr %memberidx3.i224, align 4
  store i64 %525, ptr %524, align 4
  %memberidx1.i.i225 = getelementptr inbounds %FloRange, ptr %524, i64 0, i32 1
  store i64 %526, ptr %memberidx1.i.i225, align 4
  %memberidx2.i.i226 = getelementptr inbounds %FloRange, ptr %524, i64 0, i32 2
  store i64 %528, ptr %memberidx2.i.i226, align 4
  %memberidx3.i.i227 = getelementptr inbounds %FloRange, ptr %524, i64 0, i32 3
  store i64 %529, ptr %memberidx3.i.i227, align 4
  store i64 1, ptr %523, align 4
  %memberidx1.i228 = getelementptr inbounds %Token, ptr %523, i64 0, i32 1
  store ptr %524, ptr %memberidx1.i228, align 8
  br label %common.ret

if.entry15:                                       ; preds = %ifend11
  %530 = tail call ptr @malloc(i32 16)
  %531 = tail call ptr @malloc(i32 32)
  %memberidx.i229 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %532 = load i64, ptr %memberidx.i229, align 4
  %533 = add nsw i64 %532, 1
  %memberidx2.i230 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %534 = load i64, ptr %memberidx2.i230, align 4
  %535 = add i64 %534, -1
  %memberidx3.i231 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %536 = load i64, ptr %memberidx3.i231, align 4
  store i64 %532, ptr %531, align 4
  %memberidx1.i.i232 = getelementptr inbounds %FloRange, ptr %531, i64 0, i32 1
  store i64 %533, ptr %memberidx1.i.i232, align 4
  %memberidx2.i.i233 = getelementptr inbounds %FloRange, ptr %531, i64 0, i32 2
  store i64 %535, ptr %memberidx2.i.i233, align 4
  %memberidx3.i.i234 = getelementptr inbounds %FloRange, ptr %531, i64 0, i32 3
  store i64 %536, ptr %memberidx3.i.i234, align 4
  store i64 2, ptr %530, align 4
  %memberidx1.i235 = getelementptr inbounds %Token, ptr %530, i64 0, i32 1
  store ptr %531, ptr %memberidx1.i235, align 8
  br label %common.ret

if.entry18:                                       ; preds = %ifend11
  %537 = tail call ptr @malloc(i32 16)
  %538 = tail call ptr @malloc(i32 32)
  %memberidx.i236 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %539 = load i64, ptr %memberidx.i236, align 4
  %540 = add nsw i64 %539, 1
  %memberidx2.i237 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %541 = load i64, ptr %memberidx2.i237, align 4
  %542 = add i64 %541, -1
  %memberidx3.i238 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %543 = load i64, ptr %memberidx3.i238, align 4
  store i64 %539, ptr %538, align 4
  %memberidx1.i.i239 = getelementptr inbounds %FloRange, ptr %538, i64 0, i32 1
  store i64 %540, ptr %memberidx1.i.i239, align 4
  %memberidx2.i.i240 = getelementptr inbounds %FloRange, ptr %538, i64 0, i32 2
  store i64 %542, ptr %memberidx2.i.i240, align 4
  %memberidx3.i.i241 = getelementptr inbounds %FloRange, ptr %538, i64 0, i32 3
  store i64 %543, ptr %memberidx3.i.i241, align 4
  store i64 3, ptr %537, align 4
  %memberidx1.i242 = getelementptr inbounds %Token, ptr %537, i64 0, i32 1
  store ptr %538, ptr %memberidx1.i242, align 8
  br label %common.ret

if.entry21:                                       ; preds = %ifend11
  %memberidx.i.i243 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %544 = load i64, ptr %memberidx.i.i243, align 4
  %545 = add nsw i64 %544, 1
  %memberidx1.i.i244 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %546 = load ptr, ptr %memberidx1.i.i244, align 8
  %memberidx2.i.i245 = getelementptr inbounds %String, ptr %546, i64 0, i32 1
  %547 = load i64, ptr %memberidx2.i.i245, align 4
  %548 = icmp slt i64 %545, %547
  br i1 %548, label %if.entry.i.i246, label %ifend3.i

if.entry.i.i246:                                  ; preds = %if.entry21
  %549 = load ptr, ptr %546, align 8
  %550 = getelementptr inbounds i8, ptr %549, i64 %545
  %551 = load i8, ptr %550, align 1
  switch i8 %551, label %ifend3.i [
    i8 43, label %end.i.i254
    i8 61, label %end.i39.i270
  ]

end.i.i254:                                       ; preds = %if.entry.i.i246
  store i64 %545, ptr %memberidx.i.i243, align 4
  %552 = load ptr, ptr %546, align 8
  %553 = getelementptr inbounds i8, ptr %552, i64 %545
  %554 = load i8, ptr %553, align 1
  store i8 %554, ptr %0, align 1
  switch i8 %554, label %if.entry9.i.i260 [
    i8 10, label %if.entry.i17.i
    i8 0, label %Lexer_advance.exit.i261
  ]

if.entry.i17.i:                                   ; preds = %end.i.i254
  %memberidx5.i.i255 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i255, align 4
  %memberidx6.i.i256 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i261.sink.split

if.entry9.i.i260:                                 ; preds = %end.i.i254
  %memberidx12.i.i259 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i261.sink.split

Lexer_advance.exit.i261.sink.split:               ; preds = %if.entry.i17.i, %if.entry9.i.i260
  %memberidx12.i.i259.sink1283 = phi ptr [ %memberidx12.i.i259, %if.entry9.i.i260 ], [ %memberidx6.i.i256, %if.entry.i17.i ]
  %555 = load i64, ptr %memberidx12.i.i259.sink1283, align 4
  %556 = add nsw i64 %555, 1
  store i64 %556, ptr %memberidx12.i.i259.sink1283, align 4
  br label %Lexer_advance.exit.i261

Lexer_advance.exit.i261:                          ; preds = %Lexer_advance.exit.i261.sink.split, %end.i.i254
  %557 = tail call ptr @malloc(i32 16)
  %558 = tail call ptr @malloc(i32 32)
  %559 = load i64, ptr %memberidx.i.i243, align 4
  %560 = add nsw i64 %559, -1
  %561 = add nsw i64 %559, 1
  %memberidx2.i26.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %562 = load i64, ptr %memberidx2.i26.i, align 4
  %563 = add i64 %562, -2
  %memberidx3.i27.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %564 = load i64, ptr %memberidx3.i27.i, align 4
  store i64 %560, ptr %558, align 4
  %memberidx1.i.i28.i = getelementptr inbounds %FloRange, ptr %558, i64 0, i32 1
  store i64 %561, ptr %memberidx1.i.i28.i, align 4
  %memberidx2.i.i29.i = getelementptr inbounds %FloRange, ptr %558, i64 0, i32 2
  store i64 %563, ptr %memberidx2.i.i29.i, align 4
  %memberidx3.i.i30.i = getelementptr inbounds %FloRange, ptr %558, i64 0, i32 3
  store i64 %564, ptr %memberidx3.i.i30.i, align 4
  store i64 23, ptr %557, align 4
  %memberidx1.i31.i = getelementptr inbounds %Token, ptr %557, i64 0, i32 1
  store ptr %558, ptr %memberidx1.i31.i, align 8
  br label %common.ret

end.i39.i270:                                     ; preds = %if.entry.i.i246
  store i64 %545, ptr %memberidx.i.i243, align 4
  %565 = load ptr, ptr %546, align 8
  %566 = getelementptr inbounds i8, ptr %565, i64 %545
  %567 = load i8, ptr %566, align 1
  store i8 %567, ptr %0, align 1
  switch i8 %567, label %if.entry9.i46.i277 [
    i8 10, label %if.entry.i42.i273
    i8 0, label %Lexer_advance.exit47.i278
  ]

if.entry.i42.i273:                                ; preds = %end.i39.i270
  %memberidx5.i40.i271 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i40.i271, align 4
  %memberidx6.i41.i272 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit47.i278.sink.split

if.entry9.i46.i277:                               ; preds = %end.i39.i270
  %memberidx12.i45.i276 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit47.i278.sink.split

Lexer_advance.exit47.i278.sink.split:             ; preds = %if.entry.i42.i273, %if.entry9.i46.i277
  %memberidx12.i45.i276.sink1285 = phi ptr [ %memberidx12.i45.i276, %if.entry9.i46.i277 ], [ %memberidx6.i41.i272, %if.entry.i42.i273 ]
  %568 = load i64, ptr %memberidx12.i45.i276.sink1285, align 4
  %569 = add nsw i64 %568, 1
  store i64 %569, ptr %memberidx12.i45.i276.sink1285, align 4
  br label %Lexer_advance.exit47.i278

Lexer_advance.exit47.i278:                        ; preds = %Lexer_advance.exit47.i278.sink.split, %end.i39.i270
  %570 = tail call ptr @malloc(i32 16)
  %571 = tail call ptr @malloc(i32 32)
  %572 = load i64, ptr %memberidx.i.i243, align 4
  %573 = add nsw i64 %572, -1
  %574 = add nsw i64 %572, 1
  %memberidx2.i20.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %575 = load i64, ptr %memberidx2.i20.i, align 4
  %576 = add i64 %575, -2
  %memberidx3.i21.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %577 = load i64, ptr %memberidx3.i21.i, align 4
  store i64 %573, ptr %571, align 4
  %memberidx1.i.i22.i = getelementptr inbounds %FloRange, ptr %571, i64 0, i32 1
  store i64 %574, ptr %memberidx1.i.i22.i, align 4
  %memberidx2.i.i23.i = getelementptr inbounds %FloRange, ptr %571, i64 0, i32 2
  store i64 %576, ptr %memberidx2.i.i23.i, align 4
  %memberidx3.i.i24.i = getelementptr inbounds %FloRange, ptr %571, i64 0, i32 3
  store i64 %577, ptr %memberidx3.i.i24.i, align 4
  store i64 14, ptr %570, align 4
  %memberidx1.i18.i = getelementptr inbounds %Token, ptr %570, i64 0, i32 1
  store ptr %571, ptr %memberidx1.i18.i, align 8
  br label %common.ret

ifend3.i:                                         ; preds = %if.entry.i.i246, %if.entry21
  %578 = tail call ptr @malloc(i32 16)
  %579 = tail call ptr @malloc(i32 32)
  %580 = load i64, ptr %memberidx.i.i243, align 4
  %581 = add nsw i64 %580, 1
  %memberidx2.i12.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %582 = load i64, ptr %memberidx2.i12.i, align 4
  %583 = add i64 %582, -1
  %memberidx3.i.i279 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %584 = load i64, ptr %memberidx3.i.i279, align 4
  store i64 %580, ptr %579, align 4
  %memberidx1.i.i.i280 = getelementptr inbounds %FloRange, ptr %579, i64 0, i32 1
  store i64 %581, ptr %memberidx1.i.i.i280, align 4
  %memberidx2.i.i.i281 = getelementptr inbounds %FloRange, ptr %579, i64 0, i32 2
  store i64 %583, ptr %memberidx2.i.i.i281, align 4
  %memberidx3.i.i.i282 = getelementptr inbounds %FloRange, ptr %579, i64 0, i32 3
  store i64 %584, ptr %memberidx3.i.i.i282, align 4
  store i64 6, ptr %578, align 4
  %memberidx1.i10.i = getelementptr inbounds %Token, ptr %578, i64 0, i32 1
  store ptr %579, ptr %memberidx1.i10.i, align 8
  br label %common.ret

if.entry24:                                       ; preds = %ifend11
  %memberidx.i.i283 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %585 = load i64, ptr %memberidx.i.i283, align 4
  %586 = add nsw i64 %585, 1
  %memberidx1.i.i284 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %587 = load ptr, ptr %memberidx1.i.i284, align 8
  %memberidx2.i.i285 = getelementptr inbounds %String, ptr %587, i64 0, i32 1
  %588 = load i64, ptr %memberidx2.i.i285, align 4
  %589 = icmp slt i64 %586, %588
  br i1 %589, label %if.entry.i.i286, label %ifend6.i

if.entry.i.i286:                                  ; preds = %if.entry24
  %590 = load ptr, ptr %587, align 8
  %591 = getelementptr inbounds i8, ptr %590, i64 %586
  %592 = load i8, ptr %591, align 1
  switch i8 %592, label %ifend6.i [
    i8 45, label %end.i.i294
    i8 61, label %end.i80.i
    i8 62, label %if.entry4.i
  ]

end.i.i294:                                       ; preds = %if.entry.i.i286
  store i64 %586, ptr %memberidx.i.i283, align 4
  %593 = load ptr, ptr %587, align 8
  %594 = getelementptr inbounds i8, ptr %593, i64 %586
  %595 = load i8, ptr %594, align 1
  store i8 %595, ptr %0, align 1
  switch i8 %595, label %if.entry9.i.i300 [
    i8 10, label %if.entry.i23.i
    i8 0, label %Lexer_advance.exit.i301
  ]

if.entry.i23.i:                                   ; preds = %end.i.i294
  %memberidx5.i.i295 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i295, align 4
  %memberidx6.i.i296 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i301.sink.split

if.entry9.i.i300:                                 ; preds = %end.i.i294
  %memberidx12.i.i299 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i301.sink.split

Lexer_advance.exit.i301.sink.split:               ; preds = %if.entry.i23.i, %if.entry9.i.i300
  %memberidx12.i.i299.sink1287 = phi ptr [ %memberidx12.i.i299, %if.entry9.i.i300 ], [ %memberidx6.i.i296, %if.entry.i23.i ]
  %596 = load i64, ptr %memberidx12.i.i299.sink1287, align 4
  %597 = add nsw i64 %596, 1
  store i64 %597, ptr %memberidx12.i.i299.sink1287, align 4
  br label %Lexer_advance.exit.i301

Lexer_advance.exit.i301:                          ; preds = %Lexer_advance.exit.i301.sink.split, %end.i.i294
  %598 = tail call ptr @malloc(i32 16)
  %599 = tail call ptr @malloc(i32 32)
  %600 = load i64, ptr %memberidx.i.i283, align 4
  %601 = add nsw i64 %600, -1
  %602 = add nsw i64 %600, 1
  %memberidx2.i32.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %603 = load i64, ptr %memberidx2.i32.i, align 4
  %604 = add i64 %603, -2
  %memberidx3.i33.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %605 = load i64, ptr %memberidx3.i33.i, align 4
  store i64 %601, ptr %599, align 4
  %memberidx1.i.i34.i = getelementptr inbounds %FloRange, ptr %599, i64 0, i32 1
  store i64 %602, ptr %memberidx1.i.i34.i, align 4
  %memberidx2.i.i35.i = getelementptr inbounds %FloRange, ptr %599, i64 0, i32 2
  store i64 %604, ptr %memberidx2.i.i35.i, align 4
  %memberidx3.i.i36.i = getelementptr inbounds %FloRange, ptr %599, i64 0, i32 3
  store i64 %605, ptr %memberidx3.i.i36.i, align 4
  store i64 24, ptr %598, align 4
  %memberidx1.i37.i = getelementptr inbounds %Token, ptr %598, i64 0, i32 1
  store ptr %599, ptr %memberidx1.i37.i, align 8
  br label %common.ret

end.i80.i:                                        ; preds = %if.entry.i.i286
  store i64 %586, ptr %memberidx.i.i283, align 4
  %606 = load ptr, ptr %587, align 8
  %607 = getelementptr inbounds i8, ptr %606, i64 %586
  %608 = load i8, ptr %607, align 1
  store i8 %608, ptr %0, align 1
  switch i8 %608, label %if.entry9.i87.i [
    i8 10, label %if.entry.i83.i
    i8 0, label %Lexer_advance.exit88.i
  ]

if.entry.i83.i:                                   ; preds = %end.i80.i
  %memberidx5.i81.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i, align 4
  %memberidx6.i82.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i.sink.split

if.entry9.i87.i:                                  ; preds = %end.i80.i
  %memberidx12.i86.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i.sink.split

Lexer_advance.exit88.i.sink.split:                ; preds = %if.entry.i83.i, %if.entry9.i87.i
  %memberidx12.i86.i.sink1289 = phi ptr [ %memberidx12.i86.i, %if.entry9.i87.i ], [ %memberidx6.i82.i, %if.entry.i83.i ]
  %609 = load i64, ptr %memberidx12.i86.i.sink1289, align 4
  %610 = add nsw i64 %609, 1
  store i64 %610, ptr %memberidx12.i86.i.sink1289, align 4
  br label %Lexer_advance.exit88.i

Lexer_advance.exit88.i:                           ; preds = %Lexer_advance.exit88.i.sink.split, %end.i80.i
  %611 = tail call ptr @malloc(i32 16)
  %612 = tail call ptr @malloc(i32 32)
  %613 = load i64, ptr %memberidx.i.i283, align 4
  %614 = add nsw i64 %613, -1
  %615 = add nsw i64 %613, 1
  %memberidx2.i62.i308 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %616 = load i64, ptr %memberidx2.i62.i308, align 4
  %617 = add i64 %616, -2
  %memberidx3.i63.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %618 = load i64, ptr %memberidx3.i63.i, align 4
  store i64 %614, ptr %612, align 4
  %memberidx1.i.i64.i = getelementptr inbounds %FloRange, ptr %612, i64 0, i32 1
  store i64 %615, ptr %memberidx1.i.i64.i, align 4
  %memberidx2.i.i65.i = getelementptr inbounds %FloRange, ptr %612, i64 0, i32 2
  store i64 %617, ptr %memberidx2.i.i65.i, align 4
  %memberidx3.i.i66.i = getelementptr inbounds %FloRange, ptr %612, i64 0, i32 3
  store i64 %618, ptr %memberidx3.i.i66.i, align 4
  store i64 13, ptr %611, align 4
  %memberidx1.i60.i = getelementptr inbounds %Token, ptr %611, i64 0, i32 1
  store ptr %612, ptr %memberidx1.i60.i, align 8
  br label %common.ret

if.entry4.i:                                      ; preds = %if.entry.i.i286
  %.not1151 = icmp slt i64 %585, %588
  br i1 %.not1151, label %end.i45.i, label %end.i45.i.thread

end.i45.i.thread:                                 ; preds = %if.entry4.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit53.i

end.i45.i:                                        ; preds = %if.entry4.i
  store i64 %586, ptr %memberidx.i.i283, align 4
  %619 = load ptr, ptr %587, align 8
  %620 = getelementptr inbounds i8, ptr %619, i64 %586
  %621 = load i8, ptr %620, align 1
  store i8 %621, ptr %0, align 1
  switch i8 %621, label %if.entry9.i52.i [
    i8 10, label %if.entry.i48.i309
    i8 0, label %Lexer_advance.exit53.i
  ]

if.entry.i48.i309:                                ; preds = %end.i45.i
  %memberidx5.i46.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i, align 4
  %memberidx6.i47.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %622 = load i64, ptr %memberidx6.i47.i, align 4
  %623 = add nsw i64 %622, 1
  store i64 %623, ptr %memberidx6.i47.i, align 4
  br label %Lexer_advance.exit53.i

if.entry9.i52.i:                                  ; preds = %end.i45.i
  %memberidx12.i51.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %624 = load i64, ptr %memberidx12.i51.i, align 4
  %625 = add nsw i64 %624, 1
  store i64 %625, ptr %memberidx12.i51.i, align 4
  br label %Lexer_advance.exit53.i

Lexer_advance.exit53.i:                           ; preds = %end.i45.i.thread, %end.i45.i, %if.entry9.i52.i, %if.entry.i48.i309
  %626 = tail call ptr @malloc(i32 16)
  %627 = tail call ptr @malloc(i32 32)
  %628 = load i64, ptr %memberidx.i.i283, align 4
  %629 = add nsw i64 %628, -1
  %630 = add nsw i64 %628, 1
  %memberidx2.i26.i311 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %631 = load i64, ptr %memberidx2.i26.i311, align 4
  %632 = add i64 %631, -2
  %memberidx3.i27.i312 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %633 = load i64, ptr %memberidx3.i27.i312, align 4
  store i64 %629, ptr %627, align 4
  %memberidx1.i.i28.i313 = getelementptr inbounds %FloRange, ptr %627, i64 0, i32 1
  store i64 %630, ptr %memberidx1.i.i28.i313, align 4
  %memberidx2.i.i29.i314 = getelementptr inbounds %FloRange, ptr %627, i64 0, i32 2
  store i64 %632, ptr %memberidx2.i.i29.i314, align 4
  %memberidx3.i.i30.i315 = getelementptr inbounds %FloRange, ptr %627, i64 0, i32 3
  store i64 %633, ptr %memberidx3.i.i30.i315, align 4
  store i64 45, ptr %626, align 4
  %memberidx1.i24.i = getelementptr inbounds %Token, ptr %626, i64 0, i32 1
  store ptr %627, ptr %memberidx1.i24.i, align 8
  br label %common.ret

ifend6.i:                                         ; preds = %if.entry.i.i286, %if.entry24
  %634 = tail call ptr @malloc(i32 16)
  %635 = tail call ptr @malloc(i32 32)
  %636 = load i64, ptr %memberidx.i.i283, align 4
  %637 = add nsw i64 %636, -1
  %638 = add nsw i64 %636, 1
  %memberidx2.i18.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %639 = load i64, ptr %memberidx2.i18.i, align 4
  %640 = add i64 %639, -2
  %memberidx3.i.i316 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %641 = load i64, ptr %memberidx3.i.i316, align 4
  store i64 %637, ptr %635, align 4
  %memberidx1.i.i.i317 = getelementptr inbounds %FloRange, ptr %635, i64 0, i32 1
  store i64 %638, ptr %memberidx1.i.i.i317, align 4
  %memberidx2.i.i.i318 = getelementptr inbounds %FloRange, ptr %635, i64 0, i32 2
  store i64 %640, ptr %memberidx2.i.i.i318, align 4
  %memberidx3.i.i.i319 = getelementptr inbounds %FloRange, ptr %635, i64 0, i32 3
  store i64 %641, ptr %memberidx3.i.i.i319, align 4
  store i64 5, ptr %634, align 4
  %memberidx1.i16.i = getelementptr inbounds %Token, ptr %634, i64 0, i32 1
  store ptr %635, ptr %memberidx1.i16.i, align 8
  br label %common.ret

if.entry27:                                       ; preds = %ifend11
  %memberidx.i.i320 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %642 = load i64, ptr %memberidx.i.i320, align 4
  %643 = add nsw i64 %642, 1
  %memberidx1.i.i321 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %644 = load ptr, ptr %memberidx1.i.i321, align 8
  %memberidx2.i.i322 = getelementptr inbounds %String, ptr %644, i64 0, i32 1
  %645 = load i64, ptr %memberidx2.i.i322, align 4
  %646 = icmp slt i64 %643, %645
  br i1 %646, label %if.entry.i.i323, label %ifend3.i383

if.entry.i.i323:                                  ; preds = %if.entry27
  %647 = load ptr, ptr %644, align 8
  %648 = getelementptr inbounds i8, ptr %647, i64 %643
  %649 = load i8, ptr %648, align 1
  switch i8 %649, label %ifend3.i383 [
    i8 61, label %end.i.i335
    i8 42, label %end.i80.i366
  ]

end.i.i335:                                       ; preds = %if.entry.i.i323
  store i64 %643, ptr %memberidx.i.i320, align 4
  %650 = load ptr, ptr %644, align 8
  %651 = getelementptr inbounds i8, ptr %650, i64 %643
  %652 = load i8, ptr %651, align 1
  store i8 %652, ptr %0, align 1
  switch i8 %652, label %if.entry9.i.i342 [
    i8 10, label %if.entry.i23.i338
    i8 0, label %Lexer_advance.exit.i350
  ]

if.entry.i23.i338:                                ; preds = %end.i.i335
  %memberidx5.i.i336 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i336, align 4
  %memberidx6.i.i337 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i350.sink.split

if.entry9.i.i342:                                 ; preds = %end.i.i335
  %memberidx12.i.i341 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i350.sink.split

Lexer_advance.exit.i350.sink.split:               ; preds = %if.entry.i23.i338, %if.entry9.i.i342
  %memberidx12.i.i341.sink1291 = phi ptr [ %memberidx12.i.i341, %if.entry9.i.i342 ], [ %memberidx6.i.i337, %if.entry.i23.i338 ]
  %653 = load i64, ptr %memberidx12.i.i341.sink1291, align 4
  %654 = add nsw i64 %653, 1
  store i64 %654, ptr %memberidx12.i.i341.sink1291, align 4
  br label %Lexer_advance.exit.i350

Lexer_advance.exit.i350:                          ; preds = %Lexer_advance.exit.i350.sink.split, %end.i.i335
  %655 = tail call ptr @malloc(i32 16)
  %656 = tail call ptr @malloc(i32 32)
  %657 = load i64, ptr %memberidx.i.i320, align 4
  %658 = add nsw i64 %657, -1
  %659 = add nsw i64 %657, 1
  %memberidx2.i32.i344 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %660 = load i64, ptr %memberidx2.i32.i344, align 4
  %661 = add i64 %660, -2
  %memberidx3.i33.i345 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %662 = load i64, ptr %memberidx3.i33.i345, align 4
  store i64 %658, ptr %656, align 4
  %memberidx1.i.i34.i346 = getelementptr inbounds %FloRange, ptr %656, i64 0, i32 1
  store i64 %659, ptr %memberidx1.i.i34.i346, align 4
  %memberidx2.i.i35.i347 = getelementptr inbounds %FloRange, ptr %656, i64 0, i32 2
  store i64 %661, ptr %memberidx2.i.i35.i347, align 4
  %memberidx3.i.i36.i348 = getelementptr inbounds %FloRange, ptr %656, i64 0, i32 3
  store i64 %662, ptr %memberidx3.i.i36.i348, align 4
  store i64 12, ptr %655, align 4
  %memberidx1.i37.i349 = getelementptr inbounds %Token, ptr %655, i64 0, i32 1
  store ptr %656, ptr %memberidx1.i37.i349, align 8
  br label %common.ret

end.i80.i366:                                     ; preds = %if.entry.i.i323
  store i64 %643, ptr %memberidx.i.i320, align 4
  %663 = load ptr, ptr %644, align 8
  %664 = getelementptr inbounds i8, ptr %663, i64 %643
  %665 = load i8, ptr %664, align 1
  store i8 %665, ptr %0, align 1
  switch i8 %665, label %if.entry9.i87.i373 [
    i8 10, label %if.entry.i83.i369
    i8 0, label %Lexer_advance.exit88.i377
  ]

if.entry.i83.i369:                                ; preds = %end.i80.i366
  %memberidx5.i81.i367 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i367, align 4
  %memberidx6.i82.i368 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i377.sink.split

if.entry9.i87.i373:                               ; preds = %end.i80.i366
  %memberidx12.i86.i372 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i377.sink.split

Lexer_advance.exit88.i377.sink.split:             ; preds = %if.entry.i83.i369, %if.entry9.i87.i373
  %memberidx12.i86.i372.sink1293 = phi ptr [ %memberidx12.i86.i372, %if.entry9.i87.i373 ], [ %memberidx6.i82.i368, %if.entry.i83.i369 ]
  %666 = load i64, ptr %memberidx12.i86.i372.sink1293, align 4
  %667 = add nsw i64 %666, 1
  store i64 %667, ptr %memberidx12.i86.i372.sink1293, align 4
  br label %Lexer_advance.exit88.i377

Lexer_advance.exit88.i377:                        ; preds = %Lexer_advance.exit88.i377.sink.split, %end.i80.i366
  %668 = add nsw i64 %642, 2
  %669 = load i64, ptr %memberidx2.i.i322, align 4
  %670 = icmp slt i64 %668, %669
  br i1 %670, label %if.entry.i71.i378, label %ifend6.i415

if.entry.i71.i378:                                ; preds = %Lexer_advance.exit88.i377
  %671 = load ptr, ptr %644, align 8
  %672 = getelementptr inbounds i8, ptr %671, i64 %668
  %673 = load i8, ptr %672, align 1
  %phi.cmp1145 = icmp eq i8 %673, 61
  br i1 %phi.cmp1145, label %end.i45.i392, label %ifend6.i415

ifend3.i383:                                      ; preds = %if.entry.i.i323, %if.entry27
  %674 = tail call ptr @malloc(i32 16)
  %675 = tail call ptr @malloc(i32 32)
  %676 = load i64, ptr %memberidx.i.i320, align 4
  %677 = add nsw i64 %676, 1
  %memberidx2.i56.i381 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %678 = load i64, ptr %memberidx2.i56.i381, align 4
  %679 = add i64 %678, -1
  %memberidx3.i57.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %680 = load i64, ptr %memberidx3.i57.i, align 4
  store i64 %676, ptr %675, align 4
  %memberidx1.i.i58.i382 = getelementptr inbounds %FloRange, ptr %675, i64 0, i32 1
  store i64 %677, ptr %memberidx1.i.i58.i382, align 4
  %memberidx2.i.i59.i = getelementptr inbounds %FloRange, ptr %675, i64 0, i32 2
  store i64 %679, ptr %memberidx2.i.i59.i, align 4
  %memberidx3.i.i60.i = getelementptr inbounds %FloRange, ptr %675, i64 0, i32 3
  store i64 %680, ptr %memberidx3.i.i60.i, align 4
  store i64 4, ptr %674, align 4
  %memberidx1.i54.i = getelementptr inbounds %Token, ptr %674, i64 0, i32 1
  store ptr %675, ptr %memberidx1.i54.i, align 8
  br label %common.ret

end.i45.i392:                                     ; preds = %if.entry.i71.i378
  store i64 %668, ptr %memberidx.i.i320, align 4
  %681 = load ptr, ptr %644, align 8
  %682 = getelementptr inbounds i8, ptr %681, i64 %668
  %683 = load i8, ptr %682, align 1
  store i8 %683, ptr %0, align 1
  switch i8 %683, label %if.entry9.i52.i399 [
    i8 10, label %if.entry.i48.i395
    i8 0, label %Lexer_advance.exit53.i407
  ]

if.entry.i48.i395:                                ; preds = %end.i45.i392
  %memberidx5.i46.i393 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i393, align 4
  %memberidx6.i47.i394 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit53.i407.sink.split

if.entry9.i52.i399:                               ; preds = %end.i45.i392
  %memberidx12.i51.i398 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit53.i407.sink.split

Lexer_advance.exit53.i407.sink.split:             ; preds = %if.entry.i48.i395, %if.entry9.i52.i399
  %memberidx12.i51.i398.sink1295 = phi ptr [ %memberidx12.i51.i398, %if.entry9.i52.i399 ], [ %memberidx6.i47.i394, %if.entry.i48.i395 ]
  %684 = load i64, ptr %memberidx12.i51.i398.sink1295, align 4
  %685 = add nsw i64 %684, 1
  store i64 %685, ptr %memberidx12.i51.i398.sink1295, align 4
  br label %Lexer_advance.exit53.i407

Lexer_advance.exit53.i407:                        ; preds = %Lexer_advance.exit53.i407.sink.split, %end.i45.i392
  %686 = tail call ptr @malloc(i32 16)
  %687 = tail call ptr @malloc(i32 32)
  %688 = load i64, ptr %memberidx.i.i320, align 4
  %689 = add nsw i64 %688, -2
  %690 = add nsw i64 %688, 1
  %memberidx2.i26.i401 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %691 = load i64, ptr %memberidx2.i26.i401, align 4
  %692 = add i64 %691, -3
  %memberidx3.i27.i402 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %693 = load i64, ptr %memberidx3.i27.i402, align 4
  store i64 %689, ptr %687, align 4
  %memberidx1.i.i28.i403 = getelementptr inbounds %FloRange, ptr %687, i64 0, i32 1
  store i64 %690, ptr %memberidx1.i.i28.i403, align 4
  %memberidx2.i.i29.i404 = getelementptr inbounds %FloRange, ptr %687, i64 0, i32 2
  store i64 %692, ptr %memberidx2.i.i29.i404, align 4
  %memberidx3.i.i30.i405 = getelementptr inbounds %FloRange, ptr %687, i64 0, i32 3
  store i64 %693, ptr %memberidx3.i.i30.i405, align 4
  store i64 17, ptr %686, align 4
  %memberidx1.i24.i406 = getelementptr inbounds %Token, ptr %686, i64 0, i32 1
  store ptr %687, ptr %memberidx1.i24.i406, align 8
  br label %common.ret

ifend6.i415:                                      ; preds = %Lexer_advance.exit88.i377, %if.entry.i71.i378
  %694 = tail call ptr @malloc(i32 16)
  %695 = tail call ptr @malloc(i32 32)
  %696 = load i64, ptr %memberidx.i.i320, align 4
  %697 = add nsw i64 %696, -1
  %698 = add nsw i64 %696, 1
  %memberidx2.i18.i409 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %699 = load i64, ptr %memberidx2.i18.i409, align 4
  %700 = add i64 %699, -2
  %memberidx3.i.i410 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %701 = load i64, ptr %memberidx3.i.i410, align 4
  store i64 %697, ptr %695, align 4
  %memberidx1.i.i.i411 = getelementptr inbounds %FloRange, ptr %695, i64 0, i32 1
  store i64 %698, ptr %memberidx1.i.i.i411, align 4
  %memberidx2.i.i.i412 = getelementptr inbounds %FloRange, ptr %695, i64 0, i32 2
  store i64 %700, ptr %memberidx2.i.i.i412, align 4
  %memberidx3.i.i.i413 = getelementptr inbounds %FloRange, ptr %695, i64 0, i32 3
  store i64 %701, ptr %memberidx3.i.i.i413, align 4
  store i64 11, ptr %694, align 4
  %memberidx1.i16.i414 = getelementptr inbounds %Token, ptr %694, i64 0, i32 1
  store ptr %695, ptr %memberidx1.i16.i414, align 8
  br label %common.ret

if.entry30:                                       ; preds = %ifend11
  %memberidx.i.i416 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %702 = load i64, ptr %memberidx.i.i416, align 4
  %703 = add nsw i64 %702, 1
  %memberidx1.i.i417 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %704 = load ptr, ptr %memberidx1.i.i417, align 8
  %memberidx2.i.i418 = getelementptr inbounds %String, ptr %704, i64 0, i32 1
  %705 = load i64, ptr %memberidx2.i.i418, align 4
  %706 = icmp slt i64 %703, %705
  br i1 %706, label %if.entry.i.i419, label %ifend.i439

if.entry.i.i419:                                  ; preds = %if.entry30
  %707 = load ptr, ptr %704, align 8
  %708 = getelementptr inbounds i8, ptr %707, i64 %703
  %709 = load i8, ptr %708, align 1
  %phi.cmp1140 = icmp eq i8 %709, 61
  br i1 %phi.cmp1140, label %end.i.i427, label %ifend.i439

end.i.i427:                                       ; preds = %if.entry.i.i419
  store i64 %703, ptr %memberidx.i.i416, align 4
  %710 = load ptr, ptr %704, align 8
  %711 = getelementptr inbounds i8, ptr %710, i64 %703
  %712 = load i8, ptr %711, align 1
  store i8 %712, ptr %0, align 1
  switch i8 %712, label %if.entry9.i.i433 [
    i8 10, label %if.entry.i11.i
    i8 0, label %Lexer_advance.exit.i434
  ]

if.entry.i11.i:                                   ; preds = %end.i.i427
  %memberidx5.i.i428 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i428, align 4
  %memberidx6.i.i429 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i434.sink.split

if.entry9.i.i433:                                 ; preds = %end.i.i427
  %memberidx12.i.i432 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i434.sink.split

Lexer_advance.exit.i434.sink.split:               ; preds = %if.entry.i11.i, %if.entry9.i.i433
  %memberidx12.i.i432.sink1297 = phi ptr [ %memberidx12.i.i432, %if.entry9.i.i433 ], [ %memberidx6.i.i429, %if.entry.i11.i ]
  %713 = load i64, ptr %memberidx12.i.i432.sink1297, align 4
  %714 = add nsw i64 %713, 1
  store i64 %714, ptr %memberidx12.i.i432.sink1297, align 4
  br label %Lexer_advance.exit.i434

Lexer_advance.exit.i434:                          ; preds = %Lexer_advance.exit.i434.sink.split, %end.i.i427
  %715 = tail call ptr @malloc(i32 16)
  %716 = tail call ptr @malloc(i32 32)
  %717 = load i64, ptr %memberidx.i.i416, align 4
  %718 = add nsw i64 %717, -1
  %719 = add nsw i64 %717, 1
  %memberidx2.i14.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %720 = load i64, ptr %memberidx2.i14.i, align 4
  %721 = add i64 %720, -2
  %memberidx3.i15.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %722 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %718, ptr %716, align 4
  %memberidx1.i.i16.i = getelementptr inbounds %FloRange, ptr %716, i64 0, i32 1
  store i64 %719, ptr %memberidx1.i.i16.i, align 4
  %memberidx2.i.i17.i = getelementptr inbounds %FloRange, ptr %716, i64 0, i32 2
  store i64 %721, ptr %memberidx2.i.i17.i, align 4
  %memberidx3.i.i18.i = getelementptr inbounds %FloRange, ptr %716, i64 0, i32 3
  store i64 %722, ptr %memberidx3.i.i18.i, align 4
  store i64 16, ptr %715, align 4
  %memberidx1.i12.i = getelementptr inbounds %Token, ptr %715, i64 0, i32 1
  store ptr %716, ptr %memberidx1.i12.i, align 8
  br label %common.ret

ifend.i439:                                       ; preds = %if.entry30, %if.entry.i.i419
  %723 = tail call ptr @malloc(i32 16)
  %724 = tail call ptr @malloc(i32 32)
  %725 = load i64, ptr %memberidx.i.i416, align 4
  %726 = add nsw i64 %725, 1
  %memberidx2.i6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %727 = load i64, ptr %memberidx2.i6.i, align 4
  %728 = add i64 %727, -1
  %memberidx3.i.i435 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %729 = load i64, ptr %memberidx3.i.i435, align 4
  store i64 %725, ptr %724, align 4
  %memberidx1.i.i.i436 = getelementptr inbounds %FloRange, ptr %724, i64 0, i32 1
  store i64 %726, ptr %memberidx1.i.i.i436, align 4
  %memberidx2.i.i.i437 = getelementptr inbounds %FloRange, ptr %724, i64 0, i32 2
  store i64 %728, ptr %memberidx2.i.i.i437, align 4
  %memberidx3.i.i.i438 = getelementptr inbounds %FloRange, ptr %724, i64 0, i32 3
  store i64 %729, ptr %memberidx3.i.i.i438, align 4
  store i64 10, ptr %723, align 4
  %memberidx1.i4.i = getelementptr inbounds %Token, ptr %723, i64 0, i32 1
  store ptr %724, ptr %memberidx1.i4.i, align 8
  br label %common.ret

if.entry33:                                       ; preds = %ifend11
  %memberidx.i.i440 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %730 = load i64, ptr %memberidx.i.i440, align 4
  %731 = add nsw i64 %730, 1
  %memberidx1.i.i441 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %732 = load ptr, ptr %memberidx1.i.i441, align 8
  %memberidx2.i.i442 = getelementptr inbounds %String, ptr %732, i64 0, i32 1
  %733 = load i64, ptr %memberidx2.i.i442, align 4
  %734 = icmp slt i64 %731, %733
  br i1 %734, label %if.entry.i.i443, label %ifend.i478

if.entry.i.i443:                                  ; preds = %if.entry33
  %735 = load ptr, ptr %732, align 8
  %736 = getelementptr inbounds i8, ptr %735, i64 %731
  %737 = load i8, ptr %736, align 1
  %phi.cmp1138 = icmp eq i8 %737, 61
  br i1 %phi.cmp1138, label %end.i.i455, label %ifend.i478

end.i.i455:                                       ; preds = %if.entry.i.i443
  store i64 %731, ptr %memberidx.i.i440, align 4
  %738 = load ptr, ptr %732, align 8
  %739 = getelementptr inbounds i8, ptr %738, i64 %731
  %740 = load i8, ptr %739, align 1
  store i8 %740, ptr %0, align 1
  switch i8 %740, label %if.entry9.i.i462 [
    i8 10, label %if.entry.i11.i458
    i8 0, label %Lexer_advance.exit.i470
  ]

if.entry.i11.i458:                                ; preds = %end.i.i455
  %memberidx5.i.i456 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i456, align 4
  %memberidx6.i.i457 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i470.sink.split

if.entry9.i.i462:                                 ; preds = %end.i.i455
  %memberidx12.i.i461 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i470.sink.split

Lexer_advance.exit.i470.sink.split:               ; preds = %if.entry.i11.i458, %if.entry9.i.i462
  %memberidx12.i.i461.sink1299 = phi ptr [ %memberidx12.i.i461, %if.entry9.i.i462 ], [ %memberidx6.i.i457, %if.entry.i11.i458 ]
  %741 = load i64, ptr %memberidx12.i.i461.sink1299, align 4
  %742 = add nsw i64 %741, 1
  store i64 %742, ptr %memberidx12.i.i461.sink1299, align 4
  br label %Lexer_advance.exit.i470

Lexer_advance.exit.i470:                          ; preds = %Lexer_advance.exit.i470.sink.split, %end.i.i455
  %743 = tail call ptr @malloc(i32 16)
  %744 = tail call ptr @malloc(i32 32)
  %745 = load i64, ptr %memberidx.i.i440, align 4
  %746 = add nsw i64 %745, -1
  %747 = add nsw i64 %745, 1
  %memberidx2.i14.i464 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %748 = load i64, ptr %memberidx2.i14.i464, align 4
  %749 = add i64 %748, -2
  %memberidx3.i15.i465 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %750 = load i64, ptr %memberidx3.i15.i465, align 4
  store i64 %746, ptr %744, align 4
  %memberidx1.i.i16.i466 = getelementptr inbounds %FloRange, ptr %744, i64 0, i32 1
  store i64 %747, ptr %memberidx1.i.i16.i466, align 4
  %memberidx2.i.i17.i467 = getelementptr inbounds %FloRange, ptr %744, i64 0, i32 2
  store i64 %749, ptr %memberidx2.i.i17.i467, align 4
  %memberidx3.i.i18.i468 = getelementptr inbounds %FloRange, ptr %744, i64 0, i32 3
  store i64 %750, ptr %memberidx3.i.i18.i468, align 4
  store i64 20, ptr %743, align 4
  %memberidx1.i12.i469 = getelementptr inbounds %Token, ptr %743, i64 0, i32 1
  store ptr %744, ptr %memberidx1.i12.i469, align 8
  br label %common.ret

ifend.i478:                                       ; preds = %if.entry33, %if.entry.i.i443
  %751 = tail call ptr @malloc(i32 16)
  %752 = tail call ptr @malloc(i32 32)
  %753 = load i64, ptr %memberidx.i.i440, align 4
  %754 = add nsw i64 %753, 1
  %memberidx2.i6.i472 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %755 = load i64, ptr %memberidx2.i6.i472, align 4
  %756 = add i64 %755, -1
  %memberidx3.i.i473 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %757 = load i64, ptr %memberidx3.i.i473, align 4
  store i64 %753, ptr %752, align 4
  %memberidx1.i.i.i474 = getelementptr inbounds %FloRange, ptr %752, i64 0, i32 1
  store i64 %754, ptr %memberidx1.i.i.i474, align 4
  %memberidx2.i.i.i475 = getelementptr inbounds %FloRange, ptr %752, i64 0, i32 2
  store i64 %756, ptr %memberidx2.i.i.i475, align 4
  %memberidx3.i.i.i476 = getelementptr inbounds %FloRange, ptr %752, i64 0, i32 3
  store i64 %757, ptr %memberidx3.i.i.i476, align 4
  store i64 51, ptr %751, align 4
  %memberidx1.i4.i477 = getelementptr inbounds %Token, ptr %751, i64 0, i32 1
  store ptr %752, ptr %memberidx1.i4.i477, align 8
  br label %common.ret

if.entry36:                                       ; preds = %ifend11
  %memberidx.i.i479 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %758 = load i64, ptr %memberidx.i.i479, align 4
  %759 = add nsw i64 %758, 1
  %memberidx1.i.i480 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %760 = load ptr, ptr %memberidx1.i.i480, align 8
  %memberidx2.i.i481 = getelementptr inbounds %String, ptr %760, i64 0, i32 1
  %761 = load i64, ptr %memberidx2.i.i481, align 4
  %762 = icmp slt i64 %759, %761
  br i1 %762, label %Lexer_peek.exit.i484, label %ifend.i567

Lexer_peek.exit.i484:                             ; preds = %if.entry36
  %763 = load ptr, ptr %760, align 8
  %764 = getelementptr inbounds i8, ptr %763, i64 %759
  %765 = load i8, ptr %764, align 1
  switch i8 %765, label %ifend.i567 [
    i8 42, label %end.i142.i
    i8 47, label %end.i54.i
    i8 61, label %if.entry.i539
  ]

end.i142.i:                                       ; preds = %Lexer_peek.exit.i484
  store i64 %759, ptr %memberidx.i.i479, align 4
  %766 = load ptr, ptr %760, align 8
  %767 = getelementptr inbounds i8, ptr %766, i64 %759
  %768 = load i8, ptr %767, align 1
  store i8 %768, ptr %0, align 1
  switch i8 %768, label %if.entry9.i149.i [
    i8 10, label %if.entry.i145.i
    i8 0, label %Lexer_advance.exit150.i
  ]

if.entry.i145.i:                                  ; preds = %end.i142.i
  %memberidx5.i143.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i143.i, align 4
  %memberidx6.i144.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit150.i.sink.split

if.entry9.i149.i:                                 ; preds = %end.i142.i
  %memberidx12.i148.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit150.i.sink.split

Lexer_advance.exit150.i.sink.split:               ; preds = %if.entry.i145.i, %if.entry9.i149.i
  %memberidx12.i148.i.sink1301 = phi ptr [ %memberidx12.i148.i, %if.entry9.i149.i ], [ %memberidx6.i144.i, %if.entry.i145.i ]
  %769 = load i64, ptr %memberidx12.i148.i.sink1301, align 4
  %770 = add nsw i64 %769, 1
  store i64 %770, ptr %memberidx12.i148.i.sink1301, align 4
  br label %Lexer_advance.exit150.i

Lexer_advance.exit150.i:                          ; preds = %Lexer_advance.exit150.i.sink.split, %end.i142.i
  %771 = load i64, ptr %memberidx2.i.i481, align 4
  %.not1133 = icmp slt i64 %759, %771
  br i1 %.not1133, label %while.entry.i488.preheader, label %while.end.i491

while.entry.i488.preheader:                       ; preds = %Lexer_advance.exit150.i
  %memberidx5.i74.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i75.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i488

while.entry.i488:                                 ; preds = %while.entry.i488.preheader, %Lexer_advance.exit81.i
  %772 = phi i64 [ %759, %while.entry.i488.preheader ], [ %814, %Lexer_advance.exit81.i ]
  %773 = phi i64 [ %771, %while.entry.i488.preheader ], [ %815, %Lexer_advance.exit81.i ]
  %774 = add nsw i64 %772, 1
  %775 = icmp slt i64 %774, %773
  br i1 %775, label %if.entry.i124.i, label %Lexer_peek.exit125.i

if.entry.i124.i:                                  ; preds = %while.entry.i488
  %776 = load ptr, ptr %760, align 8
  %777 = getelementptr inbounds i8, ptr %776, i64 %774
  %778 = load i8, ptr %777, align 1
  br label %Lexer_peek.exit125.i

Lexer_peek.exit125.i:                             ; preds = %if.entry.i124.i, %while.entry.i488
  %common.ret.op.i123.i = phi i8 [ %778, %if.entry.i124.i ], [ 0, %while.entry.i488 ]
  %779 = add nsw i64 %772, 2
  %780 = icmp slt i64 %779, %773
  br i1 %780, label %Lexer_peek.exit119.i, label %ifend3.i493

Lexer_peek.exit119.i:                             ; preds = %Lexer_peek.exit125.i
  %781 = icmp eq i8 %common.ret.op.i123.i, 42
  %782 = load ptr, ptr %760, align 8
  %783 = getelementptr inbounds i8, ptr %782, i64 %779
  %784 = load i8, ptr %783, align 1
  %785 = icmp eq i8 %784, 47
  %786 = and i1 %781, %785
  br i1 %786, label %while.end.i491, label %ifend3.i493

while.end.i491:                                   ; preds = %Lexer_advance.exit81.i, %Lexer_peek.exit119.i, %Lexer_advance.exit150.i
  %787 = phi i64 [ %771, %Lexer_advance.exit150.i ], [ %815, %Lexer_advance.exit81.i ], [ %773, %Lexer_peek.exit119.i ]
  %788 = phi i64 [ %759, %Lexer_advance.exit150.i ], [ %814, %Lexer_advance.exit81.i ], [ %772, %Lexer_peek.exit119.i ]
  %.not1136 = icmp slt i64 %788, %787
  br i1 %.not1136, label %end.i105.i, label %end.i105.i.thread

end.i105.i.thread:                                ; preds = %while.end.i491
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit113.i

end.i105.i:                                       ; preds = %while.end.i491
  %789 = add nsw i64 %788, 1
  store i64 %789, ptr %memberidx.i.i479, align 4
  %790 = load ptr, ptr %760, align 8
  %791 = getelementptr inbounds i8, ptr %790, i64 %789
  %792 = load i8, ptr %791, align 1
  store i8 %792, ptr %0, align 1
  switch i8 %792, label %if.entry9.i112.i [
    i8 10, label %if.entry.i108.i
    i8 0, label %Lexer_advance.exit113.i
  ]

if.entry.i108.i:                                  ; preds = %end.i105.i
  %memberidx5.i106.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i106.i, align 4
  %memberidx6.i107.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %793 = load i64, ptr %memberidx6.i107.i, align 4
  %794 = add nsw i64 %793, 1
  store i64 %794, ptr %memberidx6.i107.i, align 4
  br label %Lexer_advance.exit113.i

if.entry9.i112.i:                                 ; preds = %end.i105.i
  %memberidx12.i111.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %795 = load i64, ptr %memberidx12.i111.i, align 4
  %796 = add nsw i64 %795, 1
  store i64 %796, ptr %memberidx12.i111.i, align 4
  br label %Lexer_advance.exit113.i

Lexer_advance.exit113.i:                          ; preds = %end.i105.i.thread, %end.i105.i, %if.entry9.i112.i, %if.entry.i108.i
  %797 = phi i64 [ %788, %end.i105.i.thread ], [ %789, %end.i105.i ], [ %789, %if.entry9.i112.i ], [ %789, %if.entry.i108.i ]
  %798 = load i64, ptr %memberidx2.i.i481, align 4
  %.not1137 = icmp slt i64 %797, %798
  br i1 %.not1137, label %end.i89.i, label %end.i89.i.thread

end.i89.i.thread:                                 ; preds = %Lexer_advance.exit113.i
  store i8 0, ptr %0, align 1
  br label %if.entry39

end.i89.i:                                        ; preds = %Lexer_advance.exit113.i
  %799 = add nsw i64 %797, 1
  store i64 %799, ptr %memberidx.i.i479, align 4
  %800 = load ptr, ptr %760, align 8
  %801 = getelementptr inbounds i8, ptr %800, i64 %799
  %802 = load i8, ptr %801, align 1
  store i8 %802, ptr %0, align 1
  switch i8 %802, label %if.entry9.i96.i [
    i8 10, label %if.entry.i92.i
    i8 0, label %if.entry39
  ]

if.entry.i92.i:                                   ; preds = %end.i89.i
  %memberidx5.i90.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i90.i, align 4
  %memberidx6.i91.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %803 = load i64, ptr %memberidx6.i91.i, align 4
  %804 = add nsw i64 %803, 1
  store i64 %804, ptr %memberidx6.i91.i, align 4
  br label %if.entry39

if.entry9.i96.i:                                  ; preds = %end.i89.i
  %memberidx12.i95.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %805 = load i64, ptr %memberidx12.i95.i, align 4
  %806 = add nsw i64 %805, 1
  store i64 %806, ptr %memberidx12.i95.i, align 4
  br label %if.entry39

ifend3.i493:                                      ; preds = %Lexer_peek.exit125.i, %Lexer_peek.exit119.i
  %.not1134 = icmp slt i64 %772, %773
  br i1 %.not1134, label %end.i73.i, label %end.i73.i.thread

end.i73.i.thread:                                 ; preds = %ifend3.i493
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit81.i

end.i73.i:                                        ; preds = %ifend3.i493
  store i64 %774, ptr %memberidx.i.i479, align 4
  %807 = load ptr, ptr %760, align 8
  %808 = getelementptr inbounds i8, ptr %807, i64 %774
  %809 = load i8, ptr %808, align 1
  store i8 %809, ptr %0, align 1
  switch i8 %809, label %if.entry9.i80.i [
    i8 10, label %if.entry.i76.i
    i8 0, label %Lexer_advance.exit81.i
  ]

if.entry.i76.i:                                   ; preds = %end.i73.i
  store i64 0, ptr %memberidx5.i74.i, align 4
  %810 = load i64, ptr %memberidx6.i75.i, align 4
  %811 = add nsw i64 %810, 1
  store i64 %811, ptr %memberidx6.i75.i, align 4
  br label %Lexer_advance.exit81.i

if.entry9.i80.i:                                  ; preds = %end.i73.i
  %812 = load i64, ptr %memberidx5.i74.i, align 4
  %813 = add nsw i64 %812, 1
  store i64 %813, ptr %memberidx5.i74.i, align 4
  br label %Lexer_advance.exit81.i

Lexer_advance.exit81.i:                           ; preds = %end.i73.i.thread, %end.i73.i, %if.entry9.i80.i, %if.entry.i76.i
  %814 = phi i64 [ %772, %end.i73.i.thread ], [ %774, %end.i73.i ], [ %774, %if.entry9.i80.i ], [ %774, %if.entry.i76.i ]
  %815 = load i64, ptr %memberidx2.i.i481, align 4
  %.not1135 = icmp slt i64 %814, %815
  br i1 %.not1135, label %while.entry.i488, label %while.end.i491

end.i54.i:                                        ; preds = %Lexer_peek.exit.i484
  store i64 %759, ptr %memberidx.i.i479, align 4
  %816 = load ptr, ptr %760, align 8
  %817 = getelementptr inbounds i8, ptr %816, i64 %759
  %818 = load i8, ptr %817, align 1
  store i8 %818, ptr %0, align 1
  switch i8 %818, label %if.entry9.i61.i [
    i8 10, label %if.entry.i57.i
    i8 0, label %Lexer_advance.exit62.i
  ]

if.entry.i57.i:                                   ; preds = %end.i54.i
  %memberidx5.i55.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i55.i, align 4
  %memberidx6.i56.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit62.i.sink.split

if.entry9.i61.i:                                  ; preds = %end.i54.i
  %memberidx12.i60.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit62.i.sink.split

Lexer_advance.exit62.i.sink.split:                ; preds = %if.entry.i57.i, %if.entry9.i61.i
  %memberidx12.i60.i.sink1303 = phi ptr [ %memberidx12.i60.i, %if.entry9.i61.i ], [ %memberidx6.i56.i, %if.entry.i57.i ]
  %819 = load i64, ptr %memberidx12.i60.i.sink1303, align 4
  %820 = add nsw i64 %819, 1
  store i64 %820, ptr %memberidx12.i60.i.sink1303, align 4
  br label %Lexer_advance.exit62.i

Lexer_advance.exit62.i:                           ; preds = %Lexer_advance.exit62.i.sink.split, %end.i54.i
  %821 = add nsw i64 %758, 2
  %822 = load i64, ptr %memberidx2.i.i481, align 4
  %823 = icmp slt i64 %821, %822
  br i1 %823, label %if.entry.i45.i, label %Lexer_peek.exit46.i

if.entry.i45.i:                                   ; preds = %Lexer_advance.exit62.i
  %824 = load ptr, ptr %760, align 8
  %825 = getelementptr inbounds i8, ptr %824, i64 %821
  %826 = load i8, ptr %825, align 1
  %phi.cmp1130 = icmp eq i8 %826, 10
  br label %Lexer_peek.exit46.i

Lexer_peek.exit46.i:                              ; preds = %if.entry.i45.i, %Lexer_advance.exit62.i
  %common.ret.op.i44.i = phi i1 [ %phi.cmp1130, %if.entry.i45.i ], [ false, %Lexer_advance.exit62.i ]
  %827 = icmp sge i64 %759, %822
  %828 = or i1 %827, %common.ret.op.i44.i
  br i1 %828, label %if.entry39, label %while.entry7.i.preheader

while.entry7.i.preheader:                         ; preds = %Lexer_peek.exit46.i
  %memberidx5.i.i503 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i.i504 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry7.i

while.entry7.i:                                   ; preds = %while.entry7.i.preheader, %Lexer_peek.exit34.i
  %829 = phi i64 [ %759, %while.entry7.i.preheader ], [ %839, %Lexer_peek.exit34.i ]
  %830 = phi i64 [ %822, %while.entry7.i.preheader ], [ %841, %Lexer_peek.exit34.i ]
  %.not1131 = icmp slt i64 %829, %830
  br i1 %.not1131, label %end.i.i502, label %end.i.i502.thread

end.i.i502.thread:                                ; preds = %while.entry7.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i509

end.i.i502:                                       ; preds = %while.entry7.i
  %831 = add nsw i64 %829, 1
  store i64 %831, ptr %memberidx.i.i479, align 4
  %832 = load ptr, ptr %760, align 8
  %833 = getelementptr inbounds i8, ptr %832, i64 %831
  %834 = load i8, ptr %833, align 1
  store i8 %834, ptr %0, align 1
  switch i8 %834, label %if.entry9.i.i508 [
    i8 10, label %if.entry.i37.i
    i8 0, label %Lexer_advance.exit.i509
  ]

if.entry.i37.i:                                   ; preds = %end.i.i502
  store i64 0, ptr %memberidx5.i.i503, align 4
  %835 = load i64, ptr %memberidx6.i.i504, align 4
  %836 = add nsw i64 %835, 1
  store i64 %836, ptr %memberidx6.i.i504, align 4
  br label %Lexer_advance.exit.i509

if.entry9.i.i508:                                 ; preds = %end.i.i502
  %837 = load i64, ptr %memberidx5.i.i503, align 4
  %838 = add nsw i64 %837, 1
  store i64 %838, ptr %memberidx5.i.i503, align 4
  br label %Lexer_advance.exit.i509

Lexer_advance.exit.i509:                          ; preds = %end.i.i502.thread, %end.i.i502, %if.entry9.i.i508, %if.entry.i37.i
  %839 = phi i64 [ %829, %end.i.i502.thread ], [ %831, %end.i.i502 ], [ %831, %if.entry9.i.i508 ], [ %831, %if.entry.i37.i ]
  %840 = add nsw i64 %839, 1
  %841 = load i64, ptr %memberidx2.i.i481, align 4
  %842 = icmp slt i64 %840, %841
  br i1 %842, label %if.entry.i33.i, label %Lexer_peek.exit34.i

if.entry.i33.i:                                   ; preds = %Lexer_advance.exit.i509
  %843 = load ptr, ptr %760, align 8
  %844 = getelementptr inbounds i8, ptr %843, i64 %840
  %845 = load i8, ptr %844, align 1
  br label %Lexer_peek.exit34.i

Lexer_peek.exit34.i:                              ; preds = %if.entry.i33.i, %Lexer_advance.exit.i509
  %common.ret.op.i32.i = phi i8 [ %845, %if.entry.i33.i ], [ 0, %Lexer_advance.exit.i509 ]
  %846 = icmp eq i8 %common.ret.op.i32.i, 10
  %847 = icmp sge i64 %839, %841
  %848 = or i1 %847, %846
  br i1 %848, label %if.entry39, label %while.entry7.i

if.entry39:                                       ; preds = %Lexer_peek.exit34.i, %end.i89.i.thread, %Lexer_peek.exit46.i, %end.i89.i, %if.entry9.i96.i, %if.entry.i92.i
  %849 = phi i64 [ %797, %end.i89.i.thread ], [ %759, %Lexer_peek.exit46.i ], [ %799, %end.i89.i ], [ %799, %if.entry9.i96.i ], [ %799, %if.entry.i92.i ], [ %839, %Lexer_peek.exit34.i ]
  %850 = load i64, ptr %memberidx2.i.i481, align 4
  %.not1128 = icmp slt i64 %849, %850
  br i1 %.not1128, label %end.i517, label %end.i517.thread

end.i517.thread:                                  ; preds = %if.entry39
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit526

end.i517:                                         ; preds = %if.entry39
  %851 = add nsw i64 %849, 1
  store i64 %851, ptr %memberidx.i.i479, align 4
  %852 = load ptr, ptr %760, align 8
  %853 = getelementptr inbounds i8, ptr %852, i64 %851
  %854 = load i8, ptr %853, align 1
  store i8 %854, ptr %0, align 1
  switch i8 %854, label %if.entry9.i525 [
    i8 10, label %if.entry.i520
    i8 0, label %Lexer_advance.exit526
  ]

if.entry.i520:                                    ; preds = %end.i517
  %memberidx5.i518 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i518, align 4
  %memberidx6.i519 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %855 = load i64, ptr %memberidx6.i519, align 4
  %856 = add nsw i64 %855, 1
  store i64 %856, ptr %memberidx6.i519, align 4
  br label %Lexer_advance.exit526

if.entry9.i525:                                   ; preds = %end.i517
  %memberidx12.i524 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %857 = load i64, ptr %memberidx12.i524, align 4
  %858 = add nsw i64 %857, 1
  store i64 %858, ptr %memberidx12.i524, align 4
  br label %Lexer_advance.exit526

Lexer_advance.exit526:                            ; preds = %end.i517.thread, %end.i517, %if.entry.i520, %if.entry9.i525
  %859 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

if.entry.i539:                                    ; preds = %Lexer_peek.exit.i484
  %.not1127 = icmp slt i64 %758, %761
  br i1 %.not1127, label %end.i.i544, label %end.i.i544.thread

end.i.i544.thread:                                ; preds = %if.entry.i539
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i559

end.i.i544:                                       ; preds = %if.entry.i539
  store i64 %759, ptr %memberidx.i.i479, align 4
  %860 = load ptr, ptr %760, align 8
  %861 = getelementptr inbounds i8, ptr %860, i64 %759
  %862 = load i8, ptr %861, align 1
  store i8 %862, ptr %0, align 1
  switch i8 %862, label %if.entry9.i.i551 [
    i8 10, label %if.entry.i11.i547
    i8 0, label %Lexer_advance.exit.i559
  ]

if.entry.i11.i547:                                ; preds = %end.i.i544
  %memberidx5.i.i545 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i545, align 4
  %memberidx6.i.i546 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %863 = load i64, ptr %memberidx6.i.i546, align 4
  %864 = add nsw i64 %863, 1
  store i64 %864, ptr %memberidx6.i.i546, align 4
  br label %Lexer_advance.exit.i559

if.entry9.i.i551:                                 ; preds = %end.i.i544
  %memberidx12.i.i550 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %865 = load i64, ptr %memberidx12.i.i550, align 4
  %866 = add nsw i64 %865, 1
  store i64 %866, ptr %memberidx12.i.i550, align 4
  br label %Lexer_advance.exit.i559

Lexer_advance.exit.i559:                          ; preds = %end.i.i544.thread, %end.i.i544, %if.entry9.i.i551, %if.entry.i11.i547
  %867 = tail call ptr @malloc(i32 16)
  %868 = tail call ptr @malloc(i32 32)
  %869 = load i64, ptr %memberidx.i.i479, align 4
  %870 = add nsw i64 %869, -1
  %871 = add nsw i64 %869, 1
  %memberidx2.i14.i553 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %872 = load i64, ptr %memberidx2.i14.i553, align 4
  %873 = add i64 %872, -2
  %memberidx3.i15.i554 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %874 = load i64, ptr %memberidx3.i15.i554, align 4
  store i64 %870, ptr %868, align 4
  %memberidx1.i.i16.i555 = getelementptr inbounds %FloRange, ptr %868, i64 0, i32 1
  store i64 %871, ptr %memberidx1.i.i16.i555, align 4
  %memberidx2.i.i17.i556 = getelementptr inbounds %FloRange, ptr %868, i64 0, i32 2
  store i64 %873, ptr %memberidx2.i.i17.i556, align 4
  %memberidx3.i.i18.i557 = getelementptr inbounds %FloRange, ptr %868, i64 0, i32 3
  store i64 %874, ptr %memberidx3.i.i18.i557, align 4
  store i64 15, ptr %867, align 4
  %memberidx1.i12.i558 = getelementptr inbounds %Token, ptr %867, i64 0, i32 1
  store ptr %868, ptr %memberidx1.i12.i558, align 8
  br label %common.ret

ifend.i567:                                       ; preds = %Lexer_peek.exit.i484, %if.entry36
  %875 = tail call ptr @malloc(i32 16)
  %876 = tail call ptr @malloc(i32 32)
  %877 = load i64, ptr %memberidx.i.i479, align 4
  %878 = add nsw i64 %877, 1
  %memberidx2.i6.i561 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %879 = load i64, ptr %memberidx2.i6.i561, align 4
  %880 = add i64 %879, -1
  %memberidx3.i.i562 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %881 = load i64, ptr %memberidx3.i.i562, align 4
  store i64 %877, ptr %876, align 4
  %memberidx1.i.i.i563 = getelementptr inbounds %FloRange, ptr %876, i64 0, i32 1
  store i64 %878, ptr %memberidx1.i.i.i563, align 4
  %memberidx2.i.i.i564 = getelementptr inbounds %FloRange, ptr %876, i64 0, i32 2
  store i64 %880, ptr %memberidx2.i.i.i564, align 4
  %memberidx3.i.i.i565 = getelementptr inbounds %FloRange, ptr %876, i64 0, i32 3
  store i64 %881, ptr %memberidx3.i.i.i565, align 4
  store i64 7, ptr %875, align 4
  %memberidx1.i4.i566 = getelementptr inbounds %Token, ptr %875, i64 0, i32 1
  store ptr %876, ptr %memberidx1.i4.i566, align 8
  br label %common.ret

if.entry42:                                       ; preds = %ifend11
  %882 = tail call ptr @malloc(i32 16)
  %883 = tail call ptr @malloc(i32 32)
  %memberidx.i568 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %884 = load i64, ptr %memberidx.i568, align 4
  %885 = add nsw i64 %884, 1
  %memberidx2.i569 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %886 = load i64, ptr %memberidx2.i569, align 4
  %887 = add i64 %886, -1
  %memberidx3.i570 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %888 = load i64, ptr %memberidx3.i570, align 4
  store i64 %884, ptr %883, align 4
  %memberidx1.i.i571 = getelementptr inbounds %FloRange, ptr %883, i64 0, i32 1
  store i64 %885, ptr %memberidx1.i.i571, align 4
  %memberidx2.i.i572 = getelementptr inbounds %FloRange, ptr %883, i64 0, i32 2
  store i64 %887, ptr %memberidx2.i.i572, align 4
  %memberidx3.i.i573 = getelementptr inbounds %FloRange, ptr %883, i64 0, i32 3
  store i64 %888, ptr %memberidx3.i.i573, align 4
  store i64 25, ptr %882, align 4
  %memberidx1.i574 = getelementptr inbounds %Token, ptr %882, i64 0, i32 1
  store ptr %883, ptr %memberidx1.i574, align 8
  br label %common.ret

if.entry45:                                       ; preds = %ifend11
  %889 = tail call ptr @malloc(i32 16)
  %890 = tail call ptr @malloc(i32 32)
  %memberidx.i575 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %891 = load i64, ptr %memberidx.i575, align 4
  %892 = add nsw i64 %891, 1
  %memberidx2.i576 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %893 = load i64, ptr %memberidx2.i576, align 4
  %894 = add i64 %893, -1
  %memberidx3.i577 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %895 = load i64, ptr %memberidx3.i577, align 4
  store i64 %891, ptr %890, align 4
  %memberidx1.i.i578 = getelementptr inbounds %FloRange, ptr %890, i64 0, i32 1
  store i64 %892, ptr %memberidx1.i.i578, align 4
  %memberidx2.i.i579 = getelementptr inbounds %FloRange, ptr %890, i64 0, i32 2
  store i64 %894, ptr %memberidx2.i.i579, align 4
  %memberidx3.i.i580 = getelementptr inbounds %FloRange, ptr %890, i64 0, i32 3
  store i64 %895, ptr %memberidx3.i.i580, align 4
  store i64 26, ptr %889, align 4
  %memberidx1.i581 = getelementptr inbounds %Token, ptr %889, i64 0, i32 1
  store ptr %890, ptr %memberidx1.i581, align 8
  br label %common.ret

if.entry48:                                       ; preds = %ifend11
  %896 = tail call ptr @malloc(i32 16)
  %897 = tail call ptr @malloc(i32 32)
  %memberidx.i582 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %898 = load i64, ptr %memberidx.i582, align 4
  %899 = add nsw i64 %898, 1
  %memberidx2.i583 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %900 = load i64, ptr %memberidx2.i583, align 4
  %901 = add i64 %900, -1
  %memberidx3.i584 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %902 = load i64, ptr %memberidx3.i584, align 4
  store i64 %898, ptr %897, align 4
  %memberidx1.i.i585 = getelementptr inbounds %FloRange, ptr %897, i64 0, i32 1
  store i64 %899, ptr %memberidx1.i.i585, align 4
  %memberidx2.i.i586 = getelementptr inbounds %FloRange, ptr %897, i64 0, i32 2
  store i64 %901, ptr %memberidx2.i.i586, align 4
  %memberidx3.i.i587 = getelementptr inbounds %FloRange, ptr %897, i64 0, i32 3
  store i64 %902, ptr %memberidx3.i.i587, align 4
  store i64 27, ptr %896, align 4
  %memberidx1.i588 = getelementptr inbounds %Token, ptr %896, i64 0, i32 1
  store ptr %897, ptr %memberidx1.i588, align 8
  br label %common.ret

if.entry51:                                       ; preds = %ifend11
  %903 = tail call ptr @malloc(i32 16)
  %904 = tail call ptr @malloc(i32 32)
  %memberidx.i589 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %905 = load i64, ptr %memberidx.i589, align 4
  %906 = add nsw i64 %905, 1
  %memberidx2.i590 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %907 = load i64, ptr %memberidx2.i590, align 4
  %908 = add i64 %907, -1
  %memberidx3.i591 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %909 = load i64, ptr %memberidx3.i591, align 4
  store i64 %905, ptr %904, align 4
  %memberidx1.i.i592 = getelementptr inbounds %FloRange, ptr %904, i64 0, i32 1
  store i64 %906, ptr %memberidx1.i.i592, align 4
  %memberidx2.i.i593 = getelementptr inbounds %FloRange, ptr %904, i64 0, i32 2
  store i64 %908, ptr %memberidx2.i.i593, align 4
  %memberidx3.i.i594 = getelementptr inbounds %FloRange, ptr %904, i64 0, i32 3
  store i64 %909, ptr %memberidx3.i.i594, align 4
  store i64 28, ptr %903, align 4
  %memberidx1.i595 = getelementptr inbounds %Token, ptr %903, i64 0, i32 1
  store ptr %904, ptr %memberidx1.i595, align 8
  br label %common.ret

if.entry54:                                       ; preds = %ifend11
  %910 = tail call ptr @malloc(i32 16)
  %911 = tail call ptr @malloc(i32 32)
  %memberidx.i596 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %912 = load i64, ptr %memberidx.i596, align 4
  %913 = add nsw i64 %912, 1
  %memberidx2.i597 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %914 = load i64, ptr %memberidx2.i597, align 4
  %915 = add i64 %914, -1
  %memberidx3.i598 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %916 = load i64, ptr %memberidx3.i598, align 4
  store i64 %912, ptr %911, align 4
  %memberidx1.i.i599 = getelementptr inbounds %FloRange, ptr %911, i64 0, i32 1
  store i64 %913, ptr %memberidx1.i.i599, align 4
  %memberidx2.i.i600 = getelementptr inbounds %FloRange, ptr %911, i64 0, i32 2
  store i64 %915, ptr %memberidx2.i.i600, align 4
  %memberidx3.i.i601 = getelementptr inbounds %FloRange, ptr %911, i64 0, i32 3
  store i64 %916, ptr %memberidx3.i.i601, align 4
  store i64 29, ptr %910, align 4
  %memberidx1.i602 = getelementptr inbounds %Token, ptr %910, i64 0, i32 1
  store ptr %911, ptr %memberidx1.i602, align 8
  br label %common.ret

if.entry57:                                       ; preds = %ifend11
  %917 = tail call ptr @malloc(i32 16)
  %918 = tail call ptr @malloc(i32 32)
  %memberidx.i603 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %919 = load i64, ptr %memberidx.i603, align 4
  %920 = add nsw i64 %919, 1
  %memberidx2.i604 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %921 = load i64, ptr %memberidx2.i604, align 4
  %922 = add i64 %921, -1
  %memberidx3.i605 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %923 = load i64, ptr %memberidx3.i605, align 4
  store i64 %919, ptr %918, align 4
  %memberidx1.i.i606 = getelementptr inbounds %FloRange, ptr %918, i64 0, i32 1
  store i64 %920, ptr %memberidx1.i.i606, align 4
  %memberidx2.i.i607 = getelementptr inbounds %FloRange, ptr %918, i64 0, i32 2
  store i64 %922, ptr %memberidx2.i.i607, align 4
  %memberidx3.i.i608 = getelementptr inbounds %FloRange, ptr %918, i64 0, i32 3
  store i64 %923, ptr %memberidx3.i.i608, align 4
  store i64 30, ptr %917, align 4
  %memberidx1.i609 = getelementptr inbounds %Token, ptr %917, i64 0, i32 1
  store ptr %918, ptr %memberidx1.i609, align 8
  br label %common.ret

if.entry60:                                       ; preds = %ifend11, %ifend11
  %924 = tail call ptr @malloc(i32 16)
  %925 = tail call ptr @malloc(i32 32)
  %memberidx.i610 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %926 = load i64, ptr %memberidx.i610, align 4
  %927 = add nsw i64 %926, 1
  %memberidx2.i611 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %928 = load i64, ptr %memberidx2.i611, align 4
  %929 = add i64 %928, -1
  %memberidx3.i612 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %930 = load i64, ptr %memberidx3.i612, align 4
  store i64 %926, ptr %925, align 4
  %memberidx1.i.i613 = getelementptr inbounds %FloRange, ptr %925, i64 0, i32 1
  store i64 %927, ptr %memberidx1.i.i613, align 4
  %memberidx2.i.i614 = getelementptr inbounds %FloRange, ptr %925, i64 0, i32 2
  store i64 %929, ptr %memberidx2.i.i614, align 4
  %memberidx3.i.i615 = getelementptr inbounds %FloRange, ptr %925, i64 0, i32 3
  store i64 %930, ptr %memberidx3.i.i615, align 4
  store i64 33, ptr %924, align 4
  %memberidx1.i616 = getelementptr inbounds %Token, ptr %924, i64 0, i32 1
  store ptr %925, ptr %memberidx1.i616, align 8
  br label %common.ret

if.entry63:                                       ; preds = %ifend11
  %memberidx.i.i.i617 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %931 = load i64, ptr %memberidx.i.i.i617, align 4
  %memberidx1.i.i.i618 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %932 = load ptr, ptr %memberidx1.i.i.i618, align 8
  %memberidx2.i.i.i619 = getelementptr inbounds %String, ptr %932, i64 0, i32 1
  %933 = load i64, ptr %memberidx2.i.i.i619, align 4
  %.not1123 = icmp slt i64 %931, %933
  br i1 %.not1123, label %end.i.i624, label %end.i.i624.thread

end.i.i624.thread:                                ; preds = %if.entry63
  store i8 0, ptr %0, align 1
  br label %ifend.i649

end.i.i624:                                       ; preds = %if.entry63
  %934 = add nsw i64 %931, 1
  store i64 %934, ptr %memberidx.i.i.i617, align 4
  %935 = load ptr, ptr %932, align 8
  %936 = getelementptr inbounds i8, ptr %935, i64 %934
  %937 = load i8, ptr %936, align 1
  store i8 %937, ptr %0, align 1
  switch i8 %937, label %Lexer_advance.exit.i632 [
    i8 10, label %if.entry.i.i627
    i8 0, label %ifend.i649
  ]

if.entry.i.i627:                                  ; preds = %end.i.i624
  %memberidx5.i.i625 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i625, align 4
  %memberidx6.i.i626 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %938 = load i64, ptr %memberidx6.i.i626, align 4
  %939 = add nsw i64 %938, 1
  store i64 %939, ptr %memberidx6.i.i626, align 4
  br label %ifend.i649

Lexer_advance.exit.i632:                          ; preds = %end.i.i624
  %memberidx12.i.i630 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %940 = load i64, ptr %memberidx12.i.i630, align 4
  %941 = add nsw i64 %940, 1
  store i64 %941, ptr %memberidx12.i.i630, align 4
  %942 = icmp eq i8 %937, 92
  br i1 %942, label %if.entry.i635, label %ifend.i649

if.entry.i635:                                    ; preds = %Lexer_advance.exit.i632
  %943 = load i64, ptr %memberidx2.i.i.i619, align 4
  %.not1125 = icmp slt i64 %934, %943
  br i1 %.not1125, label %end.i22.i, label %end.i22.i.thread

end.i22.i.thread:                                 ; preds = %if.entry.i635
  store i8 0, ptr %0, align 1
  br label %ifend27.i.i646

end.i22.i:                                        ; preds = %if.entry.i635
  %944 = add nsw i64 %931, 2
  store i64 %944, ptr %memberidx.i.i.i617, align 4
  %945 = load ptr, ptr %932, align 8
  %946 = getelementptr inbounds i8, ptr %945, i64 %944
  %947 = load i8, ptr %946, align 1
  store i8 %947, ptr %0, align 1
  switch i8 %947, label %Lexer_advance.exit30.i [
    i8 10, label %if.entry.i25.i
    i8 0, label %ifend27.i.i646
  ]

if.entry.i25.i:                                   ; preds = %end.i22.i
  store i64 0, ptr %memberidx12.i.i630, align 4
  %memberidx6.i24.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %948 = load i64, ptr %memberidx6.i24.i, align 4
  %949 = add nsw i64 %948, 1
  store i64 %949, ptr %memberidx6.i24.i, align 4
  br label %ifend27.i.i646

Lexer_advance.exit30.i:                           ; preds = %end.i22.i
  %950 = add nsw i64 %940, 2
  store i64 %950, ptr %memberidx12.i.i630, align 4
  switch i8 %947, label %ifend27.i.i646 [
    i8 97, label %ifend.i649
    i8 98, label %get_escape_char.exit.i.fold.split
    i8 116, label %get_escape_char.exit.i.fold.split1189
    i8 102, label %get_escape_char.exit.i.fold.split1190
    i8 110, label %get_escape_char.exit.i.fold.split1191
    i8 114, label %get_escape_char.exit.i.fold.split1192
    i8 118, label %get_escape_char.exit.i.fold.split1193
    i8 48, label %get_escape_char.exit.i.fold.split1194
    i8 39, label %get_escape_char.exit.i.fold.split1195
    i8 34, label %get_escape_char.exit.i.fold.split1196
  ]

ifend27.i.i646:                                   ; preds = %if.entry.i25.i, %end.i22.i, %end.i22.i.thread, %Lexer_advance.exit30.i
  %951 = phi i64 [ %944, %Lexer_advance.exit30.i ], [ %944, %if.entry.i25.i ], [ %944, %end.i22.i ], [ %934, %end.i22.i.thread ]
  %ternary.i21.i12301232 = phi i8 [ %947, %Lexer_advance.exit30.i ], [ 10, %if.entry.i25.i ], [ %947, %end.i22.i ], [ 0, %end.i22.i.thread ]
  br label %ifend.i649

get_escape_char.exit.i.fold.split:                ; preds = %Lexer_advance.exit30.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1189:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1190:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1191:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1192:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1193:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1194:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1195:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1196:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i649

ifend.i649:                                       ; preds = %if.entry.i.i627, %end.i.i624, %end.i.i624.thread, %ifend27.i.i646, %get_escape_char.exit.i.fold.split, %get_escape_char.exit.i.fold.split1189, %get_escape_char.exit.i.fold.split1190, %get_escape_char.exit.i.fold.split1191, %get_escape_char.exit.i.fold.split1192, %get_escape_char.exit.i.fold.split1193, %get_escape_char.exit.i.fold.split1194, %get_escape_char.exit.i.fold.split1195, %get_escape_char.exit.i.fold.split1196, %Lexer_advance.exit30.i, %Lexer_advance.exit.i632
  %952 = phi i64 [ %934, %Lexer_advance.exit.i632 ], [ %944, %Lexer_advance.exit30.i ], [ %944, %get_escape_char.exit.i.fold.split1196 ], [ %944, %get_escape_char.exit.i.fold.split1195 ], [ %944, %get_escape_char.exit.i.fold.split1194 ], [ %944, %get_escape_char.exit.i.fold.split1193 ], [ %944, %get_escape_char.exit.i.fold.split1192 ], [ %944, %get_escape_char.exit.i.fold.split1191 ], [ %944, %get_escape_char.exit.i.fold.split1190 ], [ %944, %get_escape_char.exit.i.fold.split1189 ], [ %944, %get_escape_char.exit.i.fold.split ], [ %951, %ifend27.i.i646 ], [ %931, %end.i.i624.thread ], [ %934, %end.i.i624 ], [ %934, %if.entry.i.i627 ]
  %length.0.i648 = phi i64 [ 3, %Lexer_advance.exit.i632 ], [ 5, %Lexer_advance.exit30.i ], [ 5, %get_escape_char.exit.i.fold.split1196 ], [ 5, %get_escape_char.exit.i.fold.split1195 ], [ 5, %get_escape_char.exit.i.fold.split1194 ], [ 5, %get_escape_char.exit.i.fold.split1193 ], [ 5, %get_escape_char.exit.i.fold.split1192 ], [ 5, %get_escape_char.exit.i.fold.split1191 ], [ 5, %get_escape_char.exit.i.fold.split1190 ], [ 5, %get_escape_char.exit.i.fold.split1189 ], [ 5, %get_escape_char.exit.i.fold.split ], [ 5, %ifend27.i.i646 ], [ 3, %end.i.i624.thread ], [ 3, %end.i.i624 ], [ 3, %if.entry.i.i627 ]
  %value.0.i = phi i8 [ %937, %Lexer_advance.exit.i632 ], [ 7, %Lexer_advance.exit30.i ], [ %947, %get_escape_char.exit.i.fold.split1196 ], [ %947, %get_escape_char.exit.i.fold.split1195 ], [ 0, %get_escape_char.exit.i.fold.split1194 ], [ 11, %get_escape_char.exit.i.fold.split1193 ], [ 13, %get_escape_char.exit.i.fold.split1192 ], [ 10, %get_escape_char.exit.i.fold.split1191 ], [ 12, %get_escape_char.exit.i.fold.split1190 ], [ 9, %get_escape_char.exit.i.fold.split1189 ], [ 8, %get_escape_char.exit.i.fold.split ], [ %ternary.i21.i12301232, %ifend27.i.i646 ], [ 0, %end.i.i624.thread ], [ %937, %end.i.i624 ], [ 10, %if.entry.i.i627 ]
  %953 = load i64, ptr %memberidx2.i.i.i619, align 4
  %.not1124 = icmp slt i64 %952, %953
  br i1 %.not1124, label %end.i38.i, label %end.i38.i.thread

end.i38.i.thread:                                 ; preds = %ifend.i649
  store i8 0, ptr %0, align 1
  br label %Lexer_char_token.exit

end.i38.i:                                        ; preds = %ifend.i649
  %954 = add nsw i64 %952, 1
  store i64 %954, ptr %memberidx.i.i.i617, align 4
  %955 = load ptr, ptr %932, align 8
  %956 = getelementptr inbounds i8, ptr %955, i64 %954
  %957 = load i8, ptr %956, align 1
  store i8 %957, ptr %0, align 1
  switch i8 %957, label %if.entry9.i45.i [
    i8 10, label %if.entry.i41.i
    i8 0, label %Lexer_char_token.exit
  ]

if.entry.i41.i:                                   ; preds = %end.i38.i
  %memberidx5.i39.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i39.i, align 4
  %memberidx6.i40.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %958 = load i64, ptr %memberidx6.i40.i, align 4
  %959 = add nsw i64 %958, 1
  store i64 %959, ptr %memberidx6.i40.i, align 4
  br label %Lexer_char_token.exit

if.entry9.i45.i:                                  ; preds = %end.i38.i
  %memberidx12.i44.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %960 = load i64, ptr %memberidx12.i44.i, align 4
  %961 = add nsw i64 %960, 1
  store i64 %961, ptr %memberidx12.i44.i, align 4
  br label %Lexer_char_token.exit

Lexer_char_token.exit:                            ; preds = %end.i38.i.thread, %end.i38.i, %if.entry.i41.i, %if.entry9.i45.i
  %962 = tail call ptr @malloc(i32 17)
  %963 = tail call ptr @malloc(i32 32)
  %964 = load i64, ptr %memberidx.i.i.i617, align 4
  %965 = sub nsw i64 1, %length.0.i648
  %966 = add i64 %965, %964
  %967 = add nsw i64 %964, 1
  %memberidx2.i12.i651 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %968 = load i64, ptr %memberidx2.i12.i651, align 4
  %969 = sub nuw i64 %968, %length.0.i648
  %memberidx3.i.i652 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %970 = load i64, ptr %memberidx3.i.i652, align 4
  store i64 %966, ptr %963, align 4
  %memberidx1.i.i13.i653 = getelementptr inbounds %FloRange, ptr %963, i64 0, i32 1
  store i64 %967, ptr %memberidx1.i.i13.i653, align 4
  %memberidx2.i.i14.i654 = getelementptr inbounds %FloRange, ptr %963, i64 0, i32 2
  store i64 %969, ptr %memberidx2.i.i14.i654, align 4
  %memberidx3.i.i.i655 = getelementptr inbounds %FloRange, ptr %963, i64 0, i32 3
  store i64 %970, ptr %memberidx3.i.i.i655, align 4
  store i64 35, ptr %962, align 4
  %memberidx1.i.i10.i = getelementptr inbounds %Token, ptr %962, i64 0, i32 1
  store ptr %963, ptr %memberidx1.i.i10.i, align 8
  %memberidx.i.i656 = getelementptr inbounds %CharToken, ptr %962, i64 0, i32 2
  store i8 %value.0.i, ptr %memberidx.i.i656, align 1
  br label %common.ret

if.entry66:                                       ; preds = %ifend11
  %971 = tail call ptr @malloc(i32 16)
  %972 = tail call ptr @malloc(i32 32)
  %memberidx.i657 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %973 = load i64, ptr %memberidx.i657, align 4
  %974 = add nsw i64 %973, 1
  %memberidx2.i658 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %975 = load i64, ptr %memberidx2.i658, align 4
  %976 = add i64 %975, -1
  %memberidx3.i659 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %977 = load i64, ptr %memberidx3.i659, align 4
  store i64 %973, ptr %972, align 4
  %memberidx1.i.i660 = getelementptr inbounds %FloRange, ptr %972, i64 0, i32 1
  store i64 %974, ptr %memberidx1.i.i660, align 4
  %memberidx2.i.i661 = getelementptr inbounds %FloRange, ptr %972, i64 0, i32 2
  store i64 %976, ptr %memberidx2.i.i661, align 4
  %memberidx3.i.i662 = getelementptr inbounds %FloRange, ptr %972, i64 0, i32 3
  store i64 %977, ptr %memberidx3.i.i662, align 4
  store i64 36, ptr %971, align 4
  %memberidx1.i663 = getelementptr inbounds %Token, ptr %971, i64 0, i32 1
  store ptr %972, ptr %memberidx1.i663, align 8
  br label %common.ret

if.entry69:                                       ; preds = %ifend11
  %978 = tail call ptr @malloc(i32 16)
  %979 = tail call ptr @malloc(i32 32)
  %memberidx.i664 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %980 = load i64, ptr %memberidx.i664, align 4
  %981 = add nsw i64 %980, 1
  %memberidx2.i665 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %982 = load i64, ptr %memberidx2.i665, align 4
  %983 = add i64 %982, -1
  %memberidx3.i666 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %984 = load i64, ptr %memberidx3.i666, align 4
  store i64 %980, ptr %979, align 4
  %memberidx1.i.i667 = getelementptr inbounds %FloRange, ptr %979, i64 0, i32 1
  store i64 %981, ptr %memberidx1.i.i667, align 4
  %memberidx2.i.i668 = getelementptr inbounds %FloRange, ptr %979, i64 0, i32 2
  store i64 %983, ptr %memberidx2.i.i668, align 4
  %memberidx3.i.i669 = getelementptr inbounds %FloRange, ptr %979, i64 0, i32 3
  store i64 %984, ptr %memberidx3.i.i669, align 4
  store i64 37, ptr %978, align 4
  %memberidx1.i670 = getelementptr inbounds %Token, ptr %978, i64 0, i32 1
  store ptr %979, ptr %memberidx1.i670, align 8
  br label %common.ret

if.entry72:                                       ; preds = %ifend11
  %memberidx.i.i671 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %985 = load i64, ptr %memberidx.i.i671, align 4
  %986 = add nsw i64 %985, 1
  %memberidx1.i.i672 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %987 = load ptr, ptr %memberidx1.i.i672, align 8
  %memberidx2.i.i673 = getelementptr inbounds %String, ptr %987, i64 0, i32 1
  %988 = load i64, ptr %memberidx2.i.i673, align 4
  %989 = icmp slt i64 %986, %988
  br i1 %989, label %if.entry.i.i674, label %ifend.i709

if.entry.i.i674:                                  ; preds = %if.entry72
  %990 = load ptr, ptr %987, align 8
  %991 = getelementptr inbounds i8, ptr %990, i64 %986
  %992 = load i8, ptr %991, align 1
  %phi.cmp1121 = icmp eq i8 %992, 61
  br i1 %phi.cmp1121, label %end.i.i686, label %ifend.i709

end.i.i686:                                       ; preds = %if.entry.i.i674
  store i64 %986, ptr %memberidx.i.i671, align 4
  %993 = load ptr, ptr %987, align 8
  %994 = getelementptr inbounds i8, ptr %993, i64 %986
  %995 = load i8, ptr %994, align 1
  store i8 %995, ptr %0, align 1
  switch i8 %995, label %if.entry9.i.i693 [
    i8 10, label %if.entry.i11.i689
    i8 0, label %Lexer_advance.exit.i701
  ]

if.entry.i11.i689:                                ; preds = %end.i.i686
  %memberidx5.i.i687 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i687, align 4
  %memberidx6.i.i688 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i701.sink.split

if.entry9.i.i693:                                 ; preds = %end.i.i686
  %memberidx12.i.i692 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i701.sink.split

Lexer_advance.exit.i701.sink.split:               ; preds = %if.entry.i11.i689, %if.entry9.i.i693
  %memberidx12.i.i692.sink1305 = phi ptr [ %memberidx12.i.i692, %if.entry9.i.i693 ], [ %memberidx6.i.i688, %if.entry.i11.i689 ]
  %996 = load i64, ptr %memberidx12.i.i692.sink1305, align 4
  %997 = add nsw i64 %996, 1
  store i64 %997, ptr %memberidx12.i.i692.sink1305, align 4
  br label %Lexer_advance.exit.i701

Lexer_advance.exit.i701:                          ; preds = %Lexer_advance.exit.i701.sink.split, %end.i.i686
  %998 = tail call ptr @malloc(i32 16)
  %999 = tail call ptr @malloc(i32 32)
  %1000 = load i64, ptr %memberidx.i.i671, align 4
  %1001 = add nsw i64 %1000, -1
  %1002 = add nsw i64 %1000, 1
  %memberidx2.i14.i695 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1003 = load i64, ptr %memberidx2.i14.i695, align 4
  %1004 = add i64 %1003, -2
  %memberidx3.i15.i696 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1005 = load i64, ptr %memberidx3.i15.i696, align 4
  store i64 %1001, ptr %999, align 4
  %memberidx1.i.i16.i697 = getelementptr inbounds %FloRange, ptr %999, i64 0, i32 1
  store i64 %1002, ptr %memberidx1.i.i16.i697, align 4
  %memberidx2.i.i17.i698 = getelementptr inbounds %FloRange, ptr %999, i64 0, i32 2
  store i64 %1004, ptr %memberidx2.i.i17.i698, align 4
  %memberidx3.i.i18.i699 = getelementptr inbounds %FloRange, ptr %999, i64 0, i32 3
  store i64 %1005, ptr %memberidx3.i.i18.i699, align 4
  store i64 39, ptr %998, align 4
  %memberidx1.i12.i700 = getelementptr inbounds %Token, ptr %998, i64 0, i32 1
  store ptr %999, ptr %memberidx1.i12.i700, align 8
  br label %common.ret

ifend.i709:                                       ; preds = %if.entry72, %if.entry.i.i674
  %1006 = tail call ptr @malloc(i32 16)
  %1007 = tail call ptr @malloc(i32 32)
  %1008 = load i64, ptr %memberidx.i.i671, align 4
  %1009 = add nsw i64 %1008, 1
  %memberidx2.i6.i703 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1010 = load i64, ptr %memberidx2.i6.i703, align 4
  %1011 = add i64 %1010, -1
  %memberidx3.i.i704 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1012 = load i64, ptr %memberidx3.i.i704, align 4
  store i64 %1008, ptr %1007, align 4
  %memberidx1.i.i.i705 = getelementptr inbounds %FloRange, ptr %1007, i64 0, i32 1
  store i64 %1009, ptr %memberidx1.i.i.i705, align 4
  %memberidx2.i.i.i706 = getelementptr inbounds %FloRange, ptr %1007, i64 0, i32 2
  store i64 %1011, ptr %memberidx2.i.i.i706, align 4
  %memberidx3.i.i.i707 = getelementptr inbounds %FloRange, ptr %1007, i64 0, i32 3
  store i64 %1012, ptr %memberidx3.i.i.i707, align 4
  store i64 38, ptr %1006, align 4
  %memberidx1.i4.i708 = getelementptr inbounds %Token, ptr %1006, i64 0, i32 1
  store ptr %1007, ptr %memberidx1.i4.i708, align 8
  br label %common.ret

if.entry75:                                       ; preds = %ifend11
  %memberidx.i.i710 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1013 = load i64, ptr %memberidx.i.i710, align 4
  %1014 = add nsw i64 %1013, 1
  %memberidx1.i.i711 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1015 = load ptr, ptr %memberidx1.i.i711, align 8
  %memberidx2.i.i712 = getelementptr inbounds %String, ptr %1015, i64 0, i32 1
  %1016 = load i64, ptr %memberidx2.i.i712, align 4
  %1017 = icmp slt i64 %1014, %1016
  br i1 %1017, label %if.entry.i.i713, label %ifend.i748

if.entry.i.i713:                                  ; preds = %if.entry75
  %1018 = load ptr, ptr %1015, align 8
  %1019 = getelementptr inbounds i8, ptr %1018, i64 %1014
  %1020 = load i8, ptr %1019, align 1
  %phi.cmp1119 = icmp eq i8 %1020, 61
  br i1 %phi.cmp1119, label %end.i.i725, label %ifend.i748

end.i.i725:                                       ; preds = %if.entry.i.i713
  store i64 %1014, ptr %memberidx.i.i710, align 4
  %1021 = load ptr, ptr %1015, align 8
  %1022 = getelementptr inbounds i8, ptr %1021, i64 %1014
  %1023 = load i8, ptr %1022, align 1
  store i8 %1023, ptr %0, align 1
  switch i8 %1023, label %if.entry9.i.i732 [
    i8 10, label %if.entry.i11.i728
    i8 0, label %Lexer_advance.exit.i740
  ]

if.entry.i11.i728:                                ; preds = %end.i.i725
  %memberidx5.i.i726 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i726, align 4
  %memberidx6.i.i727 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i740.sink.split

if.entry9.i.i732:                                 ; preds = %end.i.i725
  %memberidx12.i.i731 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i740.sink.split

Lexer_advance.exit.i740.sink.split:               ; preds = %if.entry.i11.i728, %if.entry9.i.i732
  %memberidx12.i.i731.sink1307 = phi ptr [ %memberidx12.i.i731, %if.entry9.i.i732 ], [ %memberidx6.i.i727, %if.entry.i11.i728 ]
  %1024 = load i64, ptr %memberidx12.i.i731.sink1307, align 4
  %1025 = add nsw i64 %1024, 1
  store i64 %1025, ptr %memberidx12.i.i731.sink1307, align 4
  br label %Lexer_advance.exit.i740

Lexer_advance.exit.i740:                          ; preds = %Lexer_advance.exit.i740.sink.split, %end.i.i725
  %1026 = tail call ptr @malloc(i32 16)
  %1027 = tail call ptr @malloc(i32 32)
  %1028 = load i64, ptr %memberidx.i.i710, align 4
  %1029 = add nsw i64 %1028, -1
  %1030 = add nsw i64 %1028, 1
  %memberidx2.i14.i734 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1031 = load i64, ptr %memberidx2.i14.i734, align 4
  %1032 = add i64 %1031, -2
  %memberidx3.i15.i735 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1033 = load i64, ptr %memberidx3.i15.i735, align 4
  store i64 %1029, ptr %1027, align 4
  %memberidx1.i.i16.i736 = getelementptr inbounds %FloRange, ptr %1027, i64 0, i32 1
  store i64 %1030, ptr %memberidx1.i.i16.i736, align 4
  %memberidx2.i.i17.i737 = getelementptr inbounds %FloRange, ptr %1027, i64 0, i32 2
  store i64 %1032, ptr %memberidx2.i.i17.i737, align 4
  %memberidx3.i.i18.i738 = getelementptr inbounds %FloRange, ptr %1027, i64 0, i32 3
  store i64 %1033, ptr %memberidx3.i.i18.i738, align 4
  store i64 40, ptr %1026, align 4
  %memberidx1.i12.i739 = getelementptr inbounds %Token, ptr %1026, i64 0, i32 1
  store ptr %1027, ptr %memberidx1.i12.i739, align 8
  br label %common.ret

ifend.i748:                                       ; preds = %if.entry75, %if.entry.i.i713
  %1034 = tail call ptr @malloc(i32 16)
  %1035 = tail call ptr @malloc(i32 32)
  %1036 = load i64, ptr %memberidx.i.i710, align 4
  %1037 = add nsw i64 %1036, 1
  %memberidx2.i6.i742 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1038 = load i64, ptr %memberidx2.i6.i742, align 4
  %1039 = add i64 %1038, -1
  %memberidx3.i.i743 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1040 = load i64, ptr %memberidx3.i.i743, align 4
  store i64 %1036, ptr %1035, align 4
  %memberidx1.i.i.i744 = getelementptr inbounds %FloRange, ptr %1035, i64 0, i32 1
  store i64 %1037, ptr %memberidx1.i.i.i744, align 4
  %memberidx2.i.i.i745 = getelementptr inbounds %FloRange, ptr %1035, i64 0, i32 2
  store i64 %1039, ptr %memberidx2.i.i.i745, align 4
  %memberidx3.i.i.i746 = getelementptr inbounds %FloRange, ptr %1035, i64 0, i32 3
  store i64 %1040, ptr %memberidx3.i.i.i746, align 4
  store i64 47, ptr %1034, align 4
  %memberidx1.i4.i747 = getelementptr inbounds %Token, ptr %1034, i64 0, i32 1
  store ptr %1035, ptr %memberidx1.i4.i747, align 8
  br label %common.ret

if.entry78:                                       ; preds = %ifend11
  %memberidx.i.i749 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1041 = load i64, ptr %memberidx.i.i749, align 4
  %1042 = add nsw i64 %1041, 1
  %memberidx1.i.i750 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1043 = load ptr, ptr %memberidx1.i.i750, align 8
  %memberidx2.i.i751 = getelementptr inbounds %String, ptr %1043, i64 0, i32 1
  %1044 = load i64, ptr %memberidx2.i.i751, align 4
  %1045 = icmp slt i64 %1042, %1044
  br i1 %1045, label %if.entry.i.i752, label %ifend3.i817

if.entry.i.i752:                                  ; preds = %if.entry78
  %1046 = load ptr, ptr %1043, align 8
  %1047 = getelementptr inbounds i8, ptr %1046, i64 %1042
  %1048 = load i8, ptr %1047, align 1
  switch i8 %1048, label %ifend3.i817 [
    i8 61, label %end.i.i764
    i8 62, label %end.i80.i795
  ]

end.i.i764:                                       ; preds = %if.entry.i.i752
  store i64 %1042, ptr %memberidx.i.i749, align 4
  %1049 = load ptr, ptr %1043, align 8
  %1050 = getelementptr inbounds i8, ptr %1049, i64 %1042
  %1051 = load i8, ptr %1050, align 1
  store i8 %1051, ptr %0, align 1
  switch i8 %1051, label %if.entry9.i.i771 [
    i8 10, label %if.entry.i23.i767
    i8 0, label %Lexer_advance.exit.i779
  ]

if.entry.i23.i767:                                ; preds = %end.i.i764
  %memberidx5.i.i765 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i765, align 4
  %memberidx6.i.i766 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i779.sink.split

if.entry9.i.i771:                                 ; preds = %end.i.i764
  %memberidx12.i.i770 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i779.sink.split

Lexer_advance.exit.i779.sink.split:               ; preds = %if.entry.i23.i767, %if.entry9.i.i771
  %memberidx12.i.i770.sink1309 = phi ptr [ %memberidx12.i.i770, %if.entry9.i.i771 ], [ %memberidx6.i.i766, %if.entry.i23.i767 ]
  %1052 = load i64, ptr %memberidx12.i.i770.sink1309, align 4
  %1053 = add nsw i64 %1052, 1
  store i64 %1053, ptr %memberidx12.i.i770.sink1309, align 4
  br label %Lexer_advance.exit.i779

Lexer_advance.exit.i779:                          ; preds = %Lexer_advance.exit.i779.sink.split, %end.i.i764
  %1054 = tail call ptr @malloc(i32 16)
  %1055 = tail call ptr @malloc(i32 32)
  %1056 = load i64, ptr %memberidx.i.i749, align 4
  %1057 = add nsw i64 %1056, -1
  %1058 = add nsw i64 %1056, 1
  %memberidx2.i32.i773 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1059 = load i64, ptr %memberidx2.i32.i773, align 4
  %1060 = add i64 %1059, -2
  %memberidx3.i33.i774 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1061 = load i64, ptr %memberidx3.i33.i774, align 4
  store i64 %1057, ptr %1055, align 4
  %memberidx1.i.i34.i775 = getelementptr inbounds %FloRange, ptr %1055, i64 0, i32 1
  store i64 %1058, ptr %memberidx1.i.i34.i775, align 4
  %memberidx2.i.i35.i776 = getelementptr inbounds %FloRange, ptr %1055, i64 0, i32 2
  store i64 %1060, ptr %memberidx2.i.i35.i776, align 4
  %memberidx3.i.i36.i777 = getelementptr inbounds %FloRange, ptr %1055, i64 0, i32 3
  store i64 %1061, ptr %memberidx3.i.i36.i777, align 4
  store i64 44, ptr %1054, align 4
  %memberidx1.i37.i778 = getelementptr inbounds %Token, ptr %1054, i64 0, i32 1
  store ptr %1055, ptr %memberidx1.i37.i778, align 8
  br label %common.ret

end.i80.i795:                                     ; preds = %if.entry.i.i752
  store i64 %1042, ptr %memberidx.i.i749, align 4
  %1062 = load ptr, ptr %1043, align 8
  %1063 = getelementptr inbounds i8, ptr %1062, i64 %1042
  %1064 = load i8, ptr %1063, align 1
  store i8 %1064, ptr %0, align 1
  switch i8 %1064, label %if.entry9.i87.i802 [
    i8 10, label %if.entry.i83.i798
    i8 0, label %Lexer_advance.exit88.i806
  ]

if.entry.i83.i798:                                ; preds = %end.i80.i795
  %memberidx5.i81.i796 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i796, align 4
  %memberidx6.i82.i797 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i806.sink.split

if.entry9.i87.i802:                               ; preds = %end.i80.i795
  %memberidx12.i86.i801 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i806.sink.split

Lexer_advance.exit88.i806.sink.split:             ; preds = %if.entry.i83.i798, %if.entry9.i87.i802
  %memberidx12.i86.i801.sink1311 = phi ptr [ %memberidx12.i86.i801, %if.entry9.i87.i802 ], [ %memberidx6.i82.i797, %if.entry.i83.i798 ]
  %1065 = load i64, ptr %memberidx12.i86.i801.sink1311, align 4
  %1066 = add nsw i64 %1065, 1
  store i64 %1066, ptr %memberidx12.i86.i801.sink1311, align 4
  br label %Lexer_advance.exit88.i806

Lexer_advance.exit88.i806:                        ; preds = %Lexer_advance.exit88.i806.sink.split, %end.i80.i795
  %1067 = add nsw i64 %1041, 2
  %1068 = load i64, ptr %memberidx2.i.i751, align 4
  %1069 = icmp slt i64 %1067, %1068
  br i1 %1069, label %if.entry.i71.i807, label %ifend6.i849

if.entry.i71.i807:                                ; preds = %Lexer_advance.exit88.i806
  %1070 = load ptr, ptr %1043, align 8
  %1071 = getelementptr inbounds i8, ptr %1070, i64 %1067
  %1072 = load i8, ptr %1071, align 1
  %phi.cmp1116 = icmp eq i8 %1072, 61
  br i1 %phi.cmp1116, label %end.i45.i826, label %ifend6.i849

ifend3.i817:                                      ; preds = %if.entry.i.i752, %if.entry78
  %1073 = tail call ptr @malloc(i32 16)
  %1074 = tail call ptr @malloc(i32 32)
  %1075 = load i64, ptr %memberidx.i.i749, align 4
  %1076 = add nsw i64 %1075, 1
  %memberidx2.i56.i811 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1077 = load i64, ptr %memberidx2.i56.i811, align 4
  %1078 = add i64 %1077, -1
  %memberidx3.i57.i812 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1079 = load i64, ptr %memberidx3.i57.i812, align 4
  store i64 %1075, ptr %1074, align 4
  %memberidx1.i.i58.i813 = getelementptr inbounds %FloRange, ptr %1074, i64 0, i32 1
  store i64 %1076, ptr %memberidx1.i.i58.i813, align 4
  %memberidx2.i.i59.i814 = getelementptr inbounds %FloRange, ptr %1074, i64 0, i32 2
  store i64 %1078, ptr %memberidx2.i.i59.i814, align 4
  %memberidx3.i.i60.i815 = getelementptr inbounds %FloRange, ptr %1074, i64 0, i32 3
  store i64 %1079, ptr %memberidx3.i.i60.i815, align 4
  store i64 41, ptr %1073, align 4
  %memberidx1.i54.i816 = getelementptr inbounds %Token, ptr %1073, i64 0, i32 1
  store ptr %1074, ptr %memberidx1.i54.i816, align 8
  br label %common.ret

end.i45.i826:                                     ; preds = %if.entry.i71.i807
  store i64 %1067, ptr %memberidx.i.i749, align 4
  %1080 = load ptr, ptr %1043, align 8
  %1081 = getelementptr inbounds i8, ptr %1080, i64 %1067
  %1082 = load i8, ptr %1081, align 1
  store i8 %1082, ptr %0, align 1
  switch i8 %1082, label %if.entry9.i52.i833 [
    i8 10, label %if.entry.i48.i829
    i8 0, label %Lexer_advance.exit53.i841
  ]

if.entry.i48.i829:                                ; preds = %end.i45.i826
  %memberidx5.i46.i827 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i827, align 4
  %memberidx6.i47.i828 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit53.i841.sink.split

if.entry9.i52.i833:                               ; preds = %end.i45.i826
  %memberidx12.i51.i832 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit53.i841.sink.split

Lexer_advance.exit53.i841.sink.split:             ; preds = %if.entry.i48.i829, %if.entry9.i52.i833
  %memberidx12.i51.i832.sink1313 = phi ptr [ %memberidx12.i51.i832, %if.entry9.i52.i833 ], [ %memberidx6.i47.i828, %if.entry.i48.i829 ]
  %1083 = load i64, ptr %memberidx12.i51.i832.sink1313, align 4
  %1084 = add nsw i64 %1083, 1
  store i64 %1084, ptr %memberidx12.i51.i832.sink1313, align 4
  br label %Lexer_advance.exit53.i841

Lexer_advance.exit53.i841:                        ; preds = %Lexer_advance.exit53.i841.sink.split, %end.i45.i826
  %1085 = tail call ptr @malloc(i32 16)
  %1086 = tail call ptr @malloc(i32 32)
  %1087 = load i64, ptr %memberidx.i.i749, align 4
  %1088 = add nsw i64 %1087, -2
  %1089 = add nsw i64 %1087, 1
  %memberidx2.i26.i835 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1090 = load i64, ptr %memberidx2.i26.i835, align 4
  %1091 = add i64 %1090, -3
  %memberidx3.i27.i836 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1092 = load i64, ptr %memberidx3.i27.i836, align 4
  store i64 %1088, ptr %1086, align 4
  %memberidx1.i.i28.i837 = getelementptr inbounds %FloRange, ptr %1086, i64 0, i32 1
  store i64 %1089, ptr %memberidx1.i.i28.i837, align 4
  %memberidx2.i.i29.i838 = getelementptr inbounds %FloRange, ptr %1086, i64 0, i32 2
  store i64 %1091, ptr %memberidx2.i.i29.i838, align 4
  %memberidx3.i.i30.i839 = getelementptr inbounds %FloRange, ptr %1086, i64 0, i32 3
  store i64 %1092, ptr %memberidx3.i.i30.i839, align 4
  store i64 21, ptr %1085, align 4
  %memberidx1.i24.i840 = getelementptr inbounds %Token, ptr %1085, i64 0, i32 1
  store ptr %1086, ptr %memberidx1.i24.i840, align 8
  br label %common.ret

ifend6.i849:                                      ; preds = %Lexer_advance.exit88.i806, %if.entry.i71.i807
  %1093 = tail call ptr @malloc(i32 16)
  %1094 = tail call ptr @malloc(i32 32)
  %1095 = load i64, ptr %memberidx.i.i749, align 4
  %1096 = add nsw i64 %1095, -1
  %1097 = add nsw i64 %1095, 1
  %memberidx2.i18.i843 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1098 = load i64, ptr %memberidx2.i18.i843, align 4
  %1099 = add i64 %1098, -2
  %memberidx3.i.i844 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1100 = load i64, ptr %memberidx3.i.i844, align 4
  store i64 %1096, ptr %1094, align 4
  %memberidx1.i.i.i845 = getelementptr inbounds %FloRange, ptr %1094, i64 0, i32 1
  store i64 %1097, ptr %memberidx1.i.i.i845, align 4
  %memberidx2.i.i.i846 = getelementptr inbounds %FloRange, ptr %1094, i64 0, i32 2
  store i64 %1099, ptr %memberidx2.i.i.i846, align 4
  %memberidx3.i.i.i847 = getelementptr inbounds %FloRange, ptr %1094, i64 0, i32 3
  store i64 %1100, ptr %memberidx3.i.i.i847, align 4
  store i64 49, ptr %1093, align 4
  %memberidx1.i16.i848 = getelementptr inbounds %Token, ptr %1093, i64 0, i32 1
  store ptr %1094, ptr %memberidx1.i16.i848, align 8
  br label %common.ret

if.entry81:                                       ; preds = %ifend11
  %memberidx.i.i850 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1101 = load i64, ptr %memberidx.i.i850, align 4
  %1102 = add nsw i64 %1101, 1
  %memberidx1.i.i851 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1103 = load ptr, ptr %memberidx1.i.i851, align 8
  %memberidx2.i.i852 = getelementptr inbounds %String, ptr %1103, i64 0, i32 1
  %1104 = load i64, ptr %memberidx2.i.i852, align 4
  %1105 = icmp slt i64 %1102, %1104
  br i1 %1105, label %if.entry.i.i853, label %ifend3.i918

if.entry.i.i853:                                  ; preds = %if.entry81
  %1106 = load ptr, ptr %1103, align 8
  %1107 = getelementptr inbounds i8, ptr %1106, i64 %1102
  %1108 = load i8, ptr %1107, align 1
  switch i8 %1108, label %ifend3.i918 [
    i8 61, label %end.i.i865
    i8 60, label %end.i80.i896
  ]

end.i.i865:                                       ; preds = %if.entry.i.i853
  store i64 %1102, ptr %memberidx.i.i850, align 4
  %1109 = load ptr, ptr %1103, align 8
  %1110 = getelementptr inbounds i8, ptr %1109, i64 %1102
  %1111 = load i8, ptr %1110, align 1
  store i8 %1111, ptr %0, align 1
  switch i8 %1111, label %if.entry9.i.i872 [
    i8 10, label %if.entry.i23.i868
    i8 0, label %Lexer_advance.exit.i880
  ]

if.entry.i23.i868:                                ; preds = %end.i.i865
  %memberidx5.i.i866 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i866, align 4
  %memberidx6.i.i867 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i880.sink.split

if.entry9.i.i872:                                 ; preds = %end.i.i865
  %memberidx12.i.i871 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i880.sink.split

Lexer_advance.exit.i880.sink.split:               ; preds = %if.entry.i23.i868, %if.entry9.i.i872
  %memberidx12.i.i871.sink1315 = phi ptr [ %memberidx12.i.i871, %if.entry9.i.i872 ], [ %memberidx6.i.i867, %if.entry.i23.i868 ]
  %1112 = load i64, ptr %memberidx12.i.i871.sink1315, align 4
  %1113 = add nsw i64 %1112, 1
  store i64 %1113, ptr %memberidx12.i.i871.sink1315, align 4
  br label %Lexer_advance.exit.i880

Lexer_advance.exit.i880:                          ; preds = %Lexer_advance.exit.i880.sink.split, %end.i.i865
  %1114 = tail call ptr @malloc(i32 16)
  %1115 = tail call ptr @malloc(i32 32)
  %1116 = load i64, ptr %memberidx.i.i850, align 4
  %1117 = add nsw i64 %1116, -1
  %1118 = add nsw i64 %1116, 1
  %memberidx2.i32.i874 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1119 = load i64, ptr %memberidx2.i32.i874, align 4
  %1120 = add i64 %1119, -2
  %memberidx3.i33.i875 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1121 = load i64, ptr %memberidx3.i33.i875, align 4
  store i64 %1117, ptr %1115, align 4
  %memberidx1.i.i34.i876 = getelementptr inbounds %FloRange, ptr %1115, i64 0, i32 1
  store i64 %1118, ptr %memberidx1.i.i34.i876, align 4
  %memberidx2.i.i35.i877 = getelementptr inbounds %FloRange, ptr %1115, i64 0, i32 2
  store i64 %1120, ptr %memberidx2.i.i35.i877, align 4
  %memberidx3.i.i36.i878 = getelementptr inbounds %FloRange, ptr %1115, i64 0, i32 3
  store i64 %1121, ptr %memberidx3.i.i36.i878, align 4
  store i64 43, ptr %1114, align 4
  %memberidx1.i37.i879 = getelementptr inbounds %Token, ptr %1114, i64 0, i32 1
  store ptr %1115, ptr %memberidx1.i37.i879, align 8
  br label %common.ret

end.i80.i896:                                     ; preds = %if.entry.i.i853
  store i64 %1102, ptr %memberidx.i.i850, align 4
  %1122 = load ptr, ptr %1103, align 8
  %1123 = getelementptr inbounds i8, ptr %1122, i64 %1102
  %1124 = load i8, ptr %1123, align 1
  store i8 %1124, ptr %0, align 1
  switch i8 %1124, label %if.entry9.i87.i903 [
    i8 10, label %if.entry.i83.i899
    i8 0, label %Lexer_advance.exit88.i907
  ]

if.entry.i83.i899:                                ; preds = %end.i80.i896
  %memberidx5.i81.i897 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i897, align 4
  %memberidx6.i82.i898 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i907.sink.split

if.entry9.i87.i903:                               ; preds = %end.i80.i896
  %memberidx12.i86.i902 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i907.sink.split

Lexer_advance.exit88.i907.sink.split:             ; preds = %if.entry.i83.i899, %if.entry9.i87.i903
  %memberidx12.i86.i902.sink1317 = phi ptr [ %memberidx12.i86.i902, %if.entry9.i87.i903 ], [ %memberidx6.i82.i898, %if.entry.i83.i899 ]
  %1125 = load i64, ptr %memberidx12.i86.i902.sink1317, align 4
  %1126 = add nsw i64 %1125, 1
  store i64 %1126, ptr %memberidx12.i86.i902.sink1317, align 4
  br label %Lexer_advance.exit88.i907

Lexer_advance.exit88.i907:                        ; preds = %Lexer_advance.exit88.i907.sink.split, %end.i80.i896
  %1127 = add nsw i64 %1101, 2
  %1128 = load i64, ptr %memberidx2.i.i852, align 4
  %1129 = icmp slt i64 %1127, %1128
  br i1 %1129, label %if.entry.i71.i908, label %ifend6.i950

if.entry.i71.i908:                                ; preds = %Lexer_advance.exit88.i907
  %1130 = load ptr, ptr %1103, align 8
  %1131 = getelementptr inbounds i8, ptr %1130, i64 %1127
  %1132 = load i8, ptr %1131, align 1
  %phi.cmp1110 = icmp eq i8 %1132, 61
  br i1 %phi.cmp1110, label %end.i45.i927, label %ifend6.i950

ifend3.i918:                                      ; preds = %if.entry.i.i853, %if.entry81
  %1133 = tail call ptr @malloc(i32 16)
  %1134 = tail call ptr @malloc(i32 32)
  %1135 = load i64, ptr %memberidx.i.i850, align 4
  %1136 = add nsw i64 %1135, 1
  %memberidx2.i56.i912 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1137 = load i64, ptr %memberidx2.i56.i912, align 4
  %1138 = add i64 %1137, -1
  %memberidx3.i57.i913 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1139 = load i64, ptr %memberidx3.i57.i913, align 4
  store i64 %1135, ptr %1134, align 4
  %memberidx1.i.i58.i914 = getelementptr inbounds %FloRange, ptr %1134, i64 0, i32 1
  store i64 %1136, ptr %memberidx1.i.i58.i914, align 4
  %memberidx2.i.i59.i915 = getelementptr inbounds %FloRange, ptr %1134, i64 0, i32 2
  store i64 %1138, ptr %memberidx2.i.i59.i915, align 4
  %memberidx3.i.i60.i916 = getelementptr inbounds %FloRange, ptr %1134, i64 0, i32 3
  store i64 %1139, ptr %memberidx3.i.i60.i916, align 4
  store i64 42, ptr %1133, align 4
  %memberidx1.i54.i917 = getelementptr inbounds %Token, ptr %1133, i64 0, i32 1
  store ptr %1134, ptr %memberidx1.i54.i917, align 8
  br label %common.ret

end.i45.i927:                                     ; preds = %if.entry.i71.i908
  store i64 %1127, ptr %memberidx.i.i850, align 4
  %1140 = load ptr, ptr %1103, align 8
  %1141 = getelementptr inbounds i8, ptr %1140, i64 %1127
  %1142 = load i8, ptr %1141, align 1
  store i8 %1142, ptr %0, align 1
  switch i8 %1142, label %if.entry9.i52.i934 [
    i8 10, label %if.entry.i48.i930
    i8 0, label %Lexer_advance.exit53.i942
  ]

if.entry.i48.i930:                                ; preds = %end.i45.i927
  %memberidx5.i46.i928 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i928, align 4
  %memberidx6.i47.i929 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit53.i942.sink.split

if.entry9.i52.i934:                               ; preds = %end.i45.i927
  %memberidx12.i51.i933 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit53.i942.sink.split

Lexer_advance.exit53.i942.sink.split:             ; preds = %if.entry.i48.i930, %if.entry9.i52.i934
  %memberidx12.i51.i933.sink1319 = phi ptr [ %memberidx12.i51.i933, %if.entry9.i52.i934 ], [ %memberidx6.i47.i929, %if.entry.i48.i930 ]
  %1143 = load i64, ptr %memberidx12.i51.i933.sink1319, align 4
  %1144 = add nsw i64 %1143, 1
  store i64 %1144, ptr %memberidx12.i51.i933.sink1319, align 4
  br label %Lexer_advance.exit53.i942

Lexer_advance.exit53.i942:                        ; preds = %Lexer_advance.exit53.i942.sink.split, %end.i45.i927
  %1145 = tail call ptr @malloc(i32 16)
  %1146 = tail call ptr @malloc(i32 32)
  %1147 = load i64, ptr %memberidx.i.i850, align 4
  %1148 = add nsw i64 %1147, -2
  %1149 = add nsw i64 %1147, 1
  %memberidx2.i26.i936 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1150 = load i64, ptr %memberidx2.i26.i936, align 4
  %1151 = add i64 %1150, -3
  %memberidx3.i27.i937 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1152 = load i64, ptr %memberidx3.i27.i937, align 4
  store i64 %1148, ptr %1146, align 4
  %memberidx1.i.i28.i938 = getelementptr inbounds %FloRange, ptr %1146, i64 0, i32 1
  store i64 %1149, ptr %memberidx1.i.i28.i938, align 4
  %memberidx2.i.i29.i939 = getelementptr inbounds %FloRange, ptr %1146, i64 0, i32 2
  store i64 %1151, ptr %memberidx2.i.i29.i939, align 4
  %memberidx3.i.i30.i940 = getelementptr inbounds %FloRange, ptr %1146, i64 0, i32 3
  store i64 %1152, ptr %memberidx3.i.i30.i940, align 4
  store i64 22, ptr %1145, align 4
  %memberidx1.i24.i941 = getelementptr inbounds %Token, ptr %1145, i64 0, i32 1
  store ptr %1146, ptr %memberidx1.i24.i941, align 8
  br label %common.ret

ifend6.i950:                                      ; preds = %Lexer_advance.exit88.i907, %if.entry.i71.i908
  %1153 = tail call ptr @malloc(i32 16)
  %1154 = tail call ptr @malloc(i32 32)
  %1155 = load i64, ptr %memberidx.i.i850, align 4
  %1156 = add nsw i64 %1155, -1
  %1157 = add nsw i64 %1155, 1
  %memberidx2.i18.i944 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1158 = load i64, ptr %memberidx2.i18.i944, align 4
  %1159 = add i64 %1158, -2
  %memberidx3.i.i945 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1160 = load i64, ptr %memberidx3.i.i945, align 4
  store i64 %1156, ptr %1154, align 4
  %memberidx1.i.i.i946 = getelementptr inbounds %FloRange, ptr %1154, i64 0, i32 1
  store i64 %1157, ptr %memberidx1.i.i.i946, align 4
  %memberidx2.i.i.i947 = getelementptr inbounds %FloRange, ptr %1154, i64 0, i32 2
  store i64 %1159, ptr %memberidx2.i.i.i947, align 4
  %memberidx3.i.i.i948 = getelementptr inbounds %FloRange, ptr %1154, i64 0, i32 3
  store i64 %1160, ptr %memberidx3.i.i.i948, align 4
  store i64 48, ptr %1153, align 4
  %memberidx1.i16.i949 = getelementptr inbounds %Token, ptr %1153, i64 0, i32 1
  store ptr %1154, ptr %memberidx1.i16.i949, align 8
  br label %common.ret

if.entry84:                                       ; preds = %ifend11
  %memberidx.i.i951 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1161 = load i64, ptr %memberidx.i.i951, align 4
  %1162 = add nsw i64 %1161, 1
  %memberidx1.i.i952 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1163 = load ptr, ptr %memberidx1.i.i952, align 8
  %memberidx2.i.i953 = getelementptr inbounds %String, ptr %1163, i64 0, i32 1
  %1164 = load i64, ptr %memberidx2.i.i953, align 4
  %1165 = icmp slt i64 %1162, %1164
  br i1 %1165, label %if.entry.i.i954, label %Lexer_dot_token.exit

if.entry.i.i954:                                  ; preds = %if.entry84
  %1166 = load ptr, ptr %1163, align 8
  %1167 = getelementptr inbounds i8, ptr %1166, i64 %1162
  %1168 = load i8, ptr %1167, align 1
  %phi.cmp = icmp eq i8 %1168, 46
  br i1 %phi.cmp, label %end.i.i965, label %Lexer_dot_token.exit

end.i.i965:                                       ; preds = %if.entry.i.i954
  store i64 %1162, ptr %memberidx.i.i951, align 4
  %1169 = load ptr, ptr %1163, align 8
  %1170 = getelementptr inbounds i8, ptr %1169, i64 %1162
  %1171 = load i8, ptr %1170, align 1
  store i8 %1171, ptr %0, align 1
  switch i8 %1171, label %if.entry9.i.i972 [
    i8 10, label %if.entry.i11.i968
    i8 0, label %Lexer_dot_token.exit
  ]

if.entry.i11.i968:                                ; preds = %end.i.i965
  %memberidx5.i.i966 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i966, align 4
  %memberidx6.i.i967 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_dot_token.exit.sink.split

if.entry9.i.i972:                                 ; preds = %end.i.i965
  %memberidx12.i.i971 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_dot_token.exit.sink.split

Lexer_dot_token.exit.sink.split:                  ; preds = %if.entry9.i.i972, %if.entry.i11.i968
  %memberidx6.i.i967.sink1321 = phi ptr [ %memberidx6.i.i967, %if.entry.i11.i968 ], [ %memberidx12.i.i971, %if.entry9.i.i972 ]
  %1172 = load i64, ptr %memberidx6.i.i967.sink1321, align 4
  %1173 = add nsw i64 %1172, 1
  store i64 %1173, ptr %memberidx6.i.i967.sink1321, align 4
  br label %Lexer_dot_token.exit

Lexer_dot_token.exit:                             ; preds = %Lexer_dot_token.exit.sink.split, %if.entry84, %end.i.i965, %if.entry.i.i954
  %length.0.i974 = phi i64 [ 1, %if.entry.i.i954 ], [ 2, %end.i.i965 ], [ 1, %if.entry84 ], [ 2, %Lexer_dot_token.exit.sink.split ]
  %token.0.i = phi i64 [ 50, %if.entry.i.i954 ], [ 52, %end.i.i965 ], [ 50, %if.entry84 ], [ 52, %Lexer_dot_token.exit.sink.split ]
  %1174 = tail call ptr @malloc(i32 16)
  %1175 = tail call ptr @malloc(i32 32)
  %1176 = load i64, ptr %memberidx.i.i951, align 4
  %1177 = sub nsw i64 1, %length.0.i974
  %1178 = add i64 %1177, %1176
  %1179 = add nsw i64 %1176, 1
  %memberidx2.i6.i976 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1180 = load i64, ptr %memberidx2.i6.i976, align 4
  %1181 = sub nuw i64 %1180, %length.0.i974
  %memberidx3.i.i977 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1182 = load i64, ptr %memberidx3.i.i977, align 4
  store i64 %1178, ptr %1175, align 4
  %memberidx1.i.i.i978 = getelementptr inbounds %FloRange, ptr %1175, i64 0, i32 1
  store i64 %1179, ptr %memberidx1.i.i.i978, align 4
  %memberidx2.i.i.i979 = getelementptr inbounds %FloRange, ptr %1175, i64 0, i32 2
  store i64 %1181, ptr %memberidx2.i.i.i979, align 4
  %memberidx3.i.i.i980 = getelementptr inbounds %FloRange, ptr %1175, i64 0, i32 3
  store i64 %1182, ptr %memberidx3.i.i.i980, align 4
  store i64 %token.0.i, ptr %1174, align 4
  %memberidx1.i4.i981 = getelementptr inbounds %Token, ptr %1174, i64 0, i32 1
  store ptr %1175, ptr %memberidx1.i4.i981, align 8
  br label %common.ret

if.entry87:                                       ; preds = %ifend11
  %1183 = tail call ptr @malloc(i32 16)
  %1184 = tail call ptr @malloc(i32 32)
  %memberidx90 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1185 = load i64, ptr %memberidx90, align 4
  %memberidx91 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1186 = load i64, ptr %memberidx91, align 4
  %memberidx2.i984 = getelementptr inbounds %FloRange, ptr %1184, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %1184, i8 0, i64 16, i1 false)
  store i64 %1185, ptr %memberidx2.i984, align 4
  %memberidx3.i985 = getelementptr inbounds %FloRange, ptr %1184, i64 0, i32 3
  store i64 %1186, ptr %memberidx3.i985, align 4
  store i64 46, ptr %1183, align 4
  %memberidx1.i986 = getelementptr inbounds %Token, ptr %1183, i64 0, i32 1
  store ptr %1184, ptr %memberidx1.i986, align 8
  br label %common.ret

ifend89:                                          ; preds = %ifend11
  %memberidx92 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1187 = load ptr, ptr %memberidx92, align 8
  %memberidx93 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1188 = load i64, ptr %memberidx93, align 4
  %1189 = tail call ptr @malloc(i32 1)
  %1190 = load ptr, ptr %1187, align 8
  %1191 = getelementptr inbounds i8, ptr %1190, i64 %1188
  %1192 = load i8, ptr %1191, align 2147483648
  store i8 %1192, ptr %1189, align 8
  %1193 = tail call ptr @malloc(i32 24)
  store ptr %1189, ptr %1193, align 8
  %memberidx1.i.i987 = getelementptr inbounds %String, ptr %1193, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i987, align 4
  %memberidx2.i.i988 = getelementptr inbounds %String, ptr %1193, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i988, align 4
  %1194 = load i64, ptr %memberidx93, align 4
  %1195 = alloca ptr, align 8
  %1196 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %1195, ptr nonnull @61, i64 %1194)
  %1197 = load ptr, ptr %1195, align 8
  %1198 = tail call ptr @malloc(i32 24)
  store ptr %1197, ptr %1198, align 8
  %memberidx1.i989 = getelementptr inbounds %String, ptr %1198, i64 0, i32 1
  store i64 %1196, ptr %memberidx1.i989, align 4
  %memberidx2.i990 = getelementptr inbounds %String, ptr %1198, i64 0, i32 2
  store i64 %1196, ptr %memberidx2.i990, align 4
  %1199 = call i64 @write(i64 1, ptr %1197, i64 %1196)
  %1200 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %memberidx95 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 2
  %1201 = load ptr, ptr %memberidx95, align 8
  %1202 = tail call ptr @malloc(i32 24)
  %1203 = call ptr @malloc(i32 2)
  %1204 = load i8, ptr %1189, align 8
  store i8 %1204, ptr %1203, align 8
  %1205 = getelementptr inbounds i8, ptr %1203, i64 1
  store i8 0, ptr %1205, align 1
  %1206 = alloca ptr, align 8
  %1207 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %1206, ptr nonnull @62, ptr nonnull %1203)
  %1208 = load ptr, ptr %1206, align 8
  %1209 = tail call ptr @malloc(i32 24)
  store ptr %1208, ptr %1209, align 8
  %memberidx1.i527 = getelementptr inbounds %String, ptr %1209, i64 0, i32 1
  store i64 %1207, ptr %memberidx1.i527, align 4
  %memberidx2.i528 = getelementptr inbounds %String, ptr %1209, i64 0, i32 2
  store i64 %1207, ptr %memberidx2.i528, align 4
  tail call void @free(ptr %1203)
  %1210 = call ptr @malloc(i32 32)
  %1211 = load i64, ptr %memberidx93, align 4
  %1212 = add nsw i64 %1211, 1
  %memberidx2.i180 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1213 = load i64, ptr %memberidx2.i180, align 4
  %1214 = add i64 %1213, -1
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1215 = load i64, ptr %memberidx3.i, align 4
  store i64 %1211, ptr %1210, align 4
  %memberidx1.i.i181 = getelementptr inbounds %FloRange, ptr %1210, i64 0, i32 1
  store i64 %1212, ptr %memberidx1.i.i181, align 4
  %memberidx2.i.i182 = getelementptr inbounds %FloRange, ptr %1210, i64 0, i32 2
  store i64 %1214, ptr %memberidx2.i.i182, align 4
  %memberidx3.i.i183 = getelementptr inbounds %FloRange, ptr %1210, i64 0, i32 3
  store i64 %1215, ptr %memberidx3.i.i183, align 4
  store i64 0, ptr %1202, align 4
  %memberidx1.i170 = getelementptr inbounds %FloError, ptr %1202, i64 0, i32 2
  store ptr %1210, ptr %memberidx1.i170, align 8
  %memberidx2.i171 = getelementptr inbounds %FloError, ptr %1202, i64 0, i32 1
  store ptr %1209, ptr %memberidx2.i171, align 8
  %memberidx.i = getelementptr inbounds %Array_FloError_, ptr %1201, i64 0, i32 1
  %1216 = load i64, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_FloError_, ptr %1201, i64 0, i32 2
  %1217 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %1216, %1217
  br i1 %.not.i, label %ifend89.Array_FloError____sl__.exit_crit_edge, label %if.entry.i

ifend89.Array_FloError____sl__.exit_crit_edge:    ; preds = %ifend89
  %.pre1246 = load ptr, ptr %1201, align 8
  br label %Array_FloError____sl__.exit

if.entry.i:                                       ; preds = %ifend89
  %1218 = shl nuw i64 %1217, 1
  store i64 %1218, ptr %memberidx1.i, align 4
  %1219 = load ptr, ptr %1201, align 8
  %1220 = shl i64 %1217, 4
  %1221 = call ptr @realloc(ptr %1219, i64 %1220)
  store ptr %1221, ptr %1201, align 8
  %.pre = load i64, ptr %memberidx.i, align 4
  br label %Array_FloError____sl__.exit

Array_FloError____sl__.exit:                      ; preds = %ifend89.Array_FloError____sl__.exit_crit_edge, %if.entry.i
  %1222 = phi ptr [ %.pre1246, %ifend89.Array_FloError____sl__.exit_crit_edge ], [ %1221, %if.entry.i ]
  %1223 = phi i64 [ %1216, %ifend89.Array_FloError____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %1224 = add nsw i64 %1223, 1
  store i64 %1224, ptr %memberidx.i, align 4
  %1225 = getelementptr inbounds ptr, ptr %1222, i64 %1223
  store ptr %1202, ptr %1225, align 8
  call void @free(ptr nonnull %1189)
  tail call void @free(ptr nonnull %1193)
  br label %common.ret
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare double @atof(ptr nocapture) local_unnamed_addr #7

define internal fastcc noalias ptr @Parser_parse(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Parser, align 8
  store ptr %0, ptr %3, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i68 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx2.i68, align 4
  %5 = icmp sgt i64 %4, -1
  br i1 %5, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %2
  %memberidx3.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  store i64 0, ptr %memberidx2.i, align 8
  %6 = load ptr, ptr %0, align 8
  %7 = load ptr, ptr %6, align 8
  store ptr %7, ptr %memberidx3.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %2, %if.entry.i
  %8 = phi i64 [ -1, %2 ], [ 0, %if.entry.i ]
  %9 = phi ptr [ undef, %2 ], [ %7, %if.entry.i ]
  %10 = tail call ptr @malloc(i32 56)
  tail call fastcc void @ModuleAST_constructor(ptr %10)
  %memberidx.i69 = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  %11 = load i64, ptr %9, align 4
  %12 = icmp eq i64 %11, 33
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx2.i68, align 4
  %17 = icmp slt i64 %8, %16
  br i1 %17, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %18 = phi i64 [ %26, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %19 = phi ptr [ %28, %Parser_advance.exit.i ], [ %9, %while.entry.i.preheader ]
  %20 = phi i64 [ %29, %Parser_advance.exit.i ], [ %8, %while.entry.i.preheader ]
  %21 = icmp slt i64 %20, %16
  br i1 %21, label %if.entry.i.i72, label %Parser_advance.exit.i

if.entry.i.i72:                                   ; preds = %while.entry.i
  %22 = add nsw i64 %20, 1
  store i64 %22, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  store ptr %25, ptr %memberidx.i69, align 8
  %.pre = load i64, ptr %25, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i72, %while.entry.i
  %26 = phi i64 [ %.pre, %if.entry.i.i72 ], [ %18, %while.entry.i ]
  %27 = phi i64 [ %.pre, %if.entry.i.i72 ], [ 33, %while.entry.i ]
  %28 = phi ptr [ %25, %if.entry.i.i72 ], [ %19, %while.entry.i ]
  %29 = phi i64 [ %22, %if.entry.i.i72 ], [ %20, %while.entry.i ]
  %30 = icmp eq i64 %27, 33
  br i1 %30, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %Parser_advance.exit
  %31 = phi i64 [ %11, %Parser_advance.exit ], [ %26, %Parser_advance.exit.i ]
  %32 = phi ptr [ %9, %Parser_advance.exit ], [ %28, %Parser_advance.exit.i ]
  %33 = icmp ne i64 %31, 46
  %34 = and i1 %33, %14
  br i1 %34, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_new_lines.exit
  %memberidx37 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 6
  %memberidx32 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 5
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 4
  %memberidx20 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 3
  %memberidx14 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 2
  %memberidx8 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_new_lines.exit117
  %35 = phi i64 [ %31, %while.entry.preheader ], [ %158, %Parser_new_lines.exit117 ]
  %36 = phi ptr [ %32, %while.entry.preheader ], [ %159, %Parser_new_lines.exit117 ]
  switch i64 %35, label %else35 [
    i64 61, label %if.entry
    i64 70, label %if.entry5
    i64 71, label %if.entry11
    i64 65, label %if.entry17
    i64 54, label %if.entry23
    i64 55, label %if.entry29
    i64 53, label %if.entry.i240
  ]

while.end:                                        ; preds = %Parser_new_lines.exit117, %Parser_error.exit, %Parser_new_lines.exit
  ret ptr %10

if.entry:                                         ; preds = %while.entry
  %37 = load i64, ptr %memberidx2.i, align 8
  %38 = load ptr, ptr %3, align 8
  %memberidx2.i79 = getelementptr inbounds %Array_Token_, ptr %38, i64 0, i32 1
  %39 = load i64, ptr %memberidx2.i79, align 4
  %40 = icmp slt i64 %37, %39
  br i1 %40, label %if.entry.i81, label %Parser_advance.exit82

if.entry.i81:                                     ; preds = %if.entry
  %41 = add nsw i64 %37, 1
  store i64 %41, ptr %memberidx2.i, align 8
  %42 = load ptr, ptr %38, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  store ptr %44, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit82

Parser_advance.exit82:                            ; preds = %if.entry, %if.entry.i81
  %45 = load ptr, ptr %10, align 8
  %46 = call ptr @malloc(i32 33)
  %memberidx.i.i87 = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 1
  %47 = call ptr @malloc(i32 24)
  %memberidx.i.i.i88 = getelementptr inbounds %Array_ArgNode_, ptr %47, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i88, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %47, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i, align 4
  %48 = call ptr @malloc(i32 64)
  store ptr %48, ptr %47, align 8
  store i64 0, ptr %memberidx.i.i.i88, align 4
  store ptr %47, ptr %memberidx.i.i87, align 8
  %memberidx3.i.i90 = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 4
  store i1 false, ptr %memberidx3.i.i90, align 1
  %49 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %49, ptr %46, align 8
  %50 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %51 = load ptr, ptr %memberidx.i69, align 8
  %52 = load i64, ptr %51, align 4
  %.not.i92 = icmp eq i64 %52, 26
  br i1 %.not.i92, label %Parser_new_lines.exit.i, label %ifend.i

ifend.i:                                          ; preds = %Parser_advance.exit82
  %53 = load ptr, ptr %memberidx.i.i87, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %53)
  %.pre371 = load ptr, ptr %memberidx.i69, align 8
  %.pre372 = load i64, ptr %.pre371, align 4
  %54 = icmp eq i64 %.pre372, 33
  %55 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx3.i.i.i, align 4
  %57 = icmp eq i64 %56, 0
  %58 = and i1 %54, %57
  br i1 %58, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %ifend.i
  %59 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %59, i64 0, i32 1
  %.pre373 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i.i

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i
  %60 = phi i64 [ %.pre373, %while.entry.i.i.preheader ], [ %69, %Parser_advance.exit.i.i ]
  %61 = load i64, ptr %memberidx2.i12.i.i, align 4
  %62 = icmp slt i64 %60, %61
  br i1 %62, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %while.entry.i.i
  %63 = add nsw i64 %60, 1
  store i64 %63, ptr %memberidx2.i, align 8
  %64 = load ptr, ptr %59, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  store ptr %66, ptr %memberidx.i69, align 8
  %.pre374 = load i64, ptr %66, align 4
  %.pre375 = load i64, ptr %memberidx3.i.i.i, align 4
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %while.entry.i.i
  %67 = phi i64 [ %.pre375, %if.entry.i.i.i ], [ 0, %while.entry.i.i ]
  %68 = phi i64 [ %.pre374, %if.entry.i.i.i ], [ 33, %while.entry.i.i ]
  %69 = phi i64 [ %63, %if.entry.i.i.i ], [ %60, %while.entry.i.i ]
  %70 = icmp eq i64 %68, 33
  %71 = icmp eq i64 %67, 0
  %72 = and i1 %70, %71
  br i1 %72, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i, %Parser_advance.exit82, %ifend.i
  %73 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %74 = load ptr, ptr %memberidx.i69, align 8
  %75 = load i64, ptr %74, align 4
  %76 = icmp eq i64 %75, 1
  br i1 %76, label %if.entry6.i, label %else7.i

if.entry6.i:                                      ; preds = %Parser_new_lines.exit.i
  %77 = load i64, ptr %memberidx2.i, align 8
  %78 = load ptr, ptr %3, align 8
  %memberidx2.i40.i = getelementptr inbounds %Array_Token_, ptr %78, i64 0, i32 1
  %79 = load i64, ptr %memberidx2.i40.i, align 4
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %if.entry.i.i95, label %Parser_advance.exit.i96

if.entry.i.i95:                                   ; preds = %if.entry6.i
  %81 = add nsw i64 %77, 1
  store i64 %81, ptr %memberidx2.i, align 8
  %82 = load ptr, ptr %78, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  store ptr %84, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i96

Parser_advance.exit.i96:                          ; preds = %if.entry.i.i95, %if.entry6.i
  %memberidx9.i = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 3
  %85 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %85, ptr %memberidx9.i, align 8
  br label %ifend8.i

else7.i:                                          ; preds = %Parser_new_lines.exit.i
  %86 = call ptr @malloc(i32 24)
  %87 = call ptr @malloc(i32 4)
  store i32 1684631414, ptr %87, align 8
  %88 = call ptr @malloc(i32 24)
  store ptr %87, ptr %88, align 8
  %memberidx1.i.i42.i = getelementptr inbounds %String, ptr %88, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i42.i, align 4
  %memberidx2.i.i43.i = getelementptr inbounds %String, ptr %88, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i43.i, align 4
  %89 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %89, i8 0, i64 32, i1 false)
  store i64 53, ptr %86, align 4
  %memberidx1.i.i46.i = getelementptr inbounds %Token, ptr %86, i64 0, i32 1
  store ptr %89, ptr %memberidx1.i.i46.i, align 8
  %memberidx.i47.i = getelementptr inbounds %IdentifierToken, ptr %86, i64 0, i32 2
  store ptr %88, ptr %memberidx.i47.i, align 8
  %memberidx10.i = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 3
  %90 = call ptr @malloc(i32 32)
  %91 = load ptr, ptr %memberidx1.i.i46.i, align 8
  store ptr %91, ptr %90, align 8
  %memberidx.i.i62.i = getelementptr inbounds %TypeNode, ptr %90, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i62.i, align 4
  %memberidx.i63.i = getelementptr inbounds %RecordTypeNode, ptr %90, i64 0, i32 2
  store ptr %86, ptr %memberidx.i63.i, align 8
  %memberidx1.i64.i = getelementptr inbounds %RecordTypeNode, ptr %90, i64 0, i32 3
  %92 = call ptr @malloc(i32 24)
  %memberidx.i5.i.i = getelementptr inbounds %Array_TypeNode_, ptr %92, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i, align 4
  %memberidx1.i.i65.i = getelementptr inbounds %Array_TypeNode_, ptr %92, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i65.i, align 4
  %93 = call ptr @malloc(i32 64)
  store ptr %93, ptr %92, align 8
  store i64 0, ptr %memberidx.i5.i.i, align 4
  store ptr %92, ptr %memberidx1.i64.i, align 8
  store ptr %90, ptr %memberidx10.i, align 8
  br label %ifend8.i

ifend8.i:                                         ; preds = %else7.i, %Parser_advance.exit.i96
  %94 = load ptr, ptr %memberidx.i69, align 8
  %95 = load i64, ptr %94, align 4
  %96 = icmp eq i64 %95, 33
  %97 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i51.i = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 1
  %98 = load i64, ptr %memberidx3.i.i51.i, align 4
  %99 = icmp eq i64 %98, 0
  %100 = and i1 %96, %99
  br i1 %100, label %while.entry.i54.i.preheader, label %Parser_new_lines.exit61.i

while.entry.i54.i.preheader:                      ; preds = %ifend8.i
  %101 = load ptr, ptr %3, align 8
  %memberidx2.i12.i53.i = getelementptr inbounds %Array_Token_, ptr %101, i64 0, i32 1
  %.pre376 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i54.i

while.entry.i54.i:                                ; preds = %while.entry.i54.i.preheader, %Parser_advance.exit.i60.i
  %102 = phi i64 [ 33, %while.entry.i54.i.preheader ], [ %110, %Parser_advance.exit.i60.i ]
  %103 = phi i64 [ %.pre376, %while.entry.i54.i.preheader ], [ %113, %Parser_advance.exit.i60.i ]
  %104 = load i64, ptr %memberidx2.i12.i53.i, align 4
  %105 = icmp slt i64 %103, %104
  br i1 %105, label %if.entry.i.i56.i, label %Parser_advance.exit.i60.i

if.entry.i.i56.i:                                 ; preds = %while.entry.i54.i
  %106 = add nsw i64 %103, 1
  store i64 %106, ptr %memberidx2.i, align 8
  %107 = load ptr, ptr %101, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %106
  %109 = load ptr, ptr %108, align 8
  store ptr %109, ptr %memberidx.i69, align 8
  %.pre377 = load i64, ptr %109, align 4
  %.pre378 = load i64, ptr %memberidx3.i.i51.i, align 4
  br label %Parser_advance.exit.i60.i

Parser_advance.exit.i60.i:                        ; preds = %if.entry.i.i56.i, %while.entry.i54.i
  %110 = phi i64 [ %.pre377, %if.entry.i.i56.i ], [ %102, %while.entry.i54.i ]
  %111 = phi i64 [ %.pre378, %if.entry.i.i56.i ], [ 0, %while.entry.i54.i ]
  %112 = phi i64 [ %.pre377, %if.entry.i.i56.i ], [ 33, %while.entry.i54.i ]
  %113 = phi i64 [ %106, %if.entry.i.i56.i ], [ %103, %while.entry.i54.i ]
  %114 = icmp eq i64 %112, 33
  %115 = icmp eq i64 %111, 0
  %116 = and i1 %114, %115
  br i1 %116, label %while.entry.i54.i, label %Parser_new_lines.exit61.i

Parser_new_lines.exit61.i:                        ; preds = %Parser_advance.exit.i60.i, %ifend8.i
  %117 = phi i64 [ %95, %ifend8.i ], [ %110, %Parser_advance.exit.i60.i ]
  %118 = icmp eq i64 %117, 27
  br i1 %118, label %if.entry14.i, label %else15.i

if.entry14.i:                                     ; preds = %Parser_new_lines.exit61.i
  %memberidx17.i = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 2
  %119 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %119, ptr %memberidx17.i, align 8
  br label %Parser_parse_function.exit

else15.i:                                         ; preds = %Parser_new_lines.exit61.i
  store i1 true, ptr %memberidx3.i.i90, align 1
  br label %Parser_parse_function.exit

Parser_parse_function.exit:                       ; preds = %if.entry14.i, %else15.i
  %memberidx.i98 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %45, i64 0, i32 1
  %120 = load i64, ptr %memberidx.i98, align 4
  %memberidx1.i99 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %45, i64 0, i32 2
  %121 = load i64, ptr %memberidx1.i99, align 4
  %.not.i100 = icmp slt i64 %120, %121
  br i1 %.not.i100, label %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge, label %if.entry.i102

Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge: ; preds = %Parser_parse_function.exit
  %.pre380 = load ptr, ptr %45, align 8
  br label %Array_FunctionDeclarationNode____sl__.exit

if.entry.i102:                                    ; preds = %Parser_parse_function.exit
  %122 = shl nuw i64 %121, 1
  store i64 %122, ptr %memberidx1.i99, align 4
  %123 = load ptr, ptr %45, align 8
  %124 = shl i64 %121, 4
  %125 = call ptr @realloc(ptr %123, i64 %124)
  store ptr %125, ptr %45, align 8
  %.pre379 = load i64, ptr %memberidx.i98, align 4
  br label %Array_FunctionDeclarationNode____sl__.exit

Array_FunctionDeclarationNode____sl__.exit:       ; preds = %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge, %if.entry.i102
  %126 = phi ptr [ %.pre380, %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge ], [ %125, %if.entry.i102 ]
  %127 = phi i64 [ %120, %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge ], [ %.pre379, %if.entry.i102 ]
  %128 = add nsw i64 %127, 1
  store i64 %128, ptr %memberidx.i98, align 4
  %129 = getelementptr inbounds ptr, ptr %126, i64 %127
  store ptr %46, ptr %129, align 8
  br label %ifend

ifend:                                            ; preds = %Array_VarDeclarationStatement____sl__.exit, %Array_TypeAliasNode____sl__.exit, %Array_ConstDeclarationStatement____sl__.exit, %Array_ImportNode____sl__.exit, %Array_EnumNode____sl__.exit, %Array_ClassDeclarationNode____sl__.exit, %Array_FunctionDeclarationNode____sl__.exit
  %130 = load ptr, ptr %memberidx.i69, align 8
  %131 = load i64, ptr %130, align 4
  %132 = icmp eq i64 %131, 33
  %133 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i107 = getelementptr inbounds %Array_FloError_, ptr %133, i64 0, i32 1
  %134 = load i64, ptr %memberidx3.i.i107, align 4
  %135 = icmp eq i64 %134, 0
  %136 = and i1 %132, %135
  br i1 %136, label %while.entry.i110.preheader, label %Parser_new_lines.exit117

while.entry.i110.preheader:                       ; preds = %ifend
  %137 = load ptr, ptr %3, align 8
  %memberidx2.i12.i109 = getelementptr inbounds %Array_Token_, ptr %137, i64 0, i32 1
  %.pre381 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i110

while.entry.i110:                                 ; preds = %while.entry.i110.preheader, %Parser_advance.exit.i116
  %138 = phi i64 [ 0, %while.entry.i110.preheader ], [ %148, %Parser_advance.exit.i116 ]
  %139 = phi i64 [ 33, %while.entry.i110.preheader ], [ %149, %Parser_advance.exit.i116 ]
  %140 = phi ptr [ %130, %while.entry.i110.preheader ], [ %152, %Parser_advance.exit.i116 ]
  %141 = phi i64 [ %.pre381, %while.entry.i110.preheader ], [ %153, %Parser_advance.exit.i116 ]
  %142 = load i64, ptr %memberidx2.i12.i109, align 4
  %143 = icmp slt i64 %141, %142
  br i1 %143, label %if.entry.i.i112, label %Parser_advance.exit.i116

if.entry.i.i112:                                  ; preds = %while.entry.i110
  %144 = add nsw i64 %141, 1
  store i64 %144, ptr %memberidx2.i, align 8
  %145 = load ptr, ptr %137, align 8
  %146 = getelementptr inbounds ptr, ptr %145, i64 %144
  %147 = load ptr, ptr %146, align 8
  store ptr %147, ptr %memberidx.i69, align 8
  %.pre382 = load i64, ptr %147, align 4
  %.pre383 = load i64, ptr %memberidx3.i.i107, align 4
  br label %Parser_advance.exit.i116

Parser_advance.exit.i116:                         ; preds = %if.entry.i.i112, %while.entry.i110
  %148 = phi i64 [ %.pre383, %if.entry.i.i112 ], [ %138, %while.entry.i110 ]
  %149 = phi i64 [ %.pre382, %if.entry.i.i112 ], [ %139, %while.entry.i110 ]
  %150 = phi i64 [ %.pre383, %if.entry.i.i112 ], [ 0, %while.entry.i110 ]
  %151 = phi i64 [ %.pre382, %if.entry.i.i112 ], [ 33, %while.entry.i110 ]
  %152 = phi ptr [ %147, %if.entry.i.i112 ], [ %140, %while.entry.i110 ]
  %153 = phi i64 [ %144, %if.entry.i.i112 ], [ %141, %while.entry.i110 ]
  %154 = icmp eq i64 %151, 33
  %155 = icmp eq i64 %150, 0
  %156 = and i1 %154, %155
  br i1 %156, label %while.entry.i110, label %Parser_new_lines.exit117

Parser_new_lines.exit117:                         ; preds = %Parser_advance.exit.i116, %ifend
  %157 = phi i64 [ %134, %ifend ], [ %148, %Parser_advance.exit.i116 ]
  %158 = phi i64 [ %131, %ifend ], [ %149, %Parser_advance.exit.i116 ]
  %159 = phi ptr [ %130, %ifend ], [ %152, %Parser_advance.exit.i116 ]
  %160 = icmp ne i64 %158, 46
  %161 = icmp eq i64 %157, 0
  %162 = and i1 %160, %161
  br i1 %162, label %while.entry, label %while.end

if.entry5:                                        ; preds = %while.entry
  %163 = load ptr, ptr %memberidx8, align 8
  %164 = load i64, ptr %memberidx2.i, align 8
  %165 = load ptr, ptr %3, align 8
  %memberidx2.i.i122 = getelementptr inbounds %Array_Token_, ptr %165, i64 0, i32 1
  %166 = load i64, ptr %memberidx2.i.i122, align 4
  %167 = icmp slt i64 %164, %166
  br i1 %167, label %if.entry.i.i124, label %Parser_advance.exit.i127

if.entry.i.i124:                                  ; preds = %if.entry5
  %168 = add nsw i64 %164, 1
  store i64 %168, ptr %memberidx2.i, align 8
  %169 = load ptr, ptr %165, align 8
  %170 = getelementptr inbounds ptr, ptr %169, i64 %168
  %171 = load ptr, ptr %170, align 8
  store ptr %171, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i127

Parser_advance.exit.i127:                         ; preds = %if.entry.i.i124, %if.entry5
  %172 = call ptr @malloc(i32 40)
  %173 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %173, ptr %172, align 8
  %memberidx1.i.i125 = getelementptr inbounds %ClassDeclarationNode, ptr %172, i64 0, i32 3
  %174 = call ptr @malloc(i32 24)
  %memberidx.i.i23.i = getelementptr inbounds %Array_FieldNode_, ptr %174, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i23.i, align 4
  %memberidx1.i.i24.i = getelementptr inbounds %Array_FieldNode_, ptr %174, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i24.i, align 4
  %175 = call ptr @malloc(i32 64)
  store ptr %175, ptr %174, align 8
  store i64 0, ptr %memberidx.i.i23.i, align 4
  store ptr %174, ptr %memberidx1.i.i125, align 8
  %memberidx4.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %172, i64 0, i32 4
  %176 = call ptr @malloc(i32 24)
  %memberidx.i15.i.i = getelementptr inbounds %Array_MethodNode_, ptr %176, i64 0, i32 1
  store i64 0, ptr %memberidx.i15.i.i, align 4
  %memberidx1.i16.i.i = getelementptr inbounds %Array_MethodNode_, ptr %176, i64 0, i32 2
  store i64 8, ptr %memberidx1.i16.i.i, align 4
  %177 = call ptr @malloc(i32 64)
  store ptr %177, ptr %176, align 8
  store i64 0, ptr %memberidx.i15.i.i, align 4
  store ptr %176, ptr %memberidx4.i.i, align 8
  %memberidx7.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %172, i64 0, i32 1
  %178 = call ptr @malloc(i32 24)
  %memberidx.i17.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %178, i64 0, i32 1
  store i64 0, ptr %memberidx.i17.i.i, align 4
  %memberidx1.i18.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %178, i64 0, i32 2
  store i64 8, ptr %memberidx1.i18.i.i, align 4
  %179 = call ptr @malloc(i32 64)
  store ptr %179, ptr %178, align 8
  store i64 0, ptr %memberidx.i17.i.i, align 4
  store ptr %178, ptr %memberidx7.i.i, align 8
  %memberidx10.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %172, i64 0, i32 2
  store ptr null, ptr %memberidx10.i.i, align 8
  %180 = load ptr, ptr %memberidx.i69, align 8
  %181 = load i64, ptr %180, align 4
  %182 = icmp eq i64 %181, 42
  br i1 %182, label %if.entry.i129, label %ifend.i130

if.entry.i129:                                    ; preds = %Parser_advance.exit.i127
  %183 = load i64, ptr %memberidx2.i, align 8
  %184 = load ptr, ptr %3, align 8
  %memberidx2.i.i28.i = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 1
  %185 = load i64, ptr %memberidx2.i.i28.i, align 4
  %186 = icmp slt i64 %183, %185
  br i1 %186, label %if.entry.i.i30.i, label %Parser_advance.exit.i31.i

if.entry.i.i30.i:                                 ; preds = %if.entry.i129
  %187 = add nsw i64 %183, 1
  store i64 %187, ptr %memberidx2.i, align 8
  %188 = load ptr, ptr %184, align 8
  %189 = getelementptr inbounds ptr, ptr %188, i64 %187
  %190 = load ptr, ptr %189, align 8
  store ptr %190, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i31.i

Parser_advance.exit.i31.i:                        ; preds = %if.entry.i.i30.i, %if.entry.i129
  %191 = call ptr @malloc(i32 8)
  %192 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %192, ptr %191, align 8
  %193 = load i64, ptr %memberidx.i17.i.i, align 4
  %194 = load i64, ptr %memberidx1.i18.i.i, align 4
  %.not.i20.i.i = icmp slt i64 %193, %194
  br i1 %.not.i20.i.i, label %Parser_advance.exit.i31.i.Array_GenericParameterNode____sl__.exit23.i.i_crit_edge, label %if.entry.i22.i.i

Parser_advance.exit.i31.i.Array_GenericParameterNode____sl__.exit23.i.i_crit_edge: ; preds = %Parser_advance.exit.i31.i
  %.pre334 = load ptr, ptr %178, align 8
  br label %Array_GenericParameterNode____sl__.exit23.i.i

if.entry.i22.i.i:                                 ; preds = %Parser_advance.exit.i31.i
  %195 = shl nuw i64 %194, 1
  store i64 %195, ptr %memberidx1.i18.i.i, align 4
  %196 = load ptr, ptr %178, align 8
  %197 = shl i64 %194, 4
  %198 = call ptr @realloc(ptr %196, i64 %197)
  store ptr %198, ptr %178, align 8
  %.pre333 = load i64, ptr %memberidx.i17.i.i, align 4
  br label %Array_GenericParameterNode____sl__.exit23.i.i

Array_GenericParameterNode____sl__.exit23.i.i:    ; preds = %Parser_advance.exit.i31.i.Array_GenericParameterNode____sl__.exit23.i.i_crit_edge, %if.entry.i22.i.i
  %199 = phi ptr [ %198, %if.entry.i22.i.i ], [ %.pre334, %Parser_advance.exit.i31.i.Array_GenericParameterNode____sl__.exit23.i.i_crit_edge ]
  %200 = phi i64 [ %.pre333, %if.entry.i22.i.i ], [ %193, %Parser_advance.exit.i31.i.Array_GenericParameterNode____sl__.exit23.i.i_crit_edge ]
  %201 = add nsw i64 %200, 1
  store i64 %201, ptr %memberidx.i17.i.i, align 4
  %202 = getelementptr inbounds ptr, ptr %199, i64 %200
  store ptr %191, ptr %202, align 8
  %203 = load ptr, ptr %memberidx.i69, align 8
  %204 = load i64, ptr %203, align 4
  %205 = icmp eq i64 %204, 3
  %206 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i26.i.i = getelementptr inbounds %Array_FloError_, ptr %206, i64 0, i32 1
  %207 = load i64, ptr %memberidx3.i26.i.i, align 4
  %208 = icmp eq i64 %207, 0
  %209 = and i1 %205, %208
  br i1 %209, label %while.entry.i33.i, label %Parser_parse_generic_parameters.exit.i

while.entry.i33.i:                                ; preds = %Array_GenericParameterNode____sl__.exit23.i.i, %Array_GenericParameterNode____sl__.exit.i.i
  %210 = load i64, ptr %memberidx2.i, align 8
  %211 = load ptr, ptr %3, align 8
  %memberidx2.i28.i.i = getelementptr inbounds %Array_Token_, ptr %211, i64 0, i32 1
  %212 = load i64, ptr %memberidx2.i28.i.i, align 4
  %213 = icmp slt i64 %210, %212
  br i1 %213, label %if.entry.i30.i.i, label %Parser_advance.exit31.i.i

if.entry.i30.i.i:                                 ; preds = %while.entry.i33.i
  %214 = add nsw i64 %210, 1
  store i64 %214, ptr %memberidx2.i, align 8
  %215 = load ptr, ptr %211, align 8
  %216 = getelementptr inbounds ptr, ptr %215, i64 %214
  %217 = load ptr, ptr %216, align 8
  store ptr %217, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit31.i.i

Parser_advance.exit31.i.i:                        ; preds = %if.entry.i30.i.i, %while.entry.i33.i
  %218 = call ptr @malloc(i32 8)
  %219 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %219, ptr %218, align 8
  %220 = load i64, ptr %memberidx.i17.i.i, align 4
  %221 = load i64, ptr %memberidx1.i18.i.i, align 4
  %.not.i.i35.i = icmp slt i64 %220, %221
  br i1 %.not.i.i35.i, label %Parser_advance.exit31.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge, label %if.entry.i17.i.i

Parser_advance.exit31.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge: ; preds = %Parser_advance.exit31.i.i
  %.pre336 = load ptr, ptr %178, align 8
  br label %Array_GenericParameterNode____sl__.exit.i.i

if.entry.i17.i.i:                                 ; preds = %Parser_advance.exit31.i.i
  %222 = shl nuw i64 %221, 1
  store i64 %222, ptr %memberidx1.i18.i.i, align 4
  %223 = load ptr, ptr %178, align 8
  %224 = shl i64 %221, 4
  %225 = call ptr @realloc(ptr %223, i64 %224)
  store ptr %225, ptr %178, align 8
  %.pre335 = load i64, ptr %memberidx.i17.i.i, align 4
  br label %Array_GenericParameterNode____sl__.exit.i.i

Array_GenericParameterNode____sl__.exit.i.i:      ; preds = %Parser_advance.exit31.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge, %if.entry.i17.i.i
  %226 = phi ptr [ %225, %if.entry.i17.i.i ], [ %.pre336, %Parser_advance.exit31.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge ]
  %227 = phi i64 [ %.pre335, %if.entry.i17.i.i ], [ %220, %Parser_advance.exit31.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge ]
  %228 = add nsw i64 %227, 1
  store i64 %228, ptr %memberidx.i17.i.i, align 4
  %229 = getelementptr inbounds ptr, ptr %226, i64 %227
  store ptr %218, ptr %229, align 8
  %230 = load ptr, ptr %memberidx.i69, align 8
  %231 = load i64, ptr %230, align 4
  %232 = icmp eq i64 %231, 3
  %233 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i15.i.i = getelementptr inbounds %Array_FloError_, ptr %233, i64 0, i32 1
  %234 = load i64, ptr %memberidx3.i15.i.i, align 4
  %235 = icmp eq i64 %234, 0
  %236 = and i1 %232, %235
  br i1 %236, label %while.entry.i33.i, label %Parser_parse_generic_parameters.exit.i

Parser_parse_generic_parameters.exit.i:           ; preds = %Array_GenericParameterNode____sl__.exit.i.i, %Array_GenericParameterNode____sl__.exit23.i.i
  %237 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 41)
  %.pre337 = load ptr, ptr %memberidx.i69, align 8
  %.pre338 = load i64, ptr %.pre337, align 4
  br label %ifend.i130

ifend.i130:                                       ; preds = %Parser_parse_generic_parameters.exit.i, %Parser_advance.exit.i127
  %238 = phi i64 [ %.pre338, %Parser_parse_generic_parameters.exit.i ], [ %181, %Parser_advance.exit.i127 ]
  %239 = icmp eq i64 %238, 25
  br i1 %239, label %if.entry5.i, label %ifend7.i

if.entry5.i:                                      ; preds = %ifend.i130
  %240 = load i64, ptr %memberidx2.i, align 8
  %241 = load ptr, ptr %3, align 8
  %memberidx2.i39.i = getelementptr inbounds %Array_Token_, ptr %241, i64 0, i32 1
  %242 = load i64, ptr %memberidx2.i39.i, align 4
  %243 = icmp slt i64 %240, %242
  br i1 %243, label %if.entry.i41.i, label %Parser_advance.exit43.i

if.entry.i41.i:                                   ; preds = %if.entry5.i
  %244 = add nsw i64 %240, 1
  store i64 %244, ptr %memberidx2.i, align 8
  %245 = load ptr, ptr %241, align 8
  %246 = getelementptr inbounds ptr, ptr %245, i64 %244
  %247 = load ptr, ptr %246, align 8
  store ptr %247, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit43.i

Parser_advance.exit43.i:                          ; preds = %if.entry.i41.i, %if.entry5.i
  %248 = call fastcc ptr @Parser_parse_object_type(ptr nonnull %3)
  store ptr %248, ptr %memberidx10.i.i, align 8
  %249 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %.pre339 = load ptr, ptr %memberidx.i69, align 8
  %.pre340 = load i64, ptr %.pre339, align 4
  br label %ifend7.i

ifend7.i:                                         ; preds = %Parser_advance.exit43.i, %ifend.i130
  %250 = phi i64 [ %.pre340, %Parser_advance.exit43.i ], [ %238, %ifend.i130 ]
  %251 = icmp eq i64 %250, 33
  %252 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i47.i = getelementptr inbounds %Array_FloError_, ptr %252, i64 0, i32 1
  %253 = load i64, ptr %memberidx3.i.i47.i, align 4
  %254 = icmp eq i64 %253, 0
  %255 = and i1 %251, %254
  br i1 %255, label %while.entry.i48.i.preheader, label %Parser_new_lines.exit.i138

while.entry.i48.i.preheader:                      ; preds = %ifend7.i
  %256 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i132 = getelementptr inbounds %Array_Token_, ptr %256, i64 0, i32 1
  %.pre341 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i48.i

while.entry.i48.i:                                ; preds = %while.entry.i48.i.preheader, %Parser_advance.exit.i50.i
  %257 = phi i64 [ %.pre341, %while.entry.i48.i.preheader ], [ %266, %Parser_advance.exit.i50.i ]
  %258 = load i64, ptr %memberidx2.i12.i.i132, align 4
  %259 = icmp slt i64 %257, %258
  br i1 %259, label %if.entry.i.i49.i, label %Parser_advance.exit.i50.i

if.entry.i.i49.i:                                 ; preds = %while.entry.i48.i
  %260 = add nsw i64 %257, 1
  store i64 %260, ptr %memberidx2.i, align 8
  %261 = load ptr, ptr %256, align 8
  %262 = getelementptr inbounds ptr, ptr %261, i64 %260
  %263 = load ptr, ptr %262, align 8
  store ptr %263, ptr %memberidx.i69, align 8
  %.pre342 = load i64, ptr %263, align 4
  %.pre343 = load i64, ptr %memberidx3.i.i47.i, align 4
  br label %Parser_advance.exit.i50.i

Parser_advance.exit.i50.i:                        ; preds = %if.entry.i.i49.i, %while.entry.i48.i
  %264 = phi i64 [ %.pre343, %if.entry.i.i49.i ], [ 0, %while.entry.i48.i ]
  %265 = phi i64 [ %.pre342, %if.entry.i.i49.i ], [ 33, %while.entry.i48.i ]
  %266 = phi i64 [ %260, %if.entry.i.i49.i ], [ %257, %while.entry.i48.i ]
  %267 = icmp eq i64 %265, 33
  %268 = icmp eq i64 %264, 0
  %269 = and i1 %267, %268
  br i1 %269, label %while.entry.i48.i, label %Parser_new_lines.exit.i138

Parser_new_lines.exit.i138:                       ; preds = %Parser_advance.exit.i50.i, %ifend7.i
  %270 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 27)
  %271 = load ptr, ptr %memberidx.i69, align 8
  %272 = load i64, ptr %271, align 4
  %273 = icmp eq i64 %272, 33
  %274 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %274, i64 0, i32 1
  %275 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %276 = icmp eq i64 %275, 0
  %277 = and i1 %273, %276
  br i1 %277, label %while.entry.i.i.i.preheader, label %Parser_new_lines.exit.i.i

while.entry.i.i.i.preheader:                      ; preds = %Parser_new_lines.exit.i138
  %278 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i.i = getelementptr inbounds %Array_Token_, ptr %278, i64 0, i32 1
  %.pre344 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i.i.i

while.entry.i.i.i:                                ; preds = %while.entry.i.i.i.preheader, %Parser_advance.exit.i.i.i
  %279 = phi i64 [ 33, %while.entry.i.i.i.preheader ], [ %287, %Parser_advance.exit.i.i.i ]
  %280 = phi i64 [ %.pre344, %while.entry.i.i.i.preheader ], [ %290, %Parser_advance.exit.i.i.i ]
  %281 = load i64, ptr %memberidx2.i12.i.i.i, align 4
  %282 = icmp slt i64 %280, %281
  br i1 %282, label %if.entry.i.i.i.i, label %Parser_advance.exit.i.i.i

if.entry.i.i.i.i:                                 ; preds = %while.entry.i.i.i
  %283 = add nsw i64 %280, 1
  store i64 %283, ptr %memberidx2.i, align 8
  %284 = load ptr, ptr %278, align 8
  %285 = getelementptr inbounds ptr, ptr %284, i64 %283
  %286 = load ptr, ptr %285, align 8
  store ptr %286, ptr %memberidx.i69, align 8
  %.pre345 = load i64, ptr %286, align 4
  %.pre346 = load i64, ptr %memberidx3.i.i.i.i, align 4
  br label %Parser_advance.exit.i.i.i

Parser_advance.exit.i.i.i:                        ; preds = %if.entry.i.i.i.i, %while.entry.i.i.i
  %287 = phi i64 [ %.pre345, %if.entry.i.i.i.i ], [ %279, %while.entry.i.i.i ]
  %288 = phi i64 [ %.pre346, %if.entry.i.i.i.i ], [ 0, %while.entry.i.i.i ]
  %289 = phi i64 [ %.pre345, %if.entry.i.i.i.i ], [ 33, %while.entry.i.i.i ]
  %290 = phi i64 [ %283, %if.entry.i.i.i.i ], [ %280, %while.entry.i.i.i ]
  %291 = icmp eq i64 %289, 33
  %292 = icmp eq i64 %288, 0
  %293 = and i1 %291, %292
  br i1 %293, label %while.entry.i.i.i, label %Parser_new_lines.exit.i.i

Parser_new_lines.exit.i.i:                        ; preds = %Parser_advance.exit.i.i.i, %Parser_new_lines.exit.i138
  %294 = phi i64 [ %272, %Parser_new_lines.exit.i138 ], [ %287, %Parser_advance.exit.i.i.i ]
  %295 = phi i64 [ %275, %Parser_new_lines.exit.i138 ], [ %288, %Parser_advance.exit.i.i.i ]
  %.fr = freeze i64 %295
  %296 = icmp eq i64 %.fr, 0
  br i1 %296, label %switch.early.test, label %while.end.i.i

switch.early.test:                                ; preds = %Parser_new_lines.exit.i.i
  switch i64 %294, label %while.entry.i.i140 [
    i64 46, label %while.end.i.i
    i64 28, label %while.end.i.i
  ]

while.entry.i.i140:                               ; preds = %switch.early.test, %switch.early.test291
  %297 = phi i64 [ %353, %switch.early.test291 ], [ %294, %switch.early.test ]
  switch i64 %297, label %while.entry.i.i140.ifend.i.i_crit_edge [
    i64 67, label %else.i.i
    i64 66, label %Parser_parse_access_modifier.exit.i.i.fold.split
    i64 68, label %else.i.i.fold.split
  ]

while.entry.i.i140.ifend.i.i_crit_edge:           ; preds = %while.entry.i.i140
  %.pre347 = load i64, ptr %memberidx2.i, align 8
  %.pre348 = load ptr, ptr %3, align 8
  br label %ifend.i.i

Parser_parse_access_modifier.exit.i.i.fold.split: ; preds = %while.entry.i.i140
  br label %else.i.i

while.end.i.i:                                    ; preds = %switch.early.test291, %switch.early.test291, %Parser_new_lines.exit105.i.i, %switch.early.test, %switch.early.test, %Parser_new_lines.exit.i.i
  %298 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 28)
  br label %Parser_parse_class.exit

else.i.i.fold.split:                              ; preds = %while.entry.i.i140
  br label %else.i.i

else.i.i:                                         ; preds = %while.entry.i.i140, %else.i.i.fold.split, %Parser_parse_access_modifier.exit.i.i.fold.split
  %common.ret.op.i.i.i.ph = phi i64 [ 1, %Parser_parse_access_modifier.exit.i.i.fold.split ], [ 2, %while.entry.i.i140 ], [ 3, %else.i.i.fold.split ]
  %299 = load i64, ptr %memberidx2.i, align 8
  %300 = load ptr, ptr %3, align 8
  %memberidx2.i59.i.i = getelementptr inbounds %Array_Token_, ptr %300, i64 0, i32 1
  %301 = load i64, ptr %memberidx2.i59.i.i, align 4
  %302 = icmp slt i64 %299, %301
  br i1 %302, label %if.entry.i.i.i141, label %ifend.i.i

if.entry.i.i.i141:                                ; preds = %else.i.i
  %303 = add nsw i64 %299, 1
  store i64 %303, ptr %memberidx2.i, align 8
  %304 = load ptr, ptr %300, align 8
  %305 = getelementptr inbounds ptr, ptr %304, i64 %303
  %306 = load ptr, ptr %305, align 8
  store ptr %306, ptr %memberidx.i69, align 8
  br label %ifend.i.i

ifend.i.i:                                        ; preds = %while.entry.i.i140.ifend.i.i_crit_edge, %else.i.i, %if.entry.i.i.i141
  %307 = phi ptr [ %300, %if.entry.i.i.i141 ], [ %300, %else.i.i ], [ %.pre348, %while.entry.i.i140.ifend.i.i_crit_edge ]
  %308 = phi i64 [ %303, %if.entry.i.i.i141 ], [ %299, %else.i.i ], [ %.pre347, %while.entry.i.i140.ifend.i.i_crit_edge ]
  %access_modifier.0.i.i = phi i64 [ %common.ret.op.i.i.i.ph, %if.entry.i.i.i141 ], [ %common.ret.op.i.i.i.ph, %else.i.i ], [ 2, %while.entry.i.i140.ifend.i.i_crit_edge ]
  %309 = add nsw i64 %308, 1
  %memberidx2.i63.i.i = getelementptr inbounds %Array_Token_, ptr %307, i64 0, i32 1
  %310 = load i64, ptr %memberidx2.i63.i.i, align 4
  %311 = icmp slt i64 %309, %310
  br i1 %311, label %Parser_peek.exit.i.i, label %Parser_peek.exit.i.i.thread

Parser_peek.exit.i.i:                             ; preds = %ifend.i.i
  %312 = load ptr, ptr %307, align 8
  %313 = getelementptr inbounds ptr, ptr %312, i64 %309
  %common.ret.op.i64.i.i = load ptr, ptr %313, align 8
  %314 = load i64, ptr %common.ret.op.i64.i.i, align 4
  %315 = icmp eq i64 %314, 1
  br i1 %315, label %if.entry3.i.i, label %Parser_peek.exit91.i.i

Parser_peek.exit.i.i.thread:                      ; preds = %ifend.i.i
  %316 = add i64 %310, -1
  %317 = load ptr, ptr %307, align 8
  %318 = getelementptr inbounds ptr, ptr %317, i64 %316
  %common.ret.op.i64.i.i295 = load ptr, ptr %318, align 8
  %319 = load i64, ptr %common.ret.op.i64.i.i295, align 4
  %320 = icmp eq i64 %319, 1
  br i1 %320, label %if.entry3.i.i, label %Parser_peek.exit91.i.i

if.entry3.i.i:                                    ; preds = %Parser_peek.exit.i.i.thread, %Parser_peek.exit.i.i
  %321 = call ptr @malloc(i32 32)
  %322 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %322, ptr %321, align 8
  %memberidx1.i72.i.i = getelementptr inbounds %FieldNode, ptr %321, i64 0, i32 2
  store ptr null, ptr %memberidx1.i72.i.i, align 8
  %323 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 1)
  %memberidx6.i.i = getelementptr inbounds %FieldNode, ptr %321, i64 0, i32 3
  %324 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %324, ptr %memberidx6.i.i, align 8
  %325 = load ptr, ptr %memberidx.i69, align 8
  %326 = load i64, ptr %325, align 4
  %327 = icmp eq i64 %326, 38
  br i1 %327, label %if.entry9.i.i, label %ifend11.i.i

Parser_peek.exit91.i.i:                           ; preds = %Parser_peek.exit.i.i.thread, %Parser_peek.exit.i.i
  %328 = phi i64 [ %314, %Parser_peek.exit.i.i ], [ %319, %Parser_peek.exit.i.i.thread ]
  %329 = icmp eq i64 %328, 25
  br i1 %329, label %if.entry16.i.i, label %else17.i.i

ifend5.i.i:                                       ; preds = %Array_MethodNode____sl__.exit.i.i, %Array_FieldNode____sl__.exit.i.i
  %330 = load ptr, ptr %memberidx.i69, align 8
  %331 = load i64, ptr %330, align 4
  %332 = icmp eq i64 %331, 33
  %333 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i95.i.i = getelementptr inbounds %Array_FloError_, ptr %333, i64 0, i32 1
  %334 = load i64, ptr %memberidx3.i.i95.i.i, align 4
  %335 = icmp eq i64 %334, 0
  %336 = and i1 %332, %335
  br i1 %336, label %while.entry.i98.i.i.preheader, label %Parser_new_lines.exit105.i.i

while.entry.i98.i.i.preheader:                    ; preds = %ifend5.i.i
  %337 = load ptr, ptr %3, align 8
  %memberidx2.i12.i97.i.i = getelementptr inbounds %Array_Token_, ptr %337, i64 0, i32 1
  %.pre366 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i98.i.i

while.entry.i98.i.i:                              ; preds = %while.entry.i98.i.i.preheader, %Parser_advance.exit.i104.i.i
  %338 = phi i64 [ 33, %while.entry.i98.i.i.preheader ], [ %346, %Parser_advance.exit.i104.i.i ]
  %339 = phi i64 [ %.pre366, %while.entry.i98.i.i.preheader ], [ %349, %Parser_advance.exit.i104.i.i ]
  %340 = load i64, ptr %memberidx2.i12.i97.i.i, align 4
  %341 = icmp slt i64 %339, %340
  br i1 %341, label %if.entry.i.i100.i.i, label %Parser_advance.exit.i104.i.i

if.entry.i.i100.i.i:                              ; preds = %while.entry.i98.i.i
  %342 = add nsw i64 %339, 1
  store i64 %342, ptr %memberidx2.i, align 8
  %343 = load ptr, ptr %337, align 8
  %344 = getelementptr inbounds ptr, ptr %343, i64 %342
  %345 = load ptr, ptr %344, align 8
  store ptr %345, ptr %memberidx.i69, align 8
  %.pre367 = load i64, ptr %345, align 4
  %.pre368 = load i64, ptr %memberidx3.i.i95.i.i, align 4
  br label %Parser_advance.exit.i104.i.i

Parser_advance.exit.i104.i.i:                     ; preds = %if.entry.i.i100.i.i, %while.entry.i98.i.i
  %346 = phi i64 [ %.pre367, %if.entry.i.i100.i.i ], [ %338, %while.entry.i98.i.i ]
  %347 = phi i64 [ %.pre368, %if.entry.i.i100.i.i ], [ 0, %while.entry.i98.i.i ]
  %348 = phi i64 [ %.pre367, %if.entry.i.i100.i.i ], [ 33, %while.entry.i98.i.i ]
  %349 = phi i64 [ %342, %if.entry.i.i100.i.i ], [ %339, %while.entry.i98.i.i ]
  %350 = icmp eq i64 %348, 33
  %351 = icmp eq i64 %347, 0
  %352 = and i1 %350, %351
  br i1 %352, label %while.entry.i98.i.i, label %Parser_new_lines.exit105.i.i

Parser_new_lines.exit105.i.i:                     ; preds = %Parser_advance.exit.i104.i.i, %ifend5.i.i
  %353 = phi i64 [ %331, %ifend5.i.i ], [ %346, %Parser_advance.exit.i104.i.i ]
  %354 = phi i64 [ %334, %ifend5.i.i ], [ %347, %Parser_advance.exit.i104.i.i ]
  %.fr296 = freeze i64 %354
  %355 = icmp eq i64 %.fr296, 0
  br i1 %355, label %switch.early.test291, label %while.end.i.i

switch.early.test291:                             ; preds = %Parser_new_lines.exit105.i.i
  switch i64 %353, label %while.entry.i.i140 [
    i64 46, label %while.end.i.i
    i64 28, label %while.end.i.i
  ]

if.entry9.i.i:                                    ; preds = %if.entry3.i.i
  %356 = load i64, ptr %memberidx2.i, align 8
  %357 = load ptr, ptr %3, align 8
  %memberidx2.i110.i.i = getelementptr inbounds %Array_Token_, ptr %357, i64 0, i32 1
  %358 = load i64, ptr %memberidx2.i110.i.i, align 4
  %359 = icmp slt i64 %356, %358
  br i1 %359, label %if.entry.i112.i.i, label %Parser_advance.exit114.i.i

if.entry.i112.i.i:                                ; preds = %if.entry9.i.i
  %360 = add nsw i64 %356, 1
  store i64 %360, ptr %memberidx2.i, align 8
  %361 = load ptr, ptr %357, align 8
  %362 = getelementptr inbounds ptr, ptr %361, i64 %360
  %363 = load ptr, ptr %362, align 8
  store ptr %363, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit114.i.i

Parser_advance.exit114.i.i:                       ; preds = %if.entry.i112.i.i, %if.entry9.i.i
  %364 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %364, ptr %memberidx1.i72.i.i, align 8
  br label %ifend11.i.i

ifend11.i.i:                                      ; preds = %Parser_advance.exit114.i.i, %if.entry3.i.i
  %memberidx13.i.i = getelementptr inbounds %FieldNode, ptr %321, i64 0, i32 1
  store i64 %access_modifier.0.i.i, ptr %memberidx13.i.i, align 4
  %365 = load ptr, ptr %memberidx1.i.i125, align 8
  %memberidx.i115.i.i = getelementptr inbounds %Array_FieldNode_, ptr %365, i64 0, i32 1
  %366 = load i64, ptr %memberidx.i115.i.i, align 4
  %memberidx1.i116.i.i = getelementptr inbounds %Array_FieldNode_, ptr %365, i64 0, i32 2
  %367 = load i64, ptr %memberidx1.i116.i.i, align 4
  %.not.i117.i.i = icmp slt i64 %366, %367
  br i1 %.not.i117.i.i, label %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge, label %if.entry.i119.i.i

ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge: ; preds = %ifend11.i.i
  %.pre365 = load ptr, ptr %365, align 8
  br label %Array_FieldNode____sl__.exit.i.i

if.entry.i119.i.i:                                ; preds = %ifend11.i.i
  %368 = shl nuw i64 %367, 1
  store i64 %368, ptr %memberidx1.i116.i.i, align 4
  %369 = load ptr, ptr %365, align 8
  %370 = shl i64 %367, 4
  %371 = call ptr @realloc(ptr %369, i64 %370)
  store ptr %371, ptr %365, align 8
  %.pre364 = load i64, ptr %memberidx.i115.i.i, align 4
  br label %Array_FieldNode____sl__.exit.i.i

Array_FieldNode____sl__.exit.i.i:                 ; preds = %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge, %if.entry.i119.i.i
  %372 = phi ptr [ %371, %if.entry.i119.i.i ], [ %.pre365, %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge ]
  %373 = phi i64 [ %.pre364, %if.entry.i119.i.i ], [ %366, %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge ]
  %374 = add nsw i64 %373, 1
  store i64 %374, ptr %memberidx.i115.i.i, align 4
  %375 = getelementptr inbounds ptr, ptr %372, i64 %373
  store ptr %321, ptr %375, align 8
  br label %ifend5.i.i

if.entry16.i.i:                                   ; preds = %Parser_peek.exit91.i.i
  %376 = call ptr @malloc(i32 42)
  %377 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %377, ptr %376, align 8
  %memberidx1.i.i73.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 1
  %378 = call ptr @malloc(i32 24)
  %memberidx.i.i.i74.i.i = getelementptr inbounds %Array_ArgNode_, ptr %378, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i74.i.i, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %378, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i.i.i, align 4
  %379 = call ptr @malloc(i32 64)
  store ptr %379, ptr %378, align 8
  store i64 0, ptr %memberidx.i.i.i74.i.i, align 4
  store ptr %378, ptr %memberidx1.i.i73.i.i, align 8
  %memberidx4.i.i.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 5
  store i1 true, ptr %memberidx4.i.i.i.i, align 1
  %memberidx5.i.i.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 6
  store i1 false, ptr %memberidx5.i.i.i.i, align 1
  %380 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %381 = load ptr, ptr %memberidx.i69, align 8
  %382 = load i64, ptr %381, align 4
  %383 = icmp eq i64 %382, 33
  %384 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %384, i64 0, i32 1
  %385 = load i64, ptr %memberidx3.i.i.i.i.i, align 4
  %386 = icmp eq i64 %385, 0
  %387 = and i1 %383, %386
  br i1 %387, label %while.entry.i.i.i.i.preheader, label %Parser_new_lines.exit.i.i.i

while.entry.i.i.i.i.preheader:                    ; preds = %if.entry16.i.i
  %388 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %388, i64 0, i32 1
  %389 = load i64, ptr %memberidx2.i, align 8
  %390 = load i64, ptr %memberidx2.i12.i.i.i.i, align 4
  %391 = icmp slt i64 %389, %390
  br i1 %391, label %while.entry.i.i.i.i, label %while.entry.i.i.i.i.us

while.entry.i.i.i.i.us:                           ; preds = %while.entry.i.i.i.i.preheader, %while.entry.i.i.i.i.us
  br label %while.entry.i.i.i.i.us

while.entry.i.i.i.i:                              ; preds = %while.entry.i.i.i.i.preheader, %Parser_advance.exit.i.i.i.i
  %392 = phi i64 [ %401, %Parser_advance.exit.i.i.i.i ], [ 33, %while.entry.i.i.i.i.preheader ]
  %393 = phi ptr [ %404, %Parser_advance.exit.i.i.i.i ], [ %381, %while.entry.i.i.i.i.preheader ]
  %394 = phi i64 [ %405, %Parser_advance.exit.i.i.i.i ], [ %389, %while.entry.i.i.i.i.preheader ]
  %395 = load i64, ptr %memberidx2.i12.i.i.i.i, align 4
  %396 = icmp slt i64 %394, %395
  br i1 %396, label %if.entry.i.i.i.i.i, label %Parser_advance.exit.i.i.i.i

if.entry.i.i.i.i.i:                               ; preds = %while.entry.i.i.i.i
  %397 = add nsw i64 %394, 1
  store i64 %397, ptr %memberidx2.i, align 8
  %398 = load ptr, ptr %388, align 8
  %399 = getelementptr inbounds ptr, ptr %398, i64 %397
  %400 = load ptr, ptr %399, align 8
  store ptr %400, ptr %memberidx.i69, align 8
  %.pre352 = load i64, ptr %400, align 4
  %.pre353 = load i64, ptr %memberidx3.i.i.i.i.i, align 4
  br label %Parser_advance.exit.i.i.i.i

Parser_advance.exit.i.i.i.i:                      ; preds = %if.entry.i.i.i.i.i, %while.entry.i.i.i.i
  %401 = phi i64 [ %.pre352, %if.entry.i.i.i.i.i ], [ %392, %while.entry.i.i.i.i ]
  %402 = phi i64 [ %.pre353, %if.entry.i.i.i.i.i ], [ 0, %while.entry.i.i.i.i ]
  %403 = phi i64 [ %.pre352, %if.entry.i.i.i.i.i ], [ 33, %while.entry.i.i.i.i ]
  %404 = phi ptr [ %400, %if.entry.i.i.i.i.i ], [ %393, %while.entry.i.i.i.i ]
  %405 = phi i64 [ %397, %if.entry.i.i.i.i.i ], [ %394, %while.entry.i.i.i.i ]
  %406 = icmp eq i64 %403, 33
  %407 = icmp eq i64 %402, 0
  %408 = and i1 %406, %407
  br i1 %408, label %while.entry.i.i.i.i, label %Parser_new_lines.exit.i.i.i

Parser_new_lines.exit.i.i.i:                      ; preds = %Parser_advance.exit.i.i.i.i, %if.entry16.i.i
  %409 = phi i64 [ %382, %if.entry16.i.i ], [ %401, %Parser_advance.exit.i.i.i.i ]
  %410 = phi ptr [ %381, %if.entry16.i.i ], [ %404, %Parser_advance.exit.i.i.i.i ]
  %.not.i78.i.i = icmp eq i64 %409, 26
  br i1 %.not.i78.i.i, label %ifend.i82.i.i, label %if.entry.i81.i.i

if.entry.i81.i.i:                                 ; preds = %Parser_new_lines.exit.i.i.i
  %memberidx3.i79.i.i = getelementptr inbounds %IdentifierToken, ptr %410, i64 0, i32 2
  %411 = load ptr, ptr %memberidx3.i79.i.i, align 8
  %412 = call ptr @malloc(i32 4)
  store i32 1936287860, ptr %412, align 8
  %413 = call ptr @malloc(i32 24)
  store ptr %412, ptr %413, align 8
  %memberidx1.i.i59.i.i.i = getelementptr inbounds %String, ptr %413, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i59.i.i.i, align 4
  %memberidx2.i.i60.i.i.i = getelementptr inbounds %String, ptr %413, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i60.i.i.i, align 4
  %memberidx.i61.i.i.i = getelementptr inbounds %String, ptr %411, i64 0, i32 1
  %414 = load i64, ptr %memberidx.i61.i.i.i, align 4
  %.not.i.i80.i.i = icmp eq i64 %414, 4
  br i1 %.not.i.i80.i.i, label %ifend.i.i.i.i, label %ifend.i82.i.i

ifend.i.i.i.i:                                    ; preds = %if.entry.i81.i.i
  %415 = load ptr, ptr %411, align 8
  %416 = call i64 @memcmp(ptr %415, ptr nonnull %412, i64 4)
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %if.entry4.i.i.i, label %ifend.i82.i.i

ifend.i82.i.i:                                    ; preds = %if.entry.i81.i.i, %if.entry4.i.i.i, %if.entry.i.i84.i.i, %ifend.i.i.i.i, %Parser_new_lines.exit.i.i.i
  %418 = load ptr, ptr %memberidx.i69, align 8
  %419 = load i64, ptr %418, align 4
  %.not57.i.i.i = icmp eq i64 %419, 26
  br i1 %.not57.i.i.i, label %Parser_new_lines.exit79.i.i.i, label %if.entry10.i.i.i

if.entry4.i.i.i:                                  ; preds = %ifend.i.i.i.i
  store i1 false, ptr %memberidx4.i.i.i.i, align 1
  %420 = load i64, ptr %memberidx2.i, align 8
  %421 = load ptr, ptr %3, align 8
  %memberidx2.i.i83.i.i = getelementptr inbounds %Array_Token_, ptr %421, i64 0, i32 1
  %422 = load i64, ptr %memberidx2.i.i83.i.i, align 4
  %423 = icmp slt i64 %420, %422
  br i1 %423, label %if.entry.i.i84.i.i, label %ifend.i82.i.i

if.entry.i.i84.i.i:                               ; preds = %if.entry4.i.i.i
  %424 = add nsw i64 %420, 1
  store i64 %424, ptr %memberidx2.i, align 8
  %425 = load ptr, ptr %421, align 8
  %426 = getelementptr inbounds ptr, ptr %425, i64 %424
  %427 = load ptr, ptr %426, align 8
  store ptr %427, ptr %memberidx.i69, align 8
  br label %ifend.i82.i.i

if.entry10.i.i.i:                                 ; preds = %ifend.i82.i.i
  %428 = load i1, ptr %memberidx4.i.i.i.i, align 1
  br i1 %428, label %ifend12.i.i.i, label %if.entry14.i.i.i

ifend12.i.i.i:                                    ; preds = %if.entry10.i.i.i, %if.entry14.i.i.i
  %429 = load ptr, ptr %memberidx1.i.i73.i.i, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %429)
  %.pre354 = load ptr, ptr %memberidx.i69, align 8
  %.pre355 = load i64, ptr %.pre354, align 4
  %430 = icmp eq i64 %.pre355, 33
  %431 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i69.i.i.i = getelementptr inbounds %Array_FloError_, ptr %431, i64 0, i32 1
  %432 = load i64, ptr %memberidx3.i.i69.i.i.i, align 4
  %433 = icmp eq i64 %432, 0
  %434 = and i1 %430, %433
  br i1 %434, label %while.entry.i72.i.i.i.preheader, label %Parser_new_lines.exit79.i.i.i

while.entry.i72.i.i.i.preheader:                  ; preds = %ifend12.i.i.i
  %435 = load ptr, ptr %3, align 8
  %memberidx2.i12.i71.i.i.i = getelementptr inbounds %Array_Token_, ptr %435, i64 0, i32 1
  %.pre356 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i72.i.i.i

while.entry.i72.i.i.i:                            ; preds = %while.entry.i72.i.i.i.preheader, %Parser_advance.exit.i78.i.i.i
  %436 = phi i64 [ %.pre356, %while.entry.i72.i.i.i.preheader ], [ %445, %Parser_advance.exit.i78.i.i.i ]
  %437 = load i64, ptr %memberidx2.i12.i71.i.i.i, align 4
  %438 = icmp slt i64 %436, %437
  br i1 %438, label %if.entry.i.i74.i.i.i, label %Parser_advance.exit.i78.i.i.i

if.entry.i.i74.i.i.i:                             ; preds = %while.entry.i72.i.i.i
  %439 = add nsw i64 %436, 1
  store i64 %439, ptr %memberidx2.i, align 8
  %440 = load ptr, ptr %435, align 8
  %441 = getelementptr inbounds ptr, ptr %440, i64 %439
  %442 = load ptr, ptr %441, align 8
  store ptr %442, ptr %memberidx.i69, align 8
  %.pre357 = load i64, ptr %442, align 4
  %.pre358 = load i64, ptr %memberidx3.i.i69.i.i.i, align 4
  br label %Parser_advance.exit.i78.i.i.i

Parser_advance.exit.i78.i.i.i:                    ; preds = %if.entry.i.i74.i.i.i, %while.entry.i72.i.i.i
  %443 = phi i64 [ %.pre358, %if.entry.i.i74.i.i.i ], [ 0, %while.entry.i72.i.i.i ]
  %444 = phi i64 [ %.pre357, %if.entry.i.i74.i.i.i ], [ 33, %while.entry.i72.i.i.i ]
  %445 = phi i64 [ %439, %if.entry.i.i74.i.i.i ], [ %436, %while.entry.i72.i.i.i ]
  %446 = icmp eq i64 %444, 33
  %447 = icmp eq i64 %443, 0
  %448 = and i1 %446, %447
  br i1 %448, label %while.entry.i72.i.i.i, label %Parser_new_lines.exit79.i.i.i

Parser_new_lines.exit79.i.i.i:                    ; preds = %Parser_advance.exit.i78.i.i.i, %ifend.i82.i.i, %ifend12.i.i.i
  %449 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %450 = load ptr, ptr %memberidx.i69, align 8
  %451 = load i64, ptr %450, align 4
  %452 = icmp eq i64 %451, 1
  br i1 %452, label %if.entry20.i.i.i, label %else21.i.i.i

if.entry14.i.i.i:                                 ; preds = %if.entry10.i.i.i
  %453 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 3)
  br label %ifend12.i.i.i

if.entry20.i.i.i:                                 ; preds = %Parser_new_lines.exit79.i.i.i
  %454 = load i64, ptr %memberidx2.i, align 8
  %455 = load ptr, ptr %3, align 8
  %memberidx2.i81.i.i.i = getelementptr inbounds %Array_Token_, ptr %455, i64 0, i32 1
  %456 = load i64, ptr %memberidx2.i81.i.i.i, align 4
  %457 = icmp slt i64 %454, %456
  br i1 %457, label %if.entry.i83.i.i.i, label %Parser_advance.exit85.i.i.i

if.entry.i83.i.i.i:                               ; preds = %if.entry20.i.i.i
  %458 = add nsw i64 %454, 1
  store i64 %458, ptr %memberidx2.i, align 8
  %459 = load ptr, ptr %455, align 8
  %460 = getelementptr inbounds ptr, ptr %459, i64 %458
  %461 = load ptr, ptr %460, align 8
  store ptr %461, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit85.i.i.i

Parser_advance.exit85.i.i.i:                      ; preds = %if.entry.i83.i.i.i, %if.entry20.i.i.i
  %memberidx23.i.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 4
  %462 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %462, ptr %memberidx23.i.i.i, align 8
  br label %ifend22.i.i.i

else21.i.i.i:                                     ; preds = %Parser_new_lines.exit79.i.i.i
  %463 = call ptr @malloc(i32 24)
  %464 = call ptr @malloc(i32 4)
  store i32 1684631414, ptr %464, align 8
  %465 = call ptr @malloc(i32 24)
  store ptr %464, ptr %465, align 8
  %memberidx1.i.i105.i.i.i = getelementptr inbounds %String, ptr %465, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i105.i.i.i, align 4
  %memberidx2.i.i106.i.i.i = getelementptr inbounds %String, ptr %465, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i106.i.i.i, align 4
  %466 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %466, i8 0, i64 32, i1 false)
  store i64 53, ptr %463, align 4
  %memberidx1.i.i110.i.i.i = getelementptr inbounds %Token, ptr %463, i64 0, i32 1
  store ptr %466, ptr %memberidx1.i.i110.i.i.i, align 8
  %memberidx.i111.i.i.i = getelementptr inbounds %IdentifierToken, ptr %463, i64 0, i32 2
  store ptr %465, ptr %memberidx.i111.i.i.i, align 8
  %memberidx24.i.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 4
  %467 = call ptr @malloc(i32 32)
  %468 = load ptr, ptr %memberidx1.i.i110.i.i.i, align 8
  store ptr %468, ptr %467, align 8
  %memberidx.i.i100.i.i.i = getelementptr inbounds %TypeNode, ptr %467, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i100.i.i.i, align 4
  %memberidx.i101.i.i.i = getelementptr inbounds %RecordTypeNode, ptr %467, i64 0, i32 2
  store ptr %463, ptr %memberidx.i101.i.i.i, align 8
  %memberidx1.i102.i.i.i = getelementptr inbounds %RecordTypeNode, ptr %467, i64 0, i32 3
  %469 = call ptr @malloc(i32 24)
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %469, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i.i.i, align 4
  %memberidx1.i.i103.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %469, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i103.i.i.i, align 4
  %470 = call ptr @malloc(i32 64)
  store ptr %470, ptr %469, align 8
  store i64 0, ptr %memberidx.i5.i.i.i.i, align 4
  store ptr %469, ptr %memberidx1.i102.i.i.i, align 8
  store ptr %467, ptr %memberidx24.i.i.i, align 8
  br label %ifend22.i.i.i

ifend22.i.i.i:                                    ; preds = %else21.i.i.i, %Parser_advance.exit85.i.i.i
  %471 = load ptr, ptr %memberidx.i69, align 8
  %472 = load i64, ptr %471, align 4
  %473 = icmp eq i64 %472, 33
  %474 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i89.i.i.i = getelementptr inbounds %Array_FloError_, ptr %474, i64 0, i32 1
  %475 = load i64, ptr %memberidx3.i.i89.i.i.i, align 4
  %476 = icmp eq i64 %475, 0
  %477 = and i1 %473, %476
  br i1 %477, label %while.entry.i92.i.i.i.preheader, label %Parser_new_lines.exit99.i.i.i

while.entry.i92.i.i.i.preheader:                  ; preds = %ifend22.i.i.i
  %478 = load ptr, ptr %3, align 8
  %memberidx2.i12.i91.i.i.i = getelementptr inbounds %Array_Token_, ptr %478, i64 0, i32 1
  %.pre359 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i92.i.i.i

while.entry.i92.i.i.i:                            ; preds = %while.entry.i92.i.i.i.preheader, %Parser_advance.exit.i98.i.i.i
  %479 = phi i64 [ 33, %while.entry.i92.i.i.i.preheader ], [ %487, %Parser_advance.exit.i98.i.i.i ]
  %480 = phi i64 [ %.pre359, %while.entry.i92.i.i.i.preheader ], [ %490, %Parser_advance.exit.i98.i.i.i ]
  %481 = load i64, ptr %memberidx2.i12.i91.i.i.i, align 4
  %482 = icmp slt i64 %480, %481
  br i1 %482, label %if.entry.i.i94.i.i.i, label %Parser_advance.exit.i98.i.i.i

if.entry.i.i94.i.i.i:                             ; preds = %while.entry.i92.i.i.i
  %483 = add nsw i64 %480, 1
  store i64 %483, ptr %memberidx2.i, align 8
  %484 = load ptr, ptr %478, align 8
  %485 = getelementptr inbounds ptr, ptr %484, i64 %483
  %486 = load ptr, ptr %485, align 8
  store ptr %486, ptr %memberidx.i69, align 8
  %.pre360 = load i64, ptr %486, align 4
  %.pre361 = load i64, ptr %memberidx3.i.i89.i.i.i, align 4
  br label %Parser_advance.exit.i98.i.i.i

Parser_advance.exit.i98.i.i.i:                    ; preds = %if.entry.i.i94.i.i.i, %while.entry.i92.i.i.i
  %487 = phi i64 [ %.pre360, %if.entry.i.i94.i.i.i ], [ %479, %while.entry.i92.i.i.i ]
  %488 = phi i64 [ %.pre361, %if.entry.i.i94.i.i.i ], [ 0, %while.entry.i92.i.i.i ]
  %489 = phi i64 [ %.pre360, %if.entry.i.i94.i.i.i ], [ 33, %while.entry.i92.i.i.i ]
  %490 = phi i64 [ %483, %if.entry.i.i94.i.i.i ], [ %480, %while.entry.i92.i.i.i ]
  %491 = icmp eq i64 %489, 33
  %492 = icmp eq i64 %488, 0
  %493 = and i1 %491, %492
  br i1 %493, label %while.entry.i92.i.i.i, label %Parser_new_lines.exit99.i.i.i

Parser_new_lines.exit99.i.i.i:                    ; preds = %Parser_advance.exit.i98.i.i.i, %ifend22.i.i.i
  %494 = phi i64 [ %472, %ifend22.i.i.i ], [ %487, %Parser_advance.exit.i98.i.i.i ]
  %495 = icmp eq i64 %494, 27
  br i1 %495, label %if.entry28.i.i.i, label %else29.i.i.i

if.entry28.i.i.i:                                 ; preds = %Parser_new_lines.exit99.i.i.i
  %memberidx31.i.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 2
  %496 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %496, ptr %memberidx31.i.i.i, align 8
  br label %Parser_parse_method.exit.i.i

else29.i.i.i:                                     ; preds = %Parser_new_lines.exit99.i.i.i
  store i1 true, ptr %memberidx5.i.i.i.i, align 1
  br label %Parser_parse_method.exit.i.i

Parser_parse_method.exit.i.i:                     ; preds = %else29.i.i.i, %if.entry28.i.i.i
  %memberidx19.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 3
  store i64 %access_modifier.0.i.i, ptr %memberidx19.i.i, align 4
  %497 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx.i67.i.i = getelementptr inbounds %Array_MethodNode_, ptr %497, i64 0, i32 1
  %498 = load i64, ptr %memberidx.i67.i.i, align 4
  %memberidx1.i68.i.i = getelementptr inbounds %Array_MethodNode_, ptr %497, i64 0, i32 2
  %499 = load i64, ptr %memberidx1.i68.i.i, align 4
  %.not.i.i.i = icmp slt i64 %498, %499
  br i1 %.not.i.i.i, label %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge, label %if.entry.i70.i.i

Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge: ; preds = %Parser_parse_method.exit.i.i
  %.pre363 = load ptr, ptr %497, align 8
  br label %Array_MethodNode____sl__.exit.i.i

if.entry.i70.i.i:                                 ; preds = %Parser_parse_method.exit.i.i
  %500 = shl nuw i64 %499, 1
  store i64 %500, ptr %memberidx1.i68.i.i, align 4
  %501 = load ptr, ptr %497, align 8
  %502 = shl i64 %499, 4
  %503 = call ptr @realloc(ptr %501, i64 %502)
  store ptr %503, ptr %497, align 8
  %.pre362 = load i64, ptr %memberidx.i67.i.i, align 4
  br label %Array_MethodNode____sl__.exit.i.i

Array_MethodNode____sl__.exit.i.i:                ; preds = %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge, %if.entry.i70.i.i
  %504 = phi ptr [ %503, %if.entry.i70.i.i ], [ %.pre363, %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge ]
  %505 = phi i64 [ %.pre362, %if.entry.i70.i.i ], [ %498, %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge ]
  %506 = add nsw i64 %505, 1
  store i64 %506, ptr %memberidx.i67.i.i, align 4
  %507 = getelementptr inbounds ptr, ptr %504, i64 %505
  store ptr %376, ptr %507, align 8
  br label %ifend5.i.i

else17.i.i:                                       ; preds = %Parser_peek.exit91.i.i
  %508 = call ptr @malloc(i32 19)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %508, ptr noundef nonnull align 8 dereferenceable(19) @78, i64 19, i1 false)
  %509 = call ptr @malloc(i32 24)
  store ptr %508, ptr %509, align 8
  %memberidx1.i.i56.i.i = getelementptr inbounds %String, ptr %509, i64 0, i32 1
  store i64 19, ptr %memberidx1.i.i56.i.i, align 4
  %memberidx2.i.i57.i.i = getelementptr inbounds %String, ptr %509, i64 0, i32 2
  store i64 19, ptr %memberidx2.i.i57.i.i, align 4
  %510 = load ptr, ptr %memberidx1.i, align 8
  %511 = call ptr @malloc(i32 24)
  %512 = load ptr, ptr %memberidx.i69, align 8
  %memberidx2.i.i.i144 = getelementptr inbounds %Token, ptr %512, i64 0, i32 1
  %513 = load ptr, ptr %memberidx2.i.i.i144, align 8
  store i64 2, ptr %511, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloError, ptr %511, i64 0, i32 2
  store ptr %513, ptr %memberidx1.i.i.i.i, align 8
  %memberidx2.i.i50.i.i = getelementptr inbounds %FloError, ptr %511, i64 0, i32 1
  store ptr %509, ptr %memberidx2.i.i50.i.i, align 8
  %memberidx.i.i51.i.i = getelementptr inbounds %Array_FloError_, ptr %510, i64 0, i32 1
  %514 = load i64, ptr %memberidx.i.i51.i.i, align 4
  %memberidx1.i4.i.i.i = getelementptr inbounds %Array_FloError_, ptr %510, i64 0, i32 2
  %515 = load i64, ptr %memberidx1.i4.i.i.i, align 4
  %.not.i.i.i.i = icmp slt i64 %514, %515
  br i1 %.not.i.i.i.i, label %else17.i.i.Parser_error.exit.i.i_crit_edge, label %if.entry.i.i52.i.i

else17.i.i.Parser_error.exit.i.i_crit_edge:       ; preds = %else17.i.i
  %.pre351 = load ptr, ptr %510, align 8
  br label %Parser_error.exit.i.i

if.entry.i.i52.i.i:                               ; preds = %else17.i.i
  %516 = shl nuw i64 %515, 1
  store i64 %516, ptr %memberidx1.i4.i.i.i, align 4
  %517 = load ptr, ptr %510, align 8
  %518 = shl i64 %515, 4
  %519 = call ptr @realloc(ptr %517, i64 %518)
  store ptr %519, ptr %510, align 8
  %.pre350 = load i64, ptr %memberidx.i.i51.i.i, align 4
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else17.i.i.Parser_error.exit.i.i_crit_edge, %if.entry.i.i52.i.i
  %520 = phi ptr [ %519, %if.entry.i.i52.i.i ], [ %.pre351, %else17.i.i.Parser_error.exit.i.i_crit_edge ]
  %521 = phi i64 [ %.pre350, %if.entry.i.i52.i.i ], [ %514, %else17.i.i.Parser_error.exit.i.i_crit_edge ]
  %522 = add nsw i64 %521, 1
  store i64 %522, ptr %memberidx.i.i51.i.i, align 4
  %523 = getelementptr inbounds ptr, ptr %520, i64 %521
  store ptr %511, ptr %523, align 8
  br label %Parser_parse_class.exit

Parser_parse_class.exit:                          ; preds = %while.end.i.i, %Parser_error.exit.i.i
  %memberidx.i145 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %163, i64 0, i32 1
  %524 = load i64, ptr %memberidx.i145, align 4
  %memberidx1.i146 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %163, i64 0, i32 2
  %525 = load i64, ptr %memberidx1.i146, align 4
  %.not.i147 = icmp slt i64 %524, %525
  br i1 %.not.i147, label %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge, label %if.entry.i149

Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge: ; preds = %Parser_parse_class.exit
  %.pre370 = load ptr, ptr %163, align 8
  br label %Array_ClassDeclarationNode____sl__.exit

if.entry.i149:                                    ; preds = %Parser_parse_class.exit
  %526 = shl nuw i64 %525, 1
  store i64 %526, ptr %memberidx1.i146, align 4
  %527 = load ptr, ptr %163, align 8
  %528 = shl i64 %525, 4
  %529 = call ptr @realloc(ptr %527, i64 %528)
  store ptr %529, ptr %163, align 8
  %.pre369 = load i64, ptr %memberidx.i145, align 4
  br label %Array_ClassDeclarationNode____sl__.exit

Array_ClassDeclarationNode____sl__.exit:          ; preds = %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge, %if.entry.i149
  %530 = phi ptr [ %.pre370, %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge ], [ %529, %if.entry.i149 ]
  %531 = phi i64 [ %524, %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge ], [ %.pre369, %if.entry.i149 ]
  %532 = add nsw i64 %531, 1
  store i64 %532, ptr %memberidx.i145, align 4
  %533 = getelementptr inbounds ptr, ptr %530, i64 %531
  store ptr %172, ptr %533, align 8
  br label %ifend

if.entry11:                                       ; preds = %while.entry
  %534 = load ptr, ptr %memberidx14, align 8
  %535 = load i64, ptr %memberidx2.i, align 8
  %536 = load ptr, ptr %3, align 8
  %memberidx2.i.i152 = getelementptr inbounds %Array_Token_, ptr %536, i64 0, i32 1
  %537 = load i64, ptr %memberidx2.i.i152, align 4
  %538 = icmp slt i64 %535, %537
  br i1 %538, label %if.entry.i.i154, label %Parser_advance.exit.i159

if.entry.i.i154:                                  ; preds = %if.entry11
  %539 = add nsw i64 %535, 1
  store i64 %539, ptr %memberidx2.i, align 8
  %540 = load ptr, ptr %536, align 8
  %541 = getelementptr inbounds ptr, ptr %540, i64 %539
  %542 = load ptr, ptr %541, align 8
  store ptr %542, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i159

Parser_advance.exit.i159:                         ; preds = %if.entry.i.i154, %if.entry11
  %543 = call ptr @malloc(i32 24)
  %544 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %544, ptr %543, align 8
  %memberidx1.i37.i = getelementptr inbounds %EnumNode, ptr %543, i64 0, i32 1
  %545 = call ptr @malloc(i32 24)
  %memberidx.i.i38.i155 = getelementptr inbounds %Array_EnumNodeField_, ptr %545, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i38.i155, align 4
  %memberidx1.i.i.i156 = getelementptr inbounds %Array_EnumNodeField_, ptr %545, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i156, align 4
  %546 = call ptr @malloc(i32 64)
  store ptr %546, ptr %545, align 8
  store i64 0, ptr %memberidx.i.i38.i155, align 4
  store ptr %545, ptr %memberidx1.i37.i, align 8
  %memberidx4.i.i157 = getelementptr inbounds %EnumNode, ptr %543, i64 0, i32 2
  store ptr null, ptr %memberidx4.i.i157, align 8
  %547 = load ptr, ptr %memberidx.i69, align 8
  %548 = load i64, ptr %547, align 4
  %549 = icmp eq i64 %548, 25
  br i1 %549, label %if.entry.i160, label %ifend.i162

if.entry.i160:                                    ; preds = %Parser_advance.exit.i159
  %550 = load i64, ptr %memberidx2.i, align 8
  %551 = load ptr, ptr %3, align 8
  %memberidx2.i41.i = getelementptr inbounds %Array_Token_, ptr %551, i64 0, i32 1
  %552 = load i64, ptr %memberidx2.i41.i, align 4
  %553 = icmp slt i64 %550, %552
  br i1 %553, label %if.entry.i43.i, label %Parser_advance.exit44.i

if.entry.i43.i:                                   ; preds = %if.entry.i160
  %554 = add nsw i64 %550, 1
  store i64 %554, ptr %memberidx2.i, align 8
  %555 = load ptr, ptr %551, align 8
  %556 = getelementptr inbounds ptr, ptr %555, i64 %554
  %557 = load ptr, ptr %556, align 8
  store ptr %557, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit44.i

Parser_advance.exit44.i:                          ; preds = %if.entry.i43.i, %if.entry.i160
  %558 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %558, ptr %memberidx4.i.i157, align 8
  %559 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %.pre319 = load ptr, ptr %memberidx.i69, align 8
  %.pre320 = load i64, ptr %.pre319, align 4
  br label %ifend.i162

ifend.i162:                                       ; preds = %Parser_advance.exit44.i, %Parser_advance.exit.i159
  %560 = phi i64 [ %.pre320, %Parser_advance.exit44.i ], [ %548, %Parser_advance.exit.i159 ]
  %561 = icmp eq i64 %560, 33
  %562 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i48.i = getelementptr inbounds %Array_FloError_, ptr %562, i64 0, i32 1
  %563 = load i64, ptr %memberidx3.i.i48.i, align 4
  %564 = icmp eq i64 %563, 0
  %565 = and i1 %561, %564
  br i1 %565, label %while.entry.i51.i.preheader, label %Parser_new_lines.exit58.i

while.entry.i51.i.preheader:                      ; preds = %ifend.i162
  %566 = load ptr, ptr %3, align 8
  %memberidx2.i12.i50.i = getelementptr inbounds %Array_Token_, ptr %566, i64 0, i32 1
  %.pre321 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i51.i

while.entry.i51.i:                                ; preds = %while.entry.i51.i.preheader, %Parser_advance.exit.i57.i
  %567 = phi i64 [ %.pre321, %while.entry.i51.i.preheader ], [ %576, %Parser_advance.exit.i57.i ]
  %568 = load i64, ptr %memberidx2.i12.i50.i, align 4
  %569 = icmp slt i64 %567, %568
  br i1 %569, label %if.entry.i.i53.i, label %Parser_advance.exit.i57.i

if.entry.i.i53.i:                                 ; preds = %while.entry.i51.i
  %570 = add nsw i64 %567, 1
  store i64 %570, ptr %memberidx2.i, align 8
  %571 = load ptr, ptr %566, align 8
  %572 = getelementptr inbounds ptr, ptr %571, i64 %570
  %573 = load ptr, ptr %572, align 8
  store ptr %573, ptr %memberidx.i69, align 8
  %.pre322 = load i64, ptr %573, align 4
  %.pre323 = load i64, ptr %memberidx3.i.i48.i, align 4
  br label %Parser_advance.exit.i57.i

Parser_advance.exit.i57.i:                        ; preds = %if.entry.i.i53.i, %while.entry.i51.i
  %574 = phi i64 [ %.pre323, %if.entry.i.i53.i ], [ 0, %while.entry.i51.i ]
  %575 = phi i64 [ %.pre322, %if.entry.i.i53.i ], [ 33, %while.entry.i51.i ]
  %576 = phi i64 [ %570, %if.entry.i.i53.i ], [ %567, %while.entry.i51.i ]
  %577 = icmp eq i64 %575, 33
  %578 = icmp eq i64 %574, 0
  %579 = and i1 %577, %578
  br i1 %579, label %while.entry.i51.i, label %Parser_new_lines.exit58.i

Parser_new_lines.exit58.i:                        ; preds = %Parser_advance.exit.i57.i, %ifend.i162
  %580 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 27)
  %581 = load ptr, ptr %memberidx.i69, align 8
  %582 = load i64, ptr %581, align 4
  %583 = icmp eq i64 %582, 33
  %584 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i62.i = getelementptr inbounds %Array_FloError_, ptr %584, i64 0, i32 1
  %585 = load i64, ptr %memberidx3.i.i62.i, align 4
  %586 = icmp eq i64 %585, 0
  %587 = and i1 %583, %586
  br i1 %587, label %while.entry.i65.i.preheader, label %Parser_new_lines.exit72.i

while.entry.i65.i.preheader:                      ; preds = %Parser_new_lines.exit58.i
  %588 = load ptr, ptr %3, align 8
  %memberidx2.i12.i64.i = getelementptr inbounds %Array_Token_, ptr %588, i64 0, i32 1
  %.pre324 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i65.i

while.entry.i65.i:                                ; preds = %while.entry.i65.i.preheader, %Parser_advance.exit.i71.i
  %589 = phi i64 [ 33, %while.entry.i65.i.preheader ], [ %597, %Parser_advance.exit.i71.i ]
  %590 = phi i64 [ %.pre324, %while.entry.i65.i.preheader ], [ %600, %Parser_advance.exit.i71.i ]
  %591 = load i64, ptr %memberidx2.i12.i64.i, align 4
  %592 = icmp slt i64 %590, %591
  br i1 %592, label %if.entry.i.i67.i, label %Parser_advance.exit.i71.i

if.entry.i.i67.i:                                 ; preds = %while.entry.i65.i
  %593 = add nsw i64 %590, 1
  store i64 %593, ptr %memberidx2.i, align 8
  %594 = load ptr, ptr %588, align 8
  %595 = getelementptr inbounds ptr, ptr %594, i64 %593
  %596 = load ptr, ptr %595, align 8
  store ptr %596, ptr %memberidx.i69, align 8
  %.pre325 = load i64, ptr %596, align 4
  %.pre326 = load i64, ptr %memberidx3.i.i62.i, align 4
  br label %Parser_advance.exit.i71.i

Parser_advance.exit.i71.i:                        ; preds = %if.entry.i.i67.i, %while.entry.i65.i
  %597 = phi i64 [ %.pre325, %if.entry.i.i67.i ], [ %589, %while.entry.i65.i ]
  %598 = phi i64 [ %.pre326, %if.entry.i.i67.i ], [ 0, %while.entry.i65.i ]
  %599 = phi i64 [ %.pre325, %if.entry.i.i67.i ], [ 33, %while.entry.i65.i ]
  %600 = phi i64 [ %593, %if.entry.i.i67.i ], [ %590, %while.entry.i65.i ]
  %601 = icmp eq i64 %599, 33
  %602 = icmp eq i64 %598, 0
  %603 = and i1 %601, %602
  br i1 %603, label %while.entry.i65.i, label %Parser_new_lines.exit72.i

Parser_new_lines.exit72.i:                        ; preds = %Parser_advance.exit.i71.i, %Parser_new_lines.exit58.i
  %604 = phi i64 [ %582, %Parser_new_lines.exit58.i ], [ %597, %Parser_advance.exit.i71.i ]
  %605 = icmp eq i64 %604, 53
  br i1 %605, label %while.entry.i163, label %Parser_parse_enum.exit

while.entry.i163:                                 ; preds = %Parser_new_lines.exit72.i, %Parser_new_lines.exit.i180
  %606 = call ptr @malloc(i32 16)
  %607 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %607, ptr %606, align 8
  %memberidx1.i78.i = getelementptr inbounds %EnumNodeField, ptr %606, i64 0, i32 1
  store ptr null, ptr %memberidx1.i78.i, align 8
  %608 = load ptr, ptr %memberidx.i69, align 8
  %609 = load i64, ptr %608, align 4
  %610 = icmp eq i64 %609, 38
  br i1 %610, label %if.entry7.i, label %ifend9.i

if.entry7.i:                                      ; preds = %while.entry.i163
  %611 = load i64, ptr %memberidx2.i, align 8
  %612 = load ptr, ptr %3, align 8
  %memberidx2.i74.i = getelementptr inbounds %Array_Token_, ptr %612, i64 0, i32 1
  %613 = load i64, ptr %memberidx2.i74.i, align 4
  %614 = icmp slt i64 %611, %613
  br i1 %614, label %if.entry.i76.i, label %Parser_advance.exit77.i

if.entry.i76.i:                                   ; preds = %if.entry7.i
  %615 = add nsw i64 %611, 1
  store i64 %615, ptr %memberidx2.i, align 8
  %616 = load ptr, ptr %612, align 8
  %617 = getelementptr inbounds ptr, ptr %616, i64 %615
  %618 = load ptr, ptr %617, align 8
  store ptr %618, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit77.i

Parser_advance.exit77.i:                          ; preds = %if.entry.i76.i, %if.entry7.i
  %619 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %619, ptr %memberidx1.i78.i, align 8
  br label %ifend9.i

ifend9.i:                                         ; preds = %Parser_advance.exit77.i, %while.entry.i163
  %620 = load ptr, ptr %memberidx1.i37.i, align 8
  %memberidx.i34.i = getelementptr inbounds %Array_EnumNodeField_, ptr %620, i64 0, i32 1
  %621 = load i64, ptr %memberidx.i34.i, align 4
  %memberidx1.i.i166 = getelementptr inbounds %Array_EnumNodeField_, ptr %620, i64 0, i32 2
  %622 = load i64, ptr %memberidx1.i.i166, align 4
  %.not.i.i167 = icmp slt i64 %621, %622
  br i1 %.not.i.i167, label %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge, label %if.entry.i36.i

ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge: ; preds = %ifend9.i
  %.pre328 = load ptr, ptr %620, align 8
  br label %Array_EnumNodeField____sl__.exit.i

if.entry.i36.i:                                   ; preds = %ifend9.i
  %623 = shl nuw i64 %622, 1
  store i64 %623, ptr %memberidx1.i.i166, align 4
  %624 = load ptr, ptr %620, align 8
  %625 = shl i64 %622, 4
  %626 = call ptr @realloc(ptr %624, i64 %625)
  store ptr %626, ptr %620, align 8
  %.pre327 = load i64, ptr %memberidx.i34.i, align 4
  br label %Array_EnumNodeField____sl__.exit.i

Array_EnumNodeField____sl__.exit.i:               ; preds = %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge, %if.entry.i36.i
  %627 = phi ptr [ %626, %if.entry.i36.i ], [ %.pre328, %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge ]
  %628 = phi i64 [ %.pre327, %if.entry.i36.i ], [ %621, %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge ]
  %629 = add nsw i64 %628, 1
  store i64 %629, ptr %memberidx.i34.i, align 4
  %630 = getelementptr inbounds ptr, ptr %627, i64 %628
  store ptr %606, ptr %630, align 8
  %631 = load ptr, ptr %memberidx.i69, align 8
  %632 = load i64, ptr %631, align 4
  %633 = icmp eq i64 %632, 33
  %634 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i170 = getelementptr inbounds %Array_FloError_, ptr %634, i64 0, i32 1
  %635 = load i64, ptr %memberidx3.i.i.i170, align 4
  %636 = icmp eq i64 %635, 0
  %637 = and i1 %633, %636
  br i1 %637, label %while.entry.i.i173.preheader, label %Parser_new_lines.exit.i180

while.entry.i.i173.preheader:                     ; preds = %Array_EnumNodeField____sl__.exit.i
  %638 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i172 = getelementptr inbounds %Array_Token_, ptr %638, i64 0, i32 1
  %639 = load i64, ptr %memberidx2.i, align 8
  %640 = load i64, ptr %memberidx2.i12.i.i172, align 4
  %641 = icmp slt i64 %639, %640
  br i1 %641, label %while.entry.i.i173, label %while.entry.i.i173.us

while.entry.i.i173.us:                            ; preds = %while.entry.i.i173.preheader, %while.entry.i.i173.us
  br label %while.entry.i.i173.us

while.entry.i.i173:                               ; preds = %while.entry.i.i173.preheader, %Parser_advance.exit.i.i179
  %642 = phi i64 [ %650, %Parser_advance.exit.i.i179 ], [ 33, %while.entry.i.i173.preheader ]
  %643 = phi i64 [ %653, %Parser_advance.exit.i.i179 ], [ %639, %while.entry.i.i173.preheader ]
  %644 = load i64, ptr %memberidx2.i12.i.i172, align 4
  %645 = icmp slt i64 %643, %644
  br i1 %645, label %if.entry.i.i.i175, label %Parser_advance.exit.i.i179

if.entry.i.i.i175:                                ; preds = %while.entry.i.i173
  %646 = add nsw i64 %643, 1
  store i64 %646, ptr %memberidx2.i, align 8
  %647 = load ptr, ptr %638, align 8
  %648 = getelementptr inbounds ptr, ptr %647, i64 %646
  %649 = load ptr, ptr %648, align 8
  store ptr %649, ptr %memberidx.i69, align 8
  %.pre329 = load i64, ptr %649, align 4
  %.pre330 = load i64, ptr %memberidx3.i.i.i170, align 4
  br label %Parser_advance.exit.i.i179

Parser_advance.exit.i.i179:                       ; preds = %if.entry.i.i.i175, %while.entry.i.i173
  %650 = phi i64 [ %.pre329, %if.entry.i.i.i175 ], [ %642, %while.entry.i.i173 ]
  %651 = phi i64 [ %.pre330, %if.entry.i.i.i175 ], [ 0, %while.entry.i.i173 ]
  %652 = phi i64 [ %.pre329, %if.entry.i.i.i175 ], [ 33, %while.entry.i.i173 ]
  %653 = phi i64 [ %646, %if.entry.i.i.i175 ], [ %643, %while.entry.i.i173 ]
  %654 = icmp eq i64 %652, 33
  %655 = icmp eq i64 %651, 0
  %656 = and i1 %654, %655
  br i1 %656, label %while.entry.i.i173, label %Parser_new_lines.exit.i180

Parser_new_lines.exit.i180:                       ; preds = %Parser_advance.exit.i.i179, %Array_EnumNodeField____sl__.exit.i
  %657 = phi i64 [ %632, %Array_EnumNodeField____sl__.exit.i ], [ %650, %Parser_advance.exit.i.i179 ]
  %658 = icmp eq i64 %657, 53
  br i1 %658, label %while.entry.i163, label %Parser_parse_enum.exit

Parser_parse_enum.exit:                           ; preds = %Parser_new_lines.exit.i180, %Parser_new_lines.exit72.i
  %659 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 28)
  %memberidx.i181 = getelementptr inbounds %Array_EnumNode_, ptr %534, i64 0, i32 1
  %660 = load i64, ptr %memberidx.i181, align 4
  %memberidx1.i182 = getelementptr inbounds %Array_EnumNode_, ptr %534, i64 0, i32 2
  %661 = load i64, ptr %memberidx1.i182, align 4
  %.not.i183 = icmp slt i64 %660, %661
  br i1 %.not.i183, label %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge, label %if.entry.i185

Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge: ; preds = %Parser_parse_enum.exit
  %.pre332 = load ptr, ptr %534, align 8
  br label %Array_EnumNode____sl__.exit

if.entry.i185:                                    ; preds = %Parser_parse_enum.exit
  %662 = shl nuw i64 %661, 1
  store i64 %662, ptr %memberidx1.i182, align 4
  %663 = load ptr, ptr %534, align 8
  %664 = shl i64 %661, 4
  %665 = call ptr @realloc(ptr %663, i64 %664)
  store ptr %665, ptr %534, align 8
  %.pre331 = load i64, ptr %memberidx.i181, align 4
  br label %Array_EnumNode____sl__.exit

Array_EnumNode____sl__.exit:                      ; preds = %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge, %if.entry.i185
  %666 = phi ptr [ %.pre332, %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge ], [ %665, %if.entry.i185 ]
  %667 = phi i64 [ %660, %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge ], [ %.pre331, %if.entry.i185 ]
  %668 = add nsw i64 %667, 1
  store i64 %668, ptr %memberidx.i181, align 4
  %669 = getelementptr inbounds ptr, ptr %666, i64 %667
  store ptr %543, ptr %669, align 8
  br label %ifend

if.entry17:                                       ; preds = %while.entry
  %670 = load ptr, ptr %memberidx20, align 8
  %671 = load i64, ptr %memberidx2.i, align 8
  %672 = load ptr, ptr %3, align 8
  %memberidx2.i.i188 = getelementptr inbounds %Array_Token_, ptr %672, i64 0, i32 1
  %673 = load i64, ptr %memberidx2.i.i188, align 4
  %674 = icmp slt i64 %671, %673
  br i1 %674, label %if.entry.i.i190, label %Parser_advance.exit.i194

if.entry.i.i190:                                  ; preds = %if.entry17
  %675 = add nsw i64 %671, 1
  store i64 %675, ptr %memberidx2.i, align 8
  %676 = load ptr, ptr %672, align 8
  %677 = getelementptr inbounds ptr, ptr %676, i64 %675
  %678 = load ptr, ptr %677, align 8
  store ptr %678, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i194

Parser_advance.exit.i194:                         ; preds = %if.entry.i.i190, %if.entry17
  %679 = call ptr @malloc(i32 24)
  %680 = call ptr @malloc(i32 24)
  %memberidx.i.i.i191 = getelementptr inbounds %Array_ImportClause_, ptr %680, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i191, align 4
  %memberidx1.i.i.i192 = getelementptr inbounds %Array_ImportClause_, ptr %680, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i192, align 4
  %681 = call ptr @malloc(i32 64)
  store ptr %681, ptr %680, align 8
  store i64 0, ptr %memberidx.i.i.i191, align 4
  store ptr %680, ptr %679, align 8
  %memberidx3.i33.i = getelementptr inbounds %ImportNode, ptr %679, i64 0, i32 2
  store ptr null, ptr %memberidx3.i33.i, align 8
  %682 = load ptr, ptr %memberidx.i69, align 8
  %683 = load i64, ptr %682, align 4
  %684 = icmp eq i64 %683, 53
  br i1 %684, label %if.entry.i196, label %ifend.i207

if.entry.i196:                                    ; preds = %Parser_advance.exit.i194
  %685 = call ptr @malloc(i32 16)
  %686 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %686, ptr %685, align 8
  %memberidx1.i.i34.i195 = getelementptr inbounds %ImportClause, ptr %685, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i34.i195, align 8
  %687 = load ptr, ptr %memberidx.i69, align 8
  %688 = load i64, ptr %687, align 4
  %689 = icmp eq i64 %688, 74
  br i1 %689, label %if.entry.i37.i, label %Parser_parse_import_clause.exit.i

if.entry.i37.i:                                   ; preds = %if.entry.i196
  %690 = load i64, ptr %memberidx2.i, align 8
  %691 = load ptr, ptr %3, align 8
  %memberidx2.i.i.i197 = getelementptr inbounds %Array_Token_, ptr %691, i64 0, i32 1
  %692 = load i64, ptr %memberidx2.i.i.i197, align 4
  %693 = icmp slt i64 %690, %692
  br i1 %693, label %if.entry.i.i.i199, label %Parser_advance.exit.i.i200

if.entry.i.i.i199:                                ; preds = %if.entry.i37.i
  %694 = add nsw i64 %690, 1
  store i64 %694, ptr %memberidx2.i, align 8
  %695 = load ptr, ptr %691, align 8
  %696 = getelementptr inbounds ptr, ptr %695, i64 %694
  %697 = load ptr, ptr %696, align 8
  store ptr %697, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i.i200

Parser_advance.exit.i.i200:                       ; preds = %if.entry.i.i.i199, %if.entry.i37.i
  %698 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %698, ptr %memberidx1.i.i34.i195, align 8
  br label %Parser_parse_import_clause.exit.i

Parser_parse_import_clause.exit.i:                ; preds = %Parser_advance.exit.i.i200, %if.entry.i196
  %699 = load i64, ptr %memberidx.i.i.i191, align 4
  %700 = load i64, ptr %memberidx1.i.i.i192, align 4
  %.not.i.i203 = icmp slt i64 %699, %700
  br i1 %.not.i.i203, label %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge, label %if.entry.i41.i204

Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge: ; preds = %Parser_parse_import_clause.exit.i
  %.pre312 = load ptr, ptr %680, align 8
  br label %Array_ImportClause____sl__.exit.i

if.entry.i41.i204:                                ; preds = %Parser_parse_import_clause.exit.i
  %701 = shl nuw i64 %700, 1
  store i64 %701, ptr %memberidx1.i.i.i192, align 4
  %702 = load ptr, ptr %680, align 8
  %703 = shl i64 %700, 4
  %704 = call ptr @realloc(ptr %702, i64 %703)
  store ptr %704, ptr %680, align 8
  %.pre311 = load i64, ptr %memberidx.i.i.i191, align 4
  br label %Array_ImportClause____sl__.exit.i

Array_ImportClause____sl__.exit.i:                ; preds = %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge, %if.entry.i41.i204
  %705 = phi ptr [ %704, %if.entry.i41.i204 ], [ %.pre312, %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge ]
  %706 = phi i64 [ %.pre311, %if.entry.i41.i204 ], [ %699, %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge ]
  %707 = add nsw i64 %706, 1
  store i64 %707, ptr %memberidx.i.i.i191, align 4
  %708 = getelementptr inbounds ptr, ptr %705, i64 %706
  store ptr %685, ptr %708, align 8
  %709 = load ptr, ptr %memberidx.i69, align 8
  %710 = load i64, ptr %709, align 4
  %711 = icmp eq i64 %710, 3
  %712 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i44.i = getelementptr inbounds %Array_FloError_, ptr %712, i64 0, i32 1
  %713 = load i64, ptr %memberidx3.i44.i, align 4
  %714 = icmp eq i64 %713, 0
  %715 = and i1 %711, %714
  br i1 %715, label %while.entry.i211, label %while.end.i

ifend.i207thread-pre-split:                       ; preds = %if.entry.i80.i, %if.entry.i.i82.i, %else.i84.i
  %.ph = phi ptr [ %773, %if.entry.i80.i ], [ %782, %if.entry.i.i82.i ], [ %.pre315, %else.i84.i ]
  %.pr = load i64, ptr %.ph, align 4
  br label %ifend.i207

ifend.i207:                                       ; preds = %ifend.i207thread-pre-split, %Parser_advance.exit.i194
  %716 = phi i64 [ %.pr, %ifend.i207thread-pre-split ], [ %683, %Parser_advance.exit.i194 ]
  %717 = phi ptr [ %.ph, %ifend.i207thread-pre-split ], [ %682, %Parser_advance.exit.i194 ]
  %memberidx8.i205 = getelementptr inbounds %ImportNode, ptr %679, i64 0, i32 1
  %718 = icmp eq i64 %716, 34
  br i1 %718, label %if.entry.i48.i, label %else.i.i210

if.entry.i48.i:                                   ; preds = %ifend.i207
  %719 = load i64, ptr %memberidx2.i, align 8
  %720 = load ptr, ptr %3, align 8
  %memberidx2.i.i47.i209 = getelementptr inbounds %Array_Token_, ptr %720, i64 0, i32 1
  %721 = load i64, ptr %memberidx2.i.i47.i209, align 4
  %722 = icmp slt i64 %719, %721
  br i1 %722, label %if.entry.i.i50.i, label %Parser_eat.exit.i

if.entry.i.i50.i:                                 ; preds = %if.entry.i48.i
  %723 = add nsw i64 %719, 1
  store i64 %723, ptr %memberidx2.i, align 8
  %724 = load ptr, ptr %720, align 8
  %725 = getelementptr inbounds ptr, ptr %724, i64 %723
  %726 = load ptr, ptr %725, align 8
  store ptr %726, ptr %memberidx.i69, align 8
  br label %Parser_eat.exit.i

else.i.i210:                                      ; preds = %ifend.i207
  %727 = call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %717, i64 0, i32 1
  %728 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %727, align 4
  %memberidx1.i76.i.i = getelementptr inbounds %Token, ptr %727, i64 0, i32 1
  store ptr %728, ptr %memberidx1.i76.i.i, align 8
  %.pre316 = load ptr, ptr %memberidx.i69, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i48.i, %if.entry.i.i50.i, %else.i.i210
  %729 = phi ptr [ %.pre316, %else.i.i210 ], [ %726, %if.entry.i.i50.i ], [ %717, %if.entry.i48.i ]
  %common.ret.op.i.i = phi ptr [ %727, %else.i.i210 ], [ %717, %if.entry.i.i50.i ], [ %717, %if.entry.i48.i ]
  store ptr %common.ret.op.i.i, ptr %memberidx8.i205, align 8
  %730 = load i64, ptr %729, align 4
  %731 = icmp eq i64 %730, 74
  br i1 %731, label %if.entry11.i, label %Parser_parse_import.exit

while.entry.i211:                                 ; preds = %Array_ImportClause____sl__.exit.i, %Array_ImportClause____sl__.exit72.i
  %732 = load i64, ptr %memberidx2.i, align 8
  %733 = load ptr, ptr %3, align 8
  %memberidx2.i53.i = getelementptr inbounds %Array_Token_, ptr %733, i64 0, i32 1
  %734 = load i64, ptr %memberidx2.i53.i, align 4
  %735 = icmp slt i64 %732, %734
  br i1 %735, label %if.entry.i55.i, label %Parser_advance.exit56.i

if.entry.i55.i:                                   ; preds = %while.entry.i211
  %736 = add nsw i64 %732, 1
  store i64 %736, ptr %memberidx2.i, align 8
  %737 = load ptr, ptr %733, align 8
  %738 = getelementptr inbounds ptr, ptr %737, i64 %736
  %739 = load ptr, ptr %738, align 8
  store ptr %739, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit56.i

Parser_advance.exit56.i:                          ; preds = %if.entry.i55.i, %while.entry.i211
  %740 = load ptr, ptr %679, align 8
  %741 = call ptr @malloc(i32 16)
  %742 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %742, ptr %741, align 8
  %memberidx1.i.i57.i = getelementptr inbounds %ImportClause, ptr %741, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i57.i, align 8
  %743 = load ptr, ptr %memberidx.i69, align 8
  %744 = load i64, ptr %743, align 4
  %745 = icmp eq i64 %744, 74
  br i1 %745, label %if.entry.i61.i, label %Parser_parse_import_clause.exit66.i

if.entry.i61.i:                                   ; preds = %Parser_advance.exit56.i
  %746 = load i64, ptr %memberidx2.i, align 8
  %747 = load ptr, ptr %3, align 8
  %memberidx2.i.i60.i = getelementptr inbounds %Array_Token_, ptr %747, i64 0, i32 1
  %748 = load i64, ptr %memberidx2.i.i60.i, align 4
  %749 = icmp slt i64 %746, %748
  br i1 %749, label %if.entry.i.i63.i, label %Parser_advance.exit.i65.i

if.entry.i.i63.i:                                 ; preds = %if.entry.i61.i
  %750 = add nsw i64 %746, 1
  store i64 %750, ptr %memberidx2.i, align 8
  %751 = load ptr, ptr %747, align 8
  %752 = getelementptr inbounds ptr, ptr %751, i64 %750
  %753 = load ptr, ptr %752, align 8
  store ptr %753, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i65.i

Parser_advance.exit.i65.i:                        ; preds = %if.entry.i.i63.i, %if.entry.i61.i
  %754 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %754, ptr %memberidx1.i.i57.i, align 8
  br label %Parser_parse_import_clause.exit66.i

Parser_parse_import_clause.exit66.i:              ; preds = %Parser_advance.exit.i65.i, %Parser_advance.exit56.i
  %memberidx.i67.i = getelementptr inbounds %Array_ImportClause_, ptr %740, i64 0, i32 1
  %755 = load i64, ptr %memberidx.i67.i, align 4
  %memberidx1.i68.i = getelementptr inbounds %Array_ImportClause_, ptr %740, i64 0, i32 2
  %756 = load i64, ptr %memberidx1.i68.i, align 4
  %.not.i69.i = icmp slt i64 %755, %756
  br i1 %.not.i69.i, label %Parser_parse_import_clause.exit66.i.Array_ImportClause____sl__.exit72.i_crit_edge, label %if.entry.i71.i

Parser_parse_import_clause.exit66.i.Array_ImportClause____sl__.exit72.i_crit_edge: ; preds = %Parser_parse_import_clause.exit66.i
  %.pre314 = load ptr, ptr %740, align 8
  br label %Array_ImportClause____sl__.exit72.i

if.entry.i71.i:                                   ; preds = %Parser_parse_import_clause.exit66.i
  %757 = shl nuw i64 %756, 1
  store i64 %757, ptr %memberidx1.i68.i, align 4
  %758 = load ptr, ptr %740, align 8
  %759 = shl i64 %756, 4
  %760 = call ptr @realloc(ptr %758, i64 %759)
  store ptr %760, ptr %740, align 8
  %.pre313 = load i64, ptr %memberidx.i67.i, align 4
  br label %Array_ImportClause____sl__.exit72.i

Array_ImportClause____sl__.exit72.i:              ; preds = %Parser_parse_import_clause.exit66.i.Array_ImportClause____sl__.exit72.i_crit_edge, %if.entry.i71.i
  %761 = phi ptr [ %760, %if.entry.i71.i ], [ %.pre314, %Parser_parse_import_clause.exit66.i.Array_ImportClause____sl__.exit72.i_crit_edge ]
  %762 = phi i64 [ %.pre313, %if.entry.i71.i ], [ %755, %Parser_parse_import_clause.exit66.i.Array_ImportClause____sl__.exit72.i_crit_edge ]
  %763 = add nsw i64 %762, 1
  store i64 %763, ptr %memberidx.i67.i, align 4
  %764 = getelementptr inbounds ptr, ptr %761, i64 %762
  store ptr %741, ptr %764, align 8
  %765 = load ptr, ptr %memberidx.i69, align 8
  %766 = load i64, ptr %765, align 4
  %767 = icmp eq i64 %766, 3
  %768 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i75.i215 = getelementptr inbounds %Array_FloError_, ptr %768, i64 0, i32 1
  %769 = load i64, ptr %memberidx3.i75.i215, align 4
  %770 = icmp eq i64 %769, 0
  %771 = and i1 %767, %770
  br i1 %771, label %while.entry.i211, label %while.end.i

while.end.i:                                      ; preds = %Array_ImportClause____sl__.exit72.i, %Array_ImportClause____sl__.exit.i
  %772 = phi i64 [ %710, %Array_ImportClause____sl__.exit.i ], [ %766, %Array_ImportClause____sl__.exit72.i ]
  %773 = phi ptr [ %709, %Array_ImportClause____sl__.exit.i ], [ %765, %Array_ImportClause____sl__.exit72.i ]
  %774 = icmp eq i64 %772, 69
  br i1 %774, label %if.entry.i80.i, label %else.i84.i

if.entry.i80.i:                                   ; preds = %while.end.i
  %775 = load i64, ptr %memberidx2.i, align 8
  %776 = load ptr, ptr %3, align 8
  %memberidx2.i.i79.i = getelementptr inbounds %Array_Token_, ptr %776, i64 0, i32 1
  %777 = load i64, ptr %memberidx2.i.i79.i, align 4
  %778 = icmp slt i64 %775, %777
  br i1 %778, label %if.entry.i.i82.i, label %ifend.i207thread-pre-split

if.entry.i.i82.i:                                 ; preds = %if.entry.i80.i
  %779 = add nsw i64 %775, 1
  store i64 %779, ptr %memberidx2.i, align 8
  %780 = load ptr, ptr %776, align 8
  %781 = getelementptr inbounds ptr, ptr %780, i64 %779
  %782 = load ptr, ptr %781, align 8
  store ptr %782, ptr %memberidx.i69, align 8
  br label %ifend.i207thread-pre-split

else.i84.i:                                       ; preds = %while.end.i
  %783 = call ptr @malloc(i32 16)
  %memberidx35.i85.i = getelementptr inbounds %Token, ptr %773, i64 0, i32 1
  %784 = load ptr, ptr %memberidx35.i85.i, align 8
  store i64 46, ptr %783, align 4
  %memberidx1.i76.i86.i = getelementptr inbounds %Token, ptr %783, i64 0, i32 1
  store ptr %784, ptr %memberidx1.i76.i86.i, align 8
  %.pre315 = load ptr, ptr %memberidx.i69, align 8
  br label %ifend.i207thread-pre-split

if.entry11.i:                                     ; preds = %Parser_eat.exit.i
  %785 = load i64, ptr %memberidx2.i, align 8
  %786 = load ptr, ptr %3, align 8
  %memberidx2.i89.i = getelementptr inbounds %Array_Token_, ptr %786, i64 0, i32 1
  %787 = load i64, ptr %memberidx2.i89.i, align 4
  %788 = icmp slt i64 %785, %787
  br i1 %788, label %if.entry.i91.i, label %Parser_advance.exit92.i

if.entry.i91.i:                                   ; preds = %if.entry11.i
  %789 = add nsw i64 %785, 1
  store i64 %789, ptr %memberidx2.i, align 8
  %790 = load ptr, ptr %786, align 8
  %791 = getelementptr inbounds ptr, ptr %790, i64 %789
  %792 = load ptr, ptr %791, align 8
  store ptr %792, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit92.i

Parser_advance.exit92.i:                          ; preds = %if.entry.i91.i, %if.entry11.i
  %793 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %793, ptr %memberidx3.i33.i, align 8
  br label %Parser_parse_import.exit

Parser_parse_import.exit:                         ; preds = %Parser_eat.exit.i, %Parser_advance.exit92.i
  %memberidx.i216 = getelementptr inbounds %Array_ImportNode_, ptr %670, i64 0, i32 1
  %794 = load i64, ptr %memberidx.i216, align 4
  %memberidx1.i217 = getelementptr inbounds %Array_ImportNode_, ptr %670, i64 0, i32 2
  %795 = load i64, ptr %memberidx1.i217, align 4
  %.not.i218 = icmp slt i64 %794, %795
  br i1 %.not.i218, label %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge, label %if.entry.i220

Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge: ; preds = %Parser_parse_import.exit
  %.pre318 = load ptr, ptr %670, align 8
  br label %Array_ImportNode____sl__.exit

if.entry.i220:                                    ; preds = %Parser_parse_import.exit
  %796 = shl nuw i64 %795, 1
  store i64 %796, ptr %memberidx1.i217, align 4
  %797 = load ptr, ptr %670, align 8
  %798 = shl i64 %795, 4
  %799 = call ptr @realloc(ptr %797, i64 %798)
  store ptr %799, ptr %670, align 8
  %.pre317 = load i64, ptr %memberidx.i216, align 4
  br label %Array_ImportNode____sl__.exit

Array_ImportNode____sl__.exit:                    ; preds = %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge, %if.entry.i220
  %800 = phi ptr [ %.pre318, %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge ], [ %799, %if.entry.i220 ]
  %801 = phi i64 [ %794, %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge ], [ %.pre317, %if.entry.i220 ]
  %802 = add nsw i64 %801, 1
  store i64 %802, ptr %memberidx.i216, align 4
  %803 = getelementptr inbounds ptr, ptr %800, i64 %801
  store ptr %679, ptr %803, align 8
  br label %ifend

if.entry23:                                       ; preds = %while.entry
  %804 = load ptr, ptr %memberidx26, align 8
  %805 = call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %3)
  %memberidx.i222 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %804, i64 0, i32 1
  %806 = load i64, ptr %memberidx.i222, align 4
  %memberidx1.i223 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %804, i64 0, i32 2
  %807 = load i64, ptr %memberidx1.i223, align 4
  %.not.i224 = icmp slt i64 %806, %807
  br i1 %.not.i224, label %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge, label %if.entry.i226

if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge: ; preds = %if.entry23
  %.pre310 = load ptr, ptr %804, align 8
  br label %Array_ConstDeclarationStatement____sl__.exit

if.entry.i226:                                    ; preds = %if.entry23
  %808 = shl nuw i64 %807, 1
  store i64 %808, ptr %memberidx1.i223, align 4
  %809 = load ptr, ptr %804, align 8
  %810 = shl i64 %807, 4
  %811 = call ptr @realloc(ptr %809, i64 %810)
  store ptr %811, ptr %804, align 8
  %.pre309 = load i64, ptr %memberidx.i222, align 4
  br label %Array_ConstDeclarationStatement____sl__.exit

Array_ConstDeclarationStatement____sl__.exit:     ; preds = %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge, %if.entry.i226
  %812 = phi ptr [ %.pre310, %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge ], [ %811, %if.entry.i226 ]
  %813 = phi i64 [ %806, %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge ], [ %.pre309, %if.entry.i226 ]
  %814 = add nsw i64 %813, 1
  store i64 %814, ptr %memberidx.i222, align 4
  %815 = getelementptr inbounds ptr, ptr %812, i64 %813
  store ptr %805, ptr %815, align 8
  br label %ifend

if.entry29:                                       ; preds = %while.entry
  %816 = load ptr, ptr %memberidx32, align 8
  %817 = call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %3)
  %memberidx.i228 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %816, i64 0, i32 1
  %818 = load i64, ptr %memberidx.i228, align 4
  %memberidx1.i229 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %816, i64 0, i32 2
  %819 = load i64, ptr %memberidx1.i229, align 4
  %.not.i230 = icmp slt i64 %818, %819
  br i1 %.not.i230, label %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge, label %if.entry.i232

if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge: ; preds = %if.entry29
  %.pre308 = load ptr, ptr %816, align 8
  br label %Array_VarDeclarationStatement____sl__.exit

if.entry.i232:                                    ; preds = %if.entry29
  %820 = shl nuw i64 %819, 1
  store i64 %820, ptr %memberidx1.i229, align 4
  %821 = load ptr, ptr %816, align 8
  %822 = shl i64 %819, 4
  %823 = call ptr @realloc(ptr %821, i64 %822)
  store ptr %823, ptr %816, align 8
  %.pre307 = load i64, ptr %memberidx.i228, align 4
  br label %Array_VarDeclarationStatement____sl__.exit

Array_VarDeclarationStatement____sl__.exit:       ; preds = %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge, %if.entry.i232
  %824 = phi ptr [ %.pre308, %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge ], [ %823, %if.entry.i232 ]
  %825 = phi i64 [ %818, %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge ], [ %.pre307, %if.entry.i232 ]
  %826 = add nsw i64 %825, 1
  store i64 %826, ptr %memberidx.i228, align 4
  %827 = getelementptr inbounds ptr, ptr %824, i64 %825
  store ptr %817, ptr %827, align 8
  br label %ifend

if.entry.i240:                                    ; preds = %while.entry
  %memberidx1.i234 = getelementptr inbounds %IdentifierToken, ptr %36, i64 0, i32 2
  %828 = load ptr, ptr %memberidx1.i234, align 8
  %829 = call ptr @malloc(i32 4)
  store i32 1701869940, ptr %829, align 8
  %830 = call ptr @malloc(i32 24)
  store ptr %829, ptr %830, align 8
  %memberidx1.i.i.i235 = getelementptr inbounds %String, ptr %830, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i235, align 4
  %memberidx2.i.i.i236 = getelementptr inbounds %String, ptr %830, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i236, align 4
  %memberidx.i.i237 = getelementptr inbounds %String, ptr %828, i64 0, i32 1
  %831 = load i64, ptr %memberidx.i.i237, align 4
  %.not.i.i239 = icmp eq i64 %831, 4
  br i1 %.not.i.i239, label %ifend.i.i241, label %else35

ifend.i.i241:                                     ; preds = %if.entry.i240
  %832 = load ptr, ptr %828, align 8
  %833 = call i64 @memcmp(ptr %832, ptr nonnull %829, i64 4)
  %834 = icmp eq i64 %833, 0
  br i1 %834, label %if.entry34, label %else35

if.entry34:                                       ; preds = %ifend.i.i241
  %835 = load ptr, ptr %memberidx37, align 8
  %836 = load i64, ptr %memberidx2.i, align 8
  %837 = load ptr, ptr %3, align 8
  %memberidx2.i.i244 = getelementptr inbounds %Array_Token_, ptr %837, i64 0, i32 1
  %838 = load i64, ptr %memberidx2.i.i244, align 4
  %839 = icmp slt i64 %836, %838
  br i1 %839, label %if.entry.i.i246, label %Parser_parse_type_alias.exit

if.entry.i.i246:                                  ; preds = %if.entry34
  %840 = add nsw i64 %836, 1
  store i64 %840, ptr %memberidx2.i, align 8
  %841 = load ptr, ptr %837, align 8
  %842 = getelementptr inbounds ptr, ptr %841, i64 %840
  %843 = load ptr, ptr %842, align 8
  store ptr %843, ptr %memberidx.i69, align 8
  br label %Parser_parse_type_alias.exit

Parser_parse_type_alias.exit:                     ; preds = %if.entry34, %if.entry.i.i246
  %844 = call ptr @malloc(i32 16)
  %845 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %845, ptr %844, align 8
  %846 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 38)
  %memberidx.i247 = getelementptr inbounds %TypeAliasNode, ptr %844, i64 0, i32 1
  %847 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %847, ptr %memberidx.i247, align 8
  %memberidx.i83 = getelementptr inbounds %Array_TypeAliasNode_, ptr %835, i64 0, i32 1
  %848 = load i64, ptr %memberidx.i83, align 4
  %memberidx1.i84 = getelementptr inbounds %Array_TypeAliasNode_, ptr %835, i64 0, i32 2
  %849 = load i64, ptr %memberidx1.i84, align 4
  %.not.i = icmp slt i64 %848, %849
  br i1 %.not.i, label %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge, label %if.entry.i86

Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge: ; preds = %Parser_parse_type_alias.exit
  %.pre306 = load ptr, ptr %835, align 8
  br label %Array_TypeAliasNode____sl__.exit

if.entry.i86:                                     ; preds = %Parser_parse_type_alias.exit
  %850 = shl nuw i64 %849, 1
  store i64 %850, ptr %memberidx1.i84, align 4
  %851 = load ptr, ptr %835, align 8
  %852 = shl i64 %849, 4
  %853 = call ptr @realloc(ptr %851, i64 %852)
  store ptr %853, ptr %835, align 8
  %.pre305 = load i64, ptr %memberidx.i83, align 4
  br label %Array_TypeAliasNode____sl__.exit

Array_TypeAliasNode____sl__.exit:                 ; preds = %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge, %if.entry.i86
  %854 = phi ptr [ %.pre306, %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge ], [ %853, %if.entry.i86 ]
  %855 = phi i64 [ %848, %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge ], [ %.pre305, %if.entry.i86 ]
  %856 = add nsw i64 %855, 1
  store i64 %856, ptr %memberidx.i83, align 4
  %857 = getelementptr inbounds ptr, ptr %854, i64 %855
  store ptr %844, ptr %857, align 8
  br label %ifend

else35:                                           ; preds = %while.entry, %if.entry.i240, %ifend.i.i241
  %858 = call ptr @malloc(i32 87)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(87) %858, ptr noundef nonnull align 8 dereferenceable(87) @79, i64 87, i1 false)
  %859 = call ptr @malloc(i32 24)
  store ptr %858, ptr %859, align 8
  %memberidx1.i.i73 = getelementptr inbounds %String, ptr %859, i64 0, i32 1
  store i64 87, ptr %memberidx1.i.i73, align 4
  %memberidx2.i.i74 = getelementptr inbounds %String, ptr %859, i64 0, i32 2
  store i64 87, ptr %memberidx2.i.i74, align 4
  %860 = load ptr, ptr %memberidx1.i, align 8
  %861 = call ptr @malloc(i32 24)
  %862 = load ptr, ptr %memberidx.i69, align 8
  %memberidx2.i66 = getelementptr inbounds %Token, ptr %862, i64 0, i32 1
  %863 = load ptr, ptr %memberidx2.i66, align 8
  store i64 2, ptr %861, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %861, i64 0, i32 2
  store ptr %863, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %861, i64 0, i32 1
  store ptr %859, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %860, i64 0, i32 1
  %864 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %860, i64 0, i32 2
  %865 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %864, %865
  br i1 %.not.i.i, label %else35.Parser_error.exit_crit_edge, label %if.entry.i.i

else35.Parser_error.exit_crit_edge:               ; preds = %else35
  %.pre385 = load ptr, ptr %860, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %else35
  %866 = shl nuw i64 %865, 1
  store i64 %866, ptr %memberidx1.i4.i, align 4
  %867 = load ptr, ptr %860, align 8
  %868 = shl i64 %865, 4
  %869 = call ptr @realloc(ptr %867, i64 %868)
  store ptr %869, ptr %860, align 8
  %.pre384 = load i64, ptr %memberidx.i.i, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %else35.Parser_error.exit_crit_edge, %if.entry.i.i
  %870 = phi ptr [ %.pre385, %else35.Parser_error.exit_crit_edge ], [ %869, %if.entry.i.i ]
  %871 = phi i64 [ %864, %else35.Parser_error.exit_crit_edge ], [ %.pre384, %if.entry.i.i ]
  %872 = add nsw i64 %871, 1
  store i64 %872, ptr %memberidx.i.i, align 4
  %873 = getelementptr inbounds ptr, ptr %870, i64 %871
  store ptr %861, ptr %873, align 8
  br label %while.end
}

define internal fastcc ptr @Parser_parse_block(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 16)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %BlockNode, ptr %2, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %5, ptr %memberidx.i, align 8
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 33
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = icmp eq i64 %11, 0
  %13 = and i1 %9, %12
  br i1 %13, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %1
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i11.i, align 4
  %16 = load i64, ptr %memberidx2.i12.i, align 4
  %17 = icmp slt i64 %15, %16
  br i1 %17, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %18 = phi i64 [ %27, %Parser_advance.exit.i ], [ 0, %while.entry.i.preheader ]
  %19 = phi i64 [ %28, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %20 = phi i64 [ %31, %Parser_advance.exit.i ], [ %15, %while.entry.i.preheader ]
  %21 = load i64, ptr %memberidx2.i12.i, align 4
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %23 = add nsw i64 %20, 1
  store i64 %23, ptr %memberidx.i11.i, align 4
  %24 = load ptr, ptr %14, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  store ptr %26, ptr %memberidx, align 8
  %.pre = load i64, ptr %26, align 4
  %.pre82 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %27 = phi i64 [ %.pre82, %if.entry.i.i ], [ %18, %while.entry.i ]
  %28 = phi i64 [ %.pre, %if.entry.i.i ], [ %19, %while.entry.i ]
  %29 = phi i64 [ %.pre82, %if.entry.i.i ], [ 0, %while.entry.i ]
  %30 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %31 = phi i64 [ %23, %if.entry.i.i ], [ %20, %while.entry.i ]
  %32 = icmp eq i64 %30, 33
  %33 = icmp eq i64 %29, 0
  %34 = and i1 %32, %33
  br i1 %34, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %1
  %35 = phi i64 [ %11, %1 ], [ %27, %Parser_advance.exit.i ]
  %36 = phi i64 [ %8, %1 ], [ %28, %Parser_advance.exit.i ]
  %37 = icmp eq i64 %36, 27
  br i1 %37, label %if.entry, label %else

if.entry:                                         ; preds = %Parser_new_lines.exit
  %memberidx.i26 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %38 = load i64, ptr %memberidx.i26, align 4
  %39 = load ptr, ptr %0, align 8
  %memberidx2.i27 = getelementptr inbounds %Array_Token_, ptr %39, i64 0, i32 1
  %40 = load i64, ptr %memberidx2.i27, align 4
  %41 = icmp slt i64 %38, %40
  br i1 %41, label %Parser_advance.exit, label %Parser_new_lines.exit41

Parser_advance.exit:                              ; preds = %if.entry
  %42 = add nsw i64 %38, 1
  store i64 %42, ptr %memberidx.i26, align 4
  %43 = load ptr, ptr %39, align 8
  %44 = getelementptr inbounds ptr, ptr %43, i64 %42
  %45 = load ptr, ptr %44, align 8
  store ptr %45, ptr %memberidx, align 8
  %.pre85 = load i64, ptr %45, align 4
  %.pre86 = load i64, ptr %memberidx3.i.i, align 4
  %46 = icmp eq i64 %.pre85, 33
  %47 = icmp eq i64 %.pre86, 0
  %48 = and i1 %46, %47
  br i1 %48, label %while.entry.i34.preheader, label %Parser_new_lines.exit41

while.entry.i34.preheader:                        ; preds = %Parser_advance.exit
  %49 = load i64, ptr %memberidx2.i27, align 4
  %50 = icmp slt i64 %42, %49
  br i1 %50, label %while.entry.i34, label %while.entry.i34.us

while.entry.i34.us:                               ; preds = %while.entry.i34.preheader, %while.entry.i34.us
  br label %while.entry.i34.us

while.entry.i34:                                  ; preds = %while.entry.i34.preheader, %Parser_advance.exit.i40
  %51 = phi i64 [ %60, %Parser_advance.exit.i40 ], [ 33, %while.entry.i34.preheader ]
  %52 = phi i64 [ %61, %Parser_advance.exit.i40 ], [ 0, %while.entry.i34.preheader ]
  %53 = phi i64 [ %64, %Parser_advance.exit.i40 ], [ %42, %while.entry.i34.preheader ]
  %54 = load i64, ptr %memberidx2.i27, align 4
  %55 = icmp slt i64 %53, %54
  br i1 %55, label %if.entry.i.i36, label %Parser_advance.exit.i40

if.entry.i.i36:                                   ; preds = %while.entry.i34
  %56 = add nsw i64 %53, 1
  store i64 %56, ptr %memberidx.i26, align 4
  %57 = load ptr, ptr %39, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  store ptr %59, ptr %memberidx, align 8
  %.pre87 = load i64, ptr %59, align 4
  %.pre88 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i40

Parser_advance.exit.i40:                          ; preds = %if.entry.i.i36, %while.entry.i34
  %60 = phi i64 [ %.pre87, %if.entry.i.i36 ], [ %51, %while.entry.i34 ]
  %61 = phi i64 [ %.pre88, %if.entry.i.i36 ], [ %52, %while.entry.i34 ]
  %62 = phi i64 [ %.pre88, %if.entry.i.i36 ], [ 0, %while.entry.i34 ]
  %63 = phi i64 [ %.pre87, %if.entry.i.i36 ], [ 33, %while.entry.i34 ]
  %64 = phi i64 [ %56, %if.entry.i.i36 ], [ %53, %while.entry.i34 ]
  %65 = icmp eq i64 %63, 33
  %66 = icmp eq i64 %62, 0
  %67 = and i1 %65, %66
  br i1 %67, label %while.entry.i34, label %Parser_new_lines.exit41

Parser_new_lines.exit41:                          ; preds = %Parser_advance.exit.i40, %if.entry, %Parser_advance.exit
  %68 = phi i64 [ %.pre85, %Parser_advance.exit ], [ 27, %if.entry ], [ %60, %Parser_advance.exit.i40 ]
  %69 = phi i64 [ %.pre86, %Parser_advance.exit ], [ %35, %if.entry ], [ %61, %Parser_advance.exit.i40 ]
  %.fr = freeze i64 %69
  %70 = icmp eq i64 %.fr, 0
  br i1 %70, label %switch.early.test, label %while.end

switch.early.test:                                ; preds = %Parser_new_lines.exit41
  switch i64 %68, label %while.entry [
    i64 46, label %while.end
    i64 28, label %while.end
  ]

else:                                             ; preds = %Parser_new_lines.exit
  %71 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %72 = load i64, ptr %memberidx.i.i, align 4
  %73 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i = icmp slt i64 %72, %73
  br i1 %.not.i, label %else.Array_StatementNode____sl__.exit_crit_edge, label %if.entry.i47

else.Array_StatementNode____sl__.exit_crit_edge:  ; preds = %else
  %.pre84 = load ptr, ptr %5, align 8
  br label %Array_StatementNode____sl__.exit

if.entry.i47:                                     ; preds = %else
  %74 = shl nuw i64 %73, 1
  store i64 %74, ptr %memberidx1.i.i, align 4
  %75 = load ptr, ptr %5, align 8
  %76 = shl i64 %73, 4
  %77 = tail call ptr @realloc(ptr %75, i64 %76)
  store ptr %77, ptr %5, align 8
  %.pre83 = load i64, ptr %memberidx.i.i, align 4
  br label %Array_StatementNode____sl__.exit

Array_StatementNode____sl__.exit:                 ; preds = %else.Array_StatementNode____sl__.exit_crit_edge, %if.entry.i47
  %78 = phi ptr [ %.pre84, %else.Array_StatementNode____sl__.exit_crit_edge ], [ %77, %if.entry.i47 ]
  %79 = phi i64 [ %72, %else.Array_StatementNode____sl__.exit_crit_edge ], [ %.pre83, %if.entry.i47 ]
  %80 = add nsw i64 %79, 1
  store i64 %80, ptr %memberidx.i.i, align 4
  %81 = getelementptr inbounds ptr, ptr %78, i64 %79
  store ptr %71, ptr %81, align 8
  br label %ifend

ifend:                                            ; preds = %Array_StatementNode____sl__.exit, %while.end
  ret ptr %2

while.entry:                                      ; preds = %switch.early.test, %switch.early.test74
  %82 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %83 = load i64, ptr %memberidx.i.i, align 4
  %84 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i50 = icmp slt i64 %83, %84
  br i1 %.not.i50, label %while.entry.Array_StatementNode____sl__.exit53_crit_edge, label %if.entry.i52

while.entry.Array_StatementNode____sl__.exit53_crit_edge: ; preds = %while.entry
  %.pre90 = load ptr, ptr %5, align 8
  br label %Array_StatementNode____sl__.exit53

if.entry.i52:                                     ; preds = %while.entry
  %85 = shl nuw i64 %84, 1
  store i64 %85, ptr %memberidx1.i.i, align 4
  %86 = load ptr, ptr %5, align 8
  %87 = shl i64 %84, 4
  %88 = tail call ptr @realloc(ptr %86, i64 %87)
  store ptr %88, ptr %5, align 8
  %.pre89 = load i64, ptr %memberidx.i.i, align 4
  br label %Array_StatementNode____sl__.exit53

Array_StatementNode____sl__.exit53:               ; preds = %while.entry.Array_StatementNode____sl__.exit53_crit_edge, %if.entry.i52
  %89 = phi ptr [ %.pre90, %while.entry.Array_StatementNode____sl__.exit53_crit_edge ], [ %88, %if.entry.i52 ]
  %90 = phi i64 [ %83, %while.entry.Array_StatementNode____sl__.exit53_crit_edge ], [ %.pre89, %if.entry.i52 ]
  %91 = add nsw i64 %90, 1
  store i64 %91, ptr %memberidx.i.i, align 4
  %92 = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %82, ptr %92, align 8
  %93 = load ptr, ptr %memberidx, align 8
  %94 = load i64, ptr %93, align 4
  %95 = icmp eq i64 %94, 33
  %96 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i57 = getelementptr inbounds %Array_FloError_, ptr %96, i64 0, i32 1
  %97 = load i64, ptr %memberidx3.i.i57, align 4
  %98 = icmp eq i64 %97, 0
  %99 = and i1 %95, %98
  br i1 %99, label %while.entry.i60.preheader, label %Parser_new_lines.exit67

while.entry.i60.preheader:                        ; preds = %Array_StatementNode____sl__.exit53
  %100 = load ptr, ptr %0, align 8
  %memberidx2.i12.i59 = getelementptr inbounds %Array_Token_, ptr %100, i64 0, i32 1
  %101 = load i64, ptr %memberidx.i26, align 4
  %102 = load i64, ptr %memberidx2.i12.i59, align 4
  %103 = icmp slt i64 %101, %102
  br i1 %103, label %while.entry.i60, label %while.entry.i60.us

while.entry.i60.us:                               ; preds = %while.entry.i60.preheader, %while.entry.i60.us
  br label %while.entry.i60.us

while.entry.i60:                                  ; preds = %while.entry.i60.preheader, %Parser_advance.exit.i66
  %104 = phi i64 [ %113, %Parser_advance.exit.i66 ], [ 33, %while.entry.i60.preheader ]
  %105 = phi i64 [ %114, %Parser_advance.exit.i66 ], [ 0, %while.entry.i60.preheader ]
  %106 = phi i64 [ %117, %Parser_advance.exit.i66 ], [ %101, %while.entry.i60.preheader ]
  %107 = load i64, ptr %memberidx2.i12.i59, align 4
  %108 = icmp slt i64 %106, %107
  br i1 %108, label %if.entry.i.i62, label %Parser_advance.exit.i66

if.entry.i.i62:                                   ; preds = %while.entry.i60
  %109 = add nsw i64 %106, 1
  store i64 %109, ptr %memberidx.i26, align 4
  %110 = load ptr, ptr %100, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %109
  %112 = load ptr, ptr %111, align 8
  store ptr %112, ptr %memberidx, align 8
  %.pre91 = load i64, ptr %112, align 4
  %.pre92 = load i64, ptr %memberidx3.i.i57, align 4
  br label %Parser_advance.exit.i66

Parser_advance.exit.i66:                          ; preds = %if.entry.i.i62, %while.entry.i60
  %113 = phi i64 [ %.pre91, %if.entry.i.i62 ], [ %104, %while.entry.i60 ]
  %114 = phi i64 [ %.pre92, %if.entry.i.i62 ], [ %105, %while.entry.i60 ]
  %115 = phi i64 [ %.pre92, %if.entry.i.i62 ], [ 0, %while.entry.i60 ]
  %116 = phi i64 [ %.pre91, %if.entry.i.i62 ], [ 33, %while.entry.i60 ]
  %117 = phi i64 [ %109, %if.entry.i.i62 ], [ %106, %while.entry.i60 ]
  %118 = icmp eq i64 %116, 33
  %119 = icmp eq i64 %115, 0
  %120 = and i1 %118, %119
  br i1 %120, label %while.entry.i60, label %Parser_new_lines.exit67

Parser_new_lines.exit67:                          ; preds = %Parser_advance.exit.i66, %Array_StatementNode____sl__.exit53
  %121 = phi i64 [ %94, %Array_StatementNode____sl__.exit53 ], [ %113, %Parser_advance.exit.i66 ]
  %122 = phi i64 [ %97, %Array_StatementNode____sl__.exit53 ], [ %114, %Parser_advance.exit.i66 ]
  %.fr75 = freeze i64 %122
  %123 = icmp eq i64 %.fr75, 0
  br i1 %123, label %switch.early.test74, label %while.end

switch.early.test74:                              ; preds = %Parser_new_lines.exit67
  switch i64 %121, label %while.entry [
    i64 46, label %while.end
    i64 28, label %while.end
  ]

while.end:                                        ; preds = %switch.early.test74, %switch.early.test74, %Parser_new_lines.exit67, %switch.early.test, %switch.early.test, %Parser_new_lines.exit41
  %124 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 28)
  br label %ifend
}

define internal fastcc ptr @Parser_parse_type(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  switch i64 %3, label %ifend [
    i64 53, label %if.entry
    i64 25, label %if.entry5
    i64 29, label %if.entry10
  ]

if.entry:                                         ; preds = %1
  %4 = tail call fastcc ptr @Parser_parse_object_type(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %else.i171, %if.entry.i.i169, %if.entry.i167, %1, %ifend11.i, %if.entry9.i, %if.entry
  %type_node.0 = phi ptr [ %4, %if.entry ], [ %34, %if.entry9.i ], [ %41, %ifend11.i ], [ null, %1 ], [ %49, %if.entry.i167 ], [ %49, %if.entry.i.i169 ], [ %49, %else.i171 ]
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 29
  %8 = icmp eq i64 %6, 11
  %9 = or i1 %7, %8
  %10 = icmp eq i64 %6, 4
  %11 = or i1 %10, %9
  %memberidx2.i203 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %memberidx2.i203, align 8
  %memberidx3.i204 = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i204, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %11, %14
  br i1 %15, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %ifend
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

if.entry5:                                        ; preds = %1
  %16 = tail call ptr @malloc(i32 24)
  %memberidx.i43.i = getelementptr inbounds %Array_TypeNode_, ptr %16, i64 0, i32 1
  store i64 0, ptr %memberidx.i43.i, align 4
  %memberidx1.i44.i = getelementptr inbounds %Array_TypeNode_, ptr %16, i64 0, i32 2
  store i64 8, ptr %memberidx1.i44.i, align 4
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %16, align 8
  store i64 0, ptr %memberidx.i43.i, align 4
  %18 = load ptr, ptr %memberidx, align 8
  %memberidx3.i207 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx3.i207, align 8
  %memberidx.i40.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %20 = load i64, ptr %memberidx.i40.i, align 4
  %21 = load ptr, ptr %0, align 8
  %memberidx2.i41.i = getelementptr inbounds %Array_Token_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx2.i41.i, align 4
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %if.entry.i.i208, label %Parser_advance.exit.i210

if.entry.i.i208:                                  ; preds = %if.entry5
  %24 = add nsw i64 %20, 1
  store i64 %24, ptr %memberidx.i40.i, align 4
  %25 = load ptr, ptr %21, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  store ptr %27, ptr %memberidx, align 8
  br label %Parser_advance.exit.i210

Parser_advance.exit.i210:                         ; preds = %if.entry.i.i208, %if.entry5
  %28 = phi ptr [ %27, %if.entry.i.i208 ], [ %18, %if.entry5 ]
  %29 = load i64, ptr %28, align 4
  %.not.i209 = icmp eq i64 %29, 26
  br i1 %.not.i209, label %ifend.i, label %if.entry.i211

if.entry.i211:                                    ; preds = %Parser_advance.exit.i210
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %16)
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry.i211, %Parser_advance.exit.i210
  %30 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %31 = load ptr, ptr %memberidx, align 8
  %32 = load i64, ptr %31, align 4
  %.not31.i = icmp eq i64 %32, 45
  br i1 %.not31.i, label %ifend11.i, label %if.entry9.i

if.entry9.i:                                      ; preds = %ifend.i
  %memberidx6.i = getelementptr inbounds %Token, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx6.i, align 8
  %34 = tail call ptr @malloc(i32 24)
  %35 = tail call ptr @malloc(i32 32)
  %36 = load i64, ptr %19, align 4
  %memberidx1.i34.i = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 1
  %37 = load i64, ptr %memberidx1.i34.i, align 4
  %memberidx2.i35.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i35.i, align 4
  %memberidx3.i36.i = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 3
  %39 = load i64, ptr %memberidx3.i36.i, align 4
  store i64 %36, ptr %35, align 4
  %memberidx1.i.i37.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i.i37.i, align 4
  %memberidx2.i.i38.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 2
  store i64 %38, ptr %memberidx2.i.i38.i, align 4
  %memberidx3.i.i39.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 3
  store i64 %39, ptr %memberidx3.i.i39.i, align 4
  store ptr %35, ptr %34, align 8
  %memberidx.i.i32.i = getelementptr inbounds %TypeNode, ptr %34, i64 0, i32 1
  store i64 15, ptr %memberidx.i.i32.i, align 4
  %memberidx.i33.i = getelementptr inbounds %TupleTypeNode, ptr %34, i64 0, i32 2
  store ptr %16, ptr %memberidx.i33.i, align 8
  br label %ifend

ifend11.i:                                        ; preds = %ifend.i
  %40 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 45)
  %41 = tail call ptr @malloc(i32 32)
  store ptr %19, ptr %41, align 8
  %memberidx.i.i.i = getelementptr inbounds %TypeNode, ptr %41, i64 0, i32 1
  store i64 16, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i213 = getelementptr inbounds %FunctionTypeNode, ptr %41, i64 0, i32 2
  store ptr %16, ptr %memberidx.i.i213, align 8
  %memberidx12.i = getelementptr inbounds %FunctionTypeNode, ptr %41, i64 0, i32 3
  %42 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %42, ptr %memberidx12.i, align 8
  %43 = load ptr, ptr %42, align 8
  %44 = tail call ptr @malloc(i32 32)
  %45 = load i64, ptr %19, align 4
  %memberidx1.i.i214 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i.i214, align 4
  %memberidx2.i.i215 = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i.i215, align 4
  %memberidx3.i.i216 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 3
  %48 = load i64, ptr %memberidx3.i.i216, align 4
  store i64 %45, ptr %44, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %47, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %48, ptr %memberidx3.i.i.i, align 4
  store ptr %44, ptr %41, align 8
  br label %ifend

if.entry10:                                       ; preds = %1
  %49 = tail call ptr @malloc(i32 32)
  %50 = tail call ptr @malloc(i32 24)
  %51 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %51, ptr noundef nonnull align 8 dereferenceable(3) @74, i64 3, i1 false)
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i.i200 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i200, align 4
  %memberidx2.i.i201 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i201, align 4
  %53 = load ptr, ptr %memberidx, align 8
  %memberidx14 = getelementptr inbounds %Token, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx14, align 8
  store i64 53, ptr %50, align 4
  %memberidx1.i.i198 = getelementptr inbounds %Token, ptr %50, i64 0, i32 1
  store ptr %54, ptr %memberidx1.i.i198, align 8
  %memberidx.i199 = getelementptr inbounds %IdentifierToken, ptr %50, i64 0, i32 2
  store ptr %52, ptr %memberidx.i199, align 8
  %55 = load ptr, ptr %memberidx14, align 8
  store ptr %55, ptr %49, align 8
  %memberidx.i.i192 = getelementptr inbounds %TypeNode, ptr %49, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i192, align 4
  %memberidx.i193 = getelementptr inbounds %RecordTypeNode, ptr %49, i64 0, i32 2
  store ptr %50, ptr %memberidx.i193, align 8
  %memberidx1.i194 = getelementptr inbounds %RecordTypeNode, ptr %49, i64 0, i32 3
  %56 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i195 = getelementptr inbounds %Array_TypeNode_, ptr %56, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i195, align 4
  %memberidx1.i.i196 = getelementptr inbounds %Array_TypeNode_, ptr %56, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i196, align 4
  %57 = tail call ptr @malloc(i32 64)
  store ptr %57, ptr %56, align 8
  store i64 0, ptr %memberidx.i5.i195, align 4
  store ptr %56, ptr %memberidx1.i194, align 8
  %memberidx.i187 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %58 = load i64, ptr %memberidx.i187, align 4
  %59 = load ptr, ptr %0, align 8
  %memberidx2.i188 = getelementptr inbounds %Array_Token_, ptr %59, i64 0, i32 1
  %60 = load i64, ptr %memberidx2.i188, align 4
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %if.entry.i190, label %Parser_advance.exit191

if.entry.i190:                                    ; preds = %if.entry10
  %62 = add nsw i64 %58, 1
  store i64 %62, ptr %memberidx.i187, align 4
  %63 = load ptr, ptr %59, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  store ptr %65, ptr %memberidx, align 8
  br label %Parser_advance.exit191

Parser_advance.exit191:                           ; preds = %if.entry10, %if.entry.i190
  %66 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %67 = load i64, ptr %memberidx.i5.i195, align 4
  %68 = load i64, ptr %memberidx1.i.i196, align 4
  %.not.i183 = icmp slt i64 %67, %68
  br i1 %.not.i183, label %Parser_advance.exit191.Array_TypeNode____sl__.exit186_crit_edge, label %if.entry.i185

Parser_advance.exit191.Array_TypeNode____sl__.exit186_crit_edge: ; preds = %Parser_advance.exit191
  %.pre224 = load ptr, ptr %56, align 8
  br label %Array_TypeNode____sl__.exit186

if.entry.i185:                                    ; preds = %Parser_advance.exit191
  %69 = shl nuw i64 %68, 1
  store i64 %69, ptr %memberidx1.i.i196, align 4
  %70 = load ptr, ptr %56, align 8
  %71 = shl i64 %68, 4
  %72 = tail call ptr @realloc(ptr %70, i64 %71)
  store ptr %72, ptr %56, align 8
  %.pre = load i64, ptr %memberidx.i5.i195, align 4
  br label %Array_TypeNode____sl__.exit186

Array_TypeNode____sl__.exit186:                   ; preds = %Parser_advance.exit191.Array_TypeNode____sl__.exit186_crit_edge, %if.entry.i185
  %73 = phi ptr [ %.pre224, %Parser_advance.exit191.Array_TypeNode____sl__.exit186_crit_edge ], [ %72, %if.entry.i185 ]
  %74 = phi i64 [ %67, %Parser_advance.exit191.Array_TypeNode____sl__.exit186_crit_edge ], [ %.pre, %if.entry.i185 ]
  %75 = add nsw i64 %74, 1
  store i64 %75, ptr %memberidx.i5.i195, align 4
  %76 = getelementptr inbounds ptr, ptr %73, i64 %74
  store ptr %66, ptr %76, align 8
  %77 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %78 = load ptr, ptr %memberidx1.i194, align 8
  %79 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i175 = getelementptr inbounds %Array_TypeNode_, ptr %78, i64 0, i32 1
  %80 = load i64, ptr %memberidx.i175, align 4
  %memberidx1.i176 = getelementptr inbounds %Array_TypeNode_, ptr %78, i64 0, i32 2
  %81 = load i64, ptr %memberidx1.i176, align 4
  %.not.i177 = icmp slt i64 %80, %81
  br i1 %.not.i177, label %Array_TypeNode____sl__.exit186.Array_TypeNode____sl__.exit180_crit_edge, label %if.entry.i179

Array_TypeNode____sl__.exit186.Array_TypeNode____sl__.exit180_crit_edge: ; preds = %Array_TypeNode____sl__.exit186
  %.pre226 = load ptr, ptr %78, align 8
  br label %Array_TypeNode____sl__.exit180

if.entry.i179:                                    ; preds = %Array_TypeNode____sl__.exit186
  %82 = shl nuw i64 %81, 1
  store i64 %82, ptr %memberidx1.i176, align 4
  %83 = load ptr, ptr %78, align 8
  %84 = shl i64 %81, 4
  %85 = tail call ptr @realloc(ptr %83, i64 %84)
  store ptr %85, ptr %78, align 8
  %.pre225 = load i64, ptr %memberidx.i175, align 4
  br label %Array_TypeNode____sl__.exit180

Array_TypeNode____sl__.exit180:                   ; preds = %Array_TypeNode____sl__.exit186.Array_TypeNode____sl__.exit180_crit_edge, %if.entry.i179
  %86 = phi ptr [ %.pre226, %Array_TypeNode____sl__.exit186.Array_TypeNode____sl__.exit180_crit_edge ], [ %85, %if.entry.i179 ]
  %87 = phi i64 [ %80, %Array_TypeNode____sl__.exit186.Array_TypeNode____sl__.exit180_crit_edge ], [ %.pre225, %if.entry.i179 ]
  %88 = add nsw i64 %87, 1
  store i64 %88, ptr %memberidx.i175, align 4
  %89 = getelementptr inbounds ptr, ptr %86, i64 %87
  store ptr %79, ptr %89, align 8
  %90 = load ptr, ptr %memberidx, align 8
  %91 = load i64, ptr %90, align 4
  %92 = icmp eq i64 %91, 30
  br i1 %92, label %if.entry.i167, label %else.i171

if.entry.i167:                                    ; preds = %Array_TypeNode____sl__.exit180
  %93 = load i64, ptr %memberidx.i187, align 4
  %94 = load ptr, ptr %0, align 8
  %memberidx2.i.i166 = getelementptr inbounds %Array_Token_, ptr %94, i64 0, i32 1
  %95 = load i64, ptr %memberidx2.i.i166, align 4
  %96 = icmp slt i64 %93, %95
  br i1 %96, label %if.entry.i.i169, label %ifend

if.entry.i.i169:                                  ; preds = %if.entry.i167
  %97 = add nsw i64 %93, 1
  store i64 %97, ptr %memberidx.i187, align 4
  %98 = load ptr, ptr %94, align 8
  %99 = getelementptr inbounds ptr, ptr %98, i64 %97
  %100 = load ptr, ptr %99, align 8
  store ptr %100, ptr %memberidx, align 8
  br label %ifend

else.i171:                                        ; preds = %Array_TypeNode____sl__.exit180
  %101 = tail call ptr @malloc(i32 16)
  %memberidx35.i172 = getelementptr inbounds %Token, ptr %90, i64 0, i32 1
  %102 = load ptr, ptr %memberidx35.i172, align 8
  store i64 46, ptr %101, align 4
  %memberidx1.i76.i173 = getelementptr inbounds %Token, ptr %101, i64 0, i32 1
  store ptr %102, ptr %memberidx1.i76.i173, align 8
  br label %ifend

while.entry:                                      ; preds = %while.entry.preheader, %ifend29
  %103 = phi i64 [ %127, %ifend29 ], [ %6, %while.entry.preheader ]
  %type_node.1 = phi ptr [ %type_node.3, %ifend29 ], [ %type_node.0, %while.entry.preheader ]
  %104 = icmp eq i64 %103, 29
  br i1 %104, label %if.entry27, label %else28

while.end:                                        ; preds = %ifend29, %ifend
  %type_node.2 = phi ptr [ %type_node.0, %ifend ], [ %type_node.3, %ifend29 ]
  ret ptr %type_node.2

if.entry27:                                       ; preds = %while.entry
  %105 = load i64, ptr %memberidx.i, align 4
  %106 = load ptr, ptr %0, align 8
  %memberidx2.i159 = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 1
  %107 = load i64, ptr %memberidx2.i159, align 4
  %108 = icmp slt i64 %105, %107
  br i1 %108, label %Parser_advance.exit162, label %else33

Parser_advance.exit162:                           ; preds = %if.entry27
  %109 = add nsw i64 %105, 1
  store i64 %109, ptr %memberidx.i, align 4
  %110 = load ptr, ptr %106, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %109
  %112 = load ptr, ptr %111, align 8
  store ptr %112, ptr %memberidx, align 8
  %.pre227 = load i64, ptr %112, align 4
  %113 = icmp eq i64 %.pre227, 30
  br i1 %113, label %if.entry32, label %else33

else28:                                           ; preds = %while.entry
  %114 = tail call ptr @malloc(i32 24)
  %115 = load ptr, ptr %type_node.1, align 8
  %116 = load ptr, ptr %memberidx, align 8
  %memberidx48 = getelementptr inbounds %Token, ptr %116, i64 0, i32 1
  %117 = load ptr, ptr %memberidx48, align 8
  %118 = tail call ptr @malloc(i32 32)
  %119 = load i64, ptr %115, align 4
  %memberidx1.i152 = getelementptr inbounds %FloRange, ptr %117, i64 0, i32 1
  %120 = load i64, ptr %memberidx1.i152, align 4
  %memberidx2.i153 = getelementptr inbounds %FloRange, ptr %115, i64 0, i32 2
  %121 = load i64, ptr %memberidx2.i153, align 4
  %memberidx3.i154 = getelementptr inbounds %FloRange, ptr %117, i64 0, i32 3
  %122 = load i64, ptr %memberidx3.i154, align 4
  store i64 %119, ptr %118, align 4
  %memberidx1.i.i155 = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 1
  store i64 %120, ptr %memberidx1.i.i155, align 4
  %memberidx2.i.i156 = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 2
  store i64 %121, ptr %memberidx2.i.i156, align 4
  %memberidx3.i.i157 = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 3
  store i64 %122, ptr %memberidx3.i.i157, align 4
  store ptr %118, ptr %114, align 8
  %memberidx.i.i150 = getelementptr inbounds %TypeNode, ptr %114, i64 0, i32 1
  store i64 13, ptr %memberidx.i.i150, align 4
  %memberidx.i151 = getelementptr inbounds %PointerTypeNode, ptr %114, i64 0, i32 2
  store ptr %type_node.1, ptr %memberidx.i151, align 8
  %123 = load ptr, ptr %memberidx, align 8
  %124 = load i64, ptr %123, align 4
  %125 = icmp eq i64 %124, 11
  br i1 %125, label %if.entry51, label %else52

ifend29:                                          ; preds = %if.entry.i, %else52, %else.i121, %if.entry.i.i119, %if.entry.i117, %Parser_eat.exit
  %type_node.3 = phi ptr [ %176, %Parser_eat.exit ], [ %type_node.4, %if.entry.i117 ], [ %type_node.4, %if.entry.i.i119 ], [ %type_node.4, %else.i121 ], [ %114, %else52 ], [ %114, %if.entry.i ]
  %126 = load ptr, ptr %memberidx, align 8
  %127 = load i64, ptr %126, align 4
  %128 = icmp eq i64 %127, 29
  %129 = icmp eq i64 %127, 11
  %130 = or i1 %128, %129
  %131 = icmp eq i64 %127, 4
  %132 = or i1 %131, %130
  %133 = load ptr, ptr %memberidx2.i203, align 8
  %memberidx3.i149 = getelementptr inbounds %Array_FloError_, ptr %133, i64 0, i32 1
  %134 = load i64, ptr %memberidx3.i149, align 4
  %135 = icmp eq i64 %134, 0
  %136 = and i1 %132, %135
  br i1 %136, label %while.entry, label %while.end

if.entry32:                                       ; preds = %Parser_advance.exit162
  %137 = tail call ptr @malloc(i32 32)
  %138 = tail call ptr @malloc(i32 24)
  %139 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %139, ptr noundef nonnull align 8 dereferenceable(5) @75, i64 5, i1 false)
  %140 = tail call ptr @malloc(i32 24)
  store ptr %139, ptr %140, align 8
  %memberidx1.i.i145 = getelementptr inbounds %String, ptr %140, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i145, align 4
  %memberidx2.i.i146 = getelementptr inbounds %String, ptr %140, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i146, align 4
  %141 = load ptr, ptr %memberidx, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %141, i64 0, i32 1
  %142 = load ptr, ptr %memberidx36, align 8
  store i64 53, ptr %138, align 4
  %memberidx1.i.i143 = getelementptr inbounds %Token, ptr %138, i64 0, i32 1
  store ptr %142, ptr %memberidx1.i.i143, align 8
  %memberidx.i144 = getelementptr inbounds %IdentifierToken, ptr %138, i64 0, i32 2
  store ptr %140, ptr %memberidx.i144, align 8
  %143 = load ptr, ptr %memberidx36, align 8
  store ptr %143, ptr %137, align 8
  %memberidx.i.i138 = getelementptr inbounds %TypeNode, ptr %137, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i138, align 4
  %memberidx.i139 = getelementptr inbounds %RecordTypeNode, ptr %137, i64 0, i32 2
  store ptr %138, ptr %memberidx.i139, align 8
  %memberidx1.i140 = getelementptr inbounds %RecordTypeNode, ptr %137, i64 0, i32 3
  %144 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %144, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i141 = getelementptr inbounds %Array_TypeNode_, ptr %144, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i141, align 4
  %145 = tail call ptr @malloc(i32 64)
  store ptr %145, ptr %144, align 8
  store ptr %144, ptr %memberidx1.i140, align 8
  %146 = load i64, ptr %memberidx1.i.i141, align 4
  %.not.i = icmp sgt i64 %146, 0
  br i1 %.not.i, label %Array_TypeNode____sl__.exit, label %if.entry.i137

if.entry.i137:                                    ; preds = %if.entry32
  %147 = shl nuw i64 %146, 1
  store i64 %147, ptr %memberidx1.i.i141, align 4
  %148 = shl i64 %146, 4
  %149 = tail call ptr @realloc(ptr %145, i64 %148)
  store ptr %149, ptr %144, align 8
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %if.entry32, %if.entry.i137
  %150 = phi ptr [ %145, %if.entry32 ], [ %149, %if.entry.i137 ]
  store i64 1, ptr %memberidx.i5.i, align 4
  store ptr %type_node.1, ptr %150, align 8
  %.pre228 = load ptr, ptr %137, align 8
  %.pre229 = load ptr, ptr %memberidx, align 8
  br label %ifend34

else33:                                           ; preds = %if.entry27, %Parser_advance.exit162
  %151 = tail call ptr @malloc(i32 32)
  %152 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %153 = load ptr, ptr %memberidx, align 8
  %memberidx41 = getelementptr inbounds %Token, ptr %153, i64 0, i32 1
  %154 = load ptr, ptr %memberidx41, align 8
  store ptr %154, ptr %151, align 8
  %memberidx.i.i131 = getelementptr inbounds %TypeNode, ptr %151, i64 0, i32 1
  store i64 14, ptr %memberidx.i.i131, align 4
  %memberidx.i132 = getelementptr inbounds %ArrayTypeNode, ptr %151, i64 0, i32 2
  store ptr %type_node.1, ptr %memberidx.i132, align 8
  %memberidx1.i133 = getelementptr inbounds %ArrayTypeNode, ptr %151, i64 0, i32 3
  store ptr %152, ptr %memberidx1.i133, align 8
  br label %ifend34

ifend34:                                          ; preds = %else33, %Array_TypeNode____sl__.exit
  %155 = phi ptr [ %.pre229, %Array_TypeNode____sl__.exit ], [ %153, %else33 ]
  %156 = phi ptr [ %.pre228, %Array_TypeNode____sl__.exit ], [ %154, %else33 ]
  %type_node.4 = phi ptr [ %137, %Array_TypeNode____sl__.exit ], [ %151, %else33 ]
  %memberidx45 = getelementptr inbounds %Token, ptr %155, i64 0, i32 1
  %157 = load ptr, ptr %memberidx45, align 8
  %158 = tail call ptr @malloc(i32 32)
  %159 = load i64, ptr %156, align 4
  %memberidx1.i125 = getelementptr inbounds %FloRange, ptr %157, i64 0, i32 1
  %160 = load i64, ptr %memberidx1.i125, align 4
  %memberidx2.i126 = getelementptr inbounds %FloRange, ptr %156, i64 0, i32 2
  %161 = load i64, ptr %memberidx2.i126, align 4
  %memberidx3.i127 = getelementptr inbounds %FloRange, ptr %157, i64 0, i32 3
  %162 = load i64, ptr %memberidx3.i127, align 4
  store i64 %159, ptr %158, align 4
  %memberidx1.i.i128 = getelementptr inbounds %FloRange, ptr %158, i64 0, i32 1
  store i64 %160, ptr %memberidx1.i.i128, align 4
  %memberidx2.i.i129 = getelementptr inbounds %FloRange, ptr %158, i64 0, i32 2
  store i64 %161, ptr %memberidx2.i.i129, align 4
  %memberidx3.i.i130 = getelementptr inbounds %FloRange, ptr %158, i64 0, i32 3
  store i64 %162, ptr %memberidx3.i.i130, align 4
  store ptr %158, ptr %type_node.4, align 8
  %163 = load ptr, ptr %memberidx, align 8
  %164 = load i64, ptr %163, align 4
  %165 = icmp eq i64 %164, 30
  br i1 %165, label %if.entry.i117, label %else.i121

if.entry.i117:                                    ; preds = %ifend34
  %166 = load i64, ptr %memberidx.i, align 4
  %167 = load ptr, ptr %0, align 8
  %memberidx2.i.i116 = getelementptr inbounds %Array_Token_, ptr %167, i64 0, i32 1
  %168 = load i64, ptr %memberidx2.i.i116, align 4
  %169 = icmp slt i64 %166, %168
  br i1 %169, label %if.entry.i.i119, label %ifend29

if.entry.i.i119:                                  ; preds = %if.entry.i117
  %170 = add nsw i64 %166, 1
  store i64 %170, ptr %memberidx.i, align 4
  %171 = load ptr, ptr %167, align 8
  %172 = getelementptr inbounds ptr, ptr %171, i64 %170
  %173 = load ptr, ptr %172, align 8
  store ptr %173, ptr %memberidx, align 8
  br label %ifend29

else.i121:                                        ; preds = %ifend34
  %174 = tail call ptr @malloc(i32 16)
  %memberidx35.i122 = getelementptr inbounds %Token, ptr %163, i64 0, i32 1
  %175 = load ptr, ptr %memberidx35.i122, align 8
  store i64 46, ptr %174, align 4
  %memberidx1.i76.i123 = getelementptr inbounds %Token, ptr %174, i64 0, i32 1
  store ptr %175, ptr %memberidx1.i76.i123, align 8
  br label %ifend29

if.entry51:                                       ; preds = %else28
  %176 = tail call ptr @malloc(i32 24)
  %177 = load ptr, ptr %114, align 8
  %178 = load ptr, ptr %memberidx, align 8
  %179 = load i64, ptr %178, align 4
  %180 = icmp eq i64 %179, 11
  br i1 %180, label %if.entry.i111, label %else.i

if.entry.i111:                                    ; preds = %if.entry51
  %181 = load i64, ptr %memberidx.i, align 4
  %182 = load ptr, ptr %0, align 8
  %memberidx2.i.i110 = getelementptr inbounds %Array_Token_, ptr %182, i64 0, i32 1
  %183 = load i64, ptr %memberidx2.i.i110, align 4
  %184 = icmp slt i64 %181, %183
  br i1 %184, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i111
  %185 = add nsw i64 %181, 1
  store i64 %185, ptr %memberidx.i, align 4
  %186 = load ptr, ptr %182, align 8
  %187 = getelementptr inbounds ptr, ptr %186, i64 %185
  %188 = load ptr, ptr %187, align 8
  store ptr %188, ptr %memberidx, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %if.entry51
  %189 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %178, i64 0, i32 1
  %190 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %189, align 4
  %memberidx1.i76.i = getelementptr inbounds %Token, ptr %189, i64 0, i32 1
  store ptr %190, ptr %memberidx1.i76.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i111, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %189, %else.i ], [ %178, %if.entry.i.i ], [ %178, %if.entry.i111 ]
  %memberidx55 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %191 = load ptr, ptr %memberidx55, align 8
  %192 = tail call ptr @malloc(i32 32)
  %193 = load i64, ptr %177, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %191, i64 0, i32 1
  %194 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i106 = getelementptr inbounds %FloRange, ptr %177, i64 0, i32 2
  %195 = load i64, ptr %memberidx2.i106, align 4
  %memberidx3.i107 = getelementptr inbounds %FloRange, ptr %191, i64 0, i32 3
  %196 = load i64, ptr %memberidx3.i107, align 4
  store i64 %193, ptr %192, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %192, i64 0, i32 1
  store i64 %194, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %192, i64 0, i32 2
  store i64 %195, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %192, i64 0, i32 3
  store i64 %196, ptr %memberidx3.i.i, align 4
  store ptr %192, ptr %176, align 8
  %memberidx.i.i = getelementptr inbounds %TypeNode, ptr %176, i64 0, i32 1
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx.i105 = getelementptr inbounds %PointerTypeNode, ptr %176, i64 0, i32 2
  store ptr %114, ptr %memberidx.i105, align 8
  br label %ifend29

else52:                                           ; preds = %else28
  %197 = load i64, ptr %memberidx.i, align 4
  %198 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %198, i64 0, i32 1
  %199 = load i64, ptr %memberidx2.i, align 4
  %200 = icmp slt i64 %197, %199
  br i1 %200, label %if.entry.i, label %ifend29

if.entry.i:                                       ; preds = %else52
  %201 = add nsw i64 %197, 1
  store i64 %201, ptr %memberidx.i, align 4
  %202 = load ptr, ptr %198, align 8
  %203 = getelementptr inbounds ptr, ptr %202, i64 %201
  %204 = load ptr, ptr %203, align 8
  store ptr %204, ptr %memberidx, align 8
  br label %ifend29
}

define internal fastcc void @Parser_parse_expression_list(ptr %0, ptr nocapture %1, i64 %2) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 33
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx3.i.i, align 4
  %9 = icmp eq i64 %8, 0
  %10 = and i1 %6, %9
  br i1 %10, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %3
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i11.i, align 4
  %13 = load i64, ptr %memberidx2.i12.i, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %15 = phi i64 [ %23, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %16 = phi i64 [ %26, %Parser_advance.exit.i ], [ %12, %while.entry.i.preheader ]
  %17 = load i64, ptr %memberidx2.i12.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %19 = add nsw i64 %16, 1
  store i64 %19, ptr %memberidx.i11.i, align 4
  %20 = load ptr, ptr %11, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 %19
  %22 = load ptr, ptr %21, align 8
  store ptr %22, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %22, align 4
  %.pre88 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %23 = phi i64 [ %.pre, %if.entry.i.i ], [ %15, %while.entry.i ]
  %24 = phi i64 [ %.pre88, %if.entry.i.i ], [ 0, %while.entry.i ]
  %25 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %26 = phi i64 [ %19, %if.entry.i.i ], [ %16, %while.entry.i ]
  %27 = icmp eq i64 %25, 33
  %28 = icmp eq i64 %24, 0
  %29 = and i1 %27, %28
  br i1 %29, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %3
  %30 = phi i64 [ %5, %3 ], [ %23, %Parser_advance.exit.i ]
  %31 = icmp eq i64 %30, %2
  br i1 %31, label %common.ret, label %ifend

common.ret:                                       ; preds = %Parser_advance.exit.i74, %while.end, %Parser_new_lines.exit
  ret void

ifend:                                            ; preds = %Parser_new_lines.exit
  %32 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %memberidx.i18 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i18, align 4
  %memberidx1.i = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 2
  %34 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %33, %34
  br i1 %.not.i, label %ifend.Array_ExpressionNode____sl__.exit_crit_edge, label %if.entry.i

ifend.Array_ExpressionNode____sl__.exit_crit_edge: ; preds = %ifend
  %.pre90 = load ptr, ptr %1, align 8
  br label %Array_ExpressionNode____sl__.exit

if.entry.i:                                       ; preds = %ifend
  %35 = shl nuw i64 %34, 1
  store i64 %35, ptr %memberidx1.i, align 4
  %36 = load ptr, ptr %1, align 8
  %37 = shl i64 %34, 4
  %38 = tail call ptr @realloc(ptr %36, i64 %37)
  store ptr %38, ptr %1, align 8
  %.pre89 = load i64, ptr %memberidx.i18, align 4
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %ifend.Array_ExpressionNode____sl__.exit_crit_edge, %if.entry.i
  %39 = phi ptr [ %.pre90, %ifend.Array_ExpressionNode____sl__.exit_crit_edge ], [ %38, %if.entry.i ]
  %40 = phi i64 [ %33, %ifend.Array_ExpressionNode____sl__.exit_crit_edge ], [ %.pre89, %if.entry.i ]
  %41 = add nsw i64 %40, 1
  store i64 %41, ptr %memberidx.i18, align 4
  %42 = getelementptr inbounds ptr, ptr %39, i64 %40
  store ptr %32, ptr %42, align 8
  %43 = load ptr, ptr %memberidx.i, align 8
  %44 = load i64, ptr %43, align 4
  %45 = icmp eq i64 %44, 33
  %46 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i23 = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx3.i.i23, align 4
  %48 = icmp eq i64 %47, 0
  %49 = and i1 %45, %48
  br i1 %49, label %while.entry.i26.preheader, label %Parser_new_lines.exit33

while.entry.i26.preheader:                        ; preds = %Array_ExpressionNode____sl__.exit
  %memberidx.i11.i24 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %50 = load ptr, ptr %0, align 8
  %memberidx2.i12.i25 = getelementptr inbounds %Array_Token_, ptr %50, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i11.i24, align 4
  %52 = load i64, ptr %memberidx2.i12.i25, align 4
  %53 = icmp slt i64 %51, %52
  br i1 %53, label %while.entry.i26, label %while.entry.i26.us

while.entry.i26.us:                               ; preds = %while.entry.i26.preheader, %while.entry.i26.us
  br label %while.entry.i26.us

while.entry.i26:                                  ; preds = %while.entry.i26.preheader, %Parser_advance.exit.i32
  %54 = phi i64 [ %63, %Parser_advance.exit.i32 ], [ 0, %while.entry.i26.preheader ]
  %55 = phi i64 [ %64, %Parser_advance.exit.i32 ], [ 33, %while.entry.i26.preheader ]
  %56 = phi i64 [ %67, %Parser_advance.exit.i32 ], [ %51, %while.entry.i26.preheader ]
  %57 = load i64, ptr %memberidx2.i12.i25, align 4
  %58 = icmp slt i64 %56, %57
  br i1 %58, label %if.entry.i.i28, label %Parser_advance.exit.i32

if.entry.i.i28:                                   ; preds = %while.entry.i26
  %59 = add nsw i64 %56, 1
  store i64 %59, ptr %memberidx.i11.i24, align 4
  %60 = load ptr, ptr %50, align 8
  %61 = getelementptr inbounds ptr, ptr %60, i64 %59
  %62 = load ptr, ptr %61, align 8
  store ptr %62, ptr %memberidx.i, align 8
  %.pre91 = load i64, ptr %62, align 4
  %.pre92 = load i64, ptr %memberidx3.i.i23, align 4
  br label %Parser_advance.exit.i32

Parser_advance.exit.i32:                          ; preds = %if.entry.i.i28, %while.entry.i26
  %63 = phi i64 [ %.pre92, %if.entry.i.i28 ], [ %54, %while.entry.i26 ]
  %64 = phi i64 [ %.pre91, %if.entry.i.i28 ], [ %55, %while.entry.i26 ]
  %65 = phi i64 [ %.pre92, %if.entry.i.i28 ], [ 0, %while.entry.i26 ]
  %66 = phi i64 [ %.pre91, %if.entry.i.i28 ], [ 33, %while.entry.i26 ]
  %67 = phi i64 [ %59, %if.entry.i.i28 ], [ %56, %while.entry.i26 ]
  %68 = icmp eq i64 %66, 33
  %69 = icmp eq i64 %65, 0
  %70 = and i1 %68, %69
  br i1 %70, label %while.entry.i26, label %Parser_new_lines.exit33

Parser_new_lines.exit33:                          ; preds = %Parser_advance.exit.i32, %Array_ExpressionNode____sl__.exit
  %71 = phi i64 [ %47, %Array_ExpressionNode____sl__.exit ], [ %63, %Parser_advance.exit.i32 ]
  %72 = phi i64 [ %44, %Array_ExpressionNode____sl__.exit ], [ %64, %Parser_advance.exit.i32 ]
  %73 = icmp eq i64 %72, 3
  %74 = icmp eq i64 %71, 0
  %75 = and i1 %73, %74
  br i1 %75, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_new_lines.exit33
  %memberidx.i35 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_ExpressionNode____sl__.exit58
  %76 = phi ptr [ %46, %while.entry.preheader ], [ %117, %Array_ExpressionNode____sl__.exit58 ]
  %77 = load i64, ptr %memberidx.i35, align 4
  %78 = load ptr, ptr %0, align 8
  %memberidx2.i36 = getelementptr inbounds %Array_Token_, ptr %78, i64 0, i32 1
  %79 = load i64, ptr %memberidx2.i36, align 4
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %Parser_advance.exit, label %Parser_new_lines.exit52

Parser_advance.exit:                              ; preds = %while.entry
  %81 = add nsw i64 %77, 1
  store i64 %81, ptr %memberidx.i35, align 4
  %82 = load ptr, ptr %78, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  store ptr %84, ptr %memberidx.i, align 8
  %.pre93 = load i64, ptr %84, align 4
  %memberidx3.i.i42.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %.pre94 = load i64, ptr %memberidx3.i.i42.phi.trans.insert, align 4
  %85 = icmp eq i64 %.pre93, 33
  %memberidx3.i.i42 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %86 = icmp eq i64 %.pre94, 0
  %87 = and i1 %85, %86
  br i1 %87, label %while.entry.i45.preheader, label %Parser_new_lines.exit52

while.entry.i45.preheader:                        ; preds = %Parser_advance.exit
  %88 = load i64, ptr %memberidx2.i36, align 4
  %89 = icmp slt i64 %81, %88
  br i1 %89, label %while.entry.i45, label %while.entry.i45.us

while.entry.i45.us:                               ; preds = %while.entry.i45.preheader, %while.entry.i45.us
  br label %while.entry.i45.us

while.entry.i45:                                  ; preds = %while.entry.i45.preheader, %Parser_advance.exit.i51
  %90 = phi i64 [ %99, %Parser_advance.exit.i51 ], [ %81, %while.entry.i45.preheader ]
  %91 = load i64, ptr %memberidx2.i36, align 4
  %92 = icmp slt i64 %90, %91
  br i1 %92, label %if.entry.i.i47, label %Parser_advance.exit.i51

if.entry.i.i47:                                   ; preds = %while.entry.i45
  %93 = add nsw i64 %90, 1
  store i64 %93, ptr %memberidx.i35, align 4
  %94 = load ptr, ptr %78, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  store ptr %96, ptr %memberidx.i, align 8
  %.pre96 = load i64, ptr %96, align 4
  %.pre97 = load i64, ptr %memberidx3.i.i42, align 4
  br label %Parser_advance.exit.i51

Parser_advance.exit.i51:                          ; preds = %if.entry.i.i47, %while.entry.i45
  %97 = phi i64 [ %.pre97, %if.entry.i.i47 ], [ 0, %while.entry.i45 ]
  %98 = phi i64 [ %.pre96, %if.entry.i.i47 ], [ 33, %while.entry.i45 ]
  %99 = phi i64 [ %93, %if.entry.i.i47 ], [ %90, %while.entry.i45 ]
  %100 = icmp eq i64 %98, 33
  %101 = icmp eq i64 %97, 0
  %102 = and i1 %100, %101
  br i1 %102, label %while.entry.i45, label %Parser_new_lines.exit52

Parser_new_lines.exit52:                          ; preds = %Parser_advance.exit.i51, %while.entry, %Parser_advance.exit
  %103 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %104 = load i64, ptr %memberidx.i18, align 4
  %105 = load i64, ptr %memberidx1.i, align 4
  %.not.i55 = icmp slt i64 %104, %105
  br i1 %.not.i55, label %Parser_new_lines.exit52.Array_ExpressionNode____sl__.exit58_crit_edge, label %if.entry.i57

Parser_new_lines.exit52.Array_ExpressionNode____sl__.exit58_crit_edge: ; preds = %Parser_new_lines.exit52
  %.pre99 = load ptr, ptr %1, align 8
  br label %Array_ExpressionNode____sl__.exit58

if.entry.i57:                                     ; preds = %Parser_new_lines.exit52
  %106 = shl nuw i64 %105, 1
  store i64 %106, ptr %memberidx1.i, align 4
  %107 = load ptr, ptr %1, align 8
  %108 = shl i64 %105, 4
  %109 = tail call ptr @realloc(ptr %107, i64 %108)
  store ptr %109, ptr %1, align 8
  %.pre98 = load i64, ptr %memberidx.i18, align 4
  br label %Array_ExpressionNode____sl__.exit58

Array_ExpressionNode____sl__.exit58:              ; preds = %Parser_new_lines.exit52.Array_ExpressionNode____sl__.exit58_crit_edge, %if.entry.i57
  %110 = phi ptr [ %.pre99, %Parser_new_lines.exit52.Array_ExpressionNode____sl__.exit58_crit_edge ], [ %109, %if.entry.i57 ]
  %111 = phi i64 [ %104, %Parser_new_lines.exit52.Array_ExpressionNode____sl__.exit58_crit_edge ], [ %.pre98, %if.entry.i57 ]
  %112 = add nsw i64 %111, 1
  store i64 %112, ptr %memberidx.i18, align 4
  %113 = getelementptr inbounds ptr, ptr %110, i64 %111
  store ptr %103, ptr %113, align 8
  %114 = load ptr, ptr %memberidx.i, align 8
  %115 = load i64, ptr %114, align 4
  %116 = icmp eq i64 %115, 3
  %117 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i61 = getelementptr inbounds %Array_FloError_, ptr %117, i64 0, i32 1
  %118 = load i64, ptr %memberidx3.i61, align 4
  %119 = icmp eq i64 %118, 0
  %120 = and i1 %116, %119
  br i1 %120, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_ExpressionNode____sl__.exit58, %Parser_new_lines.exit33
  %121 = phi i64 [ %71, %Parser_new_lines.exit33 ], [ %118, %Array_ExpressionNode____sl__.exit58 ]
  %122 = phi ptr [ %46, %Parser_new_lines.exit33 ], [ %117, %Array_ExpressionNode____sl__.exit58 ]
  %123 = phi i64 [ %72, %Parser_new_lines.exit33 ], [ %115, %Array_ExpressionNode____sl__.exit58 ]
  %124 = icmp eq i64 %123, 33
  %memberidx3.i.i65 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 1
  %125 = icmp eq i64 %121, 0
  %126 = and i1 %124, %125
  br i1 %126, label %while.entry.i68.preheader, label %common.ret

while.entry.i68.preheader:                        ; preds = %while.end
  %memberidx.i11.i66 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %127 = load ptr, ptr %0, align 8
  %memberidx2.i12.i67 = getelementptr inbounds %Array_Token_, ptr %127, i64 0, i32 1
  %128 = load i64, ptr %memberidx.i11.i66, align 4
  %129 = load i64, ptr %memberidx2.i12.i67, align 4
  %130 = icmp slt i64 %128, %129
  br i1 %130, label %while.entry.i68, label %while.entry.i68.us

while.entry.i68.us:                               ; preds = %while.entry.i68.preheader, %while.entry.i68.us
  br label %while.entry.i68.us

while.entry.i68:                                  ; preds = %while.entry.i68.preheader, %Parser_advance.exit.i74
  %131 = phi i64 [ %140, %Parser_advance.exit.i74 ], [ %128, %while.entry.i68.preheader ]
  %132 = load i64, ptr %memberidx2.i12.i67, align 4
  %133 = icmp slt i64 %131, %132
  br i1 %133, label %if.entry.i.i70, label %Parser_advance.exit.i74

if.entry.i.i70:                                   ; preds = %while.entry.i68
  %134 = add nsw i64 %131, 1
  store i64 %134, ptr %memberidx.i11.i66, align 4
  %135 = load ptr, ptr %127, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %134
  %137 = load ptr, ptr %136, align 8
  store ptr %137, ptr %memberidx.i, align 8
  %.pre100 = load i64, ptr %137, align 4
  %.pre101 = load i64, ptr %memberidx3.i.i65, align 4
  br label %Parser_advance.exit.i74

Parser_advance.exit.i74:                          ; preds = %if.entry.i.i70, %while.entry.i68
  %138 = phi i64 [ %.pre101, %if.entry.i.i70 ], [ 0, %while.entry.i68 ]
  %139 = phi i64 [ %.pre100, %if.entry.i.i70 ], [ 33, %while.entry.i68 ]
  %140 = phi i64 [ %134, %if.entry.i.i70 ], [ %131, %while.entry.i68 ]
  %141 = icmp eq i64 %139, 33
  %142 = icmp eq i64 %138, 0
  %143 = and i1 %141, %142
  br i1 %143, label %while.entry.i68, label %common.ret
}

define internal fastcc ptr @Parser_parse_string(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %1 = load ptr, ptr %memberidx.i, align 8
  %2 = load i64, ptr %1, align 4
  %3 = icmp eq i64 %2, 34
  br i1 %3, label %if.entry.i, label %else.i

if.entry.i:                                       ; preds = %for.entry
  %memberidx.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i.i, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx.i, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %for.entry
  %12 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %1, i64 0, i32 1
  %13 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %12, align 4
  %memberidx1.i76.i = getelementptr inbounds %Token, ptr %12, i64 0, i32 1
  store ptr %13, ptr %memberidx1.i76.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %12, %else.i ], [ %1, %if.entry.i.i ], [ %1, %if.entry.i ]
  %14 = alloca %Parser, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %memberidx, align 8
  store ptr null, ptr %14, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %14, i64 0, i32 1
  store ptr %15, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %14, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %16 = tail call ptr @malloc(i32 24)
  %memberidx.i18 = getelementptr inbounds %Array_ExpressionNode_, ptr %16, i64 0, i32 1
  store i64 0, ptr %memberidx.i18, align 4
  %memberidx1.i19 = getelementptr inbounds %Array_ExpressionNode_, ptr %16, i64 0, i32 2
  store i64 8, ptr %memberidx1.i19, align 4
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %16, align 8
  store i64 0, ptr %memberidx.i18, align 4
  %memberidx3 = getelementptr inbounds %StrToken, ptr %common.ret.op.i, i64 0, i32 4
  %18 = load ptr, ptr %memberidx3, align 8
  %memberidx435 = getelementptr inbounds %Array_Array_Token__, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx435, align 4
  %20 = icmp sgt i64 %19, 0
  %21 = load ptr, ptr %memberidx.i, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp ne i64 %22, 46
  %24 = load ptr, ptr %memberidx, align 8
  %memberidx3.i36 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx3.i36, align 4
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  %28 = and i1 %20, %27
  br i1 %28, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %Parser_eat.exit
  %memberidx3.i24 = getelementptr inbounds %Parser, ptr %14, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ExpressionNode____sl__.exit
  %29 = phi ptr [ %18, %for.body.lr.ph ], [ %49, %Array_ExpressionNode____sl__.exit ]
  %i.037 = phi i64 [ 0, %for.body.lr.ph ], [ %48, %Array_ExpressionNode____sl__.exit ]
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %i.037
  %32 = load ptr, ptr %31, align 8
  store ptr %32, ptr %14, align 8
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i23 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i23, align 4
  %34 = icmp sgt i64 %33, -1
  br i1 %34, label %if.entry.i25, label %Parser_advance.exit

if.entry.i25:                                     ; preds = %for.body
  store i64 0, ptr %memberidx2.i, align 8
  %35 = load ptr, ptr %32, align 8
  %36 = load ptr, ptr %35, align 8
  store ptr %36, ptr %memberidx3.i24, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %for.body, %if.entry.i25
  %37 = call fastcc ptr @Parser_parse_expression(ptr nonnull %14)
  %38 = load i64, ptr %memberidx.i18, align 4
  %39 = load i64, ptr %memberidx1.i19, align 4
  %.not.i = icmp slt i64 %38, %39
  br i1 %.not.i, label %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge, label %if.entry.i29

Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge: ; preds = %Parser_advance.exit
  %.pre38 = load ptr, ptr %16, align 8
  br label %Array_ExpressionNode____sl__.exit

if.entry.i29:                                     ; preds = %Parser_advance.exit
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx1.i19, align 4
  %41 = load ptr, ptr %16, align 8
  %42 = shl i64 %39, 4
  %43 = call ptr @realloc(ptr %41, i64 %42)
  store ptr %43, ptr %16, align 8
  %.pre = load i64, ptr %memberidx.i18, align 4
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge, %if.entry.i29
  %44 = phi ptr [ %.pre38, %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %43, %if.entry.i29 ]
  %45 = phi i64 [ %38, %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %.pre, %if.entry.i29 ]
  %46 = add nsw i64 %45, 1
  store i64 %46, ptr %memberidx.i18, align 4
  %47 = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %37, ptr %47, align 8
  %48 = add nuw nsw i64 %i.037, 1
  %49 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_Array_Token__, ptr %49, i64 0, i32 1
  %50 = load i64, ptr %memberidx4, align 4
  %51 = icmp slt i64 %48, %50
  %52 = load ptr, ptr %memberidx.i, align 8
  %53 = load i64, ptr %52, align 4
  %54 = icmp ne i64 %53, 46
  %55 = load ptr, ptr %memberidx, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx3.i, align 4
  %57 = icmp eq i64 %56, 0
  %58 = and i1 %54, %57
  %59 = and i1 %51, %58
  br i1 %59, label %for.body, label %for.end

for.end:                                          ; preds = %Array_ExpressionNode____sl__.exit, %Parser_eat.exit
  %60 = tail call ptr @malloc(i32 40)
  %memberidx.i30 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i30, align 8
  store ptr %61, ptr %60, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %60, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i31 = getelementptr inbounds %ExpressionNode, ptr %60, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i31, align 4
  %memberidx1.i32 = getelementptr inbounds %StringExpressionNode, ptr %60, i64 0, i32 3
  store ptr %common.ret.op.i, ptr %memberidx1.i32, align 8
  %memberidx2.i33 = getelementptr inbounds %StringExpressionNode, ptr %60, i64 0, i32 4
  store ptr %16, ptr %memberidx2.i33, align 8
  ret ptr %60
}

define internal fastcc ptr @Parser_parse_variable_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 1, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 3
  %memberidx1.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 4
  %memberidx.i60 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx.i, i8 0, i64 16, i1 false)
  %5 = load i64, ptr %memberidx.i60, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i60, align 4
  %10 = load ptr, ptr %6, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 2
  %13 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %13, ptr %memberidx2, align 8
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %17 = load i64, ptr %memberidx.i60, align 4
  %18 = load ptr, ptr %0, align 8
  %memberidx2.i62 = getelementptr inbounds %Array_Token_, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx2.i62, align 4
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %if.entry.i64, label %Parser_advance.exit65

if.entry.i64:                                     ; preds = %if.entry
  %21 = add nsw i64 %17, 1
  store i64 %21, ptr %memberidx.i60, align 4
  %22 = load ptr, ptr %18, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  store ptr %24, ptr %memberidx, align 8
  br label %Parser_advance.exit65

Parser_advance.exit65:                            ; preds = %if.entry, %if.entry.i64
  %25 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %25, ptr %memberidx.i, align 8
  %.pre = load ptr, ptr %memberidx, align 8
  %.pre94 = load i64, ptr %.pre, align 4
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit65
  %26 = phi ptr [ null, %Parser_advance.exit ], [ %25, %Parser_advance.exit65 ]
  %27 = phi i64 [ %15, %Parser_advance.exit ], [ %.pre94, %Parser_advance.exit65 ]
  %28 = phi ptr [ %14, %Parser_advance.exit ], [ %.pre, %Parser_advance.exit65 ]
  %memberidx7 = getelementptr inbounds %Token, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx7, align 8
  %30 = icmp eq i64 %27, 38
  br i1 %30, label %if.entry10, label %else11

if.entry10:                                       ; preds = %ifend
  %31 = load i64, ptr %memberidx.i60, align 4
  %32 = load ptr, ptr %0, align 8
  %memberidx2.i67 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i67, align 4
  %34 = icmp slt i64 %31, %33
  br i1 %34, label %if.entry.i69, label %Parser_advance.exit70

if.entry.i69:                                     ; preds = %if.entry10
  %35 = add nsw i64 %31, 1
  store i64 %35, ptr %memberidx.i60, align 4
  %36 = load ptr, ptr %32, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  store ptr %38, ptr %memberidx, align 8
  br label %Parser_advance.exit70

Parser_advance.exit70:                            ; preds = %if.entry10, %if.entry.i69
  %39 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %39, ptr %memberidx1.i, align 8
  %40 = load ptr, ptr %39, align 8
  br label %ifend12

else11:                                           ; preds = %ifend
  %41 = icmp ne ptr %26, null
  %42 = icmp eq i64 %27, 25
  %43 = and i1 %42, %41
  br i1 %43, label %if.entry19, label %ifend12

ifend12:                                          ; preds = %Parser_advance.exit83, %else11, %Parser_advance.exit70
  %end_range.0 = phi ptr [ %40, %Parser_advance.exit70 ], [ %29, %Parser_advance.exit83 ], [ %29, %else11 ]
  %44 = tail call ptr @malloc(i32 32)
  %45 = load i64, ptr %4, align 4
  %memberidx1.i71 = getelementptr inbounds %FloRange, ptr %end_range.0, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i71, align 4
  %memberidx2.i72 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i72, align 4
  %memberidx3.i73 = getelementptr inbounds %FloRange, ptr %end_range.0, i64 0, i32 3
  %48 = load i64, ptr %memberidx3.i73, align 4
  store i64 %45, ptr %44, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %47, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %48, ptr %memberidx3.i.i, align 4
  store ptr %44, ptr %2, align 8
  ret ptr %2

if.entry19:                                       ; preds = %else11
  %49 = tail call ptr @malloc(i32 41)
  %50 = load ptr, ptr %26, align 8
  %memberidx.i74 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 3
  store ptr %26, ptr %memberidx.i74, align 8
  %memberidx1.i75 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 4
  store i1 true, ptr %memberidx1.i75, align 1
  store ptr %50, ptr %49, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %49, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i76 = getelementptr inbounds %ExpressionNode, ptr %49, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i76, align 4
  %memberidx2.i77 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 5
  %51 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_ExpressionNode_, ptr %51, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i.i78 = getelementptr inbounds %Array_ExpressionNode_, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i78, align 4
  %52 = tail call ptr @malloc(i32 64)
  store ptr %52, ptr %51, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %51, ptr %memberidx2.i77, align 8
  store i1 false, ptr %memberidx1.i75, align 1
  %53 = load i64, ptr %memberidx.i60, align 4
  %54 = load ptr, ptr %0, align 8
  %memberidx2.i80 = getelementptr inbounds %Array_Token_, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx2.i80, align 4
  %56 = icmp slt i64 %53, %55
  br i1 %56, label %if.entry.i82, label %Parser_advance.exit83

if.entry.i82:                                     ; preds = %if.entry19
  %57 = add nsw i64 %53, 1
  store i64 %57, ptr %memberidx.i60, align 4
  %58 = load ptr, ptr %54, align 8
  %59 = getelementptr inbounds ptr, ptr %58, i64 %57
  %60 = load ptr, ptr %59, align 8
  store ptr %60, ptr %memberidx, align 8
  br label %Parser_advance.exit83

Parser_advance.exit83:                            ; preds = %if.entry19, %if.entry.i82
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %51, i64 26)
  %61 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx29 = getelementptr inbounds %Token, ptr %61, i64 0, i32 1
  %62 = load ptr, ptr %memberidx29, align 8
  %63 = tail call ptr @malloc(i32 32)
  %64 = load i64, ptr %50, align 4
  %memberidx1.i84 = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 1
  %65 = load i64, ptr %memberidx1.i84, align 4
  %memberidx2.i85 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  %66 = load i64, ptr %memberidx2.i85, align 4
  %memberidx3.i86 = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 3
  %67 = load i64, ptr %memberidx3.i86, align 4
  store i64 %64, ptr %63, align 4
  %memberidx1.i.i87 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 1
  store i64 %65, ptr %memberidx1.i.i87, align 4
  %memberidx2.i.i88 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 2
  store i64 %66, ptr %memberidx2.i.i88, align 4
  %memberidx3.i.i89 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 3
  store i64 %67, ptr %memberidx3.i.i89, align 4
  store ptr %63, ptr %49, align 8
  store ptr %49, ptr %memberidx1.i, align 8
  br label %ifend12
}

define internal fastcc ptr @Parser_parse_statement(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %ifend38 [
    i64 56, label %if.entry
    i64 60, label %if.entry6
    i64 59, label %if.entry11
    i64 64, label %if.entry16
    i64 55, label %if.entry21
    i64 54, label %if.entry26
    i64 63, label %if.entry31
    i64 62, label %if.entry36
  ]

common.ret:                                       ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %Parser_advance.exit.i, %if.entry.i65, %if.entry28.i, %ifend.i, %Parser_advance.exit35.i, %Parser_new_lines.exit.i, %Parser_advance.exit62, %Parser_advance.exit, %if.entry26, %if.entry21, %Parser_parse_while_statement.exit, %ifend38
  %common.ret.op = phi ptr [ %203, %ifend38 ], [ %61, %Parser_parse_while_statement.exit ], [ %183, %if.entry21 ], [ %184, %if.entry26 ], [ %193, %Parser_advance.exit ], [ %202, %Parser_advance.exit62 ], [ %5, %Parser_new_lines.exit.i ], [ %5, %Parser_advance.exit35.i ], [ %80, %ifend.i ], [ %80, %if.entry28.i ], [ %160, %switch.early.test ], [ %160, %if.entry.i65 ], [ %160, %Parser_advance.exit.i ], [ %160, %switch.early.test ], [ %160, %switch.early.test ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %5 = tail call ptr @malloc(i32 40)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1.i93 = getelementptr inbounds %Token, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1.i93, align 8
  store ptr %7, ptr %5, align 8
  %memberidx.i.i.i94 = getelementptr inbounds %StatementNode, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i94, align 4
  %memberidx.i.i95 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 4
  store ptr null, ptr %memberidx.i.i95, align 8
  %memberidx.i24.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %8 = load i64, ptr %memberidx.i24.i, align 4
  %9 = load ptr, ptr %0, align 8
  %memberidx2.i.i96 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx2.i.i96, align 4
  %11 = icmp slt i64 %8, %10
  br i1 %11, label %if.entry.i.i98, label %Parser_advance.exit.i105

if.entry.i.i98:                                   ; preds = %if.entry
  %12 = add nsw i64 %8, 1
  store i64 %12, ptr %memberidx.i24.i, align 4
  %13 = load ptr, ptr %9, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  store ptr %15, ptr %memberidx, align 8
  br label %Parser_advance.exit.i105

Parser_advance.exit.i105:                         ; preds = %if.entry.i.i98, %if.entry
  %memberidx2.i99 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 2
  %16 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %16, ptr %memberidx2.i99, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 32)
  %19 = load i64, ptr %7, align 4
  %memberidx1.i.i100 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 1
  %20 = load i64, ptr %memberidx1.i.i100, align 4
  %memberidx2.i25.i = getelementptr inbounds %FloRange, ptr %7, i64 0, i32 2
  %21 = load i64, ptr %memberidx2.i25.i, align 4
  %memberidx3.i26.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  %22 = load i64, ptr %memberidx3.i26.i, align 4
  store i64 %19, ptr %18, align 4
  %memberidx1.i.i.i101 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i.i.i101, align 4
  %memberidx2.i.i.i102 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 2
  store i64 %21, ptr %memberidx2.i.i.i102, align 4
  %memberidx3.i.i.i103 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 3
  store i64 %22, ptr %memberidx3.i.i.i103, align 4
  store ptr %18, ptr %5, align 8
  %memberidx7.i104 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 3
  %23 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %23, ptr %memberidx7.i104, align 8
  %24 = load ptr, ptr %memberidx, align 8
  %25 = load i64, ptr %24, align 4
  %26 = icmp eq i64 %25, 33
  %memberidx2.i.i29.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i.i29.i, align 8
  %memberidx3.i.i30.i = getelementptr inbounds %Array_FloError_, ptr %27, i64 0, i32 1
  %28 = load i64, ptr %memberidx3.i.i30.i, align 4
  %29 = icmp eq i64 %28, 0
  %30 = and i1 %26, %29
  br i1 %30, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %Parser_advance.exit.i105
  %31 = load ptr, ptr %0, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %31, i64 0, i32 1
  %32 = load i64, ptr %memberidx.i24.i, align 4
  %33 = load i64, ptr %memberidx2.i12.i.i, align 4
  %34 = icmp slt i64 %32, %33
  br i1 %34, label %while.entry.i.i, label %while.entry.i.i.us

while.entry.i.i.us:                               ; preds = %while.entry.i.i.preheader, %while.entry.i.i.us
  br label %while.entry.i.i.us

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i107
  %35 = phi i64 [ %43, %Parser_advance.exit.i.i107 ], [ 33, %while.entry.i.i.preheader ]
  %36 = phi i64 [ %46, %Parser_advance.exit.i.i107 ], [ %32, %while.entry.i.i.preheader ]
  %37 = load i64, ptr %memberidx2.i12.i.i, align 4
  %38 = icmp slt i64 %36, %37
  br i1 %38, label %if.entry.i.i.i106, label %Parser_advance.exit.i.i107

if.entry.i.i.i106:                                ; preds = %while.entry.i.i
  %39 = add nsw i64 %36, 1
  store i64 %39, ptr %memberidx.i24.i, align 4
  %40 = load ptr, ptr %31, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8
  store ptr %42, ptr %memberidx, align 8
  %.pre131 = load i64, ptr %42, align 4
  %.pre132 = load i64, ptr %memberidx3.i.i30.i, align 4
  br label %Parser_advance.exit.i.i107

Parser_advance.exit.i.i107:                       ; preds = %if.entry.i.i.i106, %while.entry.i.i
  %43 = phi i64 [ %.pre131, %if.entry.i.i.i106 ], [ %35, %while.entry.i.i ]
  %44 = phi i64 [ %.pre132, %if.entry.i.i.i106 ], [ 0, %while.entry.i.i ]
  %45 = phi i64 [ %.pre131, %if.entry.i.i.i106 ], [ 33, %while.entry.i.i ]
  %46 = phi i64 [ %39, %if.entry.i.i.i106 ], [ %36, %while.entry.i.i ]
  %47 = icmp eq i64 %45, 33
  %48 = icmp eq i64 %44, 0
  %49 = and i1 %47, %48
  br i1 %49, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i107, %Parser_advance.exit.i105
  %50 = phi i64 [ %25, %Parser_advance.exit.i105 ], [ %43, %Parser_advance.exit.i.i107 ]
  %51 = icmp eq i64 %50, 58
  br i1 %51, label %if.entry.i108, label %common.ret

if.entry.i108:                                    ; preds = %Parser_new_lines.exit.i
  %52 = load i64, ptr %memberidx.i24.i, align 4
  %53 = load ptr, ptr %0, align 8
  %memberidx2.i32.i = getelementptr inbounds %Array_Token_, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx2.i32.i, align 4
  %55 = icmp slt i64 %52, %54
  br i1 %55, label %if.entry.i34.i, label %Parser_advance.exit35.i

if.entry.i34.i:                                   ; preds = %if.entry.i108
  %56 = add nsw i64 %52, 1
  store i64 %56, ptr %memberidx.i24.i, align 4
  %57 = load ptr, ptr %53, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  store ptr %59, ptr %memberidx, align 8
  br label %Parser_advance.exit35.i

Parser_advance.exit35.i:                          ; preds = %if.entry.i34.i, %if.entry.i108
  %60 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %60, ptr %memberidx.i.i95, align 8
  br label %common.ret

if.entry6:                                        ; preds = %1
  %61 = tail call ptr @malloc(i32 32)
  %62 = load ptr, ptr %memberidx, align 8
  %memberidx1.i80 = getelementptr inbounds %Token, ptr %62, i64 0, i32 1
  %63 = load ptr, ptr %memberidx1.i80, align 8
  store ptr %63, ptr %61, align 8
  %memberidx.i.i.i81 = getelementptr inbounds %StatementNode, ptr %61, i64 0, i32 1
  store i64 4, ptr %memberidx.i.i.i81, align 4
  %memberidx.i.i82 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %64 = load i64, ptr %memberidx.i.i82, align 4
  %65 = load ptr, ptr %0, align 8
  %memberidx2.i.i83 = getelementptr inbounds %Array_Token_, ptr %65, i64 0, i32 1
  %66 = load i64, ptr %memberidx2.i.i83, align 4
  %67 = icmp slt i64 %64, %66
  br i1 %67, label %if.entry.i.i85, label %Parser_parse_while_statement.exit

if.entry.i.i85:                                   ; preds = %if.entry6
  %68 = add nsw i64 %64, 1
  store i64 %68, ptr %memberidx.i.i82, align 4
  %69 = load ptr, ptr %65, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  store ptr %71, ptr %memberidx, align 8
  br label %Parser_parse_while_statement.exit

Parser_parse_while_statement.exit:                ; preds = %if.entry6, %if.entry.i.i85
  %memberidx2.i86 = getelementptr inbounds %WhileStatementNode, ptr %61, i64 0, i32 2
  %72 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %72, ptr %memberidx2.i86, align 8
  %73 = load ptr, ptr %72, align 8
  %74 = tail call ptr @malloc(i32 32)
  %75 = load i64, ptr %63, align 4
  %memberidx1.i.i87 = getelementptr inbounds %FloRange, ptr %73, i64 0, i32 1
  %76 = load i64, ptr %memberidx1.i.i87, align 4
  %memberidx2.i16.i = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 2
  %77 = load i64, ptr %memberidx2.i16.i, align 4
  %memberidx3.i17.i = getelementptr inbounds %FloRange, ptr %73, i64 0, i32 3
  %78 = load i64, ptr %memberidx3.i17.i, align 4
  store i64 %75, ptr %74, align 4
  %memberidx1.i.i.i88 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 1
  store i64 %76, ptr %memberidx1.i.i.i88, align 4
  %memberidx2.i.i.i89 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 2
  store i64 %77, ptr %memberidx2.i.i.i89, align 4
  %memberidx3.i.i.i90 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 3
  store i64 %78, ptr %memberidx3.i.i.i90, align 4
  store ptr %74, ptr %61, align 8
  %memberidx7.i = getelementptr inbounds %WhileStatementNode, ptr %61, i64 0, i32 3
  %79 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %79, ptr %memberidx7.i, align 8
  br label %common.ret

if.entry11:                                       ; preds = %1
  %80 = tail call ptr @malloc(i32 72)
  %81 = load ptr, ptr %memberidx, align 8
  %memberidx1.i67 = getelementptr inbounds %Token, ptr %81, i64 0, i32 1
  %82 = load ptr, ptr %memberidx1.i67, align 8
  %memberidx.i.i68 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 2
  %memberidx1.i.i69 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 3
  %memberidx2.i.i70 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 4
  %memberidx3.i.i71 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 6
  store i64 0, ptr %memberidx3.i.i71, align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx.i.i68, i8 0, i64 24, i1 false)
  store ptr %82, ptr %80, align 8
  %memberidx.i.i.i72 = getelementptr inbounds %StatementNode, ptr %80, i64 0, i32 1
  store i64 3, ptr %memberidx.i.i.i72, align 4
  %memberidx.i60.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %83 = load i64, ptr %memberidx.i60.i, align 4
  %84 = load ptr, ptr %0, align 8
  %memberidx2.i61.i = getelementptr inbounds %Array_Token_, ptr %84, i64 0, i32 1
  %85 = load i64, ptr %memberidx2.i61.i, align 4
  %86 = icmp slt i64 %83, %85
  br i1 %86, label %if.entry.i.i73, label %Parser_advance.exit.i74

if.entry.i.i73:                                   ; preds = %if.entry11
  %87 = add nsw i64 %83, 1
  store i64 %87, ptr %memberidx.i60.i, align 4
  %88 = load ptr, ptr %84, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  store ptr %90, ptr %memberidx, align 8
  %.pre = load i64, ptr %memberidx2.i61.i, align 4
  br label %Parser_advance.exit.i74

Parser_advance.exit.i74:                          ; preds = %if.entry.i.i73, %if.entry11
  %91 = phi ptr [ %90, %if.entry.i.i73 ], [ %81, %if.entry11 ]
  %92 = phi i64 [ %.pre, %if.entry.i.i73 ], [ %85, %if.entry11 ]
  %93 = phi i64 [ %87, %if.entry.i.i73 ], [ %83, %if.entry11 ]
  %94 = add nsw i64 %93, 1
  %95 = icmp slt i64 %94, %92
  %96 = add i64 %92, -1
  %.sink134 = select i1 %95, i64 %94, i64 %96
  %97 = load ptr, ptr %84, align 8
  %98 = getelementptr inbounds ptr, ptr %97, i64 %.sink134
  %common.ret.op.i.i = load ptr, ptr %98, align 8
  %99 = load i64, ptr %common.ret.op.i.i, align 4
  %.not.i = icmp eq i64 %99, 69
  br i1 %.not.i, label %else.i, label %if.entry.i75

if.entry.i75:                                     ; preds = %Parser_advance.exit.i74
  %100 = load i64, ptr %91, align 4
  %.not57.i = icmp eq i64 %100, 2
  br i1 %.not57.i, label %if.entry.i82.i, label %ifend7.i

else.i:                                           ; preds = %Parser_advance.exit.i74
  store i64 1, ptr %memberidx3.i.i71, align 4
  %memberidx22.i = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 7
  %101 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %101, ptr %memberidx22.i, align 8
  %102 = load ptr, ptr %memberidx, align 8
  %103 = load i64, ptr %102, align 4
  %104 = icmp eq i64 %103, 69
  br i1 %104, label %if.entry.i69.i, label %else.i.i

if.entry.i69.i:                                   ; preds = %else.i
  %105 = load i64, ptr %memberidx.i60.i, align 4
  %106 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i76 = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 1
  %107 = load i64, ptr %memberidx2.i.i.i76, align 4
  %108 = icmp slt i64 %105, %107
  br i1 %108, label %if.entry.i.i.i, label %Parser_eat.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry.i69.i
  %109 = add nsw i64 %105, 1
  store i64 %109, ptr %memberidx.i60.i, align 4
  %110 = load ptr, ptr %106, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %109
  %112 = load ptr, ptr %111, align 8
  store ptr %112, ptr %memberidx, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %else.i
  %113 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %102, i64 0, i32 1
  %114 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %113, align 4
  %memberidx1.i76.i.i = getelementptr inbounds %Token, ptr %113, i64 0, i32 1
  store ptr %114, ptr %memberidx1.i76.i.i, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i69.i, %if.entry.i.i.i, %else.i.i
  %memberidx23.i = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 5
  %115 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %115, ptr %memberidx23.i, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry17.i, %Parser_eat.exit101.i, %Parser_eat.exit.i
  %116 = load ptr, ptr %memberidx, align 8
  %memberidx27.i = getelementptr inbounds %Token, ptr %116, i64 0, i32 1
  %117 = load ptr, ptr %memberidx27.i, align 8
  %118 = tail call ptr @malloc(i32 32)
  %119 = load i64, ptr %82, align 4
  %memberidx1.i70.i = getelementptr inbounds %FloRange, ptr %117, i64 0, i32 1
  %120 = load i64, ptr %memberidx1.i70.i, align 4
  %memberidx2.i71.i = getelementptr inbounds %FloRange, ptr %82, i64 0, i32 2
  %121 = load i64, ptr %memberidx2.i71.i, align 4
  %memberidx3.i72.i = getelementptr inbounds %FloRange, ptr %117, i64 0, i32 3
  %122 = load i64, ptr %memberidx3.i72.i, align 4
  store i64 %119, ptr %118, align 4
  %memberidx1.i.i.i78 = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 1
  store i64 %120, ptr %memberidx1.i.i.i78, align 4
  %memberidx2.i.i73.i = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 2
  store i64 %121, ptr %memberidx2.i.i73.i, align 4
  %memberidx3.i.i74.i = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 3
  store i64 %122, ptr %memberidx3.i.i74.i, align 4
  store ptr %118, ptr %80, align 8
  %123 = load ptr, ptr %memberidx, align 8
  %124 = load i64, ptr %123, align 4
  %125 = icmp ne i64 %124, 46
  %memberidx2.i76.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %126 = load ptr, ptr %memberidx2.i76.i, align 8
  %memberidx3.i77.i = getelementptr inbounds %Array_FloError_, ptr %126, i64 0, i32 1
  %127 = load i64, ptr %memberidx3.i77.i, align 4
  %128 = icmp eq i64 %127, 0
  %129 = and i1 %125, %128
  br i1 %129, label %if.entry28.i, label %common.ret

ifend7.i:                                         ; preds = %if.entry.i75
  %130 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  store ptr %130, ptr %memberidx.i.i68, align 8
  %.pre125 = load ptr, ptr %memberidx, align 8
  %.pre126 = load i64, ptr %.pre125, align 4
  %phi.cmp = icmp eq i64 %.pre126, 2
  br i1 %phi.cmp, label %if.entry.i82.i, label %else.i86.i

if.entry.i82.i:                                   ; preds = %if.entry.i75, %ifend7.i
  %131 = phi ptr [ %.pre125, %ifend7.i ], [ %91, %if.entry.i75 ]
  %132 = load i64, ptr %memberidx.i60.i, align 4
  %133 = load ptr, ptr %0, align 8
  %memberidx2.i.i81.i = getelementptr inbounds %Array_Token_, ptr %133, i64 0, i32 1
  %134 = load i64, ptr %memberidx2.i.i81.i, align 4
  %135 = icmp slt i64 %132, %134
  br i1 %135, label %if.entry.i.i84.i, label %Parser_eat.exit89.i

if.entry.i.i84.i:                                 ; preds = %if.entry.i82.i
  %136 = add nsw i64 %132, 1
  store i64 %136, ptr %memberidx.i60.i, align 4
  %137 = load ptr, ptr %133, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %136
  %139 = load ptr, ptr %138, align 8
  store ptr %139, ptr %memberidx, align 8
  br label %Parser_eat.exit89.i

else.i86.i:                                       ; preds = %ifend7.i
  %140 = tail call ptr @malloc(i32 16)
  %memberidx35.i87.i = getelementptr inbounds %Token, ptr %.pre125, i64 0, i32 1
  %141 = load ptr, ptr %memberidx35.i87.i, align 8
  store i64 46, ptr %140, align 4
  %memberidx1.i76.i88.i = getelementptr inbounds %Token, ptr %140, i64 0, i32 1
  store ptr %141, ptr %memberidx1.i76.i88.i, align 8
  %.pre127 = load ptr, ptr %memberidx, align 8
  br label %Parser_eat.exit89.i

Parser_eat.exit89.i:                              ; preds = %if.entry.i82.i, %if.entry.i.i84.i, %else.i86.i
  %142 = phi ptr [ %131, %if.entry.i82.i ], [ %139, %if.entry.i.i84.i ], [ %.pre127, %else.i86.i ]
  %143 = load i64, ptr %142, align 4
  %.not58.i = icmp eq i64 %143, 2
  br i1 %.not58.i, label %if.entry.i94.i, label %ifend13.i

ifend13.i:                                        ; preds = %Parser_eat.exit89.i
  %144 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %144, ptr %memberidx1.i.i69, align 8
  %.pre128 = load ptr, ptr %memberidx, align 8
  %.pre129 = load i64, ptr %.pre128, align 4
  %phi.cmp133 = icmp eq i64 %.pre129, 2
  br i1 %phi.cmp133, label %if.entry.i94.i, label %else.i98.i

if.entry.i94.i:                                   ; preds = %Parser_eat.exit89.i, %ifend13.i
  %145 = phi ptr [ %.pre128, %ifend13.i ], [ %142, %Parser_eat.exit89.i ]
  %146 = load i64, ptr %memberidx.i60.i, align 4
  %147 = load ptr, ptr %0, align 8
  %memberidx2.i.i93.i = getelementptr inbounds %Array_Token_, ptr %147, i64 0, i32 1
  %148 = load i64, ptr %memberidx2.i.i93.i, align 4
  %149 = icmp slt i64 %146, %148
  br i1 %149, label %if.entry.i.i96.i, label %Parser_eat.exit101.i

if.entry.i.i96.i:                                 ; preds = %if.entry.i94.i
  %150 = add nsw i64 %146, 1
  store i64 %150, ptr %memberidx.i60.i, align 4
  %151 = load ptr, ptr %147, align 8
  %152 = getelementptr inbounds ptr, ptr %151, i64 %150
  %153 = load ptr, ptr %152, align 8
  store ptr %153, ptr %memberidx, align 8
  br label %Parser_eat.exit101.i

else.i98.i:                                       ; preds = %ifend13.i
  %154 = tail call ptr @malloc(i32 16)
  %memberidx35.i99.i = getelementptr inbounds %Token, ptr %.pre128, i64 0, i32 1
  %155 = load ptr, ptr %memberidx35.i99.i, align 8
  store i64 46, ptr %154, align 4
  %memberidx1.i76.i100.i = getelementptr inbounds %Token, ptr %154, i64 0, i32 1
  store ptr %155, ptr %memberidx1.i76.i100.i, align 8
  %.pre130 = load ptr, ptr %memberidx, align 8
  br label %Parser_eat.exit101.i

Parser_eat.exit101.i:                             ; preds = %if.entry.i94.i, %if.entry.i.i96.i, %else.i98.i
  %156 = phi ptr [ %145, %if.entry.i94.i ], [ %153, %if.entry.i.i96.i ], [ %.pre130, %else.i98.i ]
  %157 = load i64, ptr %156, align 4
  %.not59.i = icmp eq i64 %157, 27
  br i1 %.not59.i, label %ifend.i, label %if.entry17.i

if.entry17.i:                                     ; preds = %Parser_eat.exit101.i
  %158 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  store ptr %158, ptr %memberidx2.i.i70, align 8
  br label %ifend.i

if.entry28.i:                                     ; preds = %ifend.i
  %memberidx31.i = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 8
  %159 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %159, ptr %memberidx31.i, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %160 = tail call ptr @malloc(i32 24)
  %161 = load ptr, ptr %memberidx, align 8
  %memberidx1.i = getelementptr inbounds %Token, ptr %161, i64 0, i32 1
  %162 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %ReturnStatementNode, ptr %160, i64 0, i32 2
  store ptr null, ptr %memberidx.i.i, align 8
  store ptr %162, ptr %160, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %160, i64 0, i32 1
  store i64 7, ptr %memberidx.i.i.i, align 4
  %memberidx.i19.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %163 = load i64, ptr %memberidx.i19.i, align 4
  %164 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %164, i64 0, i32 1
  %165 = load i64, ptr %memberidx2.i.i, align 4
  %166 = icmp slt i64 %163, %165
  br i1 %166, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %if.entry16
  %167 = add nsw i64 %163, 1
  store i64 %167, ptr %memberidx.i19.i, align 4
  %168 = load ptr, ptr %164, align 8
  %169 = getelementptr inbounds ptr, ptr %168, i64 %167
  %170 = load ptr, ptr %169, align 8
  store ptr %170, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %if.entry16
  %171 = phi ptr [ %170, %if.entry.i.i ], [ %161, %if.entry16 ]
  %memberidx2.i21.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %172 = load ptr, ptr %memberidx2.i21.i, align 8
  %memberidx3.i22.i = getelementptr inbounds %Array_FloError_, ptr %172, i64 0, i32 1
  %173 = load i64, ptr %memberidx3.i22.i, align 4
  %.fr = freeze i64 %173
  %174 = icmp eq i64 %.fr, 0
  br i1 %174, label %switch.early.test, label %common.ret

switch.early.test:                                ; preds = %Parser_advance.exit.i
  %175 = load i64, ptr %171, align 4
  switch i64 %175, label %if.entry.i65 [
    i64 46, label %common.ret
    i64 33, label %common.ret
    i64 28, label %common.ret
  ]

if.entry.i65:                                     ; preds = %switch.early.test
  %176 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %177 = load ptr, ptr %176, align 8
  %178 = tail call ptr @malloc(i32 32)
  %179 = load i64, ptr %162, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %177, i64 0, i32 1
  %180 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i23.i = getelementptr inbounds %FloRange, ptr %162, i64 0, i32 2
  %181 = load i64, ptr %memberidx2.i23.i, align 4
  %memberidx3.i24.i = getelementptr inbounds %FloRange, ptr %177, i64 0, i32 3
  %182 = load i64, ptr %memberidx3.i24.i, align 4
  store i64 %179, ptr %178, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %178, i64 0, i32 1
  store i64 %180, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %178, i64 0, i32 2
  store i64 %181, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %178, i64 0, i32 3
  store i64 %182, ptr %memberidx3.i.i.i, align 4
  store ptr %178, ptr %160, align 8
  store ptr %176, ptr %memberidx.i.i, align 8
  br label %common.ret

if.entry21:                                       ; preds = %1
  %183 = tail call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry26:                                       ; preds = %1
  %184 = tail call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry31:                                       ; preds = %1
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %185 = load i64, ptr %memberidx.i, align 4
  %186 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %186, i64 0, i32 1
  %187 = load i64, ptr %memberidx2.i, align 4
  %188 = icmp slt i64 %185, %187
  br i1 %188, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry31
  %189 = add nsw i64 %185, 1
  store i64 %189, ptr %memberidx.i, align 4
  %190 = load ptr, ptr %186, align 8
  %191 = getelementptr inbounds ptr, ptr %190, i64 %189
  %192 = load ptr, ptr %191, align 8
  store ptr %192, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry31, %if.entry.i
  %193 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %193, align 8
  %memberidx.i57 = getelementptr inbounds %StatementNode, ptr %193, i64 0, i32 1
  store i64 5, ptr %memberidx.i57, align 4
  br label %common.ret

if.entry36:                                       ; preds = %1
  %memberidx.i58 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %194 = load i64, ptr %memberidx.i58, align 4
  %195 = load ptr, ptr %0, align 8
  %memberidx2.i59 = getelementptr inbounds %Array_Token_, ptr %195, i64 0, i32 1
  %196 = load i64, ptr %memberidx2.i59, align 4
  %197 = icmp slt i64 %194, %196
  br i1 %197, label %if.entry.i61, label %Parser_advance.exit62

if.entry.i61:                                     ; preds = %if.entry36
  %198 = add nsw i64 %194, 1
  store i64 %198, ptr %memberidx.i58, align 4
  %199 = load ptr, ptr %195, align 8
  %200 = getelementptr inbounds ptr, ptr %199, i64 %198
  %201 = load ptr, ptr %200, align 8
  store ptr %201, ptr %memberidx, align 8
  br label %Parser_advance.exit62

Parser_advance.exit62:                            ; preds = %if.entry36, %if.entry.i61
  %202 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %202, align 8
  %memberidx.i63 = getelementptr inbounds %StatementNode, ptr %202, i64 0, i32 1
  store i64 6, ptr %memberidx.i63, align 4
  br label %common.ret

ifend38:                                          ; preds = %1
  %203 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  br label %common.ret
}

define internal fastcc void @Parser_parse_args(ptr %0, ptr nocapture %1) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, 33
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx3.i.i, align 4
  %8 = icmp eq i64 %7, 0
  %9 = and i1 %5, %8
  br i1 %9, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %2
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx.i11.i, align 4
  %12 = load i64, ptr %memberidx2.i12.i, align 4
  %13 = icmp slt i64 %11, %12
  br i1 %13, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %14 = phi i64 [ %23, %Parser_advance.exit.i ], [ %11, %while.entry.i.preheader ]
  %15 = load i64, ptr %memberidx2.i12.i, align 4
  %16 = icmp slt i64 %14, %15
  br i1 %16, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %17 = add nsw i64 %14, 1
  store i64 %17, ptr %memberidx.i11.i, align 4
  %18 = load ptr, ptr %10, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %20, align 4
  %.pre44 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %21 = phi i64 [ %.pre44, %if.entry.i.i ], [ 0, %while.entry.i ]
  %22 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %23 = phi i64 [ %17, %if.entry.i.i ], [ %14, %while.entry.i ]
  %24 = icmp eq i64 %22, 33
  %25 = icmp eq i64 %21, 0
  %26 = and i1 %24, %25
  br i1 %26, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %2
  %27 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %memberidx.i16 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %28 = load i64, ptr %memberidx.i16, align 4
  %memberidx1.i17 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 2
  %29 = load i64, ptr %memberidx1.i17, align 4
  %.not.i18 = icmp slt i64 %28, %29
  br i1 %.not.i18, label %Parser_new_lines.exit.Array_ArgNode____sl__.exit21_crit_edge, label %if.entry.i20

Parser_new_lines.exit.Array_ArgNode____sl__.exit21_crit_edge: ; preds = %Parser_new_lines.exit
  %.pre46 = load ptr, ptr %1, align 8
  br label %Array_ArgNode____sl__.exit21

if.entry.i20:                                     ; preds = %Parser_new_lines.exit
  %30 = shl nuw i64 %29, 1
  store i64 %30, ptr %memberidx1.i17, align 4
  %31 = load ptr, ptr %1, align 8
  %32 = shl i64 %29, 4
  %33 = tail call ptr @realloc(ptr %31, i64 %32)
  store ptr %33, ptr %1, align 8
  %.pre45 = load i64, ptr %memberidx.i16, align 4
  br label %Array_ArgNode____sl__.exit21

Array_ArgNode____sl__.exit21:                     ; preds = %Parser_new_lines.exit.Array_ArgNode____sl__.exit21_crit_edge, %if.entry.i20
  %34 = phi ptr [ %.pre46, %Parser_new_lines.exit.Array_ArgNode____sl__.exit21_crit_edge ], [ %33, %if.entry.i20 ]
  %35 = phi i64 [ %28, %Parser_new_lines.exit.Array_ArgNode____sl__.exit21_crit_edge ], [ %.pre45, %if.entry.i20 ]
  %36 = add nsw i64 %35, 1
  store i64 %36, ptr %memberidx.i16, align 4
  %37 = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %27, ptr %37, align 8
  %38 = load ptr, ptr %memberidx.i, align 8
  %39 = load i64, ptr %38, align 4
  %40 = icmp eq i64 %39, 3
  %41 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i24 = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx3.i24, align 4
  %43 = icmp eq i64 %42, 0
  %44 = and i1 %40, %43
  br i1 %44, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Array_ArgNode____sl__.exit21
  %memberidx.i11.i29 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_ArgNode____sl__.exit
  %45 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 3)
  %46 = load ptr, ptr %memberidx.i, align 8
  %47 = load i64, ptr %46, align 4
  %48 = icmp eq i64 %47, 33
  %49 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i28 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %50 = load i64, ptr %memberidx3.i.i28, align 4
  %51 = icmp eq i64 %50, 0
  %52 = and i1 %48, %51
  br i1 %52, label %while.entry.i31.preheader, label %Parser_new_lines.exit38

while.entry.i31.preheader:                        ; preds = %while.entry
  %53 = load ptr, ptr %0, align 8
  %memberidx2.i12.i30 = getelementptr inbounds %Array_Token_, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i11.i29, align 4
  %55 = load i64, ptr %memberidx2.i12.i30, align 4
  %56 = icmp slt i64 %54, %55
  br i1 %56, label %while.entry.i31, label %while.entry.i31.us

while.entry.i31.us:                               ; preds = %while.entry.i31.preheader, %while.entry.i31.us
  br label %while.entry.i31.us

while.entry.i31:                                  ; preds = %while.entry.i31.preheader, %Parser_advance.exit.i37
  %57 = phi i64 [ %66, %Parser_advance.exit.i37 ], [ %54, %while.entry.i31.preheader ]
  %58 = load i64, ptr %memberidx2.i12.i30, align 4
  %59 = icmp slt i64 %57, %58
  br i1 %59, label %if.entry.i.i33, label %Parser_advance.exit.i37

if.entry.i.i33:                                   ; preds = %while.entry.i31
  %60 = add nsw i64 %57, 1
  store i64 %60, ptr %memberidx.i11.i29, align 4
  %61 = load ptr, ptr %53, align 8
  %62 = getelementptr inbounds ptr, ptr %61, i64 %60
  %63 = load ptr, ptr %62, align 8
  store ptr %63, ptr %memberidx.i, align 8
  %.pre47 = load i64, ptr %63, align 4
  %.pre48 = load i64, ptr %memberidx3.i.i28, align 4
  br label %Parser_advance.exit.i37

Parser_advance.exit.i37:                          ; preds = %if.entry.i.i33, %while.entry.i31
  %64 = phi i64 [ %.pre48, %if.entry.i.i33 ], [ 0, %while.entry.i31 ]
  %65 = phi i64 [ %.pre47, %if.entry.i.i33 ], [ 33, %while.entry.i31 ]
  %66 = phi i64 [ %60, %if.entry.i.i33 ], [ %57, %while.entry.i31 ]
  %67 = icmp eq i64 %65, 33
  %68 = icmp eq i64 %64, 0
  %69 = and i1 %67, %68
  br i1 %69, label %while.entry.i31, label %Parser_new_lines.exit38

Parser_new_lines.exit38:                          ; preds = %Parser_advance.exit.i37, %while.entry
  %70 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %71 = load i64, ptr %memberidx.i16, align 4
  %72 = load i64, ptr %memberidx1.i17, align 4
  %.not.i = icmp slt i64 %71, %72
  br i1 %.not.i, label %Parser_new_lines.exit38.Array_ArgNode____sl__.exit_crit_edge, label %if.entry.i

Parser_new_lines.exit38.Array_ArgNode____sl__.exit_crit_edge: ; preds = %Parser_new_lines.exit38
  %.pre50 = load ptr, ptr %1, align 8
  br label %Array_ArgNode____sl__.exit

if.entry.i:                                       ; preds = %Parser_new_lines.exit38
  %73 = shl nuw i64 %72, 1
  store i64 %73, ptr %memberidx1.i17, align 4
  %74 = load ptr, ptr %1, align 8
  %75 = shl i64 %72, 4
  %76 = tail call ptr @realloc(ptr %74, i64 %75)
  store ptr %76, ptr %1, align 8
  %.pre49 = load i64, ptr %memberidx.i16, align 4
  br label %Array_ArgNode____sl__.exit

Array_ArgNode____sl__.exit:                       ; preds = %Parser_new_lines.exit38.Array_ArgNode____sl__.exit_crit_edge, %if.entry.i
  %77 = phi ptr [ %.pre50, %Parser_new_lines.exit38.Array_ArgNode____sl__.exit_crit_edge ], [ %76, %if.entry.i ]
  %78 = phi i64 [ %71, %Parser_new_lines.exit38.Array_ArgNode____sl__.exit_crit_edge ], [ %.pre49, %if.entry.i ]
  %79 = add nsw i64 %78, 1
  store i64 %79, ptr %memberidx.i16, align 4
  %80 = getelementptr inbounds ptr, ptr %77, i64 %78
  store ptr %70, ptr %80, align 8
  %81 = load ptr, ptr %memberidx.i, align 8
  %82 = load i64, ptr %81, align 4
  %83 = icmp eq i64 %82, 3
  %84 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %84, i64 0, i32 1
  %85 = load i64, ptr %memberidx3.i, align 4
  %86 = icmp eq i64 %85, 0
  %87 = and i1 %83, %86
  br i1 %87, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_ArgNode____sl__.exit, %Array_ArgNode____sl__.exit21
  ret void
}

define internal fastcc ptr @Parser_parse_const_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 2, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 3
  store ptr null, ptr %memberidx.i, align 8
  %memberidx.i24 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %5 = load i64, ptr %memberidx.i24, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i24, align 4
  %10 = load ptr, ptr %6, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 2
  %13 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %13, ptr %memberidx2, align 8
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %17 = load i64, ptr %memberidx.i24, align 4
  %18 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds %Array_Token_, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx2.i26, align 4
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %if.entry.i28, label %Parser_advance.exit29

if.entry.i28:                                     ; preds = %if.entry
  %21 = add nsw i64 %17, 1
  store i64 %21, ptr %memberidx.i24, align 4
  %22 = load ptr, ptr %18, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  store ptr %24, ptr %memberidx, align 8
  br label %Parser_advance.exit29

Parser_advance.exit29:                            ; preds = %if.entry, %if.entry.i28
  %25 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %25, ptr %memberidx.i, align 8
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit29
  %26 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 38)
  %memberidx6 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 4
  %27 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %27, ptr %memberidx6, align 8
  %28 = load ptr, ptr %27, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i30 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i30, align 4
  %memberidx3.i31 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i31, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i, align 4
  store ptr %29, ptr %2, align 8
  ret ptr %2
}

define internal fastcc ptr @Parser_parse_tuple_expression_or_expression_par(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %12 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 3
  br i1 %15, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = load ptr, ptr %0, align 8
  %memberidx2.i22 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx2.i22, align 4
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %if.entry.i24, label %Array_ExpressionNode____sl__.exit

if.entry.i24:                                     ; preds = %if.entry
  %20 = add nsw i64 %16, 1
  store i64 %20, ptr %memberidx.i, align 4
  %21 = load ptr, ptr %17, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  store ptr %23, ptr %memberidx, align 8
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %if.entry.i24, %if.entry
  %24 = tail call ptr @malloc(i32 32)
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %24, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %24, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i, align 4
  %memberidx.i26 = getelementptr inbounds %TupleExpressionNode, ptr %24, i64 0, i32 3
  %25 = tail call ptr @malloc(i32 24)
  %memberidx.i3.i = getelementptr inbounds %Array_ExpressionNode_, ptr %25, i64 0, i32 1
  store i64 0, ptr %memberidx.i3.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %25, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %26 = tail call ptr @malloc(i32 64)
  store ptr %26, ptr %25, align 8
  store ptr %25, ptr %memberidx.i26, align 8
  store i64 1, ptr %memberidx.i3.i, align 4
  store ptr %12, ptr %26, align 8
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %25, i64 26)
  %27 = load ptr, ptr %memberidx, align 8
  %memberidx8 = getelementptr inbounds %Token, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx8, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %3, align 4
  %memberidx1.i31 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i31, align 4
  %memberidx2.i32 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i32, align 4
  %memberidx3.i33 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i33, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i34 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i34, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i, align 4
  store ptr %29, ptr %24, align 8
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Array_ExpressionNode____sl__.exit
  %expression.0 = phi ptr [ %24, %Array_ExpressionNode____sl__.exit ], [ %12, %Parser_advance.exit ]
  %34 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  ret ptr %expression.0
}

define internal fastcc void @Parser_parse_type_list(ptr %0, ptr nocapture %1) unnamed_addr {
  %3 = tail call fastcc ptr @Parser_parse_type(ptr %0)
  %memberidx.i19 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %4 = load i64, ptr %memberidx.i19, align 4
  %memberidx1.i20 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 2
  %5 = load i64, ptr %memberidx1.i20, align 4
  %.not.i21 = icmp slt i64 %4, %5
  br i1 %.not.i21, label %.Array_TypeNode____sl__.exit24_crit_edge, label %if.entry.i23

.Array_TypeNode____sl__.exit24_crit_edge:         ; preds = %2
  %.pre25 = load ptr, ptr %1, align 8
  br label %Array_TypeNode____sl__.exit24

if.entry.i23:                                     ; preds = %2
  %6 = shl nuw i64 %5, 1
  store i64 %6, ptr %memberidx1.i20, align 4
  %7 = load ptr, ptr %1, align 8
  %8 = shl i64 %5, 4
  %9 = tail call ptr @realloc(ptr %7, i64 %8)
  store ptr %9, ptr %1, align 8
  %.pre = load i64, ptr %memberidx.i19, align 4
  br label %Array_TypeNode____sl__.exit24

Array_TypeNode____sl__.exit24:                    ; preds = %.Array_TypeNode____sl__.exit24_crit_edge, %if.entry.i23
  %10 = phi ptr [ %.pre25, %.Array_TypeNode____sl__.exit24_crit_edge ], [ %9, %if.entry.i23 ]
  %11 = phi i64 [ %4, %.Array_TypeNode____sl__.exit24_crit_edge ], [ %.pre, %if.entry.i23 ]
  %12 = add nsw i64 %11, 1
  store i64 %12, ptr %memberidx.i19, align 4
  %13 = getelementptr inbounds ptr, ptr %10, i64 %11
  store ptr %3, ptr %13, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 3
  %memberidx2.i17 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i17, align 8
  %memberidx3.i18 = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx3.i18, align 4
  %19 = icmp eq i64 %18, 0
  %20 = and i1 %16, %19
  br i1 %20, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Array_TypeNode____sl__.exit24
  %memberidx.i12 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_TypeNode____sl__.exit
  %21 = load i64, ptr %memberidx.i12, align 4
  %22 = load ptr, ptr %0, align 8
  %memberidx2.i13 = getelementptr inbounds %Array_Token_, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx2.i13, align 4
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %if.entry.i15, label %Parser_advance.exit

if.entry.i15:                                     ; preds = %while.entry
  %25 = add nsw i64 %21, 1
  store i64 %25, ptr %memberidx.i12, align 4
  %26 = load ptr, ptr %22, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  store ptr %28, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i15
  %29 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %30 = load i64, ptr %memberidx.i19, align 4
  %31 = load i64, ptr %memberidx1.i20, align 4
  %.not.i = icmp slt i64 %30, %31
  br i1 %.not.i, label %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge, label %if.entry.i

Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge: ; preds = %Parser_advance.exit
  %.pre27 = load ptr, ptr %1, align 8
  br label %Array_TypeNode____sl__.exit

if.entry.i:                                       ; preds = %Parser_advance.exit
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx1.i20, align 4
  %33 = load ptr, ptr %1, align 8
  %34 = shl i64 %31, 4
  %35 = tail call ptr @realloc(ptr %33, i64 %34)
  store ptr %35, ptr %1, align 8
  %.pre26 = load i64, ptr %memberidx.i19, align 4
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge, %if.entry.i
  %36 = phi ptr [ %.pre27, %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge ], [ %35, %if.entry.i ]
  %37 = phi i64 [ %30, %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge ], [ %.pre26, %if.entry.i ]
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr %memberidx.i19, align 4
  %39 = getelementptr inbounds ptr, ptr %36, i64 %37
  store ptr %29, ptr %39, align 8
  %40 = load ptr, ptr %memberidx, align 8
  %41 = load i64, ptr %40, align 4
  %42 = icmp eq i64 %41, 3
  %43 = load ptr, ptr %memberidx2.i17, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx3.i, align 4
  %45 = icmp eq i64 %44, 0
  %46 = and i1 %42, %45
  br i1 %46, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_TypeNode____sl__.exit, %Array_TypeNode____sl__.exit24
  ret void
}

define internal fastcc noalias ptr @Parser_parse_arg(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 24)
  %3 = tail call fastcc ptr @Parser_eat(ptr %0, i64 53)
  store ptr %3, ptr %2, align 8
  %memberidx1.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 1
  %memberidx2.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 2
  %memberidx.i49 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx1.i, i8 0, i64 16, i1 false)
  %4 = load ptr, ptr %memberidx.i49, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp ne i64 %5, 46
  %memberidx2.i50 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i50, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx3.i, align 4
  %9 = icmp eq i64 %8, 0
  %10 = and i1 %6, %9
  br i1 %10, label %ifend, label %common.ret

common.ret:                                       ; preds = %Parser_error.exit, %ifend13, %Parser_advance.exit, %1
  ret ptr %2

ifend:                                            ; preds = %1
  %11 = icmp eq i64 %5, 1
  br i1 %11, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx.i51 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %12 = load i64, ptr %memberidx.i51, align 4
  %13 = load ptr, ptr %0, align 8
  %memberidx2.i52 = getelementptr inbounds %Array_Token_, ptr %13, i64 0, i32 1
  %14 = load i64, ptr %memberidx2.i52, align 4
  %15 = icmp slt i64 %12, %14
  br i1 %15, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry2
  %16 = add nsw i64 %12, 1
  store i64 %16, ptr %memberidx.i51, align 4
  %17 = load ptr, ptr %13, align 8
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = load ptr, ptr %18, align 8
  store ptr %19, ptr %memberidx.i49, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry2, %if.entry.i
  %20 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %20, ptr %memberidx1.i, align 8
  %21 = load ptr, ptr %memberidx.i49, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp ne i64 %22, 46
  %24 = load ptr, ptr %memberidx2.i50, align 8
  %memberidx3.i59 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx3.i59, align 4
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %ifend4, label %common.ret

ifend4:                                           ; preds = %Parser_advance.exit, %ifend
  %28 = phi ptr [ %20, %Parser_advance.exit ], [ null, %ifend ]
  %29 = phi i64 [ %22, %Parser_advance.exit ], [ %5, %ifend ]
  %30 = icmp eq i64 %29, 38
  br i1 %30, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %ifend4
  %memberidx.i60 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %31 = load i64, ptr %memberidx.i60, align 4
  %32 = load ptr, ptr %0, align 8
  %memberidx2.i61 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i61, align 4
  %34 = icmp slt i64 %31, %33
  br i1 %34, label %if.entry.i63, label %Parser_advance.exit64

if.entry.i63:                                     ; preds = %if.entry11
  %35 = add nsw i64 %31, 1
  store i64 %35, ptr %memberidx.i60, align 4
  %36 = load ptr, ptr %32, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  store ptr %38, ptr %memberidx.i49, align 8
  br label %Parser_advance.exit64

Parser_advance.exit64:                            ; preds = %if.entry11, %if.entry.i63
  %39 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %39, ptr %memberidx2.i, align 8
  %phi.cmp = icmp eq ptr %39, null
  br label %ifend13

ifend13:                                          ; preds = %ifend4, %Parser_advance.exit64
  %40 = phi i1 [ true, %ifend4 ], [ %phi.cmp, %Parser_advance.exit64 ]
  %41 = icmp eq ptr %28, null
  %42 = and i1 %41, %40
  br i1 %42, label %if.entry17, label %common.ret

if.entry17:                                       ; preds = %ifend13
  %memberidx21 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %43 = load ptr, ptr %memberidx21, align 8
  %memberidx.i56 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i56, align 4
  %45 = trunc i64 %44 to i32
  %46 = add i32 %45, 1
  %47 = tail call ptr @malloc(i32 %46)
  %48 = load ptr, ptr %43, align 8
  %49 = load i64, ptr %memberidx.i56, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %48, i64 %49, i1 false)
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  store i8 0, ptr %50, align 1
  %51 = alloca ptr, align 8
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %51, ptr nonnull @77, ptr %47)
  %53 = load ptr, ptr %51, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i54 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %52, ptr %memberidx1.i54, align 4
  %memberidx2.i55 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx2.i55, align 4
  tail call void @free(ptr %47)
  %55 = load ptr, ptr %memberidx2.i50, align 8
  %56 = call ptr @malloc(i32 24)
  %57 = load ptr, ptr %memberidx.i49, align 8
  %memberidx2.i48 = getelementptr inbounds %Token, ptr %57, i64 0, i32 1
  %58 = load ptr, ptr %memberidx2.i48, align 8
  store i64 2, ptr %56, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 2
  store ptr %58, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 1
  store ptr %54, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %60 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %59, %60
  br i1 %.not.i.i, label %if.entry17.Parser_error.exit_crit_edge, label %if.entry.i.i

if.entry17.Parser_error.exit_crit_edge:           ; preds = %if.entry17
  %.pre66 = load ptr, ptr %55, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %if.entry17
  %61 = shl nuw i64 %60, 1
  store i64 %61, ptr %memberidx1.i4.i, align 4
  %62 = load ptr, ptr %55, align 8
  %63 = shl i64 %60, 4
  %64 = call ptr @realloc(ptr %62, i64 %63)
  store ptr %64, ptr %55, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry17.Parser_error.exit_crit_edge, %if.entry.i.i
  %65 = phi ptr [ %.pre66, %if.entry17.Parser_error.exit_crit_edge ], [ %64, %if.entry.i.i ]
  %66 = phi i64 [ %59, %if.entry17.Parser_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %67 = add nsw i64 %66, 1
  store i64 %67, ptr %memberidx.i.i, align 4
  %68 = getelementptr inbounds ptr, ptr %65, i64 %66
  store ptr %56, ptr %68, align 8
  %69 = load ptr, ptr %memberidx2.i50, align 8
  %memberidx24 = getelementptr inbounds %Array_FloError_, ptr %69, i64 0, i32 1
  %70 = load i64, ptr %memberidx24, align 4
  %71 = add i64 %70, -1
  %72 = load ptr, ptr %69, align 8
  %73 = getelementptr inbounds ptr, ptr %72, i64 %71
  %74 = load ptr, ptr %73, align 8
  %memberidx25 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 2
  %memberidx27 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %75 = load ptr, ptr %memberidx27, align 8
  store ptr %75, ptr %memberidx25, align 8
  br label %common.ret
}

define internal fastcc ptr @Parser_parse_object_type(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_eat(ptr %0, i64 53)
  %3 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  store ptr %4, ptr %3, align 8
  %memberidx.i.i = getelementptr inbounds %TypeNode, ptr %3, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i, align 4
  %memberidx.i28 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 2
  store ptr %2, ptr %memberidx.i28, align 8
  %memberidx1.i29 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 3
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i30 = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i30, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i5.i, align 4
  store ptr %5, ptr %memberidx1.i29, align 8
  %memberidx1 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 42
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx2.i26, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i, align 4
  %15 = load ptr, ptr %11, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %memberidx1, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %5)
  %18 = load ptr, ptr %memberidx1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx5, align 8
  %20 = load i64, ptr %18, align 4
  %21 = icmp eq i64 %20, 49
  br i1 %21, label %if.entry8, label %else9

ifend:                                            ; preds = %1, %ifend10
  ret ptr %3

if.entry8:                                        ; preds = %Parser_advance.exit
  store i64 41, ptr %18, align 4
  br label %ifend10

else9:                                            ; preds = %Parser_advance.exit
  %22 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 41)
  br label %ifend10

ifend10:                                          ; preds = %else9, %if.entry8
  %23 = tail call ptr @malloc(i32 32)
  %24 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 1
  %25 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %26 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 3
  %27 = load i64, ptr %memberidx3.i, align 4
  store i64 %24, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  store i64 %26, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 3
  store i64 %27, ptr %memberidx3.i.i, align 4
  store ptr %23, ptr %3, align 8
  br label %ifend
}

define internal fastcc ptr @Parser_parse_unary_expression_pre(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %else35.i.i [
    i64 23, label %ifend
    i64 24, label %Parser_is_unary_op.exit.fold.split
    i64 5, label %Parser_is_unary_op.exit.fold.split27
    i64 37, label %Parser_is_unary_op.exit.fold.split28
    i64 73, label %ifend.fold.split
    i64 34, label %if.entry.i.i29
    i64 31, label %if.entry4.i.i
    i64 32, label %if.entry9.i.i
    i64 35, label %if.entry14.i.i
    i64 53, label %if.entry19.i.i
    i64 29, label %if.entry24.i.i
    i64 72, label %if.entry29.i.i
    i64 25, label %if.entry34.i.i
  ]

Parser_is_unary_op.exit.fold.split:               ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split27:             ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split28:             ; preds = %1
  br label %ifend

common.ret42.sink.split:                          ; preds = %Parser_advance.exit, %Parser_advance.exit.i
  %.sink45 = phi ptr [ %164, %Parser_advance.exit.i ], [ %181, %Parser_advance.exit ]
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %.sink45, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i.i23 = getelementptr inbounds %ExpressionNode, ptr %.sink45, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i23, align 4
  br label %common.ret42

common.ret42:                                     ; preds = %common.ret42.sink.split, %Parser_parse_lhs_expression_allow_call.exit
  %common.ret42.op = phi ptr [ %expression.1.i, %Parser_parse_lhs_expression_allow_call.exit ], [ %.sink45, %common.ret42.sink.split ]
  ret ptr %common.ret42.op

if.entry.i.i29:                                   ; preds = %1
  %5 = tail call fastcc ptr @Parser_parse_string(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry4.i.i:                                    ; preds = %1
  %6 = tail call ptr @malloc(i32 32)
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 31
  br i1 %9, label %if.entry.i.i60.i, label %else.i.i66.i

if.entry.i.i60.i:                                 ; preds = %if.entry4.i.i
  %memberidx.i.i.i58.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i.i.i58.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i59.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx2.i.i.i59.i, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i.i.i62.i, label %Parser_eat.exit.i70.i

if.entry.i.i.i62.i:                               ; preds = %if.entry.i.i60.i
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i.i.i58.i, align 4
  %15 = load ptr, ptr %11, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %memberidx, align 8
  br label %Parser_eat.exit.i70.i

else.i.i66.i:                                     ; preds = %if.entry4.i.i
  %18 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i64.i = getelementptr inbounds %Token, ptr %7, i64 0, i32 1
  %19 = load ptr, ptr %memberidx35.i.i64.i, align 8
  store i64 46, ptr %18, align 4
  %memberidx1.i76.i.i65.i = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  store ptr %19, ptr %memberidx1.i76.i.i65.i, align 8
  br label %Parser_eat.exit.i70.i

Parser_eat.exit.i70.i:                            ; preds = %else.i.i66.i, %if.entry.i.i.i62.i, %if.entry.i.i60.i
  %common.ret.op.i.i67.i = phi ptr [ %18, %else.i.i66.i ], [ %7, %if.entry.i.i.i62.i ], [ %7, %if.entry.i.i60.i ]
  %memberidx.i56.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i.i67.i, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i56.i.i, align 8
  store ptr %20, ptr %6, align 8
  %memberidx.i.i.i.i68.i = getelementptr inbounds %StatementNode, ptr %6, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i68.i, align 4
  %memberidx.i.i57.i.i = getelementptr inbounds %ExpressionNode, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i57.i.i, align 4
  %memberidx1.i.i69.i = getelementptr inbounds %IntExpressionNode, ptr %6, i64 0, i32 3
  store ptr %common.ret.op.i.i67.i, ptr %memberidx1.i.i69.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry9.i.i:                                    ; preds = %1
  %21 = tail call ptr @malloc(i32 32)
  %22 = load ptr, ptr %memberidx, align 8
  %23 = load i64, ptr %22, align 4
  %24 = icmp eq i64 %23, 32
  br i1 %24, label %if.entry.i62.i.i, label %else.i66.i.i

if.entry.i62.i.i:                                 ; preds = %if.entry9.i.i
  %memberidx.i.i60.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %25 = load i64, ptr %memberidx.i.i60.i.i, align 4
  %26 = load ptr, ptr %0, align 8
  %memberidx2.i.i61.i.i = getelementptr inbounds %Array_Token_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i.i61.i.i, align 4
  %28 = icmp slt i64 %25, %27
  br i1 %28, label %if.entry.i.i64.i.i, label %Parser_eat.exit69.i.i

if.entry.i.i64.i.i:                               ; preds = %if.entry.i62.i.i
  %29 = add nsw i64 %25, 1
  store i64 %29, ptr %memberidx.i.i60.i.i, align 4
  %30 = load ptr, ptr %26, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %29
  %32 = load ptr, ptr %31, align 8
  store ptr %32, ptr %memberidx, align 8
  br label %Parser_eat.exit69.i.i

else.i66.i.i:                                     ; preds = %if.entry9.i.i
  %33 = tail call ptr @malloc(i32 16)
  %memberidx35.i67.i.i = getelementptr inbounds %Token, ptr %22, i64 0, i32 1
  %34 = load ptr, ptr %memberidx35.i67.i.i, align 8
  store i64 46, ptr %33, align 4
  %memberidx1.i76.i68.i.i = getelementptr inbounds %Token, ptr %33, i64 0, i32 1
  store ptr %34, ptr %memberidx1.i76.i68.i.i, align 8
  br label %Parser_eat.exit69.i.i

Parser_eat.exit69.i.i:                            ; preds = %else.i66.i.i, %if.entry.i.i64.i.i, %if.entry.i62.i.i
  %common.ret.op.i59.i.i = phi ptr [ %33, %else.i66.i.i ], [ %22, %if.entry.i.i64.i.i ], [ %22, %if.entry.i62.i.i ]
  %memberidx.i70.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i59.i.i, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i70.i.i, align 8
  store ptr %35, ptr %21, align 8
  %memberidx.i.i.i71.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i71.i.i, align 4
  %memberidx.i.i72.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i72.i.i, align 4
  %memberidx1.i73.i.i = getelementptr inbounds %FloatExpressionNode, ptr %21, i64 0, i32 3
  store ptr %common.ret.op.i59.i.i, ptr %memberidx1.i73.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry14.i.i:                                   ; preds = %1
  %36 = tail call ptr @malloc(i32 32)
  %37 = load ptr, ptr %memberidx, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 35
  br i1 %39, label %if.entry.i78.i.i, label %else.i82.i.i

if.entry.i78.i.i:                                 ; preds = %if.entry14.i.i
  %memberidx.i.i76.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %40 = load i64, ptr %memberidx.i.i76.i.i, align 4
  %41 = load ptr, ptr %0, align 8
  %memberidx2.i.i77.i.i = getelementptr inbounds %Array_Token_, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx2.i.i77.i.i, align 4
  %43 = icmp slt i64 %40, %42
  br i1 %43, label %if.entry.i.i80.i.i, label %Parser_eat.exit85.i.i

if.entry.i.i80.i.i:                               ; preds = %if.entry.i78.i.i
  %44 = add nsw i64 %40, 1
  store i64 %44, ptr %memberidx.i.i76.i.i, align 4
  %45 = load ptr, ptr %41, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  %47 = load ptr, ptr %46, align 8
  store ptr %47, ptr %memberidx, align 8
  br label %Parser_eat.exit85.i.i

else.i82.i.i:                                     ; preds = %if.entry14.i.i
  %48 = tail call ptr @malloc(i32 16)
  %memberidx35.i83.i.i = getelementptr inbounds %Token, ptr %37, i64 0, i32 1
  %49 = load ptr, ptr %memberidx35.i83.i.i, align 8
  store i64 46, ptr %48, align 4
  %memberidx1.i76.i84.i.i = getelementptr inbounds %Token, ptr %48, i64 0, i32 1
  store ptr %49, ptr %memberidx1.i76.i84.i.i, align 8
  br label %Parser_eat.exit85.i.i

Parser_eat.exit85.i.i:                            ; preds = %else.i82.i.i, %if.entry.i.i80.i.i, %if.entry.i78.i.i
  %common.ret.op.i75.i.i = phi ptr [ %48, %else.i82.i.i ], [ %37, %if.entry.i.i80.i.i ], [ %37, %if.entry.i78.i.i ]
  %memberidx.i86.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i75.i.i, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i86.i.i, align 8
  store ptr %50, ptr %36, align 8
  %memberidx.i.i.i87.i.i = getelementptr inbounds %StatementNode, ptr %36, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i87.i.i, align 4
  %memberidx.i.i88.i.i = getelementptr inbounds %ExpressionNode, ptr %36, i64 0, i32 2
  store i64 3, ptr %memberidx.i.i88.i.i, align 4
  %memberidx1.i89.i.i = getelementptr inbounds %CharExpressionNode, ptr %36, i64 0, i32 3
  store ptr %common.ret.op.i75.i.i, ptr %memberidx1.i89.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry19.i.i:                                   ; preds = %1
  %51 = tail call ptr @malloc(i32 32)
  %52 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  %memberidx.i90.i.i = getelementptr inbounds %Token, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i90.i.i, align 8
  store ptr %53, ptr %51, align 8
  %memberidx.i.i.i91.i.i = getelementptr inbounds %StatementNode, ptr %51, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i91.i.i, align 4
  %memberidx.i.i92.i.i = getelementptr inbounds %ExpressionNode, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i92.i.i, align 4
  %memberidx1.i93.i.i = getelementptr inbounds %VarAccessExpressionNode, ptr %51, i64 0, i32 3
  store ptr %52, ptr %memberidx1.i93.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry24.i.i:                                   ; preds = %1
  %54 = tail call fastcc ptr @Parser_parse_array_expression(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry29.i.i:                                   ; preds = %1
  %55 = tail call fastcc ptr @Parser_parse_new_expression(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry34.i.i:                                   ; preds = %1
  %56 = tail call fastcc ptr @Parser_parse_tuple_expression_or_expression_par(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

else35.i.i:                                       ; preds = %1
  %57 = tail call ptr @malloc(i32 28)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %57, ptr noundef nonnull align 8 dereferenceable(28) @76, i64 28, i1 false)
  %58 = tail call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i.i71.i = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 28, ptr %memberidx1.i.i.i71.i, align 4
  %memberidx2.i.i94.i.i = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 28, ptr %memberidx2.i.i94.i.i, align 4
  %memberidx.i95.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i95.i.i, align 8
  %60 = tail call ptr @malloc(i32 24)
  %61 = load ptr, ptr %memberidx, align 8
  %memberidx2.i.i72.i = getelementptr inbounds %Token, ptr %61, i64 0, i32 1
  %62 = load ptr, ptr %memberidx2.i.i72.i, align 8
  store i64 2, ptr %60, align 4
  %memberidx1.i.i97.i.i = getelementptr inbounds %FloError, ptr %60, i64 0, i32 2
  store ptr %62, ptr %memberidx1.i.i97.i.i, align 8
  %memberidx2.i.i98.i.i = getelementptr inbounds %FloError, ptr %60, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i98.i.i, align 8
  %memberidx.i.i99.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %63 = load i64, ptr %memberidx.i.i99.i.i, align 4
  %memberidx1.i4.i.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %64 = load i64, ptr %memberidx1.i4.i.i.i, align 4
  %.not.i.i.i.i = icmp slt i64 %63, %64
  br i1 %.not.i.i.i.i, label %else35.i.i.Parser_error.exit.i.i_crit_edge, label %if.entry.i.i101.i.i

else35.i.i.Parser_error.exit.i.i_crit_edge:       ; preds = %else35.i.i
  %.pre43 = load ptr, ptr %59, align 8
  br label %Parser_error.exit.i.i

if.entry.i.i101.i.i:                              ; preds = %else35.i.i
  %65 = shl nuw i64 %64, 1
  store i64 %65, ptr %memberidx1.i4.i.i.i, align 4
  %66 = load ptr, ptr %59, align 8
  %67 = shl i64 %64, 4
  %68 = tail call ptr @realloc(ptr %66, i64 %67)
  store ptr %68, ptr %59, align 8
  %.pre = load i64, ptr %memberidx.i.i99.i.i, align 4
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else35.i.i.Parser_error.exit.i.i_crit_edge, %if.entry.i.i101.i.i
  %69 = phi ptr [ %68, %if.entry.i.i101.i.i ], [ %.pre43, %else35.i.i.Parser_error.exit.i.i_crit_edge ]
  %70 = phi i64 [ %.pre, %if.entry.i.i101.i.i ], [ %63, %else35.i.i.Parser_error.exit.i.i_crit_edge ]
  %71 = add nsw i64 %70, 1
  store i64 %71, ptr %memberidx.i.i99.i.i, align 4
  %72 = getelementptr inbounds ptr, ptr %69, i64 %70
  store ptr %60, ptr %72, align 8
  %73 = tail call ptr @malloc(i32 24)
  %74 = load ptr, ptr %memberidx, align 8
  %memberidx38.i.i = getelementptr inbounds %Token, ptr %74, i64 0, i32 1
  %75 = load ptr, ptr %memberidx38.i.i, align 8
  store ptr %75, ptr %73, align 8
  %memberidx.i.i102.i.i = getelementptr inbounds %StatementNode, ptr %73, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i102.i.i, align 4
  %memberidx.i103.i.i = getelementptr inbounds %ExpressionNode, ptr %73, i64 0, i32 2
  store i64 8, ptr %memberidx.i103.i.i, align 4
  br label %Parser_parse_atom.exit.i

Parser_parse_atom.exit.i:                         ; preds = %Parser_error.exit.i.i, %if.entry34.i.i, %if.entry29.i.i, %if.entry24.i.i, %if.entry19.i.i, %Parser_eat.exit85.i.i, %Parser_eat.exit69.i.i, %Parser_eat.exit.i70.i, %if.entry.i.i29
  %common.ret.op.i.i = phi ptr [ %5, %if.entry.i.i29 ], [ %73, %Parser_error.exit.i.i ], [ %6, %Parser_eat.exit.i70.i ], [ %21, %Parser_eat.exit69.i.i ], [ %36, %Parser_eat.exit85.i.i ], [ %51, %if.entry19.i.i ], [ %54, %if.entry24.i.i ], [ %55, %if.entry29.i.i ], [ %56, %if.entry34.i.i ]
  %76 = load ptr, ptr %memberidx, align 8
  %77 = load i64, ptr %76, align 4
  %78 = icmp ne i64 %77, 46
  %memberidx2.i.i31 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %79 = load ptr, ptr %memberidx2.i.i31, align 8
  %memberidx3.i.i32 = getelementptr inbounds %Array_FloError_, ptr %79, i64 0, i32 1
  %80 = load i64, ptr %memberidx3.i.i32, align 4
  %81 = icmp eq i64 %80, 0
  %82 = and i1 %78, %81
  br i1 %82, label %while.entry.i.preheader, label %Parser_parse_lhs_expression_allow_call.exit

while.entry.i.preheader:                          ; preds = %Parser_parse_atom.exit.i
  %memberidx.i.i.i.i35 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %ifend.i
  %83 = phi i64 [ %100, %ifend.i ], [ %77, %while.entry.i.preheader ]
  %84 = phi ptr [ %99, %ifend.i ], [ %76, %while.entry.i.preheader ]
  %expression.0.i = phi ptr [ %expression.2.i, %ifend.i ], [ %common.ret.op.i.i, %while.entry.i.preheader ]
  switch i64 %83, label %Parser_parse_lhs_expression_allow_call.exit [
    i64 25, label %if.entry.i33
    i64 29, label %if.entry.i.i29.i
    i64 50, label %if.entry.i.i.i
  ]

if.entry.i33:                                     ; preds = %while.entry.i
  %85 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 25)
  %86 = tail call ptr @malloc(i32 40)
  %87 = load ptr, ptr %memberidx, align 8
  %memberidx1.i45.i = getelementptr inbounds %Token, ptr %87, i64 0, i32 1
  %88 = load ptr, ptr %memberidx1.i45.i, align 8
  store ptr %88, ptr %86, align 8
  %memberidx.i.i.i.i46.i = getelementptr inbounds %StatementNode, ptr %86, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i46.i, align 4
  %memberidx.i.i.i47.i = getelementptr inbounds %ExpressionNode, ptr %86, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i.i47.i, align 4
  %memberidx.i.i48.i = getelementptr inbounds %CallExpressionNode, ptr %86, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i.i48.i, align 8
  %memberidx1.i.i49.i = getelementptr inbounds %CallExpressionNode, ptr %86, i64 0, i32 4
  %89 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %89, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  %memberidx1.i.i.i50.i = getelementptr inbounds %Array_ExpressionNode_, ptr %89, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i50.i, align 4
  %90 = tail call ptr @malloc(i32 64)
  store ptr %90, ptr %89, align 8
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  store ptr %89, ptr %memberidx1.i.i49.i, align 8
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %89, i64 26)
  %91 = load ptr, ptr %expression.0.i, align 8
  %92 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx5.i.i = getelementptr inbounds %Token, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx5.i.i, align 8
  %94 = tail call ptr @malloc(i32 32)
  %95 = load i64, ptr %91, align 4
  %memberidx1.i12.i.i = getelementptr inbounds %FloRange, ptr %93, i64 0, i32 1
  %96 = load i64, ptr %memberidx1.i12.i.i, align 4
  %memberidx2.i.i53.i = getelementptr inbounds %FloRange, ptr %91, i64 0, i32 2
  %97 = load i64, ptr %memberidx2.i.i53.i, align 4
  %memberidx3.i13.i.i = getelementptr inbounds %FloRange, ptr %93, i64 0, i32 3
  %98 = load i64, ptr %memberidx3.i13.i.i, align 4
  store i64 %95, ptr %94, align 4
  %memberidx1.i.i14.i.i = getelementptr inbounds %FloRange, ptr %94, i64 0, i32 1
  store i64 %96, ptr %memberidx1.i.i14.i.i, align 4
  %memberidx2.i.i.i54.i = getelementptr inbounds %FloRange, ptr %94, i64 0, i32 2
  store i64 %97, ptr %memberidx2.i.i.i54.i, align 4
  %memberidx3.i.i.i55.i = getelementptr inbounds %FloRange, ptr %94, i64 0, i32 3
  store i64 %98, ptr %memberidx3.i.i.i55.i, align 4
  store ptr %94, ptr %86, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %Parser_parse_member_expression.exit.i, %Parser_parse_index_expression.exit.i, %if.entry.i33
  %expression.2.i = phi ptr [ %86, %if.entry.i33 ], [ %114, %Parser_parse_index_expression.exit.i ], [ %146, %Parser_parse_member_expression.exit.i ]
  %99 = load ptr, ptr %memberidx, align 8
  %100 = load i64, ptr %99, align 4
  %101 = icmp ne i64 %100, 46
  %102 = load ptr, ptr %memberidx2.i.i31, align 8
  %memberidx3.i25.i = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 1
  %103 = load i64, ptr %memberidx3.i25.i, align 4
  %104 = icmp eq i64 %103, 0
  %105 = and i1 %101, %104
  br i1 %105, label %while.entry.i, label %Parser_parse_lhs_expression_allow_call.exit

if.entry.i.i29.i:                                 ; preds = %while.entry.i
  %106 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %107 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i28.i = getelementptr inbounds %Array_Token_, ptr %107, i64 0, i32 1
  %108 = load i64, ptr %memberidx2.i.i.i28.i, align 4
  %109 = icmp slt i64 %106, %108
  br i1 %109, label %if.entry.i.i.i31.i, label %Parser_eat.exit.i.i

if.entry.i.i.i31.i:                               ; preds = %if.entry.i.i29.i
  %110 = add nsw i64 %106, 1
  store i64 %110, ptr %memberidx.i.i.i.i35, align 4
  %111 = load ptr, ptr %107, align 8
  %112 = getelementptr inbounds ptr, ptr %111, i64 %110
  %113 = load ptr, ptr %112, align 8
  store ptr %113, ptr %memberidx, align 8
  br label %Parser_eat.exit.i.i

Parser_eat.exit.i.i:                              ; preds = %if.entry.i.i.i31.i, %if.entry.i.i29.i
  %114 = tail call ptr @malloc(i32 40)
  %115 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %116 = load ptr, ptr %memberidx, align 8
  %memberidx1.i38.i = getelementptr inbounds %Token, ptr %116, i64 0, i32 1
  %117 = load ptr, ptr %memberidx1.i38.i, align 8
  %memberidx.i10.i.i = getelementptr inbounds %ExpressionIndexNode, ptr %114, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i10.i.i, align 8
  %memberidx1.i.i39.i = getelementptr inbounds %ExpressionIndexNode, ptr %114, i64 0, i32 4
  store ptr %115, ptr %memberidx1.i.i39.i, align 8
  store ptr %117, ptr %114, align 8
  %memberidx.i.i.i.i40.i = getelementptr inbounds %StatementNode, ptr %114, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i40.i, align 4
  %memberidx.i.i11.i.i = getelementptr inbounds %ExpressionNode, ptr %114, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i11.i.i, align 4
  %118 = load ptr, ptr %expression.0.i, align 8
  %119 = load i64, ptr %116, align 4
  %120 = icmp eq i64 %119, 30
  br i1 %120, label %if.entry.i16.i.i, label %else.i20.i.i

if.entry.i16.i.i:                                 ; preds = %Parser_eat.exit.i.i
  %121 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %122 = load ptr, ptr %0, align 8
  %memberidx2.i.i15.i.i = getelementptr inbounds %Array_Token_, ptr %122, i64 0, i32 1
  %123 = load i64, ptr %memberidx2.i.i15.i.i, align 4
  %124 = icmp slt i64 %121, %123
  br i1 %124, label %if.entry.i.i18.i.i, label %Parser_parse_index_expression.exit.i

if.entry.i.i18.i.i:                               ; preds = %if.entry.i16.i.i
  %125 = add nsw i64 %121, 1
  store i64 %125, ptr %memberidx.i.i.i.i35, align 4
  %126 = load ptr, ptr %122, align 8
  %127 = getelementptr inbounds ptr, ptr %126, i64 %125
  %128 = load ptr, ptr %127, align 8
  store ptr %128, ptr %memberidx, align 8
  br label %Parser_parse_index_expression.exit.i

else.i20.i.i:                                     ; preds = %Parser_eat.exit.i.i
  %129 = tail call ptr @malloc(i32 16)
  %130 = load ptr, ptr %memberidx1.i38.i, align 8
  store i64 46, ptr %129, align 4
  %memberidx1.i76.i22.i.i = getelementptr inbounds %Token, ptr %129, i64 0, i32 1
  store ptr %130, ptr %memberidx1.i76.i22.i.i, align 8
  br label %Parser_parse_index_expression.exit.i

Parser_parse_index_expression.exit.i:             ; preds = %else.i20.i.i, %if.entry.i.i18.i.i, %if.entry.i16.i.i
  %common.ret.op.i13.i.i = phi ptr [ %129, %else.i20.i.i ], [ %116, %if.entry.i.i18.i.i ], [ %116, %if.entry.i16.i.i ]
  %memberidx4.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i13.i.i, i64 0, i32 1
  %131 = load ptr, ptr %memberidx4.i.i, align 8
  %132 = tail call ptr @malloc(i32 32)
  %133 = load i64, ptr %118, align 4
  %memberidx1.i24.i.i = getelementptr inbounds %FloRange, ptr %131, i64 0, i32 1
  %134 = load i64, ptr %memberidx1.i24.i.i, align 4
  %memberidx2.i.i41.i = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 2
  %135 = load i64, ptr %memberidx2.i.i41.i, align 4
  %memberidx3.i.i42.i = getelementptr inbounds %FloRange, ptr %131, i64 0, i32 3
  %136 = load i64, ptr %memberidx3.i.i42.i, align 4
  store i64 %133, ptr %132, align 4
  %memberidx1.i.i.i43.i = getelementptr inbounds %FloRange, ptr %132, i64 0, i32 1
  store i64 %134, ptr %memberidx1.i.i.i43.i, align 4
  %memberidx2.i.i25.i.i = getelementptr inbounds %FloRange, ptr %132, i64 0, i32 2
  store i64 %135, ptr %memberidx2.i.i25.i.i, align 4
  %memberidx3.i.i26.i.i = getelementptr inbounds %FloRange, ptr %132, i64 0, i32 3
  store i64 %136, ptr %memberidx3.i.i26.i.i, align 4
  store ptr %132, ptr %114, align 8
  br label %ifend.i

if.entry.i.i.i:                                   ; preds = %while.entry.i
  %137 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %138 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %138, i64 0, i32 1
  %139 = load i64, ptr %memberidx2.i.i.i.i, align 4
  %140 = icmp slt i64 %137, %139
  br i1 %140, label %if.entry.i.i.i.i, label %Parser_parse_member_expression.exit.i

if.entry.i.i.i.i:                                 ; preds = %if.entry.i.i.i
  %141 = add nsw i64 %137, 1
  store i64 %141, ptr %memberidx.i.i.i.i35, align 4
  %142 = load ptr, ptr %138, align 8
  %143 = getelementptr inbounds ptr, ptr %142, i64 %141
  %144 = load ptr, ptr %143, align 8
  store ptr %144, ptr %memberidx, align 8
  br label %Parser_parse_member_expression.exit.i

Parser_parse_member_expression.exit.i:            ; preds = %if.entry.i.i.i.i, %if.entry.i.i.i
  %145 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  %146 = tail call ptr @malloc(i32 40)
  %147 = load ptr, ptr %expression.0.i, align 8
  %memberidx1.i.i36 = getelementptr inbounds %Token, ptr %145, i64 0, i32 1
  %148 = load ptr, ptr %memberidx1.i.i36, align 8
  %149 = tail call ptr @malloc(i32 32)
  %150 = load i64, ptr %147, align 4
  %memberidx1.i.i.i37 = getelementptr inbounds %FloRange, ptr %148, i64 0, i32 1
  %151 = load i64, ptr %memberidx1.i.i.i37, align 4
  %memberidx2.i.i.i38 = getelementptr inbounds %FloRange, ptr %147, i64 0, i32 2
  %152 = load i64, ptr %memberidx2.i.i.i38, align 4
  %memberidx3.i.i.i39 = getelementptr inbounds %FloRange, ptr %148, i64 0, i32 3
  %153 = load i64, ptr %memberidx3.i.i.i39, align 4
  store i64 %150, ptr %149, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 1
  store i64 %151, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i5.i.i = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 2
  store i64 %152, ptr %memberidx2.i.i5.i.i, align 4
  %memberidx3.i.i6.i.i = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 3
  store i64 %153, ptr %memberidx3.i.i6.i.i, align 4
  store ptr %149, ptr %146, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %StatementNode, ptr %146, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i.i, align 4
  %memberidx.i.i7.i.i = getelementptr inbounds %ExpressionNode, ptr %146, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i7.i.i, align 4
  %memberidx.i8.i.i = getelementptr inbounds %MemberExpressionNode, ptr %146, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i8.i.i, align 8
  %memberidx1.i9.i.i = getelementptr inbounds %MemberExpressionNode, ptr %146, i64 0, i32 4
  store ptr %145, ptr %memberidx1.i9.i.i, align 8
  br label %ifend.i

Parser_parse_lhs_expression_allow_call.exit:      ; preds = %while.entry.i, %ifend.i, %Parser_parse_atom.exit.i
  %154 = phi i64 [ %77, %Parser_parse_atom.exit.i ], [ %83, %while.entry.i ], [ %100, %ifend.i ]
  %155 = phi ptr [ %76, %Parser_parse_atom.exit.i ], [ %84, %while.entry.i ], [ %99, %ifend.i ]
  %expression.1.i = phi ptr [ %common.ret.op.i.i, %Parser_parse_atom.exit.i ], [ %expression.0.i, %while.entry.i ], [ %expression.2.i, %ifend.i ]
  switch i64 %154, label %common.ret42 [
    i64 23, label %ifend.i20
    i64 24, label %if.entry3.i
  ]

ifend.i20:                                        ; preds = %Parser_parse_lhs_expression_allow_call.exit, %if.entry3.i
  %op.0.i = phi i64 [ 5, %if.entry3.i ], [ 4, %Parser_parse_lhs_expression_allow_call.exit ]
  %memberidx.i.i18 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %156 = load i64, ptr %memberidx.i.i18, align 4
  %157 = load ptr, ptr %0, align 8
  %memberidx2.i.i19 = getelementptr inbounds %Array_Token_, ptr %157, i64 0, i32 1
  %158 = load i64, ptr %memberidx2.i.i19, align 4
  %159 = icmp slt i64 %156, %158
  br i1 %159, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %ifend.i20
  %160 = add nsw i64 %156, 1
  store i64 %160, ptr %memberidx.i.i18, align 4
  %161 = load ptr, ptr %157, align 8
  %162 = getelementptr inbounds ptr, ptr %161, i64 %160
  %163 = load ptr, ptr %162, align 8
  store ptr %163, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %ifend.i20
  %164 = tail call ptr @malloc(i32 40)
  %165 = load ptr, ptr %expression.1.i, align 8
  %memberidx7.i = getelementptr inbounds %Token, ptr %155, i64 0, i32 1
  %166 = load ptr, ptr %memberidx7.i, align 8
  %167 = tail call ptr @malloc(i32 32)
  %168 = load i64, ptr %165, align 4
  %memberidx1.i.i22 = getelementptr inbounds %FloRange, ptr %166, i64 0, i32 1
  %169 = load i64, ptr %memberidx1.i.i22, align 4
  %memberidx2.i14.i = getelementptr inbounds %FloRange, ptr %165, i64 0, i32 2
  %170 = load i64, ptr %memberidx2.i14.i, align 4
  %memberidx3.i15.i = getelementptr inbounds %FloRange, ptr %166, i64 0, i32 3
  %171 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %168, ptr %167, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 1
  store i64 %169, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 2
  store i64 %170, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 3
  store i64 %171, ptr %memberidx3.i.i.i, align 4
  %memberidx.i16.i = getelementptr inbounds %UnaryExpressionNode, ptr %164, i64 0, i32 3
  store i64 %op.0.i, ptr %memberidx.i16.i, align 4
  %memberidx1.i17.i = getelementptr inbounds %UnaryExpressionNode, ptr %164, i64 0, i32 4
  store ptr %expression.1.i, ptr %memberidx1.i17.i, align 8
  store ptr %167, ptr %164, align 8
  br label %common.ret42.sink.split

if.entry3.i:                                      ; preds = %Parser_parse_lhs_expression_allow_call.exit
  br label %ifend.i20

ifend.fold.split:                                 ; preds = %1
  br label %ifend

ifend:                                            ; preds = %1, %ifend.fold.split, %Parser_is_unary_op.exit.fold.split28, %Parser_is_unary_op.exit.fold.split27, %Parser_is_unary_op.exit.fold.split
  %common.ret.op.i41 = phi i64 [ 8, %Parser_is_unary_op.exit.fold.split28 ], [ 6, %Parser_is_unary_op.exit.fold.split27 ], [ 3, %Parser_is_unary_op.exit.fold.split ], [ 2, %1 ], [ 1, %ifend.fold.split ]
  %memberidx.i9 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %172 = load i64, ptr %memberidx.i9, align 4
  %173 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %173, i64 0, i32 1
  %174 = load i64, ptr %memberidx2.i, align 4
  %175 = icmp slt i64 %172, %174
  br i1 %175, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %ifend
  %176 = add nsw i64 %172, 1
  store i64 %176, ptr %memberidx.i9, align 4
  %177 = load ptr, ptr %173, align 8
  %178 = getelementptr inbounds ptr, ptr %177, i64 %176
  %179 = load ptr, ptr %178, align 8
  store ptr %179, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend, %if.entry.i
  %180 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %181 = tail call ptr @malloc(i32 40)
  %182 = load ptr, ptr %180, align 8
  %183 = tail call ptr @malloc(i32 32)
  %184 = load i64, ptr %3, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %182, i64 0, i32 1
  %185 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i11 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %186 = load i64, ptr %memberidx2.i11, align 4
  %memberidx3.i12 = getelementptr inbounds %FloRange, ptr %182, i64 0, i32 3
  %187 = load i64, ptr %memberidx3.i12, align 4
  store i64 %184, ptr %183, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 1
  store i64 %185, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 2
  store i64 %186, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 3
  store i64 %187, ptr %memberidx3.i.i, align 4
  %memberidx.i13 = getelementptr inbounds %UnaryExpressionNode, ptr %181, i64 0, i32 3
  store i64 %common.ret.op.i41, ptr %memberidx.i13, align 4
  %memberidx1.i14 = getelementptr inbounds %UnaryExpressionNode, ptr %181, i64 0, i32 4
  store ptr %180, ptr %memberidx1.i14, align 8
  store ptr %183, ptr %181, align 8
  br label %common.ret42.sink.split
}

define internal fastcc ptr @Parser_eat(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %if.entry, label %else

common.ret:                                       ; preds = %if.entry.i, %if.entry, %ifend4
  %common.ret.op = phi ptr [ %30, %ifend4 ], [ %3, %if.entry ], [ %3, %if.entry.i ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %7, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  store ptr %13, ptr %memberidx, align 8
  br label %common.ret

else:                                             ; preds = %2
  switch i64 %1, label %ifend4 [
    i64 53, label %if.entry2
    i64 38, label %if.entry5
    i64 1, label %if.entry8
    i64 25, label %if.entry11
    i64 26, label %if.entry14
    i64 27, label %if.entry17
    i64 28, label %if.entry20
    i64 3, label %if.entry23
    i64 42, label %if.entry26
    i64 41, label %if.entry29
    i64 45, label %if.entry32
  ]

if.entry2:                                        ; preds = %else
  %14 = tail call ptr @malloc(i32 22)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %14, ptr noundef nonnull align 8 dereferenceable(22) @63, i64 22, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i63 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 22, ptr %memberidx1.i.i63, align 4
  %memberidx2.i.i64 = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 22, ptr %memberidx2.i.i64, align 4
  %memberidx.i65 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i65, align 8
  %17 = tail call ptr @malloc(i32 24)
  %18 = load ptr, ptr %memberidx, align 8
  %memberidx2.i67 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx2.i67, align 8
  store i64 2, ptr %17, align 4
  %memberidx1.i.i68 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 2
  store ptr %19, ptr %memberidx1.i.i68, align 8
  %memberidx2.i.i69 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 1
  store ptr %15, ptr %memberidx2.i.i69, align 8
  %memberidx.i.i70 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i.i70, align 4
  %memberidx1.i4.i71 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %21 = load i64, ptr %memberidx1.i4.i71, align 4
  %.not.i.i72 = icmp slt i64 %20, %21
  br i1 %.not.i.i72, label %if.entry2.Parser_error.exit75_crit_edge, label %if.entry.i.i74

if.entry2.Parser_error.exit75_crit_edge:          ; preds = %if.entry2
  %.pre217 = load ptr, ptr %16, align 8
  br label %Parser_error.exit75

if.entry.i.i74:                                   ; preds = %if.entry2
  %22 = shl nuw i64 %21, 1
  store i64 %22, ptr %memberidx1.i4.i71, align 4
  %23 = load ptr, ptr %16, align 8
  %24 = shl i64 %21, 4
  %25 = tail call ptr @realloc(ptr %23, i64 %24)
  store ptr %25, ptr %16, align 8
  %.pre216 = load i64, ptr %memberidx.i.i70, align 4
  br label %Parser_error.exit75

Parser_error.exit75:                              ; preds = %if.entry2.Parser_error.exit75_crit_edge, %if.entry.i.i74
  %26 = phi ptr [ %.pre217, %if.entry2.Parser_error.exit75_crit_edge ], [ %25, %if.entry.i.i74 ]
  %27 = phi i64 [ %20, %if.entry2.Parser_error.exit75_crit_edge ], [ %.pre216, %if.entry.i.i74 ]
  %28 = add nsw i64 %27, 1
  store i64 %28, ptr %memberidx.i.i70, align 4
  %29 = getelementptr inbounds ptr, ptr %26, i64 %27
  store ptr %17, ptr %29, align 8
  br label %ifend4

ifend4:                                           ; preds = %else, %Parser_error.exit, %Parser_error.exit193, %Parser_error.exit180, %Parser_error.exit167, %Parser_error.exit154, %Parser_error.exit141, %Parser_error.exit128, %Parser_error.exit115, %Parser_error.exit102, %Parser_error.exit89, %Parser_error.exit75
  %30 = tail call ptr @malloc(i32 16)
  %memberidx35 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %31 = load ptr, ptr %memberidx35, align 8
  store i64 46, ptr %30, align 4
  %memberidx1.i76 = getelementptr inbounds %Token, ptr %30, i64 0, i32 1
  store ptr %31, ptr %memberidx1.i76, align 8
  br label %common.ret

if.entry5:                                        ; preds = %else
  %32 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %32, ptr noundef nonnull align 8 dereferenceable(12) @64, i64 12, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  %memberidx1.i.i77 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i77, align 4
  %memberidx2.i.i78 = getelementptr inbounds %String, ptr %33, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i78, align 4
  %memberidx.i79 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i79, align 8
  %35 = tail call ptr @malloc(i32 24)
  %36 = load ptr, ptr %memberidx, align 8
  %memberidx2.i81 = getelementptr inbounds %Token, ptr %36, i64 0, i32 1
  %37 = load ptr, ptr %memberidx2.i81, align 8
  store i64 2, ptr %35, align 4
  %memberidx1.i.i82 = getelementptr inbounds %FloError, ptr %35, i64 0, i32 2
  store ptr %37, ptr %memberidx1.i.i82, align 8
  %memberidx2.i.i83 = getelementptr inbounds %FloError, ptr %35, i64 0, i32 1
  store ptr %33, ptr %memberidx2.i.i83, align 8
  %memberidx.i.i84 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i.i84, align 4
  %memberidx1.i4.i85 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 2
  %39 = load i64, ptr %memberidx1.i4.i85, align 4
  %.not.i.i86 = icmp slt i64 %38, %39
  br i1 %.not.i.i86, label %if.entry5.Parser_error.exit89_crit_edge, label %if.entry.i.i88

if.entry5.Parser_error.exit89_crit_edge:          ; preds = %if.entry5
  %.pre215 = load ptr, ptr %34, align 8
  br label %Parser_error.exit89

if.entry.i.i88:                                   ; preds = %if.entry5
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx1.i4.i85, align 4
  %41 = load ptr, ptr %34, align 8
  %42 = shl i64 %39, 4
  %43 = tail call ptr @realloc(ptr %41, i64 %42)
  store ptr %43, ptr %34, align 8
  %.pre214 = load i64, ptr %memberidx.i.i84, align 4
  br label %Parser_error.exit89

Parser_error.exit89:                              ; preds = %if.entry5.Parser_error.exit89_crit_edge, %if.entry.i.i88
  %44 = phi ptr [ %.pre215, %if.entry5.Parser_error.exit89_crit_edge ], [ %43, %if.entry.i.i88 ]
  %45 = phi i64 [ %38, %if.entry5.Parser_error.exit89_crit_edge ], [ %.pre214, %if.entry.i.i88 ]
  %46 = add nsw i64 %45, 1
  store i64 %46, ptr %memberidx.i.i84, align 4
  %47 = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %35, ptr %47, align 8
  br label %ifend4

if.entry8:                                        ; preds = %else
  %48 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %48, ptr noundef nonnull align 8 dereferenceable(12) @65, i64 12, i1 false)
  %49 = tail call ptr @malloc(i32 24)
  store ptr %48, ptr %49, align 8
  %memberidx1.i.i90 = getelementptr inbounds %String, ptr %49, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i90, align 4
  %memberidx2.i.i91 = getelementptr inbounds %String, ptr %49, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i91, align 4
  %memberidx.i92 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i92, align 8
  %51 = tail call ptr @malloc(i32 24)
  %52 = load ptr, ptr %memberidx, align 8
  %memberidx2.i94 = getelementptr inbounds %Token, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx2.i94, align 8
  store i64 2, ptr %51, align 4
  %memberidx1.i.i95 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 2
  store ptr %53, ptr %memberidx1.i.i95, align 8
  %memberidx2.i.i96 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 1
  store ptr %49, ptr %memberidx2.i.i96, align 8
  %memberidx.i.i97 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i.i97, align 4
  %memberidx1.i4.i98 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 2
  %55 = load i64, ptr %memberidx1.i4.i98, align 4
  %.not.i.i99 = icmp slt i64 %54, %55
  br i1 %.not.i.i99, label %if.entry8.Parser_error.exit102_crit_edge, label %if.entry.i.i101

if.entry8.Parser_error.exit102_crit_edge:         ; preds = %if.entry8
  %.pre213 = load ptr, ptr %50, align 8
  br label %Parser_error.exit102

if.entry.i.i101:                                  ; preds = %if.entry8
  %56 = shl nuw i64 %55, 1
  store i64 %56, ptr %memberidx1.i4.i98, align 4
  %57 = load ptr, ptr %50, align 8
  %58 = shl i64 %55, 4
  %59 = tail call ptr @realloc(ptr %57, i64 %58)
  store ptr %59, ptr %50, align 8
  %.pre212 = load i64, ptr %memberidx.i.i97, align 4
  br label %Parser_error.exit102

Parser_error.exit102:                             ; preds = %if.entry8.Parser_error.exit102_crit_edge, %if.entry.i.i101
  %60 = phi ptr [ %.pre213, %if.entry8.Parser_error.exit102_crit_edge ], [ %59, %if.entry.i.i101 ]
  %61 = phi i64 [ %54, %if.entry8.Parser_error.exit102_crit_edge ], [ %.pre212, %if.entry.i.i101 ]
  %62 = add nsw i64 %61, 1
  store i64 %62, ptr %memberidx.i.i97, align 4
  %63 = getelementptr inbounds ptr, ptr %60, i64 %61
  store ptr %51, ptr %63, align 8
  br label %ifend4

if.entry11:                                       ; preds = %else
  %64 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %64, ptr noundef nonnull align 8 dereferenceable(12) @66, i64 12, i1 false)
  %65 = tail call ptr @malloc(i32 24)
  store ptr %64, ptr %65, align 8
  %memberidx1.i.i103 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i103, align 4
  %memberidx2.i.i104 = getelementptr inbounds %String, ptr %65, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i104, align 4
  %memberidx.i105 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i105, align 8
  %67 = tail call ptr @malloc(i32 24)
  %68 = load ptr, ptr %memberidx, align 8
  %memberidx2.i107 = getelementptr inbounds %Token, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %memberidx2.i107, align 8
  store i64 2, ptr %67, align 4
  %memberidx1.i.i108 = getelementptr inbounds %FloError, ptr %67, i64 0, i32 2
  store ptr %69, ptr %memberidx1.i.i108, align 8
  %memberidx2.i.i109 = getelementptr inbounds %FloError, ptr %67, i64 0, i32 1
  store ptr %65, ptr %memberidx2.i.i109, align 8
  %memberidx.i.i110 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 1
  %70 = load i64, ptr %memberidx.i.i110, align 4
  %memberidx1.i4.i111 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 2
  %71 = load i64, ptr %memberidx1.i4.i111, align 4
  %.not.i.i112 = icmp slt i64 %70, %71
  br i1 %.not.i.i112, label %if.entry11.Parser_error.exit115_crit_edge, label %if.entry.i.i114

if.entry11.Parser_error.exit115_crit_edge:        ; preds = %if.entry11
  %.pre211 = load ptr, ptr %66, align 8
  br label %Parser_error.exit115

if.entry.i.i114:                                  ; preds = %if.entry11
  %72 = shl nuw i64 %71, 1
  store i64 %72, ptr %memberidx1.i4.i111, align 4
  %73 = load ptr, ptr %66, align 8
  %74 = shl i64 %71, 4
  %75 = tail call ptr @realloc(ptr %73, i64 %74)
  store ptr %75, ptr %66, align 8
  %.pre210 = load i64, ptr %memberidx.i.i110, align 4
  br label %Parser_error.exit115

Parser_error.exit115:                             ; preds = %if.entry11.Parser_error.exit115_crit_edge, %if.entry.i.i114
  %76 = phi ptr [ %.pre211, %if.entry11.Parser_error.exit115_crit_edge ], [ %75, %if.entry.i.i114 ]
  %77 = phi i64 [ %70, %if.entry11.Parser_error.exit115_crit_edge ], [ %.pre210, %if.entry.i.i114 ]
  %78 = add nsw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i110, align 4
  %79 = getelementptr inbounds ptr, ptr %76, i64 %77
  store ptr %67, ptr %79, align 8
  br label %ifend4

if.entry14:                                       ; preds = %else
  %80 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %80, ptr noundef nonnull align 8 dereferenceable(12) @67, i64 12, i1 false)
  %81 = tail call ptr @malloc(i32 24)
  store ptr %80, ptr %81, align 8
  %memberidx1.i.i116 = getelementptr inbounds %String, ptr %81, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i116, align 4
  %memberidx2.i.i117 = getelementptr inbounds %String, ptr %81, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i117, align 4
  %memberidx.i118 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i118, align 8
  %83 = tail call ptr @malloc(i32 24)
  %84 = load ptr, ptr %memberidx, align 8
  %memberidx2.i120 = getelementptr inbounds %Token, ptr %84, i64 0, i32 1
  %85 = load ptr, ptr %memberidx2.i120, align 8
  store i64 2, ptr %83, align 4
  %memberidx1.i.i121 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 2
  store ptr %85, ptr %memberidx1.i.i121, align 8
  %memberidx2.i.i122 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 1
  store ptr %81, ptr %memberidx2.i.i122, align 8
  %memberidx.i.i123 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 1
  %86 = load i64, ptr %memberidx.i.i123, align 4
  %memberidx1.i4.i124 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 2
  %87 = load i64, ptr %memberidx1.i4.i124, align 4
  %.not.i.i125 = icmp slt i64 %86, %87
  br i1 %.not.i.i125, label %if.entry14.Parser_error.exit128_crit_edge, label %if.entry.i.i127

if.entry14.Parser_error.exit128_crit_edge:        ; preds = %if.entry14
  %.pre209 = load ptr, ptr %82, align 8
  br label %Parser_error.exit128

if.entry.i.i127:                                  ; preds = %if.entry14
  %88 = shl nuw i64 %87, 1
  store i64 %88, ptr %memberidx1.i4.i124, align 4
  %89 = load ptr, ptr %82, align 8
  %90 = shl i64 %87, 4
  %91 = tail call ptr @realloc(ptr %89, i64 %90)
  store ptr %91, ptr %82, align 8
  %.pre208 = load i64, ptr %memberidx.i.i123, align 4
  br label %Parser_error.exit128

Parser_error.exit128:                             ; preds = %if.entry14.Parser_error.exit128_crit_edge, %if.entry.i.i127
  %92 = phi ptr [ %.pre209, %if.entry14.Parser_error.exit128_crit_edge ], [ %91, %if.entry.i.i127 ]
  %93 = phi i64 [ %86, %if.entry14.Parser_error.exit128_crit_edge ], [ %.pre208, %if.entry.i.i127 ]
  %94 = add nsw i64 %93, 1
  store i64 %94, ptr %memberidx.i.i123, align 4
  %95 = getelementptr inbounds ptr, ptr %92, i64 %93
  store ptr %83, ptr %95, align 8
  br label %ifend4

if.entry17:                                       ; preds = %else
  %96 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %96, ptr noundef nonnull align 8 dereferenceable(12) @68, i64 12, i1 false)
  %97 = tail call ptr @malloc(i32 24)
  store ptr %96, ptr %97, align 8
  %memberidx1.i.i129 = getelementptr inbounds %String, ptr %97, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i129, align 4
  %memberidx2.i.i130 = getelementptr inbounds %String, ptr %97, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i130, align 4
  %memberidx.i131 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %98 = load ptr, ptr %memberidx.i131, align 8
  %99 = tail call ptr @malloc(i32 24)
  %100 = load ptr, ptr %memberidx, align 8
  %memberidx2.i133 = getelementptr inbounds %Token, ptr %100, i64 0, i32 1
  %101 = load ptr, ptr %memberidx2.i133, align 8
  store i64 2, ptr %99, align 4
  %memberidx1.i.i134 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 2
  store ptr %101, ptr %memberidx1.i.i134, align 8
  %memberidx2.i.i135 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 1
  store ptr %97, ptr %memberidx2.i.i135, align 8
  %memberidx.i.i136 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %102 = load i64, ptr %memberidx.i.i136, align 4
  %memberidx1.i4.i137 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 2
  %103 = load i64, ptr %memberidx1.i4.i137, align 4
  %.not.i.i138 = icmp slt i64 %102, %103
  br i1 %.not.i.i138, label %if.entry17.Parser_error.exit141_crit_edge, label %if.entry.i.i140

if.entry17.Parser_error.exit141_crit_edge:        ; preds = %if.entry17
  %.pre207 = load ptr, ptr %98, align 8
  br label %Parser_error.exit141

if.entry.i.i140:                                  ; preds = %if.entry17
  %104 = shl nuw i64 %103, 1
  store i64 %104, ptr %memberidx1.i4.i137, align 4
  %105 = load ptr, ptr %98, align 8
  %106 = shl i64 %103, 4
  %107 = tail call ptr @realloc(ptr %105, i64 %106)
  store ptr %107, ptr %98, align 8
  %.pre206 = load i64, ptr %memberidx.i.i136, align 4
  br label %Parser_error.exit141

Parser_error.exit141:                             ; preds = %if.entry17.Parser_error.exit141_crit_edge, %if.entry.i.i140
  %108 = phi ptr [ %.pre207, %if.entry17.Parser_error.exit141_crit_edge ], [ %107, %if.entry.i.i140 ]
  %109 = phi i64 [ %102, %if.entry17.Parser_error.exit141_crit_edge ], [ %.pre206, %if.entry.i.i140 ]
  %110 = add nsw i64 %109, 1
  store i64 %110, ptr %memberidx.i.i136, align 4
  %111 = getelementptr inbounds ptr, ptr %108, i64 %109
  store ptr %99, ptr %111, align 8
  br label %ifend4

if.entry20:                                       ; preds = %else
  %112 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %112, ptr noundef nonnull align 8 dereferenceable(12) @69, i64 12, i1 false)
  %113 = tail call ptr @malloc(i32 24)
  store ptr %112, ptr %113, align 8
  %memberidx1.i.i142 = getelementptr inbounds %String, ptr %113, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i142, align 4
  %memberidx2.i.i143 = getelementptr inbounds %String, ptr %113, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i143, align 4
  %memberidx.i144 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %114 = load ptr, ptr %memberidx.i144, align 8
  %115 = tail call ptr @malloc(i32 24)
  %116 = load ptr, ptr %memberidx, align 8
  %memberidx2.i146 = getelementptr inbounds %Token, ptr %116, i64 0, i32 1
  %117 = load ptr, ptr %memberidx2.i146, align 8
  store i64 2, ptr %115, align 4
  %memberidx1.i.i147 = getelementptr inbounds %FloError, ptr %115, i64 0, i32 2
  store ptr %117, ptr %memberidx1.i.i147, align 8
  %memberidx2.i.i148 = getelementptr inbounds %FloError, ptr %115, i64 0, i32 1
  store ptr %113, ptr %memberidx2.i.i148, align 8
  %memberidx.i.i149 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 1
  %118 = load i64, ptr %memberidx.i.i149, align 4
  %memberidx1.i4.i150 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 2
  %119 = load i64, ptr %memberidx1.i4.i150, align 4
  %.not.i.i151 = icmp slt i64 %118, %119
  br i1 %.not.i.i151, label %if.entry20.Parser_error.exit154_crit_edge, label %if.entry.i.i153

if.entry20.Parser_error.exit154_crit_edge:        ; preds = %if.entry20
  %.pre205 = load ptr, ptr %114, align 8
  br label %Parser_error.exit154

if.entry.i.i153:                                  ; preds = %if.entry20
  %120 = shl nuw i64 %119, 1
  store i64 %120, ptr %memberidx1.i4.i150, align 4
  %121 = load ptr, ptr %114, align 8
  %122 = shl i64 %119, 4
  %123 = tail call ptr @realloc(ptr %121, i64 %122)
  store ptr %123, ptr %114, align 8
  %.pre204 = load i64, ptr %memberidx.i.i149, align 4
  br label %Parser_error.exit154

Parser_error.exit154:                             ; preds = %if.entry20.Parser_error.exit154_crit_edge, %if.entry.i.i153
  %124 = phi ptr [ %.pre205, %if.entry20.Parser_error.exit154_crit_edge ], [ %123, %if.entry.i.i153 ]
  %125 = phi i64 [ %118, %if.entry20.Parser_error.exit154_crit_edge ], [ %.pre204, %if.entry.i.i153 ]
  %126 = add nsw i64 %125, 1
  store i64 %126, ptr %memberidx.i.i149, align 4
  %127 = getelementptr inbounds ptr, ptr %124, i64 %125
  store ptr %115, ptr %127, align 8
  br label %ifend4

if.entry23:                                       ; preds = %else
  %128 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %128, ptr noundef nonnull align 8 dereferenceable(12) @70, i64 12, i1 false)
  %129 = tail call ptr @malloc(i32 24)
  store ptr %128, ptr %129, align 8
  %memberidx1.i.i155 = getelementptr inbounds %String, ptr %129, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i155, align 4
  %memberidx2.i.i156 = getelementptr inbounds %String, ptr %129, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i156, align 4
  %memberidx.i157 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i157, align 8
  %131 = tail call ptr @malloc(i32 24)
  %132 = load ptr, ptr %memberidx, align 8
  %memberidx2.i159 = getelementptr inbounds %Token, ptr %132, i64 0, i32 1
  %133 = load ptr, ptr %memberidx2.i159, align 8
  store i64 2, ptr %131, align 4
  %memberidx1.i.i160 = getelementptr inbounds %FloError, ptr %131, i64 0, i32 2
  store ptr %133, ptr %memberidx1.i.i160, align 8
  %memberidx2.i.i161 = getelementptr inbounds %FloError, ptr %131, i64 0, i32 1
  store ptr %129, ptr %memberidx2.i.i161, align 8
  %memberidx.i.i162 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 1
  %134 = load i64, ptr %memberidx.i.i162, align 4
  %memberidx1.i4.i163 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 2
  %135 = load i64, ptr %memberidx1.i4.i163, align 4
  %.not.i.i164 = icmp slt i64 %134, %135
  br i1 %.not.i.i164, label %if.entry23.Parser_error.exit167_crit_edge, label %if.entry.i.i166

if.entry23.Parser_error.exit167_crit_edge:        ; preds = %if.entry23
  %.pre203 = load ptr, ptr %130, align 8
  br label %Parser_error.exit167

if.entry.i.i166:                                  ; preds = %if.entry23
  %136 = shl nuw i64 %135, 1
  store i64 %136, ptr %memberidx1.i4.i163, align 4
  %137 = load ptr, ptr %130, align 8
  %138 = shl i64 %135, 4
  %139 = tail call ptr @realloc(ptr %137, i64 %138)
  store ptr %139, ptr %130, align 8
  %.pre202 = load i64, ptr %memberidx.i.i162, align 4
  br label %Parser_error.exit167

Parser_error.exit167:                             ; preds = %if.entry23.Parser_error.exit167_crit_edge, %if.entry.i.i166
  %140 = phi ptr [ %.pre203, %if.entry23.Parser_error.exit167_crit_edge ], [ %139, %if.entry.i.i166 ]
  %141 = phi i64 [ %134, %if.entry23.Parser_error.exit167_crit_edge ], [ %.pre202, %if.entry.i.i166 ]
  %142 = add nsw i64 %141, 1
  store i64 %142, ptr %memberidx.i.i162, align 4
  %143 = getelementptr inbounds ptr, ptr %140, i64 %141
  store ptr %131, ptr %143, align 8
  br label %ifend4

if.entry26:                                       ; preds = %else
  %144 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %144, ptr noundef nonnull align 8 dereferenceable(12) @71, i64 12, i1 false)
  %145 = tail call ptr @malloc(i32 24)
  store ptr %144, ptr %145, align 8
  %memberidx1.i.i168 = getelementptr inbounds %String, ptr %145, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i168, align 4
  %memberidx2.i.i169 = getelementptr inbounds %String, ptr %145, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i169, align 4
  %memberidx.i170 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %146 = load ptr, ptr %memberidx.i170, align 8
  %147 = tail call ptr @malloc(i32 24)
  %148 = load ptr, ptr %memberidx, align 8
  %memberidx2.i172 = getelementptr inbounds %Token, ptr %148, i64 0, i32 1
  %149 = load ptr, ptr %memberidx2.i172, align 8
  store i64 2, ptr %147, align 4
  %memberidx1.i.i173 = getelementptr inbounds %FloError, ptr %147, i64 0, i32 2
  store ptr %149, ptr %memberidx1.i.i173, align 8
  %memberidx2.i.i174 = getelementptr inbounds %FloError, ptr %147, i64 0, i32 1
  store ptr %145, ptr %memberidx2.i.i174, align 8
  %memberidx.i.i175 = getelementptr inbounds %Array_FloError_, ptr %146, i64 0, i32 1
  %150 = load i64, ptr %memberidx.i.i175, align 4
  %memberidx1.i4.i176 = getelementptr inbounds %Array_FloError_, ptr %146, i64 0, i32 2
  %151 = load i64, ptr %memberidx1.i4.i176, align 4
  %.not.i.i177 = icmp slt i64 %150, %151
  br i1 %.not.i.i177, label %if.entry26.Parser_error.exit180_crit_edge, label %if.entry.i.i179

if.entry26.Parser_error.exit180_crit_edge:        ; preds = %if.entry26
  %.pre201 = load ptr, ptr %146, align 8
  br label %Parser_error.exit180

if.entry.i.i179:                                  ; preds = %if.entry26
  %152 = shl nuw i64 %151, 1
  store i64 %152, ptr %memberidx1.i4.i176, align 4
  %153 = load ptr, ptr %146, align 8
  %154 = shl i64 %151, 4
  %155 = tail call ptr @realloc(ptr %153, i64 %154)
  store ptr %155, ptr %146, align 8
  %.pre200 = load i64, ptr %memberidx.i.i175, align 4
  br label %Parser_error.exit180

Parser_error.exit180:                             ; preds = %if.entry26.Parser_error.exit180_crit_edge, %if.entry.i.i179
  %156 = phi ptr [ %.pre201, %if.entry26.Parser_error.exit180_crit_edge ], [ %155, %if.entry.i.i179 ]
  %157 = phi i64 [ %150, %if.entry26.Parser_error.exit180_crit_edge ], [ %.pre200, %if.entry.i.i179 ]
  %158 = add nsw i64 %157, 1
  store i64 %158, ptr %memberidx.i.i175, align 4
  %159 = getelementptr inbounds ptr, ptr %156, i64 %157
  store ptr %147, ptr %159, align 8
  br label %ifend4

if.entry29:                                       ; preds = %else
  %160 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %160, ptr noundef nonnull align 8 dereferenceable(12) @72, i64 12, i1 false)
  %161 = tail call ptr @malloc(i32 24)
  store ptr %160, ptr %161, align 8
  %memberidx1.i.i181 = getelementptr inbounds %String, ptr %161, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i181, align 4
  %memberidx2.i.i182 = getelementptr inbounds %String, ptr %161, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i182, align 4
  %memberidx.i183 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %162 = load ptr, ptr %memberidx.i183, align 8
  %163 = tail call ptr @malloc(i32 24)
  %164 = load ptr, ptr %memberidx, align 8
  %memberidx2.i185 = getelementptr inbounds %Token, ptr %164, i64 0, i32 1
  %165 = load ptr, ptr %memberidx2.i185, align 8
  store i64 2, ptr %163, align 4
  %memberidx1.i.i186 = getelementptr inbounds %FloError, ptr %163, i64 0, i32 2
  store ptr %165, ptr %memberidx1.i.i186, align 8
  %memberidx2.i.i187 = getelementptr inbounds %FloError, ptr %163, i64 0, i32 1
  store ptr %161, ptr %memberidx2.i.i187, align 8
  %memberidx.i.i188 = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 1
  %166 = load i64, ptr %memberidx.i.i188, align 4
  %memberidx1.i4.i189 = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 2
  %167 = load i64, ptr %memberidx1.i4.i189, align 4
  %.not.i.i190 = icmp slt i64 %166, %167
  br i1 %.not.i.i190, label %if.entry29.Parser_error.exit193_crit_edge, label %if.entry.i.i192

if.entry29.Parser_error.exit193_crit_edge:        ; preds = %if.entry29
  %.pre199 = load ptr, ptr %162, align 8
  br label %Parser_error.exit193

if.entry.i.i192:                                  ; preds = %if.entry29
  %168 = shl nuw i64 %167, 1
  store i64 %168, ptr %memberidx1.i4.i189, align 4
  %169 = load ptr, ptr %162, align 8
  %170 = shl i64 %167, 4
  %171 = tail call ptr @realloc(ptr %169, i64 %170)
  store ptr %171, ptr %162, align 8
  %.pre198 = load i64, ptr %memberidx.i.i188, align 4
  br label %Parser_error.exit193

Parser_error.exit193:                             ; preds = %if.entry29.Parser_error.exit193_crit_edge, %if.entry.i.i192
  %172 = phi ptr [ %.pre199, %if.entry29.Parser_error.exit193_crit_edge ], [ %171, %if.entry.i.i192 ]
  %173 = phi i64 [ %166, %if.entry29.Parser_error.exit193_crit_edge ], [ %.pre198, %if.entry.i.i192 ]
  %174 = add nsw i64 %173, 1
  store i64 %174, ptr %memberidx.i.i188, align 4
  %175 = getelementptr inbounds ptr, ptr %172, i64 %173
  store ptr %163, ptr %175, align 8
  br label %ifend4

if.entry32:                                       ; preds = %else
  %176 = tail call ptr @malloc(i32 13)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %176, ptr noundef nonnull align 8 dereferenceable(13) @73, i64 13, i1 false)
  %177 = tail call ptr @malloc(i32 24)
  store ptr %176, ptr %177, align 8
  %memberidx1.i.i194 = getelementptr inbounds %String, ptr %177, i64 0, i32 1
  store i64 13, ptr %memberidx1.i.i194, align 4
  %memberidx2.i.i195 = getelementptr inbounds %String, ptr %177, i64 0, i32 2
  store i64 13, ptr %memberidx2.i.i195, align 4
  %memberidx.i61 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %178 = load ptr, ptr %memberidx.i61, align 8
  %179 = tail call ptr @malloc(i32 24)
  %180 = load ptr, ptr %memberidx, align 8
  %memberidx2.i62 = getelementptr inbounds %Token, ptr %180, i64 0, i32 1
  %181 = load ptr, ptr %memberidx2.i62, align 8
  store i64 2, ptr %179, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %179, i64 0, i32 2
  store ptr %181, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %179, i64 0, i32 1
  store ptr %177, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 1
  %182 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 2
  %183 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %182, %183
  br i1 %.not.i.i, label %if.entry32.Parser_error.exit_crit_edge, label %if.entry.i.i

if.entry32.Parser_error.exit_crit_edge:           ; preds = %if.entry32
  %.pre197 = load ptr, ptr %178, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %if.entry32
  %184 = shl nuw i64 %183, 1
  store i64 %184, ptr %memberidx1.i4.i, align 4
  %185 = load ptr, ptr %178, align 8
  %186 = shl i64 %183, 4
  %187 = tail call ptr @realloc(ptr %185, i64 %186)
  store ptr %187, ptr %178, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry32.Parser_error.exit_crit_edge, %if.entry.i.i
  %188 = phi ptr [ %.pre197, %if.entry32.Parser_error.exit_crit_edge ], [ %187, %if.entry.i.i ]
  %189 = phi i64 [ %182, %if.entry32.Parser_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %190 = add nsw i64 %189, 1
  store i64 %190, ptr %memberidx.i.i, align 4
  %191 = getelementptr inbounds ptr, ptr %188, i64 %189
  store ptr %179, ptr %191, align 8
  br label %ifend4
}

define internal fastcc ptr @Parser_parse_array_expression(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %2, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %ArrayExpressionNode, ptr %2, i64 0, i32 3
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i3.i = getelementptr inbounds %Array_ExpressionNode_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i3.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i3.i, align 4
  store ptr %5, ptr %memberidx.i, align 8
  %memberidx.i12 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %7 = load i64, ptr %memberidx.i12, align 4
  %8 = load ptr, ptr %0, align 8
  %memberidx2.i13 = getelementptr inbounds %Array_Token_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i13, align 4
  %10 = icmp slt i64 %7, %9
  br i1 %10, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %11 = add nsw i64 %7, 1
  store i64 %11, ptr %memberidx.i12, align 4
  %12 = load ptr, ptr %8, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  store ptr %14, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %5, i64 30)
  %15 = load ptr, ptr %memberidx, align 8
  %16 = load i64, ptr %15, align 4
  %17 = icmp eq i64 %16, 30
  br i1 %17, label %if.entry.i16, label %else.i

if.entry.i16:                                     ; preds = %Parser_advance.exit
  %18 = load i64, ptr %memberidx.i12, align 4
  %19 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx2.i.i, align 4
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i16
  %22 = add nsw i64 %18, 1
  store i64 %22, ptr %memberidx.i12, align 4
  %23 = load ptr, ptr %19, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  store ptr %25, ptr %memberidx, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %Parser_advance.exit
  %26 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %15, i64 0, i32 1
  %27 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %26, align 4
  %memberidx1.i76.i = getelementptr inbounds %Token, ptr %26, i64 0, i32 1
  store ptr %27, ptr %memberidx1.i76.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i16, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %26, %else.i ], [ %15, %if.entry.i.i ], [ %15, %if.entry.i16 ]
  %memberidx5 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %28 = load ptr, ptr %memberidx5, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i17 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i17, align 4
  %memberidx3.i18 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i18, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i19 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i19, align 4
  %memberidx2.i.i20 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i20, align 4
  %memberidx3.i.i21 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i21, align 4
  store ptr %29, ptr %2, align 8
  ret ptr %2
}

define internal fastcc ptr @Parser_parse_new_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %12 = tail call ptr @malloc(i32 41)
  %13 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i14 = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 3
  store ptr %13, ptr %memberidx.i14, align 8
  %memberidx1.i = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 4
  store i1 true, ptr %memberidx1.i, align 1
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %12, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %12, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i, align 4
  %memberidx2.i15 = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 5
  %14 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_ExpressionNode_, ptr %14, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %14, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %14, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %14, ptr %memberidx2.i15, align 8
  %16 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 25)
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %14, i64 26)
  %17 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx5 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx5, align 8
  %19 = tail call ptr @malloc(i32 32)
  %20 = load i64, ptr %3, align 4
  %memberidx1.i16 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 1
  %21 = load i64, ptr %memberidx1.i16, align 4
  %memberidx2.i17 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i17, align 4
  %memberidx3.i18 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 3
  %23 = load i64, ptr %memberidx3.i18, align 4
  store i64 %20, ptr %19, align 4
  %memberidx1.i.i19 = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 1
  store i64 %21, ptr %memberidx1.i.i19, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 3
  store i64 %23, ptr %memberidx3.i.i, align 4
  store ptr %19, ptr %12, align 8
  ret ptr %12
}

define internal fastcc ptr @Parser_parse_term_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend7.i [
    i64 4, label %Parser_is_term_expr_op.exit
    i64 7, label %Parser_is_term_expr_op.exit.fold.split
    i64 10, label %Parser_is_term_expr_op.exit.fold.split29
  ]

ifend7.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 11
  %spec.select.i = select i1 %5, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split:           ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split29:         ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit:                      ; preds = %1, %Parser_is_term_expr_op.exit.fold.split29, %Parser_is_term_expr_op.exit.fold.split, %ifend7.i
  %common.ret.op.i = phi i64 [ 3, %1 ], [ %spec.select.i, %ifend7.i ], [ 4, %Parser_is_term_expr_op.exit.fold.split ], [ 5, %Parser_is_term_expr_op.exit.fold.split29 ]
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 46
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx3.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_is_term_expr_op.exit
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_term_expr_op.exit23
  %op.0 = phi i64 [ %common.ret.op.i18, %Parser_is_term_expr_op.exit23 ], [ %common.ret.op.i, %while.entry.preheader ]
  %unary.0 = phi ptr [ %21, %Parser_is_term_expr_op.exit23 ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %23 = load ptr, ptr %unary.0, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i15 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %unary.0, ptr %memberidx2.i15, align 8
  %memberidx3.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i16, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  switch i64 %31, label %ifend7.i22 [
    i64 4, label %Parser_is_term_expr_op.exit23
    i64 7, label %Parser_is_term_expr_op.exit23.fold.split
    i64 10, label %Parser_is_term_expr_op.exit23.fold.split30
  ]

ifend7.i22:                                       ; preds = %Parser_advance.exit
  %32 = icmp eq i64 %31, 11
  %spec.select.i21 = select i1 %32, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit23

Parser_is_term_expr_op.exit23.fold.split:         ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit23

Parser_is_term_expr_op.exit23.fold.split30:       ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit23

Parser_is_term_expr_op.exit23:                    ; preds = %Parser_advance.exit, %Parser_is_term_expr_op.exit23.fold.split30, %Parser_is_term_expr_op.exit23.fold.split, %ifend7.i22
  %common.ret.op.i18 = phi i64 [ 3, %Parser_advance.exit ], [ %spec.select.i21, %ifend7.i22 ], [ 4, %Parser_is_term_expr_op.exit23.fold.split ], [ 5, %Parser_is_term_expr_op.exit23.fold.split30 ]
  %33 = icmp ne i64 %common.ret.op.i18, 0
  %34 = icmp ne i64 %31, 46
  %35 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i26 = getelementptr inbounds %Array_FloError_, ptr %35, i64 0, i32 1
  %36 = load i64, ptr %memberidx3.i26, align 4
  %37 = icmp eq i64 %36, 0
  %38 = and i1 %34, %37
  %39 = and i1 %33, %38
  br i1 %39, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_is_term_expr_op.exit23, %Parser_is_term_expr_op.exit
  %unary.1 = phi ptr [ %2, %Parser_is_term_expr_op.exit ], [ %21, %Parser_is_term_expr_op.exit23 ]
  ret ptr %unary.1
}

define internal fastcc ptr @Parser_parse_arithmetic_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_term_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx3.i, align 4
  %7 = icmp eq i64 %6, 0
  %8 = add i64 %4, -5
  %9 = icmp ult i64 %8, 2
  %10 = and i1 %9, %7
  br i1 %10, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %1
  %11 = icmp eq i64 %4, 6
  %12 = icmp eq i64 %4, 5
  %spec.select.i = select i1 %12, i64 2, i64 0
  %common.ret.op.i = select i1 %11, i64 1, i64 %spec.select.i
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_advance.exit
  %op.0 = phi i64 [ %common.ret.op.i18, %Parser_advance.exit ], [ %common.ret.op.i, %while.entry.preheader ]
  %term.0 = phi ptr [ %21, %Parser_advance.exit ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_term_expression(ptr nonnull %0)
  %23 = load ptr, ptr %term.0, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i14 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %term.0, ptr %memberidx2.i14, align 8
  %memberidx3.i15 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i15, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  %32 = icmp eq i64 %31, 6
  %33 = icmp eq i64 %31, 5
  %spec.select.i17 = select i1 %33, i64 2, i64 0
  %common.ret.op.i18 = select i1 %32, i64 1, i64 %spec.select.i17
  %34 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i21 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 1
  %35 = load i64, ptr %memberidx3.i21, align 4
  %36 = icmp eq i64 %35, 0
  %37 = add i64 %31, -5
  %38 = icmp ult i64 %37, 2
  %39 = and i1 %38, %36
  br i1 %39, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_advance.exit, %1
  %term.1 = phi ptr [ %2, %1 ], [ %21, %Parser_advance.exit ]
  ret ptr %term.1
}

define internal fastcc ptr @Parser_parse_bitshift_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend4.i [
    i64 48, label %Parser_is_bitshift_expr_op.exit
    i64 49, label %Parser_is_bitshift_expr_op.exit.fold.split
  ]

ifend4.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 51
  %spec.select.i = select i1 %5, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit.fold.split:       ; preds = %1
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit:                  ; preds = %1, %Parser_is_bitshift_expr_op.exit.fold.split, %ifend4.i
  %common.ret.op.i = phi i64 [ 13, %1 ], [ %spec.select.i, %ifend4.i ], [ 14, %Parser_is_bitshift_expr_op.exit.fold.split ]
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 46
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx3.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_is_bitshift_expr_op.exit
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_bitshift_expr_op.exit22
  %op.0 = phi i64 [ %common.ret.op.i18, %Parser_is_bitshift_expr_op.exit22 ], [ %common.ret.op.i, %while.entry.preheader ]
  %arith.0 = phi ptr [ %21, %Parser_is_bitshift_expr_op.exit22 ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr nonnull %0)
  %23 = load ptr, ptr %arith.0, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i15 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %arith.0, ptr %memberidx2.i15, align 8
  %memberidx3.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i16, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  switch i64 %31, label %ifend4.i21 [
    i64 48, label %Parser_is_bitshift_expr_op.exit22
    i64 49, label %Parser_is_bitshift_expr_op.exit22.fold.split
  ]

ifend4.i21:                                       ; preds = %Parser_advance.exit
  %32 = icmp eq i64 %31, 51
  %spec.select.i20 = select i1 %32, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit22

Parser_is_bitshift_expr_op.exit22.fold.split:     ; preds = %Parser_advance.exit
  br label %Parser_is_bitshift_expr_op.exit22

Parser_is_bitshift_expr_op.exit22:                ; preds = %Parser_advance.exit, %Parser_is_bitshift_expr_op.exit22.fold.split, %ifend4.i21
  %common.ret.op.i18 = phi i64 [ 13, %Parser_advance.exit ], [ %spec.select.i20, %ifend4.i21 ], [ 14, %Parser_is_bitshift_expr_op.exit22.fold.split ]
  %33 = icmp ne i64 %common.ret.op.i18, 0
  %34 = icmp ne i64 %31, 46
  %35 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i25 = getelementptr inbounds %Array_FloError_, ptr %35, i64 0, i32 1
  %36 = load i64, ptr %memberidx3.i25, align 4
  %37 = icmp eq i64 %36, 0
  %38 = and i1 %34, %37
  %39 = and i1 %33, %38
  br i1 %39, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_is_bitshift_expr_op.exit22, %Parser_is_bitshift_expr_op.exit
  %arith.1 = phi ptr [ %2, %Parser_is_bitshift_expr_op.exit ], [ %21, %Parser_is_bitshift_expr_op.exit22 ]
  ret ptr %arith.1
}

define internal fastcc ptr @Parser_parse_comparison_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 47
  br i1 %4, label %if.entry, label %ifend

common.ret61:                                     ; preds = %Parser_is_comp_expr_op.exit48, %Parser_is_comp_expr_op.exit, %Parser_advance.exit
  %common.ret61.op = phi ptr [ %15, %Parser_advance.exit ], [ %22, %Parser_is_comp_expr_op.exit ], [ %41, %Parser_is_comp_expr_op.exit48 ]
  ret ptr %common.ret61.op

if.entry:                                         ; preds = %1
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %5 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %7, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  store ptr %13, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  %14 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %15 = tail call ptr @malloc(i32 40)
  %16 = load ptr, ptr %14, align 8
  %17 = tail call ptr @malloc(i32 32)
  %18 = load i64, ptr %5, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 1
  %19 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i19 = getelementptr inbounds %FloRange, ptr %5, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i19, align 4
  %memberidx3.i20 = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 3
  %21 = load i64, ptr %memberidx3.i20, align 4
  store i64 %18, ptr %17, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  store i64 %21, ptr %memberidx3.i.i, align 4
  %memberidx.i21 = getelementptr inbounds %UnaryExpressionNode, ptr %15, i64 0, i32 3
  store i64 7, ptr %memberidx.i21, align 4
  %memberidx1.i22 = getelementptr inbounds %UnaryExpressionNode, ptr %15, i64 0, i32 4
  store ptr %14, ptr %memberidx1.i22, align 8
  store ptr %17, ptr %15, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %15, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %15, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i, align 4
  br label %common.ret61

ifend:                                            ; preds = %1
  %22 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %23 = load ptr, ptr %memberidx, align 8
  %24 = load i64, ptr %23, align 4
  switch i64 %24, label %ifend13.i [
    i64 41, label %Parser_is_comp_expr_op.exit
    i64 42, label %Parser_is_comp_expr_op.exit.fold.split
    i64 44, label %Parser_is_comp_expr_op.exit.fold.split55
    i64 43, label %Parser_is_comp_expr_op.exit.fold.split56
    i64 39, label %Parser_is_comp_expr_op.exit.fold.split57
  ]

ifend13.i:                                        ; preds = %ifend
  %25 = icmp eq i64 %24, 40
  %spec.select.i = select i1 %25, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split:           ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split55:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split56:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split57:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit:                      ; preds = %ifend, %Parser_is_comp_expr_op.exit.fold.split57, %Parser_is_comp_expr_op.exit.fold.split56, %Parser_is_comp_expr_op.exit.fold.split55, %Parser_is_comp_expr_op.exit.fold.split, %ifend13.i
  %common.ret.op.i = phi i64 [ 7, %ifend ], [ %spec.select.i, %ifend13.i ], [ 9, %Parser_is_comp_expr_op.exit.fold.split ], [ 8, %Parser_is_comp_expr_op.exit.fold.split55 ], [ 10, %Parser_is_comp_expr_op.exit.fold.split56 ], [ 11, %Parser_is_comp_expr_op.exit.fold.split57 ]
  %26 = icmp ne i64 %common.ret.op.i, 0
  %27 = icmp ne i64 %24, 46
  %memberidx2.i25 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %28 = load ptr, ptr %memberidx2.i25, align 8
  %memberidx3.i26 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx3.i26, align 4
  %30 = icmp eq i64 %29, 0
  %31 = and i1 %27, %30
  %32 = and i1 %26, %31
  br i1 %32, label %while.entry.preheader, label %common.ret61

while.entry.preheader:                            ; preds = %Parser_is_comp_expr_op.exit
  %memberidx.i27 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_comp_expr_op.exit48
  %bit.0 = phi ptr [ %41, %Parser_is_comp_expr_op.exit48 ], [ %22, %while.entry.preheader ]
  %op.0 = phi i64 [ %common.ret.op.i41, %Parser_is_comp_expr_op.exit48 ], [ %common.ret.op.i, %while.entry.preheader ]
  %33 = load i64, ptr %memberidx.i27, align 4
  %34 = load ptr, ptr %0, align 8
  %memberidx2.i28 = getelementptr inbounds %Array_Token_, ptr %34, i64 0, i32 1
  %35 = load i64, ptr %memberidx2.i28, align 4
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %if.entry.i30, label %Parser_advance.exit32

if.entry.i30:                                     ; preds = %while.entry
  %37 = add nsw i64 %33, 1
  store i64 %37, ptr %memberidx.i27, align 4
  %38 = load ptr, ptr %34, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  store ptr %40, ptr %memberidx, align 8
  br label %Parser_advance.exit32

Parser_advance.exit32:                            ; preds = %while.entry, %if.entry.i30
  %41 = tail call ptr @malloc(i32 48)
  %42 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %43 = load ptr, ptr %bit.0, align 8
  %44 = load ptr, ptr %42, align 8
  %45 = tail call ptr @malloc(i32 32)
  %46 = load i64, ptr %43, align 4
  %memberidx1.i.i33 = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  %47 = load i64, ptr %memberidx1.i.i33, align 4
  %memberidx2.i.i34 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 2
  %48 = load i64, ptr %memberidx2.i.i34, align 4
  %memberidx3.i.i35 = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  %49 = load i64, ptr %memberidx3.i.i35, align 4
  store i64 %46, ptr %45, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 1
  store i64 %47, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 2
  store i64 %48, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 3
  store i64 %49, ptr %memberidx3.i.i.i, align 4
  store ptr %45, ptr %41, align 8
  %memberidx.i.i.i36 = getelementptr inbounds %StatementNode, ptr %41, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i36, align 4
  %memberidx.i.i37 = getelementptr inbounds %ExpressionNode, ptr %41, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i37, align 4
  %memberidx2.i38 = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 3
  store ptr %bit.0, ptr %memberidx2.i38, align 8
  %memberidx3.i39 = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i39, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 5
  store ptr %42, ptr %memberidx4.i, align 8
  %50 = load ptr, ptr %memberidx, align 8
  %51 = load i64, ptr %50, align 4
  switch i64 %51, label %ifend13.i47 [
    i64 41, label %Parser_is_comp_expr_op.exit48
    i64 42, label %Parser_is_comp_expr_op.exit48.fold.split
    i64 44, label %Parser_is_comp_expr_op.exit48.fold.split58
    i64 43, label %Parser_is_comp_expr_op.exit48.fold.split59
    i64 39, label %Parser_is_comp_expr_op.exit48.fold.split60
  ]

ifend13.i47:                                      ; preds = %Parser_advance.exit32
  %52 = icmp eq i64 %51, 40
  %spec.select.i46 = select i1 %52, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit48

Parser_is_comp_expr_op.exit48.fold.split:         ; preds = %Parser_advance.exit32
  br label %Parser_is_comp_expr_op.exit48

Parser_is_comp_expr_op.exit48.fold.split58:       ; preds = %Parser_advance.exit32
  br label %Parser_is_comp_expr_op.exit48

Parser_is_comp_expr_op.exit48.fold.split59:       ; preds = %Parser_advance.exit32
  br label %Parser_is_comp_expr_op.exit48

Parser_is_comp_expr_op.exit48.fold.split60:       ; preds = %Parser_advance.exit32
  br label %Parser_is_comp_expr_op.exit48

Parser_is_comp_expr_op.exit48:                    ; preds = %Parser_advance.exit32, %Parser_is_comp_expr_op.exit48.fold.split60, %Parser_is_comp_expr_op.exit48.fold.split59, %Parser_is_comp_expr_op.exit48.fold.split58, %Parser_is_comp_expr_op.exit48.fold.split, %ifend13.i47
  %common.ret.op.i41 = phi i64 [ 7, %Parser_advance.exit32 ], [ %spec.select.i46, %ifend13.i47 ], [ 9, %Parser_is_comp_expr_op.exit48.fold.split ], [ 8, %Parser_is_comp_expr_op.exit48.fold.split58 ], [ 10, %Parser_is_comp_expr_op.exit48.fold.split59 ], [ 11, %Parser_is_comp_expr_op.exit48.fold.split60 ]
  %53 = icmp ne i64 %common.ret.op.i41, 0
  %54 = icmp ne i64 %51, 46
  %55 = load ptr, ptr %memberidx2.i25, align 8
  %memberidx3.i51 = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx3.i51, align 4
  %57 = icmp eq i64 %56, 0
  %58 = and i1 %54, %57
  %59 = and i1 %53, %58
  br i1 %59, label %while.entry, label %common.ret61
}

define internal fastcc ptr @Parser_parse_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 57
  br i1 %4, label %if.entry, label %ifend

common.ret120:                                    ; preds = %Parser_parse_match_expression.exit, %Parser_is_assign_op.exit, %Parser_advance.exit, %Parser_advance.exit46
  %common.ret120.op = phi ptr [ %285, %Parser_advance.exit46 ], [ %307, %Parser_advance.exit ], [ %5, %Parser_parse_match_expression.exit ], [ %common.ret.op.i66, %Parser_is_assign_op.exit ]
  ret ptr %common.ret120.op

if.entry:                                         ; preds = %1
  %5 = tail call ptr @malloc(i32 48)
  %6 = load ptr, ptr %memberidx, align 8
  %7 = load i64, ptr %6, align 4
  %8 = icmp eq i64 %7, 57
  br i1 %8, label %if.entry.i91.i, label %else.i.i

if.entry.i91.i:                                   ; preds = %if.entry
  %memberidx.i.i89.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %9 = load i64, ptr %memberidx.i.i89.i, align 4
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i.i90.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx2.i.i90.i, align 4
  %12 = icmp slt i64 %9, %11
  br i1 %12, label %if.entry.i.i93.i, label %Parser_eat.exit.i

if.entry.i.i93.i:                                 ; preds = %if.entry.i91.i
  %13 = add nsw i64 %9, 1
  store i64 %13, ptr %memberidx.i.i89.i, align 4
  %14 = load ptr, ptr %10, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  store ptr %16, ptr %memberidx, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %if.entry
  %17 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %6, i64 0, i32 1
  %18 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %17, align 4
  %memberidx1.i76.i.i = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  store ptr %18, ptr %memberidx1.i76.i.i, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i91.i, %if.entry.i.i93.i, %else.i.i
  %common.ret.op.i.i = phi ptr [ %17, %else.i.i ], [ %6, %if.entry.i.i93.i ], [ %6, %if.entry.i91.i ]
  %memberidx.i50 = getelementptr inbounds %Token, ptr %common.ret.op.i.i, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i50, align 8
  store ptr %19, ptr %5, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %5, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i84.i = getelementptr inbounds %ExpressionNode, ptr %5, i64 0, i32 2
  store i64 17, ptr %memberidx.i.i84.i, align 4
  %memberidx.i85.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 4
  %20 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i.i = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %20, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i, align 4
  %memberidx1.i.i.i51 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %20, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i51, align 4
  %21 = tail call ptr @malloc(i32 64)
  store ptr %21, ptr %20, align 8
  store i64 0, ptr %memberidx.i5.i.i, align 4
  store ptr %20, ptr %memberidx.i85.i, align 8
  %memberidx3.i87.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 5
  store ptr null, ptr %memberidx3.i87.i, align 8
  %memberidx1.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 3
  %22 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %22, ptr %memberidx1.i, align 8
  %23 = load ptr, ptr %memberidx, align 8
  %24 = load i64, ptr %23, align 4
  %25 = icmp eq i64 %24, 33
  %memberidx2.i.i72.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %26 = load ptr, ptr %memberidx2.i.i72.i, align 8
  %memberidx3.i.i73.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx3.i.i73.i, align 4
  %28 = icmp eq i64 %27, 0
  %29 = and i1 %25, %28
  br i1 %29, label %while.entry.i76.i.preheader, label %Parser_new_lines.exit83.i

while.entry.i76.i.preheader:                      ; preds = %Parser_eat.exit.i
  %memberidx.i11.i74.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %30 = load ptr, ptr %0, align 8
  %memberidx2.i12.i75.i = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i11.i74.i, align 4
  %32 = load i64, ptr %memberidx2.i12.i75.i, align 4
  %33 = icmp slt i64 %31, %32
  br i1 %33, label %while.entry.i76.i, label %while.entry.i76.i.us

while.entry.i76.i.us:                             ; preds = %while.entry.i76.i.preheader, %while.entry.i76.i.us
  br label %while.entry.i76.i.us

while.entry.i76.i:                                ; preds = %while.entry.i76.i.preheader, %Parser_advance.exit.i82.i
  %34 = phi i64 [ %43, %Parser_advance.exit.i82.i ], [ %31, %while.entry.i76.i.preheader ]
  %35 = load i64, ptr %memberidx2.i12.i75.i, align 4
  %36 = icmp slt i64 %34, %35
  br i1 %36, label %if.entry.i.i78.i, label %Parser_advance.exit.i82.i

if.entry.i.i78.i:                                 ; preds = %while.entry.i76.i
  %37 = add nsw i64 %34, 1
  store i64 %37, ptr %memberidx.i11.i74.i, align 4
  %38 = load ptr, ptr %30, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  store ptr %40, ptr %memberidx, align 8
  %.pre139 = load i64, ptr %40, align 4
  %.pre140 = load i64, ptr %memberidx3.i.i73.i, align 4
  br label %Parser_advance.exit.i82.i

Parser_advance.exit.i82.i:                        ; preds = %if.entry.i.i78.i, %while.entry.i76.i
  %41 = phi i64 [ %.pre140, %if.entry.i.i78.i ], [ 0, %while.entry.i76.i ]
  %42 = phi i64 [ %.pre139, %if.entry.i.i78.i ], [ 33, %while.entry.i76.i ]
  %43 = phi i64 [ %37, %if.entry.i.i78.i ], [ %34, %while.entry.i76.i ]
  %44 = icmp eq i64 %42, 33
  %45 = icmp eq i64 %41, 0
  %46 = and i1 %44, %45
  br i1 %46, label %while.entry.i76.i, label %Parser_new_lines.exit83.i

Parser_new_lines.exit83.i:                        ; preds = %Parser_advance.exit.i82.i, %Parser_eat.exit.i
  %47 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 27)
  %48 = load ptr, ptr %memberidx, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 33
  %51 = load ptr, ptr %memberidx2.i.i72.i, align 8
  %memberidx3.i.i59.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx3.i.i59.i, align 4
  %53 = icmp eq i64 %52, 0
  %54 = and i1 %50, %53
  br i1 %54, label %while.entry.i62.i.preheader, label %Parser_new_lines.exit69.i

while.entry.i62.i.preheader:                      ; preds = %Parser_new_lines.exit83.i
  %memberidx.i11.i60.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %55 = load ptr, ptr %0, align 8
  %memberidx2.i12.i61.i = getelementptr inbounds %Array_Token_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx.i11.i60.i, align 4
  %57 = load i64, ptr %memberidx2.i12.i61.i, align 4
  %58 = icmp slt i64 %56, %57
  br i1 %58, label %while.entry.i62.i, label %while.entry.i62.i.us

while.entry.i62.i.us:                             ; preds = %while.entry.i62.i.preheader, %while.entry.i62.i.us
  br label %while.entry.i62.i.us

while.entry.i62.i:                                ; preds = %while.entry.i62.i.preheader, %Parser_advance.exit.i68.i
  %59 = phi i64 [ %67, %Parser_advance.exit.i68.i ], [ 33, %while.entry.i62.i.preheader ]
  %60 = phi i64 [ %70, %Parser_advance.exit.i68.i ], [ %56, %while.entry.i62.i.preheader ]
  %61 = load i64, ptr %memberidx2.i12.i61.i, align 4
  %62 = icmp slt i64 %60, %61
  br i1 %62, label %if.entry.i.i64.i, label %Parser_advance.exit.i68.i

if.entry.i.i64.i:                                 ; preds = %while.entry.i62.i
  %63 = add nsw i64 %60, 1
  store i64 %63, ptr %memberidx.i11.i60.i, align 4
  %64 = load ptr, ptr %55, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  store ptr %66, ptr %memberidx, align 8
  %.pre141 = load i64, ptr %66, align 4
  %.pre142 = load i64, ptr %memberidx3.i.i59.i, align 4
  br label %Parser_advance.exit.i68.i

Parser_advance.exit.i68.i:                        ; preds = %if.entry.i.i64.i, %while.entry.i62.i
  %67 = phi i64 [ %.pre141, %if.entry.i.i64.i ], [ %59, %while.entry.i62.i ]
  %68 = phi i64 [ %.pre142, %if.entry.i.i64.i ], [ 0, %while.entry.i62.i ]
  %69 = phi i64 [ %.pre141, %if.entry.i.i64.i ], [ 33, %while.entry.i62.i ]
  %70 = phi i64 [ %63, %if.entry.i.i64.i ], [ %60, %while.entry.i62.i ]
  %71 = icmp eq i64 %69, 33
  %72 = icmp eq i64 %68, 0
  %73 = and i1 %71, %72
  br i1 %73, label %while.entry.i62.i, label %Parser_new_lines.exit69.i

Parser_new_lines.exit69.i:                        ; preds = %Parser_advance.exit.i68.i, %Parser_new_lines.exit83.i
  %74 = phi i64 [ %49, %Parser_new_lines.exit83.i ], [ %67, %Parser_advance.exit.i68.i ]
  %75 = phi i64 [ %52, %Parser_new_lines.exit83.i ], [ %68, %Parser_advance.exit.i68.i ]
  %.fr = freeze i64 %75
  %76 = icmp eq i64 %.fr, 0
  br i1 %76, label %switch.early.test, label %Parser_parse_match_expression.exit

switch.early.test:                                ; preds = %Parser_new_lines.exit69.i
  switch i64 %74, label %while.entry.i.preheader [
    i64 46, label %Parser_parse_match_expression.exit
    i64 28, label %Parser_parse_match_expression.exit
  ]

while.entry.i.preheader:                          ; preds = %switch.early.test
  %memberidx.i11.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %switch.early.test85
  %77 = phi i64 [ %74, %while.entry.i.preheader ], [ %156, %switch.early.test85 ]
  %78 = icmp eq i64 %77, 58
  br i1 %78, label %if.entry.i53, label %else.i

if.entry.i53:                                     ; preds = %while.entry.i
  %79 = load i64, ptr %memberidx.i11.i.i, align 4
  %80 = load ptr, ptr %0, align 8
  %memberidx2.i50.i = getelementptr inbounds %Array_Token_, ptr %80, i64 0, i32 1
  %81 = load i64, ptr %memberidx2.i50.i, align 4
  %82 = icmp slt i64 %79, %81
  br i1 %82, label %if.entry.i52.i, label %Parser_advance.exit.i

if.entry.i52.i:                                   ; preds = %if.entry.i53
  %83 = add nsw i64 %79, 1
  store i64 %83, ptr %memberidx.i11.i.i, align 4
  %84 = load ptr, ptr %80, align 8
  %85 = getelementptr inbounds ptr, ptr %84, i64 %83
  %86 = load ptr, ptr %85, align 8
  store ptr %86, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i52.i, %if.entry.i53
  %87 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %88 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %88, ptr %memberidx3.i87.i, align 8
  %89 = load ptr, ptr %memberidx, align 8
  %90 = load i64, ptr %89, align 4
  %91 = icmp eq i64 %90, 33
  %92 = load ptr, ptr %memberidx2.i.i72.i, align 8
  %memberidx3.i.i38.i = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %93 = load i64, ptr %memberidx3.i.i38.i, align 4
  %94 = icmp eq i64 %93, 0
  %95 = and i1 %91, %94
  br i1 %95, label %while.entry.i41.i.preheader, label %ifend.i61

while.entry.i41.i.preheader:                      ; preds = %Parser_advance.exit.i
  %96 = load ptr, ptr %0, align 8
  %memberidx2.i12.i40.i = getelementptr inbounds %Array_Token_, ptr %96, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i11.i.i, align 4
  %98 = load i64, ptr %memberidx2.i12.i40.i, align 4
  %99 = icmp slt i64 %97, %98
  br i1 %99, label %while.entry.i41.i, label %while.entry.i41.i.us

while.entry.i41.i.us:                             ; preds = %while.entry.i41.i.preheader, %while.entry.i41.i.us
  br label %while.entry.i41.i.us

while.entry.i41.i:                                ; preds = %while.entry.i41.i.preheader, %Parser_advance.exit.i47.i
  %100 = phi i64 [ %108, %Parser_advance.exit.i47.i ], [ 0, %while.entry.i41.i.preheader ]
  %101 = phi i64 [ %111, %Parser_advance.exit.i47.i ], [ %97, %while.entry.i41.i.preheader ]
  %102 = load i64, ptr %memberidx2.i12.i40.i, align 4
  %103 = icmp slt i64 %101, %102
  br i1 %103, label %if.entry.i.i43.i, label %Parser_advance.exit.i47.i

if.entry.i.i43.i:                                 ; preds = %while.entry.i41.i
  %104 = add nsw i64 %101, 1
  store i64 %104, ptr %memberidx.i11.i.i, align 4
  %105 = load ptr, ptr %96, align 8
  %106 = getelementptr inbounds ptr, ptr %105, i64 %104
  %107 = load ptr, ptr %106, align 8
  store ptr %107, ptr %memberidx, align 8
  %.pre147 = load i64, ptr %107, align 4
  %.pre148 = load i64, ptr %memberidx3.i.i38.i, align 4
  br label %Parser_advance.exit.i47.i

Parser_advance.exit.i47.i:                        ; preds = %if.entry.i.i43.i, %while.entry.i41.i
  %108 = phi i64 [ %.pre148, %if.entry.i.i43.i ], [ %100, %while.entry.i41.i ]
  %109 = phi i64 [ %.pre148, %if.entry.i.i43.i ], [ 0, %while.entry.i41.i ]
  %110 = phi i64 [ %.pre147, %if.entry.i.i43.i ], [ 33, %while.entry.i41.i ]
  %111 = phi i64 [ %104, %if.entry.i.i43.i ], [ %101, %while.entry.i41.i ]
  %112 = icmp eq i64 %110, 33
  %113 = icmp eq i64 %109, 0
  %114 = and i1 %112, %113
  br i1 %114, label %while.entry.i41.i, label %ifend.i61

else.i:                                           ; preds = %while.entry.i
  %115 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %116 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %117 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  %118 = load ptr, ptr %memberidx, align 8
  %119 = load i64, ptr %118, align 4
  %120 = icmp eq i64 %119, 33
  %121 = load ptr, ptr %memberidx2.i.i72.i, align 8
  %memberidx3.i.i.i55 = getelementptr inbounds %Array_FloError_, ptr %121, i64 0, i32 1
  %122 = load i64, ptr %memberidx3.i.i.i55, align 4
  %123 = icmp eq i64 %122, 0
  %124 = and i1 %120, %123
  br i1 %124, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %else.i
  %125 = load ptr, ptr %0, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %125, i64 0, i32 1
  %126 = load i64, ptr %memberidx.i11.i.i, align 4
  %127 = load i64, ptr %memberidx2.i12.i.i, align 4
  %128 = icmp slt i64 %126, %127
  br i1 %128, label %while.entry.i.i, label %while.entry.i.i.us

while.entry.i.i.us:                               ; preds = %while.entry.i.i.preheader, %while.entry.i.i.us
  br label %while.entry.i.i.us

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i
  %129 = phi i64 [ %138, %Parser_advance.exit.i.i ], [ %126, %while.entry.i.i.preheader ]
  %130 = load i64, ptr %memberidx2.i12.i.i, align 4
  %131 = icmp slt i64 %129, %130
  br i1 %131, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %while.entry.i.i
  %132 = add nsw i64 %129, 1
  store i64 %132, ptr %memberidx.i11.i.i, align 4
  %133 = load ptr, ptr %125, align 8
  %134 = getelementptr inbounds ptr, ptr %133, i64 %132
  %135 = load ptr, ptr %134, align 8
  store ptr %135, ptr %memberidx, align 8
  %.pre143 = load i64, ptr %135, align 4
  %.pre144 = load i64, ptr %memberidx3.i.i.i55, align 4
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %while.entry.i.i
  %136 = phi i64 [ %.pre144, %if.entry.i.i.i ], [ 0, %while.entry.i.i ]
  %137 = phi i64 [ %.pre143, %if.entry.i.i.i ], [ 33, %while.entry.i.i ]
  %138 = phi i64 [ %132, %if.entry.i.i.i ], [ %129, %while.entry.i.i ]
  %139 = icmp eq i64 %137, 33
  %140 = icmp eq i64 %136, 0
  %141 = and i1 %139, %140
  br i1 %141, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i, %else.i
  %142 = tail call ptr @malloc(i32 16)
  store ptr %115, ptr %142, align 8
  %memberidx1.i32.i = getelementptr inbounds %MatchExpressionCaseNode, ptr %142, i64 0, i32 1
  store ptr %117, ptr %memberidx1.i32.i, align 8
  %143 = load i64, ptr %memberidx.i5.i.i, align 4
  %144 = load i64, ptr %memberidx1.i.i.i51, align 4
  %.not.i.i = icmp slt i64 %143, %144
  br i1 %.not.i.i, label %Parser_new_lines.exit.i.Array_MatchExpressionCaseNode____sl__.exit.i_crit_edge, label %if.entry.i.i

Parser_new_lines.exit.i.Array_MatchExpressionCaseNode____sl__.exit.i_crit_edge: ; preds = %Parser_new_lines.exit.i
  %.pre146 = load ptr, ptr %20, align 8
  br label %Array_MatchExpressionCaseNode____sl__.exit.i

if.entry.i.i:                                     ; preds = %Parser_new_lines.exit.i
  %145 = shl nuw i64 %144, 1
  store i64 %145, ptr %memberidx1.i.i.i51, align 4
  %146 = load ptr, ptr %20, align 8
  %147 = shl i64 %144, 4
  %148 = tail call ptr @realloc(ptr %146, i64 %147)
  store ptr %148, ptr %20, align 8
  %.pre145 = load i64, ptr %memberidx.i5.i.i, align 4
  br label %Array_MatchExpressionCaseNode____sl__.exit.i

Array_MatchExpressionCaseNode____sl__.exit.i:     ; preds = %Parser_new_lines.exit.i.Array_MatchExpressionCaseNode____sl__.exit.i_crit_edge, %if.entry.i.i
  %149 = phi ptr [ %148, %if.entry.i.i ], [ %.pre146, %Parser_new_lines.exit.i.Array_MatchExpressionCaseNode____sl__.exit.i_crit_edge ]
  %150 = phi i64 [ %.pre145, %if.entry.i.i ], [ %143, %Parser_new_lines.exit.i.Array_MatchExpressionCaseNode____sl__.exit.i_crit_edge ]
  %151 = add nsw i64 %150, 1
  store i64 %151, ptr %memberidx.i5.i.i, align 4
  %152 = getelementptr inbounds ptr, ptr %149, i64 %150
  store ptr %142, ptr %152, align 8
  %.pre149 = load ptr, ptr %memberidx2.i.i72.i, align 8
  %memberidx3.i.i60.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre149, i64 0, i32 1
  %.pre150 = load i64, ptr %memberidx3.i.i60.phi.trans.insert, align 4
  br label %ifend.i61

ifend.i61:                                        ; preds = %Parser_advance.exit.i47.i, %Parser_advance.exit.i, %Array_MatchExpressionCaseNode____sl__.exit.i
  %153 = phi i64 [ %93, %Parser_advance.exit.i ], [ %.pre150, %Array_MatchExpressionCaseNode____sl__.exit.i ], [ %108, %Parser_advance.exit.i47.i ]
  %.fr119 = freeze i64 %153
  %154 = icmp eq i64 %.fr119, 0
  br i1 %154, label %switch.early.test85, label %Parser_parse_match_expression.exit

switch.early.test85:                              ; preds = %ifend.i61
  %155 = load ptr, ptr %memberidx, align 8
  %156 = load i64, ptr %155, align 4
  switch i64 %156, label %while.entry.i [
    i64 46, label %Parser_parse_match_expression.exit
    i64 28, label %Parser_parse_match_expression.exit
  ]

Parser_parse_match_expression.exit:               ; preds = %switch.early.test85, %switch.early.test85, %ifend.i61, %switch.early.test, %switch.early.test, %Parser_new_lines.exit69.i
  %157 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 28)
  br label %common.ret120

ifend:                                            ; preds = %1
  %158 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %159 = load ptr, ptr %memberidx, align 8
  %160 = load i64, ptr %159, align 4
  %161 = and i64 %160, -2
  %162 = icmp eq i64 %161, 8
  %163 = icmp ne i64 %160, 46
  %memberidx2.i.i19.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %164 = load ptr, ptr %memberidx2.i.i19.i, align 8
  %memberidx3.i.i20.i = getelementptr inbounds %Array_FloError_, ptr %164, i64 0, i32 1
  %165 = load i64, ptr %memberidx3.i.i20.i, align 4
  %166 = icmp eq i64 %165, 0
  %167 = and i1 %163, %166
  %168 = and i1 %162, %167
  br i1 %168, label %while.entry.i.i97.preheader, label %Parser_parse_bit_expression.exit.i

while.entry.i.i97.preheader:                      ; preds = %ifend
  %169 = icmp eq i64 %160, 9
  %170 = icmp eq i64 %160, 8
  %spec.select.i.i.i = select i1 %170, i64 16, i64 0
  %common.ret.op.i.i.i = select i1 %169, i64 15, i64 %spec.select.i.i.i
  %memberidx.i11.i.i95 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i.i97

while.entry.i.i97:                                ; preds = %while.entry.i.i97.preheader, %Parser_advance.exit.i31.i
  %op.0.i.i = phi i64 [ %common.ret.op.i18.i.i, %Parser_advance.exit.i31.i ], [ %common.ret.op.i.i.i, %while.entry.i.i97.preheader ]
  %cmp.0.i.i = phi ptr [ %179, %Parser_advance.exit.i31.i ], [ %158, %while.entry.i.i97.preheader ]
  %171 = load i64, ptr %memberidx.i11.i.i95, align 4
  %172 = load ptr, ptr %0, align 8
  %memberidx2.i12.i.i96 = getelementptr inbounds %Array_Token_, ptr %172, i64 0, i32 1
  %173 = load i64, ptr %memberidx2.i12.i.i96, align 4
  %174 = icmp slt i64 %171, %173
  br i1 %174, label %if.entry.i.i21.i, label %Parser_advance.exit.i31.i

if.entry.i.i21.i:                                 ; preds = %while.entry.i.i97
  %175 = add nsw i64 %171, 1
  store i64 %175, ptr %memberidx.i11.i.i95, align 4
  %176 = load ptr, ptr %172, align 8
  %177 = getelementptr inbounds ptr, ptr %176, i64 %175
  %178 = load ptr, ptr %177, align 8
  store ptr %178, ptr %memberidx, align 8
  br label %Parser_advance.exit.i31.i

Parser_advance.exit.i31.i:                        ; preds = %if.entry.i.i21.i, %while.entry.i.i97
  %179 = tail call ptr @malloc(i32 48)
  %180 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %181 = load ptr, ptr %cmp.0.i.i, align 8
  %182 = load ptr, ptr %180, align 8
  %183 = tail call ptr @malloc(i32 32)
  %184 = load i64, ptr %181, align 4
  %memberidx1.i.i.i22.i = getelementptr inbounds %FloRange, ptr %182, i64 0, i32 1
  %185 = load i64, ptr %memberidx1.i.i.i22.i, align 4
  %memberidx2.i.i.i23.i = getelementptr inbounds %FloRange, ptr %181, i64 0, i32 2
  %186 = load i64, ptr %memberidx2.i.i.i23.i, align 4
  %memberidx3.i.i.i24.i = getelementptr inbounds %FloRange, ptr %182, i64 0, i32 3
  %187 = load i64, ptr %memberidx3.i.i.i24.i, align 4
  store i64 %184, ptr %183, align 4
  %memberidx1.i.i.i.i25.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 1
  store i64 %185, ptr %memberidx1.i.i.i.i25.i, align 4
  %memberidx2.i.i.i.i26.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 2
  store i64 %186, ptr %memberidx2.i.i.i.i26.i, align 4
  %memberidx3.i.i.i.i27.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 3
  store i64 %187, ptr %memberidx3.i.i.i.i27.i, align 4
  store ptr %183, ptr %179, align 8
  %memberidx.i.i.i.i28.i = getelementptr inbounds %StatementNode, ptr %179, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i28.i, align 4
  %memberidx.i.i.i29.i = getelementptr inbounds %ExpressionNode, ptr %179, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i.i29.i, align 4
  %memberidx2.i14.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %179, i64 0, i32 3
  store ptr %cmp.0.i.i, ptr %memberidx2.i14.i.i, align 8
  %memberidx3.i15.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %179, i64 0, i32 4
  store i64 %op.0.i.i, ptr %memberidx3.i15.i.i, align 4
  %memberidx4.i.i30.i = getelementptr inbounds %BinaryExpressionNode, ptr %179, i64 0, i32 5
  store ptr %180, ptr %memberidx4.i.i30.i, align 8
  %188 = load ptr, ptr %memberidx, align 8
  %189 = load i64, ptr %188, align 4
  %190 = icmp eq i64 %189, 9
  %191 = icmp eq i64 %189, 8
  %spec.select.i17.i.i = select i1 %191, i64 16, i64 0
  %common.ret.op.i18.i.i = select i1 %190, i64 15, i64 %spec.select.i17.i.i
  %192 = and i64 %189, -2
  %193 = icmp eq i64 %192, 8
  %194 = icmp ne i64 %189, 46
  %195 = load ptr, ptr %memberidx2.i.i19.i, align 8
  %memberidx3.i21.i.i = getelementptr inbounds %Array_FloError_, ptr %195, i64 0, i32 1
  %196 = load i64, ptr %memberidx3.i21.i.i, align 4
  %197 = icmp eq i64 %196, 0
  %198 = and i1 %194, %197
  %199 = and i1 %193, %198
  br i1 %199, label %while.entry.i.i97, label %Parser_parse_bit_expression.exit.i

Parser_parse_bit_expression.exit.i:               ; preds = %Parser_advance.exit.i31.i, %ifend
  %200 = phi i64 [ %165, %ifend ], [ %196, %Parser_advance.exit.i31.i ]
  %201 = phi i64 [ %160, %ifend ], [ %189, %Parser_advance.exit.i31.i ]
  %cmp.1.i.i = phi ptr [ %158, %ifend ], [ %179, %Parser_advance.exit.i31.i ]
  %202 = icmp eq i64 %201, 52
  %203 = icmp eq i64 %200, 0
  %204 = and i1 %202, %203
  br i1 %204, label %ifend.i.i, label %Parser_parse_range_expression.exit.i

ifend.i.i:                                        ; preds = %Parser_parse_bit_expression.exit.i
  %memberidx.i8.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %205 = load i64, ptr %memberidx.i8.i.i, align 4
  %206 = load ptr, ptr %0, align 8
  %memberidx2.i9.i.i99 = getelementptr inbounds %Array_Token_, ptr %206, i64 0, i32 1
  %207 = load i64, ptr %memberidx2.i9.i.i99, align 4
  %208 = icmp slt i64 %205, %207
  br i1 %208, label %if.entry.i.i.i101, label %Parser_advance.exit.i.i102

if.entry.i.i.i101:                                ; preds = %ifend.i.i
  %209 = add nsw i64 %205, 1
  store i64 %209, ptr %memberidx.i8.i.i, align 4
  %210 = load ptr, ptr %206, align 8
  %211 = getelementptr inbounds ptr, ptr %210, i64 %209
  %212 = load ptr, ptr %211, align 8
  store ptr %212, ptr %memberidx, align 8
  br label %Parser_advance.exit.i.i102

Parser_advance.exit.i.i102:                       ; preds = %if.entry.i.i.i101, %ifend.i.i
  %213 = tail call ptr @malloc(i32 48)
  %214 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %215 = load ptr, ptr %cmp.1.i.i, align 8
  %216 = load ptr, ptr %214, align 8
  %217 = tail call ptr @malloc(i32 32)
  %218 = load i64, ptr %215, align 4
  %memberidx1.i.i.i13.i = getelementptr inbounds %FloRange, ptr %216, i64 0, i32 1
  %219 = load i64, ptr %memberidx1.i.i.i13.i, align 4
  %memberidx2.i.i.i14.i = getelementptr inbounds %FloRange, ptr %215, i64 0, i32 2
  %220 = load i64, ptr %memberidx2.i.i.i14.i, align 4
  %memberidx3.i.i.i15.i = getelementptr inbounds %FloRange, ptr %216, i64 0, i32 3
  %221 = load i64, ptr %memberidx3.i.i.i15.i, align 4
  store i64 %218, ptr %217, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %217, i64 0, i32 1
  store i64 %219, ptr %memberidx1.i.i.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %217, i64 0, i32 2
  store i64 %220, ptr %memberidx2.i.i.i.i.i, align 4
  %memberidx3.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %217, i64 0, i32 3
  store i64 %221, ptr %memberidx3.i.i.i.i.i, align 4
  store ptr %217, ptr %213, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %StatementNode, ptr %213, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i.i, align 4
  %memberidx.i.i.i16.i = getelementptr inbounds %ExpressionNode, ptr %213, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i.i16.i, align 4
  %memberidx2.i11.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %213, i64 0, i32 3
  store ptr %cmp.1.i.i, ptr %memberidx2.i11.i.i, align 8
  %memberidx3.i12.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %213, i64 0, i32 4
  store i64 31, ptr %memberidx3.i12.i.i, align 4
  %memberidx4.i.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %213, i64 0, i32 5
  store ptr %214, ptr %memberidx4.i.i.i, align 8
  %.pre = load ptr, ptr %memberidx, align 8
  %.pre132 = load i64, ptr %.pre, align 4
  br label %Parser_parse_range_expression.exit.i

Parser_parse_range_expression.exit.i:             ; preds = %Parser_advance.exit.i.i102, %Parser_parse_bit_expression.exit.i
  %222 = phi i64 [ %.pre132, %Parser_advance.exit.i.i102 ], [ %201, %Parser_parse_bit_expression.exit.i ]
  %common.ret.op.i.i103 = phi ptr [ %213, %Parser_advance.exit.i.i102 ], [ %cmp.1.i.i, %Parser_parse_bit_expression.exit.i ]
  %.not.i = icmp eq i64 %222, 74
  br i1 %.not.i, label %ifend.i, label %Parser_parse_typecast_expression.exit

ifend.i:                                          ; preds = %Parser_parse_range_expression.exit.i
  %memberidx.i.i106 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %223 = load i64, ptr %memberidx.i.i106, align 4
  %224 = load ptr, ptr %0, align 8
  %memberidx2.i.i107 = getelementptr inbounds %Array_Token_, ptr %224, i64 0, i32 1
  %225 = load i64, ptr %memberidx2.i.i107, align 4
  %226 = icmp slt i64 %223, %225
  br i1 %226, label %if.entry.i.i109, label %Parser_advance.exit.i118

if.entry.i.i109:                                  ; preds = %ifend.i
  %227 = add nsw i64 %223, 1
  store i64 %227, ptr %memberidx.i.i106, align 4
  %228 = load ptr, ptr %224, align 8
  %229 = getelementptr inbounds ptr, ptr %228, i64 %227
  %230 = load ptr, ptr %229, align 8
  store ptr %230, ptr %memberidx, align 8
  br label %Parser_advance.exit.i118

Parser_advance.exit.i118:                         ; preds = %if.entry.i.i109, %ifend.i
  %231 = tail call ptr @malloc(i32 40)
  %232 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %233 = load ptr, ptr %common.ret.op.i.i103, align 8
  %234 = load ptr, ptr %232, align 8
  %235 = tail call ptr @malloc(i32 32)
  %236 = load i64, ptr %233, align 4
  %memberidx1.i.i.i110 = getelementptr inbounds %FloRange, ptr %234, i64 0, i32 1
  %237 = load i64, ptr %memberidx1.i.i.i110, align 4
  %memberidx2.i.i.i111 = getelementptr inbounds %FloRange, ptr %233, i64 0, i32 2
  %238 = load i64, ptr %memberidx2.i.i.i111, align 4
  %memberidx3.i.i.i112 = getelementptr inbounds %FloRange, ptr %234, i64 0, i32 3
  %239 = load i64, ptr %memberidx3.i.i.i112, align 4
  store i64 %236, ptr %235, align 4
  %memberidx1.i.i.i.i113 = getelementptr inbounds %FloRange, ptr %235, i64 0, i32 1
  store i64 %237, ptr %memberidx1.i.i.i.i113, align 4
  %memberidx2.i.i.i.i114 = getelementptr inbounds %FloRange, ptr %235, i64 0, i32 2
  store i64 %238, ptr %memberidx2.i.i.i.i114, align 4
  %memberidx3.i.i.i.i115 = getelementptr inbounds %FloRange, ptr %235, i64 0, i32 3
  store i64 %239, ptr %memberidx3.i.i.i.i115, align 4
  store ptr %235, ptr %231, align 8
  %memberidx.i.i.i.i116 = getelementptr inbounds %StatementNode, ptr %231, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i116, align 4
  %memberidx.i.i.i117 = getelementptr inbounds %ExpressionNode, ptr %231, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i117, align 4
  %memberidx2.i6.i = getelementptr inbounds %TypeCastExpressionNode, ptr %231, i64 0, i32 3
  store ptr %common.ret.op.i.i103, ptr %memberidx2.i6.i, align 8
  %memberidx3.i7.i = getelementptr inbounds %TypeCastExpressionNode, ptr %231, i64 0, i32 4
  store ptr %232, ptr %memberidx3.i7.i, align 8
  %.pre133 = load ptr, ptr %memberidx, align 8
  %.pre134 = load i64, ptr %.pre133, align 4
  br label %Parser_parse_typecast_expression.exit

Parser_parse_typecast_expression.exit:            ; preds = %Parser_parse_range_expression.exit.i, %Parser_advance.exit.i118
  %240 = phi i64 [ %.pre134, %Parser_advance.exit.i118 ], [ %222, %Parser_parse_range_expression.exit.i ]
  %common.ret.op.i105 = phi ptr [ %231, %Parser_advance.exit.i118 ], [ %common.ret.op.i.i103, %Parser_parse_range_expression.exit.i ]
  %241 = icmp eq i64 %240, 36
  %242 = load ptr, ptr %memberidx2.i.i19.i, align 8
  %memberidx3.i.i65 = getelementptr inbounds %Array_FloError_, ptr %242, i64 0, i32 1
  %243 = load i64, ptr %memberidx3.i.i65, align 4
  %244 = icmp eq i64 %243, 0
  %245 = and i1 %241, %244
  br i1 %245, label %ifend.i68, label %Parser_parse_ternary_expression.exit

ifend.i68:                                        ; preds = %Parser_parse_typecast_expression.exit
  %memberidx.i10.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %246 = load i64, ptr %memberidx.i10.i, align 4
  %247 = load ptr, ptr %0, align 8
  %memberidx2.i11.i = getelementptr inbounds %Array_Token_, ptr %247, i64 0, i32 1
  %248 = load i64, ptr %memberidx2.i11.i, align 4
  %249 = icmp slt i64 %246, %248
  br i1 %249, label %if.entry.i.i69, label %Parser_advance.exit.i75

if.entry.i.i69:                                   ; preds = %ifend.i68
  %250 = add nsw i64 %246, 1
  store i64 %250, ptr %memberidx.i10.i, align 4
  %251 = load ptr, ptr %247, align 8
  %252 = getelementptr inbounds ptr, ptr %251, i64 %250
  %253 = load ptr, ptr %252, align 8
  store ptr %253, ptr %memberidx, align 8
  br label %Parser_advance.exit.i75

Parser_advance.exit.i75:                          ; preds = %if.entry.i.i69, %ifend.i68
  %254 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %255 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %256 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %257 = tail call ptr @malloc(i32 48)
  %258 = load ptr, ptr %common.ret.op.i105, align 8
  %259 = load ptr, ptr %256, align 8
  %260 = tail call ptr @malloc(i32 32)
  %261 = load i64, ptr %258, align 4
  %memberidx1.i.i.i70 = getelementptr inbounds %FloRange, ptr %259, i64 0, i32 1
  %262 = load i64, ptr %memberidx1.i.i.i70, align 4
  %memberidx2.i.i.i71 = getelementptr inbounds %FloRange, ptr %258, i64 0, i32 2
  %263 = load i64, ptr %memberidx2.i.i.i71, align 4
  %memberidx3.i.i.i72 = getelementptr inbounds %FloRange, ptr %259, i64 0, i32 3
  %264 = load i64, ptr %memberidx3.i.i.i72, align 4
  store i64 %261, ptr %260, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %260, i64 0, i32 1
  store i64 %262, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %260, i64 0, i32 2
  store i64 %263, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %260, i64 0, i32 3
  store i64 %264, ptr %memberidx3.i.i.i.i, align 4
  store ptr %260, ptr %257, align 8
  %memberidx.i.i.i.i73 = getelementptr inbounds %StatementNode, ptr %257, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i73, align 4
  %memberidx.i.i.i74 = getelementptr inbounds %ExpressionNode, ptr %257, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i.i74, align 4
  %memberidx2.i13.i = getelementptr inbounds %TernaryExpressionNode, ptr %257, i64 0, i32 3
  store ptr %common.ret.op.i105, ptr %memberidx2.i13.i, align 8
  %memberidx3.i14.i = getelementptr inbounds %TernaryExpressionNode, ptr %257, i64 0, i32 4
  store ptr %254, ptr %memberidx3.i14.i, align 8
  %memberidx4.i.i = getelementptr inbounds %TernaryExpressionNode, ptr %257, i64 0, i32 5
  store ptr %256, ptr %memberidx4.i.i, align 8
  %265 = load ptr, ptr %254, align 8
  %266 = load ptr, ptr %256, align 8
  %267 = tail call ptr @malloc(i32 32)
  %268 = load i64, ptr %265, align 4
  %memberidx1.i15.i.i = getelementptr inbounds %FloRange, ptr %266, i64 0, i32 1
  %269 = load i64, ptr %memberidx1.i15.i.i, align 4
  %memberidx2.i16.i.i = getelementptr inbounds %FloRange, ptr %265, i64 0, i32 2
  %270 = load i64, ptr %memberidx2.i16.i.i, align 4
  %memberidx3.i17.i.i = getelementptr inbounds %FloRange, ptr %266, i64 0, i32 3
  %271 = load i64, ptr %memberidx3.i17.i.i, align 4
  store i64 %268, ptr %267, align 4
  %memberidx1.i.i18.i.i = getelementptr inbounds %FloRange, ptr %267, i64 0, i32 1
  store i64 %269, ptr %memberidx1.i.i18.i.i, align 4
  %memberidx2.i.i19.i.i = getelementptr inbounds %FloRange, ptr %267, i64 0, i32 2
  store i64 %270, ptr %memberidx2.i.i19.i.i, align 4
  %memberidx3.i.i20.i.i = getelementptr inbounds %FloRange, ptr %267, i64 0, i32 3
  store i64 %271, ptr %memberidx3.i.i20.i.i, align 4
  store ptr %267, ptr %257, align 8
  %.pre135 = load ptr, ptr %memberidx, align 8
  %.pre136 = load i64, ptr %.pre135, align 4
  %.pre137 = load ptr, ptr %memberidx2.i.i19.i, align 8
  %memberidx3.i49.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre137, i64 0, i32 1
  %.pre138 = load i64, ptr %memberidx3.i49.phi.trans.insert, align 4
  br label %Parser_parse_ternary_expression.exit

Parser_parse_ternary_expression.exit:             ; preds = %Parser_parse_typecast_expression.exit, %Parser_advance.exit.i75
  %272 = phi i64 [ %.pre138, %Parser_advance.exit.i75 ], [ %243, %Parser_parse_typecast_expression.exit ]
  %273 = phi i64 [ %.pre136, %Parser_advance.exit.i75 ], [ %240, %Parser_parse_typecast_expression.exit ]
  %common.ret.op.i66 = phi ptr [ %257, %Parser_advance.exit.i75 ], [ %common.ret.op.i105, %Parser_parse_typecast_expression.exit ]
  %274 = icmp eq i64 %273, 69
  %275 = icmp eq i64 %272, 0
  %276 = and i1 %274, %275
  br i1 %276, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %Parser_parse_ternary_expression.exit
  %memberidx.i41 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %277 = load i64, ptr %memberidx.i41, align 4
  %278 = load ptr, ptr %0, align 8
  %memberidx2.i42 = getelementptr inbounds %Array_Token_, ptr %278, i64 0, i32 1
  %279 = load i64, ptr %memberidx2.i42, align 4
  %280 = icmp slt i64 %277, %279
  br i1 %280, label %if.entry.i44, label %Parser_advance.exit46

if.entry.i44:                                     ; preds = %if.entry4
  %281 = add nsw i64 %277, 1
  store i64 %281, ptr %memberidx.i41, align 4
  %282 = load ptr, ptr %278, align 8
  %283 = getelementptr inbounds ptr, ptr %282, i64 %281
  %284 = load ptr, ptr %283, align 8
  store ptr %284, ptr %memberidx, align 8
  br label %Parser_advance.exit46

Parser_advance.exit46:                            ; preds = %if.entry4, %if.entry.i44
  %285 = tail call ptr @malloc(i32 48)
  %286 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %287 = load ptr, ptr %common.ret.op.i66, align 8
  %288 = load ptr, ptr %286, align 8
  %289 = tail call ptr @malloc(i32 32)
  %290 = load i64, ptr %287, align 4
  %memberidx1.i.i30 = getelementptr inbounds %FloRange, ptr %288, i64 0, i32 1
  %291 = load i64, ptr %memberidx1.i.i30, align 4
  %memberidx2.i.i31 = getelementptr inbounds %FloRange, ptr %287, i64 0, i32 2
  %292 = load i64, ptr %memberidx2.i.i31, align 4
  %memberidx3.i.i32 = getelementptr inbounds %FloRange, ptr %288, i64 0, i32 3
  %293 = load i64, ptr %memberidx3.i.i32, align 4
  store i64 %290, ptr %289, align 4
  %memberidx1.i.i.i33 = getelementptr inbounds %FloRange, ptr %289, i64 0, i32 1
  store i64 %291, ptr %memberidx1.i.i.i33, align 4
  %memberidx2.i.i.i34 = getelementptr inbounds %FloRange, ptr %289, i64 0, i32 2
  store i64 %292, ptr %memberidx2.i.i.i34, align 4
  %memberidx3.i.i.i35 = getelementptr inbounds %FloRange, ptr %289, i64 0, i32 3
  store i64 %293, ptr %memberidx3.i.i.i35, align 4
  store ptr %289, ptr %285, align 8
  %memberidx.i.i.i36 = getelementptr inbounds %StatementNode, ptr %285, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i36, align 4
  %memberidx.i.i37 = getelementptr inbounds %ExpressionNode, ptr %285, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i37, align 4
  %memberidx2.i38 = getelementptr inbounds %BinaryExpressionNode, ptr %285, i64 0, i32 3
  store ptr %common.ret.op.i66, ptr %memberidx2.i38, align 8
  %memberidx3.i39 = getelementptr inbounds %BinaryExpressionNode, ptr %285, i64 0, i32 4
  store i64 18, ptr %memberidx3.i39, align 4
  %memberidx4.i40 = getelementptr inbounds %BinaryExpressionNode, ptr %285, i64 0, i32 5
  store ptr %286, ptr %memberidx4.i40, align 8
  br label %common.ret120

ifend6:                                           ; preds = %Parser_parse_ternary_expression.exit
  switch i64 %273, label %ifend51.i [
    i64 38, label %Parser_is_assign_op.exit
    i64 12, label %Parser_is_assign_op.exit.fold.split
    i64 13, label %Parser_is_assign_op.exit.fold.split86
    i64 14, label %Parser_is_assign_op.exit.fold.split87
    i64 15, label %Parser_is_assign_op.exit.fold.split88
    i64 16, label %Parser_is_assign_op.exit.fold.split89
    i64 17, label %Parser_is_assign_op.exit.fold.split90
    i64 18, label %Parser_is_assign_op.exit.fold.split91
    i64 19, label %Parser_is_assign_op.exit.fold.split92
    i64 20, label %Parser_is_assign_op.exit.fold.split93
    i64 22, label %Parser_is_assign_op.exit.fold.split94
  ]

ifend51.i:                                        ; preds = %ifend6
  %294 = icmp eq i64 %273, 21
  %spec.select.i = select i1 %294, i64 30, i64 0
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split:              ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split86:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split87:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split88:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split89:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split90:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split91:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split92:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split93:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split94:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit:                         ; preds = %ifend6, %Parser_is_assign_op.exit.fold.split94, %Parser_is_assign_op.exit.fold.split93, %Parser_is_assign_op.exit.fold.split92, %Parser_is_assign_op.exit.fold.split91, %Parser_is_assign_op.exit.fold.split90, %Parser_is_assign_op.exit.fold.split89, %Parser_is_assign_op.exit.fold.split88, %Parser_is_assign_op.exit.fold.split87, %Parser_is_assign_op.exit.fold.split86, %Parser_is_assign_op.exit.fold.split, %ifend51.i
  %common.ret.op.i = phi i64 [ 19, %ifend6 ], [ %spec.select.i, %ifend51.i ], [ 22, %Parser_is_assign_op.exit.fold.split ], [ 21, %Parser_is_assign_op.exit.fold.split86 ], [ 20, %Parser_is_assign_op.exit.fold.split87 ], [ 23, %Parser_is_assign_op.exit.fold.split88 ], [ 24, %Parser_is_assign_op.exit.fold.split89 ], [ 25, %Parser_is_assign_op.exit.fold.split90 ], [ 26, %Parser_is_assign_op.exit.fold.split91 ], [ 27, %Parser_is_assign_op.exit.fold.split92 ], [ 28, %Parser_is_assign_op.exit.fold.split93 ], [ 29, %Parser_is_assign_op.exit.fold.split94 ]
  %295 = icmp ne i64 %common.ret.op.i, 0
  %296 = icmp ne i64 %273, 46
  %297 = and i1 %296, %275
  %298 = and i1 %297, %295
  br i1 %298, label %ifend9, label %common.ret120

ifend9:                                           ; preds = %Parser_is_assign_op.exit
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %299 = load i64, ptr %memberidx.i, align 4
  %300 = load ptr, ptr %0, align 8
  %memberidx2.i24 = getelementptr inbounds %Array_Token_, ptr %300, i64 0, i32 1
  %301 = load i64, ptr %memberidx2.i24, align 4
  %302 = icmp slt i64 %299, %301
  br i1 %302, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %ifend9
  %303 = add nsw i64 %299, 1
  store i64 %303, ptr %memberidx.i, align 4
  %304 = load ptr, ptr %300, align 8
  %305 = getelementptr inbounds ptr, ptr %304, i64 %303
  %306 = load ptr, ptr %305, align 8
  store ptr %306, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend9, %if.entry.i
  %307 = tail call ptr @malloc(i32 48)
  %308 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %309 = load ptr, ptr %common.ret.op.i66, align 8
  %310 = load ptr, ptr %308, align 8
  %311 = tail call ptr @malloc(i32 32)
  %312 = load i64, ptr %309, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %310, i64 0, i32 1
  %313 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %309, i64 0, i32 2
  %314 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %310, i64 0, i32 3
  %315 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %312, ptr %311, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %311, i64 0, i32 1
  store i64 %313, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %311, i64 0, i32 2
  store i64 %314, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %311, i64 0, i32 3
  store i64 %315, ptr %memberidx3.i.i.i, align 4
  store ptr %311, ptr %307, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %307, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %307, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i = getelementptr inbounds %BinaryExpressionNode, ptr %307, i64 0, i32 3
  store ptr %common.ret.op.i66, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %BinaryExpressionNode, ptr %307, i64 0, i32 4
  store i64 %common.ret.op.i, ptr %memberidx3.i, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %307, i64 0, i32 5
  store ptr %308, ptr %memberidx4.i, align 8
  br label %common.ret120
}

define internal fastcc ptr @TypeChecker_check_module(ptr %0, ptr nocapture readonly %1, ptr %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  store i1 false, ptr %memberidx, align 1
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %3 = load ptr, ptr %memberidx10, align 8
  %4 = tail call ptr @malloc(i32 80)
  store ptr %2, ptr %4, align 8
  %memberidx1.i205 = getelementptr inbounds %Module, ptr %4, i64 0, i32 4
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %5, ptr %memberidx1.i205, align 8
  %memberidx4.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 24)
  %memberidx.i33.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 1
  store i64 0, ptr %memberidx.i33.i, align 4
  %memberidx1.i34.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 2
  store i64 8, ptr %memberidx1.i34.i, align 4
  %8 = tail call ptr @malloc(i32 64)
  store ptr %8, ptr %7, align 8
  store i64 0, ptr %memberidx.i33.i, align 4
  store ptr %7, ptr %memberidx4.i, align 8
  %memberidx7.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 3
  %9 = tail call ptr @malloc(i32 24)
  %memberidx.i35.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 1
  store i64 0, ptr %memberidx.i35.i, align 4
  %memberidx1.i36.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 2
  store i64 8, ptr %memberidx1.i36.i, align 4
  %10 = tail call ptr @malloc(i32 64)
  store ptr %10, ptr %9, align 8
  store i64 0, ptr %memberidx.i35.i, align 4
  store ptr %9, ptr %memberidx7.i, align 8
  %memberidx10.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 6
  %11 = tail call ptr @malloc(i32 24)
  %memberidx.i37.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 1
  store i64 0, ptr %memberidx.i37.i, align 4
  %memberidx1.i38.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 2
  store i64 8, ptr %memberidx1.i38.i, align 4
  %12 = tail call ptr @malloc(i32 64)
  store ptr %12, ptr %11, align 8
  store i64 0, ptr %memberidx.i37.i, align 4
  store ptr %11, ptr %memberidx10.i, align 8
  %memberidx13.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 7
  %13 = tail call ptr @malloc(i32 24)
  %memberidx.i39.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 1
  store i64 0, ptr %memberidx.i39.i, align 4
  %memberidx1.i40.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 2
  store i64 8, ptr %memberidx1.i40.i, align 4
  %14 = tail call ptr @malloc(i32 64)
  store ptr %14, ptr %13, align 8
  store i64 0, ptr %memberidx.i39.i, align 4
  store ptr %13, ptr %memberidx13.i, align 8
  %memberidx16.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 8
  %15 = tail call ptr @malloc(i32 24)
  %memberidx.i41.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 1
  store i64 0, ptr %memberidx.i41.i, align 4
  %memberidx1.i42.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 2
  store i64 8, ptr %memberidx1.i42.i, align 4
  %16 = tail call ptr @malloc(i32 64)
  store ptr %16, ptr %15, align 8
  store i64 0, ptr %memberidx.i41.i, align 4
  store ptr %15, ptr %memberidx16.i, align 8
  %memberidx19.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 9
  %17 = tail call ptr @malloc(i32 24)
  %memberidx.i43.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 1
  store i64 0, ptr %memberidx.i43.i, align 4
  %memberidx1.i44.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 2
  store i64 8, ptr %memberidx1.i44.i, align 4
  %18 = tail call ptr @malloc(i32 64)
  store ptr %18, ptr %17, align 8
  store i64 0, ptr %memberidx.i43.i, align 4
  store ptr %17, ptr %memberidx19.i, align 8
  %memberidx22.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 2
  %19 = tail call ptr @malloc(i32 24)
  %memberidx.i45.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 1
  store i64 0, ptr %memberidx.i45.i, align 4
  %memberidx1.i46.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 2
  store i64 8, ptr %memberidx1.i46.i, align 4
  %20 = tail call ptr @malloc(i32 64)
  store ptr %20, ptr %19, align 8
  store i64 0, ptr %memberidx.i45.i, align 4
  store ptr %19, ptr %memberidx22.i, align 8
  %21 = load ptr, ptr %0, align 8
  %22 = load ptr, ptr %21, align 8
  %memberidx13 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx13, align 4
  %memberidx1.i207 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 2
  %24 = load i64, ptr %memberidx1.i207, align 4
  %.not.i = icmp slt i64 %23, %24
  br i1 %.not.i, label %for.entry.Array_Module____sl__.exit_crit_edge, label %if.entry.i

for.entry.Array_Module____sl__.exit_crit_edge:    ; preds = %for.entry
  %.pre407 = load ptr, ptr %22, align 8
  br label %Array_Module____sl__.exit

if.entry.i:                                       ; preds = %for.entry
  %25 = shl nuw i64 %24, 1
  store i64 %25, ptr %memberidx1.i207, align 4
  %26 = load ptr, ptr %22, align 8
  %27 = shl i64 %24, 4
  %28 = tail call ptr @realloc(ptr %26, i64 %27)
  store ptr %28, ptr %22, align 8
  %.pre = load i64, ptr %memberidx13, align 4
  br label %Array_Module____sl__.exit

Array_Module____sl__.exit:                        ; preds = %for.entry.Array_Module____sl__.exit_crit_edge, %if.entry.i
  %29 = phi ptr [ %.pre407, %for.entry.Array_Module____sl__.exit_crit_edge ], [ %28, %if.entry.i ]
  %30 = phi i64 [ %23, %for.entry.Array_Module____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %31 = add nsw i64 %30, 1
  store i64 %31, ptr %memberidx13, align 4
  %32 = getelementptr inbounds ptr, ptr %29, i64 %30
  store ptr %4, ptr %32, align 8
  %33 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %23)
  %memberidx16 = getelementptr inbounds %Module, ptr %4, i64 0, i32 5
  %34 = load ptr, ptr %33, align 8
  store ptr %34, ptr %memberidx16, align 8
  %memberidx18 = getelementptr inbounds %Scope, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %memberidx18, align 8
  %36 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %36, align 8
  %37 = tail call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  %memberidx1.i.i209 = getelementptr inbounds %String, ptr %37, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i209, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %37, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %35, ptr nonnull %37, ptr null)
  %38 = load ptr, ptr %memberidx18, align 8
  %39 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %39, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %40 = tail call ptr @malloc(i32 24)
  store ptr %39, ptr %40, align 8
  %memberidx1.i.i210 = getelementptr inbounds %String, ptr %40, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i210, align 4
  %memberidx2.i.i211 = getelementptr inbounds %String, ptr %40, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i211, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %38, ptr nonnull %40, ptr null)
  %41 = load ptr, ptr %memberidx18, align 8
  %42 = tail call ptr @malloc(i32 4)
  store i32 1819047278, ptr %42, align 8
  %43 = tail call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i.i212 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i212, align 4
  %memberidx2.i.i213 = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i213, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %41, ptr nonnull %43, ptr null)
  %44 = load ptr, ptr %33, align 8
  store ptr %44, ptr %memberidx10, align 8
  %memberidx24 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %memberidx25 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx24, i8 0, i64 24, i1 false)
  %45 = load ptr, ptr %memberidx26, align 8
  %46 = tail call ptr @malloc(i32 25)
  %47 = load ptr, ptr %45, align 8
  %memberidx1.i214 = getelementptr inbounds %Array_ImportNode_, ptr %45, i64 0, i32 1
  %48 = load i64, ptr %memberidx1.i214, align 4
  store i1 false, ptr %46, align 1
  %memberidx1.i.i215 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %46, i64 0, i32 1
  %memberidx2.i.i216 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %46, i64 0, i32 3
  store ptr %47, ptr %memberidx2.i.i216, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %46, i64 0, i32 2
  store i64 %48, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i215, align 4
  %49 = icmp slt i64 %48, 1
  br i1 %49, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %Array_Module____sl__.exit
  %memberidx.i221 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %50 = phi i64 [ 1, %for.body.lr.ph ], [ %60, %ifend ]
  %module_import.0393.in = phi ptr [ %47, %for.body.lr.ph ], [ %61, %ifend ]
  %module_import.0393 = load ptr, ptr %module_import.0393.in, align 8
  tail call fastcc void @TypeChecker_check_module_import(ptr nonnull %0, ptr %module_import.0393)
  %51 = load ptr, ptr %memberidx.i221, align 8
  %memberidx1.i222 = getelementptr inbounds %Compiler, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i222, align 8
  %memberidx2.i223 = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 1
  %53 = load i64, ptr %memberidx2.i223, align 4
  %54 = icmp sgt i64 %53, 0
  br i1 %54, label %common.ret.loopexit, label %ifend

for.end:                                          ; preds = %ifend, %Array_Module____sl__.exit
  tail call void @free(ptr nonnull %46)
  %memberidx29 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 2
  %55 = load ptr, ptr %memberidx29, align 8
  %56 = tail call ptr @malloc(i32 25)
  %57 = load ptr, ptr %55, align 8
  %memberidx1.i224 = getelementptr inbounds %Array_EnumNode_, ptr %55, i64 0, i32 1
  %58 = load i64, ptr %memberidx1.i224, align 4
  store i1 false, ptr %56, align 1
  %memberidx1.i.i225 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %56, i64 0, i32 1
  %memberidx2.i.i226 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %56, i64 0, i32 3
  store ptr %57, ptr %memberidx2.i.i226, align 8
  %memberidx3.i.i227 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %56, i64 0, i32 2
  store i64 %58, ptr %memberidx3.i.i227, align 4
  store i64 1, ptr %memberidx1.i.i225, align 4
  %59 = icmp slt i64 %58, 1
  br i1 %59, label %for.end33, label %for.body31

common.ret.loopexit:                              ; preds = %for.body
  store i1 false, ptr %46, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %ifend116, %for.end81, %for.end40, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %for.end40 ], [ null, %for.end81 ], [ %spec.select, %ifend116 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %for.body
  %60 = add nuw nsw i64 %50, 1
  store i64 %60, ptr %memberidx1.i.i215, align 4
  %61 = getelementptr inbounds ptr, ptr %47, i64 %50
  %.not420 = icmp slt i64 %50, %48
  br i1 %.not420, label %for.body, label %for.end

for.body31:                                       ; preds = %for.end, %for.body31
  %62 = phi i64 [ %63, %for.body31 ], [ 1, %for.end ]
  %enum_.0388.in = phi ptr [ %64, %for.body31 ], [ %57, %for.end ]
  %enum_.0388 = load ptr, ptr %enum_.0388.in, align 8
  tail call fastcc void @TypeChecker_declare_enum_within_module(ptr nonnull %0, ptr %enum_.0388)
  %63 = add nuw nsw i64 %62, 1
  store i64 %63, ptr %memberidx1.i.i225, align 4
  %64 = getelementptr inbounds ptr, ptr %57, i64 %62
  %.not421 = icmp slt i64 %62, %58
  br i1 %.not421, label %for.body31, label %for.end33

for.end33:                                        ; preds = %for.body31, %for.end
  tail call void @free(ptr nonnull %56)
  %memberidx36 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 1
  %65 = load ptr, ptr %memberidx36, align 8
  %66 = tail call ptr @malloc(i32 25)
  %67 = load ptr, ptr %65, align 8
  %memberidx1.i237 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %65, i64 0, i32 1
  %68 = load i64, ptr %memberidx1.i237, align 4
  store i1 false, ptr %66, align 1
  %memberidx1.i.i238 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %66, i64 0, i32 1
  %memberidx2.i.i239 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %66, i64 0, i32 3
  store ptr %67, ptr %memberidx2.i.i239, align 8
  %memberidx3.i.i240 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %66, i64 0, i32 2
  store i64 %68, ptr %memberidx3.i.i240, align 4
  store i64 1, ptr %memberidx1.i.i238, align 4
  %69 = icmp slt i64 %68, 1
  br i1 %69, label %for.end40, label %for.body38

for.body38:                                       ; preds = %for.end33, %for.body38
  %70 = phi i64 [ %71, %for.body38 ], [ 1, %for.end33 ]
  %class_.0385.in = phi ptr [ %72, %for.body38 ], [ %67, %for.end33 ]
  %class_.0385 = load ptr, ptr %class_.0385.in, align 8
  tail call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr %class_.0385)
  %71 = add nuw nsw i64 %70, 1
  store i64 %71, ptr %memberidx1.i.i238, align 4
  %72 = getelementptr inbounds ptr, ptr %67, i64 %70
  %.not422 = icmp slt i64 %70, %68
  br i1 %.not422, label %for.body38, label %for.end40

for.end40:                                        ; preds = %for.body38, %for.end33
  tail call void @free(ptr nonnull %66)
  %memberidx.i247 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %73 = load ptr, ptr %memberidx.i247, align 8
  %memberidx1.i248 = getelementptr inbounds %Compiler, ptr %73, i64 0, i32 5
  %74 = load ptr, ptr %memberidx1.i248, align 8
  %memberidx2.i249 = getelementptr inbounds %Array_FloError_, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx2.i249, align 4
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %common.ret, label %for.entry45

for.entry45:                                      ; preds = %for.end40
  %memberidx46 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 6
  %77 = load ptr, ptr %memberidx46, align 8
  %78 = tail call ptr @malloc(i32 25)
  %79 = load ptr, ptr %77, align 8
  %memberidx1.i250 = getelementptr inbounds %Array_TypeAliasNode_, ptr %77, i64 0, i32 1
  %80 = load i64, ptr %memberidx1.i250, align 4
  store i1 false, ptr %78, align 1
  %memberidx1.i.i251 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %78, i64 0, i32 1
  %memberidx2.i.i252 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %78, i64 0, i32 3
  store ptr %79, ptr %memberidx2.i.i252, align 8
  %memberidx3.i.i253 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %78, i64 0, i32 2
  store i64 %80, ptr %memberidx3.i.i253, align 4
  store i64 1, ptr %memberidx1.i.i251, align 4
  %81 = icmp slt i64 %80, 1
  br i1 %81, label %for.end50, label %for.body48.lr.ph

for.body48.lr.ph:                                 ; preds = %for.entry45
  %memberidx61 = getelementptr inbounds %Scope, ptr %33, i64 0, i32 6
  br label %for.body48

for.body48:                                       ; preds = %for.body48.lr.ph, %ifend58
  %82 = phi i64 [ 1, %for.body48.lr.ph ], [ %121, %ifend58 ]
  %type_alias_node.0382.in = phi ptr [ %79, %for.body48.lr.ph ], [ %122, %ifend58 ]
  %type_alias_node.0382 = load ptr, ptr %type_alias_node.0382.in, align 8
  %memberidx52 = getelementptr inbounds %TypeAliasNode, ptr %type_alias_node.0382, i64 0, i32 1
  %83 = load ptr, ptr %memberidx52, align 8
  %84 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %83)
  %85 = load ptr, ptr %type_alias_node.0382, align 8
  %memberidx54 = getelementptr inbounds %IdentifierToken, ptr %85, i64 0, i32 2
  %86 = load ptr, ptr %memberidx54, align 8
  %87 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %86)
  %88 = load i64, ptr %87, align 4
  %.not = icmp eq i64 %88, 21
  br i1 %.not, label %ifend58, label %if.entry56

for.end50:                                        ; preds = %ifend58, %for.entry45
  tail call void @free(ptr nonnull %78)
  %memberidx63 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 4
  %89 = load ptr, ptr %memberidx63, align 8
  %90 = tail call ptr @malloc(i32 25)
  %91 = load ptr, ptr %89, align 8
  %memberidx1.i257 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %89, i64 0, i32 1
  %92 = load i64, ptr %memberidx1.i257, align 4
  store i1 false, ptr %90, align 1
  %memberidx1.i.i258 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %90, i64 0, i32 1
  %memberidx2.i.i259 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %90, i64 0, i32 3
  store ptr %91, ptr %memberidx2.i.i259, align 8
  %memberidx3.i.i260 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %90, i64 0, i32 2
  store i64 %92, ptr %memberidx3.i.i260, align 4
  store i64 1, ptr %memberidx1.i.i258, align 4
  %93 = icmp slt i64 %92, 1
  br i1 %93, label %for.end67, label %for.body65

if.entry56:                                       ; preds = %for.body48
  store i1 false, ptr %78, align 1
  %memberidx.i264 = getelementptr inbounds %String, ptr %86, i64 0, i32 1
  %94 = load i64, ptr %memberidx.i264, align 4
  %95 = trunc i64 %94 to i32
  %96 = add i32 %95, 1
  %97 = tail call ptr @malloc(i32 %96)
  %98 = load ptr, ptr %86, align 8
  %99 = load i64, ptr %memberidx.i264, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %97, ptr align 8 %98, i64 %99, i1 false)
  %100 = getelementptr inbounds i8, ptr %97, i64 %99
  store i8 0, ptr %100, align 1
  %101 = alloca ptr, align 8
  %102 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %101, ptr nonnull @101, ptr %97)
  %103 = load ptr, ptr %101, align 8
  %104 = tail call ptr @malloc(i32 24)
  store ptr %103, ptr %104, align 8
  %memberidx1.i265 = getelementptr inbounds %String, ptr %104, i64 0, i32 1
  store i64 %102, ptr %memberidx1.i265, align 4
  %memberidx2.i266 = getelementptr inbounds %String, ptr %104, i64 0, i32 2
  store i64 %102, ptr %memberidx2.i266, align 4
  tail call void @free(ptr %97)
  %105 = load ptr, ptr %type_alias_node.0382, align 8
  %memberidx60 = getelementptr inbounds %Token, ptr %105, i64 0, i32 1
  %106 = load ptr, ptr %memberidx60, align 8
  %107 = load ptr, ptr %memberidx.i247, align 8
  %memberidx1.i268 = getelementptr inbounds %Compiler, ptr %107, i64 0, i32 5
  %108 = load ptr, ptr %memberidx1.i268, align 8
  %109 = call ptr @malloc(i32 24)
  store i64 1, ptr %109, align 4
  %memberidx1.i.i269 = getelementptr inbounds %FloError, ptr %109, i64 0, i32 2
  store ptr %106, ptr %memberidx1.i.i269, align 8
  %memberidx2.i.i270 = getelementptr inbounds %FloError, ptr %109, i64 0, i32 1
  store ptr %104, ptr %memberidx2.i.i270, align 8
  %memberidx.i.i271 = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 1
  %110 = load i64, ptr %memberidx.i.i271, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 2
  %111 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %110, %111
  br i1 %.not.i.i, label %if.entry56.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry56.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry56
  %.pre409 = load ptr, ptr %108, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry56
  %112 = shl nuw i64 %111, 1
  store i64 %112, ptr %memberidx1.i2.i, align 4
  %113 = load ptr, ptr %108, align 8
  %114 = shl i64 %111, 4
  %115 = call ptr @realloc(ptr %113, i64 %114)
  store ptr %115, ptr %108, align 8
  %.pre408 = load i64, ptr %memberidx.i.i271, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry56.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %116 = phi ptr [ %.pre409, %if.entry56.TypeChecker_error.exit_crit_edge ], [ %115, %if.entry.i.i ]
  %117 = phi i64 [ %110, %if.entry56.TypeChecker_error.exit_crit_edge ], [ %.pre408, %if.entry.i.i ]
  %118 = add nsw i64 %117, 1
  store i64 %118, ptr %memberidx.i.i271, align 4
  %119 = getelementptr inbounds ptr, ptr %116, i64 %117
  store ptr %109, ptr %119, align 8
  br label %common.ret

ifend58:                                          ; preds = %for.body48
  %120 = load ptr, ptr %memberidx61, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr %120, ptr %86, ptr %84)
  %121 = add nuw nsw i64 %82, 1
  store i64 %121, ptr %memberidx1.i.i251, align 4
  %122 = getelementptr inbounds ptr, ptr %79, i64 %82
  %.not423 = icmp slt i64 %82, %80
  br i1 %.not423, label %for.body48, label %for.end50

for.body65:                                       ; preds = %for.end50, %TypeChecker_declare_global_const.exit
  %123 = phi i64 [ %147, %TypeChecker_declare_global_const.exit ], [ 1, %for.end50 ]
  %global_const.0377.in = phi ptr [ %148, %TypeChecker_declare_global_const.exit ], [ %91, %for.end50 ]
  %global_const.0377 = load ptr, ptr %global_const.0377.in, align 8
  %124 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr nonnull %0, ptr %global_const.0377)
  %125 = load ptr, ptr %memberidx.i247, align 8
  %memberidx1.i.i276 = getelementptr inbounds %Compiler, ptr %125, i64 0, i32 5
  %126 = load ptr, ptr %memberidx1.i.i276, align 8
  %memberidx2.i.i277 = getelementptr inbounds %Array_FloError_, ptr %126, i64 0, i32 1
  %127 = load i64, ptr %memberidx2.i.i277, align 4
  %128 = icmp sgt i64 %127, 0
  br i1 %128, label %TypeChecker_declare_global_const.exit, label %ifend.i

ifend.i:                                          ; preds = %for.body65
  %memberidx.i278 = getelementptr inbounds %ConstDeclaration, ptr %124, i64 0, i32 3
  store i1 true, ptr %memberidx.i278, align 1
  %129 = load ptr, ptr %memberidx10, align 8
  %130 = load i64, ptr %129, align 4
  %131 = load ptr, ptr %0, align 8
  %132 = load ptr, ptr %131, align 8
  %133 = load ptr, ptr %132, align 8
  %134 = getelementptr inbounds ptr, ptr %133, i64 %130
  %135 = load ptr, ptr %134, align 8
  %memberidx1.i279 = getelementptr inbounds %Module, ptr %135, i64 0, i32 8
  %136 = load ptr, ptr %memberidx1.i279, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %136, i64 0, i32 1
  %137 = load i64, ptr %memberidx.i5.i, align 4
  %memberidx1.i6.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %136, i64 0, i32 2
  %138 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i280 = icmp slt i64 %137, %138
  br i1 %.not.i.i280, label %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge, label %if.entry.i.i282

ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge: ; preds = %ifend.i
  %.pre411 = load ptr, ptr %136, align 8
  br label %Array_ConstDeclaration____sl__.exit.i

if.entry.i.i282:                                  ; preds = %ifend.i
  %139 = shl nuw i64 %138, 1
  store i64 %139, ptr %memberidx1.i6.i, align 4
  %140 = load ptr, ptr %136, align 8
  %141 = shl i64 %138, 4
  %142 = tail call ptr @realloc(ptr %140, i64 %141)
  store ptr %142, ptr %136, align 8
  %.pre410 = load i64, ptr %memberidx.i5.i, align 4
  br label %Array_ConstDeclaration____sl__.exit.i

Array_ConstDeclaration____sl__.exit.i:            ; preds = %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge, %if.entry.i.i282
  %143 = phi ptr [ %142, %if.entry.i.i282 ], [ %.pre411, %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge ]
  %144 = phi i64 [ %.pre410, %if.entry.i.i282 ], [ %137, %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge ]
  %145 = add nsw i64 %144, 1
  store i64 %145, ptr %memberidx.i5.i, align 4
  %146 = getelementptr inbounds ptr, ptr %143, i64 %144
  store ptr %124, ptr %146, align 8
  br label %TypeChecker_declare_global_const.exit

TypeChecker_declare_global_const.exit:            ; preds = %for.body65, %Array_ConstDeclaration____sl__.exit.i
  %147 = add nuw nsw i64 %123, 1
  store i64 %147, ptr %memberidx1.i.i258, align 4
  %148 = getelementptr inbounds ptr, ptr %91, i64 %123
  %.not424 = icmp slt i64 %123, %92
  br i1 %.not424, label %for.body65, label %for.end67

for.end67:                                        ; preds = %TypeChecker_declare_global_const.exit, %for.end50
  tail call void @free(ptr nonnull %90)
  %memberidx70 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 5
  %149 = load ptr, ptr %memberidx70, align 8
  %150 = tail call ptr @malloc(i32 25)
  %151 = load ptr, ptr %149, align 8
  %memberidx1.i286 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %149, i64 0, i32 1
  %152 = load i64, ptr %memberidx1.i286, align 4
  store i1 false, ptr %150, align 1
  %memberidx1.i.i287 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %150, i64 0, i32 1
  %memberidx2.i.i288 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %150, i64 0, i32 3
  store ptr %151, ptr %memberidx2.i.i288, align 8
  %memberidx3.i.i289 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %150, i64 0, i32 2
  store i64 %152, ptr %memberidx3.i.i289, align 4
  store i64 1, ptr %memberidx1.i.i287, align 4
  %153 = icmp slt i64 %152, 1
  br i1 %153, label %for.end74, label %for.body72

for.body72:                                       ; preds = %for.end67, %TypeChecker_declare_global_var.exit
  %154 = phi i64 [ %209, %TypeChecker_declare_global_var.exit ], [ 1, %for.end67 ]
  %global_var.0374.in = phi ptr [ %210, %TypeChecker_declare_global_var.exit ], [ %151, %for.end67 ]
  %global_var.0374 = load ptr, ptr %global_var.0374.in, align 8
  %155 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr nonnull %0, ptr %global_var.0374)
  %156 = load ptr, ptr %memberidx.i247, align 8
  %memberidx1.i.i294 = getelementptr inbounds %Compiler, ptr %156, i64 0, i32 5
  %157 = load ptr, ptr %memberidx1.i.i294, align 8
  %memberidx2.i.i295 = getelementptr inbounds %Array_FloError_, ptr %157, i64 0, i32 1
  %158 = load i64, ptr %memberidx2.i.i295, align 4
  %159 = icmp sgt i64 %158, 0
  br i1 %159, label %TypeChecker_declare_global_var.exit, label %ifend.i300

ifend.i300:                                       ; preds = %for.body72
  %160 = load ptr, ptr %0, align 8
  %memberidx1.i296 = getelementptr inbounds %VarDeclaration, ptr %155, i64 0, i32 2
  %161 = load ptr, ptr %memberidx1.i296, align 8
  %162 = load ptr, ptr %160, align 8
  %memberidx1.i24.i = getelementptr inbounds %VarId, ptr %161, i64 0, i32 1
  %163 = load i64, ptr %memberidx1.i24.i, align 4
  %164 = load ptr, ptr %162, align 8
  %165 = getelementptr inbounds ptr, ptr %164, i64 %163
  %166 = load ptr, ptr %165, align 8
  %memberidx2.i25.i = getelementptr inbounds %Module, ptr %166, i64 0, i32 1
  %167 = load ptr, ptr %memberidx2.i25.i, align 8
  %memberidx3.i.i297 = getelementptr inbounds %VarId, ptr %161, i64 0, i32 2
  %168 = load i64, ptr %memberidx3.i.i297, align 4
  %169 = load ptr, ptr %167, align 8
  %170 = getelementptr inbounds ptr, ptr %169, i64 %168
  %171 = load ptr, ptr %170, align 8
  %memberidx2.i298 = getelementptr inbounds %Var, ptr %171, i64 0, i32 2
  %172 = load ptr, ptr %memberidx2.i298, align 8
  %.not.i299 = icmp eq ptr %172, null
  br i1 %.not.i299, label %ifend5.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %ifend.i300
  %memberidx6.i301 = getelementptr inbounds %Expression, ptr %172, i64 0, i32 1
  %173 = load i1, ptr %memberidx6.i301, align 1
  br i1 %173, label %ifend5.i, label %if.entry7.i

ifend5.i:                                         ; preds = %if.entry3.i, %ifend.i300
  %memberidx12.i302 = getelementptr inbounds %VarDeclaration, ptr %155, i64 0, i32 3
  store i1 true, ptr %memberidx12.i302, align 1
  %174 = load ptr, ptr %memberidx10, align 8
  %175 = load i64, ptr %174, align 4
  %176 = load ptr, ptr %0, align 8
  %177 = load ptr, ptr %176, align 8
  %178 = load ptr, ptr %177, align 8
  %179 = getelementptr inbounds ptr, ptr %178, i64 %175
  %180 = load ptr, ptr %179, align 8
  %memberidx13.i303 = getelementptr inbounds %Module, ptr %180, i64 0, i32 9
  %181 = load ptr, ptr %memberidx13.i303, align 8
  %memberidx.i29.i = getelementptr inbounds %Array_VarDeclaration_, ptr %181, i64 0, i32 1
  %182 = load i64, ptr %memberidx.i29.i, align 4
  %memberidx1.i30.i = getelementptr inbounds %Array_VarDeclaration_, ptr %181, i64 0, i32 2
  %183 = load i64, ptr %memberidx1.i30.i, align 4
  %.not.i.i304 = icmp slt i64 %182, %183
  br i1 %.not.i.i304, label %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge, label %if.entry.i.i305

ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge: ; preds = %ifend5.i
  %.pre415 = load ptr, ptr %181, align 8
  br label %Array_VarDeclaration____sl__.exit.i

if.entry.i.i305:                                  ; preds = %ifend5.i
  %184 = shl nuw i64 %183, 1
  store i64 %184, ptr %memberidx1.i30.i, align 4
  %185 = load ptr, ptr %181, align 8
  %186 = shl i64 %183, 4
  %187 = tail call ptr @realloc(ptr %185, i64 %186)
  store ptr %187, ptr %181, align 8
  %.pre414 = load i64, ptr %memberidx.i29.i, align 4
  br label %Array_VarDeclaration____sl__.exit.i

Array_VarDeclaration____sl__.exit.i:              ; preds = %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge, %if.entry.i.i305
  %188 = phi ptr [ %187, %if.entry.i.i305 ], [ %.pre415, %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge ]
  %189 = phi i64 [ %.pre414, %if.entry.i.i305 ], [ %182, %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge ]
  %190 = add nsw i64 %189, 1
  store i64 %190, ptr %memberidx.i29.i, align 4
  %191 = getelementptr inbounds ptr, ptr %188, i64 %189
  store ptr %155, ptr %191, align 8
  br label %TypeChecker_declare_global_var.exit

if.entry7.i:                                      ; preds = %if.entry3.i
  %192 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %192, ptr noundef nonnull align 8 dereferenceable(54) @105, i64 54, i1 false)
  %193 = tail call ptr @malloc(i32 24)
  store ptr %192, ptr %193, align 8
  %memberidx1.i.i27.i = getelementptr inbounds %String, ptr %193, i64 0, i32 1
  store i64 54, ptr %memberidx1.i.i27.i, align 4
  %memberidx2.i.i28.i = getelementptr inbounds %String, ptr %193, i64 0, i32 2
  store i64 54, ptr %memberidx2.i.i28.i, align 4
  %memberidx10.i306 = getelementptr inbounds %VarDeclarationStatement, ptr %global_var.0374, i64 0, i32 4
  %194 = load ptr, ptr %memberidx10.i306, align 8
  %195 = load ptr, ptr %194, align 8
  %196 = load ptr, ptr %memberidx.i247, align 8
  %memberidx1.i23.i = getelementptr inbounds %Compiler, ptr %196, i64 0, i32 5
  %197 = load ptr, ptr %memberidx1.i23.i, align 8
  %198 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %198, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloError, ptr %198, i64 0, i32 2
  store ptr %195, ptr %memberidx1.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %FloError, ptr %198, i64 0, i32 1
  store ptr %193, ptr %memberidx2.i.i.i, align 8
  %memberidx.i.i.i307 = getelementptr inbounds %Array_FloError_, ptr %197, i64 0, i32 1
  %199 = load i64, ptr %memberidx.i.i.i307, align 4
  %memberidx1.i2.i.i = getelementptr inbounds %Array_FloError_, ptr %197, i64 0, i32 2
  %200 = load i64, ptr %memberidx1.i2.i.i, align 4
  %.not.i.i.i = icmp slt i64 %199, %200
  br i1 %.not.i.i.i, label %if.entry7.i.TypeChecker_error.exit.i_crit_edge, label %if.entry.i.i.i

if.entry7.i.TypeChecker_error.exit.i_crit_edge:   ; preds = %if.entry7.i
  %.pre413 = load ptr, ptr %197, align 8
  br label %TypeChecker_error.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry7.i
  %201 = shl nuw i64 %200, 1
  store i64 %201, ptr %memberidx1.i2.i.i, align 4
  %202 = load ptr, ptr %197, align 8
  %203 = shl i64 %200, 4
  %204 = tail call ptr @realloc(ptr %202, i64 %203)
  store ptr %204, ptr %197, align 8
  %.pre412 = load i64, ptr %memberidx.i.i.i307, align 4
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry7.i.TypeChecker_error.exit.i_crit_edge, %if.entry.i.i.i
  %205 = phi ptr [ %204, %if.entry.i.i.i ], [ %.pre413, %if.entry7.i.TypeChecker_error.exit.i_crit_edge ]
  %206 = phi i64 [ %.pre412, %if.entry.i.i.i ], [ %199, %if.entry7.i.TypeChecker_error.exit.i_crit_edge ]
  %207 = add nsw i64 %206, 1
  store i64 %207, ptr %memberidx.i.i.i307, align 4
  %208 = getelementptr inbounds ptr, ptr %205, i64 %206
  store ptr %198, ptr %208, align 8
  br label %TypeChecker_declare_global_var.exit

TypeChecker_declare_global_var.exit:              ; preds = %for.body72, %Array_VarDeclaration____sl__.exit.i, %TypeChecker_error.exit.i
  %209 = add nuw nsw i64 %154, 1
  store i64 %209, ptr %memberidx1.i.i287, align 4
  %210 = getelementptr inbounds ptr, ptr %151, i64 %154
  %.not425 = icmp slt i64 %154, %152
  br i1 %.not425, label %for.body72, label %for.end74

for.end74:                                        ; preds = %TypeChecker_declare_global_var.exit, %for.end67
  tail call void @free(ptr nonnull %150)
  %211 = load ptr, ptr %1, align 8
  %212 = tail call ptr @malloc(i32 25)
  %213 = load ptr, ptr %211, align 8
  %memberidx1.i311 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %211, i64 0, i32 1
  %214 = load i64, ptr %memberidx1.i311, align 4
  store i1 false, ptr %212, align 1
  %memberidx1.i.i312 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %212, i64 0, i32 1
  %memberidx2.i.i313 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %212, i64 0, i32 3
  store ptr %213, ptr %memberidx2.i.i313, align 8
  %memberidx3.i.i314 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %212, i64 0, i32 2
  store i64 %214, ptr %memberidx3.i.i314, align 4
  store i64 1, ptr %memberidx1.i.i312, align 4
  %215 = icmp slt i64 %214, 1
  br i1 %215, label %for.end81, label %for.body79

for.body79:                                       ; preds = %for.end74, %for.body79
  %216 = phi i64 [ %217, %for.body79 ], [ 1, %for.end74 ]
  %function.0371.in = phi ptr [ %218, %for.body79 ], [ %213, %for.end74 ]
  %function.0371 = load ptr, ptr %function.0371.in, align 8
  tail call fastcc void @TypeChecker_declare_function_within_module(ptr nonnull %0, ptr %function.0371)
  %217 = add nuw nsw i64 %216, 1
  store i64 %217, ptr %memberidx1.i.i312, align 4
  %218 = getelementptr inbounds ptr, ptr %213, i64 %216
  %.not426 = icmp slt i64 %216, %214
  br i1 %.not426, label %for.body79, label %for.end81

for.end81:                                        ; preds = %for.body79, %for.end74
  tail call void @free(ptr nonnull %212)
  %219 = load ptr, ptr %memberidx.i247, align 8
  %memberidx1.i322 = getelementptr inbounds %Compiler, ptr %219, i64 0, i32 5
  %220 = load ptr, ptr %memberidx1.i322, align 8
  %memberidx2.i323 = getelementptr inbounds %Array_FloError_, ptr %220, i64 0, i32 1
  %221 = load i64, ptr %memberidx2.i323, align 4
  %222 = icmp sgt i64 %221, 0
  br i1 %222, label %common.ret, label %for.cond87.preheader

for.cond87.preheader:                             ; preds = %for.end81
  %223 = load ptr, ptr %memberidx29, align 8
  %memberidx92368 = getelementptr inbounds %Array_EnumNode_, ptr %223, i64 0, i32 1
  %224 = load i64, ptr %memberidx92368, align 4
  %225 = icmp sgt i64 %224, 0
  br i1 %225, label %for.body88, label %for.entry95

for.body88:                                       ; preds = %for.cond87.preheader, %for.body88
  %226 = phi ptr [ %235, %for.body88 ], [ %223, %for.cond87.preheader ]
  %i.0369 = phi i64 [ %234, %for.body88 ], [ 0, %for.cond87.preheader ]
  %227 = load ptr, ptr %memberidx10.i, align 8
  %228 = load ptr, ptr %227, align 8
  %229 = getelementptr inbounds ptr, ptr %228, i64 %i.0369
  %230 = load ptr, ptr %229, align 8
  %231 = load ptr, ptr %226, align 8
  %232 = getelementptr inbounds ptr, ptr %231, i64 %i.0369
  %233 = load ptr, ptr %232, align 8
  tail call fastcc void @TypeChecker_check_enum_body(ptr nonnull %0, ptr %230, ptr %233)
  %234 = add nuw nsw i64 %i.0369, 1
  %235 = load ptr, ptr %memberidx29, align 8
  %memberidx92 = getelementptr inbounds %Array_EnumNode_, ptr %235, i64 0, i32 1
  %236 = load i64, ptr %memberidx92, align 4
  %237 = icmp slt i64 %234, %236
  br i1 %237, label %for.body88, label %for.entry95

for.entry95:                                      ; preds = %for.body88, %for.cond87.preheader
  %238 = load ptr, ptr %memberidx36, align 8
  %239 = tail call ptr @malloc(i32 25)
  %240 = load ptr, ptr %238, align 8
  %memberidx1.i324 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %238, i64 0, i32 1
  %241 = load i64, ptr %memberidx1.i324, align 4
  store i1 false, ptr %239, align 1
  %memberidx1.i.i325 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %239, i64 0, i32 1
  %memberidx2.i.i326 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %239, i64 0, i32 3
  store ptr %240, ptr %memberidx2.i.i326, align 8
  %memberidx3.i.i327 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %239, i64 0, i32 2
  store i64 %241, ptr %memberidx3.i.i327, align 4
  store i64 1, ptr %memberidx1.i.i325, align 4
  %242 = icmp slt i64 %241, 1
  br i1 %242, label %for.end100, label %for.body98

for.body98:                                       ; preds = %for.entry95, %for.body98
  %243 = phi i64 [ %244, %for.body98 ], [ 1, %for.entry95 ]
  %class_7.0367.in = phi ptr [ %245, %for.body98 ], [ %240, %for.entry95 ]
  %class_7.0367 = load ptr, ptr %class_7.0367.in, align 8
  tail call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr %class_7.0367)
  %244 = add nuw nsw i64 %243, 1
  store i64 %244, ptr %memberidx1.i.i325, align 4
  %245 = getelementptr inbounds ptr, ptr %240, i64 %243
  %.not427 = icmp slt i64 %243, %241
  br i1 %.not427, label %for.body98, label %for.end100

for.end100:                                       ; preds = %for.body98, %for.entry95
  tail call void @free(ptr nonnull %239)
  %246 = load ptr, ptr %1, align 8
  %memberidx108364 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %246, i64 0, i32 1
  %247 = load i64, ptr %memberidx108364, align 4
  %248 = icmp sgt i64 %247, 0
  br i1 %248, label %for.body104, label %for.end106

for.body104:                                      ; preds = %for.end100, %TypeChecker_check_function_body.exit
  %249 = phi ptr [ %314, %TypeChecker_check_function_body.exit ], [ %246, %for.end100 ]
  %i9.0365 = phi i64 [ %313, %TypeChecker_check_function_body.exit ], [ 0, %for.end100 ]
  %250 = load ptr, ptr %memberidx1.i205, align 8
  %251 = load ptr, ptr %250, align 8
  %252 = getelementptr inbounds ptr, ptr %251, i64 %i9.0365
  %253 = load ptr, ptr %252, align 8
  %254 = load ptr, ptr %249, align 8
  %255 = getelementptr inbounds ptr, ptr %254, i64 %i9.0365
  %256 = load ptr, ptr %255, align 8
  %memberidx.i334 = getelementptr inbounds %Function, ptr %253, i64 0, i32 6
  %257 = load i1, ptr %memberidx.i334, align 1
  br i1 %257, label %TypeChecker_check_function_body.exit, label %ifend.i342

ifend.i342:                                       ; preds = %for.body104
  %258 = load ptr, ptr %253, align 8
  store ptr %258, ptr %memberidx25, align 8
  %memberidx6.i337 = getelementptr inbounds %Function, ptr %253, i64 0, i32 5
  %259 = load ptr, ptr %memberidx6.i337, align 8
  store ptr %259, ptr %memberidx10, align 8
  %memberidx7.i338 = getelementptr inbounds %Function, ptr %253, i64 0, i32 3
  %memberidx8.i = getelementptr inbounds %FunctionDeclarationNode, ptr %256, i64 0, i32 2
  %260 = load ptr, ptr %memberidx8.i, align 8
  %261 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %260, ptr null, i1 false)
  store ptr %261, ptr %memberidx7.i338, align 8
  %262 = load ptr, ptr %memberidx.i247, align 8
  %memberidx1.i.i340 = getelementptr inbounds %Compiler, ptr %262, i64 0, i32 5
  %263 = load ptr, ptr %memberidx1.i.i340, align 8
  %memberidx2.i.i341 = getelementptr inbounds %Array_FloError_, ptr %263, i64 0, i32 1
  %264 = load i64, ptr %memberidx2.i.i341, align 4
  %265 = icmp sgt i64 %264, 0
  br i1 %265, label %TypeChecker_check_function_body.exit, label %ifend11.i

ifend11.i:                                        ; preds = %ifend.i342
  %memberidx13.i343 = getelementptr inbounds %Block, ptr %261, i64 0, i32 1
  %266 = load i1, ptr %memberidx13.i343, align 1
  br i1 %266, label %ifend16.i, label %if.entry14.i

if.entry14.i:                                     ; preds = %ifend11.i
  %memberidx17.i = getelementptr inbounds %Function, ptr %253, i64 0, i32 4
  %267 = load ptr, ptr %memberidx17.i, align 8
  %memberidx18.i344 = getelementptr inbounds %FunctionType, ptr %267, i64 0, i32 2
  %268 = load ptr, ptr %memberidx18.i344, align 8
  %269 = load i64, ptr %268, align 4
  %270 = icmp eq i64 %269, 10
  br i1 %270, label %if.entry20.i, label %else21.i

ifend16.i:                                        ; preds = %Array_Statement____sl__.exit.i, %ifend11.i
  %271 = load ptr, ptr %0, align 8
  %272 = load ptr, ptr %memberidx6.i337, align 8
  %273 = load ptr, ptr %271, align 8
  %274 = load i64, ptr %272, align 4
  %275 = load ptr, ptr %273, align 8
  %276 = getelementptr inbounds ptr, ptr %275, i64 %274
  %277 = load ptr, ptr %276, align 8
  %memberidx2.i49.i = getelementptr inbounds %Module, ptr %277, i64 0, i32 7
  %278 = load ptr, ptr %memberidx2.i49.i, align 8
  %memberidx3.i.i345 = getelementptr inbounds %ScopeId, ptr %272, i64 0, i32 1
  %279 = load i64, ptr %memberidx3.i.i345, align 4
  %280 = load ptr, ptr %278, align 8
  %281 = getelementptr inbounds ptr, ptr %280, i64 %279
  %282 = load ptr, ptr %281, align 8
  %memberidx30.i = getelementptr inbounds %Scope, ptr %282, i64 0, i32 5
  %283 = load ptr, ptr %memberidx30.i, align 8
  store ptr %283, ptr %memberidx10, align 8
  br label %TypeChecker_check_function_body.exit

if.entry20.i:                                     ; preds = %if.entry14.i
  %284 = load ptr, ptr %261, align 8
  %285 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %285, align 4
  %memberidx.i50.i = getelementptr inbounds %ReturnStatement, ptr %285, i64 0, i32 1
  store ptr null, ptr %memberidx.i50.i, align 8
  %memberidx.i53.i = getelementptr inbounds %Array_Statement_, ptr %284, i64 0, i32 1
  %286 = load i64, ptr %memberidx.i53.i, align 4
  %memberidx1.i54.i = getelementptr inbounds %Array_Statement_, ptr %284, i64 0, i32 2
  %287 = load i64, ptr %memberidx1.i54.i, align 4
  %.not.i.i346 = icmp slt i64 %286, %287
  br i1 %.not.i.i346, label %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge, label %if.entry.i.i347

if.entry20.i.Array_Statement____sl__.exit.i_crit_edge: ; preds = %if.entry20.i
  %.pre419 = load ptr, ptr %284, align 8
  br label %Array_Statement____sl__.exit.i

if.entry.i.i347:                                  ; preds = %if.entry20.i
  %288 = shl nuw i64 %287, 1
  store i64 %288, ptr %memberidx1.i54.i, align 4
  %289 = load ptr, ptr %284, align 8
  %290 = shl i64 %287, 4
  %291 = tail call ptr @realloc(ptr %289, i64 %290)
  store ptr %291, ptr %284, align 8
  %.pre418 = load i64, ptr %memberidx.i53.i, align 4
  br label %Array_Statement____sl__.exit.i

Array_Statement____sl__.exit.i:                   ; preds = %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge, %if.entry.i.i347
  %292 = phi ptr [ %291, %if.entry.i.i347 ], [ %.pre419, %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge ]
  %293 = phi i64 [ %.pre418, %if.entry.i.i347 ], [ %286, %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge ]
  %294 = add nsw i64 %293, 1
  store i64 %294, ptr %memberidx.i53.i, align 4
  %295 = getelementptr inbounds ptr, ptr %292, i64 %293
  store ptr %285, ptr %295, align 8
  br label %ifend16.i

else21.i:                                         ; preds = %if.entry14.i
  %296 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %296, ptr noundef nonnull align 8 dereferenceable(40) @157, i64 40, i1 false)
  %297 = tail call ptr @malloc(i32 24)
  store ptr %296, ptr %297, align 8
  %memberidx1.i.i51.i = getelementptr inbounds %String, ptr %297, i64 0, i32 1
  store i64 40, ptr %memberidx1.i.i51.i, align 4
  %memberidx2.i.i52.i = getelementptr inbounds %String, ptr %297, i64 0, i32 2
  store i64 40, ptr %memberidx2.i.i52.i, align 4
  %memberidx25.i = getelementptr inbounds %FunctionDeclarationNode, ptr %256, i64 0, i32 3
  %298 = load ptr, ptr %memberidx25.i, align 8
  %299 = load ptr, ptr %298, align 8
  %300 = load ptr, ptr %memberidx.i247, align 8
  %memberidx1.i48.i = getelementptr inbounds %Compiler, ptr %300, i64 0, i32 5
  %301 = load ptr, ptr %memberidx1.i48.i, align 8
  %302 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %302, align 4
  %memberidx1.i.i.i348 = getelementptr inbounds %FloError, ptr %302, i64 0, i32 2
  store ptr %299, ptr %memberidx1.i.i.i348, align 8
  %memberidx2.i.i.i349 = getelementptr inbounds %FloError, ptr %302, i64 0, i32 1
  store ptr %297, ptr %memberidx2.i.i.i349, align 8
  %memberidx.i.i.i350 = getelementptr inbounds %Array_FloError_, ptr %301, i64 0, i32 1
  %303 = load i64, ptr %memberidx.i.i.i350, align 4
  %memberidx1.i2.i.i351 = getelementptr inbounds %Array_FloError_, ptr %301, i64 0, i32 2
  %304 = load i64, ptr %memberidx1.i2.i.i351, align 4
  %.not.i.i.i352 = icmp slt i64 %303, %304
  br i1 %.not.i.i.i352, label %else21.i.TypeChecker_error.exit.i355_crit_edge, label %if.entry.i.i.i354

else21.i.TypeChecker_error.exit.i355_crit_edge:   ; preds = %else21.i
  %.pre417 = load ptr, ptr %301, align 8
  br label %TypeChecker_error.exit.i355

if.entry.i.i.i354:                                ; preds = %else21.i
  %305 = shl nuw i64 %304, 1
  store i64 %305, ptr %memberidx1.i2.i.i351, align 4
  %306 = load ptr, ptr %301, align 8
  %307 = shl i64 %304, 4
  %308 = tail call ptr @realloc(ptr %306, i64 %307)
  store ptr %308, ptr %301, align 8
  %.pre416 = load i64, ptr %memberidx.i.i.i350, align 4
  br label %TypeChecker_error.exit.i355

TypeChecker_error.exit.i355:                      ; preds = %else21.i.TypeChecker_error.exit.i355_crit_edge, %if.entry.i.i.i354
  %309 = phi ptr [ %308, %if.entry.i.i.i354 ], [ %.pre417, %else21.i.TypeChecker_error.exit.i355_crit_edge ]
  %310 = phi i64 [ %.pre416, %if.entry.i.i.i354 ], [ %303, %else21.i.TypeChecker_error.exit.i355_crit_edge ]
  %311 = add nsw i64 %310, 1
  store i64 %311, ptr %memberidx.i.i.i350, align 4
  %312 = getelementptr inbounds ptr, ptr %309, i64 %310
  store ptr %302, ptr %312, align 8
  br label %TypeChecker_check_function_body.exit

TypeChecker_check_function_body.exit:             ; preds = %for.body104, %ifend.i342, %ifend16.i, %TypeChecker_error.exit.i355
  %313 = add nuw nsw i64 %i9.0365, 1
  %314 = load ptr, ptr %1, align 8
  %memberidx108 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %314, i64 0, i32 1
  %315 = load i64, ptr %memberidx108, align 4
  %316 = icmp slt i64 %313, %315
  br i1 %316, label %for.body104, label %for.end106

for.end106:                                       ; preds = %TypeChecker_check_function_body.exit, %for.end100
  %317 = load i1, ptr %memberidx, align 1
  %318 = load ptr, ptr %memberidx10, align 8
  %319 = load i64, ptr %318, align 4
  %320 = icmp ne i64 %319, 0
  %321 = and i1 %317, %320
  br i1 %321, label %if.entry114, label %ifend116

if.entry114:                                      ; preds = %for.end106
  %322 = load ptr, ptr %0, align 8
  %323 = load ptr, ptr %322, align 8
  %324 = load ptr, ptr %323, align 8
  %325 = load ptr, ptr %324, align 8
  %memberidx1.i220 = getelementptr inbounds %Module, ptr %325, i64 0, i32 5
  %326 = load ptr, ptr %memberidx1.i220, align 8
  store ptr %326, ptr %memberidx10, align 8
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %4)
  br label %ifend116

ifend116:                                         ; preds = %for.end106, %if.entry114
  store ptr %3, ptr %memberidx10, align 8
  %327 = load ptr, ptr %memberidx.i247, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %327, i64 0, i32 5
  %328 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %328, i64 0, i32 1
  %329 = load i64, ptr %memberidx2.i, align 4
  %330 = icmp sgt i64 %329, 0
  %spec.select = select i1 %330, ptr null, ptr %4
  br label %common.ret
}

define internal fastcc void @TypeChecker_import_all_from_module(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = load ptr, ptr %0, align 8
  %memberidx6 = getelementptr inbounds %Module, ptr %1, i64 0, i32 5
  %3 = load ptr, ptr %memberidx6, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = load i64, ptr %3, align 4
  %6 = load ptr, ptr %4, align 8
  %7 = getelementptr inbounds ptr, ptr %6, i64 %5
  %8 = load ptr, ptr %7, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %3, i64 0, i32 1
  %10 = load i64, ptr %memberidx3.i, align 4
  %11 = load ptr, ptr %9, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx7 = getelementptr inbounds %Module, ptr %1, i64 0, i32 9
  %14 = load ptr, ptr %memberidx7, align 8
  %15 = tail call ptr @malloc(i32 25)
  %16 = load ptr, ptr %14, align 8
  %memberidx1.i = getelementptr inbounds %Array_VarDeclaration_, ptr %14, i64 0, i32 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %17, 1
  br i1 %18, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i.i.i110 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %19 = phi i64 [ 1, %for.body.lr.ph ], [ %39, %for.body ]
  %imported_var.0210.in = phi ptr [ %16, %for.body.lr.ph ], [ %40, %for.body ]
  %imported_var.0210 = load ptr, ptr %imported_var.0210.in, align 8
  %memberidx9 = getelementptr inbounds %VarDeclaration, ptr %imported_var.0210, i64 0, i32 1
  %20 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %VarDeclaration, ptr %imported_var.0210, i64 0, i32 2
  %21 = load ptr, ptr %memberidx10, align 8
  %22 = load ptr, ptr %0, align 8
  %23 = load ptr, ptr %memberidx.i.i.i110, align 8
  %24 = load i64, ptr %23, align 4
  %25 = load ptr, ptr %22, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %24
  %28 = load ptr, ptr %27, align 8
  %memberidx1.i.i111 = getelementptr inbounds %Module, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i.i111, align 8
  %30 = load i64, ptr %29, align 4
  %31 = getelementptr inbounds ptr, ptr %26, i64 %30
  %32 = load ptr, ptr %31, align 8
  %memberidx2.i.i.i112 = getelementptr inbounds %Module, ptr %32, i64 0, i32 7
  %33 = load ptr, ptr %memberidx2.i.i.i112, align 8
  %memberidx3.i.i.i113 = getelementptr inbounds %ScopeId, ptr %29, i64 0, i32 1
  %34 = load i64, ptr %memberidx3.i.i.i113, align 4
  %35 = load ptr, ptr %33, align 8
  %36 = getelementptr inbounds ptr, ptr %35, i64 %34
  %37 = load ptr, ptr %36, align 8
  %memberidx.i114 = getelementptr inbounds %Scope, ptr %37, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i114, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %38, ptr %20, ptr %21)
  %39 = add nuw nsw i64 %19, 1
  %40 = getelementptr inbounds ptr, ptr %16, i64 %19
  %.not = icmp slt i64 %19, %17
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %15)
  %memberidx12 = getelementptr inbounds %Module, ptr %1, i64 0, i32 8
  %41 = load ptr, ptr %memberidx12, align 8
  %42 = tail call ptr @malloc(i32 25)
  %43 = load ptr, ptr %41, align 8
  %memberidx1.i127 = getelementptr inbounds %Array_ConstDeclaration_, ptr %41, i64 0, i32 1
  %44 = load i64, ptr %memberidx1.i127, align 4
  store i1 false, ptr %42, align 1
  %memberidx1.i.i128 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %42, i64 0, i32 1
  %memberidx2.i.i129 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %42, i64 0, i32 3
  store ptr %43, ptr %memberidx2.i.i129, align 8
  %memberidx3.i.i130 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %42, i64 0, i32 2
  store i64 %44, ptr %memberidx3.i.i130, align 4
  store i64 1, ptr %memberidx1.i.i128, align 4
  %45 = icmp slt i64 %44, 1
  br i1 %45, label %for.end16, label %for.body14.lr.ph

for.body14.lr.ph:                                 ; preds = %for.end
  %memberidx.i.i.i134 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body14

for.body14:                                       ; preds = %for.body14.lr.ph, %for.body14
  %46 = phi i64 [ 1, %for.body14.lr.ph ], [ %66, %for.body14 ]
  %imported_const.0207.in = phi ptr [ %43, %for.body14.lr.ph ], [ %67, %for.body14 ]
  %imported_const.0207 = load ptr, ptr %imported_const.0207.in, align 8
  %memberidx18 = getelementptr inbounds %ConstDeclaration, ptr %imported_const.0207, i64 0, i32 1
  %47 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %ConstDeclaration, ptr %imported_const.0207, i64 0, i32 2
  %48 = load ptr, ptr %memberidx19, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load ptr, ptr %memberidx.i.i.i134, align 8
  %51 = load i64, ptr %50, align 4
  %52 = load ptr, ptr %49, align 8
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 %51
  %55 = load ptr, ptr %54, align 8
  %memberidx1.i.i135 = getelementptr inbounds %Module, ptr %55, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1.i.i135, align 8
  %57 = load i64, ptr %56, align 4
  %58 = getelementptr inbounds ptr, ptr %53, i64 %57
  %59 = load ptr, ptr %58, align 8
  %memberidx2.i.i.i136 = getelementptr inbounds %Module, ptr %59, i64 0, i32 7
  %60 = load ptr, ptr %memberidx2.i.i.i136, align 8
  %memberidx3.i.i.i137 = getelementptr inbounds %ScopeId, ptr %56, i64 0, i32 1
  %61 = load i64, ptr %memberidx3.i.i.i137, align 4
  %62 = load ptr, ptr %60, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8
  %memberidx.i138 = getelementptr inbounds %Scope, ptr %64, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i138, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %65, ptr %47, ptr %48)
  %66 = add nuw nsw i64 %46, 1
  store i64 %66, ptr %memberidx1.i.i128, align 4
  %67 = getelementptr inbounds ptr, ptr %43, i64 %46
  %.not219 = icmp slt i64 %46, %44
  br i1 %.not219, label %for.body14, label %for.end16

for.end16:                                        ; preds = %for.body14, %for.end
  tail call void @free(ptr nonnull %42)
  %memberidx21 = getelementptr inbounds %Module, ptr %1, i64 0, i32 4
  %68 = load ptr, ptr %memberidx21, align 8
  %69 = tail call ptr @malloc(i32 25)
  %70 = load ptr, ptr %68, align 8
  %memberidx1.i142 = getelementptr inbounds %Array_Function_, ptr %68, i64 0, i32 1
  %71 = load i64, ptr %memberidx1.i142, align 4
  store i1 false, ptr %69, align 1
  %memberidx1.i.i143 = getelementptr inbounds %ArrayIterator_Function_, ptr %69, i64 0, i32 1
  %memberidx2.i.i144 = getelementptr inbounds %ArrayIterator_Function_, ptr %69, i64 0, i32 3
  store ptr %70, ptr %memberidx2.i.i144, align 8
  %memberidx3.i.i145 = getelementptr inbounds %ArrayIterator_Function_, ptr %69, i64 0, i32 2
  store i64 %71, ptr %memberidx3.i.i145, align 4
  store i64 1, ptr %memberidx1.i.i143, align 4
  %72 = icmp slt i64 %71, 1
  br i1 %72, label %for.end25, label %for.body23.lr.ph

for.body23.lr.ph:                                 ; preds = %for.end16
  %memberidx.i.i.i156 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body23

for.body23:                                       ; preds = %for.body23.lr.ph, %for.body23
  %73 = phi i64 [ 1, %for.body23.lr.ph ], [ %93, %for.body23 ]
  %imported_func.0204.in = phi ptr [ %70, %for.body23.lr.ph ], [ %94, %for.body23 ]
  %imported_func.0204 = load ptr, ptr %imported_func.0204.in, align 8
  %memberidx27 = getelementptr inbounds %Function, ptr %imported_func.0204, i64 0, i32 1
  %74 = load ptr, ptr %memberidx27, align 8
  %75 = load ptr, ptr %imported_func.0204, align 8
  %76 = load ptr, ptr %0, align 8
  %77 = load ptr, ptr %memberidx.i.i.i156, align 8
  %78 = load i64, ptr %77, align 4
  %79 = load ptr, ptr %76, align 8
  %80 = load ptr, ptr %79, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %78
  %82 = load ptr, ptr %81, align 8
  %memberidx1.i.i157 = getelementptr inbounds %Module, ptr %82, i64 0, i32 5
  %83 = load ptr, ptr %memberidx1.i.i157, align 8
  %84 = load i64, ptr %83, align 4
  %85 = getelementptr inbounds ptr, ptr %80, i64 %84
  %86 = load ptr, ptr %85, align 8
  %memberidx2.i.i.i158 = getelementptr inbounds %Module, ptr %86, i64 0, i32 7
  %87 = load ptr, ptr %memberidx2.i.i.i158, align 8
  %memberidx3.i.i.i159 = getelementptr inbounds %ScopeId, ptr %83, i64 0, i32 1
  %88 = load i64, ptr %memberidx3.i.i.i159, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx.i160 = getelementptr inbounds %Scope, ptr %91, i64 0, i32 3
  %92 = load ptr, ptr %memberidx.i160, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %92, ptr %74, ptr %75)
  %93 = add nuw nsw i64 %73, 1
  store i64 %93, ptr %memberidx1.i.i143, align 4
  %94 = getelementptr inbounds ptr, ptr %70, i64 %73
  %.not220 = icmp slt i64 %73, %71
  br i1 %.not220, label %for.body23, label %for.end25

for.end25:                                        ; preds = %for.body23, %for.end16
  tail call void @free(ptr nonnull %69)
  %memberidx30 = getelementptr inbounds %Module, ptr %1, i64 0, i32 3
  %95 = load ptr, ptr %memberidx30, align 8
  %96 = tail call ptr @malloc(i32 25)
  %97 = load ptr, ptr %95, align 8
  %memberidx1.i176 = getelementptr inbounds %Array_Class_, ptr %95, i64 0, i32 1
  %98 = load i64, ptr %memberidx1.i176, align 4
  store i1 false, ptr %96, align 1
  %memberidx1.i.i177 = getelementptr inbounds %ArrayIterator_Class_, ptr %96, i64 0, i32 1
  %memberidx2.i.i178 = getelementptr inbounds %ArrayIterator_Class_, ptr %96, i64 0, i32 3
  store ptr %97, ptr %memberidx2.i.i178, align 8
  %memberidx3.i.i179 = getelementptr inbounds %ArrayIterator_Class_, ptr %96, i64 0, i32 2
  store i64 %98, ptr %memberidx3.i.i179, align 4
  store i64 1, ptr %memberidx1.i.i177, align 4
  %99 = icmp slt i64 %98, 1
  br i1 %99, label %for.end34, label %for.body32.lr.ph

for.body32.lr.ph:                                 ; preds = %for.end25
  %memberidx.i.i.i167 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body32

for.body32:                                       ; preds = %for.body32.lr.ph, %for.body32
  %100 = phi i64 [ 1, %for.body32.lr.ph ], [ %124, %for.body32 ]
  %imported_class.0201.in = phi ptr [ %97, %for.body32.lr.ph ], [ %125, %for.body32 ]
  %imported_class.0201 = load ptr, ptr %imported_class.0201.in, align 8
  %memberidx36 = getelementptr inbounds %Class, ptr %imported_class.0201, i64 0, i32 1
  %101 = load ptr, ptr %memberidx36, align 8
  %102 = load ptr, ptr %imported_class.0201, align 8
  %103 = load ptr, ptr %0, align 8
  %104 = load ptr, ptr %memberidx.i.i.i167, align 8
  %105 = load i64, ptr %104, align 4
  %106 = load ptr, ptr %103, align 8
  %107 = load ptr, ptr %106, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %105
  %109 = load ptr, ptr %108, align 8
  %memberidx1.i.i168 = getelementptr inbounds %Module, ptr %109, i64 0, i32 5
  %110 = load ptr, ptr %memberidx1.i.i168, align 8
  %111 = load i64, ptr %110, align 4
  %112 = getelementptr inbounds ptr, ptr %107, i64 %111
  %113 = load ptr, ptr %112, align 8
  %memberidx2.i.i.i169 = getelementptr inbounds %Module, ptr %113, i64 0, i32 7
  %114 = load ptr, ptr %memberidx2.i.i.i169, align 8
  %memberidx3.i.i.i170 = getelementptr inbounds %ScopeId, ptr %110, i64 0, i32 1
  %115 = load i64, ptr %memberidx3.i.i.i170, align 4
  %116 = load ptr, ptr %114, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %115
  %118 = load ptr, ptr %117, align 8
  %memberidx.i171 = getelementptr inbounds %Scope, ptr %118, i64 0, i32 2
  %119 = load ptr, ptr %memberidx.i171, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %119, ptr %101, ptr %102)
  %memberidx1.i172 = getelementptr inbounds %Scope, ptr %118, i64 0, i32 1
  %120 = load ptr, ptr %memberidx1.i172, align 8
  %121 = tail call ptr @malloc(i32 24)
  %122 = load i64, ptr %102, align 4
  %memberidx1.i5.i173 = getelementptr inbounds %TypeId, ptr %102, i64 0, i32 2
  %123 = load i64, ptr %memberidx1.i5.i173, align 4
  store i64 3, ptr %121, align 4
  %memberidx1.i.i.i174 = getelementptr inbounds %VarId, ptr %121, i64 0, i32 1
  store i64 %122, ptr %memberidx1.i.i.i174, align 4
  %memberidx2.i.i6.i175 = getelementptr inbounds %VarId, ptr %121, i64 0, i32 2
  store i64 %123, ptr %memberidx2.i.i6.i175, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %120, ptr %101, ptr nonnull %121)
  %124 = add nuw nsw i64 %100, 1
  store i64 %124, ptr %memberidx1.i.i177, align 4
  %125 = getelementptr inbounds ptr, ptr %97, i64 %100
  %.not221 = icmp slt i64 %100, %98
  br i1 %.not221, label %for.body32, label %for.end34

for.end34:                                        ; preds = %for.body32, %for.end25
  tail call void @free(ptr nonnull %96)
  %memberidx39 = getelementptr inbounds %Module, ptr %1, i64 0, i32 6
  %126 = load ptr, ptr %memberidx39, align 8
  %127 = tail call ptr @malloc(i32 25)
  %128 = load ptr, ptr %126, align 8
  %memberidx1.i152 = getelementptr inbounds %Array_Enum_, ptr %126, i64 0, i32 1
  %129 = load i64, ptr %memberidx1.i152, align 4
  store i1 false, ptr %127, align 1
  %memberidx1.i.i153 = getelementptr inbounds %ArrayIterator_Enum_, ptr %127, i64 0, i32 1
  %memberidx2.i.i154 = getelementptr inbounds %ArrayIterator_Enum_, ptr %127, i64 0, i32 3
  store ptr %128, ptr %memberidx2.i.i154, align 8
  %memberidx3.i.i155 = getelementptr inbounds %ArrayIterator_Enum_, ptr %127, i64 0, i32 2
  store i64 %129, ptr %memberidx3.i.i155, align 4
  store i64 1, ptr %memberidx1.i.i153, align 4
  %130 = icmp slt i64 %129, 1
  br i1 %130, label %for.end43, label %for.body41.lr.ph

for.body41.lr.ph:                                 ; preds = %for.end34
  %memberidx.i.i.i121 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %for.body41
  %131 = phi i64 [ 1, %for.body41.lr.ph ], [ %155, %for.body41 ]
  %imported_enum.0198.in = phi ptr [ %128, %for.body41.lr.ph ], [ %156, %for.body41 ]
  %imported_enum.0198 = load ptr, ptr %imported_enum.0198.in, align 8
  %memberidx45 = getelementptr inbounds %Enum, ptr %imported_enum.0198, i64 0, i32 1
  %132 = load ptr, ptr %memberidx45, align 8
  %133 = load ptr, ptr %imported_enum.0198, align 8
  %134 = load ptr, ptr %0, align 8
  %135 = load ptr, ptr %memberidx.i.i.i121, align 8
  %136 = load i64, ptr %135, align 4
  %137 = load ptr, ptr %134, align 8
  %138 = load ptr, ptr %137, align 8
  %139 = getelementptr inbounds ptr, ptr %138, i64 %136
  %140 = load ptr, ptr %139, align 8
  %memberidx1.i.i122 = getelementptr inbounds %Module, ptr %140, i64 0, i32 5
  %141 = load ptr, ptr %memberidx1.i.i122, align 8
  %142 = load i64, ptr %141, align 4
  %143 = getelementptr inbounds ptr, ptr %138, i64 %142
  %144 = load ptr, ptr %143, align 8
  %memberidx2.i.i.i123 = getelementptr inbounds %Module, ptr %144, i64 0, i32 7
  %145 = load ptr, ptr %memberidx2.i.i.i123, align 8
  %memberidx3.i.i.i124 = getelementptr inbounds %ScopeId, ptr %141, i64 0, i32 1
  %146 = load i64, ptr %memberidx3.i.i.i124, align 4
  %147 = load ptr, ptr %145, align 8
  %148 = getelementptr inbounds ptr, ptr %147, i64 %146
  %149 = load ptr, ptr %148, align 8
  %memberidx.i125 = getelementptr inbounds %Scope, ptr %149, i64 0, i32 4
  %150 = load ptr, ptr %memberidx.i125, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %150, ptr %132, ptr %133)
  %memberidx1.i126 = getelementptr inbounds %Scope, ptr %149, i64 0, i32 1
  %151 = load ptr, ptr %memberidx1.i126, align 8
  %152 = tail call ptr @malloc(i32 24)
  %153 = load i64, ptr %133, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %133, i64 0, i32 2
  %154 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 4, ptr %152, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %152, i64 0, i32 1
  store i64 %153, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %152, i64 0, i32 2
  store i64 %154, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %151, ptr %132, ptr nonnull %152)
  %155 = add nuw nsw i64 %131, 1
  store i64 %155, ptr %memberidx1.i.i153, align 4
  %156 = getelementptr inbounds ptr, ptr %128, i64 %131
  %.not222 = icmp slt i64 %131, %129
  br i1 %.not222, label %for.body41, label %for.end43

for.end43:                                        ; preds = %for.body41, %for.end34
  tail call void @free(ptr nonnull %127)
  %memberidx48 = getelementptr inbounds %Scope, ptr %13, i64 0, i32 6
  %157 = load ptr, ptr %memberidx48, align 8
  %158 = tail call ptr @malloc(i32 25)
  %159 = load ptr, ptr %157, align 8
  %memberidx1.i105 = getelementptr inbounds %Map_String_Type_, ptr %157, i64 0, i32 1
  %160 = load i64, ptr %memberidx1.i105, align 4
  %memberidx2.i106 = getelementptr inbounds %Map_String_Type_, ptr %157, i64 0, i32 2
  %161 = load i64, ptr %memberidx2.i106, align 4
  store i1 false, ptr %158, align 1
  %memberidx1.i.i107 = getelementptr inbounds %MapIterator_String_Type_, ptr %158, i64 0, i32 1
  store ptr %159, ptr %memberidx1.i.i107, align 8
  %memberidx2.i.i108 = getelementptr inbounds %MapIterator_String_Type_, ptr %158, i64 0, i32 2
  %memberidx3.i.i109 = getelementptr inbounds %MapIterator_String_Type_, ptr %158, i64 0, i32 3
  store i64 %161, ptr %memberidx3.i.i109, align 4
  %162 = add nsw i64 %160, -1
  store i64 %162, ptr %memberidx2.i.i108, align 4
  %163 = icmp sgt i64 %160, 0
  br i1 %163, label %while.entry.i100, label %MapIterator_String_Type__next.exit104

while.entry.i100:                                 ; preds = %for.end43, %ifend.i103
  %164 = phi i64 [ %167, %ifend.i103 ], [ %162, %for.end43 ]
  %165 = phi ptr [ %incdec.ptr.i98, %ifend.i103 ], [ %159, %for.end43 ]
  %incdec.ptr.i98 = getelementptr inbounds ptr, ptr %165, i64 1
  %166 = load ptr, ptr %165, align 8
  %.not.i99 = icmp eq ptr %166, null
  br i1 %.not.i99, label %ifend.i103, label %MapIterator_String_Type__next.exit104.loopexit

ifend.i103:                                       ; preds = %while.entry.i100
  %167 = add nsw i64 %164, -1
  store i64 %167, ptr %memberidx2.i.i108, align 4
  %168 = icmp sgt i64 %164, 0
  br i1 %168, label %while.entry.i100, label %MapIterator_String_Type__next.exit104.loopexit

MapIterator_String_Type__next.exit104.loopexit:   ; preds = %ifend.i103, %while.entry.i100
  %169 = phi i64 [ %167, %ifend.i103 ], [ %164, %while.entry.i100 ]
  store ptr %incdec.ptr.i98, ptr %memberidx1.i.i107, align 8
  br label %MapIterator_String_Type__next.exit104

MapIterator_String_Type__next.exit104:            ; preds = %MapIterator_String_Type__next.exit104.loopexit, %for.end43
  %170 = phi i64 [ %169, %MapIterator_String_Type__next.exit104.loopexit ], [ %162, %for.end43 ]
  %memberidx1.i.i107.promoted194 = phi ptr [ %incdec.ptr.i98, %MapIterator_String_Type__next.exit104.loopexit ], [ %159, %for.end43 ]
  %storemerge187191 = icmp slt i64 %161, 1
  br i1 %storemerge187191, label %for.end52, label %for.body50.lr.ph

for.body50.lr.ph:                                 ; preds = %MapIterator_String_Type__next.exit104
  %memberidx.i.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body50

for.body50:                                       ; preds = %for.body50.lr.ph, %MapIterator_String_Type__next.exit
  %171 = phi i64 [ %170, %for.body50.lr.ph ], [ %198, %MapIterator_String_Type__next.exit ]
  %incdec.ptr.i.lcssa196 = phi ptr [ %memberidx1.i.i107.promoted194, %for.body50.lr.ph ], [ %incdec.ptr.i.lcssa195, %MapIterator_String_Type__next.exit ]
  %storemerge188192.in = phi i64 [ %161, %for.body50.lr.ph ], [ %storemerge188192, %MapIterator_String_Type__next.exit ]
  %storemerge188192 = add nsw i64 %storemerge188192.in, -1
  %type_alias_entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa196, i64 -1
  %type_alias_entry.0 = load ptr, ptr %type_alias_entry.0.in, align 8
  %172 = load ptr, ptr %type_alias_entry.0, align 8
  %memberidx55 = getelementptr inbounds %MapEntry_String_Type_, ptr %type_alias_entry.0, i64 0, i32 1
  %173 = load ptr, ptr %memberidx55, align 8
  %174 = load ptr, ptr %0, align 8
  %175 = load ptr, ptr %memberidx.i.i.i, align 8
  %176 = load i64, ptr %175, align 4
  %177 = load ptr, ptr %174, align 8
  %178 = load ptr, ptr %177, align 8
  %179 = getelementptr inbounds ptr, ptr %178, i64 %176
  %180 = load ptr, ptr %179, align 8
  %memberidx1.i.i = getelementptr inbounds %Module, ptr %180, i64 0, i32 5
  %181 = load ptr, ptr %memberidx1.i.i, align 8
  %182 = load i64, ptr %181, align 4
  %183 = getelementptr inbounds ptr, ptr %178, i64 %182
  %184 = load ptr, ptr %183, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %184, i64 0, i32 7
  %185 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %181, i64 0, i32 1
  %186 = load i64, ptr %memberidx3.i.i.i, align 4
  %187 = load ptr, ptr %185, align 8
  %188 = getelementptr inbounds ptr, ptr %187, i64 %186
  %189 = load ptr, ptr %188, align 8
  %memberidx.i92 = getelementptr inbounds %Scope, ptr %189, i64 0, i32 6
  %190 = load ptr, ptr %memberidx.i92, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr %190, ptr %172, ptr %173)
  %191 = add nsw i64 %171, -1
  store i64 %191, ptr %memberidx2.i.i108, align 4
  %192 = icmp sgt i64 %171, 0
  br i1 %192, label %while.entry.i, label %MapIterator_String_Type__next.exit

while.entry.i:                                    ; preds = %for.body50, %ifend.i
  %193 = phi i64 [ %196, %ifend.i ], [ %191, %for.body50 ]
  %194 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa196, %for.body50 ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %194, i64 1
  %195 = load ptr, ptr %194, align 8
  %.not.i = icmp eq ptr %195, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_Type__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %196 = add nsw i64 %193, -1
  store i64 %196, ptr %memberidx2.i.i108, align 4
  %197 = icmp sgt i64 %193, 0
  br i1 %197, label %while.entry.i, label %MapIterator_String_Type__next.exit

MapIterator_String_Type__next.exit:               ; preds = %while.entry.i, %ifend.i, %for.body50
  %198 = phi i64 [ %191, %for.body50 ], [ %193, %while.entry.i ], [ %196, %ifend.i ]
  %incdec.ptr.i.lcssa195 = phi ptr [ %incdec.ptr.i.lcssa196, %for.body50 ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge187 = icmp slt i64 %storemerge188192.in, 2
  br i1 %storemerge187, label %for.cond49.for.end52_crit_edge, label %for.body50

for.cond49.for.end52_crit_edge:                   ; preds = %MapIterator_String_Type__next.exit
  store ptr %incdec.ptr.i.lcssa195, ptr %memberidx1.i.i107, align 8
  br label %for.end52

for.end52:                                        ; preds = %for.cond49.for.end52_crit_edge, %MapIterator_String_Type__next.exit104
  tail call void @free(ptr nonnull %158)
  ret void
}

define internal fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx1 = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %6)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %8 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %8, i64 0, i32 5
  %9 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx2.i, align 4
  %11 = icmp sgt i64 %10, 0
  br i1 %11, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend46, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %43, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %174, %ifend46 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = load ptr, ptr %0, align 8
  %14 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %14, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i, align 4
  %16 = load i64, ptr %7, align 4
  %17 = icmp eq i64 %16, 20
  br i1 %17, label %if.entry.i153, label %is_object.exit.thread

if.entry.i153:                                    ; preds = %ifend, %if.entry.i153
  %.tr5.i = phi ptr [ %18, %if.entry.i153 ], [ %7, %ifend ]
  %memberidx1.i152 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %18 = load ptr, ptr %memberidx1.i152, align 8
  %19 = load i64, ptr %18, align 4
  switch i64 %19, label %ifend6 [
    i64 20, label %if.entry.i153
    i64 11, label %tailrecurse.i.preheader
  ]

is_object.exit.thread:                            ; preds = %ifend
  %20 = icmp eq i64 %16, 11
  br i1 %20, label %if.entry3.i, label %ifend6

tailrecurse.i.preheader:                          ; preds = %if.entry.i153
  br i1 %17, label %if.entry.i156, label %if.entry3.i

if.entry.i156:                                    ; preds = %tailrecurse.i.preheader, %if.entry.i156
  %.tr11.i199 = phi ptr [ %21, %if.entry.i156 ], [ %7, %tailrecurse.i.preheader ]
  %memberidx1.i155 = getelementptr inbounds %GenericType, ptr %.tr11.i199, i64 0, i32 3
  %21 = load ptr, ptr %memberidx1.i155, align 8
  %22 = load i64, ptr %21, align 4
  %switch = icmp eq i64 %22, 20
  br i1 %switch, label %if.entry.i156, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i156, %is_object.exit.thread, %tailrecurse.i.preheader
  %.tr11.i.lcssa = phi ptr [ %7, %tailrecurse.i.preheader ], [ %7, %is_object.exit.thread ], [ %21, %if.entry.i156 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %24 = load ptr, ptr %13, align 8
  %25 = load i64, ptr %23, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx2.i.i157 = getelementptr inbounds %Module, ptr %28, i64 0, i32 3
  %29 = load ptr, ptr %memberidx2.i.i157, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %30 = load i64, ptr %memberidx3.i.i, align 4
  %31 = load ptr, ptr %29, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 %30
  %33 = load ptr, ptr %32, align 8
  %memberidx.i80 = getelementptr inbounds %Class, ptr %33, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i80, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %34, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %35, 6
  br i1 %.not.i.i, label %String___eq__.exit.i, label %ifend6

String___eq__.exit.i:                             ; preds = %if.entry3.i
  %36 = load ptr, ptr %34, align 8
  %37 = tail call i64 @memcmp(ptr %36, ptr %14, i64 6)
  %38 = icmp eq i64 %37, 0
  %39 = load ptr, ptr %33, align 8
  %40 = load i64, ptr %39, align 4
  %41 = icmp eq i64 %40, 1
  %42 = and i1 %38, %41
  br i1 %42, label %if.entry4, label %String___eq__.exit.i.ifend6_crit_edge

String___eq__.exit.i.ifend6_crit_edge:            ; preds = %String___eq__.exit.i
  %.pre = load i64, ptr %7, align 4
  br label %ifend6

if.entry4:                                        ; preds = %String___eq__.exit.i
  %43 = tail call ptr @malloc(i32 49)
  %44 = tail call ptr @malloc(i32 0)
  %45 = tail call ptr @malloc(i32 24)
  store ptr %44, ptr %45, align 8
  %memberidx1.i.i82 = getelementptr inbounds %String, ptr %45, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i82, i8 0, i64 16, i1 false)
  %46 = tail call ptr @malloc(i32 24)
  %memberidx.i84 = getelementptr inbounds %Array_uint_, ptr %46, i64 0, i32 1
  store i64 0, ptr %memberidx.i84, align 4
  %memberidx1.i85 = getelementptr inbounds %Array_uint_, ptr %46, i64 0, i32 2
  store i64 8, ptr %memberidx1.i85, align 4
  %47 = tail call ptr @malloc(i32 64)
  store ptr %47, ptr %46, align 8
  store i64 0, ptr %47, align 4
  store i64 1, ptr %memberidx.i84, align 4
  %48 = tail call ptr @malloc(i32 24)
  %memberidx.i86 = getelementptr inbounds %Array_Expression_, ptr %48, i64 0, i32 1
  store i64 0, ptr %memberidx.i86, align 4
  %memberidx1.i87 = getelementptr inbounds %Array_Expression_, ptr %48, i64 0, i32 2
  store i64 8, ptr %memberidx1.i87, align 4
  %49 = tail call ptr @malloc(i32 64)
  store ptr %49, ptr %48, align 8
  store ptr %5, ptr %49, align 8
  store i64 1, ptr %memberidx.i86, align 4
  store i64 8, ptr %43, align 4
  %memberidx.i.i88 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i88, align 4
  %memberidx1.i.i89 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 1
  %memberidx.i90 = getelementptr inbounds %StringExpression, ptr %43, i64 0, i32 6
  store ptr %48, ptr %memberidx.i90, align 8
  %memberidx1.i91 = getelementptr inbounds %StringExpression, ptr %43, i64 0, i32 5
  store ptr %46, ptr %memberidx1.i91, align 8
  %memberidx2.i92 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i92, align 8
  %memberidx3.i = getelementptr inbounds %StringExpression, ptr %43, i64 0, i32 4
  store ptr %45, ptr %memberidx3.i, align 8
  store i1 true, ptr %memberidx1.i.i89, align 1
  br label %common.ret

ifend6:                                           ; preds = %if.entry.i153, %is_object.exit.thread, %String___eq__.exit.i.ifend6_crit_edge, %if.entry3.i
  %50 = phi i64 [ %.pre, %String___eq__.exit.i.ifend6_crit_edge ], [ %16, %if.entry3.i ], [ %16, %is_object.exit.thread ], [ %16, %if.entry.i153 ]
  %51 = add i64 %50, -1
  %52 = icmp ult i64 %51, 9
  %53 = load i64, ptr %12, align 4
  %54 = add i64 %53, -1
  %55 = icmp ult i64 %54, 9
  %56 = and i1 %52, %55
  %57 = icmp ult i64 %51, 7
  %58 = icmp eq i64 %53, 12
  %59 = and i1 %57, %58
  %60 = icmp ult i64 %54, 7
  %61 = icmp eq i64 %50, 12
  %62 = and i1 %61, %60
  %63 = select i1 %62, i1 true, i1 %59
  %spec.select = select i1 %63, i1 true, i1 %56
  %64 = load ptr, ptr %0, align 8
  %65 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %65, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %66 = tail call ptr @malloc(i32 24)
  store ptr %65, ptr %66, align 8
  %memberidx1.i.i93 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i93, align 4
  %memberidx2.i.i94 = getelementptr inbounds %String, ptr %66, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i94, align 4
  %67 = load i64, ptr %12, align 4
  %68 = icmp eq i64 %67, 20
  br i1 %68, label %if.entry.i160, label %is_object.exit163.thread

if.entry.i160:                                    ; preds = %ifend6, %if.entry.i160
  %.tr5.i158 = phi ptr [ %69, %if.entry.i160 ], [ %12, %ifend6 ]
  %memberidx1.i159 = getelementptr inbounds %GenericType, ptr %.tr5.i158, i64 0, i32 3
  %69 = load ptr, ptr %memberidx1.i159, align 8
  %70 = load i64, ptr %69, align 4
  switch i64 %70, label %ifend25 [
    i64 20, label %if.entry.i160
    i64 11, label %tailrecurse.i165.preheader
  ]

is_object.exit163.thread:                         ; preds = %ifend6
  %71 = icmp eq i64 %67, 11
  br i1 %71, label %if.entry3.i172, label %ifend25

tailrecurse.i165.preheader:                       ; preds = %if.entry.i160
  br i1 %68, label %if.entry.i168, label %if.entry3.i172

if.entry.i168:                                    ; preds = %tailrecurse.i165.preheader, %if.entry.i168
  %.tr11.i164197 = phi ptr [ %72, %if.entry.i168 ], [ %12, %tailrecurse.i165.preheader ]
  %memberidx1.i167 = getelementptr inbounds %GenericType, ptr %.tr11.i164197, i64 0, i32 3
  %72 = load ptr, ptr %memberidx1.i167, align 8
  %73 = load i64, ptr %72, align 4
  %switch192 = icmp eq i64 %73, 20
  br i1 %switch192, label %if.entry.i168, label %if.entry3.i172

if.entry3.i172:                                   ; preds = %if.entry.i168, %is_object.exit163.thread, %tailrecurse.i165.preheader
  %.tr11.i164.lcssa = phi ptr [ %12, %tailrecurse.i165.preheader ], [ %12, %is_object.exit163.thread ], [ %72, %if.entry.i168 ]
  %memberidx6.i169 = getelementptr inbounds %ObjectType, ptr %.tr11.i164.lcssa, i64 0, i32 1
  %74 = load ptr, ptr %memberidx6.i169, align 8
  %75 = load ptr, ptr %64, align 8
  %76 = load i64, ptr %74, align 4
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx2.i.i170 = getelementptr inbounds %Module, ptr %79, i64 0, i32 3
  %80 = load ptr, ptr %memberidx2.i.i170, align 8
  %memberidx3.i.i171 = getelementptr inbounds %TypeId, ptr %74, i64 0, i32 2
  %81 = load i64, ptr %memberidx3.i.i171, align 4
  %82 = load ptr, ptr %80, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %memberidx.i96 = getelementptr inbounds %Class, ptr %84, i64 0, i32 1
  %85 = load ptr, ptr %memberidx.i96, align 8
  %memberidx.i.i97 = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  %86 = load i64, ptr %memberidx.i.i97, align 4
  %.not.i.i99 = icmp eq i64 %86, 6
  br i1 %.not.i.i99, label %is_buitin.exit104, label %ifend25

is_buitin.exit104:                                ; preds = %if.entry3.i172
  %87 = load ptr, ptr %85, align 8
  %88 = tail call i64 @memcmp(ptr %87, ptr %65, i64 6)
  %89 = icmp eq i64 %88, 0
  %90 = load ptr, ptr %84, align 8
  %91 = load i64, ptr %90, align 4
  %92 = icmp eq i64 %91, 1
  %93 = and i1 %89, %92
  %94 = and i1 %52, %93
  br i1 %94, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %is_buitin.exit104
  %95 = load i64, ptr %7, align 4
  %96 = and i64 %95, -2
  %97 = icmp eq i64 %96, 8
  br i1 %97, label %if.entry26, label %else27

ifend25:                                          ; preds = %if.entry.i160, %is_object.exit163.thread, %if.entry3.i172, %is_buitin.exit104, %Array_Expression____sl__.exit
  %is_valid_cast.3 = phi i1 [ true, %Array_Expression____sl__.exit ], [ %spec.select, %is_buitin.exit104 ], [ %spec.select, %if.entry3.i172 ], [ %spec.select, %is_object.exit163.thread ], [ %spec.select, %if.entry.i160 ]
  %exp.0 = phi ptr [ %call.0, %Array_Expression____sl__.exit ], [ %5, %is_buitin.exit104 ], [ %5, %if.entry3.i172 ], [ %5, %is_object.exit163.thread ], [ %5, %if.entry.i160 ]
  %98 = load i64, ptr %7, align 4
  %99 = icmp eq i64 %98, 20
  br i1 %99, label %if.entry.i176, label %is_object.exit179

if.entry.i176:                                    ; preds = %ifend25, %if.entry.i176
  %.tr5.i174 = phi ptr [ %100, %if.entry.i176 ], [ %7, %ifend25 ]
  %memberidx1.i175 = getelementptr inbounds %GenericType, ptr %.tr5.i174, i64 0, i32 3
  %100 = load ptr, ptr %memberidx1.i175, align 8
  %101 = load i64, ptr %100, align 4
  %102 = icmp eq i64 %101, 20
  br i1 %102, label %if.entry.i176, label %is_object.exit179

is_object.exit179:                                ; preds = %if.entry.i176, %ifend25
  %.lcssa.i177 = phi i64 [ %98, %ifend25 ], [ %101, %if.entry.i176 ]
  %103 = icmp eq i64 %.lcssa.i177, 11
  %104 = load i64, ptr %12, align 4
  %105 = icmp eq i64 %104, 20
  br i1 %105, label %if.entry.i182, label %is_object.exit185

if.entry.i182:                                    ; preds = %is_object.exit179, %if.entry.i182
  %.tr5.i180 = phi ptr [ %106, %if.entry.i182 ], [ %12, %is_object.exit179 ]
  %memberidx1.i181 = getelementptr inbounds %GenericType, ptr %.tr5.i180, i64 0, i32 3
  %106 = load ptr, ptr %memberidx1.i181, align 8
  %107 = load i64, ptr %106, align 4
  %108 = icmp eq i64 %107, 20
  br i1 %108, label %if.entry.i182, label %is_object.exit185

is_object.exit185:                                ; preds = %if.entry.i182, %is_object.exit179
  %.lcssa.i183 = phi i64 [ %104, %is_object.exit179 ], [ %107, %if.entry.i182 ]
  %109 = icmp eq i64 %.lcssa.i183, 11
  %110 = and i1 %103, %109
  %111 = icmp eq i64 %98, 13
  %112 = icmp eq i64 %104, 13
  %113 = and i1 %111, %112
  %114 = icmp eq i64 %98, 0
  %115 = select i1 %114, i1 true, i1 %113
  %116 = select i1 %115, i1 true, i1 %110
  %spec.select149 = select i1 %116, i1 true, i1 %is_valid_cast.3
  br i1 %spec.select149, label %ifend46, label %if.entry44

if.entry26:                                       ; preds = %if.entry23
  %117 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %117, align 4
  %memberidx.i.i105 = getelementptr inbounds %Expression, ptr %117, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i105, align 4
  %memberidx1.i.i106 = getelementptr inbounds %Expression, ptr %117, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i106, align 1
  %memberidx.i107 = getelementptr inbounds %IntrinsicCall, ptr %117, i64 0, i32 4
  store i64 0, ptr %memberidx.i107, align 4
  %memberidx1.i108 = getelementptr inbounds %IntrinsicCall, ptr %117, i64 0, i32 5
  %118 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %118, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %118, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i, align 4
  %119 = tail call ptr @malloc(i32 64)
  store ptr %119, ptr %118, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %118, ptr %memberidx1.i108, align 8
  %memberidx4.i110 = getelementptr inbounds %Expression, ptr %117, i64 0, i32 3
  %120 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %120, align 4
  store ptr %120, ptr %memberidx4.i110, align 8
  br label %ifend28

else27:                                           ; preds = %if.entry23
  %121 = icmp slt i64 %95, 5
  %122 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %122, align 4
  %memberidx.i.i115 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i115, align 4
  %memberidx1.i.i116 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i116, align 1
  %memberidx.i117 = getelementptr inbounds %IntrinsicCall, ptr %122, i64 0, i32 4
  br i1 %121, label %if.entry31, label %else32

ifend28:                                          ; preds = %if.entry31, %else32, %if.entry26
  %123 = phi ptr [ %118, %if.entry26 ], [ %134, %if.entry31 ], [ %137, %else32 ]
  %call.0 = phi ptr [ %117, %if.entry26 ], [ %122, %if.entry31 ], [ %122, %else32 ]
  %memberidx.i111 = getelementptr inbounds %Array_Expression_, ptr %123, i64 0, i32 1
  %124 = load i64, ptr %memberidx.i111, align 4
  %memberidx1.i112 = getelementptr inbounds %Array_Expression_, ptr %123, i64 0, i32 2
  %125 = load i64, ptr %memberidx1.i112, align 4
  %.not.i = icmp slt i64 %124, %125
  br i1 %.not.i, label %ifend28.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

ifend28.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend28
  %.pre207 = load ptr, ptr %123, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %ifend28
  %126 = shl nuw i64 %125, 1
  store i64 %126, ptr %memberidx1.i112, align 4
  %127 = load ptr, ptr %123, align 8
  %128 = shl i64 %125, 4
  %129 = tail call ptr @realloc(ptr %127, i64 %128)
  store ptr %129, ptr %123, align 8
  %.pre206 = load i64, ptr %memberidx.i111, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend28.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %130 = phi ptr [ %.pre207, %ifend28.Array_Expression____sl__.exit_crit_edge ], [ %129, %if.entry.i ]
  %131 = phi i64 [ %124, %ifend28.Array_Expression____sl__.exit_crit_edge ], [ %.pre206, %if.entry.i ]
  %132 = add nsw i64 %131, 1
  store i64 %132, ptr %memberidx.i111, align 4
  %133 = getelementptr inbounds ptr, ptr %130, i64 %131
  store ptr %5, ptr %133, align 8
  br label %ifend25

if.entry31:                                       ; preds = %else27
  store i64 1, ptr %memberidx.i117, align 4
  %memberidx1.i118 = getelementptr inbounds %IntrinsicCall, ptr %122, i64 0, i32 5
  %134 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i119 = getelementptr inbounds %Array_Expression_, ptr %134, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i119, align 4
  %memberidx1.i8.i120 = getelementptr inbounds %Array_Expression_, ptr %134, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i120, align 4
  %135 = tail call ptr @malloc(i32 64)
  store ptr %135, ptr %134, align 8
  store i64 0, ptr %memberidx.i7.i119, align 4
  store ptr %134, ptr %memberidx1.i118, align 8
  %memberidx4.i122 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %136 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %136, align 4
  store ptr %136, ptr %memberidx4.i122, align 8
  br label %ifend28

else32:                                           ; preds = %else27
  store i64 2, ptr %memberidx.i117, align 4
  %memberidx1.i126 = getelementptr inbounds %IntrinsicCall, ptr %122, i64 0, i32 5
  %137 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i127 = getelementptr inbounds %Array_Expression_, ptr %137, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i127, align 4
  %memberidx1.i8.i128 = getelementptr inbounds %Array_Expression_, ptr %137, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i128, align 4
  %138 = tail call ptr @malloc(i32 64)
  store ptr %138, ptr %137, align 8
  store i64 0, ptr %memberidx.i7.i127, align 4
  store ptr %137, ptr %memberidx1.i126, align 8
  %memberidx4.i130 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %139 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %139, align 4
  store ptr %139, ptr %memberidx4.i130, align 8
  br label %ifend28

if.entry44:                                       ; preds = %is_object.exit185
  %140 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %12)
  %memberidx.i131 = getelementptr inbounds %String, ptr %140, i64 0, i32 1
  %141 = load i64, ptr %memberidx.i131, align 4
  %142 = trunc i64 %141 to i32
  %143 = add i32 %142, 1
  %144 = tail call ptr @malloc(i32 %143)
  %145 = load ptr, ptr %140, align 8
  %146 = load i64, ptr %memberidx.i131, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %144, ptr align 8 %145, i64 %146, i1 false)
  %147 = getelementptr inbounds i8, ptr %144, i64 %146
  store i8 0, ptr %147, align 1
  %148 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %7)
  %memberidx.i132 = getelementptr inbounds %String, ptr %148, i64 0, i32 1
  %149 = load i64, ptr %memberidx.i132, align 4
  %150 = trunc i64 %149 to i32
  %151 = add i32 %150, 1
  %152 = tail call ptr @malloc(i32 %151)
  %153 = load ptr, ptr %148, align 8
  %154 = load i64, ptr %memberidx.i132, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %152, ptr align 8 %153, i64 %154, i1 false)
  %155 = getelementptr inbounds i8, ptr %152, i64 %154
  store i8 0, ptr %155, align 1
  %156 = alloca ptr, align 8
  %157 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %156, ptr nonnull @188, ptr %144, ptr %152)
  %158 = load ptr, ptr %156, align 8
  %159 = tail call ptr @malloc(i32 24)
  store ptr %158, ptr %159, align 8
  %memberidx1.i133 = getelementptr inbounds %String, ptr %159, i64 0, i32 1
  store i64 %157, ptr %memberidx1.i133, align 4
  %memberidx2.i134 = getelementptr inbounds %String, ptr %159, i64 0, i32 2
  store i64 %157, ptr %memberidx2.i134, align 4
  tail call void @free(ptr %144)
  tail call void @free(ptr %152)
  %160 = load ptr, ptr %1, align 8
  %161 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i136 = getelementptr inbounds %Compiler, ptr %161, i64 0, i32 5
  %162 = load ptr, ptr %memberidx1.i136, align 8
  %163 = call ptr @malloc(i32 24)
  store i64 5, ptr %163, align 4
  %memberidx1.i.i137 = getelementptr inbounds %FloError, ptr %163, i64 0, i32 2
  store ptr %160, ptr %memberidx1.i.i137, align 8
  %memberidx2.i.i138 = getelementptr inbounds %FloError, ptr %163, i64 0, i32 1
  store ptr %159, ptr %memberidx2.i.i138, align 8
  %memberidx.i.i139 = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 1
  %164 = load i64, ptr %memberidx.i.i139, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 2
  %165 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i140 = icmp slt i64 %164, %165
  br i1 %.not.i.i140, label %if.entry44.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry44.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry44
  %.pre209 = load ptr, ptr %162, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry44
  %166 = shl nuw i64 %165, 1
  store i64 %166, ptr %memberidx1.i2.i, align 4
  %167 = load ptr, ptr %162, align 8
  %168 = shl i64 %165, 4
  %169 = call ptr @realloc(ptr %167, i64 %168)
  store ptr %169, ptr %162, align 8
  %.pre208 = load i64, ptr %memberidx.i.i139, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry44.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %170 = phi ptr [ %.pre209, %if.entry44.TypeChecker_error.exit_crit_edge ], [ %169, %if.entry.i.i ]
  %171 = phi i64 [ %164, %if.entry44.TypeChecker_error.exit_crit_edge ], [ %.pre208, %if.entry.i.i ]
  %172 = add nsw i64 %171, 1
  store i64 %172, ptr %memberidx.i.i139, align 4
  %173 = getelementptr inbounds ptr, ptr %170, i64 %171
  store ptr %163, ptr %173, align 8
  br label %common.ret

ifend46:                                          ; preds = %is_object.exit185
  %174 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %174, align 4
  %memberidx.i.i141 = getelementptr inbounds %Expression, ptr %174, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i141, align 4
  %memberidx1.i.i142 = getelementptr inbounds %Expression, ptr %174, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i142, align 1
  %memberidx.i143 = getelementptr inbounds %TypeCastExpression, ptr %174, i64 0, i32 4
  store ptr %exp.0, ptr %memberidx.i143, align 8
  %memberidx1.i144 = getelementptr inbounds %Expression, ptr %174, i64 0, i32 3
  store ptr %7, ptr %memberidx1.i144, align 8
  %memberidx3.i146 = getelementptr inbounds %Expression, ptr %exp.0, i64 0, i32 1
  %175 = load i1, ptr %memberidx3.i146, align 1
  store i1 %175, ptr %memberidx1.i.i142, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_fill_in_call_args(ptr %0, ptr nocapture readonly %1, ptr readonly %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 1
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i, align 4
  %memberidx3 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  %6 = load i64, ptr %memberidx3, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx4 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %8 = phi ptr [ %5, %for.body.lr.ph ], [ %34, %Array_Expression____sl__.exit ]
  %9 = phi i64 [ 8, %for.body.lr.ph ], [ %35, %Array_Expression____sl__.exit ]
  %10 = phi i64 [ 0, %for.body.lr.ph ], [ %36, %Array_Expression____sl__.exit ]
  %i.055 = phi i64 [ 0, %for.body.lr.ph ], [ %38, %Array_Expression____sl__.exit ]
  %11 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Array_Type_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx5, align 4
  %13 = icmp sgt i64 %12, %i.055
  br i1 %13, label %true_block, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  %14 = phi ptr [ %5, %for.entry ], [ %34, %Array_Expression____sl__.exit ]
  %15 = phi i64 [ 8, %for.entry ], [ %35, %Array_Expression____sl__.exit ]
  %16 = phi i64 [ 0, %for.entry ], [ %36, %Array_Expression____sl__.exit ]
  %.lcssa = phi i64 [ %6, %for.entry ], [ %39, %Array_Expression____sl__.exit ]
  %memberidx.i42 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %17 = load ptr, ptr %memberidx.i42, align 8
  %memberidx1.i43 = getelementptr inbounds %Compiler, ptr %17, i64 0, i32 5
  %18 = load ptr, ptr %memberidx1.i43, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx2.i, align 4
  %20 = icmp sgt i64 %19, 0
  %21 = icmp eq ptr %2, null
  %22 = or i1 %21, %20
  br i1 %22, label %common.ret, label %ifend

true_block:                                       ; preds = %for.body
  %23 = load ptr, ptr %11, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %i.055
  %25 = load ptr, ptr %24, align 8
  br label %end

false_block:                                      ; preds = %for.body
  %26 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %26, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %25, %true_block ], [ %26, %false_block ]
  %27 = load ptr, ptr %3, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %i.055
  %29 = load ptr, ptr %28, align 8
  %30 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %ternary, ptr %29)
  %.not.i = icmp slt i64 %10, %9
  br i1 %.not.i, label %Array_Expression____sl__.exit, label %if.entry.i

if.entry.i:                                       ; preds = %end
  %31 = shl nuw i64 %9, 1
  store i64 %31, ptr %memberidx1.i, align 4
  %32 = shl i64 %9, 4
  %33 = tail call ptr @realloc(ptr %8, i64 %32)
  store ptr %33, ptr %4, align 8
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %end, %if.entry.i
  %34 = phi ptr [ %8, %end ], [ %33, %if.entry.i ]
  %35 = phi i64 [ %9, %end ], [ %31, %if.entry.i ]
  %36 = add nuw nsw i64 %10, 1
  store i64 %36, ptr %memberidx.i, align 4
  %37 = getelementptr inbounds ptr, ptr %34, i64 %10
  store ptr %30, ptr %37, align 8
  %38 = add nuw nsw i64 %i.055, 1
  %39 = load i64, ptr %memberidx3, align 4
  %40 = icmp slt i64 %38, %39
  br i1 %40, label %for.body, label %for.end

common.ret:                                       ; preds = %ifend22, %ifend, %for.end
  ret ptr %4

ifend:                                            ; preds = %for.end
  %memberidx7 = getelementptr inbounds %Array_FunctionArg_, ptr %2, i64 0, i32 1
  %41 = load i64, ptr %memberidx7, align 4
  %42 = icmp sgt i64 %41, %.lcssa
  br i1 %42, label %for.body15, label %common.ret

for.body15:                                       ; preds = %ifend, %ifend22
  %43 = phi i64 [ %59, %ifend22 ], [ %41, %ifend ]
  %44 = phi ptr [ %60, %ifend22 ], [ %14, %ifend ]
  %45 = phi ptr [ %61, %ifend22 ], [ %14, %ifend ]
  %46 = phi i64 [ %62, %ifend22 ], [ %15, %ifend ]
  %47 = phi i64 [ %63, %ifend22 ], [ %16, %ifend ]
  %i1.054 = phi i64 [ %64, %ifend22 ], [ %.lcssa, %ifend ]
  %48 = load ptr, ptr %2, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %i1.054
  %50 = load ptr, ptr %49, align 8
  %memberidx19 = getelementptr inbounds %FunctionArg, ptr %50, i64 0, i32 6
  %51 = load ptr, ptr %memberidx19, align 8
  %.not = icmp eq ptr %51, null
  br i1 %.not, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %for.body15
  %.not.i48 = icmp slt i64 %47, %46
  br i1 %.not.i48, label %Array_Expression____sl__.exit51, label %if.entry.i50

if.entry.i50:                                     ; preds = %if.entry20
  %52 = shl nuw i64 %46, 1
  store i64 %52, ptr %memberidx1.i, align 4
  %53 = shl i64 %46, 4
  %54 = tail call ptr @realloc(ptr %45, i64 %53)
  store ptr %54, ptr %4, align 8
  br label %Array_Expression____sl__.exit51

Array_Expression____sl__.exit51:                  ; preds = %if.entry20, %if.entry.i50
  %55 = phi ptr [ %44, %if.entry20 ], [ %54, %if.entry.i50 ]
  %56 = phi i64 [ %46, %if.entry20 ], [ %52, %if.entry.i50 ]
  %57 = add nsw i64 %47, 1
  store i64 %57, ptr %memberidx.i, align 4
  %58 = getelementptr inbounds ptr, ptr %55, i64 %47
  store ptr %51, ptr %58, align 8
  %.pre = load i64, ptr %memberidx7, align 4
  br label %ifend22

ifend22:                                          ; preds = %for.body15, %Array_Expression____sl__.exit51
  %59 = phi i64 [ %43, %for.body15 ], [ %.pre, %Array_Expression____sl__.exit51 ]
  %60 = phi ptr [ %44, %for.body15 ], [ %55, %Array_Expression____sl__.exit51 ]
  %61 = phi ptr [ %45, %for.body15 ], [ %55, %Array_Expression____sl__.exit51 ]
  %62 = phi i64 [ %46, %for.body15 ], [ %56, %Array_Expression____sl__.exit51 ]
  %63 = phi i64 [ %47, %for.body15 ], [ %57, %Array_Expression____sl__.exit51 ]
  %64 = add nsw i64 %i1.054, 1
  %65 = icmp slt i64 %64, %59
  br i1 %65, label %for.body15, label %common.ret
}

define internal fastcc void @TypeChecker_add_inherited_props_to_class(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 20
  br i1 %6, label %if.entry.i114, label %is_object.exit

if.entry.i114:                                    ; preds = %3, %if.entry.i114
  %.tr5.i = phi ptr [ %7, %if.entry.i114 ], [ %4, %3 ]
  %memberidx1.i113 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1.i113, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 20
  br i1 %9, label %if.entry.i114, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i114, %3
  %.lcssa.i = phi i64 [ %5, %3 ], [ %8, %if.entry.i114 ]
  %10 = icmp eq i64 %.lcssa.i, 11
  br i1 %10, label %ifend, label %if.entry

if.entry:                                         ; preds = %is_object.exit
  %11 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %4)
  %memberidx.i = getelementptr inbounds %String, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = trunc i64 %12 to i32
  %14 = add i32 %13, 1
  %15 = tail call ptr @malloc(i32 %14)
  %16 = load ptr, ptr %11, align 8
  %17 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %16, i64 %17, i1 false)
  %18 = getelementptr inbounds i8, ptr %15, i64 %17
  store i8 0, ptr %18, align 1
  %19 = alloca ptr, align 8
  %20 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %19, ptr nonnull @154, ptr %15)
  %21 = load ptr, ptr %19, align 8
  %22 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %22, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i, align 4
  tail call void @free(ptr %15)
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 2
  %23 = load ptr, ptr %memberidx1, align 8
  %24 = load ptr, ptr %23, align 8
  %memberidx.i58 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i58, align 8
  %memberidx1.i59 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i59, align 8
  %27 = call ptr @malloc(i32 24)
  store i64 5, ptr %27, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %27, i64 0, i32 2
  store ptr %24, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %27, i64 0, i32 1
  store ptr %22, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %28 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %29 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %28, %29
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre141 = load ptr, ptr %26, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %30 = shl nuw i64 %29, 1
  store i64 %30, ptr %memberidx1.i2.i, align 4
  %31 = load ptr, ptr %26, align 8
  %32 = shl i64 %29, 4
  %33 = call ptr @realloc(ptr %31, i64 %32)
  store ptr %33, ptr %26, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %34 = phi ptr [ %.pre141, %if.entry.TypeChecker_error.exit_crit_edge ], [ %33, %if.entry.i.i ]
  %35 = phi i64 [ %28, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %36 = add nsw i64 %35, 1
  store i64 %36, ptr %memberidx.i.i, align 4
  %37 = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %27, ptr %37, align 8
  %.pre142 = load i64, ptr %4, align 4
  br label %ifend

ifend:                                            ; preds = %is_object.exit, %TypeChecker_error.exit
  %38 = phi i64 [ %5, %is_object.exit ], [ %.pre142, %TypeChecker_error.exit ]
  %39 = load ptr, ptr %0, align 8
  %switch135 = icmp eq i64 %38, 20
  br i1 %switch135, label %if.entry.i118, label %if.entry3.i

if.entry.i118:                                    ; preds = %ifend, %if.entry.i118
  %.tr11.i136 = phi ptr [ %40, %if.entry.i118 ], [ %4, %ifend ]
  %memberidx1.i117 = getelementptr inbounds %GenericType, ptr %.tr11.i136, i64 0, i32 3
  %40 = load ptr, ptr %memberidx1.i117, align 8
  %41 = load i64, ptr %40, align 4
  %switch = icmp eq i64 %41, 20
  br i1 %switch, label %if.entry.i118, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i118, %ifend
  %.tr11.i.lcssa = phi ptr [ %4, %ifend ], [ %40, %if.entry.i118 ]
  %memberidx6.i119 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %42 = load ptr, ptr %memberidx6.i119, align 8
  %43 = load ptr, ptr %39, align 8
  %44 = load i64, ptr %42, align 4
  %45 = load ptr, ptr %43, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  %47 = load ptr, ptr %46, align 8
  %memberidx2.i.i120 = getelementptr inbounds %Module, ptr %47, i64 0, i32 3
  %48 = load ptr, ptr %memberidx2.i.i120, align 8
  %memberidx3.i.i121 = getelementptr inbounds %TypeId, ptr %42, i64 0, i32 2
  %49 = load i64, ptr %memberidx3.i.i121, align 4
  %50 = load ptr, ptr %48, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %49
  %52 = load ptr, ptr %51, align 8
  %memberidx4 = getelementptr inbounds %Class, ptr %52, i64 0, i32 6
  %53 = load ptr, ptr %memberidx4, align 8
  %54 = call ptr @malloc(i32 25)
  %55 = load ptr, ptr %53, align 8
  %memberidx1.i60 = getelementptr inbounds %Map_String_PropId_, ptr %53, i64 0, i32 1
  %56 = load i64, ptr %memberidx1.i60, align 4
  %memberidx2.i61 = getelementptr inbounds %Map_String_PropId_, ptr %53, i64 0, i32 2
  %57 = load i64, ptr %memberidx2.i61, align 4
  store i1 false, ptr %54, align 1
  %memberidx1.i.i62 = getelementptr inbounds %MapIterator_String_PropId_, ptr %54, i64 0, i32 1
  store ptr %55, ptr %memberidx1.i.i62, align 8
  %memberidx2.i.i63 = getelementptr inbounds %MapIterator_String_PropId_, ptr %54, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %54, i64 0, i32 3
  store i64 %57, ptr %memberidx3.i.i, align 4
  %58 = add nsw i64 %56, -1
  store i64 %58, ptr %memberidx2.i.i63, align 4
  %59 = icmp sgt i64 %56, 0
  br i1 %59, label %while.entry.i, label %MapIterator_String_PropId__next.exit

while.entry.i:                                    ; preds = %if.entry3.i, %ifend.i
  %60 = phi i64 [ %63, %ifend.i ], [ %58, %if.entry3.i ]
  %61 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %55, %if.entry3.i ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %61, i64 1
  %62 = load ptr, ptr %61, align 8
  %.not.i = icmp eq ptr %62, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %63 = add nsw i64 %60, -1
  store i64 %63, ptr %memberidx2.i.i63, align 4
  %64 = icmp sgt i64 %60, 0
  br i1 %64, label %while.entry.i, label %MapIterator_String_PropId__next.exit.loopexit

MapIterator_String_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %65 = phi i64 [ %63, %ifend.i ], [ %60, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i62, align 8
  br label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %MapIterator_String_PropId__next.exit.loopexit, %if.entry3.i
  %66 = phi i64 [ %65, %MapIterator_String_PropId__next.exit.loopexit ], [ %58, %if.entry3.i ]
  %memberidx1.i.i62.promoted132 = phi ptr [ %incdec.ptr.i, %MapIterator_String_PropId__next.exit.loopexit ], [ %55, %if.entry3.i ]
  %storemerge129 = icmp slt i64 %57, 1
  br i1 %storemerge129, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_String_PropId__next.exit
  %memberidx9 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx25 = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %memberidx31 = getelementptr inbounds %Class, ptr %1, i64 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_String_PropId__next.exit78
  %67 = phi i64 [ %66, %for.body.lr.ph ], [ %148, %MapIterator_String_PropId__next.exit78 ]
  %incdec.ptr.i72.lcssa134 = phi ptr [ %memberidx1.i.i62.promoted132, %for.body.lr.ph ], [ %incdec.ptr.i72.lcssa133, %MapIterator_String_PropId__next.exit78 ]
  %storemerge126130.in = phi i64 [ %57, %for.body.lr.ph ], [ %storemerge126130, %MapIterator_String_PropId__next.exit78 ]
  %storemerge126130 = add nsw i64 %storemerge126130.in, -1
  %parent_entry_prop.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i72.lcssa134, i64 -1
  %parent_entry_prop.0 = load ptr, ptr %parent_entry_prop.0.in, align 8
  %68 = load ptr, ptr %parent_entry_prop.0, align 8
  %memberidx7 = getelementptr inbounds %MapEntry_String_PropId_, ptr %parent_entry_prop.0, i64 0, i32 1
  %69 = load ptr, ptr %memberidx7, align 8
  %70 = load ptr, ptr %0, align 8
  %memberidx.i.i66 = getelementptr inbounds %PropId, ptr %69, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i.i66, align 8
  %72 = load ptr, ptr %70, align 8
  %73 = load i64, ptr %71, align 4
  %74 = load ptr, ptr %72, align 8
  %75 = getelementptr inbounds ptr, ptr %74, i64 %73
  %76 = load ptr, ptr %75, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %76, i64 0, i32 3
  %77 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %71, i64 0, i32 2
  %78 = load i64, ptr %memberidx3.i.i.i, align 4
  %79 = load ptr, ptr %77, align 8
  %80 = getelementptr inbounds ptr, ptr %79, i64 %78
  %81 = load ptr, ptr %80, align 8
  %82 = load i64, ptr %69, align 4
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %if.entry.i, label %ifend.i69

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i67 = getelementptr inbounds %Class, ptr %81, i64 0, i32 5
  %84 = load ptr, ptr %memberidx1.i67, align 8
  %memberidx2.i68 = getelementptr inbounds %PropId, ptr %69, i64 0, i32 2
  %85 = load i64, ptr %memberidx2.i68, align 4
  %86 = load ptr, ptr %84, align 8
  %87 = getelementptr inbounds ptr, ptr %86, i64 %85
  %88 = load ptr, ptr %87, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %88, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i69:                                        ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %81, i64 0, i32 4
  %89 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %69, i64 0, i32 2
  %90 = load i64, ptr %memberidx5.i, align 4
  %91 = load ptr, ptr %89, align 8
  %92 = getelementptr inbounds ptr, ptr %91, i64 %90
  %93 = load ptr, ptr %92, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %93, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i69
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i69 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %94 = load ptr, ptr %memberidx9, align 8
  %95 = call fastcc i64 @Map_String_PropId__hash_fnc(ptr %68)
  %memberidx.i105 = getelementptr inbounds %Map_String_PropId_, ptr %94, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i105, align 4
  %97 = urem i64 %95, %96
  %98 = load ptr, ptr %94, align 8
  %99 = getelementptr inbounds ptr, ptr %98, i64 %97
  %100 = load ptr, ptr %99, align 8
  %.not.i106 = icmp eq ptr %100, null
  br i1 %.not.i106, label %Map_String_PropId____getitem__.exit, label %while.entry.i110.preheader

while.entry.i110.preheader:                       ; preds = %get_class_prop_type.exit
  %memberidx1.i.i108 = getelementptr inbounds %String, ptr %68, i64 0, i32 1
  br label %while.entry.i110

while.entry.i110:                                 ; preds = %while.entry.i110.preheader, %else.i
  %101 = phi ptr [ %111, %else.i ], [ %98, %while.entry.i110.preheader ]
  %102 = phi i64 [ %112, %else.i ], [ %96, %while.entry.i110.preheader ]
  %103 = phi ptr [ %116, %else.i ], [ %100, %while.entry.i110.preheader ]
  %hash.0.i = phi i64 [ %114, %else.i ], [ %97, %while.entry.i110.preheader ]
  %104 = load ptr, ptr %103, align 8
  %memberidx.i.i107 = getelementptr inbounds %String, ptr %104, i64 0, i32 1
  %105 = load i64, ptr %memberidx.i.i107, align 4
  %106 = load i64, ptr %memberidx1.i.i108, align 4
  %.not.i.i109 = icmp eq i64 %105, %106
  br i1 %.not.i.i109, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i110
  %107 = load ptr, ptr %104, align 8
  %108 = load ptr, ptr %68, align 8
  %109 = call i64 @memcmp(ptr %107, ptr %108, i64 %105)
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre144 = load i64, ptr %memberidx.i105, align 4
  %.pre145 = load ptr, ptr %94, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre146.pre = load ptr, ptr %94, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre146.pre, i64 %hash.0.i
  %.pre147.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre147.pre, null
  br i1 %.not25.i, label %Map_String_PropId____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i110
  %111 = phi ptr [ %.pre145, %ifend.i.i.else.i_crit_edge ], [ %101, %while.entry.i110 ]
  %112 = phi i64 [ %.pre144, %ifend.i.i.else.i_crit_edge ], [ %102, %while.entry.i110 ]
  %113 = add nuw i64 %hash.0.i, 1
  %114 = urem i64 %113, %112
  %115 = getelementptr inbounds ptr, ptr %111, i64 %114
  %116 = load ptr, ptr %115, align 8
  %.not26.i = icmp eq ptr %116, null
  br i1 %.not26.i, label %Map_String_PropId____getitem__.exit, label %while.entry.i110

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre147.pre, i64 0, i32 1
  %117 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_PropId____getitem__.exit

Map_String_PropId____getitem__.exit:              ; preds = %else.i, %get_class_prop_type.exit, %while.end.i, %if.entry7.i
  %common.ret.op.i111 = phi ptr [ %117, %if.entry7.i ], [ null, %while.end.i ], [ null, %get_class_prop_type.exit ], [ null, %else.i ]
  %118 = load ptr, ptr %0, align 8
  %119 = load ptr, ptr %memberidx.i.i66, align 8
  %120 = load ptr, ptr %118, align 8
  %121 = load i64, ptr %119, align 4
  %122 = load ptr, ptr %120, align 8
  %123 = getelementptr inbounds ptr, ptr %122, i64 %121
  %124 = load ptr, ptr %123, align 8
  %memberidx2.i.i.i93 = getelementptr inbounds %Module, ptr %124, i64 0, i32 3
  %125 = load ptr, ptr %memberidx2.i.i.i93, align 8
  %memberidx3.i.i.i94 = getelementptr inbounds %TypeId, ptr %119, i64 0, i32 2
  %126 = load i64, ptr %memberidx3.i.i.i94, align 4
  %127 = load ptr, ptr %125, align 8
  %128 = getelementptr inbounds ptr, ptr %127, i64 %126
  %129 = load ptr, ptr %128, align 8
  %130 = load i64, ptr %69, align 4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %if.entry.i87, label %ifend.i91

if.entry.i87:                                     ; preds = %Map_String_PropId____getitem__.exit
  %memberidx1.i97 = getelementptr inbounds %Class, ptr %129, i64 0, i32 5
  %132 = load ptr, ptr %memberidx1.i97, align 8
  %memberidx2.i98 = getelementptr inbounds %PropId, ptr %69, i64 0, i32 2
  %133 = load i64, ptr %memberidx2.i98, align 4
  %134 = load ptr, ptr %132, align 8
  %135 = getelementptr inbounds ptr, ptr %134, i64 %133
  %136 = load ptr, ptr %135, align 8
  %memberidx3.i99 = getelementptr inbounds %ClassMethod, ptr %136, i64 0, i32 2
  %memberidx3.i86 = getelementptr inbounds %ClassMethod, ptr %136, i64 0, i32 1
  br label %is_class_prop_static.exit

ifend.i91:                                        ; preds = %Map_String_PropId____getitem__.exit
  %memberidx4.i101 = getelementptr inbounds %Class, ptr %129, i64 0, i32 4
  %137 = load ptr, ptr %memberidx4.i101, align 8
  %memberidx5.i102 = getelementptr inbounds %PropId, ptr %69, i64 0, i32 2
  %138 = load i64, ptr %memberidx5.i102, align 4
  %139 = load ptr, ptr %137, align 8
  %140 = getelementptr inbounds ptr, ptr %139, i64 %138
  %141 = load ptr, ptr %140, align 8
  %memberidx6.i103 = getelementptr inbounds %ClassField, ptr %141, i64 0, i32 2
  %memberidx6.i90 = getelementptr inbounds %ClassField, ptr %141, i64 0, i32 1
  br label %is_class_prop_static.exit

is_class_prop_static.exit:                        ; preds = %if.entry.i87, %ifend.i91
  %common.ret.op.i96124.in = phi ptr [ %memberidx3.i99, %if.entry.i87 ], [ %memberidx6.i103, %ifend.i91 ]
  %common.ret.op.in.i82 = phi ptr [ %memberidx3.i86, %if.entry.i87 ], [ %memberidx6.i90, %ifend.i91 ]
  %common.ret.op.i83 = load i1, ptr %common.ret.op.in.i82, align 1
  br i1 %common.ret.op.i83, label %for.incr, label %ifend14

for.incr:                                         ; preds = %ifend30, %ifend14, %is_class_prop_static.exit
  %142 = add nsw i64 %67, -1
  store i64 %142, ptr %memberidx2.i.i63, align 4
  %143 = icmp sgt i64 %67, 0
  br i1 %143, label %while.entry.i74, label %MapIterator_String_PropId__next.exit78

while.entry.i74:                                  ; preds = %for.incr, %ifend.i77
  %144 = phi i64 [ %147, %ifend.i77 ], [ %142, %for.incr ]
  %145 = phi ptr [ %incdec.ptr.i72, %ifend.i77 ], [ %incdec.ptr.i72.lcssa134, %for.incr ]
  %incdec.ptr.i72 = getelementptr inbounds ptr, ptr %145, i64 1
  %146 = load ptr, ptr %145, align 8
  %.not.i73 = icmp eq ptr %146, null
  br i1 %.not.i73, label %ifend.i77, label %MapIterator_String_PropId__next.exit78

ifend.i77:                                        ; preds = %while.entry.i74
  %147 = add nsw i64 %144, -1
  store i64 %147, ptr %memberidx2.i.i63, align 4
  %.not154 = icmp eq i64 %144, 0
  br i1 %.not154, label %MapIterator_String_PropId__next.exit78, label %while.entry.i74

MapIterator_String_PropId__next.exit78:           ; preds = %while.entry.i74, %ifend.i77, %for.incr
  %148 = phi i64 [ %142, %for.incr ], [ %144, %while.entry.i74 ], [ -1, %ifend.i77 ]
  %incdec.ptr.i72.lcssa133 = phi ptr [ %incdec.ptr.i72.lcssa134, %for.incr ], [ %incdec.ptr.i72, %ifend.i77 ], [ %incdec.ptr.i72, %while.entry.i74 ]
  %storemerge = icmp slt i64 %storemerge126130.in, 2
  br i1 %storemerge, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %MapIterator_String_PropId__next.exit78
  store ptr %incdec.ptr.i72.lcssa133, ptr %memberidx1.i.i62, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %MapIterator_String_PropId__next.exit
  tail call void @free(ptr nonnull %54)
  ret void

ifend14:                                          ; preds = %is_class_prop_static.exit
  %common.ret.op.i96124 = load i64, ptr %common.ret.op.i96124.in, align 4
  %149 = icmp ne i64 %common.ret.op.i96124, 1
  %150 = load i64, ptr %common.ret.op.i, align 4
  %151 = icmp ne i64 %150, 16
  %.not = or i1 %149, %151
  %152 = icmp eq ptr %common.ret.op.i111, null
  %or.cond = select i1 %.not, i1 %152, i1 false
  br i1 %or.cond, label %if.entry18, label %for.incr

if.entry18:                                       ; preds = %ifend14
  %153 = icmp eq i64 %130, 1
  br i1 %153, label %if.entry22, label %ifend24

if.entry22:                                       ; preds = %if.entry18
  %154 = load i64, ptr %memberidx25, align 4
  %155 = add nsw i64 %154, 1
  store i64 %155, ptr %memberidx25, align 4
  %.pre148 = load i64, ptr %69, align 4
  br label %ifend24

ifend24:                                          ; preds = %if.entry18, %if.entry22
  %156 = phi i64 [ %130, %if.entry18 ], [ %.pre148, %if.entry22 ]
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend24
  %158 = load i64, ptr %memberidx31, align 4
  %159 = add nsw i64 %158, 1
  store i64 %159, ptr %memberidx31, align 4
  br label %ifend30

ifend30:                                          ; preds = %ifend24, %if.entry28
  %160 = load ptr, ptr %memberidx9, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %160, ptr %68, ptr nonnull %69)
  br label %for.incr
}

define internal fastcc ptr @TypeChecker_check_match_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca %Type, align 8
  store i64 21, ptr %3, align 8
  %memberidx = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend13, %else12, %if.entry11, %2, %TypeChecker_error.exit249, %ifend72, %TypeChecker_error.exit235, %TypeChecker_error.exit223, %TypeChecker_error.exit201, %TypeChecker_error.exit187, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit187 ], [ null, %TypeChecker_error.exit201 ], [ null, %TypeChecker_error.exit223 ], [ null, %TypeChecker_error.exit235 ], [ %36, %ifend72 ], [ null, %TypeChecker_error.exit249 ], [ null, %2 ], [ null, %if.entry11 ], [ null, %else12 ], [ null, %ifend13 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx.i143 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %memberidx.i143, align 4
  %11 = icmp eq i64 %10, 5
  br i1 %11, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %12 = call ptr @malloc(i32 31)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %12, ptr noundef nonnull align 8 dereferenceable(31) @222, i64 31, i1 false)
  %13 = call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  store i64 31, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 2
  store i64 31, ptr %memberidx2.i.i, align 4
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i145 = getelementptr inbounds %Compiler, ptr %16, i64 0, i32 5
  %17 = load ptr, ptr %memberidx1.i145, align 8
  %18 = call ptr @malloc(i32 24)
  store i64 5, ptr %18, align 4
  %memberidx1.i.i146 = getelementptr inbounds %FloError, ptr %18, i64 0, i32 2
  store ptr %15, ptr %memberidx1.i.i146, align 8
  %memberidx2.i.i147 = getelementptr inbounds %FloError, ptr %18, i64 0, i32 1
  store ptr %13, ptr %memberidx2.i.i147, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 2
  %20 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %19, %20
  br i1 %.not.i.i, label %if.entry3.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry3.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry3
  %.pre35 = load ptr, ptr %17, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry3
  %21 = shl nuw i64 %20, 1
  store i64 %21, ptr %memberidx1.i2.i, align 4
  %22 = load ptr, ptr %17, align 8
  %23 = shl i64 %20, 4
  %24 = call ptr @realloc(ptr %22, i64 %23)
  store ptr %24, ptr %17, align 8
  %.pre34 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry3.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %25 = phi ptr [ %.pre35, %if.entry3.TypeChecker_error.exit_crit_edge ], [ %24, %if.entry.i.i ]
  %26 = phi i64 [ %19, %if.entry3.TypeChecker_error.exit_crit_edge ], [ %.pre34, %if.entry.i.i ]
  %27 = add nsw i64 %26, 1
  store i64 %27, ptr %memberidx.i.i, align 4
  %28 = getelementptr inbounds ptr, ptr %25, i64 %26
  store ptr %18, ptr %28, align 8
  br label %common.ret

ifend5:                                           ; preds = %ifend
  %memberidx8 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %29 = load ptr, ptr %memberidx8, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 20
  br i1 %31, label %if.entry.i2, label %is_object.exit

if.entry.i2:                                      ; preds = %ifend5, %if.entry.i2
  %.tr5.i = phi ptr [ %32, %if.entry.i2 ], [ %29, %ifend5 ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %32 = load ptr, ptr %memberidx1.i1, align 8
  %33 = load i64, ptr %32, align 4
  %34 = icmp eq i64 %33, 20
  br i1 %34, label %if.entry.i2, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i2, %ifend5
  %.lcssa.i = phi i64 [ %30, %ifend5 ], [ %33, %if.entry.i2 ]
  %35 = icmp eq i64 %.lcssa.i, 11
  %36 = tail call ptr @malloc(i32 50)
  store i64 8, ptr %36, align 4
  %memberidx.i.i148 = getelementptr inbounds %Expression, ptr %36, i64 0, i32 2
  store i64 17, ptr %memberidx.i.i148, align 4
  %memberidx1.i.i149 = getelementptr inbounds %Expression, ptr %36, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i149, align 1
  %memberidx.i150 = getelementptr inbounds %MatchExpression, ptr %36, i64 0, i32 4
  store ptr %5, ptr %memberidx.i150, align 8
  %memberidx1.i151 = getelementptr inbounds %MatchExpression, ptr %36, i64 0, i32 7
  store i1 %35, ptr %memberidx1.i151, align 1
  %memberidx2.i152 = getelementptr inbounds %MatchExpression, ptr %36, i64 0, i32 5
  %37 = call ptr @malloc(i32 24)
  %memberidx.i9.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %37, i64 0, i32 1
  store i64 0, ptr %memberidx.i9.i, align 4
  %memberidx1.i10.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %37, i64 0, i32 2
  store i64 8, ptr %memberidx1.i10.i, align 4
  %38 = call ptr @malloc(i32 64)
  store ptr %38, ptr %37, align 8
  store i64 0, ptr %memberidx.i9.i, align 4
  store ptr %37, ptr %memberidx2.i152, align 8
  %memberidx5.i = getelementptr inbounds %MatchExpression, ptr %36, i64 0, i32 6
  store ptr null, ptr %memberidx5.i, align 8
  %memberidx9 = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 4
  %39 = load ptr, ptr %memberidx9, align 8
  %40 = call ptr @malloc(i32 25)
  %41 = load ptr, ptr %39, align 8
  %memberidx1.i153 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %39, i64 0, i32 1
  %42 = load i64, ptr %memberidx1.i153, align 4
  %memberidx1.i.i154 = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %40, i64 0, i32 1
  %memberidx2.i.i155 = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %40, i64 0, i32 3
  store ptr %41, ptr %memberidx2.i.i155, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %40, i64 0, i32 2
  store i64 %42, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i154, align 4
  %43 = icmp slt i64 %42, 1
  %case.011 = load ptr, ptr %41, align 8
  store i1 %43, ptr %40, align 1
  br i1 %43, label %for.end, label %for.body

for.body:                                         ; preds = %is_object.exit, %Array_MatchExpressionCase____sl__.exit
  %44 = phi i64 [ %163, %Array_MatchExpressionCase____sl__.exit ], [ 1, %is_object.exit ]
  %case.013 = phi ptr [ %case.0, %Array_MatchExpressionCase____sl__.exit ], [ %case.011, %is_object.exit ]
  %result_type.012 = phi ptr [ %result_type.1, %Array_MatchExpressionCase____sl__.exit ], [ %3, %is_object.exit ]
  br i1 %35, label %if.entry11, label %else12

for.end:                                          ; preds = %Array_MatchExpressionCase____sl__.exit, %is_object.exit
  %result_type.0.lcssa = phi ptr [ %3, %is_object.exit ], [ %result_type.1, %Array_MatchExpressionCase____sl__.exit ]
  tail call void @free(ptr nonnull %40)
  %memberidx57 = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 5
  %45 = load ptr, ptr %memberidx57, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %if.entry58, label %else59

if.entry11:                                       ; preds = %for.body
  %47 = alloca %BinaryExpressionNode, align 8
  %48 = load ptr, ptr %memberidx, align 8
  %49 = load ptr, ptr %case.013, align 8
  %50 = load ptr, ptr %48, align 8
  %51 = load ptr, ptr %49, align 8
  %52 = call ptr @malloc(i32 32)
  %53 = load i64, ptr %50, align 4
  %memberidx1.i.i159 = getelementptr inbounds %FloRange, ptr %51, i64 0, i32 1
  %54 = load i64, ptr %memberidx1.i.i159, align 4
  %memberidx2.i.i160 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  %55 = load i64, ptr %memberidx2.i.i160, align 4
  %memberidx3.i.i161 = getelementptr inbounds %FloRange, ptr %51, i64 0, i32 3
  %56 = load i64, ptr %memberidx3.i.i161, align 4
  store i64 %53, ptr %52, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %52, i64 0, i32 1
  store i64 %54, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %52, i64 0, i32 2
  store i64 %55, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %52, i64 0, i32 3
  store i64 %56, ptr %memberidx3.i.i.i, align 4
  store ptr %52, ptr %47, align 8
  %memberidx.i.i.i162 = getelementptr inbounds %StatementNode, ptr %47, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i162, align 8
  %memberidx.i.i163 = getelementptr inbounds %ExpressionNode, ptr %47, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i163, align 8
  %memberidx2.i164 = getelementptr inbounds %BinaryExpressionNode, ptr %47, i64 0, i32 3
  store ptr %48, ptr %memberidx2.i164, align 8
  %memberidx3.i = getelementptr inbounds %BinaryExpressionNode, ptr %47, i64 0, i32 4
  store i64 11, ptr %memberidx3.i, align 8
  %memberidx4.i165 = getelementptr inbounds %BinaryExpressionNode, ptr %47, i64 0, i32 5
  store ptr %49, ptr %memberidx4.i165, align 8
  %57 = call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %5, ptr nonnull %47, ptr null)
  %58 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i167 = getelementptr inbounds %Compiler, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx1.i167, align 8
  %memberidx2.i168 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %60 = load i64, ptr %memberidx2.i168, align 4
  %61 = icmp sgt i64 %60, 0
  br i1 %61, label %common.ret, label %ifend18

else12:                                           ; preds = %for.body
  %62 = load ptr, ptr %memberidx8, align 8
  %63 = load ptr, ptr %case.013, align 8
  %64 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %62, ptr %63)
  %65 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i170 = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 5
  %66 = load ptr, ptr %memberidx1.i170, align 8
  %memberidx2.i171 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 1
  %67 = load i64, ptr %memberidx2.i171, align 4
  %68 = icmp sgt i64 %67, 0
  br i1 %68, label %common.ret, label %ifend30

ifend13:                                          ; preds = %ifend30, %ifend18
  %expression.0 = phi ptr [ %57, %ifend18 ], [ %64, %ifend30 ]
  %match_case_kind.0 = phi i64 [ 0, %ifend18 ], [ 1, %ifend30 ]
  %memberidx40 = getelementptr inbounds %MatchExpressionCaseNode, ptr %case.013, i64 0, i32 1
  %69 = load ptr, ptr %memberidx40, align 8
  %70 = call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %69, ptr null, i1 true)
  %71 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i173 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 5
  %72 = load ptr, ptr %memberidx1.i173, align 8
  %memberidx2.i174 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %73 = load i64, ptr %memberidx2.i174, align 4
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %common.ret, label %ifend43

ifend18:                                          ; preds = %if.entry11
  %memberidx19 = getelementptr inbounds %Expression, ptr %57, i64 0, i32 3
  %75 = load ptr, ptr %memberidx19, align 8
  %76 = load i64, ptr %75, align 4
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %ifend13, label %if.entry20

if.entry20:                                       ; preds = %ifend18
  %78 = load ptr, ptr %memberidx8, align 8
  %79 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %78)
  %memberidx.i175 = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  %80 = load i64, ptr %memberidx.i175, align 4
  %81 = trunc i64 %80 to i32
  %82 = add i32 %81, 1
  %83 = call ptr @malloc(i32 %82)
  %84 = load ptr, ptr %79, align 8
  %85 = load i64, ptr %memberidx.i175, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %83, ptr align 8 %84, i64 %85, i1 false)
  %86 = getelementptr inbounds i8, ptr %83, i64 %85
  store i8 0, ptr %86, align 1
  %87 = alloca ptr, align 8
  %88 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %87, ptr nonnull @223, ptr %83)
  %89 = load ptr, ptr %87, align 8
  %90 = tail call ptr @malloc(i32 24)
  store ptr %89, ptr %90, align 8
  %memberidx1.i176 = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  store i64 %88, ptr %memberidx1.i176, align 4
  %memberidx2.i177 = getelementptr inbounds %String, ptr %90, i64 0, i32 2
  store i64 %88, ptr %memberidx2.i177, align 4
  tail call void @free(ptr %83)
  %91 = load ptr, ptr %case.013, align 8
  %92 = load ptr, ptr %91, align 8
  %93 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i179 = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx1.i179, align 8
  %95 = call ptr @malloc(i32 24)
  store i64 5, ptr %95, align 4
  %memberidx1.i.i180 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 2
  store ptr %92, ptr %memberidx1.i.i180, align 8
  %memberidx2.i.i181 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i181, align 8
  %memberidx.i.i182 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i.i182, align 4
  %memberidx1.i2.i183 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 2
  %97 = load i64, ptr %memberidx1.i2.i183, align 4
  %.not.i.i184 = icmp slt i64 %96, %97
  br i1 %.not.i.i184, label %if.entry20.TypeChecker_error.exit187_crit_edge, label %if.entry.i.i186

if.entry20.TypeChecker_error.exit187_crit_edge:   ; preds = %if.entry20
  %.pre25 = load ptr, ptr %94, align 8
  br label %TypeChecker_error.exit187

if.entry.i.i186:                                  ; preds = %if.entry20
  %98 = shl nuw i64 %97, 1
  store i64 %98, ptr %memberidx1.i2.i183, align 4
  %99 = load ptr, ptr %94, align 8
  %100 = shl i64 %97, 4
  %101 = call ptr @realloc(ptr %99, i64 %100)
  store ptr %101, ptr %94, align 8
  %.pre24 = load i64, ptr %memberidx.i.i182, align 4
  br label %TypeChecker_error.exit187

TypeChecker_error.exit187:                        ; preds = %if.entry20.TypeChecker_error.exit187_crit_edge, %if.entry.i.i186
  %102 = phi ptr [ %.pre25, %if.entry20.TypeChecker_error.exit187_crit_edge ], [ %101, %if.entry.i.i186 ]
  %103 = phi i64 [ %96, %if.entry20.TypeChecker_error.exit187_crit_edge ], [ %.pre24, %if.entry.i.i186 ]
  %104 = add nsw i64 %103, 1
  store i64 %104, ptr %memberidx.i.i182, align 4
  %105 = getelementptr inbounds ptr, ptr %102, i64 %103
  store ptr %95, ptr %105, align 8
  br label %common.ret

ifend30:                                          ; preds = %else12
  %106 = load ptr, ptr %memberidx8, align 8
  %memberidx32 = getelementptr inbounds %Expression, ptr %64, i64 0, i32 3
  %107 = load ptr, ptr %memberidx32, align 8
  %108 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %106, ptr %107)
  br i1 %108, label %ifend13, label %if.entry33

if.entry33:                                       ; preds = %ifend30
  %109 = load ptr, ptr %memberidx8, align 8
  %110 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %109)
  %memberidx.i188 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  %111 = load i64, ptr %memberidx.i188, align 4
  %112 = trunc i64 %111 to i32
  %113 = add i32 %112, 1
  %114 = call ptr @malloc(i32 %113)
  %115 = load ptr, ptr %110, align 8
  %116 = load i64, ptr %memberidx.i188, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %114, ptr align 8 %115, i64 %116, i1 false)
  %117 = getelementptr inbounds i8, ptr %114, i64 %116
  store i8 0, ptr %117, align 1
  %118 = load ptr, ptr %memberidx32, align 8
  %119 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %118)
  %memberidx.i189 = getelementptr inbounds %String, ptr %119, i64 0, i32 1
  %120 = load i64, ptr %memberidx.i189, align 4
  %121 = trunc i64 %120 to i32
  %122 = add i32 %121, 1
  %123 = call ptr @malloc(i32 %122)
  %124 = load ptr, ptr %119, align 8
  %125 = load i64, ptr %memberidx.i189, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %123, ptr align 8 %124, i64 %125, i1 false)
  %126 = getelementptr inbounds i8, ptr %123, i64 %125
  store i8 0, ptr %126, align 1
  %127 = alloca ptr, align 8
  %128 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %127, ptr nonnull @224, ptr %114, ptr %123)
  %129 = load ptr, ptr %127, align 8
  %130 = tail call ptr @malloc(i32 24)
  store ptr %129, ptr %130, align 8
  %memberidx1.i190 = getelementptr inbounds %String, ptr %130, i64 0, i32 1
  store i64 %128, ptr %memberidx1.i190, align 4
  %memberidx2.i191 = getelementptr inbounds %String, ptr %130, i64 0, i32 2
  store i64 %128, ptr %memberidx2.i191, align 4
  tail call void @free(ptr %114)
  tail call void @free(ptr %123)
  %131 = load ptr, ptr %case.013, align 8
  %132 = load ptr, ptr %131, align 8
  %133 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i193 = getelementptr inbounds %Compiler, ptr %133, i64 0, i32 5
  %134 = load ptr, ptr %memberidx1.i193, align 8
  %135 = call ptr @malloc(i32 24)
  store i64 5, ptr %135, align 4
  %memberidx1.i.i194 = getelementptr inbounds %FloError, ptr %135, i64 0, i32 2
  store ptr %132, ptr %memberidx1.i.i194, align 8
  %memberidx2.i.i195 = getelementptr inbounds %FloError, ptr %135, i64 0, i32 1
  store ptr %130, ptr %memberidx2.i.i195, align 8
  %memberidx.i.i196 = getelementptr inbounds %Array_FloError_, ptr %134, i64 0, i32 1
  %136 = load i64, ptr %memberidx.i.i196, align 4
  %memberidx1.i2.i197 = getelementptr inbounds %Array_FloError_, ptr %134, i64 0, i32 2
  %137 = load i64, ptr %memberidx1.i2.i197, align 4
  %.not.i.i198 = icmp slt i64 %136, %137
  br i1 %.not.i.i198, label %if.entry33.TypeChecker_error.exit201_crit_edge, label %if.entry.i.i200

if.entry33.TypeChecker_error.exit201_crit_edge:   ; preds = %if.entry33
  %.pre23 = load ptr, ptr %134, align 8
  br label %TypeChecker_error.exit201

if.entry.i.i200:                                  ; preds = %if.entry33
  %138 = shl nuw i64 %137, 1
  store i64 %138, ptr %memberidx1.i2.i197, align 4
  %139 = load ptr, ptr %134, align 8
  %140 = shl i64 %137, 4
  %141 = call ptr @realloc(ptr %139, i64 %140)
  store ptr %141, ptr %134, align 8
  %.pre = load i64, ptr %memberidx.i.i196, align 4
  br label %TypeChecker_error.exit201

TypeChecker_error.exit201:                        ; preds = %if.entry33.TypeChecker_error.exit201_crit_edge, %if.entry.i.i200
  %142 = phi ptr [ %.pre23, %if.entry33.TypeChecker_error.exit201_crit_edge ], [ %141, %if.entry.i.i200 ]
  %143 = phi i64 [ %136, %if.entry33.TypeChecker_error.exit201_crit_edge ], [ %.pre, %if.entry.i.i200 ]
  %144 = add nsw i64 %143, 1
  store i64 %144, ptr %memberidx.i.i196, align 4
  %145 = getelementptr inbounds ptr, ptr %142, i64 %143
  store ptr %135, ptr %145, align 8
  br label %common.ret

ifend43:                                          ; preds = %ifend13
  %memberidx44 = getelementptr inbounds %Block, ptr %70, i64 0, i32 4
  %146 = load ptr, ptr %memberidx44, align 8
  %.not142 = icmp eq ptr %146, null
  br i1 %.not142, label %false_block, label %true_block

true_block:                                       ; preds = %ifend43
  %memberidx46 = getelementptr inbounds %Expression, ptr %146, i64 0, i32 3
  %147 = load ptr, ptr %memberidx46, align 8
  br label %end

false_block:                                      ; preds = %ifend43
  %148 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %148, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %147, %true_block ], [ %148, %false_block ]
  %149 = load i64, ptr %result_type.012, align 4
  %150 = icmp eq i64 %149, 21
  br i1 %150, label %ifend50, label %else49

else49:                                           ; preds = %end
  %151 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %result_type.012, ptr %ternary)
  br i1 %151, label %ifend50, label %if.entry51

ifend50:                                          ; preds = %end, %else49
  %result_type.1 = phi ptr [ %result_type.012, %else49 ], [ %ternary, %end ]
  %152 = tail call ptr @malloc(i32 24)
  store i64 %match_case_kind.0, ptr %152, align 4
  %memberidx1.i202 = getelementptr inbounds %MatchExpressionCase, ptr %152, i64 0, i32 1
  store ptr %expression.0, ptr %memberidx1.i202, align 8
  %memberidx2.i203 = getelementptr inbounds %MatchExpressionCase, ptr %152, i64 0, i32 2
  store ptr %70, ptr %memberidx2.i203, align 8
  %153 = load i64, ptr %memberidx.i9.i, align 4
  %154 = load i64, ptr %memberidx1.i10.i, align 4
  %.not.i = icmp slt i64 %153, %154
  br i1 %.not.i, label %ifend50.Array_MatchExpressionCase____sl__.exit_crit_edge, label %if.entry.i

ifend50.Array_MatchExpressionCase____sl__.exit_crit_edge: ; preds = %ifend50
  %.pre29 = load ptr, ptr %37, align 8
  br label %Array_MatchExpressionCase____sl__.exit

if.entry.i:                                       ; preds = %ifend50
  %155 = shl nuw i64 %154, 1
  store i64 %155, ptr %memberidx1.i10.i, align 4
  %156 = load ptr, ptr %37, align 8
  %157 = shl i64 %154, 4
  %158 = call ptr @realloc(ptr %156, i64 %157)
  store ptr %158, ptr %37, align 8
  %.pre28 = load i64, ptr %memberidx.i9.i, align 4
  br label %Array_MatchExpressionCase____sl__.exit

Array_MatchExpressionCase____sl__.exit:           ; preds = %ifend50.Array_MatchExpressionCase____sl__.exit_crit_edge, %if.entry.i
  %159 = phi ptr [ %.pre29, %ifend50.Array_MatchExpressionCase____sl__.exit_crit_edge ], [ %158, %if.entry.i ]
  %160 = phi i64 [ %153, %ifend50.Array_MatchExpressionCase____sl__.exit_crit_edge ], [ %.pre28, %if.entry.i ]
  %161 = add nsw i64 %160, 1
  store i64 %161, ptr %memberidx.i9.i, align 4
  %162 = getelementptr inbounds ptr, ptr %159, i64 %160
  store ptr %152, ptr %162, align 8
  %163 = add nuw nsw i64 %44, 1
  store i64 %163, ptr %memberidx1.i.i154, align 4
  %164 = getelementptr inbounds ptr, ptr %41, i64 %44
  %165 = icmp sge i64 %44, %42
  %case.0 = load ptr, ptr %164, align 8
  store i1 %165, ptr %40, align 1
  br i1 %165, label %for.end, label %for.body

if.entry51:                                       ; preds = %else49
  %166 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %result_type.012)
  %memberidx.i210 = getelementptr inbounds %String, ptr %166, i64 0, i32 1
  %167 = load i64, ptr %memberidx.i210, align 4
  %168 = trunc i64 %167 to i32
  %169 = add i32 %168, 1
  %170 = call ptr @malloc(i32 %169)
  %171 = load ptr, ptr %166, align 8
  %172 = load i64, ptr %memberidx.i210, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %170, ptr align 8 %171, i64 %172, i1 false)
  %173 = getelementptr inbounds i8, ptr %170, i64 %172
  store i8 0, ptr %173, align 1
  %174 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %ternary)
  %memberidx.i211 = getelementptr inbounds %String, ptr %174, i64 0, i32 1
  %175 = load i64, ptr %memberidx.i211, align 4
  %176 = trunc i64 %175 to i32
  %177 = add i32 %176, 1
  %178 = call ptr @malloc(i32 %177)
  %179 = load ptr, ptr %174, align 8
  %180 = load i64, ptr %memberidx.i211, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %178, ptr align 8 %179, i64 %180, i1 false)
  %181 = getelementptr inbounds i8, ptr %178, i64 %180
  store i8 0, ptr %181, align 1
  %182 = alloca ptr, align 8
  %183 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %182, ptr nonnull @225, ptr %170, ptr %178)
  %184 = load ptr, ptr %182, align 8
  %185 = tail call ptr @malloc(i32 24)
  store ptr %184, ptr %185, align 8
  %memberidx1.i212 = getelementptr inbounds %String, ptr %185, i64 0, i32 1
  store i64 %183, ptr %memberidx1.i212, align 4
  %memberidx2.i213 = getelementptr inbounds %String, ptr %185, i64 0, i32 2
  store i64 %183, ptr %memberidx2.i213, align 4
  tail call void @free(ptr %170)
  tail call void @free(ptr %178)
  %186 = load ptr, ptr %case.013, align 8
  %187 = load ptr, ptr %186, align 8
  %188 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i215 = getelementptr inbounds %Compiler, ptr %188, i64 0, i32 5
  %189 = load ptr, ptr %memberidx1.i215, align 8
  %190 = call ptr @malloc(i32 24)
  store i64 5, ptr %190, align 4
  %memberidx1.i.i216 = getelementptr inbounds %FloError, ptr %190, i64 0, i32 2
  store ptr %187, ptr %memberidx1.i.i216, align 8
  %memberidx2.i.i217 = getelementptr inbounds %FloError, ptr %190, i64 0, i32 1
  store ptr %185, ptr %memberidx2.i.i217, align 8
  %memberidx.i.i218 = getelementptr inbounds %Array_FloError_, ptr %189, i64 0, i32 1
  %191 = load i64, ptr %memberidx.i.i218, align 4
  %memberidx1.i2.i219 = getelementptr inbounds %Array_FloError_, ptr %189, i64 0, i32 2
  %192 = load i64, ptr %memberidx1.i2.i219, align 4
  %.not.i.i220 = icmp slt i64 %191, %192
  br i1 %.not.i.i220, label %if.entry51.TypeChecker_error.exit223_crit_edge, label %if.entry.i.i222

if.entry51.TypeChecker_error.exit223_crit_edge:   ; preds = %if.entry51
  %.pre27 = load ptr, ptr %189, align 8
  br label %TypeChecker_error.exit223

if.entry.i.i222:                                  ; preds = %if.entry51
  %193 = shl nuw i64 %192, 1
  store i64 %193, ptr %memberidx1.i2.i219, align 4
  %194 = load ptr, ptr %189, align 8
  %195 = shl i64 %192, 4
  %196 = call ptr @realloc(ptr %194, i64 %195)
  store ptr %196, ptr %189, align 8
  %.pre26 = load i64, ptr %memberidx.i.i218, align 4
  br label %TypeChecker_error.exit223

TypeChecker_error.exit223:                        ; preds = %if.entry51.TypeChecker_error.exit223_crit_edge, %if.entry.i.i222
  %197 = phi ptr [ %.pre27, %if.entry51.TypeChecker_error.exit223_crit_edge ], [ %196, %if.entry.i.i222 ]
  %198 = phi i64 [ %191, %if.entry51.TypeChecker_error.exit223_crit_edge ], [ %.pre26, %if.entry.i.i222 ]
  %199 = add nsw i64 %198, 1
  store i64 %199, ptr %memberidx.i.i218, align 4
  %200 = getelementptr inbounds ptr, ptr %197, i64 %198
  store ptr %190, ptr %200, align 8
  br label %common.ret

if.entry58:                                       ; preds = %for.end
  %201 = call ptr @malloc(i32 55)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(55) %201, ptr noundef nonnull align 8 dereferenceable(55) @226, i64 55, i1 false)
  %202 = call ptr @malloc(i32 24)
  store ptr %201, ptr %202, align 8
  %memberidx1.i.i224 = getelementptr inbounds %String, ptr %202, i64 0, i32 1
  store i64 55, ptr %memberidx1.i.i224, align 4
  %memberidx2.i.i225 = getelementptr inbounds %String, ptr %202, i64 0, i32 2
  store i64 55, ptr %memberidx2.i.i225, align 4
  %203 = load ptr, ptr %1, align 8
  %204 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i227 = getelementptr inbounds %Compiler, ptr %204, i64 0, i32 5
  %205 = load ptr, ptr %memberidx1.i227, align 8
  %206 = call ptr @malloc(i32 24)
  store i64 4, ptr %206, align 4
  %memberidx1.i.i228 = getelementptr inbounds %FloError, ptr %206, i64 0, i32 2
  store ptr %203, ptr %memberidx1.i.i228, align 8
  %memberidx2.i.i229 = getelementptr inbounds %FloError, ptr %206, i64 0, i32 1
  store ptr %202, ptr %memberidx2.i.i229, align 8
  %memberidx.i.i230 = getelementptr inbounds %Array_FloError_, ptr %205, i64 0, i32 1
  %207 = load i64, ptr %memberidx.i.i230, align 4
  %memberidx1.i2.i231 = getelementptr inbounds %Array_FloError_, ptr %205, i64 0, i32 2
  %208 = load i64, ptr %memberidx1.i2.i231, align 4
  %.not.i.i232 = icmp slt i64 %207, %208
  br i1 %.not.i.i232, label %if.entry58.TypeChecker_error.exit235_crit_edge, label %if.entry.i.i234

if.entry58.TypeChecker_error.exit235_crit_edge:   ; preds = %if.entry58
  %.pre33 = load ptr, ptr %205, align 8
  br label %TypeChecker_error.exit235

if.entry.i.i234:                                  ; preds = %if.entry58
  %209 = shl nuw i64 %208, 1
  store i64 %209, ptr %memberidx1.i2.i231, align 4
  %210 = load ptr, ptr %205, align 8
  %211 = shl i64 %208, 4
  %212 = call ptr @realloc(ptr %210, i64 %211)
  store ptr %212, ptr %205, align 8
  %.pre32 = load i64, ptr %memberidx.i.i230, align 4
  br label %TypeChecker_error.exit235

TypeChecker_error.exit235:                        ; preds = %if.entry58.TypeChecker_error.exit235_crit_edge, %if.entry.i.i234
  %213 = phi ptr [ %.pre33, %if.entry58.TypeChecker_error.exit235_crit_edge ], [ %212, %if.entry.i.i234 ]
  %214 = phi i64 [ %207, %if.entry58.TypeChecker_error.exit235_crit_edge ], [ %.pre32, %if.entry.i.i234 ]
  %215 = add nsw i64 %214, 1
  store i64 %215, ptr %memberidx.i.i230, align 4
  %216 = getelementptr inbounds ptr, ptr %213, i64 %214
  store ptr %206, ptr %216, align 8
  br label %common.ret

else59:                                           ; preds = %for.end
  %217 = call fastcc ptr @TypeChecker_check_block(ptr %0, ptr nonnull %45, ptr null, i1 true)
  %memberidx66 = getelementptr inbounds %Block, ptr %217, i64 0, i32 4
  %218 = load ptr, ptr %memberidx66, align 8
  %.not = icmp eq ptr %218, null
  br i1 %.not, label %false_block64, label %true_block63

true_block63:                                     ; preds = %else59
  %memberidx68 = getelementptr inbounds %Expression, ptr %218, i64 0, i32 3
  %219 = load ptr, ptr %memberidx68, align 8
  br label %end65

false_block64:                                    ; preds = %else59
  %220 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %220, align 4
  br label %end65

end65:                                            ; preds = %false_block64, %true_block63
  %ternary69 = phi ptr [ %219, %true_block63 ], [ %220, %false_block64 ]
  %221 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %result_type.0.lcssa, ptr %ternary69)
  br i1 %221, label %ifend72, label %if.entry70

if.entry70:                                       ; preds = %end65
  %222 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %result_type.0.lcssa)
  %memberidx.i236 = getelementptr inbounds %String, ptr %222, i64 0, i32 1
  %223 = load i64, ptr %memberidx.i236, align 4
  %224 = trunc i64 %223 to i32
  %225 = add i32 %224, 1
  %226 = call ptr @malloc(i32 %225)
  %227 = load ptr, ptr %222, align 8
  %228 = load i64, ptr %memberidx.i236, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %226, ptr align 8 %227, i64 %228, i1 false)
  %229 = getelementptr inbounds i8, ptr %226, i64 %228
  store i8 0, ptr %229, align 1
  %230 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %ternary69)
  %memberidx.i237 = getelementptr inbounds %String, ptr %230, i64 0, i32 1
  %231 = load i64, ptr %memberidx.i237, align 4
  %232 = trunc i64 %231 to i32
  %233 = add i32 %232, 1
  %234 = call ptr @malloc(i32 %233)
  %235 = load ptr, ptr %230, align 8
  %236 = load i64, ptr %memberidx.i237, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %234, ptr align 8 %235, i64 %236, i1 false)
  %237 = getelementptr inbounds i8, ptr %234, i64 %236
  store i8 0, ptr %237, align 1
  %238 = alloca ptr, align 8
  %239 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %238, ptr nonnull @227, ptr %226, ptr %234)
  %240 = load ptr, ptr %238, align 8
  %241 = tail call ptr @malloc(i32 24)
  store ptr %240, ptr %241, align 8
  %memberidx1.i238 = getelementptr inbounds %String, ptr %241, i64 0, i32 1
  store i64 %239, ptr %memberidx1.i238, align 4
  %memberidx2.i239 = getelementptr inbounds %String, ptr %241, i64 0, i32 2
  store i64 %239, ptr %memberidx2.i239, align 4
  tail call void @free(ptr %226)
  tail call void @free(ptr %234)
  %242 = load ptr, ptr %1, align 8
  %243 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i241 = getelementptr inbounds %Compiler, ptr %243, i64 0, i32 5
  %244 = load ptr, ptr %memberidx1.i241, align 8
  %245 = call ptr @malloc(i32 24)
  store i64 5, ptr %245, align 4
  %memberidx1.i.i242 = getelementptr inbounds %FloError, ptr %245, i64 0, i32 2
  store ptr %242, ptr %memberidx1.i.i242, align 8
  %memberidx2.i.i243 = getelementptr inbounds %FloError, ptr %245, i64 0, i32 1
  store ptr %241, ptr %memberidx2.i.i243, align 8
  %memberidx.i.i244 = getelementptr inbounds %Array_FloError_, ptr %244, i64 0, i32 1
  %246 = load i64, ptr %memberidx.i.i244, align 4
  %memberidx1.i2.i245 = getelementptr inbounds %Array_FloError_, ptr %244, i64 0, i32 2
  %247 = load i64, ptr %memberidx1.i2.i245, align 4
  %.not.i.i246 = icmp slt i64 %246, %247
  br i1 %.not.i.i246, label %if.entry70.TypeChecker_error.exit249_crit_edge, label %if.entry.i.i248

if.entry70.TypeChecker_error.exit249_crit_edge:   ; preds = %if.entry70
  %.pre31 = load ptr, ptr %244, align 8
  br label %TypeChecker_error.exit249

if.entry.i.i248:                                  ; preds = %if.entry70
  %248 = shl nuw i64 %247, 1
  store i64 %248, ptr %memberidx1.i2.i245, align 4
  %249 = load ptr, ptr %244, align 8
  %250 = shl i64 %247, 4
  %251 = call ptr @realloc(ptr %249, i64 %250)
  store ptr %251, ptr %244, align 8
  %.pre30 = load i64, ptr %memberidx.i.i244, align 4
  br label %TypeChecker_error.exit249

TypeChecker_error.exit249:                        ; preds = %if.entry70.TypeChecker_error.exit249_crit_edge, %if.entry.i.i248
  %252 = phi ptr [ %.pre31, %if.entry70.TypeChecker_error.exit249_crit_edge ], [ %251, %if.entry.i.i248 ]
  %253 = phi i64 [ %246, %if.entry70.TypeChecker_error.exit249_crit_edge ], [ %.pre30, %if.entry.i.i248 ]
  %254 = add nsw i64 %253, 1
  store i64 %254, ptr %memberidx.i.i244, align 4
  %255 = getelementptr inbounds ptr, ptr %252, i64 %253
  store ptr %245, ptr %255, align 8
  br label %common.ret

ifend72:                                          ; preds = %end65
  store ptr %217, ptr %memberidx5.i, align 8
  %memberidx75 = getelementptr inbounds %Expression, ptr %36, i64 0, i32 3
  store ptr %result_type.0.lcssa, ptr %memberidx75, align 8
  br label %common.ret
}

define internal fastcc noalias ptr @TypeChecker_check_member_access(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx.i = getelementptr inbounds %PropId, ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 3
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %4, i64 0, i32 2
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %15 = tail call ptr @malloc(i32 0)
  %16 = tail call ptr @malloc(i32 24)
  store ptr %15, ptr %16, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %16, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %17 = load i64, ptr %1, align 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %if.entry, label %else

if.entry:                                         ; preds = %2
  %memberidx2 = getelementptr inbounds %Class, ptr %14, i64 0, i32 5
  %19 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %20 = load i64, ptr %memberidx3, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 2
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 3
  br label %ifend

else:                                             ; preds = %2
  %memberidx6 = getelementptr inbounds %Class, ptr %14, i64 0, i32 4
  %24 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %25 = load i64, ptr %memberidx7, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx8 = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 2
  %memberidx9 = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 3
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %visibility.0.in = phi ptr [ %memberidx4, %if.entry ], [ %memberidx8, %else ]
  %member_name.0.in = phi ptr [ %memberidx5, %if.entry ], [ %memberidx9, %else ]
  %member_name.0 = load ptr, ptr %member_name.0.in, align 8
  %visibility.0 = load i64, ptr %visibility.0.in, align 4
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %29 = load ptr, ptr %memberidx10, align 8
  %.not = icmp eq ptr %29, null
  br i1 %.not, label %else12, label %if.entry11

if.entry11:                                       ; preds = %ifend
  %30 = load i64, ptr %29, align 4
  %31 = load ptr, ptr %14, align 8
  %32 = load i64, ptr %31, align 4
  %33 = icmp ne i64 %30, %32
  %memberidx19 = getelementptr inbounds %TypeId, ptr %31, i64 0, i32 2
  %34 = load i64, ptr %memberidx19, align 4
  %memberidx21 = getelementptr inbounds %TypeId, ptr %29, i64 0, i32 2
  %35 = load i64, ptr %memberidx21, align 4
  %36 = icmp ne i64 %34, %35
  %37 = or i1 %33, %36
  %38 = icmp eq i64 %visibility.0, 1
  %or.cond = select i1 %37, i1 %38, i1 false
  br i1 %or.cond, label %if.entry25, label %common.ret

else12:                                           ; preds = %ifend
  %.not50 = icmp eq i64 %visibility.0, 2
  br i1 %.not50, label %common.ret, label %if.entry29

common.ret.sink.split:                            ; preds = %if.entry25, %dump_access.exit
  %.sink61 = phi ptr [ %70, %dump_access.exit ], [ %42, %if.entry25 ]
  %.sink = phi ptr [ %78, %dump_access.exit ], [ %50, %if.entry25 ]
  %common.ret.op.ph = phi ptr [ %85, %dump_access.exit ], [ %57, %if.entry25 ]
  tail call void @free(ptr %.sink61)
  tail call void @free(ptr %.sink)
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %else12, %if.entry11
  %common.ret.op = phi ptr [ null, %if.entry11 ], [ null, %else12 ], [ %common.ret.op.ph, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry25:                                       ; preds = %if.entry11
  %memberidx.i54 = getelementptr inbounds %String, ptr %member_name.0, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i54, align 4
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, 1
  %42 = tail call ptr @malloc(i32 %41)
  %43 = load ptr, ptr %member_name.0, align 8
  %44 = load i64, ptr %memberidx.i54, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %43, i64 %44, i1 false)
  %45 = getelementptr inbounds i8, ptr %42, i64 %44
  store i8 0, ptr %45, align 1
  %memberidx28 = getelementptr inbounds %Class, ptr %14, i64 0, i32 1
  %46 = load ptr, ptr %memberidx28, align 8
  %memberidx.i55 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx.i55, align 4
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, 1
  %50 = tail call ptr @malloc(i32 %49)
  %51 = load ptr, ptr %46, align 8
  %52 = load i64, ptr %memberidx.i55, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %50, ptr align 8 %51, i64 %52, i1 false)
  %53 = getelementptr inbounds i8, ptr %50, i64 %52
  store i8 0, ptr %53, align 1
  %54 = alloca ptr, align 8
  %55 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %54, ptr nonnull @195, ptr %42, ptr %50)
  %56 = load ptr, ptr %54, align 8
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  %memberidx1.i56 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  store i64 %55, ptr %memberidx1.i56, align 4
  %memberidx2.i57 = getelementptr inbounds %String, ptr %57, i64 0, i32 2
  store i64 %55, ptr %memberidx2.i57, align 4
  br label %common.ret.sink.split

if.entry29:                                       ; preds = %else12
  %memberidx.i58 = getelementptr inbounds %String, ptr %member_name.0, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i58, align 4
  %59 = trunc i64 %58 to i32
  %60 = add i32 %59, 1
  %61 = tail call ptr @malloc(i32 %60)
  %62 = load ptr, ptr %member_name.0, align 8
  %63 = load i64, ptr %memberidx.i58, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %62, i64 %63, i1 false)
  %64 = getelementptr inbounds i8, ptr %61, i64 %63
  store i8 0, ptr %64, align 1
  %65 = icmp eq i64 %visibility.0, 1
  br i1 %65, label %if.entry.i, label %ifend3.i

if.entry.i:                                       ; preds = %if.entry29
  %66 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %66, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  %67 = tail call ptr @malloc(i32 24)
  store ptr %66, ptr %67, align 8
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry29
  %68 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %68, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  %69 = tail call ptr @malloc(i32 24)
  store ptr %68, ptr %69, align 8
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i, %ifend3.i
  %.sink65 = phi ptr [ %67, %if.entry.i ], [ %69, %ifend3.i ]
  %.sink64 = phi i64 [ 7, %if.entry.i ], [ 9, %ifend3.i ]
  %.off0 = phi i32 [ 8, %if.entry.i ], [ 10, %ifend3.i ]
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %.sink65, i64 0, i32 1
  store i64 %.sink64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %.sink65, i64 0, i32 2
  store i64 %.sink64, ptr %memberidx2.i.i.i, align 4
  %memberidx.i53 = getelementptr inbounds %String, ptr %.sink65, i64 0, i32 1
  %70 = tail call ptr @malloc(i32 %.off0)
  %71 = load ptr, ptr %.sink65, align 8
  %72 = load i64, ptr %memberidx.i53, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %70, ptr align 8 %71, i64 %72, i1 false)
  %73 = getelementptr inbounds i8, ptr %70, i64 %72
  store i8 0, ptr %73, align 1
  %memberidx32 = getelementptr inbounds %Class, ptr %14, i64 0, i32 1
  %74 = load ptr, ptr %memberidx32, align 8
  %memberidx.i51 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i51, align 4
  %76 = trunc i64 %75 to i32
  %77 = add i32 %76, 1
  %78 = tail call ptr @malloc(i32 %77)
  %79 = load ptr, ptr %74, align 8
  %80 = load i64, ptr %memberidx.i51, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %78, ptr align 8 %79, i64 %80, i1 false)
  %81 = getelementptr inbounds i8, ptr %78, i64 %80
  store i8 0, ptr %81, align 1
  %82 = alloca ptr, align 8
  %83 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %82, ptr nonnull @196, ptr nonnull %61, ptr %70, ptr %78)
  %84 = load ptr, ptr %82, align 8
  %85 = tail call ptr @malloc(i32 24)
  store ptr %84, ptr %85, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  store i64 %83, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %85, i64 0, i32 2
  store i64 %83, ptr %memberidx2.i, align 4
  tail call void @free(ptr nonnull %61)
  br label %common.ret.sink.split
}

define internal fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ReturnStatementNode, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %4, null
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %5 = load ptr, ptr %0, align 8
  %memberidx.i.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i.i, align 8
  %7 = load ptr, ptr %5, align 8
  %8 = load i64, ptr %6, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %17 = load i64, ptr %4, align 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %if.entry.i
  %memberidx1.i.i = getelementptr inbounds %Class, ptr %16, i64 0, i32 5
  %19 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i.i, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i.i:                                        ; preds = %if.entry.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %16, i64 0, i32 4
  %24 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %25 = load i64, ptr %memberidx5.i.i, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i:                                          ; preds = %2
  %memberidx.i.i7.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %29 = load ptr, ptr %memberidx.i.i7.i, align 8
  %30 = load i64, ptr %29, align 4
  %31 = load ptr, ptr %0, align 8
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 %30
  %35 = load ptr, ptr %34, align 8
  %memberidx.i.i = getelementptr inbounds %Module, ptr %35, i64 0, i32 4
  %36 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i8.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %37 = load ptr, ptr %memberidx1.i8.i, align 8
  %memberidx2.i9.i = getelementptr inbounds %VarId, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i9.i, align 4
  %39 = load ptr, ptr %36, align 8
  %40 = getelementptr inbounds ptr, ptr %39, i64 %38
  %41 = load ptr, ptr %40, align 8
  %memberidx3.i = getelementptr inbounds %Function, ptr %41, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

TypeChecker_get_current_function_type.exit:       ; preds = %if.entry.i.i, %ifend.i.i, %ifend.i
  %common.ret.op.i.in = phi ptr [ %memberidx3.i, %ifend.i ], [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.i.in, align 8
  %memberidx1 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 2
  %42 = load ptr, ptr %memberidx1, align 8
  %43 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %43, align 4
  %memberidx.i34 = getelementptr inbounds %ReturnStatement, ptr %43, i64 0, i32 1
  store ptr null, ptr %memberidx.i34, align 8
  %.not = icmp eq ptr %3, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %TypeChecker_get_current_function_type.exit
  %44 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %42, ptr nonnull %3)
  %memberidx.i35 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %45 = load ptr, ptr %memberidx.i35, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %45, i64 0, i32 5
  %46 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx2.i, align 4
  %48 = icmp sgt i64 %47, 0
  br i1 %48, label %common.ret, label %ifend4

else:                                             ; preds = %TypeChecker_get_current_function_type.exit
  %49 = load i64, ptr %42, align 4
  %.not33 = icmp eq i64 %49, 10
  br i1 %.not33, label %common.ret, label %if.entry13

common.ret:                                       ; preds = %ifend8, %else, %if.entry, %TypeChecker_error.exit58, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit58 ], [ null, %if.entry ], [ %43, %else ], [ %43, %ifend8 ]
  ret ptr %common.ret.op

ifend4:                                           ; preds = %if.entry
  %memberidx5 = getelementptr inbounds %Expression, ptr %44, i64 0, i32 3
  %50 = load ptr, ptr %memberidx5, align 8
  %51 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %42, ptr %50)
  br i1 %51, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %ifend4
  %52 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %42)
  %memberidx.i36 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  %53 = load i64, ptr %memberidx.i36, align 4
  %54 = trunc i64 %53 to i32
  %55 = add i32 %54, 1
  %56 = tail call ptr @malloc(i32 %55)
  %57 = load ptr, ptr %52, align 8
  %58 = load i64, ptr %memberidx.i36, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %56, ptr align 8 %57, i64 %58, i1 false)
  %59 = getelementptr inbounds i8, ptr %56, i64 %58
  store i8 0, ptr %59, align 1
  %60 = load ptr, ptr %memberidx5, align 8
  %61 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %60)
  %memberidx.i37 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i37, align 4
  %63 = trunc i64 %62 to i32
  %64 = add i32 %63, 1
  %65 = tail call ptr @malloc(i32 %64)
  %66 = load ptr, ptr %61, align 8
  %67 = load i64, ptr %memberidx.i37, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %65, ptr align 8 %66, i64 %67, i1 false)
  %68 = getelementptr inbounds i8, ptr %65, i64 %67
  store i8 0, ptr %68, align 1
  %69 = alloca ptr, align 8
  %70 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %69, ptr nonnull @241, ptr %56, ptr %65)
  %71 = load ptr, ptr %69, align 8
  %72 = tail call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i38 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 %70, ptr %memberidx1.i38, align 4
  %memberidx2.i39 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 %70, ptr %memberidx2.i39, align 4
  tail call void @free(ptr %56)
  tail call void @free(ptr %65)
  %73 = load ptr, ptr %3, align 8
  %74 = load ptr, ptr %memberidx.i35, align 8
  %memberidx1.i41 = getelementptr inbounds %Compiler, ptr %74, i64 0, i32 5
  %75 = load ptr, ptr %memberidx1.i41, align 8
  %76 = call ptr @malloc(i32 24)
  store i64 5, ptr %76, align 4
  %memberidx1.i.i42 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 2
  store ptr %73, ptr %memberidx1.i.i42, align 8
  %memberidx2.i.i43 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 1
  store ptr %72, ptr %memberidx2.i.i43, align 8
  %memberidx.i.i44 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 1
  %77 = load i64, ptr %memberidx.i.i44, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 2
  %78 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %77, %78
  br i1 %.not.i.i, label %if.entry6.TypeChecker_error.exit_crit_edge, label %if.entry.i.i46

if.entry6.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry6
  %.pre60 = load ptr, ptr %75, align 8
  br label %TypeChecker_error.exit

if.entry.i.i46:                                   ; preds = %if.entry6
  %79 = shl nuw i64 %78, 1
  store i64 %79, ptr %memberidx1.i2.i, align 4
  %80 = load ptr, ptr %75, align 8
  %81 = shl i64 %78, 4
  %82 = call ptr @realloc(ptr %80, i64 %81)
  store ptr %82, ptr %75, align 8
  %.pre = load i64, ptr %memberidx.i.i44, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry6.TypeChecker_error.exit_crit_edge, %if.entry.i.i46
  %83 = phi ptr [ %.pre60, %if.entry6.TypeChecker_error.exit_crit_edge ], [ %82, %if.entry.i.i46 ]
  %84 = phi i64 [ %77, %if.entry6.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i46 ]
  %85 = add nsw i64 %84, 1
  store i64 %85, ptr %memberidx.i.i44, align 4
  %86 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %76, ptr %86, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend4
  store ptr %44, ptr %memberidx.i34, align 8
  br label %common.ret

if.entry13:                                       ; preds = %else
  %87 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %87, ptr noundef nonnull align 8 dereferenceable(32) @242, i64 32, i1 false)
  %88 = tail call ptr @malloc(i32 24)
  store ptr %87, ptr %88, align 8
  %memberidx1.i.i47 = getelementptr inbounds %String, ptr %88, i64 0, i32 1
  store i64 32, ptr %memberidx1.i.i47, align 4
  %memberidx2.i.i48 = getelementptr inbounds %String, ptr %88, i64 0, i32 2
  store i64 32, ptr %memberidx2.i.i48, align 4
  %89 = load ptr, ptr %1, align 8
  %memberidx.i49 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %90 = load ptr, ptr %memberidx.i49, align 8
  %memberidx1.i50 = getelementptr inbounds %Compiler, ptr %90, i64 0, i32 5
  %91 = load ptr, ptr %memberidx1.i50, align 8
  %92 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %92, align 4
  %memberidx1.i.i51 = getelementptr inbounds %FloError, ptr %92, i64 0, i32 2
  store ptr %89, ptr %memberidx1.i.i51, align 8
  %memberidx2.i.i52 = getelementptr inbounds %FloError, ptr %92, i64 0, i32 1
  store ptr %88, ptr %memberidx2.i.i52, align 8
  %memberidx.i.i53 = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 1
  %93 = load i64, ptr %memberidx.i.i53, align 4
  %memberidx1.i2.i54 = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 2
  %94 = load i64, ptr %memberidx1.i2.i54, align 4
  %.not.i.i55 = icmp slt i64 %93, %94
  br i1 %.not.i.i55, label %if.entry13.TypeChecker_error.exit58_crit_edge, label %if.entry.i.i57

if.entry13.TypeChecker_error.exit58_crit_edge:    ; preds = %if.entry13
  %.pre62 = load ptr, ptr %91, align 8
  br label %TypeChecker_error.exit58

if.entry.i.i57:                                   ; preds = %if.entry13
  %95 = shl nuw i64 %94, 1
  store i64 %95, ptr %memberidx1.i2.i54, align 4
  %96 = load ptr, ptr %91, align 8
  %97 = shl i64 %94, 4
  %98 = tail call ptr @realloc(ptr %96, i64 %97)
  store ptr %98, ptr %91, align 8
  %.pre61 = load i64, ptr %memberidx.i.i53, align 4
  br label %TypeChecker_error.exit58

TypeChecker_error.exit58:                         ; preds = %if.entry13.TypeChecker_error.exit58_crit_edge, %if.entry.i.i57
  %99 = phi ptr [ %.pre62, %if.entry13.TypeChecker_error.exit58_crit_edge ], [ %98, %if.entry.i.i57 ]
  %100 = phi i64 [ %93, %if.entry13.TypeChecker_error.exit58_crit_edge ], [ %.pre61, %if.entry.i.i57 ]
  %101 = add nsw i64 %100, 1
  store i64 %101, ptr %memberidx.i.i53, align 4
  %102 = getelementptr inbounds ptr, ptr %99, i64 %100
  store ptr %92, ptr %102, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %4)
  %.not.i = icmp eq ptr %5, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 2
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %end18, %end, %ifend54, %TypeChecker_error.exit187, %TypeChecker_error.exit174, %TypeChecker_error.exit162, %TypeChecker_error.exit148, %TypeChecker_error.exit127, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit127 ], [ null, %TypeChecker_error.exit148 ], [ null, %TypeChecker_error.exit162 ], [ null, %TypeChecker_error.exit174 ], [ null, %TypeChecker_error.exit187 ], [ %219, %ifend54 ], [ null, %end ], [ null, %end18 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %if.entry.i
  %memberidx.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i, align 4
  %9 = trunc i64 %8 to i32
  %10 = add i32 %9, 1
  %11 = tail call ptr @malloc(i32 %10)
  %12 = load ptr, ptr %4, align 8
  %13 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %12, i64 %13, i1 false)
  %14 = getelementptr inbounds i8, ptr %11, i64 %13
  store i8 0, ptr %14, align 1
  %15 = alloca ptr, align 8
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %15, ptr nonnull @109, ptr %11)
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  store i64 %16, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx2.i, align 4
  tail call void @free(ptr %11)
  %19 = load ptr, ptr %memberidx, align 8
  %memberidx3 = getelementptr inbounds %Token, ptr %19, i64 0, i32 1
  %20 = load ptr, ptr %memberidx3, align 8
  %memberidx.i108 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %21 = load ptr, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %Compiler, ptr %21, i64 0, i32 5
  %22 = load ptr, ptr %memberidx1.i109, align 8
  %23 = call ptr @malloc(i32 24)
  store i64 1, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 2
  store ptr %20, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 1
  store ptr %18, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %24, %25
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre195 = load ptr, ptr %22, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %26 = shl nuw i64 %25, 1
  store i64 %26, ptr %memberidx1.i2.i, align 4
  %27 = load ptr, ptr %22, align 8
  %28 = shl i64 %25, 4
  %29 = call ptr @realloc(ptr %27, i64 %28)
  store ptr %29, ptr %22, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %30 = phi ptr [ %.pre195, %if.entry.TypeChecker_error.exit_crit_edge ], [ %29, %if.entry.i.i ]
  %31 = phi i64 [ %24, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx.i.i, align 4
  %33 = getelementptr inbounds ptr, ptr %30, i64 %31
  store ptr %23, ptr %33, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %34 = load ptr, ptr %0, align 8
  %memberidx1.i110 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %35 = load ptr, ptr %memberidx1.i110, align 8
  %36 = load ptr, ptr %34, align 8
  %37 = load i64, ptr %35, align 4
  %38 = load ptr, ptr %36, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  %memberidx2.i.i111 = getelementptr inbounds %Module, ptr %40, i64 0, i32 7
  %41 = load ptr, ptr %memberidx2.i.i111, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %35, i64 0, i32 1
  %42 = load i64, ptr %memberidx3.i.i, align 4
  %43 = load ptr, ptr %41, align 8
  %44 = getelementptr inbounds ptr, ptr %43, i64 %42
  %45 = load ptr, ptr %44, align 8
  %memberidx4 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 3
  %46 = load ptr, ptr %memberidx4, align 8
  %.not = icmp eq ptr %46, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %47 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %46)
  br label %end

false_block:                                      ; preds = %ifend
  %48 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %48, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %47, %true_block ], [ %48, %false_block ]
  %memberidx.i112 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %49 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i113 = getelementptr inbounds %Compiler, ptr %49, i64 0, i32 5
  %50 = load ptr, ptr %memberidx1.i113, align 8
  %memberidx2.i114 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %51 = load i64, ptr %memberidx2.i114, align 4
  %52 = icmp sgt i64 %51, 0
  br i1 %52, label %common.ret, label %ifend8

ifend8:                                           ; preds = %end
  %memberidx9 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 4
  %53 = load ptr, ptr %memberidx9, align 8
  %54 = icmp eq ptr %53, null
  %55 = load i64, ptr %ternary, align 4
  %56 = icmp eq i64 %55, 21
  %57 = and i1 %54, %56
  br i1 %57, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %ifend8
  %memberidx.i115 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i115, align 4
  %59 = trunc i64 %58 to i32
  %60 = add i32 %59, 1
  %61 = tail call ptr @malloc(i32 %60)
  %62 = load ptr, ptr %4, align 8
  %63 = load i64, ptr %memberidx.i115, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %62, i64 %63, i1 false)
  %64 = getelementptr inbounds i8, ptr %61, i64 %63
  store i8 0, ptr %64, align 1
  %65 = alloca ptr, align 8
  %66 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %65, ptr nonnull @228, ptr %61)
  %67 = load ptr, ptr %65, align 8
  %68 = tail call ptr @malloc(i32 24)
  store ptr %67, ptr %68, align 8
  %memberidx1.i116 = getelementptr inbounds %String, ptr %68, i64 0, i32 1
  store i64 %66, ptr %memberidx1.i116, align 4
  %memberidx2.i117 = getelementptr inbounds %String, ptr %68, i64 0, i32 2
  store i64 %66, ptr %memberidx2.i117, align 4
  tail call void @free(ptr %61)
  %69 = load ptr, ptr %memberidx, align 8
  %memberidx15 = getelementptr inbounds %Token, ptr %69, i64 0, i32 1
  %70 = load ptr, ptr %memberidx15, align 8
  %71 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i119 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 5
  %72 = load ptr, ptr %memberidx1.i119, align 8
  %73 = call ptr @malloc(i32 24)
  store i64 4, ptr %73, align 4
  %memberidx1.i.i120 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 2
  store ptr %70, ptr %memberidx1.i.i120, align 8
  %memberidx2.i.i121 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 1
  store ptr %68, ptr %memberidx2.i.i121, align 8
  %memberidx.i.i122 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i.i122, align 4
  %memberidx1.i2.i123 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 2
  %75 = load i64, ptr %memberidx1.i2.i123, align 4
  %.not.i.i124 = icmp slt i64 %74, %75
  br i1 %.not.i.i124, label %if.entry11.TypeChecker_error.exit127_crit_edge, label %if.entry.i.i126

if.entry11.TypeChecker_error.exit127_crit_edge:   ; preds = %if.entry11
  %.pre212 = load ptr, ptr %72, align 8
  br label %TypeChecker_error.exit127

if.entry.i.i126:                                  ; preds = %if.entry11
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx1.i2.i123, align 4
  %77 = load ptr, ptr %72, align 8
  %78 = shl i64 %75, 4
  %79 = call ptr @realloc(ptr %77, i64 %78)
  store ptr %79, ptr %72, align 8
  %.pre211 = load i64, ptr %memberidx.i.i122, align 4
  br label %TypeChecker_error.exit127

TypeChecker_error.exit127:                        ; preds = %if.entry11.TypeChecker_error.exit127_crit_edge, %if.entry.i.i126
  %80 = phi ptr [ %.pre212, %if.entry11.TypeChecker_error.exit127_crit_edge ], [ %79, %if.entry.i.i126 ]
  %81 = phi i64 [ %74, %if.entry11.TypeChecker_error.exit127_crit_edge ], [ %.pre211, %if.entry.i.i126 ]
  %82 = add nsw i64 %81, 1
  store i64 %82, ptr %memberidx.i.i122, align 4
  %83 = getelementptr inbounds ptr, ptr %80, i64 %81
  store ptr %73, ptr %83, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend8
  br i1 %54, label %ifend27, label %end18

end18:                                            ; preds = %ifend13
  %84 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %53)
  %.pre196 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i129.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre196, i64 0, i32 5
  %.pre197 = load ptr, ptr %memberidx1.i129.phi.trans.insert, align 8
  %memberidx2.i130.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre197, i64 0, i32 1
  %.pre198 = load i64, ptr %memberidx2.i130.phi.trans.insert, align 4
  %85 = icmp sgt i64 %.pre198, 0
  br i1 %85, label %common.ret, label %ifend24

ifend24:                                          ; preds = %end18
  %.not104 = icmp eq ptr %84, null
  br i1 %.not104, label %ifend27, label %if.entry25

if.entry25:                                       ; preds = %ifend24
  %memberidx.i131 = getelementptr inbounds %Expression, ptr %84, i64 0, i32 2
  %86 = load i64, ptr %memberidx.i131, align 4
  %87 = icmp eq i64 %86, 5
  %memberidx28 = getelementptr inbounds %Expression, ptr %84, i64 0, i32 3
  %88 = load ptr, ptr %memberidx28, align 8
  %89 = load i64, ptr %88, align 4
  %90 = icmp eq i64 %89, 21
  %91 = and i1 %87, %90
  br i1 %91, label %if.entry30, label %ifend32

ifend27:                                          ; preds = %ifend13, %ifend44, %ifend24
  %ternary21216219 = phi ptr [ %84, %ifend44 ], [ null, %ifend24 ], [ null, %ifend13 ]
  %var_type.0 = phi ptr [ %var_type.1, %ifend44 ], [ %ternary, %ifend24 ], [ %ternary, %ifend13 ]
  %memberidx51 = getelementptr inbounds %Scope, ptr %45, i64 0, i32 1
  %92 = load ptr, ptr %memberidx51, align 8
  %93 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %4)
  %memberidx.i132 = getelementptr inbounds %Map_String_VarId_, ptr %92, i64 0, i32 1
  %94 = load i64, ptr %memberidx.i132, align 4
  %95 = urem i64 %93, %94
  %96 = load ptr, ptr %92, align 8
  %97 = getelementptr inbounds ptr, ptr %96, i64 %95
  %98 = load ptr, ptr %97, align 8
  %.not.i133 = icmp eq ptr %98, null
  br i1 %.not.i133, label %ifend54, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend27
  %memberidx1.i.i135 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %99 = phi ptr [ %109, %else.i ], [ %96, %while.entry.i.preheader ]
  %100 = phi i64 [ %110, %else.i ], [ %94, %while.entry.i.preheader ]
  %101 = phi ptr [ %114, %else.i ], [ %98, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %112, %else.i ], [ %95, %while.entry.i.preheader ]
  %102 = load ptr, ptr %101, align 8
  %memberidx.i.i134 = getelementptr inbounds %String, ptr %102, i64 0, i32 1
  %103 = load i64, ptr %memberidx.i.i134, align 4
  %104 = load i64, ptr %memberidx1.i.i135, align 4
  %.not.i.i136 = icmp eq i64 %103, %104
  br i1 %.not.i.i136, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %105 = load ptr, ptr %102, align 8
  %106 = load ptr, ptr %4, align 8
  %107 = tail call i64 @memcmp(ptr %105, ptr %106, i64 %103)
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre205 = load i64, ptr %memberidx.i132, align 4
  %.pre206 = load ptr, ptr %92, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre207.pre = load ptr, ptr %92, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre207.pre, i64 %hash.0.i
  %.pre208.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre208.pre, null
  br i1 %.not25.i, label %ifend54, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %109 = phi ptr [ %.pre206, %ifend.i.i.else.i_crit_edge ], [ %99, %while.entry.i ]
  %110 = phi i64 [ %.pre205, %ifend.i.i.else.i_crit_edge ], [ %100, %while.entry.i ]
  %111 = add nuw i64 %hash.0.i, 1
  %112 = urem i64 %111, %110
  %113 = getelementptr inbounds ptr, ptr %109, i64 %112
  %114 = load ptr, ptr %113, align 8
  %.not26.i = icmp eq ptr %114, null
  br i1 %.not26.i, label %ifend54, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre208.pre, i64 0, i32 1
  %115 = load ptr, ptr %memberidx11.i, align 8
  %phi.cmp = icmp eq ptr %115, null
  br i1 %phi.cmp, label %ifend54, label %if.entry52

if.entry30:                                       ; preds = %if.entry25
  %116 = tail call ptr @malloc(i32 69)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %116, ptr noundef nonnull align 8 dereferenceable(69) @229, i64 69, i1 false)
  %117 = tail call ptr @malloc(i32 24)
  store ptr %116, ptr %117, align 8
  %memberidx1.i.i137 = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  store i64 69, ptr %memberidx1.i.i137, align 4
  %memberidx2.i.i138 = getelementptr inbounds %String, ptr %117, i64 0, i32 2
  store i64 69, ptr %memberidx2.i.i138, align 4
  %118 = load ptr, ptr %1, align 8
  %119 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i140 = getelementptr inbounds %Compiler, ptr %119, i64 0, i32 5
  %120 = load ptr, ptr %memberidx1.i140, align 8
  %121 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %121, align 4
  %memberidx1.i.i141 = getelementptr inbounds %FloError, ptr %121, i64 0, i32 2
  store ptr %118, ptr %memberidx1.i.i141, align 8
  %memberidx2.i.i142 = getelementptr inbounds %FloError, ptr %121, i64 0, i32 1
  store ptr %117, ptr %memberidx2.i.i142, align 8
  %memberidx.i.i143 = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 1
  %122 = load i64, ptr %memberidx.i.i143, align 4
  %memberidx1.i2.i144 = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 2
  %123 = load i64, ptr %memberidx1.i2.i144, align 4
  %.not.i.i145 = icmp slt i64 %122, %123
  br i1 %.not.i.i145, label %if.entry30.TypeChecker_error.exit148_crit_edge, label %if.entry.i.i147

if.entry30.TypeChecker_error.exit148_crit_edge:   ; preds = %if.entry30
  %.pre204 = load ptr, ptr %120, align 8
  br label %TypeChecker_error.exit148

if.entry.i.i147:                                  ; preds = %if.entry30
  %124 = shl nuw i64 %123, 1
  store i64 %124, ptr %memberidx1.i2.i144, align 4
  %125 = load ptr, ptr %120, align 8
  %126 = shl i64 %123, 4
  %127 = tail call ptr @realloc(ptr %125, i64 %126)
  store ptr %127, ptr %120, align 8
  %.pre203 = load i64, ptr %memberidx.i.i143, align 4
  br label %TypeChecker_error.exit148

TypeChecker_error.exit148:                        ; preds = %if.entry30.TypeChecker_error.exit148_crit_edge, %if.entry.i.i147
  %128 = phi ptr [ %.pre204, %if.entry30.TypeChecker_error.exit148_crit_edge ], [ %127, %if.entry.i.i147 ]
  %129 = phi i64 [ %122, %if.entry30.TypeChecker_error.exit148_crit_edge ], [ %.pre203, %if.entry.i.i147 ]
  %130 = add nsw i64 %129, 1
  store i64 %130, ptr %memberidx.i.i143, align 4
  %131 = getelementptr inbounds ptr, ptr %128, i64 %129
  store ptr %121, ptr %131, align 8
  br label %common.ret

ifend32:                                          ; preds = %if.entry25
  %132 = load i64, ptr %ternary, align 4
  %133 = icmp eq i64 %132, 21
  %134 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %88)
  %135 = or i1 %134, %133
  br i1 %135, label %ifend38, label %if.entry36

if.entry36:                                       ; preds = %ifend32
  %136 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %memberidx.i149 = getelementptr inbounds %String, ptr %136, i64 0, i32 1
  %137 = load i64, ptr %memberidx.i149, align 4
  %138 = trunc i64 %137 to i32
  %139 = add i32 %138, 1
  %140 = tail call ptr @malloc(i32 %139)
  %141 = load ptr, ptr %136, align 8
  %142 = load i64, ptr %memberidx.i149, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %140, ptr align 8 %141, i64 %142, i1 false)
  %143 = getelementptr inbounds i8, ptr %140, i64 %142
  store i8 0, ptr %143, align 1
  %144 = load ptr, ptr %memberidx28, align 8
  %145 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %144)
  %memberidx.i150 = getelementptr inbounds %String, ptr %145, i64 0, i32 1
  %146 = load i64, ptr %memberidx.i150, align 4
  %147 = trunc i64 %146 to i32
  %148 = add i32 %147, 1
  %149 = tail call ptr @malloc(i32 %148)
  %150 = load ptr, ptr %145, align 8
  %151 = load i64, ptr %memberidx.i150, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %149, ptr align 8 %150, i64 %151, i1 false)
  %152 = getelementptr inbounds i8, ptr %149, i64 %151
  store i8 0, ptr %152, align 1
  %153 = alloca ptr, align 8
  %154 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %153, ptr nonnull @230, ptr %140, ptr %149)
  %155 = load ptr, ptr %153, align 8
  %156 = tail call ptr @malloc(i32 24)
  store ptr %155, ptr %156, align 8
  %memberidx1.i151 = getelementptr inbounds %String, ptr %156, i64 0, i32 1
  store i64 %154, ptr %memberidx1.i151, align 4
  %memberidx2.i152 = getelementptr inbounds %String, ptr %156, i64 0, i32 2
  store i64 %154, ptr %memberidx2.i152, align 4
  tail call void @free(ptr %140)
  tail call void @free(ptr %149)
  %157 = load ptr, ptr %1, align 8
  %158 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i154 = getelementptr inbounds %Compiler, ptr %158, i64 0, i32 5
  %159 = load ptr, ptr %memberidx1.i154, align 8
  %160 = call ptr @malloc(i32 24)
  store i64 5, ptr %160, align 4
  %memberidx1.i.i155 = getelementptr inbounds %FloError, ptr %160, i64 0, i32 2
  store ptr %157, ptr %memberidx1.i.i155, align 8
  %memberidx2.i.i156 = getelementptr inbounds %FloError, ptr %160, i64 0, i32 1
  store ptr %156, ptr %memberidx2.i.i156, align 8
  %memberidx.i.i157 = getelementptr inbounds %Array_FloError_, ptr %159, i64 0, i32 1
  %161 = load i64, ptr %memberidx.i.i157, align 4
  %memberidx1.i2.i158 = getelementptr inbounds %Array_FloError_, ptr %159, i64 0, i32 2
  %162 = load i64, ptr %memberidx1.i2.i158, align 4
  %.not.i.i159 = icmp slt i64 %161, %162
  br i1 %.not.i.i159, label %if.entry36.TypeChecker_error.exit162_crit_edge, label %if.entry.i.i161

if.entry36.TypeChecker_error.exit162_crit_edge:   ; preds = %if.entry36
  %.pre200 = load ptr, ptr %159, align 8
  br label %TypeChecker_error.exit162

if.entry.i.i161:                                  ; preds = %if.entry36
  %163 = shl nuw i64 %162, 1
  store i64 %163, ptr %memberidx1.i2.i158, align 4
  %164 = load ptr, ptr %159, align 8
  %165 = shl i64 %162, 4
  %166 = call ptr @realloc(ptr %164, i64 %165)
  store ptr %166, ptr %159, align 8
  %.pre199 = load i64, ptr %memberidx.i.i157, align 4
  br label %TypeChecker_error.exit162

TypeChecker_error.exit162:                        ; preds = %if.entry36.TypeChecker_error.exit162_crit_edge, %if.entry.i.i161
  %167 = phi ptr [ %.pre200, %if.entry36.TypeChecker_error.exit162_crit_edge ], [ %166, %if.entry.i.i161 ]
  %168 = phi i64 [ %161, %if.entry36.TypeChecker_error.exit162_crit_edge ], [ %.pre199, %if.entry.i.i161 ]
  %169 = add nsw i64 %168, 1
  store i64 %169, ptr %memberidx.i.i157, align 4
  %170 = getelementptr inbounds ptr, ptr %167, i64 %168
  store ptr %160, ptr %170, align 8
  br label %common.ret

ifend38:                                          ; preds = %ifend32
  %171 = load i64, ptr %ternary, align 4
  %172 = icmp eq i64 %171, 21
  br i1 %172, label %if.entry42, label %ifend44

if.entry42:                                       ; preds = %ifend38
  %173 = load ptr, ptr %memberidx28, align 8
  %.pr = load i64, ptr %173, align 4
  br label %ifend44

ifend44:                                          ; preds = %ifend38, %if.entry42
  %174 = phi i64 [ %171, %ifend38 ], [ %.pr, %if.entry42 ]
  %var_type.1 = phi ptr [ %ternary, %ifend38 ], [ %173, %if.entry42 ]
  %175 = icmp eq i64 %174, 10
  br i1 %175, label %if.entry47, label %ifend27

if.entry47:                                       ; preds = %ifend44
  %176 = tail call ptr @malloc(i32 38)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(38) %176, ptr noundef nonnull align 8 dereferenceable(38) @231, i64 38, i1 false)
  %177 = tail call ptr @malloc(i32 24)
  store ptr %176, ptr %177, align 8
  %memberidx1.i.i163 = getelementptr inbounds %String, ptr %177, i64 0, i32 1
  store i64 38, ptr %memberidx1.i.i163, align 4
  %memberidx2.i.i164 = getelementptr inbounds %String, ptr %177, i64 0, i32 2
  store i64 38, ptr %memberidx2.i.i164, align 4
  %178 = load ptr, ptr %1, align 8
  %179 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i166 = getelementptr inbounds %Compiler, ptr %179, i64 0, i32 5
  %180 = load ptr, ptr %memberidx1.i166, align 8
  %181 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %181, align 4
  %memberidx1.i.i167 = getelementptr inbounds %FloError, ptr %181, i64 0, i32 2
  store ptr %178, ptr %memberidx1.i.i167, align 8
  %memberidx2.i.i168 = getelementptr inbounds %FloError, ptr %181, i64 0, i32 1
  store ptr %177, ptr %memberidx2.i.i168, align 8
  %memberidx.i.i169 = getelementptr inbounds %Array_FloError_, ptr %180, i64 0, i32 1
  %182 = load i64, ptr %memberidx.i.i169, align 4
  %memberidx1.i2.i170 = getelementptr inbounds %Array_FloError_, ptr %180, i64 0, i32 2
  %183 = load i64, ptr %memberidx1.i2.i170, align 4
  %.not.i.i171 = icmp slt i64 %182, %183
  br i1 %.not.i.i171, label %if.entry47.TypeChecker_error.exit174_crit_edge, label %if.entry.i.i173

if.entry47.TypeChecker_error.exit174_crit_edge:   ; preds = %if.entry47
  %.pre202 = load ptr, ptr %180, align 8
  br label %TypeChecker_error.exit174

if.entry.i.i173:                                  ; preds = %if.entry47
  %184 = shl nuw i64 %183, 1
  store i64 %184, ptr %memberidx1.i2.i170, align 4
  %185 = load ptr, ptr %180, align 8
  %186 = shl i64 %183, 4
  %187 = tail call ptr @realloc(ptr %185, i64 %186)
  store ptr %187, ptr %180, align 8
  %.pre201 = load i64, ptr %memberidx.i.i169, align 4
  br label %TypeChecker_error.exit174

TypeChecker_error.exit174:                        ; preds = %if.entry47.TypeChecker_error.exit174_crit_edge, %if.entry.i.i173
  %188 = phi ptr [ %.pre202, %if.entry47.TypeChecker_error.exit174_crit_edge ], [ %187, %if.entry.i.i173 ]
  %189 = phi i64 [ %182, %if.entry47.TypeChecker_error.exit174_crit_edge ], [ %.pre201, %if.entry.i.i173 ]
  %190 = add nsw i64 %189, 1
  store i64 %190, ptr %memberidx.i.i169, align 4
  %191 = getelementptr inbounds ptr, ptr %188, i64 %189
  store ptr %181, ptr %191, align 8
  br label %common.ret

if.entry52:                                       ; preds = %if.entry7.i
  %memberidx.i175 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %192 = load i64, ptr %memberidx.i175, align 4
  %193 = trunc i64 %192 to i32
  %194 = add i32 %193, 1
  %195 = tail call ptr @malloc(i32 %194)
  %196 = load ptr, ptr %4, align 8
  %197 = load i64, ptr %memberidx.i175, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %195, ptr align 8 %196, i64 %197, i1 false)
  %198 = getelementptr inbounds i8, ptr %195, i64 %197
  store i8 0, ptr %198, align 1
  %199 = alloca ptr, align 8
  %200 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %199, ptr nonnull @232, ptr %195)
  %201 = load ptr, ptr %199, align 8
  %202 = tail call ptr @malloc(i32 24)
  store ptr %201, ptr %202, align 8
  %memberidx1.i176 = getelementptr inbounds %String, ptr %202, i64 0, i32 1
  store i64 %200, ptr %memberidx1.i176, align 4
  %memberidx2.i177 = getelementptr inbounds %String, ptr %202, i64 0, i32 2
  store i64 %200, ptr %memberidx2.i177, align 4
  tail call void @free(ptr %195)
  %203 = load ptr, ptr %memberidx, align 8
  %memberidx56 = getelementptr inbounds %Token, ptr %203, i64 0, i32 1
  %204 = load ptr, ptr %memberidx56, align 8
  %205 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i179 = getelementptr inbounds %Compiler, ptr %205, i64 0, i32 5
  %206 = load ptr, ptr %memberidx1.i179, align 8
  %207 = call ptr @malloc(i32 24)
  store i64 1, ptr %207, align 4
  %memberidx1.i.i180 = getelementptr inbounds %FloError, ptr %207, i64 0, i32 2
  store ptr %204, ptr %memberidx1.i.i180, align 8
  %memberidx2.i.i181 = getelementptr inbounds %FloError, ptr %207, i64 0, i32 1
  store ptr %202, ptr %memberidx2.i.i181, align 8
  %memberidx.i.i182 = getelementptr inbounds %Array_FloError_, ptr %206, i64 0, i32 1
  %208 = load i64, ptr %memberidx.i.i182, align 4
  %memberidx1.i2.i183 = getelementptr inbounds %Array_FloError_, ptr %206, i64 0, i32 2
  %209 = load i64, ptr %memberidx1.i2.i183, align 4
  %.not.i.i184 = icmp slt i64 %208, %209
  br i1 %.not.i.i184, label %if.entry52.TypeChecker_error.exit187_crit_edge, label %if.entry.i.i186

if.entry52.TypeChecker_error.exit187_crit_edge:   ; preds = %if.entry52
  %.pre210 = load ptr, ptr %206, align 8
  br label %TypeChecker_error.exit187

if.entry.i.i186:                                  ; preds = %if.entry52
  %210 = shl nuw i64 %209, 1
  store i64 %210, ptr %memberidx1.i2.i183, align 4
  %211 = load ptr, ptr %206, align 8
  %212 = shl i64 %209, 4
  %213 = call ptr @realloc(ptr %211, i64 %212)
  store ptr %213, ptr %206, align 8
  %.pre209 = load i64, ptr %memberidx.i.i182, align 4
  br label %TypeChecker_error.exit187

TypeChecker_error.exit187:                        ; preds = %if.entry52.TypeChecker_error.exit187_crit_edge, %if.entry.i.i186
  %214 = phi ptr [ %.pre210, %if.entry52.TypeChecker_error.exit187_crit_edge ], [ %213, %if.entry.i.i186 ]
  %215 = phi i64 [ %208, %if.entry52.TypeChecker_error.exit187_crit_edge ], [ %.pre209, %if.entry.i.i186 ]
  %216 = add nsw i64 %215, 1
  store i64 %216, ptr %memberidx.i.i182, align 4
  %217 = getelementptr inbounds ptr, ptr %214, i64 %215
  store ptr %207, ptr %217, align 8
  br label %common.ret

ifend54:                                          ; preds = %else.i, %ifend27, %while.end.i, %if.entry7.i
  %218 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %4, ptr %ternary21216219, ptr nonnull %var_type.0)
  %219 = tail call ptr @malloc(i32 25)
  %memberidx57 = getelementptr inbounds %Var, ptr %218, i64 0, i32 1
  %220 = load ptr, ptr %memberidx57, align 8
  store i64 1, ptr %219, align 4
  %memberidx.i188 = getelementptr inbounds %VarDeclaration, ptr %219, i64 0, i32 2
  store ptr %220, ptr %memberidx.i188, align 8
  %memberidx1.i189 = getelementptr inbounds %VarDeclaration, ptr %219, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i189, align 8
  %memberidx2.i190 = getelementptr inbounds %VarDeclaration, ptr %219, i64 0, i32 3
  store i1 false, ptr %memberidx2.i190, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1.i, align 8
  %7 = load ptr, ptr %5, align 8
  %8 = load i64, ptr %6, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 7
  %12 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %17 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %4)
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %TypeChecker_is_constant_in_scope.exit, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %18 = load i64, ptr %17, align 4
  %19 = icmp eq i64 %18, 2
  br label %TypeChecker_is_constant_in_scope.exit

TypeChecker_is_constant_in_scope.exit:            ; preds = %2, %if.entry.i
  %is_constant.0.i = phi i1 [ %19, %if.entry.i ], [ false, %2 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2, align 8
  %21 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_String_VarId_, ptr %20, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i, align 4
  %23 = urem i64 %21, %22
  %24 = load ptr, ptr %20, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  %.not.i83 = icmp eq ptr %26, null
  br i1 %.not.i83, label %Map_String_VarId____getitem__.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %TypeChecker_is_constant_in_scope.exit
  %memberidx1.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %27 = phi ptr [ %37, %else.i ], [ %24, %while.entry.i.preheader ]
  %28 = phi i64 [ %38, %else.i ], [ %22, %while.entry.i.preheader ]
  %29 = phi ptr [ %42, %else.i ], [ %26, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %40, %else.i ], [ %23, %while.entry.i.preheader ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %32 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %31, %32
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %33 = load ptr, ptr %30, align 8
  %34 = load ptr, ptr %4, align 8
  %35 = tail call i64 @memcmp(ptr %33, ptr %34, i64 %31)
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre155 = load ptr, ptr %20, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre156.pre = load ptr, ptr %20, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre156.pre, i64 %hash.0.i
  %.pre157.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre157.pre, null
  br i1 %.not25.i, label %Map_String_VarId____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %37 = phi ptr [ %.pre155, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %38 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %39 = add nuw i64 %hash.0.i, 1
  %40 = urem i64 %39, %38
  %41 = getelementptr inbounds ptr, ptr %37, i64 %40
  %42 = load ptr, ptr %41, align 8
  %.not26.i = icmp eq ptr %42, null
  br i1 %.not26.i, label %Map_String_VarId____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre157.pre, i64 0, i32 1
  %43 = load ptr, ptr %memberidx11.i, align 8
  %phi.cmp = icmp ne ptr %43, null
  br label %Map_String_VarId____getitem__.exit

Map_String_VarId____getitem__.exit:               ; preds = %else.i, %TypeChecker_is_constant_in_scope.exit, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry7.i ], [ false, %while.end.i ], [ false, %TypeChecker_is_constant_in_scope.exit ], [ false, %else.i ]
  %44 = or i1 %is_constant.0.i, %common.ret.op.i
  br i1 %44, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend9, %end, %ifend40, %TypeChecker_error.exit148, %TypeChecker_error.exit136, %TypeChecker_error.exit122, %TypeChecker_error.exit109, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit109 ], [ null, %TypeChecker_error.exit122 ], [ null, %TypeChecker_error.exit136 ], [ null, %TypeChecker_error.exit148 ], [ %183, %ifend40 ], [ null, %end ], [ null, %ifend9 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %Map_String_VarId____getitem__.exit
  %memberidx.i84 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i84, align 4
  %46 = trunc i64 %45 to i32
  %47 = add i32 %46, 1
  %48 = tail call ptr @malloc(i32 %47)
  %49 = load ptr, ptr %4, align 8
  %50 = load i64, ptr %memberidx.i84, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %48, ptr align 8 %49, i64 %50, i1 false)
  %51 = getelementptr inbounds i8, ptr %48, i64 %50
  store i8 0, ptr %51, align 1
  %52 = alloca ptr, align 8
  %53 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %52, ptr nonnull @109, ptr %48)
  %54 = load ptr, ptr %52, align 8
  %55 = tail call ptr @malloc(i32 24)
  store ptr %54, ptr %55, align 8
  %memberidx1.i85 = getelementptr inbounds %String, ptr %55, i64 0, i32 1
  store i64 %53, ptr %memberidx1.i85, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %55, i64 0, i32 2
  store i64 %53, ptr %memberidx2.i, align 4
  tail call void @free(ptr %48)
  %56 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %56, i64 0, i32 1
  %57 = load ptr, ptr %memberidx4, align 8
  %memberidx.i86 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %58 = load ptr, ptr %memberidx.i86, align 8
  %memberidx1.i87 = getelementptr inbounds %Compiler, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx1.i87, align 8
  %60 = call ptr @malloc(i32 24)
  store i64 1, ptr %60, align 4
  %memberidx1.i.i88 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 2
  store ptr %57, ptr %memberidx1.i.i88, align 8
  %memberidx2.i.i89 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 1
  store ptr %55, ptr %memberidx2.i.i89, align 8
  %memberidx.i.i90 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %61 = load i64, ptr %memberidx.i.i90, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %62 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i91 = icmp slt i64 %61, %62
  br i1 %.not.i.i91, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre167 = load ptr, ptr %59, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %63 = shl nuw i64 %62, 1
  store i64 %63, ptr %memberidx1.i2.i, align 4
  %64 = load ptr, ptr %59, align 8
  %65 = shl i64 %62, 4
  %66 = call ptr @realloc(ptr %64, i64 %65)
  store ptr %66, ptr %59, align 8
  %.pre166 = load i64, ptr %memberidx.i.i90, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %67 = phi ptr [ %.pre167, %if.entry.TypeChecker_error.exit_crit_edge ], [ %66, %if.entry.i.i ]
  %68 = phi i64 [ %61, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre166, %if.entry.i.i ]
  %69 = add nsw i64 %68, 1
  store i64 %69, ptr %memberidx.i.i90, align 4
  %70 = getelementptr inbounds ptr, ptr %67, i64 %68
  store ptr %60, ptr %70, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_VarId____getitem__.exit
  %memberidx5 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 3
  %71 = load ptr, ptr %memberidx5, align 8
  %.not = icmp eq ptr %71, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %72 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %71)
  br label %end

false_block:                                      ; preds = %ifend
  %73 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %73, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %72, %true_block ], [ %73, %false_block ]
  %memberidx.i92 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %74 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %Compiler, ptr %74, i64 0, i32 5
  %75 = load ptr, ptr %memberidx1.i93, align 8
  %memberidx2.i94 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 1
  %76 = load i64, ptr %memberidx2.i94, align 4
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %common.ret, label %ifend9

ifend9:                                           ; preds = %end
  %memberidx10 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 4
  %78 = load ptr, ptr %memberidx10, align 8
  %79 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %ternary, ptr %78)
  %80 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i96 = getelementptr inbounds %Compiler, ptr %80, i64 0, i32 5
  %81 = load ptr, ptr %memberidx1.i96, align 8
  %memberidx2.i97 = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 1
  %82 = load i64, ptr %memberidx2.i97, align 4
  %83 = icmp sgt i64 %82, 0
  br i1 %83, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend9
  %memberidx14 = getelementptr inbounds %Expression, ptr %79, i64 0, i32 1
  %84 = load i1, ptr %memberidx14, align 1
  br i1 %84, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %85 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %85, ptr noundef nonnull align 8 dereferenceable(48) @233, i64 48, i1 false)
  %86 = tail call ptr @malloc(i32 24)
  store ptr %85, ptr %86, align 8
  %memberidx1.i.i98 = getelementptr inbounds %String, ptr %86, i64 0, i32 1
  store i64 48, ptr %memberidx1.i.i98, align 4
  %memberidx2.i.i99 = getelementptr inbounds %String, ptr %86, i64 0, i32 2
  store i64 48, ptr %memberidx2.i.i99, align 4
  %87 = load ptr, ptr %memberidx10, align 8
  %88 = load ptr, ptr %87, align 8
  %89 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i101 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 5
  %90 = load ptr, ptr %memberidx1.i101, align 8
  %91 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %91, align 4
  %memberidx1.i.i102 = getelementptr inbounds %FloError, ptr %91, i64 0, i32 2
  store ptr %88, ptr %memberidx1.i.i102, align 8
  %memberidx2.i.i103 = getelementptr inbounds %FloError, ptr %91, i64 0, i32 1
  store ptr %86, ptr %memberidx2.i.i103, align 8
  %memberidx.i.i104 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 1
  %92 = load i64, ptr %memberidx.i.i104, align 4
  %memberidx1.i2.i105 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 2
  %93 = load i64, ptr %memberidx1.i2.i105, align 4
  %.not.i.i106 = icmp slt i64 %92, %93
  br i1 %.not.i.i106, label %if.entry15.TypeChecker_error.exit109_crit_edge, label %if.entry.i.i108

if.entry15.TypeChecker_error.exit109_crit_edge:   ; preds = %if.entry15
  %.pre159 = load ptr, ptr %90, align 8
  br label %TypeChecker_error.exit109

if.entry.i.i108:                                  ; preds = %if.entry15
  %94 = shl nuw i64 %93, 1
  store i64 %94, ptr %memberidx1.i2.i105, align 4
  %95 = load ptr, ptr %90, align 8
  %96 = shl i64 %93, 4
  %97 = tail call ptr @realloc(ptr %95, i64 %96)
  store ptr %97, ptr %90, align 8
  %.pre158 = load i64, ptr %memberidx.i.i104, align 4
  br label %TypeChecker_error.exit109

TypeChecker_error.exit109:                        ; preds = %if.entry15.TypeChecker_error.exit109_crit_edge, %if.entry.i.i108
  %98 = phi ptr [ %.pre159, %if.entry15.TypeChecker_error.exit109_crit_edge ], [ %97, %if.entry.i.i108 ]
  %99 = phi i64 [ %92, %if.entry15.TypeChecker_error.exit109_crit_edge ], [ %.pre158, %if.entry.i.i108 ]
  %100 = add nsw i64 %99, 1
  store i64 %100, ptr %memberidx.i.i104, align 4
  %101 = getelementptr inbounds ptr, ptr %98, i64 %99
  store ptr %91, ptr %101, align 8
  br label %common.ret

ifend17:                                          ; preds = %ifend13
  %memberidx.i110 = getelementptr inbounds %Expression, ptr %79, i64 0, i32 2
  %102 = load i64, ptr %memberidx.i110, align 4
  %103 = icmp eq i64 %102, 5
  %104 = load i64, ptr %ternary, align 4
  %105 = icmp eq i64 %104, 21
  %106 = and i1 %103, %105
  br i1 %106, label %if.entry21, label %ifend23

if.entry21:                                       ; preds = %ifend17
  %107 = tail call ptr @malloc(i32 69)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %107, ptr noundef nonnull align 8 dereferenceable(69) @229, i64 69, i1 false)
  %108 = tail call ptr @malloc(i32 24)
  store ptr %107, ptr %108, align 8
  %memberidx1.i.i111 = getelementptr inbounds %String, ptr %108, i64 0, i32 1
  store i64 69, ptr %memberidx1.i.i111, align 4
  %memberidx2.i.i112 = getelementptr inbounds %String, ptr %108, i64 0, i32 2
  store i64 69, ptr %memberidx2.i.i112, align 4
  %109 = load ptr, ptr %1, align 8
  %110 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i114 = getelementptr inbounds %Compiler, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx1.i114, align 8
  %112 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %112, align 4
  %memberidx1.i.i115 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 2
  store ptr %109, ptr %memberidx1.i.i115, align 8
  %memberidx2.i.i116 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 1
  store ptr %108, ptr %memberidx2.i.i116, align 8
  %memberidx.i.i117 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 1
  %113 = load i64, ptr %memberidx.i.i117, align 4
  %memberidx1.i2.i118 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 2
  %114 = load i64, ptr %memberidx1.i2.i118, align 4
  %.not.i.i119 = icmp slt i64 %113, %114
  br i1 %.not.i.i119, label %if.entry21.TypeChecker_error.exit122_crit_edge, label %if.entry.i.i121

if.entry21.TypeChecker_error.exit122_crit_edge:   ; preds = %if.entry21
  %.pre165 = load ptr, ptr %111, align 8
  br label %TypeChecker_error.exit122

if.entry.i.i121:                                  ; preds = %if.entry21
  %115 = shl nuw i64 %114, 1
  store i64 %115, ptr %memberidx1.i2.i118, align 4
  %116 = load ptr, ptr %111, align 8
  %117 = shl i64 %114, 4
  %118 = tail call ptr @realloc(ptr %116, i64 %117)
  store ptr %118, ptr %111, align 8
  %.pre164 = load i64, ptr %memberidx.i.i117, align 4
  br label %TypeChecker_error.exit122

TypeChecker_error.exit122:                        ; preds = %if.entry21.TypeChecker_error.exit122_crit_edge, %if.entry.i.i121
  %119 = phi ptr [ %.pre165, %if.entry21.TypeChecker_error.exit122_crit_edge ], [ %118, %if.entry.i.i121 ]
  %120 = phi i64 [ %113, %if.entry21.TypeChecker_error.exit122_crit_edge ], [ %.pre164, %if.entry.i.i121 ]
  %121 = add nsw i64 %120, 1
  store i64 %121, ptr %memberidx.i.i117, align 4
  %122 = getelementptr inbounds ptr, ptr %119, i64 %120
  store ptr %112, ptr %122, align 8
  br label %common.ret

ifend23:                                          ; preds = %ifend17
  %memberidx26 = getelementptr inbounds %Expression, ptr %79, i64 0, i32 3
  %123 = load ptr, ptr %memberidx26, align 8
  %124 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr %123)
  %125 = or i1 %105, %124
  br i1 %125, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend23
  %126 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %memberidx.i123 = getelementptr inbounds %String, ptr %126, i64 0, i32 1
  %127 = load i64, ptr %memberidx.i123, align 4
  %128 = trunc i64 %127 to i32
  %129 = add i32 %128, 1
  %130 = tail call ptr @malloc(i32 %129)
  %131 = load ptr, ptr %126, align 8
  %132 = load i64, ptr %memberidx.i123, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %130, ptr align 8 %131, i64 %132, i1 false)
  %133 = getelementptr inbounds i8, ptr %130, i64 %132
  store i8 0, ptr %133, align 1
  %134 = load ptr, ptr %memberidx26, align 8
  %135 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %134)
  %memberidx.i124 = getelementptr inbounds %String, ptr %135, i64 0, i32 1
  %136 = load i64, ptr %memberidx.i124, align 4
  %137 = trunc i64 %136 to i32
  %138 = add i32 %137, 1
  %139 = tail call ptr @malloc(i32 %138)
  %140 = load ptr, ptr %135, align 8
  %141 = load i64, ptr %memberidx.i124, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %139, ptr align 8 %140, i64 %141, i1 false)
  %142 = getelementptr inbounds i8, ptr %139, i64 %141
  store i8 0, ptr %142, align 1
  %143 = alloca ptr, align 8
  %144 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %143, ptr nonnull @234, ptr %130, ptr %139)
  %145 = load ptr, ptr %143, align 8
  %146 = tail call ptr @malloc(i32 24)
  store ptr %145, ptr %146, align 8
  %memberidx1.i125 = getelementptr inbounds %String, ptr %146, i64 0, i32 1
  store i64 %144, ptr %memberidx1.i125, align 4
  %memberidx2.i126 = getelementptr inbounds %String, ptr %146, i64 0, i32 2
  store i64 %144, ptr %memberidx2.i126, align 4
  tail call void @free(ptr %130)
  tail call void @free(ptr %139)
  %147 = load ptr, ptr %1, align 8
  %148 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i128 = getelementptr inbounds %Compiler, ptr %148, i64 0, i32 5
  %149 = load ptr, ptr %memberidx1.i128, align 8
  %150 = call ptr @malloc(i32 24)
  store i64 5, ptr %150, align 4
  %memberidx1.i.i129 = getelementptr inbounds %FloError, ptr %150, i64 0, i32 2
  store ptr %147, ptr %memberidx1.i.i129, align 8
  %memberidx2.i.i130 = getelementptr inbounds %FloError, ptr %150, i64 0, i32 1
  store ptr %146, ptr %memberidx2.i.i130, align 8
  %memberidx.i.i131 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 1
  %151 = load i64, ptr %memberidx.i.i131, align 4
  %memberidx1.i2.i132 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 2
  %152 = load i64, ptr %memberidx1.i2.i132, align 4
  %.not.i.i133 = icmp slt i64 %151, %152
  br i1 %.not.i.i133, label %if.entry27.TypeChecker_error.exit136_crit_edge, label %if.entry.i.i135

if.entry27.TypeChecker_error.exit136_crit_edge:   ; preds = %if.entry27
  %.pre161 = load ptr, ptr %149, align 8
  br label %TypeChecker_error.exit136

if.entry.i.i135:                                  ; preds = %if.entry27
  %153 = shl nuw i64 %152, 1
  store i64 %153, ptr %memberidx1.i2.i132, align 4
  %154 = load ptr, ptr %149, align 8
  %155 = shl i64 %152, 4
  %156 = call ptr @realloc(ptr %154, i64 %155)
  store ptr %156, ptr %149, align 8
  %.pre160 = load i64, ptr %memberidx.i.i131, align 4
  br label %TypeChecker_error.exit136

TypeChecker_error.exit136:                        ; preds = %if.entry27.TypeChecker_error.exit136_crit_edge, %if.entry.i.i135
  %157 = phi ptr [ %.pre161, %if.entry27.TypeChecker_error.exit136_crit_edge ], [ %156, %if.entry.i.i135 ]
  %158 = phi i64 [ %151, %if.entry27.TypeChecker_error.exit136_crit_edge ], [ %.pre160, %if.entry.i.i135 ]
  %159 = add nsw i64 %158, 1
  store i64 %159, ptr %memberidx.i.i131, align 4
  %160 = getelementptr inbounds ptr, ptr %157, i64 %158
  store ptr %150, ptr %160, align 8
  br label %common.ret

ifend29:                                          ; preds = %ifend23
  %161 = load i64, ptr %ternary, align 4
  %162 = icmp eq i64 %161, 21
  br i1 %162, label %if.entry33, label %ifend35

if.entry33:                                       ; preds = %ifend29
  %163 = load ptr, ptr %memberidx26, align 8
  %.pr = load i64, ptr %163, align 4
  br label %ifend35

ifend35:                                          ; preds = %ifend29, %if.entry33
  %164 = phi i64 [ %161, %ifend29 ], [ %.pr, %if.entry33 ]
  %const_type.0 = phi ptr [ %ternary, %ifend29 ], [ %163, %if.entry33 ]
  %165 = icmp eq i64 %164, 10
  br i1 %165, label %if.entry38, label %ifend40

if.entry38:                                       ; preds = %ifend35
  %166 = tail call ptr @malloc(i32 35)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %166, ptr noundef nonnull align 8 dereferenceable(35) @235, i64 35, i1 false)
  %167 = tail call ptr @malloc(i32 24)
  store ptr %166, ptr %167, align 8
  %memberidx1.i.i137 = getelementptr inbounds %String, ptr %167, i64 0, i32 1
  store i64 35, ptr %memberidx1.i.i137, align 4
  %memberidx2.i.i138 = getelementptr inbounds %String, ptr %167, i64 0, i32 2
  store i64 35, ptr %memberidx2.i.i138, align 4
  %168 = load ptr, ptr %1, align 8
  %169 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i140 = getelementptr inbounds %Compiler, ptr %169, i64 0, i32 5
  %170 = load ptr, ptr %memberidx1.i140, align 8
  %171 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %171, align 4
  %memberidx1.i.i141 = getelementptr inbounds %FloError, ptr %171, i64 0, i32 2
  store ptr %168, ptr %memberidx1.i.i141, align 8
  %memberidx2.i.i142 = getelementptr inbounds %FloError, ptr %171, i64 0, i32 1
  store ptr %167, ptr %memberidx2.i.i142, align 8
  %memberidx.i.i143 = getelementptr inbounds %Array_FloError_, ptr %170, i64 0, i32 1
  %172 = load i64, ptr %memberidx.i.i143, align 4
  %memberidx1.i2.i144 = getelementptr inbounds %Array_FloError_, ptr %170, i64 0, i32 2
  %173 = load i64, ptr %memberidx1.i2.i144, align 4
  %.not.i.i145 = icmp slt i64 %172, %173
  br i1 %.not.i.i145, label %if.entry38.TypeChecker_error.exit148_crit_edge, label %if.entry.i.i147

if.entry38.TypeChecker_error.exit148_crit_edge:   ; preds = %if.entry38
  %.pre163 = load ptr, ptr %170, align 8
  br label %TypeChecker_error.exit148

if.entry.i.i147:                                  ; preds = %if.entry38
  %174 = shl nuw i64 %173, 1
  store i64 %174, ptr %memberidx1.i2.i144, align 4
  %175 = load ptr, ptr %170, align 8
  %176 = shl i64 %173, 4
  %177 = tail call ptr @realloc(ptr %175, i64 %176)
  store ptr %177, ptr %170, align 8
  %.pre162 = load i64, ptr %memberidx.i.i143, align 4
  br label %TypeChecker_error.exit148

TypeChecker_error.exit148:                        ; preds = %if.entry38.TypeChecker_error.exit148_crit_edge, %if.entry.i.i147
  %178 = phi ptr [ %.pre163, %if.entry38.TypeChecker_error.exit148_crit_edge ], [ %177, %if.entry.i.i147 ]
  %179 = phi i64 [ %172, %if.entry38.TypeChecker_error.exit148_crit_edge ], [ %.pre162, %if.entry.i.i147 ]
  %180 = add nsw i64 %179, 1
  store i64 %180, ptr %memberidx.i.i143, align 4
  %181 = getelementptr inbounds ptr, ptr %178, i64 %179
  store ptr %171, ptr %181, align 8
  br label %common.ret

ifend40:                                          ; preds = %ifend35
  %182 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr %4, ptr nonnull %79, ptr nonnull %const_type.0)
  %183 = tail call ptr @malloc(i32 25)
  %memberidx42 = getelementptr inbounds %Const, ptr %182, i64 0, i32 1
  %184 = load ptr, ptr %memberidx42, align 8
  store i64 2, ptr %183, align 4
  %memberidx.i149 = getelementptr inbounds %ConstDeclaration, ptr %183, i64 0, i32 2
  store ptr %184, ptr %memberidx.i149, align 8
  %memberidx1.i150 = getelementptr inbounds %ConstDeclaration, ptr %183, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i150, align 8
  %memberidx2.i151 = getelementptr inbounds %ConstDeclaration, ptr %183, i64 0, i32 3
  store i1 false, ptr %memberidx2.i151, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1.i, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %memberidx1.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend5, %2
  %current_scope.0.in = phi ptr [ %13, %2 ], [ %81, %ifend5 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 1
  %14 = load ptr, ptr %memberidx, align 8
  %15 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_String_VarId_, ptr %14, i64 0, i32 1
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = urem i64 %15, %16
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %.not.i = icmp eq ptr %20, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %while.entry, %else.i
  %21 = phi ptr [ %31, %else.i ], [ %18, %while.entry ]
  %22 = phi i64 [ %32, %else.i ], [ %16, %while.entry ]
  %23 = phi ptr [ %36, %else.i ], [ %20, %while.entry ]
  %hash.0.i = phi i64 [ %34, %else.i ], [ %17, %while.entry ]
  %24 = load ptr, ptr %23, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx.i.i, align 4
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %25, %26
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %27 = load ptr, ptr %24, align 8
  %28 = load ptr, ptr %1, align 8
  %29 = tail call i64 @memcmp(ptr %27, ptr %28, i64 %25)
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre133 = load ptr, ptr %14, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre134.pre = load ptr, ptr %14, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre134.pre, i64 %hash.0.i
  %.pre135.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre135.pre, null
  br i1 %.not25.i, label %if.entry, label %Map_String_VarId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %31 = phi ptr [ %.pre133, %ifend.i.i.else.i_crit_edge ], [ %21, %while.entry.i ]
  %32 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %22, %while.entry.i ]
  %33 = add nuw i64 %hash.0.i, 1
  %34 = urem i64 %33, %32
  %35 = getelementptr inbounds ptr, ptr %31, i64 %34
  %36 = load ptr, ptr %35, align 8
  %.not26.i = icmp eq ptr %36, null
  br i1 %.not26.i, label %if.entry, label %while.entry.i

Map_String_VarId____getitem__.exit:               ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre135.pre, i64 0, i32 1
  %37 = load ptr, ptr %memberidx11.i, align 8
  %38 = icmp eq ptr %37, null
  br i1 %38, label %if.entry, label %ifend12

while.end:                                        ; preds = %ifend
  %39 = icmp eq ptr %value.1, null
  %40 = load ptr, ptr %memberidx1.i, align 8
  %41 = load i64, ptr %40, align 4
  %42 = icmp ne i64 %41, 0
  %43 = and i1 %39, %42
  br i1 %43, label %if.entry10, label %ifend12

if.entry:                                         ; preds = %else.i, %while.entry, %while.end.i, %Map_String_VarId____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 3
  %44 = load ptr, ptr %memberidx1, align 8
  %45 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %1)
  %memberidx.i74 = getelementptr inbounds %Map_String_VarId_, ptr %44, i64 0, i32 1
  %46 = load i64, ptr %memberidx.i74, align 4
  %47 = urem i64 %45, %46
  %48 = load ptr, ptr %44, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %.not.i75 = icmp eq ptr %50, null
  br i1 %.not.i75, label %ifend, label %while.entry.i80

while.entry.i80:                                  ; preds = %if.entry, %else.i88
  %51 = phi ptr [ %61, %else.i88 ], [ %48, %if.entry ]
  %52 = phi i64 [ %62, %else.i88 ], [ %46, %if.entry ]
  %53 = phi ptr [ %66, %else.i88 ], [ %50, %if.entry ]
  %hash.0.i76 = phi i64 [ %64, %else.i88 ], [ %47, %if.entry ]
  %54 = load ptr, ptr %53, align 8
  %memberidx.i.i77 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i.i77, align 4
  %56 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i79 = icmp eq i64 %55, %56
  br i1 %.not.i.i79, label %ifend.i.i81, label %else.i88

ifend.i.i81:                                      ; preds = %while.entry.i80
  %57 = load ptr, ptr %54, align 8
  %58 = load ptr, ptr %1, align 8
  %59 = tail call i64 @memcmp(ptr %57, ptr %58, i64 %55)
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %while.end.i86, label %ifend.i.i81.else.i88_crit_edge

ifend.i.i81.else.i88_crit_edge:                   ; preds = %ifend.i.i81
  %.pre136 = load i64, ptr %memberidx.i74, align 4
  %.pre137 = load ptr, ptr %44, align 8
  br label %else.i88

while.end.i86:                                    ; preds = %ifend.i.i81
  %.pre138.pre = load ptr, ptr %44, align 8
  %.phi.trans.insert139.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre138.pre, i64 %hash.0.i76
  %.pre140.pre = load ptr, ptr %.phi.trans.insert139.phi.trans.insert, align 8
  %.not25.i85 = icmp eq ptr %.pre140.pre, null
  br i1 %.not25.i85, label %ifend, label %if.entry7.i91

else.i88:                                         ; preds = %ifend.i.i81.else.i88_crit_edge, %while.entry.i80
  %61 = phi ptr [ %.pre137, %ifend.i.i81.else.i88_crit_edge ], [ %51, %while.entry.i80 ]
  %62 = phi i64 [ %.pre136, %ifend.i.i81.else.i88_crit_edge ], [ %52, %while.entry.i80 ]
  %63 = add nuw i64 %hash.0.i76, 1
  %64 = urem i64 %63, %62
  %65 = getelementptr inbounds ptr, ptr %61, i64 %64
  %66 = load ptr, ptr %65, align 8
  %.not26.i87 = icmp eq ptr %66, null
  br i1 %.not26.i87, label %ifend, label %while.entry.i80

if.entry7.i91:                                    ; preds = %while.end.i86
  %memberidx11.i90 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre140.pre, i64 0, i32 1
  %67 = load ptr, ptr %memberidx11.i90, align 8
  br label %ifend

ifend:                                            ; preds = %else.i88, %if.entry, %if.entry7.i91, %while.end.i86
  %value.1 = phi ptr [ %67, %if.entry7.i91 ], [ null, %while.end.i86 ], [ null, %if.entry ], [ null, %else.i88 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %68 = load ptr, ptr %memberidx2, align 8
  %69 = icmp eq ptr %68, null
  %70 = icmp ne ptr %value.1, null
  %71 = or i1 %70, %69
  br i1 %71, label %while.end, label %ifend5

ifend5:                                           ; preds = %ifend
  %72 = load ptr, ptr %0, align 8
  %73 = load ptr, ptr %72, align 8
  %74 = load i64, ptr %68, align 4
  %75 = load ptr, ptr %73, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %74
  %77 = load ptr, ptr %76, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %77, i64 0, i32 7
  %78 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %68, i64 0, i32 1
  %79 = load i64, ptr %memberidx3.i, align 4
  %80 = load ptr, ptr %78, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %79
  br label %while.entry

if.entry10:                                       ; preds = %while.end
  %82 = load ptr, ptr %0, align 8
  %83 = load ptr, ptr %82, align 8
  %84 = load ptr, ptr %83, align 8
  %85 = load ptr, ptr %84, align 8
  %memberidx17 = getelementptr inbounds %Module, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx17, align 8
  store ptr %86, ptr %memberidx1.i, align 8
  %87 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %1)
  store ptr %40, ptr %memberidx1.i, align 8
  %.not = icmp eq ptr %87, null
  br i1 %.not, label %ifend12, label %if.entry19

ifend12:                                          ; preds = %Map_String_VarId____getitem__.exit, %if.entry36, %ifend34, %if.entry10, %while.end
  %value.2 = phi ptr [ %87, %if.entry36 ], [ %87, %ifend34 ], [ null, %if.entry10 ], [ %value.1, %while.end ], [ %37, %Map_String_VarId____getitem__.exit ]
  ret ptr %value.2

if.entry19:                                       ; preds = %if.entry10
  %88 = load i64, ptr %87, align 4
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %if.entry19
  %90 = load ptr, ptr %0, align 8
  %91 = load i64, ptr %40, align 4
  %92 = load ptr, ptr %90, align 8
  %93 = load ptr, ptr %92, align 8
  %94 = getelementptr inbounds ptr, ptr %93, i64 %91
  %95 = load ptr, ptr %94, align 8
  %memberidx1.i.i97 = getelementptr inbounds %Module, ptr %95, i64 0, i32 5
  %96 = load ptr, ptr %memberidx1.i.i97, align 8
  %97 = load i64, ptr %96, align 4
  %98 = getelementptr inbounds ptr, ptr %93, i64 %97
  %99 = load ptr, ptr %98, align 8
  %memberidx2.i.i.i98 = getelementptr inbounds %Module, ptr %99, i64 0, i32 7
  %100 = load ptr, ptr %memberidx2.i.i.i98, align 8
  %memberidx3.i.i.i99 = getelementptr inbounds %ScopeId, ptr %96, i64 0, i32 1
  %101 = load i64, ptr %memberidx3.i.i.i99, align 4
  %102 = load ptr, ptr %100, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8
  %memberidx.i100 = getelementptr inbounds %Scope, ptr %104, i64 0, i32 3
  %105 = load ptr, ptr %memberidx.i100, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %105, ptr %1, ptr nonnull %87)
  %.pre141 = load i64, ptr %87, align 4
  br label %ifend25

ifend25:                                          ; preds = %if.entry19, %if.entry23
  %106 = phi i64 [ %88, %if.entry19 ], [ %.pre141, %if.entry23 ]
  %107 = add i64 %106, -1
  %108 = icmp ult i64 %107, 2
  br i1 %108, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend25
  %109 = load ptr, ptr %0, align 8
  %110 = load ptr, ptr %memberidx1.i, align 8
  %111 = load i64, ptr %110, align 4
  %112 = load ptr, ptr %109, align 8
  %113 = load ptr, ptr %112, align 8
  %114 = getelementptr inbounds ptr, ptr %113, i64 %111
  %115 = load ptr, ptr %114, align 8
  %memberidx1.i.i102 = getelementptr inbounds %Module, ptr %115, i64 0, i32 5
  %116 = load ptr, ptr %memberidx1.i.i102, align 8
  %117 = load i64, ptr %116, align 4
  %118 = getelementptr inbounds ptr, ptr %113, i64 %117
  %119 = load ptr, ptr %118, align 8
  %memberidx2.i.i.i103 = getelementptr inbounds %Module, ptr %119, i64 0, i32 7
  %120 = load ptr, ptr %memberidx2.i.i.i103, align 8
  %memberidx3.i.i.i104 = getelementptr inbounds %ScopeId, ptr %116, i64 0, i32 1
  %121 = load i64, ptr %memberidx3.i.i.i104, align 4
  %122 = load ptr, ptr %120, align 8
  %123 = getelementptr inbounds ptr, ptr %122, i64 %121
  %124 = load ptr, ptr %123, align 8
  %memberidx.i105 = getelementptr inbounds %Scope, ptr %124, i64 0, i32 1
  %125 = load ptr, ptr %memberidx.i105, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %125, ptr %1, ptr nonnull %87)
  %.pr = load i64, ptr %87, align 4
  br label %ifend30

ifend30:                                          ; preds = %ifend25, %if.entry28
  %126 = phi i64 [ %106, %ifend25 ], [ %.pr, %if.entry28 ]
  %127 = icmp eq i64 %126, 3
  br i1 %127, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend30
  %128 = tail call ptr @malloc(i32 24)
  %memberidx.i106 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 1
  %129 = load i64, ptr %memberidx.i106, align 4
  %memberidx1.i107 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 2
  %130 = load i64, ptr %memberidx1.i107, align 4
  store i64 %129, ptr %128, align 4
  %memberidx1.i.i.i108 = getelementptr inbounds %TypeId, ptr %128, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i108, align 4
  %memberidx2.i.i.i109 = getelementptr inbounds %TypeId, ptr %128, i64 0, i32 2
  store i64 %130, ptr %memberidx2.i.i.i109, align 4
  %131 = load ptr, ptr %0, align 8
  %132 = load ptr, ptr %memberidx1.i, align 8
  %133 = load i64, ptr %132, align 4
  %134 = load ptr, ptr %131, align 8
  %135 = load ptr, ptr %134, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %133
  %137 = load ptr, ptr %136, align 8
  %memberidx1.i.i111 = getelementptr inbounds %Module, ptr %137, i64 0, i32 5
  %138 = load ptr, ptr %memberidx1.i.i111, align 8
  %139 = load i64, ptr %138, align 4
  %140 = getelementptr inbounds ptr, ptr %135, i64 %139
  %141 = load ptr, ptr %140, align 8
  %memberidx2.i.i.i112 = getelementptr inbounds %Module, ptr %141, i64 0, i32 7
  %142 = load ptr, ptr %memberidx2.i.i.i112, align 8
  %memberidx3.i.i.i113 = getelementptr inbounds %ScopeId, ptr %138, i64 0, i32 1
  %143 = load i64, ptr %memberidx3.i.i.i113, align 4
  %144 = load ptr, ptr %142, align 8
  %145 = getelementptr inbounds ptr, ptr %144, i64 %143
  %146 = load ptr, ptr %145, align 8
  %memberidx.i114 = getelementptr inbounds %Scope, ptr %146, i64 0, i32 2
  %147 = load ptr, ptr %memberidx.i114, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %147, ptr %1, ptr nonnull %128)
  %memberidx1.i115 = getelementptr inbounds %Scope, ptr %146, i64 0, i32 1
  %148 = load ptr, ptr %memberidx1.i115, align 8
  %149 = tail call ptr @malloc(i32 24)
  %150 = load i64, ptr %128, align 4
  %151 = load i64, ptr %memberidx2.i.i.i109, align 4
  store i64 3, ptr %149, align 4
  %memberidx1.i.i.i117 = getelementptr inbounds %VarId, ptr %149, i64 0, i32 1
  store i64 %150, ptr %memberidx1.i.i.i117, align 4
  %memberidx2.i.i6.i118 = getelementptr inbounds %VarId, ptr %149, i64 0, i32 2
  store i64 %151, ptr %memberidx2.i.i6.i118, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %148, ptr %1, ptr nonnull %149)
  %.pre142 = load i64, ptr %87, align 4
  br label %ifend34

ifend34:                                          ; preds = %ifend30, %if.entry32
  %152 = phi i64 [ %126, %ifend30 ], [ %.pre142, %if.entry32 ]
  %153 = icmp eq i64 %152, 4
  br i1 %153, label %if.entry36, label %ifend12

if.entry36:                                       ; preds = %ifend34
  %154 = tail call ptr @malloc(i32 24)
  %memberidx.i119 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 1
  %155 = load i64, ptr %memberidx.i119, align 4
  %memberidx1.i120 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 2
  %156 = load i64, ptr %memberidx1.i120, align 4
  store i64 %155, ptr %154, align 4
  %memberidx1.i.i.i121 = getelementptr inbounds %TypeId, ptr %154, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i121, align 4
  %memberidx2.i.i.i122 = getelementptr inbounds %TypeId, ptr %154, i64 0, i32 2
  store i64 %156, ptr %memberidx2.i.i.i122, align 4
  %157 = load ptr, ptr %0, align 8
  %158 = load ptr, ptr %memberidx1.i, align 8
  %159 = load i64, ptr %158, align 4
  %160 = load ptr, ptr %157, align 8
  %161 = load ptr, ptr %160, align 8
  %162 = getelementptr inbounds ptr, ptr %161, i64 %159
  %163 = load ptr, ptr %162, align 8
  %memberidx1.i.i93 = getelementptr inbounds %Module, ptr %163, i64 0, i32 5
  %164 = load ptr, ptr %memberidx1.i.i93, align 8
  %165 = load i64, ptr %164, align 4
  %166 = getelementptr inbounds ptr, ptr %161, i64 %165
  %167 = load ptr, ptr %166, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %167, i64 0, i32 7
  %168 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %164, i64 0, i32 1
  %169 = load i64, ptr %memberidx3.i.i.i, align 4
  %170 = load ptr, ptr %168, align 8
  %171 = getelementptr inbounds ptr, ptr %170, i64 %169
  %172 = load ptr, ptr %171, align 8
  %memberidx.i94 = getelementptr inbounds %Scope, ptr %172, i64 0, i32 4
  %173 = load ptr, ptr %memberidx.i94, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %173, ptr %1, ptr nonnull %154)
  %memberidx1.i95 = getelementptr inbounds %Scope, ptr %172, i64 0, i32 1
  %174 = load ptr, ptr %memberidx1.i95, align 8
  %175 = tail call ptr @malloc(i32 24)
  %176 = load i64, ptr %154, align 4
  %177 = load i64, ptr %memberidx2.i.i.i122, align 4
  store i64 4, ptr %175, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %175, i64 0, i32 1
  store i64 %176, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %175, i64 0, i32 2
  store i64 %177, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %174, ptr %1, ptr nonnull %175)
  br label %ifend12
}

define internal fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1.i, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %memberidx1.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend12, %2
  %current_scope.0.in = phi ptr [ %13, %2 ], [ %101, %ifend12 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 6
  %14 = load ptr, ptr %memberidx, align 8
  %15 = tail call fastcc i64 @Map_String_Type__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_String_Type_, ptr %14, i64 0, i32 1
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = urem i64 %15, %16
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %.not.i = icmp eq ptr %20, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %while.entry, %else.i
  %21 = phi ptr [ %31, %else.i ], [ %18, %while.entry ]
  %22 = phi i64 [ %32, %else.i ], [ %16, %while.entry ]
  %23 = phi ptr [ %36, %else.i ], [ %20, %while.entry ]
  %hash.0.i = phi i64 [ %34, %else.i ], [ %17, %while.entry ]
  %24 = load ptr, ptr %23, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx.i.i, align 4
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %25, %26
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %27 = load ptr, ptr %24, align 8
  %28 = load ptr, ptr %1, align 8
  %29 = tail call i64 @memcmp(ptr %27, ptr %28, i64 %25)
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre132 = load ptr, ptr %14, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre133.pre = load ptr, ptr %14, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre133.pre, i64 %hash.0.i
  %.pre134.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre134.pre, null
  br i1 %.not25.i, label %ifend, label %Map_String_Type____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %31 = phi ptr [ %.pre132, %ifend.i.i.else.i_crit_edge ], [ %21, %while.entry.i ]
  %32 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %22, %while.entry.i ]
  %33 = add nuw i64 %hash.0.i, 1
  %34 = urem i64 %33, %32
  %35 = getelementptr inbounds ptr, ptr %31, i64 %34
  %36 = load ptr, ptr %35, align 8
  %.not26.i = icmp eq ptr %36, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_String_Type____getitem__.exit:                ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_Type_, ptr %.pre134.pre, i64 0, i32 1
  %37 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %37, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_String_Type____getitem__.exit, %ifend28, %ifend19, %if.entry6, %if.entry2
  %common.ret.op = phi ptr [ %62, %if.entry2 ], [ %87, %if.entry6 ], [ %109, %ifend19 ], [ %107, %ifend28 ], [ %37, %Map_String_Type____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %while.entry, %while.end.i, %Map_String_Type____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 2
  %38 = load ptr, ptr %memberidx1, align 8
  %39 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr %1)
  %memberidx.i65 = getelementptr inbounds %Map_String_ClassId_, ptr %38, i64 0, i32 1
  %40 = load i64, ptr %memberidx.i65, align 4
  %41 = urem i64 %39, %40
  %42 = load ptr, ptr %38, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %.not.i66 = icmp eq ptr %44, null
  br i1 %.not.i66, label %ifend4, label %while.entry.i71

while.entry.i71:                                  ; preds = %ifend, %else.i79
  %45 = phi ptr [ %55, %else.i79 ], [ %42, %ifend ]
  %46 = phi i64 [ %56, %else.i79 ], [ %40, %ifend ]
  %47 = phi ptr [ %60, %else.i79 ], [ %44, %ifend ]
  %hash.0.i67 = phi i64 [ %58, %else.i79 ], [ %41, %ifend ]
  %48 = load ptr, ptr %47, align 8
  %memberidx.i.i68 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  %49 = load i64, ptr %memberidx.i.i68, align 4
  %50 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i70 = icmp eq i64 %49, %50
  br i1 %.not.i.i70, label %ifend.i.i72, label %else.i79

ifend.i.i72:                                      ; preds = %while.entry.i71
  %51 = load ptr, ptr %48, align 8
  %52 = load ptr, ptr %1, align 8
  %53 = tail call i64 @memcmp(ptr %51, ptr %52, i64 %49)
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %while.end.i77, label %ifend.i.i72.else.i79_crit_edge

ifend.i.i72.else.i79_crit_edge:                   ; preds = %ifend.i.i72
  %.pre135 = load i64, ptr %memberidx.i65, align 4
  %.pre136 = load ptr, ptr %38, align 8
  br label %else.i79

while.end.i77:                                    ; preds = %ifend.i.i72
  %.pre137.pre = load ptr, ptr %38, align 8
  %.phi.trans.insert138.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre137.pre, i64 %hash.0.i67
  %.pre139.pre = load ptr, ptr %.phi.trans.insert138.phi.trans.insert, align 8
  %.not25.i76 = icmp eq ptr %.pre139.pre, null
  br i1 %.not25.i76, label %ifend4, label %Map_String_ClassId____getitem__.exit

else.i79:                                         ; preds = %ifend.i.i72.else.i79_crit_edge, %while.entry.i71
  %55 = phi ptr [ %.pre136, %ifend.i.i72.else.i79_crit_edge ], [ %45, %while.entry.i71 ]
  %56 = phi i64 [ %.pre135, %ifend.i.i72.else.i79_crit_edge ], [ %46, %while.entry.i71 ]
  %57 = add nuw i64 %hash.0.i67, 1
  %58 = urem i64 %57, %56
  %59 = getelementptr inbounds ptr, ptr %55, i64 %58
  %60 = load ptr, ptr %59, align 8
  %.not26.i78 = icmp eq ptr %60, null
  br i1 %.not26.i78, label %ifend4, label %while.entry.i71

Map_String_ClassId____getitem__.exit:             ; preds = %while.end.i77
  %memberidx11.i81 = getelementptr inbounds %MapEntry_String_ClassId_, ptr %.pre139.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx11.i81, align 8
  %.not61 = icmp eq ptr %61, null
  br i1 %.not61, label %ifend4, label %if.entry2

if.entry2:                                        ; preds = %Map_String_ClassId____getitem__.exit
  %62 = tail call ptr @malloc(i32 16)
  store i64 11, ptr %62, align 4
  %memberidx.i83 = getelementptr inbounds %ObjectType, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i83, align 8
  br label %common.ret

ifend4:                                           ; preds = %else.i79, %ifend, %while.end.i77, %Map_String_ClassId____getitem__.exit
  %memberidx5 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 4
  %63 = load ptr, ptr %memberidx5, align 8
  %64 = tail call fastcc i64 @Map_String_EnumId__hash_fnc(ptr %1)
  %memberidx.i84 = getelementptr inbounds %Map_String_EnumId_, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i84, align 4
  %66 = urem i64 %64, %65
  %67 = load ptr, ptr %63, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %.not.i85 = icmp eq ptr %69, null
  br i1 %.not.i85, label %ifend8, label %while.entry.i90

while.entry.i90:                                  ; preds = %ifend4, %else.i98
  %70 = phi ptr [ %80, %else.i98 ], [ %67, %ifend4 ]
  %71 = phi i64 [ %81, %else.i98 ], [ %65, %ifend4 ]
  %72 = phi ptr [ %85, %else.i98 ], [ %69, %ifend4 ]
  %hash.0.i86 = phi i64 [ %83, %else.i98 ], [ %66, %ifend4 ]
  %73 = load ptr, ptr %72, align 8
  %memberidx.i.i87 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i.i87, align 4
  %75 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i89 = icmp eq i64 %74, %75
  br i1 %.not.i.i89, label %ifend.i.i91, label %else.i98

ifend.i.i91:                                      ; preds = %while.entry.i90
  %76 = load ptr, ptr %73, align 8
  %77 = load ptr, ptr %1, align 8
  %78 = tail call i64 @memcmp(ptr %76, ptr %77, i64 %74)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %while.end.i96, label %ifend.i.i91.else.i98_crit_edge

ifend.i.i91.else.i98_crit_edge:                   ; preds = %ifend.i.i91
  %.pre140 = load i64, ptr %memberidx.i84, align 4
  %.pre141 = load ptr, ptr %63, align 8
  br label %else.i98

while.end.i96:                                    ; preds = %ifend.i.i91
  %.pre142.pre = load ptr, ptr %63, align 8
  %.phi.trans.insert143.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre142.pre, i64 %hash.0.i86
  %.pre144.pre = load ptr, ptr %.phi.trans.insert143.phi.trans.insert, align 8
  %.not25.i95 = icmp eq ptr %.pre144.pre, null
  br i1 %.not25.i95, label %ifend8, label %Map_String_EnumId____getitem__.exit

else.i98:                                         ; preds = %ifend.i.i91.else.i98_crit_edge, %while.entry.i90
  %80 = phi ptr [ %.pre141, %ifend.i.i91.else.i98_crit_edge ], [ %70, %while.entry.i90 ]
  %81 = phi i64 [ %.pre140, %ifend.i.i91.else.i98_crit_edge ], [ %71, %while.entry.i90 ]
  %82 = add nuw i64 %hash.0.i86, 1
  %83 = urem i64 %82, %81
  %84 = getelementptr inbounds ptr, ptr %80, i64 %83
  %85 = load ptr, ptr %84, align 8
  %.not26.i97 = icmp eq ptr %85, null
  br i1 %.not26.i97, label %ifend8, label %while.entry.i90

Map_String_EnumId____getitem__.exit:              ; preds = %while.end.i96
  %memberidx11.i100 = getelementptr inbounds %MapEntry_String_EnumId_, ptr %.pre144.pre, i64 0, i32 1
  %86 = load ptr, ptr %memberidx11.i100, align 8
  %.not62 = icmp eq ptr %86, null
  br i1 %.not62, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %Map_String_EnumId____getitem__.exit
  %87 = tail call ptr @malloc(i32 16)
  store i64 12, ptr %87, align 4
  %memberidx.i102 = getelementptr inbounds %EnumType, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i102, align 8
  br label %common.ret

ifend8:                                           ; preds = %else.i98, %ifend4, %while.end.i96, %Map_String_EnumId____getitem__.exit
  %memberidx9 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %88 = load ptr, ptr %memberidx9, align 8
  %89 = icmp eq ptr %88, null
  br i1 %89, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %90 = load ptr, ptr %memberidx1.i, align 8
  %91 = load i64, ptr %90, align 4
  %.not63 = icmp eq i64 %91, 0
  br i1 %.not63, label %ifend19, label %if.entry17

ifend12:                                          ; preds = %ifend8
  %92 = load ptr, ptr %0, align 8
  %93 = load ptr, ptr %92, align 8
  %94 = load i64, ptr %88, align 4
  %95 = load ptr, ptr %93, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %94
  %97 = load ptr, ptr %96, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %97, i64 0, i32 7
  %98 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %88, i64 0, i32 1
  %99 = load i64, ptr %memberidx3.i, align 4
  %100 = load ptr, ptr %98, align 8
  %101 = getelementptr inbounds ptr, ptr %100, i64 %99
  br label %while.entry

if.entry17:                                       ; preds = %if.entry10
  %102 = load ptr, ptr %0, align 8
  %103 = load ptr, ptr %102, align 8
  %104 = load ptr, ptr %103, align 8
  %105 = load ptr, ptr %104, align 8
  %memberidx24 = getelementptr inbounds %Module, ptr %105, i64 0, i32 5
  %106 = load ptr, ptr %memberidx24, align 8
  store ptr %106, ptr %memberidx1.i, align 8
  %107 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %1)
  %108 = load i64, ptr %107, align 4
  switch i64 %108, label %else31 [
    i64 21, label %ifend28
    i64 11, label %if.entry30
  ]

ifend19:                                          ; preds = %if.entry10
  %109 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %109, align 4
  br label %common.ret

ifend28:                                          ; preds = %if.entry17, %if.entry30, %else31
  store ptr %90, ptr %memberidx1.i, align 8
  br label %common.ret

if.entry30:                                       ; preds = %if.entry17
  %memberidx33 = getelementptr inbounds %ObjectType, ptr %107, i64 0, i32 1
  %110 = load ptr, ptr %memberidx33, align 8
  %111 = load ptr, ptr %0, align 8
  %112 = load ptr, ptr %memberidx1.i, align 8
  %113 = load i64, ptr %112, align 4
  %114 = load ptr, ptr %111, align 8
  %115 = load ptr, ptr %114, align 8
  %116 = getelementptr inbounds ptr, ptr %115, i64 %113
  %117 = load ptr, ptr %116, align 8
  %memberidx1.i.i103 = getelementptr inbounds %Module, ptr %117, i64 0, i32 5
  %118 = load ptr, ptr %memberidx1.i.i103, align 8
  %119 = load i64, ptr %118, align 4
  %120 = getelementptr inbounds ptr, ptr %115, i64 %119
  %121 = load ptr, ptr %120, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %121, i64 0, i32 7
  %122 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %118, i64 0, i32 1
  %123 = load i64, ptr %memberidx3.i.i.i, align 4
  %124 = load ptr, ptr %122, align 8
  %125 = getelementptr inbounds ptr, ptr %124, i64 %123
  %126 = load ptr, ptr %125, align 8
  %memberidx.i104 = getelementptr inbounds %Scope, ptr %126, i64 0, i32 2
  %127 = load ptr, ptr %memberidx.i104, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %127, ptr %1, ptr %110)
  %memberidx1.i105 = getelementptr inbounds %Scope, ptr %126, i64 0, i32 1
  %128 = load ptr, ptr %memberidx1.i105, align 8
  %129 = tail call ptr @malloc(i32 24)
  %130 = load i64, ptr %110, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %110, i64 0, i32 2
  %131 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 3, ptr %129, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %129, i64 0, i32 1
  store i64 %130, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %129, i64 0, i32 2
  store i64 %131, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %128, ptr %1, ptr nonnull %129)
  br label %ifend28

else31:                                           ; preds = %if.entry17
  %memberidx34 = getelementptr inbounds %EnumType, ptr %107, i64 0, i32 1
  %132 = load ptr, ptr %memberidx34, align 8
  %133 = load ptr, ptr %0, align 8
  %134 = load ptr, ptr %memberidx1.i, align 8
  %135 = load i64, ptr %134, align 4
  %136 = load ptr, ptr %133, align 8
  %137 = load ptr, ptr %136, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %135
  %139 = load ptr, ptr %138, align 8
  %memberidx1.i.i107 = getelementptr inbounds %Module, ptr %139, i64 0, i32 5
  %140 = load ptr, ptr %memberidx1.i.i107, align 8
  %141 = load i64, ptr %140, align 4
  %142 = getelementptr inbounds ptr, ptr %137, i64 %141
  %143 = load ptr, ptr %142, align 8
  %memberidx2.i.i.i108 = getelementptr inbounds %Module, ptr %143, i64 0, i32 7
  %144 = load ptr, ptr %memberidx2.i.i.i108, align 8
  %memberidx3.i.i.i109 = getelementptr inbounds %ScopeId, ptr %140, i64 0, i32 1
  %145 = load i64, ptr %memberidx3.i.i.i109, align 4
  %146 = load ptr, ptr %144, align 8
  %147 = getelementptr inbounds ptr, ptr %146, i64 %145
  %148 = load ptr, ptr %147, align 8
  %memberidx.i110 = getelementptr inbounds %Scope, ptr %148, i64 0, i32 4
  %149 = load ptr, ptr %memberidx.i110, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %149, ptr %1, ptr %132)
  %memberidx1.i111 = getelementptr inbounds %Scope, ptr %148, i64 0, i32 1
  %150 = load ptr, ptr %memberidx1.i111, align 8
  %151 = tail call ptr @malloc(i32 24)
  %152 = load i64, ptr %132, align 4
  %memberidx1.i5.i112 = getelementptr inbounds %TypeId, ptr %132, i64 0, i32 2
  %153 = load i64, ptr %memberidx1.i5.i112, align 4
  store i64 4, ptr %151, align 4
  %memberidx1.i.i.i113 = getelementptr inbounds %VarId, ptr %151, i64 0, i32 1
  store i64 %152, ptr %memberidx1.i.i.i113, align 4
  %memberidx2.i.i6.i114 = getelementptr inbounds %VarId, ptr %151, i64 0, i32 2
  store i64 %153, ptr %memberidx2.i.i6.i114, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %150, ptr %1, ptr nonnull %151)
  br label %ifend28
}

define internal fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Var, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx.i13, align 8
  %7 = load i64, ptr %6, align 4
  %8 = load ptr, ptr %0, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %7
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 7
  %13 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = load ptr, ptr %memberidx.i13, align 8
  %20 = load i64, ptr %19, align 4
  %memberidx2 = getelementptr inbounds %Module, ptr %12, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Var_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx3, align 4
  store i64 1, ptr %18, align 4
  %memberidx1.i16 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i16, align 4
  %memberidx2.i = getelementptr inbounds %VarId, ptr %18, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i, align 4
  %memberidx4 = getelementptr inbounds %Var, ptr %5, i64 0, i32 1
  store ptr %18, ptr %memberidx4, align 8
  %23 = load ptr, ptr %memberidx2, align 8
  %memberidx.i14 = getelementptr inbounds %Array_Var_, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i14, align 4
  %memberidx1.i = getelementptr inbounds %Array_Var_, ptr %23, i64 0, i32 2
  %25 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %24, %25
  br i1 %.not.i, label %.Array_Var____sl__.exit_crit_edge, label %if.entry.i

.Array_Var____sl__.exit_crit_edge:                ; preds = %4
  %.pre17 = load ptr, ptr %23, align 8
  br label %Array_Var____sl__.exit

if.entry.i:                                       ; preds = %4
  %26 = shl nuw i64 %25, 1
  store i64 %26, ptr %memberidx1.i, align 4
  %27 = load ptr, ptr %23, align 8
  %28 = shl i64 %25, 4
  %29 = tail call ptr @realloc(ptr %27, i64 %28)
  store ptr %29, ptr %23, align 8
  %.pre = load i64, ptr %memberidx.i14, align 4
  br label %Array_Var____sl__.exit

Array_Var____sl__.exit:                           ; preds = %.Array_Var____sl__.exit_crit_edge, %if.entry.i
  %30 = phi ptr [ %.pre17, %.Array_Var____sl__.exit_crit_edge ], [ %29, %if.entry.i ]
  %31 = phi i64 [ %24, %.Array_Var____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx.i14, align 4
  %33 = getelementptr inbounds ptr, ptr %30, i64 %31
  store ptr %5, ptr %33, align 8
  %memberidx6 = getelementptr inbounds %Scope, ptr %17, i64 0, i32 1
  %34 = load ptr, ptr %memberidx6, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %34, ptr %1, ptr nonnull %18)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Const, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx.i13, align 8
  %7 = load i64, ptr %6, align 4
  %8 = load ptr, ptr %0, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %7
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 7
  %13 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = load ptr, ptr %memberidx.i13, align 8
  %20 = load i64, ptr %19, align 4
  %memberidx2 = getelementptr inbounds %Module, ptr %12, i64 0, i32 2
  %21 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Const_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx3, align 4
  store i64 2, ptr %18, align 4
  %memberidx1.i.i = getelementptr inbounds %VarId, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i16 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i16, align 4
  %memberidx4 = getelementptr inbounds %Const, ptr %5, i64 0, i32 1
  store ptr %18, ptr %memberidx4, align 8
  %23 = load ptr, ptr %memberidx2, align 8
  %memberidx.i14 = getelementptr inbounds %Array_Const_, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i14, align 4
  %memberidx1.i = getelementptr inbounds %Array_Const_, ptr %23, i64 0, i32 2
  %25 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %24, %25
  br i1 %.not.i, label %.Array_Const____sl__.exit_crit_edge, label %if.entry.i

.Array_Const____sl__.exit_crit_edge:              ; preds = %4
  %.pre17 = load ptr, ptr %23, align 8
  br label %Array_Const____sl__.exit

if.entry.i:                                       ; preds = %4
  %26 = shl nuw i64 %25, 1
  store i64 %26, ptr %memberidx1.i, align 4
  %27 = load ptr, ptr %23, align 8
  %28 = shl i64 %25, 4
  %29 = tail call ptr @realloc(ptr %27, i64 %28)
  store ptr %29, ptr %23, align 8
  %.pre = load i64, ptr %memberidx.i14, align 4
  br label %Array_Const____sl__.exit

Array_Const____sl__.exit:                         ; preds = %.Array_Const____sl__.exit_crit_edge, %if.entry.i
  %30 = phi ptr [ %.pre17, %.Array_Const____sl__.exit_crit_edge ], [ %29, %if.entry.i ]
  %31 = phi i64 [ %24, %.Array_Const____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx.i14, align 4
  %33 = getelementptr inbounds ptr, ptr %30, i64 %31
  store ptr %5, ptr %33, align 8
  %memberidx6 = getelementptr inbounds %Scope, ptr %17, i64 0, i32 1
  %34 = load ptr, ptr %memberidx6, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %34, ptr %1, ptr nonnull %18)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i135, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i134, %if.entry.i135 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %6 = load i64, ptr %.tr11.i, align 4
  switch i64 %6, label %get_class_from_type.exit [
    i64 20, label %if.entry.i135
    i64 11, label %if.entry3.i
  ]

if.entry.i135:                                    ; preds = %tailrecurse.i
  %memberidx1.i134 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i136 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %7 = load ptr, ptr %memberidx6.i136, align 8
  %8 = load ptr, ptr %5, align 8
  %9 = load i64, ptr %7, align 4
  %10 = load ptr, ptr %8, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i137 = getelementptr inbounds %Module, ptr %12, i64 0, i32 3
  %13 = load ptr, ptr %memberidx2.i.i137, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %7, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i133 = phi ptr [ %17, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i133, i64 0, i32 6
  %18 = load ptr, ptr %memberidx3, align 8
  %19 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %19, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i, align 4
  %21 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %20)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %18, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i, align 4
  %23 = urem i64 %21, %22
  %24 = load ptr, ptr %18, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  %.not.i = icmp eq ptr %26, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %get_class_from_type.exit, %else.i
  %27 = phi ptr [ %35, %else.i ], [ %24, %get_class_from_type.exit ]
  %28 = phi i64 [ %36, %else.i ], [ %22, %get_class_from_type.exit ]
  %29 = phi ptr [ %40, %else.i ], [ %26, %get_class_from_type.exit ]
  %hash.0.i = phi i64 [ %38, %else.i ], [ %23, %get_class_from_type.exit ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %31, 11
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i64 @memcmp(ptr %32, ptr %19, i64 11)
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre141 = load ptr, ptr %18, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre142.pre = load ptr, ptr %18, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre142.pre, i64 %hash.0.i
  %.pre143.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre143.pre, null
  br i1 %.not25.i, label %if.entry, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %35 = phi ptr [ %.pre141, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %36 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %37 = add nuw i64 %hash.0.i, 1
  %38 = urem i64 %37, %36
  %39 = getelementptr inbounds ptr, ptr %35, i64 %38
  %40 = load ptr, ptr %39, align 8
  %.not26.i = icmp eq ptr %40, null
  br i1 %.not26.i, label %if.entry, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre143.pre, i64 0, i32 1
  %41 = load ptr, ptr %memberidx11.i, align 8
  %42 = icmp eq ptr %41, null
  br i1 %42, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend19, %ifend11, %get_class_prop_type.exit, %ifend30, %TypeChecker_error.exit119, %TypeChecker_error.exit102, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit102 ], [ null, %TypeChecker_error.exit119 ], [ %194, %ifend30 ], [ null, %get_class_prop_type.exit ], [ null, %ifend11 ], [ null, %ifend19 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_String_PropId____getitem__.exit
  %memberidx4 = getelementptr inbounds %Class, ptr %common.ret.op.i133, i64 0, i32 1
  %43 = load ptr, ptr %memberidx4, align 8
  %memberidx.i72 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i72, align 4
  %45 = trunc i64 %44 to i32
  %46 = add i32 %45, 1
  %47 = tail call ptr @malloc(i32 %46)
  %48 = load ptr, ptr %43, align 8
  %49 = load i64, ptr %memberidx.i72, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %48, i64 %49, i1 false)
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  store i8 0, ptr %50, align 1
  %51 = alloca ptr, align 8
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %51, ptr nonnull @180, ptr %47)
  %53 = load ptr, ptr %51, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %52, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx2.i, align 4
  tail call void @free(ptr %47)
  %55 = load ptr, ptr %4, align 8
  %memberidx.i73 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %56 = load ptr, ptr %memberidx.i73, align 8
  %memberidx1.i74 = getelementptr inbounds %Compiler, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx1.i74, align 8
  %58 = call ptr @malloc(i32 24)
  store i64 4, ptr %58, align 4
  %memberidx1.i.i75 = getelementptr inbounds %FloError, ptr %58, i64 0, i32 2
  store ptr %55, ptr %memberidx1.i.i75, align 8
  %memberidx2.i.i76 = getelementptr inbounds %FloError, ptr %58, i64 0, i32 1
  store ptr %54, ptr %memberidx2.i.i76, align 8
  %memberidx.i.i77 = getelementptr inbounds %Array_FloError_, ptr %57, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i.i77, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %57, i64 0, i32 2
  %60 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i78 = icmp slt i64 %59, %60
  br i1 %.not.i.i78, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre149 = load ptr, ptr %57, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %61 = shl nuw i64 %60, 1
  store i64 %61, ptr %memberidx1.i2.i, align 4
  %62 = load ptr, ptr %57, align 8
  %63 = shl i64 %60, 4
  %64 = call ptr @realloc(ptr %62, i64 %63)
  store ptr %64, ptr %57, align 8
  %.pre148 = load i64, ptr %memberidx.i.i77, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %65 = phi ptr [ %.pre149, %if.entry.TypeChecker_error.exit_crit_edge ], [ %64, %if.entry.i.i ]
  %66 = phi i64 [ %59, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre148, %if.entry.i.i ]
  %67 = add nsw i64 %66, 1
  store i64 %67, ptr %memberidx.i.i77, align 4
  %68 = getelementptr inbounds ptr, ptr %65, i64 %66
  store ptr %58, ptr %68, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %69 = load ptr, ptr %0, align 8
  %memberidx.i.i79 = getelementptr inbounds %PropId, ptr %41, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i79, align 8
  %71 = load ptr, ptr %69, align 8
  %72 = load i64, ptr %70, align 4
  %73 = load ptr, ptr %71, align 8
  %74 = getelementptr inbounds ptr, ptr %73, i64 %72
  %75 = load ptr, ptr %74, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %75, i64 0, i32 3
  %76 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %70, i64 0, i32 2
  %77 = load i64, ptr %memberidx3.i.i.i, align 4
  %78 = load ptr, ptr %76, align 8
  %79 = getelementptr inbounds ptr, ptr %78, i64 %77
  %80 = load ptr, ptr %79, align 8
  %81 = load i64, ptr %41, align 4
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i81 = getelementptr inbounds %Class, ptr %80, i64 0, i32 5
  %83 = load ptr, ptr %memberidx1.i81, align 8
  %memberidx2.i82 = getelementptr inbounds %PropId, ptr %41, i64 0, i32 2
  %84 = load i64, ptr %memberidx2.i82, align 4
  %85 = load ptr, ptr %83, align 8
  %86 = getelementptr inbounds ptr, ptr %85, i64 %84
  %87 = load ptr, ptr %86, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %87, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %80, i64 0, i32 4
  %88 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %41, i64 0, i32 2
  %89 = load i64, ptr %memberidx5.i, align 4
  %90 = load ptr, ptr %88, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %89
  %92 = load ptr, ptr %91, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %92, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i80 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx7 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i80, i64 0, i32 1
  %93 = load ptr, ptr %memberidx7, align 8
  %94 = load ptr, ptr %93, align 8
  %95 = load ptr, ptr %94, align 8
  %96 = getelementptr inbounds ptr, ptr %94, i64 1
  %97 = load ptr, ptr %96, align 8
  %memberidx.i83 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %98 = load ptr, ptr %memberidx.i83, align 8
  %memberidx1.i84 = getelementptr inbounds %Compiler, ptr %98, i64 0, i32 5
  %99 = load ptr, ptr %memberidx1.i84, align 8
  %memberidx2.i85 = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 1
  %100 = load i64, ptr %memberidx2.i85, align 4
  %101 = icmp sgt i64 %100, 0
  br i1 %101, label %common.ret, label %ifend11

ifend11:                                          ; preds = %get_class_prop_type.exit
  %memberidx12 = getelementptr inbounds %ExpressionIndexNode, ptr %4, i64 0, i32 4
  %102 = load ptr, ptr %memberidx12, align 8
  %103 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %95, ptr %102)
  %104 = load ptr, ptr %memberidx.i83, align 8
  %memberidx1.i87 = getelementptr inbounds %Compiler, ptr %104, i64 0, i32 5
  %105 = load ptr, ptr %memberidx1.i87, align 8
  %memberidx2.i88 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 1
  %106 = load i64, ptr %memberidx2.i88, align 4
  %107 = icmp sgt i64 %106, 0
  br i1 %107, label %common.ret, label %ifend15

ifend15:                                          ; preds = %ifend11
  %memberidx16 = getelementptr inbounds %Expression, ptr %103, i64 0, i32 3
  %108 = load ptr, ptr %memberidx16, align 8
  %109 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %95, ptr %108)
  br i1 %109, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend15
  %110 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %95)
  %memberidx.i89 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  %111 = load i64, ptr %memberidx.i89, align 4
  %112 = trunc i64 %111 to i32
  %113 = add i32 %112, 1
  %114 = tail call ptr @malloc(i32 %113)
  %115 = load ptr, ptr %110, align 8
  %116 = load i64, ptr %memberidx.i89, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %114, ptr align 8 %115, i64 %116, i1 false)
  %117 = getelementptr inbounds i8, ptr %114, i64 %116
  store i8 0, ptr %117, align 1
  %118 = load ptr, ptr %memberidx16, align 8
  %119 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %118)
  %memberidx.i90 = getelementptr inbounds %String, ptr %119, i64 0, i32 1
  %120 = load i64, ptr %memberidx.i90, align 4
  %121 = trunc i64 %120 to i32
  %122 = add i32 %121, 1
  %123 = tail call ptr @malloc(i32 %122)
  %124 = load ptr, ptr %119, align 8
  %125 = load i64, ptr %memberidx.i90, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %123, ptr align 8 %124, i64 %125, i1 false)
  %126 = getelementptr inbounds i8, ptr %123, i64 %125
  store i8 0, ptr %126, align 1
  %127 = alloca ptr, align 8
  %128 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %127, ptr nonnull @177, ptr %114, ptr %123)
  %129 = load ptr, ptr %127, align 8
  %130 = tail call ptr @malloc(i32 24)
  store ptr %129, ptr %130, align 8
  %memberidx1.i91 = getelementptr inbounds %String, ptr %130, i64 0, i32 1
  store i64 %128, ptr %memberidx1.i91, align 4
  %memberidx2.i92 = getelementptr inbounds %String, ptr %130, i64 0, i32 2
  store i64 %128, ptr %memberidx2.i92, align 4
  tail call void @free(ptr %114)
  tail call void @free(ptr %123)
  %131 = load ptr, ptr %memberidx12, align 8
  %132 = load ptr, ptr %131, align 8
  %133 = load ptr, ptr %memberidx.i83, align 8
  %memberidx1.i94 = getelementptr inbounds %Compiler, ptr %133, i64 0, i32 5
  %134 = load ptr, ptr %memberidx1.i94, align 8
  %135 = call ptr @malloc(i32 24)
  store i64 5, ptr %135, align 4
  %memberidx1.i.i95 = getelementptr inbounds %FloError, ptr %135, i64 0, i32 2
  store ptr %132, ptr %memberidx1.i.i95, align 8
  %memberidx2.i.i96 = getelementptr inbounds %FloError, ptr %135, i64 0, i32 1
  store ptr %130, ptr %memberidx2.i.i96, align 8
  %memberidx.i.i97 = getelementptr inbounds %Array_FloError_, ptr %134, i64 0, i32 1
  %136 = load i64, ptr %memberidx.i.i97, align 4
  %memberidx1.i2.i98 = getelementptr inbounds %Array_FloError_, ptr %134, i64 0, i32 2
  %137 = load i64, ptr %memberidx1.i2.i98, align 4
  %.not.i.i99 = icmp slt i64 %136, %137
  br i1 %.not.i.i99, label %if.entry17.TypeChecker_error.exit102_crit_edge, label %if.entry.i.i101

if.entry17.TypeChecker_error.exit102_crit_edge:   ; preds = %if.entry17
  %.pre145 = load ptr, ptr %134, align 8
  br label %TypeChecker_error.exit102

if.entry.i.i101:                                  ; preds = %if.entry17
  %138 = shl nuw i64 %137, 1
  store i64 %138, ptr %memberidx1.i2.i98, align 4
  %139 = load ptr, ptr %134, align 8
  %140 = shl i64 %137, 4
  %141 = call ptr @realloc(ptr %139, i64 %140)
  store ptr %141, ptr %134, align 8
  %.pre144 = load i64, ptr %memberidx.i.i97, align 4
  br label %TypeChecker_error.exit102

TypeChecker_error.exit102:                        ; preds = %if.entry17.TypeChecker_error.exit102_crit_edge, %if.entry.i.i101
  %142 = phi ptr [ %.pre145, %if.entry17.TypeChecker_error.exit102_crit_edge ], [ %141, %if.entry.i.i101 ]
  %143 = phi i64 [ %136, %if.entry17.TypeChecker_error.exit102_crit_edge ], [ %.pre144, %if.entry.i.i101 ]
  %144 = add nsw i64 %143, 1
  store i64 %144, ptr %memberidx.i.i97, align 4
  %145 = getelementptr inbounds ptr, ptr %142, i64 %143
  store ptr %135, ptr %145, align 8
  br label %common.ret

ifend19:                                          ; preds = %ifend15
  %memberidx23 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %146 = load ptr, ptr %memberidx23, align 8
  %147 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %97, ptr %146)
  %148 = load ptr, ptr %memberidx.i83, align 8
  %memberidx1.i104 = getelementptr inbounds %Compiler, ptr %148, i64 0, i32 5
  %149 = load ptr, ptr %memberidx1.i104, align 8
  %memberidx2.i105 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 1
  %150 = load i64, ptr %memberidx2.i105, align 4
  %151 = icmp sgt i64 %150, 0
  br i1 %151, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend19
  %152 = load ptr, ptr %memberidx16, align 8
  %153 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %95, ptr %152)
  br i1 %153, label %ifend30, label %if.entry28

if.entry28:                                       ; preds = %ifend26
  %154 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %97)
  %memberidx.i106 = getelementptr inbounds %String, ptr %154, i64 0, i32 1
  %155 = load i64, ptr %memberidx.i106, align 4
  %156 = trunc i64 %155 to i32
  %157 = add i32 %156, 1
  %158 = tail call ptr @malloc(i32 %157)
  %159 = load ptr, ptr %154, align 8
  %160 = load i64, ptr %memberidx.i106, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %158, ptr align 8 %159, i64 %160, i1 false)
  %161 = getelementptr inbounds i8, ptr %158, i64 %160
  store i8 0, ptr %161, align 1
  %memberidx31 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 3
  %162 = load ptr, ptr %memberidx31, align 8
  %163 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %162)
  %memberidx.i107 = getelementptr inbounds %String, ptr %163, i64 0, i32 1
  %164 = load i64, ptr %memberidx.i107, align 4
  %165 = trunc i64 %164 to i32
  %166 = add i32 %165, 1
  %167 = tail call ptr @malloc(i32 %166)
  %168 = load ptr, ptr %163, align 8
  %169 = load i64, ptr %memberidx.i107, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %167, ptr align 8 %168, i64 %169, i1 false)
  %170 = getelementptr inbounds i8, ptr %167, i64 %169
  store i8 0, ptr %170, align 1
  %171 = alloca ptr, align 8
  %172 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %171, ptr nonnull @177, ptr %158, ptr %167)
  %173 = load ptr, ptr %171, align 8
  %174 = tail call ptr @malloc(i32 24)
  store ptr %173, ptr %174, align 8
  %memberidx1.i108 = getelementptr inbounds %String, ptr %174, i64 0, i32 1
  store i64 %172, ptr %memberidx1.i108, align 4
  %memberidx2.i109 = getelementptr inbounds %String, ptr %174, i64 0, i32 2
  store i64 %172, ptr %memberidx2.i109, align 4
  tail call void @free(ptr %158)
  tail call void @free(ptr %167)
  %175 = load ptr, ptr %memberidx23, align 8
  %176 = load ptr, ptr %175, align 8
  %177 = load ptr, ptr %memberidx.i83, align 8
  %memberidx1.i111 = getelementptr inbounds %Compiler, ptr %177, i64 0, i32 5
  %178 = load ptr, ptr %memberidx1.i111, align 8
  %179 = call ptr @malloc(i32 24)
  store i64 5, ptr %179, align 4
  %memberidx1.i.i112 = getelementptr inbounds %FloError, ptr %179, i64 0, i32 2
  store ptr %176, ptr %memberidx1.i.i112, align 8
  %memberidx2.i.i113 = getelementptr inbounds %FloError, ptr %179, i64 0, i32 1
  store ptr %174, ptr %memberidx2.i.i113, align 8
  %memberidx.i.i114 = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 1
  %180 = load i64, ptr %memberidx.i.i114, align 4
  %memberidx1.i2.i115 = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 2
  %181 = load i64, ptr %memberidx1.i2.i115, align 4
  %.not.i.i116 = icmp slt i64 %180, %181
  br i1 %.not.i.i116, label %if.entry28.TypeChecker_error.exit119_crit_edge, label %if.entry.i.i118

if.entry28.TypeChecker_error.exit119_crit_edge:   ; preds = %if.entry28
  %.pre147 = load ptr, ptr %178, align 8
  br label %TypeChecker_error.exit119

if.entry.i.i118:                                  ; preds = %if.entry28
  %182 = shl nuw i64 %181, 1
  store i64 %182, ptr %memberidx1.i2.i115, align 4
  %183 = load ptr, ptr %178, align 8
  %184 = shl i64 %181, 4
  %185 = call ptr @realloc(ptr %183, i64 %184)
  store ptr %185, ptr %178, align 8
  %.pre146 = load i64, ptr %memberidx.i.i114, align 4
  br label %TypeChecker_error.exit119

TypeChecker_error.exit119:                        ; preds = %if.entry28.TypeChecker_error.exit119_crit_edge, %if.entry.i.i118
  %186 = phi ptr [ %.pre147, %if.entry28.TypeChecker_error.exit119_crit_edge ], [ %185, %if.entry.i.i118 ]
  %187 = phi i64 [ %180, %if.entry28.TypeChecker_error.exit119_crit_edge ], [ %.pre146, %if.entry.i.i118 ]
  %188 = add nsw i64 %187, 1
  store i64 %188, ptr %memberidx.i.i114, align 4
  %189 = getelementptr inbounds ptr, ptr %186, i64 %187
  store ptr %179, ptr %189, align 8
  br label %common.ret

ifend30:                                          ; preds = %ifend26
  %190 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %190, align 4
  %memberidx.i.i120 = getelementptr inbounds %Expression, ptr %190, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i120, align 4
  %memberidx1.i.i121 = getelementptr inbounds %Expression, ptr %190, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i121, align 1
  %memberidx.i122 = getelementptr inbounds %MemberExpression, ptr %190, i64 0, i32 4
  store ptr %1, ptr %memberidx.i122, align 8
  %memberidx1.i123 = getelementptr inbounds %MemberExpression, ptr %190, i64 0, i32 5
  store ptr %41, ptr %memberidx1.i123, align 8
  %memberidx2.i124 = getelementptr inbounds %Expression, ptr %190, i64 0, i32 3
  store ptr %common.ret.op.i80, ptr %memberidx2.i124, align 8
  %191 = tail call ptr @malloc(i32 24)
  %memberidx.i125 = getelementptr inbounds %Array_Expression_, ptr %191, i64 0, i32 1
  store i64 0, ptr %memberidx.i125, align 4
  %memberidx1.i126 = getelementptr inbounds %Array_Expression_, ptr %191, i64 0, i32 2
  store i64 16, ptr %memberidx1.i126, align 4
  %192 = tail call ptr @malloc(i32 128)
  store ptr %192, ptr %191, align 8
  store ptr %103, ptr %192, align 8
  %193 = getelementptr inbounds ptr, ptr %192, i64 1
  store ptr %147, ptr %193, align 8
  store i64 2, ptr %memberidx.i125, align 4
  %194 = tail call ptr @malloc(i32 41)
  %memberidx36 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i80, i64 0, i32 2
  %195 = load ptr, ptr %memberidx36, align 8
  store i64 8, ptr %194, align 4
  %memberidx.i.i127 = getelementptr inbounds %Expression, ptr %194, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i127, align 4
  %memberidx1.i.i128 = getelementptr inbounds %Expression, ptr %194, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i128, align 1
  %memberidx.i129 = getelementptr inbounds %CallExpression, ptr %194, i64 0, i32 4
  store ptr %190, ptr %memberidx.i129, align 8
  %memberidx1.i130 = getelementptr inbounds %CallExpression, ptr %194, i64 0, i32 5
  store ptr %191, ptr %memberidx1.i130, align 8
  %memberidx2.i131 = getelementptr inbounds %Expression, ptr %194, i64 0, i32 3
  store ptr %195, ptr %memberidx2.i131, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %left = alloca ptr, align 8
  %right = alloca ptr, align 8
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = add i64 %4, -19
  %6 = icmp ult i64 %5, 12
  %7 = icmp eq i64 %4, 19
  %memberidx1 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ExpressionNode, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2, align 4
  %10 = icmp eq i64 %9, 14
  %11 = and i1 %7, %10
  br i1 %11, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %12 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %12, align 4
  %13 = load ptr, ptr %memberidx1, align 8
  %memberidx4 = getelementptr inbounds %ExpressionIndexNode, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx4, align 8
  %15 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %12, ptr %14)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %16 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %16, i64 0, i32 5
  %17 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx2.i, align 4
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %common.ret, label %ifend7

ifend:                                            ; preds = %is_object.exit.ifend_crit_edge, %3
  %20 = phi ptr [ %.pre, %is_object.exit.ifend_crit_edge ], [ %8, %3 ]
  %21 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %20)
  store ptr %21, ptr %left, align 8
  %memberidx.i172 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %22 = load ptr, ptr %memberidx.i172, align 8
  %memberidx1.i173 = getelementptr inbounds %Compiler, ptr %22, i64 0, i32 5
  %23 = load ptr, ptr %memberidx1.i173, align 8
  %memberidx2.i174 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx2.i174, align 4
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %common.ret, label %ifend15

common.ret:                                       ; preds = %ifend19, %ifend, %if.entry, %TypeChecker_error.exit, %if.entry110, %if.entry102, %ifend98, %if.entry87, %ifend80, %ifend69, %ifend61, %if.entry32, %if.entry26, %if.entry17, %if.entry9
  %common.ret.op = phi ptr [ %33, %if.entry9 ], [ %45, %if.entry17 ], [ %61, %if.entry26 ], [ %62, %if.entry32 ], [ %100, %ifend61 ], [ %108, %ifend69 ], [ %121, %ifend80 ], [ %125, %if.entry87 ], [ %136, %ifend98 ], [ %137, %if.entry102 ], [ %147, %if.entry110 ], [ null, %TypeChecker_error.exit ], [ null, %if.entry ], [ null, %ifend ], [ null, %ifend19 ]
  ret ptr %common.ret.op

ifend7:                                           ; preds = %if.entry
  %memberidx8 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  %26 = load ptr, ptr %memberidx8, align 8
  %27 = load i64, ptr %26, align 4
  %28 = icmp eq i64 %27, 20
  br i1 %28, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend7, %if.entry.i
  %.tr5.i = phi ptr [ %29, %if.entry.i ], [ %26, %ifend7 ]
  %memberidx1.i263 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %29 = load ptr, ptr %memberidx1.i263, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 20
  br i1 %31, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend7
  %.lcssa.i = phi i64 [ %27, %ifend7 ], [ %30, %if.entry.i ]
  %32 = icmp eq i64 %.lcssa.i, 11
  br i1 %32, label %if.entry9, label %is_object.exit.ifend_crit_edge

is_object.exit.ifend_crit_edge:                   ; preds = %is_object.exit
  %.pre = load ptr, ptr %memberidx1, align 8
  br label %ifend

if.entry9:                                        ; preds = %is_object.exit
  %33 = tail call fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %15, ptr %2)
  br label %common.ret

ifend15:                                          ; preds = %ifend
  %memberidx16 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  %34 = load ptr, ptr %memberidx16, align 8
  %35 = load i64, ptr %34, align 4
  %36 = icmp eq i64 %35, 20
  br i1 %36, label %if.entry.i266, label %is_object.exit268

if.entry.i266:                                    ; preds = %ifend15, %if.entry.i266
  %.tr5.i264 = phi ptr [ %37, %if.entry.i266 ], [ %34, %ifend15 ]
  %memberidx1.i265 = getelementptr inbounds %GenericType, ptr %.tr5.i264, i64 0, i32 3
  %37 = load ptr, ptr %memberidx1.i265, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 20
  br i1 %39, label %if.entry.i266, label %is_object.exit268

is_object.exit268:                                ; preds = %if.entry.i266, %ifend15
  %.lcssa.i267 = phi i64 [ %35, %ifend15 ], [ %38, %if.entry.i266 ]
  %40 = icmp eq i64 %.lcssa.i267, 11
  %41 = xor i1 %6, true
  %42 = and i1 %40, %41
  %43 = icmp ne i64 %4, 18
  %44 = and i1 %43, %42
  br i1 %44, label %if.entry17, label %ifend19

if.entry17:                                       ; preds = %is_object.exit268
  %45 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %21, ptr %2, ptr null)
  br label %common.ret

ifend19:                                          ; preds = %is_object.exit268
  %memberidx21 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %46 = load ptr, ptr %memberidx21, align 8
  %47 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %34, ptr %46)
  store ptr %47, ptr %right, align 8
  %48 = load ptr, ptr %memberidx.i172, align 8
  %memberidx1.i176 = getelementptr inbounds %Compiler, ptr %48, i64 0, i32 5
  %49 = load ptr, ptr %memberidx1.i176, align 8
  %memberidx2.i177 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %50 = load i64, ptr %memberidx2.i177, align 4
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend19
  %memberidx25 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 3
  %52 = load ptr, ptr %memberidx25, align 8
  %53 = load i64, ptr %52, align 4
  %54 = icmp eq i64 %53, 20
  br i1 %54, label %if.entry.i271, label %is_object.exit273

if.entry.i271:                                    ; preds = %ifend24, %if.entry.i271
  %.tr5.i269 = phi ptr [ %55, %if.entry.i271 ], [ %52, %ifend24 ]
  %memberidx1.i270 = getelementptr inbounds %GenericType, ptr %.tr5.i269, i64 0, i32 3
  %55 = load ptr, ptr %memberidx1.i270, align 8
  %56 = load i64, ptr %55, align 4
  %57 = icmp eq i64 %56, 20
  br i1 %57, label %if.entry.i271, label %is_object.exit273

is_object.exit273:                                ; preds = %if.entry.i271, %ifend24
  %.lcssa.i272 = phi i64 [ %53, %ifend24 ], [ %56, %if.entry.i271 ]
  %58 = icmp eq i64 %.lcssa.i272, 11
  %59 = icmp eq i64 %4, 18
  %60 = and i1 %59, %58
  br i1 %60, label %if.entry26, label %ifend31

if.entry26:                                       ; preds = %is_object.exit273
  %61 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %47, ptr %2, ptr %21)
  br label %common.ret

ifend31:                                          ; preds = %is_object.exit273
  br i1 %6, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend31
  %62 = tail call fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr %21, ptr %47, ptr %2)
  br label %common.ret

ifend34:                                          ; preds = %ifend31
  %memberidx35 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %63 = load i1, ptr %memberidx35, align 1
  %memberidx36 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 1
  %64 = load i1, ptr %memberidx36, align 1
  %65 = and i1 %63, %64
  %66 = load ptr, ptr %memberidx16, align 8
  %67 = load i64, ptr %66, align 4
  %68 = icmp eq i64 %67, 21
  %69 = icmp ne i64 %53, 21
  %70 = and i1 %69, %68
  br i1 %70, label %if.entry41, label %ifend43

if.entry41:                                       ; preds = %ifend34
  store ptr %52, ptr %memberidx16, align 8
  %.pre278 = load i64, ptr %52, align 4
  %.pre279 = load ptr, ptr %memberidx25, align 8
  %.pre280 = load i64, ptr %.pre279, align 4
  br label %ifend43

ifend43:                                          ; preds = %ifend34, %if.entry41
  %71 = phi i64 [ %53, %ifend34 ], [ %.pre280, %if.entry41 ]
  %72 = phi i64 [ %67, %ifend34 ], [ %.pre278, %if.entry41 ]
  %73 = add i64 %72, -1
  %74 = icmp ult i64 %73, 9
  %75 = add i64 %71, -1
  %76 = icmp ult i64 %75, 9
  %77 = and i1 %74, %76
  br i1 %77, label %if.entry48, label %else49

if.entry48:                                       ; preds = %ifend43
  %78 = icmp eq i64 %4, 6
  br i1 %78, label %if.entry51, label %ifend53

else49:                                           ; preds = %ifend43
  %79 = or i64 %71, %72
  %80 = icmp eq i64 %79, 0
  %81 = add i64 %4, -15
  %82 = icmp ult i64 %81, 2
  %or.cond = select i1 %80, i1 %82, i1 false
  br i1 %or.cond, label %if.entry87, label %ifend50.thread

ifend50:                                          ; preds = %ifend65
  %83 = add i64 %4, -7
  %84 = icmp ult i64 %83, 6
  br i1 %84, label %if.entry96, label %ifend93.thread

ifend93.thread:                                   ; preds = %ifend50
  %85 = icmp eq i64 %71, 6
  br label %ifend104

ifend50.thread:                                   ; preds = %else49
  %86 = add i64 %4, -7
  %87 = icmp ult i64 %86, 6
  br i1 %87, label %ifend98, label %ifend93

if.entry51:                                       ; preds = %if.entry48
  %88 = icmp ult i64 %73, 7
  br i1 %88, label %if.entry55, label %ifend57

ifend53:                                          ; preds = %if.entry48
  %89 = add i64 %4, -1
  %90 = icmp ult i64 %89, 10
  br i1 %90, label %if.entry63, label %ifend65

if.entry55:                                       ; preds = %if.entry51
  %91 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %91, align 4
  %92 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %92, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %92, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 3
  store ptr %91, ptr %memberidx1.i.i, align 8
  %93 = load i1, ptr %memberidx35, align 1
  store i1 %93, ptr %memberidx1.i.i.i, align 1
  store ptr %92, ptr %left, align 8
  %.pre287 = load ptr, ptr %memberidx25, align 8
  %.pre288 = load i64, ptr %.pre287, align 4
  %.pre289 = add i64 %.pre288, -1
  br label %ifend57

ifend57:                                          ; preds = %if.entry51, %if.entry55
  %.pre-phi = phi i64 [ %75, %if.entry51 ], [ %.pre289, %if.entry55 ]
  %94 = phi ptr [ %21, %if.entry51 ], [ %92, %if.entry55 ]
  %95 = icmp ult i64 %.pre-phi, 7
  br i1 %95, label %if.entry59, label %ifend61

if.entry59:                                       ; preds = %ifend57
  %96 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %96, align 4
  %97 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %97, align 4
  %memberidx.i.i.i181 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i181, align 4
  %memberidx1.i.i.i182 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 1
  %memberidx.i.i183 = getelementptr inbounds %TypeCastExpression, ptr %97, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i183, align 8
  %memberidx1.i.i184 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 3
  store ptr %96, ptr %memberidx1.i.i184, align 8
  %98 = load i1, ptr %memberidx36, align 1
  store i1 %98, ptr %memberidx1.i.i.i182, align 1
  store ptr %97, ptr %right, align 8
  br label %ifend61

ifend61:                                          ; preds = %ifend57, %if.entry59
  %99 = phi ptr [ %47, %ifend57 ], [ %97, %if.entry59 ]
  %100 = tail call ptr @malloc(i32 49)
  %memberidx62 = getelementptr inbounds %Expression, ptr %94, i64 0, i32 3
  %101 = load ptr, ptr %memberidx62, align 8
  store i64 8, ptr %100, align 4
  %memberidx.i.i187 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i187, align 4
  %memberidx1.i.i188 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 1
  %memberidx.i189 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 4
  store ptr %94, ptr %memberidx.i189, align 8
  %memberidx1.i190 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 5
  store i64 6, ptr %memberidx1.i190, align 4
  %memberidx2.i191 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 6
  store ptr %99, ptr %memberidx2.i191, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %100, i64 0, i32 3
  store ptr %101, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i188, align 1
  br label %common.ret

if.entry63:                                       ; preds = %ifend53
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %102 = load ptr, ptr %left, align 8
  %memberidx66 = getelementptr inbounds %Expression, ptr %102, i64 0, i32 3
  %103 = load ptr, ptr %memberidx66, align 8
  %104 = icmp ugt i64 %4, 6
  br i1 %104, label %if.entry67, label %ifend69

ifend65:                                          ; preds = %ifend53
  %105 = add i64 %4, -13
  %106 = icmp ult i64 %105, 5
  br i1 %106, label %if.entry70, label %ifend50

if.entry67:                                       ; preds = %if.entry63
  %107 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %107, align 4
  br label %ifend69

ifend69:                                          ; preds = %if.entry63, %if.entry67
  %exp_type.0 = phi ptr [ %107, %if.entry67 ], [ %103, %if.entry63 ]
  %108 = tail call ptr @malloc(i32 49)
  %109 = load ptr, ptr %right, align 8
  store i64 8, ptr %108, align 4
  %memberidx.i.i192 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i192, align 4
  %memberidx1.i.i193 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 1
  %memberidx.i194 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 4
  store ptr %102, ptr %memberidx.i194, align 8
  %memberidx1.i195 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i195, align 4
  %memberidx2.i196 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 6
  store ptr %109, ptr %memberidx2.i196, align 8
  %memberidx3.i197 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 3
  store ptr %exp_type.0, ptr %memberidx3.i197, align 8
  store i1 %65, ptr %memberidx1.i.i193, align 1
  br label %common.ret

if.entry70:                                       ; preds = %ifend65
  %110 = and i64 %72, -2
  %111 = icmp eq i64 %110, 8
  br i1 %111, label %if.entry74, label %ifend76

if.entry74:                                       ; preds = %if.entry70
  %112 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %112, align 4
  %memberidx.i199 = getelementptr inbounds %IntType, ptr %112, i64 0, i32 1
  store i1 true, ptr %memberidx.i199, align 1
  %113 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %113, align 4
  %memberidx.i.i.i200 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i200, align 4
  %memberidx1.i.i.i201 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 1
  %memberidx.i.i202 = getelementptr inbounds %TypeCastExpression, ptr %113, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i202, align 8
  %memberidx1.i.i203 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 3
  store ptr %112, ptr %memberidx1.i.i203, align 8
  %114 = load i1, ptr %memberidx35, align 1
  store i1 %114, ptr %memberidx1.i.i.i201, align 1
  store ptr %113, ptr %left, align 8
  %.pre285 = load ptr, ptr %memberidx25, align 8
  %.pre286 = load i64, ptr %.pre285, align 4
  br label %ifend76

ifend76:                                          ; preds = %if.entry70, %if.entry74
  %115 = phi i64 [ %71, %if.entry70 ], [ %.pre286, %if.entry74 ]
  %116 = and i64 %115, -2
  %117 = icmp eq i64 %116, 8
  br i1 %117, label %if.entry78, label %ifend80

if.entry78:                                       ; preds = %ifend76
  %118 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %118, align 4
  %memberidx.i206 = getelementptr inbounds %IntType, ptr %118, i64 0, i32 1
  store i1 true, ptr %memberidx.i206, align 1
  %119 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %119, align 4
  %memberidx.i.i.i207 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i207, align 4
  %memberidx1.i.i.i208 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  %memberidx.i.i209 = getelementptr inbounds %TypeCastExpression, ptr %119, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i209, align 8
  %memberidx1.i.i210 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  store ptr %118, ptr %memberidx1.i.i210, align 8
  %120 = load i1, ptr %memberidx36, align 1
  store i1 %120, ptr %memberidx1.i.i.i208, align 1
  store ptr %119, ptr %right, align 8
  br label %ifend80

ifend80:                                          ; preds = %ifend76, %if.entry78
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %121 = tail call ptr @malloc(i32 49)
  %122 = load ptr, ptr %left, align 8
  %123 = load ptr, ptr %right, align 8
  %memberidx81 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %124 = load ptr, ptr %memberidx81, align 8
  store i64 8, ptr %121, align 4
  %memberidx.i.i213 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i213, align 4
  %memberidx1.i.i214 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 1
  %memberidx.i215 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 4
  store ptr %122, ptr %memberidx.i215, align 8
  %memberidx1.i216 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i216, align 4
  %memberidx2.i217 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 6
  store ptr %123, ptr %memberidx2.i217, align 8
  %memberidx3.i218 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 3
  store ptr %124, ptr %memberidx3.i218, align 8
  store i1 %65, ptr %memberidx1.i.i214, align 1
  br label %common.ret

if.entry87:                                       ; preds = %else49
  %125 = tail call ptr @malloc(i32 49)
  %126 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %125, align 4
  %memberidx.i.i220 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i220, align 4
  %memberidx1.i.i221 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 1
  %memberidx.i222 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 4
  store ptr %21, ptr %memberidx.i222, align 8
  %memberidx1.i223 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i223, align 4
  %memberidx2.i224 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i224, align 8
  %memberidx3.i225 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 3
  store ptr %126, ptr %memberidx3.i225, align 8
  store i1 %65, ptr %memberidx1.i.i221, align 1
  br label %common.ret

ifend93:                                          ; preds = %ifend50.thread
  %127 = add i64 %4, -1
  %128 = icmp ult i64 %127, 2
  %129 = icmp eq i64 %72, 13
  %130 = and i1 %128, %129
  %131 = icmp eq i64 %71, 6
  %132 = and i1 %130, %131
  br i1 %132, label %if.entry102, label %ifend104

if.entry96:                                       ; preds = %ifend50
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %.pre283 = load ptr, ptr %left, align 8
  %.pre284 = load ptr, ptr %right, align 8
  br label %ifend98

ifend98:                                          ; preds = %ifend50.thread, %if.entry96
  %133 = phi ptr [ %47, %ifend50.thread ], [ %.pre284, %if.entry96 ]
  %134 = phi ptr [ %21, %ifend50.thread ], [ %.pre283, %if.entry96 ]
  %135 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %135, align 4
  %136 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %136, align 4
  %memberidx.i.i227 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i227, align 4
  %memberidx1.i.i228 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 1
  %memberidx.i229 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 4
  store ptr %134, ptr %memberidx.i229, align 8
  %memberidx1.i230 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i230, align 4
  %memberidx2.i231 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 6
  store ptr %133, ptr %memberidx2.i231, align 8
  %memberidx3.i232 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 3
  store ptr %135, ptr %memberidx3.i232, align 8
  store i1 %65, ptr %memberidx1.i.i228, align 1
  br label %common.ret

if.entry102:                                      ; preds = %ifend93
  %137 = tail call ptr @malloc(i32 49)
  %138 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %137, align 4
  %memberidx.i.i234 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i234, align 4
  %memberidx1.i.i235 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 1
  %memberidx.i236 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 4
  store ptr %21, ptr %memberidx.i236, align 8
  %memberidx1.i237 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i237, align 4
  %memberidx2.i238 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i238, align 8
  %memberidx3.i239 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 3
  store ptr %138, ptr %memberidx3.i239, align 8
  store i1 false, ptr %memberidx1.i.i235, align 1
  br label %common.ret

ifend104:                                         ; preds = %ifend93.thread, %ifend93
  %139 = phi i1 [ %85, %ifend93.thread ], [ %131, %ifend93 ]
  %140 = icmp eq i64 %4, 31
  %141 = icmp eq i64 %72, 6
  %142 = and i1 %140, %141
  %143 = and i1 %142, %139
  br i1 %143, label %if.entry110, label %ifend112

if.entry110:                                      ; preds = %ifend104
  %144 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %144, ptr noundef nonnull align 8 dereferenceable(5) @181, i64 5, i1 false)
  %145 = tail call ptr @malloc(i32 24)
  store ptr %144, ptr %145, align 8
  %memberidx1.i.i241 = getelementptr inbounds %String, ptr %145, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i241, align 4
  %memberidx2.i.i242 = getelementptr inbounds %String, ptr %145, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i242, align 4
  %146 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %145)
  %147 = tail call ptr @malloc(i32 42)
  %148 = tail call ptr @malloc(i32 24)
  %memberidx.i243 = getelementptr inbounds %Array_Expression_, ptr %148, i64 0, i32 1
  store i64 0, ptr %memberidx.i243, align 4
  %memberidx1.i244 = getelementptr inbounds %Array_Expression_, ptr %148, i64 0, i32 2
  store i64 16, ptr %memberidx1.i244, align 4
  %149 = tail call ptr @malloc(i32 128)
  store ptr %149, ptr %148, align 8
  store ptr %21, ptr %149, align 8
  %150 = getelementptr inbounds ptr, ptr %149, i64 1
  store ptr %47, ptr %150, align 8
  store i64 2, ptr %memberidx.i243, align 4
  store i64 8, ptr %147, align 4
  %memberidx.i.i245 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i245, align 4
  %memberidx1.i.i246 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i246, align 1
  %memberidx.i247 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 6
  store ptr %146, ptr %memberidx.i247, align 8
  %memberidx1.i248 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 5
  store i1 true, ptr %memberidx1.i248, align 1
  %memberidx2.i249 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 4
  store ptr %148, ptr %memberidx2.i249, align 8
  %memberidx3.i250 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 3
  store ptr %146, ptr %memberidx3.i250, align 8
  br label %common.ret

ifend112:                                         ; preds = %ifend104
  %151 = tail call fastcc ptr @dump_bin_op(i64 %4)
  %memberidx.i251 = getelementptr inbounds %String, ptr %151, i64 0, i32 1
  %152 = load i64, ptr %memberidx.i251, align 4
  %153 = trunc i64 %152 to i32
  %154 = add i32 %153, 1
  %155 = tail call ptr @malloc(i32 %154)
  %156 = load ptr, ptr %151, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %155, ptr align 8 %156, i64 %152, i1 false)
  %157 = getelementptr inbounds i8, ptr %155, i64 %152
  store i8 0, ptr %157, align 1
  %158 = load ptr, ptr %memberidx16, align 8
  %159 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %158)
  %memberidx.i252 = getelementptr inbounds %String, ptr %159, i64 0, i32 1
  %160 = load i64, ptr %memberidx.i252, align 4
  %161 = trunc i64 %160 to i32
  %162 = add i32 %161, 1
  %163 = tail call ptr @malloc(i32 %162)
  %164 = load ptr, ptr %159, align 8
  %165 = load i64, ptr %memberidx.i252, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %163, ptr align 8 %164, i64 %165, i1 false)
  %166 = getelementptr inbounds i8, ptr %163, i64 %165
  store i8 0, ptr %166, align 1
  %167 = load ptr, ptr %memberidx25, align 8
  %168 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %167)
  %memberidx.i253 = getelementptr inbounds %String, ptr %168, i64 0, i32 1
  %169 = load i64, ptr %memberidx.i253, align 4
  %170 = trunc i64 %169 to i32
  %171 = add i32 %170, 1
  %172 = tail call ptr @malloc(i32 %171)
  %173 = load ptr, ptr %168, align 8
  %174 = load i64, ptr %memberidx.i253, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %172, ptr align 8 %173, i64 %174, i1 false)
  %175 = getelementptr inbounds i8, ptr %172, i64 %174
  store i8 0, ptr %175, align 1
  %176 = alloca ptr, align 8
  %177 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %176, ptr nonnull @182, ptr %155, ptr %163, ptr %172)
  %178 = load ptr, ptr %176, align 8
  %179 = tail call ptr @malloc(i32 24)
  store ptr %178, ptr %179, align 8
  %memberidx1.i254 = getelementptr inbounds %String, ptr %179, i64 0, i32 1
  store i64 %177, ptr %memberidx1.i254, align 4
  %memberidx2.i255 = getelementptr inbounds %String, ptr %179, i64 0, i32 2
  store i64 %177, ptr %memberidx2.i255, align 4
  tail call void @free(ptr %155)
  tail call void @free(ptr %163)
  tail call void @free(ptr %172)
  %180 = load ptr, ptr %2, align 8
  %181 = load ptr, ptr %memberidx.i172, align 8
  %memberidx1.i257 = getelementptr inbounds %Compiler, ptr %181, i64 0, i32 5
  %182 = load ptr, ptr %memberidx1.i257, align 8
  %183 = call ptr @malloc(i32 24)
  store i64 5, ptr %183, align 4
  %memberidx1.i.i258 = getelementptr inbounds %FloError, ptr %183, i64 0, i32 2
  store ptr %180, ptr %memberidx1.i.i258, align 8
  %memberidx2.i.i259 = getelementptr inbounds %FloError, ptr %183, i64 0, i32 1
  store ptr %179, ptr %memberidx2.i.i259, align 8
  %memberidx.i.i260 = getelementptr inbounds %Array_FloError_, ptr %182, i64 0, i32 1
  %184 = load i64, ptr %memberidx.i.i260, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %182, i64 0, i32 2
  %185 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %184, %185
  br i1 %.not.i.i, label %ifend112.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

ifend112.TypeChecker_error.exit_crit_edge:        ; preds = %ifend112
  %.pre282 = load ptr, ptr %182, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %ifend112
  %186 = shl nuw i64 %185, 1
  store i64 %186, ptr %memberidx1.i2.i, align 4
  %187 = load ptr, ptr %182, align 8
  %188 = shl i64 %185, 4
  %189 = call ptr @realloc(ptr %187, i64 %188)
  store ptr %189, ptr %182, align 8
  %.pre281 = load i64, ptr %memberidx.i.i260, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %ifend112.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %190 = phi ptr [ %.pre282, %ifend112.TypeChecker_error.exit_crit_edge ], [ %189, %if.entry.i.i ]
  %191 = phi i64 [ %184, %ifend112.TypeChecker_error.exit_crit_edge ], [ %.pre281, %if.entry.i.i ]
  %192 = add nsw i64 %191, 1
  store i64 %192, ptr %memberidx.i.i260, align 4
  %193 = getelementptr inbounds ptr, ptr %190, i64 %191
  store ptr %183, ptr %193, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %TypeChecker_error.exit104, %TypeChecker_error.exit118, %TypeChecker_get_func_args_from_expression.exit, %2, %ifend22, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %16, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %99, %ifend22 ], [ null, %2 ], [ null, %TypeChecker_get_func_args_from_expression.exit ], [ null, %TypeChecker_error.exit118 ], [ null, %TypeChecker_error.exit104 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %memberidx1, align 4
  %11 = icmp eq i64 %10, 18
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = load i64, ptr %12, align 4
  %14 = icmp eq i64 %13, 21
  %15 = and i1 %11, %14
  br i1 %15, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %ifend
  %16 = tail call fastcc ptr @TypeChecker_check_intrinsic_call(ptr nonnull %0, ptr nonnull %5, ptr nonnull %1)
  br label %common.ret

ifend6:                                           ; preds = %ifend
  %.not = icmp eq i64 %13, 16
  br i1 %.not, label %ifend11, label %if.entry9

if.entry9:                                        ; preds = %ifend6
  %17 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %12)
  %memberidx.i70 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i70, align 4
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, 1
  %21 = tail call ptr @malloc(i32 %20)
  %22 = load ptr, ptr %17, align 8
  %23 = load i64, ptr %memberidx.i70, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, ptr %21, i64 %23
  store i8 0, ptr %24, align 1
  %25 = alloca ptr, align 8
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %25, ptr nonnull @214, ptr %21)
  %27 = load ptr, ptr %25, align 8
  %28 = tail call ptr @malloc(i32 24)
  store ptr %27, ptr %28, align 8
  %memberidx1.i71 = getelementptr inbounds %String, ptr %28, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i71, align 4
  %memberidx2.i72 = getelementptr inbounds %String, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx2.i72, align 4
  tail call void @free(ptr %21)
  %29 = load ptr, ptr %memberidx, align 8
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i74 = getelementptr inbounds %Compiler, ptr %31, i64 0, i32 5
  %32 = load ptr, ptr %memberidx1.i74, align 8
  %33 = call ptr @malloc(i32 24)
  store i64 5, ptr %33, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %33, i64 0, i32 2
  store ptr %30, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %33, i64 0, i32 1
  store ptr %28, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 2
  %35 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %34, %35
  br i1 %.not.i.i, label %if.entry9.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry9.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry9
  %.pre9 = load ptr, ptr %32, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry9
  %36 = shl nuw i64 %35, 1
  store i64 %36, ptr %memberidx1.i2.i, align 4
  %37 = load ptr, ptr %32, align 8
  %38 = shl i64 %35, 4
  %39 = call ptr @realloc(ptr %37, i64 %38)
  store ptr %39, ptr %32, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry9.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %40 = phi ptr [ %.pre9, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %39, %if.entry.i.i ]
  %41 = phi i64 [ %34, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %42 = add nsw i64 %41, 1
  store i64 %42, ptr %memberidx.i.i, align 4
  %43 = getelementptr inbounds ptr, ptr %40, i64 %41
  store ptr %33, ptr %43, align 8
  br label %common.ret

ifend11:                                          ; preds = %ifend6
  switch i64 %10, label %TypeChecker_get_func_args_from_expression.exit [
    i64 8, label %if.entry.i
    i64 13, label %if.entry9.i
  ]

if.entry.i:                                       ; preds = %ifend11
  %memberidx1.i76 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %44 = load ptr, ptr %memberidx1.i76, align 8
  %45 = load i64, ptr %44, align 4
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %if.entry3.i, label %TypeChecker_get_func_args_from_expression.exit

if.entry3.i:                                      ; preds = %if.entry.i
  %47 = load ptr, ptr %0, align 8
  %48 = load ptr, ptr %47, align 8
  %memberidx1.i.i77 = getelementptr inbounds %VarId, ptr %44, i64 0, i32 1
  %49 = load i64, ptr %memberidx1.i.i77, align 4
  %50 = load ptr, ptr %48, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %49
  %52 = load ptr, ptr %51, align 8
  %memberidx2.i.i78 = getelementptr inbounds %Module, ptr %52, i64 0, i32 4
  %53 = load ptr, ptr %memberidx2.i.i78, align 8
  %memberidx3.i.i = getelementptr inbounds %VarId, ptr %44, i64 0, i32 2
  %54 = load i64, ptr %memberidx3.i.i, align 4
  %55 = load ptr, ptr %53, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 %54
  %57 = load ptr, ptr %56, align 8
  %memberidx7.i = getelementptr inbounds %Function, ptr %57, i64 0, i32 2
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

if.entry9.i:                                      ; preds = %ifend11
  %memberidx12.i = getelementptr inbounds %MemberExpression, ptr %5, i64 0, i32 5
  %58 = load ptr, ptr %memberidx12.i, align 8
  %59 = load ptr, ptr %0, align 8
  %memberidx.i.i.i79 = getelementptr inbounds %PropId, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i.i.i79, align 8
  %61 = load ptr, ptr %59, align 8
  %62 = load i64, ptr %60, align 4
  %63 = load ptr, ptr %61, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %65, i64 0, i32 3
  %66 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %60, i64 0, i32 2
  %67 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %68 = load ptr, ptr %66, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  %memberidx.i.i80 = getelementptr inbounds %Class, ptr %70, i64 0, i32 5
  %71 = load ptr, ptr %memberidx.i.i80, align 8
  %memberidx1.i20.i = getelementptr inbounds %PropId, ptr %58, i64 0, i32 2
  %72 = load i64, ptr %memberidx1.i20.i, align 4
  %73 = load ptr, ptr %71, align 8
  %74 = getelementptr inbounds ptr, ptr %73, i64 %72
  %75 = load ptr, ptr %74, align 8
  %memberidx14.i = getelementptr inbounds %ClassMethod, ptr %75, i64 0, i32 6
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

TypeChecker_get_func_args_from_expression.exit.sink.split: ; preds = %if.entry9.i, %if.entry3.i
  %memberidx7.i.sink = phi ptr [ %memberidx7.i, %if.entry3.i ], [ %memberidx14.i, %if.entry9.i ]
  %76 = load ptr, ptr %memberidx7.i.sink, align 8
  br label %TypeChecker_get_func_args_from_expression.exit

TypeChecker_get_func_args_from_expression.exit:   ; preds = %TypeChecker_get_func_args_from_expression.exit.sink.split, %ifend11, %if.entry.i
  %common.ret.op.i = phi ptr [ null, %if.entry.i ], [ null, %ifend11 ], [ %76, %TypeChecker_get_func_args_from_expression.exit.sink.split ]
  %memberidx16 = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 4
  %77 = load ptr, ptr %memberidx16, align 8
  %78 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr nonnull %12, ptr %common.ret.op.i, ptr %77)
  %79 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i82 = getelementptr inbounds %Compiler, ptr %79, i64 0, i32 5
  %80 = load ptr, ptr %memberidx1.i82, align 8
  %memberidx2.i83 = getelementptr inbounds %Array_FloError_, ptr %80, i64 0, i32 1
  %81 = load i64, ptr %memberidx2.i83, align 4
  %82 = icmp sgt i64 %81, 0
  br i1 %82, label %common.ret, label %ifend19

ifend19:                                          ; preds = %TypeChecker_get_func_args_from_expression.exit
  %memberidx.i84 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i85 = getelementptr inbounds %Array_Type_, ptr %83, i64 0, i32 1
  %84 = load i64, ptr %memberidx1.i85, align 4
  %memberidx2.i86 = getelementptr inbounds %Array_Expression_, ptr %78, i64 0, i32 1
  %85 = load i64, ptr %memberidx2.i86, align 4
  %.not.i = icmp eq i64 %84, %85
  br i1 %.not.i, label %for.cond.i.preheader, label %if.entry23

for.cond.i.preheader:                             ; preds = %ifend19
  %86 = icmp sgt i64 %84, 0
  br i1 %86, label %for.body.i, label %ifend22

for.body.i:                                       ; preds = %for.cond.i.preheader, %ifend8.i
  %i.0.i7 = phi i64 [ %96, %ifend8.i ], [ 0, %for.cond.i.preheader ]
  %87 = load ptr, ptr %memberidx.i84, align 8
  %88 = load ptr, ptr %87, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %i.0.i7
  %90 = load ptr, ptr %89, align 8
  %91 = load ptr, ptr %78, align 8
  %92 = getelementptr inbounds ptr, ptr %91, i64 %i.0.i7
  %93 = load ptr, ptr %92, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %93, i64 0, i32 3
  %94 = load ptr, ptr %memberidx5.i, align 8
  %95 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %90, ptr %94)
  br i1 %95, label %ifend8.i, label %else24

ifend8.i:                                         ; preds = %for.body.i
  %96 = add nuw nsw i64 %i.0.i7, 1
  %97 = load i64, ptr %memberidx2.i86, align 4
  %98 = icmp slt i64 %96, %97
  br i1 %98, label %for.body.i, label %ifend22

ifend22:                                          ; preds = %ifend8.i, %for.cond.i.preheader
  %99 = tail call ptr @malloc(i32 41)
  %memberidx34 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 2
  %100 = load ptr, ptr %memberidx34, align 8
  store i64 8, ptr %99, align 4
  %memberidx.i.i88 = getelementptr inbounds %Expression, ptr %99, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i88, align 4
  %memberidx1.i.i89 = getelementptr inbounds %Expression, ptr %99, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i89, align 1
  %memberidx.i90 = getelementptr inbounds %CallExpression, ptr %99, i64 0, i32 4
  store ptr %5, ptr %memberidx.i90, align 8
  %memberidx1.i91 = getelementptr inbounds %CallExpression, ptr %99, i64 0, i32 5
  store ptr %78, ptr %memberidx1.i91, align 8
  %memberidx2.i92 = getelementptr inbounds %Expression, ptr %99, i64 0, i32 3
  store ptr %100, ptr %memberidx2.i92, align 8
  br label %common.ret

if.entry23:                                       ; preds = %ifend19
  %101 = alloca ptr, align 8
  %102 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %101, ptr nonnull @215, i64 %84, i64 %85)
  %103 = load ptr, ptr %101, align 8
  %104 = tail call ptr @malloc(i32 24)
  store ptr %103, ptr %104, align 8
  %memberidx1.i93 = getelementptr inbounds %String, ptr %104, i64 0, i32 1
  store i64 %102, ptr %memberidx1.i93, align 4
  %memberidx2.i94 = getelementptr inbounds %String, ptr %104, i64 0, i32 2
  store i64 %102, ptr %memberidx2.i94, align 4
  %105 = load ptr, ptr %1, align 8
  %106 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i96 = getelementptr inbounds %Compiler, ptr %106, i64 0, i32 5
  %107 = load ptr, ptr %memberidx1.i96, align 8
  %108 = call ptr @malloc(i32 24)
  store i64 4, ptr %108, align 4
  %memberidx1.i.i97 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 2
  store ptr %105, ptr %memberidx1.i.i97, align 8
  %memberidx2.i.i98 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 1
  store ptr %104, ptr %memberidx2.i.i98, align 8
  %memberidx.i.i99 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %109 = load i64, ptr %memberidx.i.i99, align 4
  %memberidx1.i2.i100 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 2
  %110 = load i64, ptr %memberidx1.i2.i100, align 4
  %.not.i.i101 = icmp slt i64 %109, %110
  br i1 %.not.i.i101, label %if.entry23.TypeChecker_error.exit104_crit_edge, label %if.entry.i.i103

if.entry23.TypeChecker_error.exit104_crit_edge:   ; preds = %if.entry23
  %.pre11 = load ptr, ptr %107, align 8
  br label %TypeChecker_error.exit104

if.entry.i.i103:                                  ; preds = %if.entry23
  %111 = shl nuw i64 %110, 1
  store i64 %111, ptr %memberidx1.i2.i100, align 4
  %112 = load ptr, ptr %107, align 8
  %113 = shl i64 %110, 4
  %114 = call ptr @realloc(ptr %112, i64 %113)
  store ptr %114, ptr %107, align 8
  %.pre10 = load i64, ptr %memberidx.i.i99, align 4
  br label %TypeChecker_error.exit104

TypeChecker_error.exit104:                        ; preds = %if.entry23.TypeChecker_error.exit104_crit_edge, %if.entry.i.i103
  %115 = phi ptr [ %.pre11, %if.entry23.TypeChecker_error.exit104_crit_edge ], [ %114, %if.entry.i.i103 ]
  %116 = phi i64 [ %109, %if.entry23.TypeChecker_error.exit104_crit_edge ], [ %.pre10, %if.entry.i.i103 ]
  %117 = add nsw i64 %116, 1
  store i64 %117, ptr %memberidx.i.i99, align 4
  %118 = getelementptr inbounds ptr, ptr %115, i64 %116
  store ptr %108, ptr %118, align 8
  br label %common.ret

else24:                                           ; preds = %for.body.i
  %119 = load ptr, ptr %memberidx.i84, align 8
  %120 = load ptr, ptr %119, align 8
  %121 = getelementptr inbounds ptr, ptr %120, i64 %i.0.i7
  %122 = load ptr, ptr %121, align 8
  %123 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %122)
  %memberidx.i105 = getelementptr inbounds %String, ptr %123, i64 0, i32 1
  %124 = load i64, ptr %memberidx.i105, align 4
  %125 = trunc i64 %124 to i32
  %126 = add i32 %125, 1
  %127 = tail call ptr @malloc(i32 %126)
  %128 = load ptr, ptr %123, align 8
  %129 = load i64, ptr %memberidx.i105, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %127, ptr align 8 %128, i64 %129, i1 false)
  %130 = getelementptr inbounds i8, ptr %127, i64 %129
  store i8 0, ptr %130, align 1
  %131 = load ptr, ptr %78, align 8
  %132 = getelementptr inbounds ptr, ptr %131, i64 %i.0.i7
  %133 = load ptr, ptr %132, align 8
  %memberidx31 = getelementptr inbounds %Expression, ptr %133, i64 0, i32 3
  %134 = load ptr, ptr %memberidx31, align 8
  %135 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %134)
  %memberidx.i106 = getelementptr inbounds %String, ptr %135, i64 0, i32 1
  %136 = load i64, ptr %memberidx.i106, align 4
  %137 = trunc i64 %136 to i32
  %138 = add i32 %137, 1
  %139 = tail call ptr @malloc(i32 %138)
  %140 = load ptr, ptr %135, align 8
  %141 = load i64, ptr %memberidx.i106, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %139, ptr align 8 %140, i64 %141, i1 false)
  %142 = getelementptr inbounds i8, ptr %139, i64 %141
  store i8 0, ptr %142, align 1
  %143 = alloca ptr, align 8
  %144 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %143, ptr nonnull @216, ptr %127, ptr %139)
  %145 = load ptr, ptr %143, align 8
  %146 = tail call ptr @malloc(i32 24)
  store ptr %145, ptr %146, align 8
  %memberidx1.i107 = getelementptr inbounds %String, ptr %146, i64 0, i32 1
  store i64 %144, ptr %memberidx1.i107, align 4
  %memberidx2.i108 = getelementptr inbounds %String, ptr %146, i64 0, i32 2
  store i64 %144, ptr %memberidx2.i108, align 4
  tail call void @free(ptr %127)
  tail call void @free(ptr %139)
  %147 = load ptr, ptr %memberidx16, align 8
  %148 = load ptr, ptr %147, align 8
  %149 = getelementptr inbounds ptr, ptr %148, i64 %i.0.i7
  %150 = load ptr, ptr %149, align 8
  %151 = load ptr, ptr %150, align 8
  %152 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i110 = getelementptr inbounds %Compiler, ptr %152, i64 0, i32 5
  %153 = load ptr, ptr %memberidx1.i110, align 8
  %154 = call ptr @malloc(i32 24)
  store i64 5, ptr %154, align 4
  %memberidx1.i.i111 = getelementptr inbounds %FloError, ptr %154, i64 0, i32 2
  store ptr %151, ptr %memberidx1.i.i111, align 8
  %memberidx2.i.i112 = getelementptr inbounds %FloError, ptr %154, i64 0, i32 1
  store ptr %146, ptr %memberidx2.i.i112, align 8
  %memberidx.i.i113 = getelementptr inbounds %Array_FloError_, ptr %153, i64 0, i32 1
  %155 = load i64, ptr %memberidx.i.i113, align 4
  %memberidx1.i2.i114 = getelementptr inbounds %Array_FloError_, ptr %153, i64 0, i32 2
  %156 = load i64, ptr %memberidx1.i2.i114, align 4
  %.not.i.i115 = icmp slt i64 %155, %156
  br i1 %.not.i.i115, label %else24.TypeChecker_error.exit118_crit_edge, label %if.entry.i.i117

else24.TypeChecker_error.exit118_crit_edge:       ; preds = %else24
  %.pre13 = load ptr, ptr %153, align 8
  br label %TypeChecker_error.exit118

if.entry.i.i117:                                  ; preds = %else24
  %157 = shl nuw i64 %156, 1
  store i64 %157, ptr %memberidx1.i2.i114, align 4
  %158 = load ptr, ptr %153, align 8
  %159 = shl i64 %156, 4
  %160 = call ptr @realloc(ptr %158, i64 %159)
  store ptr %160, ptr %153, align 8
  %.pre12 = load i64, ptr %memberidx.i.i113, align 4
  br label %TypeChecker_error.exit118

TypeChecker_error.exit118:                        ; preds = %else24.TypeChecker_error.exit118_crit_edge, %if.entry.i.i117
  %161 = phi ptr [ %.pre13, %else24.TypeChecker_error.exit118_crit_edge ], [ %160, %if.entry.i.i117 ]
  %162 = phi i64 [ %155, %else24.TypeChecker_error.exit118_crit_edge ], [ %.pre12, %if.entry.i.i117 ]
  %163 = add nsw i64 %162, 1
  store i64 %163, ptr %memberidx.i.i113, align 4
  %164 = getelementptr inbounds ptr, ptr %161, i64 %162
  store ptr %154, ptr %164, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_type(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %ifend65 [
    i64 13, label %if.entry
    i64 14, label %if.entry7
    i64 16, label %if.entry42
    i64 15, label %if.entry51
    i64 17, label %if.entry63
  ]

common.ret:                                       ; preds = %ifend128, %ifend142, %for.end134, %TypeChecker_error.exit, %if.entry121, %if.entry118, %if.entry115, %if.entry112, %if.entry109, %if.entry106, %if.entry103, %if.entry100, %if.entry97, %if.entry94, %if.entry91, %if.entry88, %if.entry85, %if.entry82, %if.entry79, %if.entry76, %if.entry73, %if.entry70, %ifend65, %for.end59, %for.end, %ifend37, %TypeChecker_error.exit500, %TypeChecker_error.exit488, %TypeChecker_error.exit476, %TypeChecker_error.exit464, %if.entry11, %if.entry
  %common.ret.op = phi ptr [ %4, %if.entry ], [ %14, %if.entry11 ], [ null, %TypeChecker_error.exit464 ], [ null, %TypeChecker_error.exit476 ], [ null, %TypeChecker_error.exit488 ], [ null, %TypeChecker_error.exit500 ], [ %96, %ifend37 ], [ %120, %for.end ], [ %121, %for.end59 ], [ %153, %ifend65 ], [ %154, %if.entry70 ], [ %161, %if.entry73 ], [ %168, %if.entry76 ], [ %175, %if.entry79 ], [ %182, %if.entry82 ], [ %189, %if.entry85 ], [ %196, %if.entry88 ], [ %203, %if.entry91 ], [ %210, %if.entry94 ], [ %217, %if.entry97 ], [ %224, %if.entry100 ], [ %231, %if.entry103 ], [ %238, %if.entry106 ], [ %245, %if.entry109 ], [ %252, %if.entry112 ], [ %259, %if.entry115 ], [ %266, %if.entry118 ], [ %273, %if.entry121 ], [ null, %TypeChecker_error.exit ], [ null, %for.end134 ], [ %304, %ifend142 ], [ %278, %ifend128 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 16)
  %memberidx5 = getelementptr inbounds %PointerTypeNode, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %memberidx5, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %5)
  store i64 13, ptr %4, align 4
  %memberidx.i444 = getelementptr inbounds %PointerType, ptr %4, i64 0, i32 1
  store ptr %6, ptr %memberidx.i444, align 8
  br label %common.ret

if.entry7:                                        ; preds = %2
  %7 = alloca %IntType, align 8
  store i64 6, ptr %7, align 8
  %memberidx.i445 = getelementptr inbounds %IntType, ptr %7, i64 0, i32 1
  store i1 false, ptr %memberidx.i445, align 8
  %memberidx10 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %memberidx10, align 8
  %9 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %7, ptr %8)
  %memberidx.i450 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %10 = load ptr, ptr %memberidx.i450, align 8
  %memberidx1.i451 = getelementptr inbounds %Compiler, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx1.i451, align 8
  %memberidx2.i452 = getelementptr inbounds %Array_FloError_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx2.i452, align 4
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %if.entry7
  %14 = call ptr @malloc(i32 8)
  store i64 21, ptr %14, align 4
  br label %common.ret

ifend13:                                          ; preds = %if.entry7
  %memberidx14 = getelementptr inbounds %Expression, ptr %9, i64 0, i32 3
  %15 = load ptr, ptr %memberidx14, align 8
  %16 = load i64, ptr %15, align 4
  %17 = add i64 %16, -1
  %18 = icmp ult i64 %17, 7
  br i1 %18, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %19 = call ptr @malloc(i32 23)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(23) %19, ptr noundef nonnull align 8 dereferenceable(23) @158, i64 23, i1 false)
  %20 = call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i.i453 = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 23, ptr %memberidx1.i.i453, align 4
  %memberidx2.i.i454 = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 23, ptr %memberidx2.i.i454, align 4
  %21 = load ptr, ptr %memberidx10, align 8
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %memberidx.i450, align 8
  %memberidx1.i456 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx1.i456, align 8
  %25 = call ptr @malloc(i32 24)
  store i64 4, ptr %25, align 4
  %memberidx1.i.i457 = getelementptr inbounds %FloError, ptr %25, i64 0, i32 2
  store ptr %22, ptr %memberidx1.i.i457, align 8
  %memberidx2.i.i458 = getelementptr inbounds %FloError, ptr %25, i64 0, i32 1
  store ptr %20, ptr %memberidx2.i.i458, align 8
  %memberidx.i.i459 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i.i459, align 4
  %memberidx1.i2.i460 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %27 = load i64, ptr %memberidx1.i2.i460, align 4
  %.not.i.i461 = icmp slt i64 %26, %27
  br i1 %.not.i.i461, label %if.entry15.TypeChecker_error.exit464_crit_edge, label %if.entry.i.i463

if.entry15.TypeChecker_error.exit464_crit_edge:   ; preds = %if.entry15
  %.pre545 = load ptr, ptr %24, align 8
  br label %TypeChecker_error.exit464

if.entry.i.i463:                                  ; preds = %if.entry15
  %28 = shl nuw i64 %27, 1
  store i64 %28, ptr %memberidx1.i2.i460, align 4
  %29 = load ptr, ptr %24, align 8
  %30 = shl i64 %27, 4
  %31 = call ptr @realloc(ptr %29, i64 %30)
  store ptr %31, ptr %24, align 8
  %.pre544 = load i64, ptr %memberidx.i.i459, align 4
  br label %TypeChecker_error.exit464

TypeChecker_error.exit464:                        ; preds = %if.entry15.TypeChecker_error.exit464_crit_edge, %if.entry.i.i463
  %32 = phi ptr [ %.pre545, %if.entry15.TypeChecker_error.exit464_crit_edge ], [ %31, %if.entry.i.i463 ]
  %33 = phi i64 [ %26, %if.entry15.TypeChecker_error.exit464_crit_edge ], [ %.pre544, %if.entry.i.i463 ]
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx.i.i459, align 4
  %35 = getelementptr inbounds ptr, ptr %32, i64 %33
  store ptr %25, ptr %35, align 8
  br label %common.ret

ifend17:                                          ; preds = %ifend13
  %memberidx21 = getelementptr inbounds %IntType, ptr %15, i64 0, i32 1
  %36 = load i1, ptr %memberidx21, align 1
  %37 = icmp ne i64 %16, 6
  %38 = or i1 %37, %36
  br i1 %38, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %ifend17
  %39 = call ptr @malloc(i32 23)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(23) %39, ptr noundef nonnull align 8 dereferenceable(23) @159, i64 23, i1 false)
  %40 = call ptr @malloc(i32 24)
  store ptr %39, ptr %40, align 8
  %memberidx1.i.i465 = getelementptr inbounds %String, ptr %40, i64 0, i32 1
  store i64 23, ptr %memberidx1.i.i465, align 4
  %memberidx2.i.i466 = getelementptr inbounds %String, ptr %40, i64 0, i32 2
  store i64 23, ptr %memberidx2.i.i466, align 4
  %41 = load ptr, ptr %memberidx10, align 8
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr %memberidx.i450, align 8
  %memberidx1.i468 = getelementptr inbounds %Compiler, ptr %43, i64 0, i32 5
  %44 = load ptr, ptr %memberidx1.i468, align 8
  %45 = call ptr @malloc(i32 24)
  store i64 4, ptr %45, align 4
  %memberidx1.i.i469 = getelementptr inbounds %FloError, ptr %45, i64 0, i32 2
  store ptr %42, ptr %memberidx1.i.i469, align 8
  %memberidx2.i.i470 = getelementptr inbounds %FloError, ptr %45, i64 0, i32 1
  store ptr %40, ptr %memberidx2.i.i470, align 8
  %memberidx.i.i471 = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 1
  %46 = load i64, ptr %memberidx.i.i471, align 4
  %memberidx1.i2.i472 = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 2
  %47 = load i64, ptr %memberidx1.i2.i472, align 4
  %.not.i.i473 = icmp slt i64 %46, %47
  br i1 %.not.i.i473, label %if.entry23.TypeChecker_error.exit476_crit_edge, label %if.entry.i.i475

if.entry23.TypeChecker_error.exit476_crit_edge:   ; preds = %if.entry23
  %.pre551 = load ptr, ptr %44, align 8
  br label %TypeChecker_error.exit476

if.entry.i.i475:                                  ; preds = %if.entry23
  %48 = shl nuw i64 %47, 1
  store i64 %48, ptr %memberidx1.i2.i472, align 4
  %49 = load ptr, ptr %44, align 8
  %50 = shl i64 %47, 4
  %51 = call ptr @realloc(ptr %49, i64 %50)
  store ptr %51, ptr %44, align 8
  %.pre550 = load i64, ptr %memberidx.i.i471, align 4
  br label %TypeChecker_error.exit476

TypeChecker_error.exit476:                        ; preds = %if.entry23.TypeChecker_error.exit476_crit_edge, %if.entry.i.i475
  %52 = phi ptr [ %.pre551, %if.entry23.TypeChecker_error.exit476_crit_edge ], [ %51, %if.entry.i.i475 ]
  %53 = phi i64 [ %46, %if.entry23.TypeChecker_error.exit476_crit_edge ], [ %.pre550, %if.entry.i.i475 ]
  %54 = add nsw i64 %53, 1
  store i64 %54, ptr %memberidx.i.i471, align 4
  %55 = getelementptr inbounds ptr, ptr %52, i64 %53
  store ptr %45, ptr %55, align 8
  br label %common.ret

ifend25:                                          ; preds = %ifend17
  %memberidx28 = getelementptr inbounds %Expression, ptr %9, i64 0, i32 1
  %56 = load i1, ptr %memberidx28, align 1
  br i1 %56, label %ifend31, label %if.entry29

if.entry29:                                       ; preds = %ifend25
  %57 = call ptr @malloc(i32 30)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(30) %57, ptr noundef nonnull align 8 dereferenceable(30) @160, i64 30, i1 false)
  %58 = call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i477 = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 30, ptr %memberidx1.i.i477, align 4
  %memberidx2.i.i478 = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 30, ptr %memberidx2.i.i478, align 4
  %59 = load ptr, ptr %memberidx10, align 8
  %60 = load ptr, ptr %59, align 8
  %61 = load ptr, ptr %memberidx.i450, align 8
  %memberidx1.i480 = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx1.i480, align 8
  %63 = call ptr @malloc(i32 24)
  store i64 4, ptr %63, align 4
  %memberidx1.i.i481 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %60, ptr %memberidx1.i.i481, align 8
  %memberidx2.i.i482 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i482, align 8
  %memberidx.i.i483 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %64 = load i64, ptr %memberidx.i.i483, align 4
  %memberidx1.i2.i484 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %65 = load i64, ptr %memberidx1.i2.i484, align 4
  %.not.i.i485 = icmp slt i64 %64, %65
  br i1 %.not.i.i485, label %if.entry29.TypeChecker_error.exit488_crit_edge, label %if.entry.i.i487

if.entry29.TypeChecker_error.exit488_crit_edge:   ; preds = %if.entry29
  %.pre547 = load ptr, ptr %62, align 8
  br label %TypeChecker_error.exit488

if.entry.i.i487:                                  ; preds = %if.entry29
  %66 = shl nuw i64 %65, 1
  store i64 %66, ptr %memberidx1.i2.i484, align 4
  %67 = load ptr, ptr %62, align 8
  %68 = shl i64 %65, 4
  %69 = call ptr @realloc(ptr %67, i64 %68)
  store ptr %69, ptr %62, align 8
  %.pre546 = load i64, ptr %memberidx.i.i483, align 4
  br label %TypeChecker_error.exit488

TypeChecker_error.exit488:                        ; preds = %if.entry29.TypeChecker_error.exit488_crit_edge, %if.entry.i.i487
  %70 = phi ptr [ %.pre547, %if.entry29.TypeChecker_error.exit488_crit_edge ], [ %69, %if.entry.i.i487 ]
  %71 = phi i64 [ %64, %if.entry29.TypeChecker_error.exit488_crit_edge ], [ %.pre546, %if.entry.i.i487 ]
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %memberidx.i.i483, align 4
  %73 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %63, ptr %73, align 8
  br label %common.ret

ifend31:                                          ; preds = %ifend25
  %74 = load ptr, ptr %0, align 8
  %75 = call fastcc i64 @evaluate_const_int_expression(ptr %74, ptr nonnull %9)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %if.entry35, label %ifend37

if.entry35:                                       ; preds = %ifend31
  %77 = call ptr @malloc(i32 28)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %77, ptr noundef nonnull align 8 dereferenceable(28) @161, i64 28, i1 false)
  %78 = call ptr @malloc(i32 24)
  store ptr %77, ptr %78, align 8
  %memberidx1.i.i489 = getelementptr inbounds %String, ptr %78, i64 0, i32 1
  store i64 28, ptr %memberidx1.i.i489, align 4
  %memberidx2.i.i490 = getelementptr inbounds %String, ptr %78, i64 0, i32 2
  store i64 28, ptr %memberidx2.i.i490, align 4
  %79 = load ptr, ptr %memberidx10, align 8
  %80 = load ptr, ptr %79, align 8
  %81 = load ptr, ptr %memberidx.i450, align 8
  %memberidx1.i492 = getelementptr inbounds %Compiler, ptr %81, i64 0, i32 5
  %82 = load ptr, ptr %memberidx1.i492, align 8
  %83 = call ptr @malloc(i32 24)
  store i64 4, ptr %83, align 4
  %memberidx1.i.i493 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 2
  store ptr %80, ptr %memberidx1.i.i493, align 8
  %memberidx2.i.i494 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 1
  store ptr %78, ptr %memberidx2.i.i494, align 8
  %memberidx.i.i495 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 1
  %84 = load i64, ptr %memberidx.i.i495, align 4
  %memberidx1.i2.i496 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 2
  %85 = load i64, ptr %memberidx1.i2.i496, align 4
  %.not.i.i497 = icmp slt i64 %84, %85
  br i1 %.not.i.i497, label %if.entry35.TypeChecker_error.exit500_crit_edge, label %if.entry.i.i499

if.entry35.TypeChecker_error.exit500_crit_edge:   ; preds = %if.entry35
  %.pre549 = load ptr, ptr %82, align 8
  br label %TypeChecker_error.exit500

if.entry.i.i499:                                  ; preds = %if.entry35
  %86 = shl nuw i64 %85, 1
  store i64 %86, ptr %memberidx1.i2.i496, align 4
  %87 = load ptr, ptr %82, align 8
  %88 = shl i64 %85, 4
  %89 = call ptr @realloc(ptr %87, i64 %88)
  store ptr %89, ptr %82, align 8
  %.pre548 = load i64, ptr %memberidx.i.i495, align 4
  br label %TypeChecker_error.exit500

TypeChecker_error.exit500:                        ; preds = %if.entry35.TypeChecker_error.exit500_crit_edge, %if.entry.i.i499
  %90 = phi ptr [ %.pre549, %if.entry35.TypeChecker_error.exit500_crit_edge ], [ %89, %if.entry.i.i499 ]
  %91 = phi i64 [ %84, %if.entry35.TypeChecker_error.exit500_crit_edge ], [ %.pre548, %if.entry.i.i499 ]
  %92 = add nsw i64 %91, 1
  store i64 %92, ptr %memberidx.i.i495, align 4
  %93 = getelementptr inbounds ptr, ptr %90, i64 %91
  store ptr %83, ptr %93, align 8
  br label %common.ret

ifend37:                                          ; preds = %ifend31
  %memberidx40 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 2
  %94 = load ptr, ptr %memberidx40, align 8
  %95 = call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %94)
  %96 = tail call ptr @malloc(i32 24)
  store i64 14, ptr %96, align 4
  %memberidx.i503 = getelementptr inbounds %ArrayType, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i503, align 8
  %memberidx1.i504 = getelementptr inbounds %ArrayType, ptr %96, i64 0, i32 2
  store i64 %75, ptr %memberidx1.i504, align 4
  br label %common.ret

if.entry42:                                       ; preds = %2
  %97 = tail call ptr @malloc(i32 24)
  %memberidx.i501 = getelementptr inbounds %Array_Type_, ptr %97, i64 0, i32 1
  store i64 0, ptr %memberidx.i501, align 4
  %memberidx1.i502 = getelementptr inbounds %Array_Type_, ptr %97, i64 0, i32 2
  store i64 8, ptr %memberidx1.i502, align 4
  %98 = tail call ptr @malloc(i32 64)
  store ptr %98, ptr %97, align 8
  store i64 0, ptr %memberidx.i501, align 4
  %memberidx47 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 2
  %99 = load ptr, ptr %memberidx47, align 8
  %100 = tail call ptr @malloc(i32 25)
  %101 = load ptr, ptr %99, align 8
  %memberidx1.i446 = getelementptr inbounds %Array_TypeNode_, ptr %99, i64 0, i32 1
  %102 = load i64, ptr %memberidx1.i446, align 4
  store i1 false, ptr %100, align 1
  %memberidx1.i.i447 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %100, i64 0, i32 1
  %memberidx2.i.i448 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %100, i64 0, i32 3
  store ptr %101, ptr %memberidx2.i.i448, align 8
  %memberidx3.i.i449 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %100, i64 0, i32 2
  store i64 %102, ptr %memberidx3.i.i449, align 4
  store i64 1, ptr %memberidx1.i.i447, align 4
  %103 = icmp slt i64 %102, 1
  br i1 %103, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry42, %Array_Type____sl__.exit440
  %104 = phi i64 [ %116, %Array_Type____sl__.exit440 ], [ 1, %if.entry42 ]
  %arg.0528.in = phi ptr [ %117, %Array_Type____sl__.exit440 ], [ %101, %if.entry42 ]
  %arg.0528 = load ptr, ptr %arg.0528.in, align 8
  %105 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %arg.0528)
  %106 = load i64, ptr %memberidx.i501, align 4
  %107 = load i64, ptr %memberidx1.i502, align 4
  %.not.i436 = icmp slt i64 %106, %107
  br i1 %.not.i436, label %for.body.Array_Type____sl__.exit440_crit_edge, label %if.entry.i438

for.body.Array_Type____sl__.exit440_crit_edge:    ; preds = %for.body
  %.pre543 = load ptr, ptr %97, align 8
  br label %Array_Type____sl__.exit440

if.entry.i438:                                    ; preds = %for.body
  %108 = shl nuw i64 %107, 1
  store i64 %108, ptr %memberidx1.i502, align 4
  %109 = load ptr, ptr %97, align 8
  %110 = shl i64 %107, 4
  %111 = tail call ptr @realloc(ptr %109, i64 %110)
  store ptr %111, ptr %97, align 8
  %.pre542 = load i64, ptr %memberidx.i501, align 4
  br label %Array_Type____sl__.exit440

Array_Type____sl__.exit440:                       ; preds = %for.body.Array_Type____sl__.exit440_crit_edge, %if.entry.i438
  %112 = phi ptr [ %.pre543, %for.body.Array_Type____sl__.exit440_crit_edge ], [ %111, %if.entry.i438 ]
  %113 = phi i64 [ %106, %for.body.Array_Type____sl__.exit440_crit_edge ], [ %.pre542, %if.entry.i438 ]
  %114 = add nsw i64 %113, 1
  store i64 %114, ptr %memberidx.i501, align 4
  %115 = getelementptr inbounds ptr, ptr %112, i64 %113
  store ptr %105, ptr %115, align 8
  %116 = add nuw nsw i64 %104, 1
  store i64 %116, ptr %memberidx1.i.i447, align 4
  %117 = getelementptr inbounds ptr, ptr %101, i64 %104
  %.not554 = icmp slt i64 %104, %102
  br i1 %.not554, label %for.body, label %for.end

for.end:                                          ; preds = %Array_Type____sl__.exit440, %if.entry42
  tail call void @free(ptr nonnull %100)
  %memberidx49 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 3
  %118 = load ptr, ptr %memberidx49, align 8
  %119 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %118)
  %120 = tail call ptr @malloc(i32 25)
  store i64 16, ptr %120, align 4
  %memberidx.i429 = getelementptr inbounds %FunctionType, ptr %120, i64 0, i32 1
  store ptr %97, ptr %memberidx.i429, align 8
  %memberidx1.i430 = getelementptr inbounds %FunctionType, ptr %120, i64 0, i32 2
  store ptr %119, ptr %memberidx1.i430, align 8
  br label %common.ret

if.entry51:                                       ; preds = %2
  %121 = tail call ptr @malloc(i32 16)
  store i64 15, ptr %121, align 4
  %memberidx.i425 = getelementptr inbounds %TupleType, ptr %121, i64 0, i32 1
  %122 = tail call ptr @malloc(i32 24)
  %memberidx.i.i426 = getelementptr inbounds %Array_Type_, ptr %122, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i426, align 4
  %memberidx1.i.i427 = getelementptr inbounds %Array_Type_, ptr %122, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i427, align 4
  %123 = tail call ptr @malloc(i32 64)
  store ptr %123, ptr %122, align 8
  store i64 0, ptr %memberidx.i.i426, align 4
  store ptr %122, ptr %memberidx.i425, align 8
  %memberidx55 = getelementptr inbounds %TupleTypeNode, ptr %1, i64 0, i32 2
  %124 = load ptr, ptr %memberidx55, align 8
  %125 = tail call ptr @malloc(i32 25)
  %126 = load ptr, ptr %124, align 8
  %memberidx1.i421 = getelementptr inbounds %Array_TypeNode_, ptr %124, i64 0, i32 1
  %127 = load i64, ptr %memberidx1.i421, align 4
  store i1 false, ptr %125, align 1
  %memberidx1.i.i422 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %125, i64 0, i32 1
  %memberidx2.i.i423 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %125, i64 0, i32 3
  store ptr %126, ptr %memberidx2.i.i423, align 8
  %memberidx3.i.i424 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %125, i64 0, i32 2
  store i64 %127, ptr %memberidx3.i.i424, align 4
  store i64 1, ptr %memberidx1.i.i422, align 4
  %128 = icmp slt i64 %127, 1
  br i1 %128, label %for.end59, label %for.body57

for.body57:                                       ; preds = %if.entry51, %Array_Type____sl__.exit417
  %129 = phi i64 [ %141, %Array_Type____sl__.exit417 ], [ 1, %if.entry51 ]
  %element_type1.0530.in = phi ptr [ %142, %Array_Type____sl__.exit417 ], [ %126, %if.entry51 ]
  %element_type1.0530 = load ptr, ptr %element_type1.0530.in, align 8
  %130 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %element_type1.0530)
  %131 = load i64, ptr %memberidx.i.i426, align 4
  %132 = load i64, ptr %memberidx1.i.i427, align 4
  %.not.i413 = icmp slt i64 %131, %132
  br i1 %.not.i413, label %for.body57.Array_Type____sl__.exit417_crit_edge, label %if.entry.i415

for.body57.Array_Type____sl__.exit417_crit_edge:  ; preds = %for.body57
  %.pre541 = load ptr, ptr %122, align 8
  br label %Array_Type____sl__.exit417

if.entry.i415:                                    ; preds = %for.body57
  %133 = shl nuw i64 %132, 1
  store i64 %133, ptr %memberidx1.i.i427, align 4
  %134 = load ptr, ptr %122, align 8
  %135 = shl i64 %132, 4
  %136 = tail call ptr @realloc(ptr %134, i64 %135)
  store ptr %136, ptr %122, align 8
  %.pre540 = load i64, ptr %memberidx.i.i426, align 4
  br label %Array_Type____sl__.exit417

Array_Type____sl__.exit417:                       ; preds = %for.body57.Array_Type____sl__.exit417_crit_edge, %if.entry.i415
  %137 = phi ptr [ %.pre541, %for.body57.Array_Type____sl__.exit417_crit_edge ], [ %136, %if.entry.i415 ]
  %138 = phi i64 [ %131, %for.body57.Array_Type____sl__.exit417_crit_edge ], [ %.pre540, %if.entry.i415 ]
  %139 = add nsw i64 %138, 1
  store i64 %139, ptr %memberidx.i.i426, align 4
  %140 = getelementptr inbounds ptr, ptr %137, i64 %138
  store ptr %130, ptr %140, align 8
  %141 = add nuw nsw i64 %129, 1
  store i64 %141, ptr %memberidx1.i.i422, align 4
  %142 = getelementptr inbounds ptr, ptr %126, i64 %129
  %.not553 = icmp slt i64 %129, %127
  br i1 %.not553, label %for.body57, label %for.end59

for.end59:                                        ; preds = %Array_Type____sl__.exit417, %if.entry51
  tail call void @free(ptr nonnull %125)
  br label %common.ret

if.entry63:                                       ; preds = %2
  %143 = tail call ptr @malloc(i32 24)
  %memberidx.i406 = getelementptr inbounds %Array_Type_, ptr %143, i64 0, i32 1
  store i64 0, ptr %memberidx.i406, align 4
  %memberidx1.i407 = getelementptr inbounds %Array_Type_, ptr %143, i64 0, i32 2
  store i64 8, ptr %memberidx1.i407, align 4
  %144 = tail call ptr @malloc(i32 64)
  store ptr %144, ptr %143, align 8
  store i64 0, ptr %memberidx.i406, align 4
  %memberidx68 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 2
  %145 = load ptr, ptr %memberidx68, align 8
  %memberidx69 = getelementptr inbounds %IdentifierToken, ptr %145, i64 0, i32 2
  %146 = load ptr, ptr %memberidx69, align 8
  %147 = tail call ptr @malloc(i32 4)
  store i32 1819242338, ptr %147, align 8
  %148 = tail call ptr @malloc(i32 24)
  store ptr %147, ptr %148, align 8
  %memberidx1.i.i404 = getelementptr inbounds %String, ptr %148, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i404, align 4
  %memberidx2.i.i405 = getelementptr inbounds %String, ptr %148, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i405, align 4
  %memberidx.i398 = getelementptr inbounds %String, ptr %146, i64 0, i32 1
  %149 = load i64, ptr %memberidx.i398, align 4
  %.not.i400 = icmp eq i64 %149, 4
  br i1 %.not.i400, label %ifend.i402, label %ifend72

ifend.i402:                                       ; preds = %if.entry63
  %150 = load ptr, ptr %146, align 8
  %151 = tail call i64 @memcmp(ptr %150, ptr nonnull %147, i64 4)
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %if.entry70, label %ifend72

ifend65:                                          ; preds = %2
  %153 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %153, align 4
  br label %common.ret

if.entry70:                                       ; preds = %ifend.i402
  %154 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %154, align 4
  br label %common.ret

ifend72:                                          ; preds = %if.entry63, %ifend.i402
  %155 = tail call ptr @malloc(i32 2)
  store i16 13429, ptr %155, align 8
  %156 = tail call ptr @malloc(i32 24)
  store ptr %155, ptr %156, align 8
  %memberidx1.i.i396 = getelementptr inbounds %String, ptr %156, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i396, align 4
  %memberidx2.i.i397 = getelementptr inbounds %String, ptr %156, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i397, align 4
  %157 = load i64, ptr %memberidx.i398, align 4
  %.not.i392 = icmp eq i64 %157, 2
  br i1 %.not.i392, label %ifend.i394, label %ifend75

ifend.i394:                                       ; preds = %ifend72
  %158 = load ptr, ptr %146, align 8
  %159 = tail call i64 @memcmp(ptr %158, ptr nonnull %155, i64 2)
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %if.entry73, label %ifend75

if.entry73:                                       ; preds = %ifend.i394
  %161 = tail call ptr @malloc(i32 9)
  store i64 1, ptr %161, align 4
  %memberidx.i389 = getelementptr inbounds %IntType, ptr %161, i64 0, i32 1
  store i1 false, ptr %memberidx.i389, align 1
  br label %common.ret

ifend75:                                          ; preds = %ifend72, %ifend.i394
  %162 = tail call ptr @malloc(i32 2)
  store i16 14453, ptr %162, align 8
  %163 = tail call ptr @malloc(i32 24)
  store ptr %162, ptr %163, align 8
  %memberidx1.i.i387 = getelementptr inbounds %String, ptr %163, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i387, align 4
  %memberidx2.i.i388 = getelementptr inbounds %String, ptr %163, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i388, align 4
  %164 = load i64, ptr %memberidx.i398, align 4
  %.not.i383 = icmp eq i64 %164, 2
  br i1 %.not.i383, label %ifend.i385, label %ifend78

ifend.i385:                                       ; preds = %ifend75
  %165 = load ptr, ptr %146, align 8
  %166 = tail call i64 @memcmp(ptr %165, ptr nonnull %162, i64 2)
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %if.entry76, label %ifend78

if.entry76:                                       ; preds = %ifend.i385
  %168 = tail call ptr @malloc(i32 9)
  store i64 2, ptr %168, align 4
  %memberidx.i380 = getelementptr inbounds %IntType, ptr %168, i64 0, i32 1
  store i1 false, ptr %memberidx.i380, align 1
  br label %common.ret

ifend78:                                          ; preds = %ifend75, %ifend.i385
  %169 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %169, ptr noundef nonnull align 8 dereferenceable(3) @162, i64 3, i1 false)
  %170 = tail call ptr @malloc(i32 24)
  store ptr %169, ptr %170, align 8
  %memberidx1.i.i378 = getelementptr inbounds %String, ptr %170, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i378, align 4
  %memberidx2.i.i379 = getelementptr inbounds %String, ptr %170, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i379, align 4
  %171 = load i64, ptr %memberidx.i398, align 4
  %.not.i374 = icmp eq i64 %171, 3
  br i1 %.not.i374, label %ifend.i376, label %ifend81

ifend.i376:                                       ; preds = %ifend78
  %172 = load ptr, ptr %146, align 8
  %173 = tail call i64 @memcmp(ptr %172, ptr nonnull %169, i64 3)
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %if.entry79, label %ifend81

if.entry79:                                       ; preds = %ifend.i376
  %175 = tail call ptr @malloc(i32 9)
  store i64 3, ptr %175, align 4
  %memberidx.i371 = getelementptr inbounds %IntType, ptr %175, i64 0, i32 1
  store i1 false, ptr %memberidx.i371, align 1
  br label %common.ret

ifend81:                                          ; preds = %ifend78, %ifend.i376
  %176 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %176, ptr noundef nonnull align 8 dereferenceable(3) @163, i64 3, i1 false)
  %177 = tail call ptr @malloc(i32 24)
  store ptr %176, ptr %177, align 8
  %memberidx1.i.i369 = getelementptr inbounds %String, ptr %177, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i369, align 4
  %memberidx2.i.i370 = getelementptr inbounds %String, ptr %177, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i370, align 4
  %178 = load i64, ptr %memberidx.i398, align 4
  %.not.i365 = icmp eq i64 %178, 3
  br i1 %.not.i365, label %ifend.i367, label %ifend84

ifend.i367:                                       ; preds = %ifend81
  %179 = load ptr, ptr %146, align 8
  %180 = tail call i64 @memcmp(ptr %179, ptr nonnull %176, i64 3)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %if.entry82, label %ifend84

if.entry82:                                       ; preds = %ifend.i367
  %182 = tail call ptr @malloc(i32 9)
  store i64 4, ptr %182, align 4
  %memberidx.i362 = getelementptr inbounds %IntType, ptr %182, i64 0, i32 1
  store i1 false, ptr %memberidx.i362, align 1
  br label %common.ret

ifend84:                                          ; preds = %ifend81, %ifend.i367
  %183 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %183, ptr noundef nonnull align 8 dereferenceable(3) @164, i64 3, i1 false)
  %184 = tail call ptr @malloc(i32 24)
  store ptr %183, ptr %184, align 8
  %memberidx1.i.i360 = getelementptr inbounds %String, ptr %184, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i360, align 4
  %memberidx2.i.i361 = getelementptr inbounds %String, ptr %184, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i361, align 4
  %185 = load i64, ptr %memberidx.i398, align 4
  %.not.i356 = icmp eq i64 %185, 3
  br i1 %.not.i356, label %ifend.i358, label %ifend87

ifend.i358:                                       ; preds = %ifend84
  %186 = load ptr, ptr %146, align 8
  %187 = tail call i64 @memcmp(ptr %186, ptr nonnull %183, i64 3)
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %if.entry85, label %ifend87

if.entry85:                                       ; preds = %ifend.i358
  %189 = tail call ptr @malloc(i32 9)
  store i64 5, ptr %189, align 4
  %memberidx.i353 = getelementptr inbounds %IntType, ptr %189, i64 0, i32 1
  store i1 false, ptr %memberidx.i353, align 1
  br label %common.ret

ifend87:                                          ; preds = %ifend84, %ifend.i358
  %190 = tail call ptr @malloc(i32 4)
  store i32 942813557, ptr %190, align 8
  %191 = tail call ptr @malloc(i32 24)
  store ptr %190, ptr %191, align 8
  %memberidx1.i.i351 = getelementptr inbounds %String, ptr %191, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i351, align 4
  %memberidx2.i.i352 = getelementptr inbounds %String, ptr %191, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i352, align 4
  %192 = load i64, ptr %memberidx.i398, align 4
  %.not.i347 = icmp eq i64 %192, 4
  br i1 %.not.i347, label %ifend.i349, label %ifend90

ifend.i349:                                       ; preds = %ifend87
  %193 = load ptr, ptr %146, align 8
  %194 = tail call i64 @memcmp(ptr %193, ptr nonnull %190, i64 4)
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %if.entry88, label %ifend90

if.entry88:                                       ; preds = %ifend.i349
  %196 = tail call ptr @malloc(i32 9)
  store i64 7, ptr %196, align 4
  %memberidx.i344 = getelementptr inbounds %IntType, ptr %196, i64 0, i32 1
  store i1 false, ptr %memberidx.i344, align 1
  br label %common.ret

ifend90:                                          ; preds = %ifend87, %ifend.i349
  %197 = tail call ptr @malloc(i32 4)
  store i32 1953393013, ptr %197, align 8
  %198 = tail call ptr @malloc(i32 24)
  store ptr %197, ptr %198, align 8
  %memberidx1.i.i342 = getelementptr inbounds %String, ptr %198, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i342, align 4
  %memberidx2.i.i343 = getelementptr inbounds %String, ptr %198, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i343, align 4
  %199 = load i64, ptr %memberidx.i398, align 4
  %.not.i338 = icmp eq i64 %199, 4
  br i1 %.not.i338, label %ifend.i340, label %ifend93

ifend.i340:                                       ; preds = %ifend90
  %200 = load ptr, ptr %146, align 8
  %201 = tail call i64 @memcmp(ptr %200, ptr nonnull %197, i64 4)
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %if.entry91, label %ifend93

if.entry91:                                       ; preds = %ifend.i340
  %203 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %203, align 4
  %memberidx.i335 = getelementptr inbounds %IntType, ptr %203, i64 0, i32 1
  store i1 false, ptr %memberidx.i335, align 1
  br label %common.ret

ifend93:                                          ; preds = %ifend90, %ifend.i340
  %204 = tail call ptr @malloc(i32 2)
  store i16 13417, ptr %204, align 8
  %205 = tail call ptr @malloc(i32 24)
  store ptr %204, ptr %205, align 8
  %memberidx1.i.i333 = getelementptr inbounds %String, ptr %205, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i333, align 4
  %memberidx2.i.i334 = getelementptr inbounds %String, ptr %205, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i334, align 4
  %206 = load i64, ptr %memberidx.i398, align 4
  %.not.i329 = icmp eq i64 %206, 2
  br i1 %.not.i329, label %ifend.i331, label %ifend96

ifend.i331:                                       ; preds = %ifend93
  %207 = load ptr, ptr %146, align 8
  %208 = tail call i64 @memcmp(ptr %207, ptr nonnull %204, i64 2)
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %if.entry94, label %ifend96

if.entry94:                                       ; preds = %ifend.i331
  %210 = tail call ptr @malloc(i32 9)
  store i64 1, ptr %210, align 4
  %memberidx.i326 = getelementptr inbounds %IntType, ptr %210, i64 0, i32 1
  store i1 true, ptr %memberidx.i326, align 1
  br label %common.ret

ifend96:                                          ; preds = %ifend93, %ifend.i331
  %211 = tail call ptr @malloc(i32 2)
  store i16 14441, ptr %211, align 8
  %212 = tail call ptr @malloc(i32 24)
  store ptr %211, ptr %212, align 8
  %memberidx1.i.i324 = getelementptr inbounds %String, ptr %212, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i324, align 4
  %memberidx2.i.i325 = getelementptr inbounds %String, ptr %212, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i325, align 4
  %213 = load i64, ptr %memberidx.i398, align 4
  %.not.i320 = icmp eq i64 %213, 2
  br i1 %.not.i320, label %ifend.i322, label %ifend99

ifend.i322:                                       ; preds = %ifend96
  %214 = load ptr, ptr %146, align 8
  %215 = tail call i64 @memcmp(ptr %214, ptr nonnull %211, i64 2)
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %if.entry97, label %ifend99

if.entry97:                                       ; preds = %ifend.i322
  %217 = tail call ptr @malloc(i32 9)
  store i64 2, ptr %217, align 4
  %memberidx.i317 = getelementptr inbounds %IntType, ptr %217, i64 0, i32 1
  store i1 true, ptr %memberidx.i317, align 1
  br label %common.ret

ifend99:                                          ; preds = %ifend96, %ifend.i322
  %218 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %218, ptr noundef nonnull align 8 dereferenceable(3) @165, i64 3, i1 false)
  %219 = tail call ptr @malloc(i32 24)
  store ptr %218, ptr %219, align 8
  %memberidx1.i.i315 = getelementptr inbounds %String, ptr %219, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i315, align 4
  %memberidx2.i.i316 = getelementptr inbounds %String, ptr %219, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i316, align 4
  %220 = load i64, ptr %memberidx.i398, align 4
  %.not.i311 = icmp eq i64 %220, 3
  br i1 %.not.i311, label %ifend.i313, label %ifend102

ifend.i313:                                       ; preds = %ifend99
  %221 = load ptr, ptr %146, align 8
  %222 = tail call i64 @memcmp(ptr %221, ptr nonnull %218, i64 3)
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %if.entry100, label %ifend102

if.entry100:                                      ; preds = %ifend.i313
  %224 = tail call ptr @malloc(i32 9)
  store i64 3, ptr %224, align 4
  %memberidx.i308 = getelementptr inbounds %IntType, ptr %224, i64 0, i32 1
  store i1 true, ptr %memberidx.i308, align 1
  br label %common.ret

ifend102:                                         ; preds = %ifend99, %ifend.i313
  %225 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %225, ptr noundef nonnull align 8 dereferenceable(3) @166, i64 3, i1 false)
  %226 = tail call ptr @malloc(i32 24)
  store ptr %225, ptr %226, align 8
  %memberidx1.i.i306 = getelementptr inbounds %String, ptr %226, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i306, align 4
  %memberidx2.i.i307 = getelementptr inbounds %String, ptr %226, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i307, align 4
  %227 = load i64, ptr %memberidx.i398, align 4
  %.not.i302 = icmp eq i64 %227, 3
  br i1 %.not.i302, label %ifend.i304, label %ifend105

ifend.i304:                                       ; preds = %ifend102
  %228 = load ptr, ptr %146, align 8
  %229 = tail call i64 @memcmp(ptr %228, ptr nonnull %225, i64 3)
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %if.entry103, label %ifend105

if.entry103:                                      ; preds = %ifend.i304
  %231 = tail call ptr @malloc(i32 9)
  store i64 4, ptr %231, align 4
  %memberidx.i299 = getelementptr inbounds %IntType, ptr %231, i64 0, i32 1
  store i1 true, ptr %memberidx.i299, align 1
  br label %common.ret

ifend105:                                         ; preds = %ifend102, %ifend.i304
  %232 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %232, ptr noundef nonnull align 8 dereferenceable(3) @167, i64 3, i1 false)
  %233 = tail call ptr @malloc(i32 24)
  store ptr %232, ptr %233, align 8
  %memberidx1.i.i297 = getelementptr inbounds %String, ptr %233, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i297, align 4
  %memberidx2.i.i298 = getelementptr inbounds %String, ptr %233, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i298, align 4
  %234 = load i64, ptr %memberidx.i398, align 4
  %.not.i293 = icmp eq i64 %234, 3
  br i1 %.not.i293, label %ifend.i295, label %ifend108

ifend.i295:                                       ; preds = %ifend105
  %235 = load ptr, ptr %146, align 8
  %236 = tail call i64 @memcmp(ptr %235, ptr nonnull %232, i64 3)
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %if.entry106, label %ifend108

if.entry106:                                      ; preds = %ifend.i295
  %238 = tail call ptr @malloc(i32 9)
  store i64 5, ptr %238, align 4
  %memberidx.i290 = getelementptr inbounds %IntType, ptr %238, i64 0, i32 1
  store i1 true, ptr %memberidx.i290, align 1
  br label %common.ret

ifend108:                                         ; preds = %ifend105, %ifend.i295
  %239 = tail call ptr @malloc(i32 4)
  store i32 942813545, ptr %239, align 8
  %240 = tail call ptr @malloc(i32 24)
  store ptr %239, ptr %240, align 8
  %memberidx1.i.i288 = getelementptr inbounds %String, ptr %240, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i288, align 4
  %memberidx2.i.i289 = getelementptr inbounds %String, ptr %240, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i289, align 4
  %241 = load i64, ptr %memberidx.i398, align 4
  %.not.i284 = icmp eq i64 %241, 4
  br i1 %.not.i284, label %ifend.i286, label %ifend111

ifend.i286:                                       ; preds = %ifend108
  %242 = load ptr, ptr %146, align 8
  %243 = tail call i64 @memcmp(ptr %242, ptr nonnull %239, i64 4)
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %if.entry109, label %ifend111

if.entry109:                                      ; preds = %ifend.i286
  %245 = tail call ptr @malloc(i32 9)
  store i64 7, ptr %245, align 4
  %memberidx.i281 = getelementptr inbounds %IntType, ptr %245, i64 0, i32 1
  store i1 true, ptr %memberidx.i281, align 1
  br label %common.ret

ifend111:                                         ; preds = %ifend108, %ifend.i286
  %246 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %246, ptr noundef nonnull align 8 dereferenceable(3) @88, i64 3, i1 false)
  %247 = tail call ptr @malloc(i32 24)
  store ptr %246, ptr %247, align 8
  %memberidx1.i.i279 = getelementptr inbounds %String, ptr %247, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i279, align 4
  %memberidx2.i.i280 = getelementptr inbounds %String, ptr %247, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i280, align 4
  %248 = load i64, ptr %memberidx.i398, align 4
  %.not.i275 = icmp eq i64 %248, 3
  br i1 %.not.i275, label %ifend.i277, label %ifend114

ifend.i277:                                       ; preds = %ifend111
  %249 = load ptr, ptr %146, align 8
  %250 = tail call i64 @memcmp(ptr %249, ptr nonnull %246, i64 3)
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %if.entry112, label %ifend114

if.entry112:                                      ; preds = %ifend.i277
  %252 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %252, align 4
  %memberidx.i272 = getelementptr inbounds %IntType, ptr %252, i64 0, i32 1
  store i1 true, ptr %memberidx.i272, align 1
  br label %common.ret

ifend114:                                         ; preds = %ifend111, %ifend.i277
  %253 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %253, ptr noundef nonnull align 8 dereferenceable(3) @95, i64 3, i1 false)
  %254 = tail call ptr @malloc(i32 24)
  store ptr %253, ptr %254, align 8
  %memberidx1.i.i270 = getelementptr inbounds %String, ptr %254, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i270, align 4
  %memberidx2.i.i271 = getelementptr inbounds %String, ptr %254, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i271, align 4
  %255 = load i64, ptr %memberidx.i398, align 4
  %.not.i266 = icmp eq i64 %255, 3
  br i1 %.not.i266, label %ifend.i268, label %ifend117

ifend.i268:                                       ; preds = %ifend114
  %256 = load ptr, ptr %146, align 8
  %257 = tail call i64 @memcmp(ptr %256, ptr nonnull %253, i64 3)
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %if.entry115, label %ifend117

if.entry115:                                      ; preds = %ifend.i268
  %259 = tail call ptr @malloc(i32 8)
  store i64 8, ptr %259, align 4
  br label %common.ret

ifend117:                                         ; preds = %ifend114, %ifend.i268
  %260 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %260, ptr noundef nonnull align 8 dereferenceable(3) @96, i64 3, i1 false)
  %261 = tail call ptr @malloc(i32 24)
  store ptr %260, ptr %261, align 8
  %memberidx1.i.i262 = getelementptr inbounds %String, ptr %261, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i262, align 4
  %memberidx2.i.i263 = getelementptr inbounds %String, ptr %261, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i263, align 4
  %262 = load i64, ptr %memberidx.i398, align 4
  %.not.i258 = icmp eq i64 %262, 3
  br i1 %.not.i258, label %ifend.i260, label %ifend120

ifend.i260:                                       ; preds = %ifend117
  %263 = load ptr, ptr %146, align 8
  %264 = tail call i64 @memcmp(ptr %263, ptr nonnull %260, i64 3)
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %if.entry118, label %ifend120

if.entry118:                                      ; preds = %ifend.i260
  %266 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %266, align 4
  br label %common.ret

ifend120:                                         ; preds = %ifend117, %ifend.i260
  %267 = tail call ptr @malloc(i32 4)
  store i32 1684631414, ptr %267, align 8
  %268 = tail call ptr @malloc(i32 24)
  store ptr %267, ptr %268, align 8
  %memberidx1.i.i254 = getelementptr inbounds %String, ptr %268, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i254, align 4
  %memberidx2.i.i255 = getelementptr inbounds %String, ptr %268, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i255, align 4
  %269 = load i64, ptr %memberidx.i398, align 4
  %.not.i253 = icmp eq i64 %269, 4
  br i1 %.not.i253, label %ifend.i, label %ifend123

ifend.i:                                          ; preds = %ifend120
  %270 = load ptr, ptr %146, align 8
  %271 = tail call i64 @memcmp(ptr %270, ptr nonnull %267, i64 4)
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %if.entry121, label %ifend123

if.entry121:                                      ; preds = %ifend.i
  %273 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %273, align 4
  br label %common.ret

ifend123:                                         ; preds = %ifend120, %ifend.i
  %memberidx124 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 3
  %274 = load ptr, ptr %memberidx124, align 8
  %memberidx125 = getelementptr inbounds %Array_TypeNode_, ptr %274, i64 0, i32 1
  %275 = load i64, ptr %memberidx125, align 4
  %276 = icmp sgt i64 %275, 0
  br i1 %276, label %for.entry129, label %ifend128

ifend128:                                         ; preds = %ifend142, %ifend123
  %277 = load ptr, ptr %memberidx69, align 8
  %278 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %277)
  %279 = load i64, ptr %278, align 4
  %280 = icmp eq i64 %279, 21
  br i1 %280, label %if.entry152, label %common.ret

for.entry129:                                     ; preds = %ifend123
  %281 = tail call ptr @malloc(i32 25)
  %282 = load ptr, ptr %274, align 8
  %283 = load i64, ptr %memberidx125, align 4
  store i1 false, ptr %281, align 1
  %memberidx1.i.i249 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %281, i64 0, i32 1
  %memberidx2.i.i250 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %281, i64 0, i32 3
  store ptr %282, ptr %memberidx2.i.i250, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %281, i64 0, i32 2
  store i64 %283, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i249, align 4
  %284 = icmp slt i64 %283, 1
  br i1 %284, label %for.end134, label %for.body132

for.body132:                                      ; preds = %for.entry129, %Array_Type____sl__.exit
  %285 = phi i64 [ %297, %Array_Type____sl__.exit ], [ 1, %for.entry129 ]
  %arg4.0533.in = phi ptr [ %298, %Array_Type____sl__.exit ], [ %282, %for.entry129 ]
  %arg4.0533 = load ptr, ptr %arg4.0533.in, align 8
  %286 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %arg4.0533)
  %287 = load i64, ptr %memberidx.i406, align 4
  %288 = load i64, ptr %memberidx1.i407, align 4
  %.not.i = icmp slt i64 %287, %288
  br i1 %.not.i, label %for.body132.Array_Type____sl__.exit_crit_edge, label %if.entry.i

for.body132.Array_Type____sl__.exit_crit_edge:    ; preds = %for.body132
  %.pre537 = load ptr, ptr %143, align 8
  br label %Array_Type____sl__.exit

if.entry.i:                                       ; preds = %for.body132
  %289 = shl nuw i64 %288, 1
  store i64 %289, ptr %memberidx1.i407, align 4
  %290 = load ptr, ptr %143, align 8
  %291 = shl i64 %288, 4
  %292 = tail call ptr @realloc(ptr %290, i64 %291)
  store ptr %292, ptr %143, align 8
  %.pre = load i64, ptr %memberidx.i406, align 4
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %for.body132.Array_Type____sl__.exit_crit_edge, %if.entry.i
  %293 = phi ptr [ %.pre537, %for.body132.Array_Type____sl__.exit_crit_edge ], [ %292, %if.entry.i ]
  %294 = phi i64 [ %287, %for.body132.Array_Type____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %295 = add nsw i64 %294, 1
  store i64 %295, ptr %memberidx.i406, align 4
  %296 = getelementptr inbounds ptr, ptr %293, i64 %294
  store ptr %286, ptr %296, align 8
  %297 = add nuw nsw i64 %285, 1
  store i64 %297, ptr %memberidx1.i.i249, align 4
  %298 = getelementptr inbounds ptr, ptr %282, i64 %285
  %.not552 = icmp slt i64 %285, %283
  br i1 %.not552, label %for.body132, label %for.end134

for.end134:                                       ; preds = %Array_Type____sl__.exit, %for.entry129
  tail call void @free(ptr nonnull %281)
  %memberidx.i237 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %299 = load ptr, ptr %memberidx.i237, align 8
  %memberidx1.i238 = getelementptr inbounds %Compiler, ptr %299, i64 0, i32 5
  %300 = load ptr, ptr %memberidx1.i238, align 8
  %memberidx2.i239 = getelementptr inbounds %Array_FloError_, ptr %300, i64 0, i32 1
  %301 = load i64, ptr %memberidx2.i239, align 4
  %302 = icmp sgt i64 %301, 0
  br i1 %302, label %common.ret, label %ifend138

ifend138:                                         ; preds = %for.end134
  %303 = load ptr, ptr %memberidx69, align 8
  %304 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr nonnull %0, ptr %303, ptr nonnull %143)
  %305 = load ptr, ptr %memberidx.i237, align 8
  %memberidx1.i235 = getelementptr inbounds %Compiler, ptr %305, i64 0, i32 5
  %306 = load ptr, ptr %memberidx1.i235, align 8
  %memberidx2.i236 = getelementptr inbounds %Array_FloError_, ptr %306, i64 0, i32 1
  %307 = load i64, ptr %memberidx2.i236, align 4
  %308 = icmp sgt i64 %307, 0
  br i1 %308, label %if.entry140, label %ifend142

if.entry140:                                      ; preds = %ifend138
  %309 = load ptr, ptr %306, align 8
  %310 = load ptr, ptr %309, align 8
  %memberidx145 = getelementptr inbounds %FloError, ptr %310, i64 0, i32 2
  %311 = load ptr, ptr %1, align 8
  store ptr %311, ptr %memberidx145, align 8
  br label %ifend142

ifend142:                                         ; preds = %ifend138, %if.entry140
  %.not = icmp eq ptr %304, null
  br i1 %.not, label %ifend128, label %common.ret

if.entry152:                                      ; preds = %ifend128
  %312 = load i64, ptr %memberidx.i398, align 4
  %313 = trunc i64 %312 to i32
  %314 = add i32 %313, 1
  %315 = tail call ptr @malloc(i32 %314)
  %316 = load ptr, ptr %146, align 8
  %317 = load i64, ptr %memberidx.i398, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %315, ptr align 8 %316, i64 %317, i1 false)
  %318 = getelementptr inbounds i8, ptr %315, i64 %317
  store i8 0, ptr %318, align 1
  %319 = alloca ptr, align 8
  %320 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %319, ptr nonnull @168, ptr %315)
  %321 = load ptr, ptr %319, align 8
  %322 = tail call ptr @malloc(i32 24)
  store ptr %321, ptr %322, align 8
  %memberidx1.i232 = getelementptr inbounds %String, ptr %322, i64 0, i32 1
  store i64 %320, ptr %memberidx1.i232, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %322, i64 0, i32 2
  store i64 %320, ptr %memberidx2.i, align 4
  tail call void @free(ptr %315)
  %memberidx155 = getelementptr inbounds %Token, ptr %145, i64 0, i32 1
  %323 = load ptr, ptr %memberidx155, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %324 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %324, i64 0, i32 5
  %325 = load ptr, ptr %memberidx1.i, align 8
  %326 = call ptr @malloc(i32 24)
  store i64 5, ptr %326, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %326, i64 0, i32 2
  store ptr %323, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %326, i64 0, i32 1
  store ptr %322, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %325, i64 0, i32 1
  %327 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %325, i64 0, i32 2
  %328 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %327, %328
  br i1 %.not.i.i, label %if.entry152.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry152.TypeChecker_error.exit_crit_edge:     ; preds = %if.entry152
  %.pre539 = load ptr, ptr %325, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry152
  %329 = shl nuw i64 %328, 1
  store i64 %329, ptr %memberidx1.i2.i, align 4
  %330 = load ptr, ptr %325, align 8
  %331 = shl i64 %328, 4
  %332 = call ptr @realloc(ptr %330, i64 %331)
  store ptr %332, ptr %325, align 8
  %.pre538 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry152.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %333 = phi ptr [ %.pre539, %if.entry152.TypeChecker_error.exit_crit_edge ], [ %332, %if.entry.i.i ]
  %334 = phi i64 [ %327, %if.entry152.TypeChecker_error.exit_crit_edge ], [ %.pre538, %if.entry.i.i ]
  %335 = add nsw i64 %334, 1
  store i64 %335, ptr %memberidx.i.i, align 4
  %336 = getelementptr inbounds ptr, ptr %333, i64 %334
  store ptr %326, ptr %336, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_statement(ptr %0, ptr %1) unnamed_addr {
  %memberidx = getelementptr inbounds %StatementNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 2, label %if.entry6
    i64 3, label %if.entry10
    i64 4, label %if.entry14
    i64 5, label %if.entry18
    i64 6, label %if.entry22
    i64 7, label %if.entry26
    i64 8, label %if.entry30
  ]

common.ret:                                       ; preds = %2, %ifend.i73, %TypeChecker_error.exit.i72, %ifend.i, %TypeChecker_error.exit.i, %ifend61.i, %TypeChecker_error.exit162.i, %TypeChecker_error.exit.i91, %ifend.i87, %else.i, %if.entry30, %if.entry26, %TypeChecker_check_condition.exit, %if.entry6, %if.entry2, %TypeChecker_check_if_stamement.exit
  %common.ret.op = phi ptr [ %21, %TypeChecker_check_if_stamement.exit ], [ %22, %if.entry2 ], [ %23, %if.entry6 ], [ %324, %TypeChecker_check_condition.exit ], [ %361, %if.entry26 ], [ %363, %if.entry30 ], [ null, %TypeChecker_error.exit.i91 ], [ null, %TypeChecker_error.exit162.i ], [ %24, %ifend61.i ], [ null, %else.i ], [ null, %ifend.i87 ], [ null, %TypeChecker_error.exit.i ], [ %342, %ifend.i ], [ null, %TypeChecker_error.exit.i72 ], [ %360, %ifend.i73 ], [ null, %2 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i92 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx.i92, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i125 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i.i125, align 8
  %memberidx1.i.i126 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx1.i.i126, align 8
  %memberidx2.i.i127 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i.i127, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %TypeChecker_check_condition.exit139, label %ifend.i130

ifend.i130:                                       ; preds = %if.entry
  %memberidx.i129 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i129, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %TypeChecker_check_condition.exit139, label %true_block.i137

true_block.i137:                                  ; preds = %ifend.i130
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i131 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i131, align 4
  %memberidx1.i.i.i.i132 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i133 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i133, align 8
  %memberidx1.i.i.i134 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i134, align 8
  %memberidx3.i.i.i136 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i136, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i132, align 1
  br label %TypeChecker_check_condition.exit139

TypeChecker_check_condition.exit139:              ; preds = %ifend.i130, %if.entry, %true_block.i137
  %common.ret.op.i128 = phi ptr [ null, %if.entry ], [ %15, %true_block.i137 ], [ %6, %ifend.i130 ]
  %memberidx1.i93 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 3
  %17 = load ptr, ptr %memberidx1.i93, align 8
  %18 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %17, ptr null, i1 false)
  %memberidx2.i94 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 4
  %19 = load ptr, ptr %memberidx2.i94, align 8
  %.not.i95 = icmp eq ptr %19, null
  br i1 %.not.i95, label %TypeChecker_check_if_stamement.exit, label %true_block.i

true_block.i:                                     ; preds = %TypeChecker_check_condition.exit139
  %20 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr nonnull %19, ptr null, i1 false)
  br label %TypeChecker_check_if_stamement.exit

TypeChecker_check_if_stamement.exit:              ; preds = %TypeChecker_check_condition.exit139, %true_block.i
  %ternary.i = phi ptr [ %20, %true_block.i ], [ null, %TypeChecker_check_condition.exit139 ]
  %21 = tail call ptr @malloc(i32 32)
  store i64 0, ptr %21, align 4
  %memberidx.i.i96 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 1
  store ptr %common.ret.op.i128, ptr %memberidx.i.i96, align 8
  %memberidx1.i.i97 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 2
  store ptr %18, ptr %memberidx1.i.i97, align 8
  %memberidx2.i.i98 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx2.i.i98, align 8
  br label %common.ret

if.entry2:                                        ; preds = %2
  %22 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry6:                                        ; preds = %2
  %23 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry10:                                       ; preds = %2
  %24 = tail call ptr @malloc(i32 48)
  store i64 3, ptr %24, align 4
  %memberidx.i.i77 = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 1
  %memberidx1.i.i78 = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 2
  %memberidx2.i.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 3
  %memberidx3.i.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 4
  %memberidx.i128.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %memberidx.i.i77, i8 0, i64 32, i1 false)
  %25 = load ptr, ptr %memberidx.i128.i, align 8
  %26 = load i64, ptr %25, align 4
  %27 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %26)
  %memberidx2.i129.i = getelementptr inbounds %Scope, ptr %27, i64 0, i32 5
  %28 = load ptr, ptr %memberidx.i128.i, align 8
  store ptr %28, ptr %memberidx2.i129.i, align 8
  %29 = load ptr, ptr %0, align 8
  %30 = load ptr, ptr %memberidx.i128.i, align 8
  %31 = load ptr, ptr %29, align 8
  %32 = load i64, ptr %30, align 4
  %33 = load ptr, ptr %31, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 %32
  %35 = load ptr, ptr %34, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %35, i64 0, i32 7
  %36 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %ScopeId, ptr %30, i64 0, i32 1
  %37 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %38 = load ptr, ptr %36, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  %memberidx4.i.i = getelementptr inbounds %Scope, ptr %40, i64 0, i32 7
  %41 = load ptr, ptr %memberidx4.i.i, align 8
  %42 = load ptr, ptr %27, align 8
  %memberidx.i.i.i80 = getelementptr inbounds %Array_ScopeId_, ptr %41, i64 0, i32 1
  %43 = load i64, ptr %memberidx.i.i.i80, align 4
  %memberidx1.i11.i.i = getelementptr inbounds %Array_ScopeId_, ptr %41, i64 0, i32 2
  %44 = load i64, ptr %memberidx1.i11.i.i, align 4
  %.not.i.i.i81 = icmp slt i64 %43, %44
  br i1 %.not.i.i.i81, label %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge, label %if.entry.i.i.i83

if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge: ; preds = %if.entry10
  %.pre177 = load ptr, ptr %41, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit.i

if.entry.i.i.i83:                                 ; preds = %if.entry10
  %45 = shl nuw i64 %44, 1
  store i64 %45, ptr %memberidx1.i11.i.i, align 4
  %46 = load ptr, ptr %41, align 8
  %47 = shl i64 %44, 4
  %48 = tail call ptr @realloc(ptr %46, i64 %47)
  store ptr %48, ptr %41, align 8
  %.pre176 = load i64, ptr %memberidx.i.i.i80, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit.i

TypeChecker_create_child_scope_within_current_scope.exit.i: ; preds = %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge, %if.entry.i.i.i83
  %49 = phi ptr [ %48, %if.entry.i.i.i83 ], [ %.pre177, %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge ]
  %50 = phi i64 [ %.pre176, %if.entry.i.i.i83 ], [ %43, %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge ]
  %51 = add nsw i64 %50, 1
  store i64 %51, ptr %memberidx.i.i.i80, align 4
  %52 = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %42, ptr %52, align 8
  %53 = load ptr, ptr %27, align 8
  store ptr %53, ptr %memberidx.i128.i, align 8
  %memberidx2.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %54 = load i1, ptr %memberidx2.i, align 1
  %memberidx3.i85 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 6
  %55 = load i64, ptr %memberidx3.i85, align 4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %if.entry.i86, label %else.i

if.entry.i86:                                     ; preds = %TypeChecker_create_child_scope_within_current_scope.exit.i
  %memberidx4.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 2
  %57 = load ptr, ptr %memberidx4.i, align 8
  %.not.i = icmp eq ptr %57, null
  br i1 %.not.i, label %ifend7.i, label %if.entry5.i

else.i:                                           ; preds = %TypeChecker_create_child_scope_within_current_scope.exit.i
  %58 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %58, align 4
  %memberidx22.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 5
  %59 = load ptr, ptr %memberidx22.i, align 8
  %60 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %58, ptr %59)
  %memberidx.i130.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %61 = load ptr, ptr %memberidx.i130.i, align 8
  %memberidx1.i131.i = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx1.i131.i, align 8
  %memberidx2.i132.i = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %63 = load i64, ptr %memberidx2.i132.i, align 4
  %64 = icmp sgt i64 %63, 0
  br i1 %64, label %common.ret, label %ifend25.i

ifend.i87.sink.split:                             ; preds = %if.entry17.i, %get_class_prop_type.exit259.i
  %.sink = phi ptr [ %302, %get_class_prop_type.exit259.i ], [ %84, %if.entry17.i ]
  store ptr %.sink, ptr %memberidx3.i.i, align 8
  br label %ifend.i87

ifend.i87:                                        ; preds = %ifend.i87.sink.split, %ifend13.i
  %memberidx.i133.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %65 = load ptr, ptr %memberidx.i133.i, align 8
  %memberidx1.i134.i = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 5
  %66 = load ptr, ptr %memberidx1.i134.i, align 8
  %memberidx2.i135.i = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 1
  %67 = load i64, ptr %memberidx2.i135.i, align 4
  %68 = icmp sgt i64 %67, 0
  br i1 %68, label %common.ret, label %ifend61.i

if.entry5.i:                                      ; preds = %if.entry.i86
  %69 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr nonnull %57)
  store ptr %69, ptr %memberidx1.i.i78, align 8
  br label %ifend7.i

ifend7.i:                                         ; preds = %if.entry5.i, %if.entry.i86
  %memberidx10.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 3
  %70 = load ptr, ptr %memberidx10.i, align 8
  %.not126.i = icmp eq ptr %70, null
  br i1 %.not126.i, label %ifend13.i, label %if.entry11.i

if.entry11.i:                                     ; preds = %ifend7.i
  %71 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %71, align 4
  %72 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %71, ptr nonnull %70)
  %memberidx.i.i110 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %73 = load ptr, ptr %memberidx.i.i110, align 8
  %memberidx1.i.i111 = getelementptr inbounds %Compiler, ptr %73, i64 0, i32 5
  %74 = load ptr, ptr %memberidx1.i.i111, align 8
  %memberidx2.i.i112 = getelementptr inbounds %Array_FloError_, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx2.i.i112, align 4
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %TypeChecker_check_condition.exit124, label %ifend.i115

ifend.i115:                                       ; preds = %if.entry11.i
  %memberidx.i114 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  %77 = load ptr, ptr %memberidx.i114, align 8
  %78 = load i64, ptr %77, align 4
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %TypeChecker_check_condition.exit124, label %true_block.i122

true_block.i122:                                  ; preds = %ifend.i115
  %80 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %80, align 4
  %81 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %81, align 4
  %memberidx.i.i.i.i116 = getelementptr inbounds %Expression, ptr %81, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i116, align 4
  %memberidx1.i.i.i.i117 = getelementptr inbounds %Expression, ptr %81, i64 0, i32 1
  %memberidx.i.i.i118 = getelementptr inbounds %TypeCastExpression, ptr %81, i64 0, i32 4
  store ptr %72, ptr %memberidx.i.i.i118, align 8
  %memberidx1.i.i.i119 = getelementptr inbounds %Expression, ptr %81, i64 0, i32 3
  store ptr %80, ptr %memberidx1.i.i.i119, align 8
  %memberidx3.i.i.i121 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 1
  %82 = load i1, ptr %memberidx3.i.i.i121, align 1
  store i1 %82, ptr %memberidx1.i.i.i.i117, align 1
  br label %TypeChecker_check_condition.exit124

TypeChecker_check_condition.exit124:              ; preds = %ifend.i115, %if.entry11.i, %true_block.i122
  %common.ret.op.i113 = phi ptr [ null, %if.entry11.i ], [ %81, %true_block.i122 ], [ %72, %ifend.i115 ]
  store ptr %common.ret.op.i113, ptr %memberidx2.i.i, align 8
  br label %ifend13.i

ifend13.i:                                        ; preds = %TypeChecker_check_condition.exit124, %ifend7.i
  %memberidx16.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 4
  %83 = load ptr, ptr %memberidx16.i, align 8
  %.not127.i = icmp eq ptr %83, null
  br i1 %.not127.i, label %ifend.i87, label %if.entry17.i

if.entry17.i:                                     ; preds = %ifend13.i
  %84 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr nonnull %83)
  br label %ifend.i87.sink.split

ifend25.i:                                        ; preds = %else.i
  %memberidx26.i = getelementptr inbounds %Expression, ptr %60, i64 0, i32 3
  %85 = load ptr, ptr %memberidx26.i, align 8
  %86 = load i64, ptr %85, align 4
  %87 = icmp eq i64 %86, 20
  br i1 %87, label %if.entry.i155, label %is_object.exit.thread

if.entry.i155:                                    ; preds = %ifend25.i, %if.entry.i155
  %.tr5.i = phi ptr [ %88, %if.entry.i155 ], [ %85, %ifend25.i ]
  %memberidx1.i154 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %88 = load ptr, ptr %memberidx1.i154, align 8
  %89 = load i64, ptr %88, align 4
  switch i64 %89, label %if.entry27.i [
    i64 20, label %if.entry.i155
    i64 11, label %ifend29.i
  ]

is_object.exit.thread:                            ; preds = %ifend25.i
  %90 = icmp eq i64 %86, 11
  br i1 %90, label %ifend29.i.thread, label %if.entry27.i

ifend29.i.thread:                                 ; preds = %is_object.exit.thread
  %91 = load ptr, ptr %0, align 8
  br label %if.entry3.i165

if.entry27.i:                                     ; preds = %if.entry.i155, %is_object.exit.thread
  %92 = tail call ptr @malloc(i32 28)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %92, ptr noundef nonnull align 8 dereferenceable(28) @236, i64 28, i1 false)
  %93 = tail call ptr @malloc(i32 24)
  store ptr %92, ptr %93, align 8
  %memberidx1.i.i136.i = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  store i64 28, ptr %memberidx1.i.i136.i, align 4
  %memberidx2.i.i.i89 = getelementptr inbounds %String, ptr %93, i64 0, i32 2
  store i64 28, ptr %memberidx2.i.i.i89, align 4
  %94 = load ptr, ptr %memberidx22.i, align 8
  %95 = load ptr, ptr %94, align 8
  %96 = load ptr, ptr %memberidx.i130.i, align 8
  %memberidx1.i138.i = getelementptr inbounds %Compiler, ptr %96, i64 0, i32 5
  %97 = load ptr, ptr %memberidx1.i138.i, align 8
  %98 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %98, align 4
  %memberidx1.i.i139.i = getelementptr inbounds %FloError, ptr %98, i64 0, i32 2
  store ptr %95, ptr %memberidx1.i.i139.i, align 8
  %memberidx2.i.i140.i = getelementptr inbounds %FloError, ptr %98, i64 0, i32 1
  store ptr %93, ptr %memberidx2.i.i140.i, align 8
  %memberidx.i.i141.i = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 1
  %99 = load i64, ptr %memberidx.i.i141.i, align 4
  %memberidx1.i2.i.i90 = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 2
  %100 = load i64, ptr %memberidx1.i2.i.i90, align 4
  %.not.i.i142.i = icmp slt i64 %99, %100
  br i1 %.not.i.i142.i, label %if.entry27.i.TypeChecker_error.exit.i91_crit_edge, label %if.entry.i.i144.i

if.entry27.i.TypeChecker_error.exit.i91_crit_edge: ; preds = %if.entry27.i
  %.pre179 = load ptr, ptr %97, align 8
  br label %TypeChecker_error.exit.i91

if.entry.i.i144.i:                                ; preds = %if.entry27.i
  %101 = shl nuw i64 %100, 1
  store i64 %101, ptr %memberidx1.i2.i.i90, align 4
  %102 = load ptr, ptr %97, align 8
  %103 = shl i64 %100, 4
  %104 = tail call ptr @realloc(ptr %102, i64 %103)
  store ptr %104, ptr %97, align 8
  %.pre178 = load i64, ptr %memberidx.i.i141.i, align 4
  br label %TypeChecker_error.exit.i91

TypeChecker_error.exit.i91:                       ; preds = %if.entry27.i.TypeChecker_error.exit.i91_crit_edge, %if.entry.i.i144.i
  %105 = phi ptr [ %104, %if.entry.i.i144.i ], [ %.pre179, %if.entry27.i.TypeChecker_error.exit.i91_crit_edge ]
  %106 = phi i64 [ %.pre178, %if.entry.i.i144.i ], [ %99, %if.entry27.i.TypeChecker_error.exit.i91_crit_edge ]
  %107 = add nsw i64 %106, 1
  store i64 %107, ptr %memberidx.i.i141.i, align 4
  %108 = getelementptr inbounds ptr, ptr %105, i64 %106
  store ptr %98, ptr %108, align 8
  br label %common.ret

ifend29.i:                                        ; preds = %if.entry.i155
  %109 = load ptr, ptr %0, align 8
  br i1 %87, label %if.entry.i161, label %if.entry3.i165

if.entry.i161:                                    ; preds = %ifend29.i, %if.entry.i161
  %.tr11.i157170 = phi ptr [ %110, %if.entry.i161 ], [ %85, %ifend29.i ]
  %memberidx1.i160 = getelementptr inbounds %GenericType, ptr %.tr11.i157170, i64 0, i32 3
  %110 = load ptr, ptr %memberidx1.i160, align 8
  %111 = load i64, ptr %110, align 4
  %switch = icmp eq i64 %111, 20
  br i1 %switch, label %if.entry.i161, label %if.entry3.i165

if.entry3.i165:                                   ; preds = %if.entry.i161, %ifend29.i.thread, %ifend29.i
  %112 = phi ptr [ %109, %ifend29.i ], [ %91, %ifend29.i.thread ], [ %109, %if.entry.i161 ]
  %.tr11.i157.lcssa = phi ptr [ %85, %ifend29.i ], [ %85, %ifend29.i.thread ], [ %110, %if.entry.i161 ]
  %memberidx6.i162 = getelementptr inbounds %ObjectType, ptr %.tr11.i157.lcssa, i64 0, i32 1
  %113 = load ptr, ptr %memberidx6.i162, align 8
  %114 = load ptr, ptr %112, align 8
  %115 = load i64, ptr %113, align 4
  %116 = load ptr, ptr %114, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %115
  %118 = load ptr, ptr %117, align 8
  %memberidx2.i.i163 = getelementptr inbounds %Module, ptr %118, i64 0, i32 3
  %119 = load ptr, ptr %memberidx2.i.i163, align 8
  %memberidx3.i.i164 = getelementptr inbounds %TypeId, ptr %113, i64 0, i32 2
  %120 = load i64, ptr %memberidx3.i.i164, align 4
  %121 = load ptr, ptr %119, align 8
  %122 = getelementptr inbounds ptr, ptr %121, i64 %120
  %123 = load ptr, ptr %122, align 8
  %memberidx34.i = getelementptr inbounds %Class, ptr %123, i64 0, i32 6
  %124 = load ptr, ptr %memberidx34.i, align 8
  %125 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %125, align 8
  %126 = tail call ptr @malloc(i32 24)
  store ptr %125, ptr %126, align 8
  %memberidx1.i.i145.i = getelementptr inbounds %String, ptr %126, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i145.i, align 4
  %memberidx2.i.i146.i = getelementptr inbounds %String, ptr %126, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i146.i, align 4
  %127 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %126)
  %memberidx.i147.i = getelementptr inbounds %Map_String_PropId_, ptr %124, i64 0, i32 1
  %128 = load i64, ptr %memberidx.i147.i, align 4
  %129 = urem i64 %127, %128
  %130 = load ptr, ptr %124, align 8
  %131 = getelementptr inbounds ptr, ptr %130, i64 %129
  %132 = load ptr, ptr %131, align 8
  %.not.i.i = icmp eq ptr %132, null
  br i1 %.not.i.i, label %if.entry35.i, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %if.entry3.i165, %else.i.i
  %133 = phi ptr [ %141, %else.i.i ], [ %130, %if.entry3.i165 ]
  %134 = phi i64 [ %142, %else.i.i ], [ %128, %if.entry3.i165 ]
  %135 = phi ptr [ %146, %else.i.i ], [ %132, %if.entry3.i165 ]
  %hash.0.i.i = phi i64 [ %144, %else.i.i ], [ %129, %if.entry3.i165 ]
  %136 = load ptr, ptr %135, align 8
  %memberidx.i.i148.i = getelementptr inbounds %String, ptr %136, i64 0, i32 1
  %137 = load i64, ptr %memberidx.i.i148.i, align 4
  %.not.i.i150.i = icmp eq i64 %137, 8
  br i1 %.not.i.i150.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %138 = load ptr, ptr %136, align 8
  %139 = tail call i64 @memcmp(ptr %138, ptr nonnull %125, i64 8)
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre180 = load i64, ptr %memberidx.i147.i, align 4
  %.pre181 = load ptr, ptr %124, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre182.pre = load ptr, ptr %124, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre182.pre, i64 %hash.0.i.i
  %.pre183.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre183.pre, null
  br i1 %.not25.i.i, label %if.entry35.i, label %Map_String_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %141 = phi ptr [ %.pre181, %ifend.i.i.i.else.i.i_crit_edge ], [ %133, %while.entry.i.i ]
  %142 = phi i64 [ %.pre180, %ifend.i.i.i.else.i.i_crit_edge ], [ %134, %while.entry.i.i ]
  %143 = add nuw i64 %hash.0.i.i, 1
  %144 = urem i64 %143, %142
  %145 = getelementptr inbounds ptr, ptr %141, i64 %144
  %146 = load ptr, ptr %145, align 8
  %.not26.i.i = icmp eq ptr %146, null
  br i1 %.not26.i.i, label %if.entry35.i, label %while.entry.i.i

Map_String_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre183.pre, i64 0, i32 1
  %147 = load ptr, ptr %memberidx11.i.i, align 8
  %148 = icmp eq ptr %147, null
  br i1 %148, label %if.entry35.i, label %ifend37.i

if.entry35.i:                                     ; preds = %else.i.i, %if.entry3.i165, %while.end.i.i, %Map_String_PropId____getitem__.exit.i
  %149 = tail call ptr @malloc(i32 46)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(46) %149, ptr noundef nonnull align 8 dereferenceable(46) @237, i64 46, i1 false)
  %150 = tail call ptr @malloc(i32 24)
  store ptr %149, ptr %150, align 8
  %memberidx1.i.i151.i = getelementptr inbounds %String, ptr %150, i64 0, i32 1
  store i64 46, ptr %memberidx1.i.i151.i, align 4
  %memberidx2.i.i152.i = getelementptr inbounds %String, ptr %150, i64 0, i32 2
  store i64 46, ptr %memberidx2.i.i152.i, align 4
  %151 = load ptr, ptr %memberidx22.i, align 8
  %152 = load ptr, ptr %151, align 8
  %153 = load ptr, ptr %memberidx.i130.i, align 8
  %memberidx1.i154.i = getelementptr inbounds %Compiler, ptr %153, i64 0, i32 5
  %154 = load ptr, ptr %memberidx1.i154.i, align 8
  %155 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %155, align 4
  %memberidx1.i.i155.i = getelementptr inbounds %FloError, ptr %155, i64 0, i32 2
  store ptr %152, ptr %memberidx1.i.i155.i, align 8
  %memberidx2.i.i156.i = getelementptr inbounds %FloError, ptr %155, i64 0, i32 1
  store ptr %150, ptr %memberidx2.i.i156.i, align 8
  %memberidx.i.i157.i = getelementptr inbounds %Array_FloError_, ptr %154, i64 0, i32 1
  %156 = load i64, ptr %memberidx.i.i157.i, align 4
  %memberidx1.i2.i158.i = getelementptr inbounds %Array_FloError_, ptr %154, i64 0, i32 2
  %157 = load i64, ptr %memberidx1.i2.i158.i, align 4
  %.not.i.i159.i = icmp slt i64 %156, %157
  br i1 %.not.i.i159.i, label %if.entry35.i.TypeChecker_error.exit162.i_crit_edge, label %if.entry.i.i161.i

if.entry35.i.TypeChecker_error.exit162.i_crit_edge: ; preds = %if.entry35.i
  %.pre195 = load ptr, ptr %154, align 8
  br label %TypeChecker_error.exit162.i

if.entry.i.i161.i:                                ; preds = %if.entry35.i
  %158 = shl nuw i64 %157, 1
  store i64 %158, ptr %memberidx1.i2.i158.i, align 4
  %159 = load ptr, ptr %154, align 8
  %160 = shl i64 %157, 4
  %161 = tail call ptr @realloc(ptr %159, i64 %160)
  store ptr %161, ptr %154, align 8
  %.pre194 = load i64, ptr %memberidx.i.i157.i, align 4
  br label %TypeChecker_error.exit162.i

TypeChecker_error.exit162.i:                      ; preds = %if.entry35.i.TypeChecker_error.exit162.i_crit_edge, %if.entry.i.i161.i
  %162 = phi ptr [ %161, %if.entry.i.i161.i ], [ %.pre195, %if.entry35.i.TypeChecker_error.exit162.i_crit_edge ]
  %163 = phi i64 [ %.pre194, %if.entry.i.i161.i ], [ %156, %if.entry35.i.TypeChecker_error.exit162.i_crit_edge ]
  %164 = add nsw i64 %163, 1
  store i64 %164, ptr %memberidx.i.i157.i, align 4
  %165 = getelementptr inbounds ptr, ptr %162, i64 %163
  store ptr %155, ptr %165, align 8
  br label %common.ret

ifend37.i:                                        ; preds = %Map_String_PropId____getitem__.exit.i
  %166 = load ptr, ptr %0, align 8
  %memberidx.i.i163.i = getelementptr inbounds %PropId, ptr %147, i64 0, i32 1
  %167 = load ptr, ptr %memberidx.i.i163.i, align 8
  %168 = load ptr, ptr %166, align 8
  %169 = load i64, ptr %167, align 4
  %170 = load ptr, ptr %168, align 8
  %171 = getelementptr inbounds ptr, ptr %170, i64 %169
  %172 = load ptr, ptr %171, align 8
  %memberidx2.i.i.i164.i = getelementptr inbounds %Module, ptr %172, i64 0, i32 3
  %173 = load ptr, ptr %memberidx2.i.i.i164.i, align 8
  %memberidx3.i.i.i165.i = getelementptr inbounds %TypeId, ptr %167, i64 0, i32 2
  %174 = load i64, ptr %memberidx3.i.i.i165.i, align 4
  %175 = load ptr, ptr %173, align 8
  %176 = getelementptr inbounds ptr, ptr %175, i64 %174
  %177 = load ptr, ptr %176, align 8
  %178 = load i64, ptr %147, align 4
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend37.i
  %memberidx1.i167.i = getelementptr inbounds %Class, ptr %177, i64 0, i32 5
  %180 = load ptr, ptr %memberidx1.i167.i, align 8
  %memberidx2.i168.i = getelementptr inbounds %PropId, ptr %147, i64 0, i32 2
  %181 = load i64, ptr %memberidx2.i168.i, align 4
  %182 = load ptr, ptr %180, align 8
  %183 = getelementptr inbounds ptr, ptr %182, i64 %181
  %184 = load ptr, ptr %183, align 8
  %memberidx3.i169.i = getelementptr inbounds %ClassMethod, ptr %184, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend37.i
  %memberidx4.i170.i = getelementptr inbounds %Class, ptr %177, i64 0, i32 4
  %185 = load ptr, ptr %memberidx4.i170.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %147, i64 0, i32 2
  %186 = load i64, ptr %memberidx5.i.i, align 4
  %187 = load ptr, ptr %185, align 8
  %188 = getelementptr inbounds ptr, ptr %187, i64 %186
  %189 = load ptr, ptr %188, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %189, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i169.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i166.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %memberidx41.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i166.i, i64 0, i32 2
  %190 = load ptr, ptr %memberidx41.i, align 8
  %191 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %191, ptr noundef nonnull align 8 dereferenceable(6) @238, i64 6, i1 false)
  %192 = tail call ptr @malloc(i32 24)
  store ptr %191, ptr %192, align 8
  %memberidx1.i.i171.i = getelementptr inbounds %String, ptr %192, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i171.i, align 4
  %memberidx2.i.i172.i = getelementptr inbounds %String, ptr %192, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i172.i, align 4
  %193 = tail call ptr @malloc(i32 41)
  %194 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %194, align 4
  %memberidx.i.i173.i = getelementptr inbounds %Expression, ptr %194, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i173.i, align 4
  %memberidx1.i.i174.i = getelementptr inbounds %Expression, ptr %194, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i174.i, align 1
  %memberidx.i175.i = getelementptr inbounds %MemberExpression, ptr %194, i64 0, i32 4
  store ptr %60, ptr %memberidx.i175.i, align 8
  %memberidx1.i176.i = getelementptr inbounds %MemberExpression, ptr %194, i64 0, i32 5
  store ptr %147, ptr %memberidx1.i176.i, align 8
  %memberidx2.i177.i = getelementptr inbounds %Expression, ptr %194, i64 0, i32 3
  store ptr %common.ret.op.i166.i, ptr %memberidx2.i177.i, align 8
  %195 = tail call ptr @malloc(i32 24)
  %memberidx.i178.i = getelementptr inbounds %Array_Expression_, ptr %195, i64 0, i32 1
  store i64 0, ptr %memberidx.i178.i, align 4
  %memberidx1.i179.i = getelementptr inbounds %Array_Expression_, ptr %195, i64 0, i32 2
  store i64 8, ptr %memberidx1.i179.i, align 4
  %196 = tail call ptr @malloc(i32 64)
  store ptr %196, ptr %195, align 8
  store i64 0, ptr %memberidx.i178.i, align 4
  store i64 8, ptr %193, align 4
  %memberidx.i.i180.i = getelementptr inbounds %Expression, ptr %193, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i180.i, align 4
  %memberidx1.i.i181.i = getelementptr inbounds %Expression, ptr %193, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i181.i, align 1
  %memberidx.i182.i = getelementptr inbounds %CallExpression, ptr %193, i64 0, i32 4
  store ptr %194, ptr %memberidx.i182.i, align 8
  %memberidx1.i183.i = getelementptr inbounds %CallExpression, ptr %193, i64 0, i32 5
  store ptr %195, ptr %memberidx1.i183.i, align 8
  %memberidx2.i184.i = getelementptr inbounds %Expression, ptr %193, i64 0, i32 3
  store ptr %190, ptr %memberidx2.i184.i, align 8
  %197 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr nonnull %192, ptr nonnull %193, ptr %190)
  %memberidx44.i = getelementptr inbounds %Var, ptr %197, i64 0, i32 1
  %198 = load ptr, ptr %memberidx44.i, align 8
  %199 = tail call ptr @malloc(i32 25)
  store i64 1, ptr %199, align 4
  %memberidx.i185.i = getelementptr inbounds %VarDeclaration, ptr %199, i64 0, i32 2
  store ptr %198, ptr %memberidx.i185.i, align 8
  %memberidx1.i186.i = getelementptr inbounds %VarDeclaration, ptr %199, i64 0, i32 1
  store ptr %192, ptr %memberidx1.i186.i, align 8
  %memberidx2.i187.i = getelementptr inbounds %VarDeclaration, ptr %199, i64 0, i32 3
  store i1 false, ptr %memberidx2.i187.i, align 1
  store ptr %199, ptr %memberidx.i.i77, align 8
  %200 = load ptr, ptr %0, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i151, %get_class_prop_type.exit.i
  %.tr11.i = phi ptr [ %190, %get_class_prop_type.exit.i ], [ %202, %if.entry.i151 ]
  %201 = load i64, ptr %.tr11.i, align 4
  switch i64 %201, label %get_class_from_type.exit [
    i64 20, label %if.entry.i151
    i64 11, label %if.entry3.i
  ]

if.entry.i151:                                    ; preds = %tailrecurse.i
  %memberidx1.i150 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %202 = load ptr, ptr %memberidx1.i150, align 8
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %203 = load ptr, ptr %memberidx6.i, align 8
  %204 = load ptr, ptr %200, align 8
  %205 = load i64, ptr %203, align 4
  %206 = load ptr, ptr %204, align 8
  %207 = getelementptr inbounds ptr, ptr %206, i64 %205
  %208 = load ptr, ptr %207, align 8
  %memberidx2.i.i152 = getelementptr inbounds %Module, ptr %208, i64 0, i32 3
  %209 = load ptr, ptr %memberidx2.i.i152, align 8
  %memberidx3.i.i153 = getelementptr inbounds %TypeId, ptr %203, i64 0, i32 2
  %210 = load i64, ptr %memberidx3.i.i153, align 4
  %211 = load ptr, ptr %209, align 8
  %212 = getelementptr inbounds ptr, ptr %211, i64 %210
  %213 = load ptr, ptr %212, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i = phi ptr [ %213, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx47.i = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 6
  %214 = load ptr, ptr %memberidx47.i, align 8
  %215 = tail call ptr @malloc(i32 4)
  store i32 1701736292, ptr %215, align 8
  %216 = tail call ptr @malloc(i32 24)
  store ptr %215, ptr %216, align 8
  %memberidx1.i.i188.i = getelementptr inbounds %String, ptr %216, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i188.i, align 4
  %memberidx2.i.i189.i = getelementptr inbounds %String, ptr %216, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i189.i, align 4
  %217 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %216)
  %memberidx.i190.i = getelementptr inbounds %Map_String_PropId_, ptr %214, i64 0, i32 1
  %218 = load i64, ptr %memberidx.i190.i, align 4
  %219 = urem i64 %217, %218
  %220 = load ptr, ptr %214, align 8
  %221 = getelementptr inbounds ptr, ptr %220, i64 %219
  %222 = load ptr, ptr %221, align 8
  %.not.i191.i = icmp eq ptr %222, null
  br i1 %.not.i191.i, label %Map_String_PropId____getitem__.exit208.i, label %while.entry.i196.i

while.entry.i196.i:                               ; preds = %get_class_from_type.exit, %else.i204.i
  %223 = phi ptr [ %231, %else.i204.i ], [ %220, %get_class_from_type.exit ]
  %224 = phi i64 [ %232, %else.i204.i ], [ %218, %get_class_from_type.exit ]
  %225 = phi ptr [ %236, %else.i204.i ], [ %222, %get_class_from_type.exit ]
  %hash.0.i192.i = phi i64 [ %234, %else.i204.i ], [ %219, %get_class_from_type.exit ]
  %226 = load ptr, ptr %225, align 8
  %memberidx.i.i193.i = getelementptr inbounds %String, ptr %226, i64 0, i32 1
  %227 = load i64, ptr %memberidx.i.i193.i, align 4
  %.not.i.i195.i = icmp eq i64 %227, 4
  br i1 %.not.i.i195.i, label %ifend.i.i197.i, label %else.i204.i

ifend.i.i197.i:                                   ; preds = %while.entry.i196.i
  %228 = load ptr, ptr %226, align 8
  %229 = tail call i64 @memcmp(ptr %228, ptr nonnull %215, i64 4)
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %while.end.i202.i, label %ifend.i.i197.i.else.i204.i_crit_edge

ifend.i.i197.i.else.i204.i_crit_edge:             ; preds = %ifend.i.i197.i
  %.pre184 = load i64, ptr %memberidx.i190.i, align 4
  %.pre185 = load ptr, ptr %214, align 8
  br label %else.i204.i

while.end.i202.i:                                 ; preds = %ifend.i.i197.i
  %.pre186.pre = load ptr, ptr %214, align 8
  %.phi.trans.insert187.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre186.pre, i64 %hash.0.i192.i
  %.pre188.pre = load ptr, ptr %.phi.trans.insert187.phi.trans.insert, align 8
  %.not25.i201.i = icmp eq ptr %.pre188.pre, null
  br i1 %.not25.i201.i, label %Map_String_PropId____getitem__.exit208.i, label %if.entry7.i207.i

else.i204.i:                                      ; preds = %ifend.i.i197.i.else.i204.i_crit_edge, %while.entry.i196.i
  %231 = phi ptr [ %.pre185, %ifend.i.i197.i.else.i204.i_crit_edge ], [ %223, %while.entry.i196.i ]
  %232 = phi i64 [ %.pre184, %ifend.i.i197.i.else.i204.i_crit_edge ], [ %224, %while.entry.i196.i ]
  %233 = add nuw i64 %hash.0.i192.i, 1
  %234 = urem i64 %233, %232
  %235 = getelementptr inbounds ptr, ptr %231, i64 %234
  %236 = load ptr, ptr %235, align 8
  %.not26.i203.i = icmp eq ptr %236, null
  br i1 %.not26.i203.i, label %Map_String_PropId____getitem__.exit208.i, label %while.entry.i196.i

if.entry7.i207.i:                                 ; preds = %while.end.i202.i
  %memberidx11.i206.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre188.pre, i64 0, i32 1
  %237 = load ptr, ptr %memberidx11.i206.i, align 8
  br label %Map_String_PropId____getitem__.exit208.i

Map_String_PropId____getitem__.exit208.i:         ; preds = %else.i204.i, %get_class_from_type.exit, %if.entry7.i207.i, %while.end.i202.i
  %common.ret.op.i205.i = phi ptr [ %237, %if.entry7.i207.i ], [ null, %while.end.i202.i ], [ null, %get_class_from_type.exit ], [ null, %else.i204.i ]
  %238 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %238, align 4
  %memberidx.i.i209.i = getelementptr inbounds %Expression, ptr %238, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i209.i, align 4
  %memberidx1.i.i210.i = getelementptr inbounds %Expression, ptr %238, i64 0, i32 1
  %memberidx.i211.i = getelementptr inbounds %VarAccessExpression, ptr %238, i64 0, i32 4
  store ptr %198, ptr %memberidx.i211.i, align 8
  %memberidx1.i212.i = getelementptr inbounds %Expression, ptr %238, i64 0, i32 3
  store ptr %190, ptr %memberidx1.i212.i, align 8
  %239 = load i64, ptr %198, align 4
  %240 = icmp eq i64 %239, 2
  store i1 %240, ptr %memberidx1.i.i210.i, align 1
  %241 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %241, align 4
  %242 = tail call ptr @malloc(i32 41)
  %243 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %243, align 4
  %memberidx.i.i214.i = getelementptr inbounds %Expression, ptr %243, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i214.i, align 4
  %memberidx1.i.i215.i = getelementptr inbounds %Expression, ptr %243, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i215.i, align 1
  %memberidx.i216.i = getelementptr inbounds %MemberExpression, ptr %243, i64 0, i32 4
  store ptr %238, ptr %memberidx.i216.i, align 8
  %memberidx1.i217.i = getelementptr inbounds %MemberExpression, ptr %243, i64 0, i32 5
  store ptr %common.ret.op.i205.i, ptr %memberidx1.i217.i, align 8
  %memberidx2.i218.i = getelementptr inbounds %Expression, ptr %243, i64 0, i32 3
  store ptr %241, ptr %memberidx2.i218.i, align 8
  store i64 8, ptr %242, align 4
  %memberidx.i.i219.i = getelementptr inbounds %Expression, ptr %242, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i219.i, align 4
  %memberidx1.i.i220.i = getelementptr inbounds %Expression, ptr %242, i64 0, i32 1
  %memberidx.i221.i = getelementptr inbounds %UnaryExpression, ptr %242, i64 0, i32 4
  store i64 7, ptr %memberidx.i221.i, align 4
  %memberidx1.i222.i = getelementptr inbounds %UnaryExpression, ptr %242, i64 0, i32 5
  store ptr %243, ptr %memberidx1.i222.i, align 8
  %memberidx2.i223.i = getelementptr inbounds %Expression, ptr %242, i64 0, i32 3
  store ptr %241, ptr %memberidx2.i223.i, align 8
  store i1 false, ptr %memberidx1.i.i220.i, align 1
  store ptr %242, ptr %memberidx2.i.i, align 8
  %memberidx49.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 7
  %244 = load ptr, ptr %memberidx49.i, align 8
  %memberidx50.i = getelementptr inbounds %IdentifierToken, ptr %244, i64 0, i32 2
  %245 = load ptr, ptr %memberidx50.i, align 8
  %246 = load ptr, ptr %memberidx47.i, align 8
  %247 = tail call ptr @malloc(i32 4)
  store i32 1954047342, ptr %247, align 8
  %248 = tail call ptr @malloc(i32 24)
  store ptr %247, ptr %248, align 8
  %memberidx1.i.i225.i = getelementptr inbounds %String, ptr %248, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i225.i, align 4
  %memberidx2.i.i226.i = getelementptr inbounds %String, ptr %248, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i226.i, align 4
  %249 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %248)
  %memberidx.i227.i = getelementptr inbounds %Map_String_PropId_, ptr %246, i64 0, i32 1
  %250 = load i64, ptr %memberidx.i227.i, align 4
  %251 = urem i64 %249, %250
  %252 = load ptr, ptr %246, align 8
  %253 = getelementptr inbounds ptr, ptr %252, i64 %251
  %254 = load ptr, ptr %253, align 8
  %.not.i228.i = icmp eq ptr %254, null
  br i1 %.not.i228.i, label %Map_String_PropId____getitem__.exit245.i, label %while.entry.i233.i

while.entry.i233.i:                               ; preds = %Map_String_PropId____getitem__.exit208.i, %else.i241.i
  %255 = phi ptr [ %263, %else.i241.i ], [ %252, %Map_String_PropId____getitem__.exit208.i ]
  %256 = phi i64 [ %264, %else.i241.i ], [ %250, %Map_String_PropId____getitem__.exit208.i ]
  %257 = phi ptr [ %268, %else.i241.i ], [ %254, %Map_String_PropId____getitem__.exit208.i ]
  %hash.0.i229.i = phi i64 [ %266, %else.i241.i ], [ %251, %Map_String_PropId____getitem__.exit208.i ]
  %258 = load ptr, ptr %257, align 8
  %memberidx.i.i230.i = getelementptr inbounds %String, ptr %258, i64 0, i32 1
  %259 = load i64, ptr %memberidx.i.i230.i, align 4
  %.not.i.i232.i = icmp eq i64 %259, 4
  br i1 %.not.i.i232.i, label %ifend.i.i234.i, label %else.i241.i

ifend.i.i234.i:                                   ; preds = %while.entry.i233.i
  %260 = load ptr, ptr %258, align 8
  %261 = tail call i64 @memcmp(ptr %260, ptr nonnull %247, i64 4)
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %while.end.i239.i, label %ifend.i.i234.i.else.i241.i_crit_edge

ifend.i.i234.i.else.i241.i_crit_edge:             ; preds = %ifend.i.i234.i
  %.pre189 = load i64, ptr %memberidx.i227.i, align 4
  %.pre190 = load ptr, ptr %246, align 8
  br label %else.i241.i

while.end.i239.i:                                 ; preds = %ifend.i.i234.i
  %.pre191.pre = load ptr, ptr %246, align 8
  %.phi.trans.insert192.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre191.pre, i64 %hash.0.i229.i
  %.pre193.pre = load ptr, ptr %.phi.trans.insert192.phi.trans.insert, align 8
  %.not25.i238.i = icmp eq ptr %.pre193.pre, null
  br i1 %.not25.i238.i, label %Map_String_PropId____getitem__.exit245.i, label %if.entry7.i244.i

else.i241.i:                                      ; preds = %ifend.i.i234.i.else.i241.i_crit_edge, %while.entry.i233.i
  %263 = phi ptr [ %.pre190, %ifend.i.i234.i.else.i241.i_crit_edge ], [ %255, %while.entry.i233.i ]
  %264 = phi i64 [ %.pre189, %ifend.i.i234.i.else.i241.i_crit_edge ], [ %256, %while.entry.i233.i ]
  %265 = add nuw i64 %hash.0.i229.i, 1
  %266 = urem i64 %265, %264
  %267 = getelementptr inbounds ptr, ptr %263, i64 %266
  %268 = load ptr, ptr %267, align 8
  %.not26.i240.i = icmp eq ptr %268, null
  br i1 %.not26.i240.i, label %Map_String_PropId____getitem__.exit245.i, label %while.entry.i233.i

if.entry7.i244.i:                                 ; preds = %while.end.i239.i
  %memberidx11.i243.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre193.pre, i64 0, i32 1
  %269 = load ptr, ptr %memberidx11.i243.i, align 8
  br label %Map_String_PropId____getitem__.exit245.i

Map_String_PropId____getitem__.exit245.i:         ; preds = %else.i241.i, %Map_String_PropId____getitem__.exit208.i, %if.entry7.i244.i, %while.end.i239.i
  %common.ret.op.i242.i = phi ptr [ %269, %if.entry7.i244.i ], [ null, %while.end.i239.i ], [ null, %Map_String_PropId____getitem__.exit208.i ], [ null, %else.i241.i ]
  %270 = load ptr, ptr %0, align 8
  %memberidx.i.i246.i = getelementptr inbounds %PropId, ptr %common.ret.op.i242.i, i64 0, i32 1
  %271 = load ptr, ptr %memberidx.i.i246.i, align 8
  %272 = load ptr, ptr %270, align 8
  %273 = load i64, ptr %271, align 4
  %274 = load ptr, ptr %272, align 8
  %275 = getelementptr inbounds ptr, ptr %274, i64 %273
  %276 = load ptr, ptr %275, align 8
  %memberidx2.i.i.i247.i = getelementptr inbounds %Module, ptr %276, i64 0, i32 3
  %277 = load ptr, ptr %memberidx2.i.i.i247.i, align 8
  %memberidx3.i.i.i248.i = getelementptr inbounds %TypeId, ptr %271, i64 0, i32 2
  %278 = load i64, ptr %memberidx3.i.i.i248.i, align 4
  %279 = load ptr, ptr %277, align 8
  %280 = getelementptr inbounds ptr, ptr %279, i64 %278
  %281 = load ptr, ptr %280, align 8
  %282 = load i64, ptr %common.ret.op.i242.i, align 4
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %if.entry.i254.i, label %ifend.i258.i

if.entry.i254.i:                                  ; preds = %Map_String_PropId____getitem__.exit245.i
  %memberidx1.i251.i = getelementptr inbounds %Class, ptr %281, i64 0, i32 5
  %284 = load ptr, ptr %memberidx1.i251.i, align 8
  %memberidx2.i252.i = getelementptr inbounds %PropId, ptr %common.ret.op.i242.i, i64 0, i32 2
  %285 = load i64, ptr %memberidx2.i252.i, align 4
  %286 = load ptr, ptr %284, align 8
  %287 = getelementptr inbounds ptr, ptr %286, i64 %285
  %288 = load ptr, ptr %287, align 8
  %memberidx3.i253.i = getelementptr inbounds %ClassMethod, ptr %288, i64 0, i32 4
  br label %get_class_prop_type.exit259.i

ifend.i258.i:                                     ; preds = %Map_String_PropId____getitem__.exit245.i
  %memberidx4.i255.i = getelementptr inbounds %Class, ptr %281, i64 0, i32 4
  %289 = load ptr, ptr %memberidx4.i255.i, align 8
  %memberidx5.i256.i = getelementptr inbounds %PropId, ptr %common.ret.op.i242.i, i64 0, i32 2
  %290 = load i64, ptr %memberidx5.i256.i, align 4
  %291 = load ptr, ptr %289, align 8
  %292 = getelementptr inbounds ptr, ptr %291, i64 %290
  %293 = load ptr, ptr %292, align 8
  %memberidx6.i257.i = getelementptr inbounds %ClassField, ptr %293, i64 0, i32 4
  br label %get_class_prop_type.exit259.i

get_class_prop_type.exit259.i:                    ; preds = %ifend.i258.i, %if.entry.i254.i
  %common.ret.op.in.i249.i = phi ptr [ %memberidx3.i253.i, %if.entry.i254.i ], [ %memberidx6.i257.i, %ifend.i258.i ]
  %common.ret.op.i250.i = load ptr, ptr %common.ret.op.in.i249.i, align 8
  %memberidx53.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i250.i, i64 0, i32 2
  %294 = load ptr, ptr %memberidx53.i, align 8
  %295 = tail call ptr @malloc(i32 41)
  %296 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %296, align 4
  %memberidx.i.i260.i = getelementptr inbounds %Expression, ptr %296, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i260.i, align 4
  %memberidx1.i.i261.i = getelementptr inbounds %Expression, ptr %296, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i261.i, align 1
  %memberidx.i262.i = getelementptr inbounds %MemberExpression, ptr %296, i64 0, i32 4
  store ptr %238, ptr %memberidx.i262.i, align 8
  %memberidx1.i263.i = getelementptr inbounds %MemberExpression, ptr %296, i64 0, i32 5
  store ptr %common.ret.op.i242.i, ptr %memberidx1.i263.i, align 8
  %memberidx2.i264.i = getelementptr inbounds %Expression, ptr %296, i64 0, i32 3
  store ptr %common.ret.op.i250.i, ptr %memberidx2.i264.i, align 8
  %297 = tail call ptr @malloc(i32 24)
  %memberidx.i265.i = getelementptr inbounds %Array_Expression_, ptr %297, i64 0, i32 1
  store i64 0, ptr %memberidx.i265.i, align 4
  %memberidx1.i266.i = getelementptr inbounds %Array_Expression_, ptr %297, i64 0, i32 2
  store i64 8, ptr %memberidx1.i266.i, align 4
  %298 = tail call ptr @malloc(i32 64)
  store ptr %298, ptr %297, align 8
  store i64 0, ptr %memberidx.i265.i, align 4
  store i64 8, ptr %295, align 4
  %memberidx.i.i267.i = getelementptr inbounds %Expression, ptr %295, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i267.i, align 4
  %memberidx1.i.i268.i = getelementptr inbounds %Expression, ptr %295, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i268.i, align 1
  %memberidx.i269.i = getelementptr inbounds %CallExpression, ptr %295, i64 0, i32 4
  store ptr %296, ptr %memberidx.i269.i, align 8
  %memberidx1.i270.i = getelementptr inbounds %CallExpression, ptr %295, i64 0, i32 5
  store ptr %297, ptr %memberidx1.i270.i, align 8
  %memberidx2.i271.i = getelementptr inbounds %Expression, ptr %295, i64 0, i32 3
  store ptr %294, ptr %memberidx2.i271.i, align 8
  %299 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %245, ptr nonnull %295, ptr %294)
  %memberidx56.i = getelementptr inbounds %Var, ptr %299, i64 0, i32 1
  %300 = load ptr, ptr %memberidx56.i, align 8
  %301 = tail call ptr @malloc(i32 25)
  store i64 1, ptr %301, align 4
  %memberidx.i272.i = getelementptr inbounds %VarDeclaration, ptr %301, i64 0, i32 2
  store ptr %300, ptr %memberidx.i272.i, align 8
  %memberidx1.i273.i = getelementptr inbounds %VarDeclaration, ptr %301, i64 0, i32 1
  store ptr %245, ptr %memberidx1.i273.i, align 8
  %memberidx2.i274.i = getelementptr inbounds %VarDeclaration, ptr %301, i64 0, i32 3
  store i1 false, ptr %memberidx2.i274.i, align 1
  store ptr %301, ptr %memberidx1.i.i78, align 8
  %302 = tail call ptr @malloc(i32 49)
  %303 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %303, align 4
  %memberidx.i.i275.i = getelementptr inbounds %Expression, ptr %303, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i275.i, align 4
  %memberidx1.i.i276.i = getelementptr inbounds %Expression, ptr %303, i64 0, i32 1
  %memberidx.i277.i = getelementptr inbounds %VarAccessExpression, ptr %303, i64 0, i32 4
  store ptr %300, ptr %memberidx.i277.i, align 8
  %memberidx1.i278.i = getelementptr inbounds %Expression, ptr %303, i64 0, i32 3
  store ptr %294, ptr %memberidx1.i278.i, align 8
  %304 = load i64, ptr %300, align 4
  %305 = icmp eq i64 %304, 2
  store i1 %305, ptr %memberidx1.i.i276.i, align 1
  store i64 8, ptr %302, align 4
  %memberidx.i.i280.i = getelementptr inbounds %Expression, ptr %302, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i280.i, align 4
  %memberidx1.i.i281.i = getelementptr inbounds %Expression, ptr %302, i64 0, i32 1
  %memberidx.i282.i = getelementptr inbounds %BinaryExpression, ptr %302, i64 0, i32 4
  store ptr %303, ptr %memberidx.i282.i, align 8
  %memberidx1.i283.i = getelementptr inbounds %BinaryExpression, ptr %302, i64 0, i32 5
  store i64 19, ptr %memberidx1.i283.i, align 4
  %memberidx2.i284.i = getelementptr inbounds %BinaryExpression, ptr %302, i64 0, i32 6
  store ptr %295, ptr %memberidx2.i284.i, align 8
  %memberidx3.i285.i = getelementptr inbounds %Expression, ptr %302, i64 0, i32 3
  store ptr %294, ptr %memberidx3.i285.i, align 8
  store i1 false, ptr %memberidx1.i.i281.i, align 1
  br label %ifend.i87.sink.split

ifend61.i:                                        ; preds = %ifend.i87
  store i1 true, ptr %memberidx2.i, align 1
  %memberidx63.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 5
  %memberidx64.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 8
  %306 = load ptr, ptr %memberidx64.i, align 8
  %307 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %306, ptr nonnull %27, i1 false)
  store ptr %307, ptr %memberidx63.i, align 8
  store i1 %54, ptr %memberidx2.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %2
  %memberidx.i74 = getelementptr inbounds %WhileStatementNode, ptr %1, i64 0, i32 2
  %308 = load ptr, ptr %memberidx.i74, align 8
  %309 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %309, align 4
  %310 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %309, ptr %308)
  %memberidx.i.i99 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %311 = load ptr, ptr %memberidx.i.i99, align 8
  %memberidx1.i.i100 = getelementptr inbounds %Compiler, ptr %311, i64 0, i32 5
  %312 = load ptr, ptr %memberidx1.i.i100, align 8
  %memberidx2.i.i101 = getelementptr inbounds %Array_FloError_, ptr %312, i64 0, i32 1
  %313 = load i64, ptr %memberidx2.i.i101, align 4
  %314 = icmp sgt i64 %313, 0
  br i1 %314, label %TypeChecker_check_condition.exit, label %ifend.i104

ifend.i104:                                       ; preds = %if.entry14
  %memberidx.i103 = getelementptr inbounds %Expression, ptr %310, i64 0, i32 3
  %315 = load ptr, ptr %memberidx.i103, align 8
  %316 = load i64, ptr %315, align 4
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %TypeChecker_check_condition.exit, label %true_block.i109

true_block.i109:                                  ; preds = %ifend.i104
  %318 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %318, align 4
  %319 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %319, align 4
  %memberidx.i.i.i.i105 = getelementptr inbounds %Expression, ptr %319, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i105, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %319, i64 0, i32 1
  %memberidx.i.i.i106 = getelementptr inbounds %TypeCastExpression, ptr %319, i64 0, i32 4
  store ptr %310, ptr %memberidx.i.i.i106, align 8
  %memberidx1.i.i.i107 = getelementptr inbounds %Expression, ptr %319, i64 0, i32 3
  store ptr %318, ptr %memberidx1.i.i.i107, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Expression, ptr %310, i64 0, i32 1
  %320 = load i1, ptr %memberidx3.i.i.i, align 1
  store i1 %320, ptr %memberidx1.i.i.i.i, align 1
  br label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i104, %if.entry14, %true_block.i109
  %common.ret.op.i102 = phi ptr [ null, %if.entry14 ], [ %319, %true_block.i109 ], [ %310, %ifend.i104 ]
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %321 = load i1, ptr %memberidx1.i, align 1
  store i1 true, ptr %memberidx1.i, align 1
  %memberidx3.i = getelementptr inbounds %WhileStatementNode, ptr %1, i64 0, i32 3
  %322 = load ptr, ptr %memberidx3.i, align 8
  %323 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %322, ptr null, i1 false)
  store i1 %321, ptr %memberidx1.i, align 1
  %324 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %324, align 4
  %memberidx.i.i75 = getelementptr inbounds %WhileStatement, ptr %324, i64 0, i32 1
  store ptr %common.ret.op.i102, ptr %memberidx.i.i75, align 8
  %memberidx1.i.i76 = getelementptr inbounds %WhileStatement, ptr %324, i64 0, i32 2
  store ptr %323, ptr %memberidx1.i.i76, align 8
  br label %common.ret

if.entry18:                                       ; preds = %2
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %325 = load i1, ptr %memberidx.i, align 1
  br i1 %325, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry18
  %326 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %326, ptr noundef nonnull align 8 dereferenceable(32) @240, i64 32, i1 false)
  %327 = tail call ptr @malloc(i32 24)
  store ptr %326, ptr %327, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %327, i64 0, i32 1
  store i64 32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %327, i64 0, i32 2
  store i64 32, ptr %memberidx2.i.i.i, align 4
  %328 = load ptr, ptr %1, align 8
  %memberidx.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %329 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Compiler, ptr %329, i64 0, i32 5
  %330 = load ptr, ptr %memberidx1.i.i, align 8
  %331 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %331, align 4
  %memberidx1.i.i3.i = getelementptr inbounds %FloError, ptr %331, i64 0, i32 2
  store ptr %328, ptr %memberidx1.i.i3.i, align 8
  %memberidx2.i.i4.i = getelementptr inbounds %FloError, ptr %331, i64 0, i32 1
  store ptr %327, ptr %memberidx2.i.i4.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %330, i64 0, i32 1
  %332 = load i64, ptr %memberidx.i.i.i, align 4
  %memberidx1.i2.i.i = getelementptr inbounds %Array_FloError_, ptr %330, i64 0, i32 2
  %333 = load i64, ptr %memberidx1.i2.i.i, align 4
  %.not.i.i.i = icmp slt i64 %332, %333
  br i1 %.not.i.i.i, label %if.entry.i.TypeChecker_error.exit.i_crit_edge, label %if.entry.i.i.i

if.entry.i.TypeChecker_error.exit.i_crit_edge:    ; preds = %if.entry.i
  %.pre175 = load ptr, ptr %330, align 8
  br label %TypeChecker_error.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry.i
  %334 = shl nuw i64 %333, 1
  store i64 %334, ptr %memberidx1.i2.i.i, align 4
  %335 = load ptr, ptr %330, align 8
  %336 = shl i64 %333, 4
  %337 = tail call ptr @realloc(ptr %335, i64 %336)
  store ptr %337, ptr %330, align 8
  %.pre174 = load i64, ptr %memberidx.i.i.i, align 4
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry.i.TypeChecker_error.exit.i_crit_edge, %if.entry.i.i.i
  %338 = phi ptr [ %337, %if.entry.i.i.i ], [ %.pre175, %if.entry.i.TypeChecker_error.exit.i_crit_edge ]
  %339 = phi i64 [ %.pre174, %if.entry.i.i.i ], [ %332, %if.entry.i.TypeChecker_error.exit.i_crit_edge ]
  %340 = add nsw i64 %339, 1
  store i64 %340, ptr %memberidx.i.i.i, align 4
  %341 = getelementptr inbounds ptr, ptr %338, i64 %339
  store ptr %331, ptr %341, align 8
  br label %common.ret

ifend.i:                                          ; preds = %if.entry18
  %342 = tail call ptr @malloc(i32 8)
  store i64 5, ptr %342, align 4
  br label %common.ret

if.entry22:                                       ; preds = %2
  %memberidx.i58 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %343 = load i1, ptr %memberidx.i58, align 1
  br i1 %343, label %ifend.i73, label %if.entry.i69

if.entry.i69:                                     ; preds = %if.entry22
  %344 = tail call ptr @malloc(i32 29)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %344, ptr noundef nonnull align 8 dereferenceable(29) @239, i64 29, i1 false)
  %345 = tail call ptr @malloc(i32 24)
  store ptr %344, ptr %345, align 8
  %memberidx1.i.i.i60 = getelementptr inbounds %String, ptr %345, i64 0, i32 1
  store i64 29, ptr %memberidx1.i.i.i60, align 4
  %memberidx2.i.i.i61 = getelementptr inbounds %String, ptr %345, i64 0, i32 2
  store i64 29, ptr %memberidx2.i.i.i61, align 4
  %346 = load ptr, ptr %1, align 8
  %memberidx.i.i62 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %347 = load ptr, ptr %memberidx.i.i62, align 8
  %memberidx1.i.i63 = getelementptr inbounds %Compiler, ptr %347, i64 0, i32 5
  %348 = load ptr, ptr %memberidx1.i.i63, align 8
  %349 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %349, align 4
  %memberidx1.i.i3.i64 = getelementptr inbounds %FloError, ptr %349, i64 0, i32 2
  store ptr %346, ptr %memberidx1.i.i3.i64, align 8
  %memberidx2.i.i4.i65 = getelementptr inbounds %FloError, ptr %349, i64 0, i32 1
  store ptr %345, ptr %memberidx2.i.i4.i65, align 8
  %memberidx.i.i.i66 = getelementptr inbounds %Array_FloError_, ptr %348, i64 0, i32 1
  %350 = load i64, ptr %memberidx.i.i.i66, align 4
  %memberidx1.i2.i.i67 = getelementptr inbounds %Array_FloError_, ptr %348, i64 0, i32 2
  %351 = load i64, ptr %memberidx1.i2.i.i67, align 4
  %.not.i.i.i68 = icmp slt i64 %350, %351
  br i1 %.not.i.i.i68, label %if.entry.i69.TypeChecker_error.exit.i72_crit_edge, label %if.entry.i.i.i71

if.entry.i69.TypeChecker_error.exit.i72_crit_edge: ; preds = %if.entry.i69
  %.pre173 = load ptr, ptr %348, align 8
  br label %TypeChecker_error.exit.i72

if.entry.i.i.i71:                                 ; preds = %if.entry.i69
  %352 = shl nuw i64 %351, 1
  store i64 %352, ptr %memberidx1.i2.i.i67, align 4
  %353 = load ptr, ptr %348, align 8
  %354 = shl i64 %351, 4
  %355 = tail call ptr @realloc(ptr %353, i64 %354)
  store ptr %355, ptr %348, align 8
  %.pre = load i64, ptr %memberidx.i.i.i66, align 4
  br label %TypeChecker_error.exit.i72

TypeChecker_error.exit.i72:                       ; preds = %if.entry.i69.TypeChecker_error.exit.i72_crit_edge, %if.entry.i.i.i71
  %356 = phi ptr [ %355, %if.entry.i.i.i71 ], [ %.pre173, %if.entry.i69.TypeChecker_error.exit.i72_crit_edge ]
  %357 = phi i64 [ %.pre, %if.entry.i.i.i71 ], [ %350, %if.entry.i69.TypeChecker_error.exit.i72_crit_edge ]
  %358 = add nsw i64 %357, 1
  store i64 %358, ptr %memberidx.i.i.i66, align 4
  %359 = getelementptr inbounds ptr, ptr %356, i64 %357
  store ptr %349, ptr %359, align 8
  br label %common.ret

ifend.i73:                                        ; preds = %if.entry22
  %360 = tail call ptr @malloc(i32 8)
  store i64 6, ptr %360, align 4
  br label %common.ret

if.entry26:                                       ; preds = %2
  %361 = tail call fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry30:                                       ; preds = %2
  %362 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %362, align 4
  %363 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %362, ptr nonnull %1)
  br label %common.ret
}

define internal fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry27, %3
  %accumulator.tr.ph = phi i1 [ %36, %if.entry27 ], [ true, %3 ]
  %.tr195.ph = phi ptr [ %34, %if.entry27 ], [ %1, %3 ]
  %.tr196.ph = phi ptr [ %35, %if.entry27 ], [ %2, %3 ]
  br label %tailrecurse.outer201

tailrecurse.outer201:                             ; preds = %tailrecurse.outer, %if.entry56
  %.tr195.ph202 = phi ptr [ %.tr195.ph, %tailrecurse.outer ], [ %54, %if.entry56 ]
  %.tr196.ph203 = phi ptr [ %.tr196.ph, %tailrecurse.outer ], [ %55, %if.entry56 ]
  %memberidx7 = getelementptr inbounds %FunctionType, ptr %.tr195.ph202, i64 0, i32 1
  %memberidx15 = getelementptr inbounds %FunctionType, ptr %.tr195.ph202, i64 0, i32 2
  %.pre = load i64, ptr %.tr195.ph202, align 4
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer201, %ifend75
  %4 = phi i64 [ 11, %ifend75 ], [ %.pre, %tailrecurse.outer201 ]
  %.tr196 = phi ptr [ %78, %ifend75 ], [ %.tr196.ph203, %tailrecurse.outer201 ]
  %5 = load i64, ptr %.tr196, align 4
  %.not = icmp eq i64 %4, %5
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %ifend75, %if.entry62, %if.entry35, %ifend13, %if.entry4, %tailrecurse, %for.body, %for.body47, %for.body106, %if.entry89, %if.entry116, %ifend91, %ifend96, %ifend.i.i, %if.entry83
  %common.ret.op = phi i1 [ %81, %if.entry83 ], [ false, %ifend.i.i ], [ false, %ifend96 ], [ true, %ifend91 ], [ %not., %if.entry116 ], [ false, %if.entry89 ], [ false, %for.body106 ], [ false, %for.body47 ], [ false, %for.body ], [ false, %tailrecurse ], [ false, %if.entry4 ], [ false, %ifend13 ], [ false, %if.entry35 ], [ true, %if.entry62 ], [ false, %ifend75 ]
  %accumulator.ret.tr = and i1 %accumulator.tr.ph, %common.ret.op
  ret i1 %accumulator.ret.tr

ifend:                                            ; preds = %tailrecurse
  %6 = icmp eq i64 %4, 16
  br i1 %6, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %ifend
  %7 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_Type_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx8, align 4
  %memberidx9 = getelementptr inbounds %FunctionType, ptr %.tr196, i64 0, i32 1
  %9 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Type_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx10, align 4
  %.not189 = icmp eq i64 %8, %10
  br i1 %.not189, label %ifend13, label %common.ret

ifend6thread-pre-split:                           ; preds = %for.cond, %for.cond.preheader
  %.pr = load i64, ptr %.tr195.ph202, align 4
  br label %ifend6

ifend6:                                           ; preds = %ifend6thread-pre-split, %ifend
  %11 = phi i64 [ %.pr, %ifend6thread-pre-split ], [ %4, %ifend ]
  switch i64 %11, label %ifend37 [
    i64 14, label %if.entry27
    i64 15, label %if.entry35
  ]

ifend13:                                          ; preds = %if.entry4
  %memberidx14 = getelementptr inbounds %FunctionType, ptr %.tr196, i64 0, i32 2
  %12 = load ptr, ptr %memberidx14, align 8
  %13 = load ptr, ptr %memberidx15, align 8
  %14 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %12, ptr %13)
  br i1 %14, label %for.cond.preheader, label %common.ret

for.cond.preheader:                               ; preds = %ifend13
  %15 = load ptr, ptr %memberidx7, align 8
  %memberidx20228 = getelementptr inbounds %Array_Type_, ptr %15, i64 0, i32 1
  %16 = load i64, ptr %memberidx20228, align 4
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %for.body, label %ifend6thread-pre-split

for.cond:                                         ; preds = %for.body
  %18 = add nuw nsw i64 %i.0229, 1
  %19 = load ptr, ptr %memberidx7, align 8
  %memberidx20 = getelementptr inbounds %Array_Type_, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx20, align 4
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %for.body, label %ifend6thread-pre-split

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %22 = phi ptr [ %19, %for.cond ], [ %15, %for.cond.preheader ]
  %i.0229 = phi i64 [ %18, %for.cond ], [ 0, %for.cond.preheader ]
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %i.0229
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %memberidx9, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %i.0229
  %29 = load ptr, ptr %28, align 8
  %30 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %25, ptr %29)
  br i1 %30, label %for.cond, label %common.ret

if.entry27:                                       ; preds = %ifend6
  %31 = load i64, ptr %memberidx15, align 4
  %memberidx31 = getelementptr inbounds %ArrayType, ptr %.tr196, i64 0, i32 2
  %32 = load i64, ptr %memberidx31, align 4
  %33 = icmp eq i64 %31, %32
  %34 = load ptr, ptr %memberidx7, align 8
  %memberidx33 = getelementptr inbounds %ArrayType, ptr %.tr196, i64 0, i32 1
  %35 = load ptr, ptr %memberidx33, align 8
  %36 = and i1 %accumulator.tr.ph, %33
  br label %tailrecurse.outer

if.entry35:                                       ; preds = %ifend6
  %37 = load ptr, ptr %memberidx7, align 8
  %memberidx39 = getelementptr inbounds %Array_Type_, ptr %37, i64 0, i32 1
  %38 = load i64, ptr %memberidx39, align 4
  %memberidx40 = getelementptr inbounds %TupleType, ptr %.tr196, i64 0, i32 1
  %39 = load ptr, ptr %memberidx40, align 8
  %memberidx41 = getelementptr inbounds %Array_Type_, ptr %39, i64 0, i32 1
  %40 = load i64, ptr %memberidx41, align 4
  %.not188 = icmp eq i64 %38, %40
  br i1 %.not188, label %for.cond46.preheader, label %common.ret

for.cond46.preheader:                             ; preds = %if.entry35
  %41 = icmp sgt i64 %38, 0
  br i1 %41, label %for.body47, label %ifend91

ifend37.loopexit:                                 ; preds = %for.cond46
  %.pre257 = load i64, ptr %.tr195.ph202, align 4
  br label %ifend37

ifend37:                                          ; preds = %ifend37.loopexit, %ifend6
  %42 = phi i64 [ %.pre257, %ifend37.loopexit ], [ %11, %ifend6 ]
  switch i64 %42, label %ifend91 [
    i64 13, label %if.entry56
    i64 11, label %if.entry62
    i64 12, label %if.entry83
    i64 20, label %if.entry89
  ]

for.cond46:                                       ; preds = %for.body47
  %43 = add nuw nsw i64 %i1.0230, 1
  %44 = icmp slt i64 %43, %38
  br i1 %44, label %for.body47, label %ifend37.loopexit

for.body47:                                       ; preds = %for.cond46.preheader, %for.cond46
  %i1.0230 = phi i64 [ %43, %for.cond46 ], [ 0, %for.cond46.preheader ]
  %45 = load ptr, ptr %memberidx7, align 8
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %i1.0230
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr %memberidx40, align 8
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %i1.0230
  %52 = load ptr, ptr %51, align 8
  %53 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %48, ptr %52)
  br i1 %53, label %for.cond46, label %common.ret

if.entry56:                                       ; preds = %ifend37
  %54 = load ptr, ptr %memberidx7, align 8
  %memberidx60 = getelementptr inbounds %PointerType, ptr %.tr196, i64 0, i32 1
  %55 = load ptr, ptr %memberidx60, align 8
  br label %tailrecurse.outer201

if.entry62:                                       ; preds = %ifend37
  %56 = load ptr, ptr %memberidx7, align 8
  %memberidx66 = getelementptr inbounds %ObjectType, ptr %.tr196, i64 0, i32 1
  %57 = load ptr, ptr %memberidx66, align 8
  %memberidx67 = getelementptr inbounds %TypeId, ptr %56, i64 0, i32 1
  %58 = load i64, ptr %memberidx67, align 4
  %memberidx68 = getelementptr inbounds %TypeId, ptr %57, i64 0, i32 1
  %59 = load i64, ptr %memberidx68, align 4
  %60 = icmp eq i64 %58, %59
  %61 = load i64, ptr %56, align 4
  %62 = load i64, ptr %57, align 4
  %63 = icmp eq i64 %61, %62
  %64 = and i1 %60, %63
  %memberidx71 = getelementptr inbounds %TypeId, ptr %56, i64 0, i32 2
  %65 = load i64, ptr %memberidx71, align 4
  %memberidx72 = getelementptr inbounds %TypeId, ptr %57, i64 0, i32 2
  %66 = load i64, ptr %memberidx72, align 4
  %67 = icmp eq i64 %65, %66
  %68 = and i1 %64, %67
  br i1 %68, label %common.ret, label %ifend75

ifend75:                                          ; preds = %if.entry62
  %69 = load ptr, ptr %0, align 8
  %70 = load ptr, ptr %69, align 8
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 %62
  %73 = load ptr, ptr %72, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %73, i64 0, i32 3
  %74 = load ptr, ptr %memberidx2.i, align 8
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %66
  %77 = load ptr, ptr %76, align 8
  %memberidx77 = getelementptr inbounds %Class, ptr %77, i64 0, i32 2
  %78 = load ptr, ptr %memberidx77, align 8
  %.not187 = icmp eq ptr %78, null
  br i1 %.not187, label %common.ret, label %tailrecurse

if.entry83:                                       ; preds = %ifend37
  %79 = load ptr, ptr %memberidx7, align 8
  %memberidx87 = getelementptr inbounds %EnumType, ptr %.tr196, i64 0, i32 1
  %80 = load ptr, ptr %memberidx87, align 8
  %81 = icmp eq ptr %79, %80
  br label %common.ret

if.entry89:                                       ; preds = %ifend37
  %82 = load ptr, ptr %memberidx7, align 8
  %memberidx93 = getelementptr inbounds %GenericType, ptr %.tr196, i64 0, i32 1
  %83 = load ptr, ptr %memberidx93, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %82, i64 0, i32 1
  %84 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  %85 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %84, %85
  br i1 %.not.i.i, label %ifend.i.i, label %common.ret

ifend.i.i:                                        ; preds = %if.entry89
  %86 = load ptr, ptr %82, align 8
  %87 = load ptr, ptr %83, align 8
  %88 = tail call i64 @memcmp(ptr %86, ptr %87, i64 %84)
  %.not194 = icmp eq i64 %88, 0
  br i1 %.not194, label %ifend96, label %common.ret

ifend91:                                          ; preds = %for.cond46.preheader, %ifend37, %for.cond105, %for.cond105.preheader
  %89 = load i64, ptr %.tr195.ph202, align 4
  %90 = add i64 %89, -1
  %91 = icmp ult i64 %90, 7
  br i1 %91, label %if.entry116, label %common.ret

ifend96:                                          ; preds = %ifend.i.i
  %92 = load ptr, ptr %memberidx15, align 8
  %memberidx98 = getelementptr inbounds %Array_Type_, ptr %92, i64 0, i32 1
  %93 = load i64, ptr %memberidx98, align 4
  %memberidx99 = getelementptr inbounds %GenericType, ptr %.tr196, i64 0, i32 2
  %94 = load ptr, ptr %memberidx99, align 8
  %memberidx100 = getelementptr inbounds %Array_Type_, ptr %94, i64 0, i32 1
  %95 = load i64, ptr %memberidx100, align 4
  %.not186 = icmp eq i64 %93, %95
  br i1 %.not186, label %for.cond105.preheader, label %common.ret

for.cond105.preheader:                            ; preds = %ifend96
  %96 = icmp sgt i64 %93, 0
  br i1 %96, label %for.body106, label %ifend91

for.cond105:                                      ; preds = %for.body106
  %97 = add nuw nsw i64 %i2.0227, 1
  %98 = load ptr, ptr %memberidx15, align 8
  %memberidx110 = getelementptr inbounds %Array_Type_, ptr %98, i64 0, i32 1
  %99 = load i64, ptr %memberidx110, align 4
  %100 = icmp slt i64 %97, %99
  br i1 %100, label %for.body106, label %ifend91

for.body106:                                      ; preds = %for.cond105.preheader, %for.cond105
  %101 = phi ptr [ %98, %for.cond105 ], [ %92, %for.cond105.preheader ]
  %i2.0227 = phi i64 [ %97, %for.cond105 ], [ 0, %for.cond105.preheader ]
  %102 = load ptr, ptr %101, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %i2.0227
  %104 = load ptr, ptr %103, align 8
  %105 = load ptr, ptr %memberidx99, align 8
  %106 = load ptr, ptr %105, align 8
  %107 = getelementptr inbounds ptr, ptr %106, i64 %i2.0227
  %108 = load ptr, ptr %107, align 8
  %109 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %104, ptr %108)
  br i1 %109, label %for.cond105, label %common.ret

if.entry116:                                      ; preds = %ifend91
  %110 = load i1, ptr %memberidx7, align 1
  %memberidx120 = getelementptr inbounds %IntType, ptr %.tr196, i64 0, i32 1
  %111 = load i1, ptr %memberidx120, align 1
  %112 = xor i1 %110, %111
  %not. = xor i1 %112, true
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_scope(ptr nocapture readonly %0, i64 %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i64 %1
  %7 = load ptr, ptr %6, align 8
  %8 = tail call ptr @malloc(i32 64)
  %memberidx = getelementptr inbounds %Module, ptr %7, i64 0, i32 7
  %9 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx1, align 4
  %11 = tail call ptr @malloc(i32 16)
  store i64 %1, ptr %11, align 4
  %memberidx1.i.i = getelementptr inbounds %ScopeId, ptr %11, i64 0, i32 1
  store i64 %10, ptr %memberidx1.i.i, align 4
  store ptr %11, ptr %8, align 8
  %12 = tail call ptr @malloc(i32 24)
  %13 = tail call ptr @malloc(i32 2048)
  store ptr %13, ptr %12, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i12 = phi i64 [ 0, %2 ], [ %16, %for.body.i.i ]
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %i.0.i.i12
  store ptr null, ptr %15, align 8
  %16 = add nuw nsw i64 %i.0.i.i12, 1
  %17 = icmp ult i64 %i.0.i.i12, 255
  br i1 %17, label %for.body.i.i, label %Map_String_VarId__constructor.exit.i

Map_String_VarId__constructor.exit.i:             ; preds = %for.body.i.i
  %memberidx1.i6 = getelementptr inbounds %Scope, ptr %8, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %Map_String_VarId_, ptr %12, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_String_VarId_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %12, ptr %memberidx1.i6, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = tail call ptr @malloc(i32 2048)
  store ptr %19, ptr %18, align 8
  br label %for.body.i20.i

for.body.i20.i:                                   ; preds = %Map_String_VarId__constructor.exit.i, %for.body.i20.i
  %i.0.i18.i11 = phi i64 [ 0, %Map_String_VarId__constructor.exit.i ], [ %22, %for.body.i20.i ]
  %20 = load ptr, ptr %18, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 %i.0.i18.i11
  store ptr null, ptr %21, align 8
  %22 = add nuw nsw i64 %i.0.i18.i11, 1
  %23 = icmp ult i64 %i.0.i18.i11, 255
  br i1 %23, label %for.body.i20.i, label %Map_String_ClassId__constructor.exit.i

Map_String_ClassId__constructor.exit.i:           ; preds = %for.body.i20.i
  %memberidx2.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 2
  %memberidx2.i21.i = getelementptr inbounds %Map_String_ClassId_, ptr %18, i64 0, i32 1
  store i64 256, ptr %memberidx2.i21.i, align 4
  %memberidx3.i22.i = getelementptr inbounds %Map_String_ClassId_, ptr %18, i64 0, i32 2
  store i64 0, ptr %memberidx3.i22.i, align 4
  store ptr %18, ptr %memberidx2.i, align 8
  %24 = tail call ptr @malloc(i32 24)
  %25 = tail call ptr @malloc(i32 2048)
  store ptr %25, ptr %24, align 8
  br label %for.body.i25.i

for.body.i25.i:                                   ; preds = %Map_String_ClassId__constructor.exit.i, %for.body.i25.i
  %i.0.i23.i10 = phi i64 [ 0, %Map_String_ClassId__constructor.exit.i ], [ %28, %for.body.i25.i ]
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %i.0.i23.i10
  store ptr null, ptr %27, align 8
  %28 = add nuw nsw i64 %i.0.i23.i10, 1
  %29 = icmp ult i64 %i.0.i23.i10, 255
  br i1 %29, label %for.body.i25.i, label %Map_String_VarId__constructor.exit28.i

Map_String_VarId__constructor.exit28.i:           ; preds = %for.body.i25.i
  %memberidx3.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 3
  %memberidx2.i26.i = getelementptr inbounds %Map_String_VarId_, ptr %24, i64 0, i32 1
  store i64 256, ptr %memberidx2.i26.i, align 4
  %memberidx3.i27.i = getelementptr inbounds %Map_String_VarId_, ptr %24, i64 0, i32 2
  store i64 0, ptr %memberidx3.i27.i, align 4
  store ptr %24, ptr %memberidx3.i, align 8
  %30 = tail call ptr @malloc(i32 24)
  %31 = tail call ptr @malloc(i32 2048)
  store ptr %31, ptr %30, align 8
  br label %for.body.i31.i

for.body.i31.i:                                   ; preds = %Map_String_VarId__constructor.exit28.i, %for.body.i31.i
  %i.0.i29.i9 = phi i64 [ 0, %Map_String_VarId__constructor.exit28.i ], [ %34, %for.body.i31.i ]
  %32 = load ptr, ptr %30, align 8
  %33 = getelementptr inbounds ptr, ptr %32, i64 %i.0.i29.i9
  store ptr null, ptr %33, align 8
  %34 = add nuw nsw i64 %i.0.i29.i9, 1
  %35 = icmp ult i64 %i.0.i29.i9, 255
  br i1 %35, label %for.body.i31.i, label %Map_String_EnumId__constructor.exit.i

Map_String_EnumId__constructor.exit.i:            ; preds = %for.body.i31.i
  %memberidx4.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 4
  %memberidx2.i32.i = getelementptr inbounds %Map_String_EnumId_, ptr %30, i64 0, i32 1
  store i64 256, ptr %memberidx2.i32.i, align 4
  %memberidx3.i33.i = getelementptr inbounds %Map_String_EnumId_, ptr %30, i64 0, i32 2
  store i64 0, ptr %memberidx3.i33.i, align 4
  store ptr %30, ptr %memberidx4.i, align 8
  %36 = tail call ptr @malloc(i32 24)
  %37 = tail call ptr @malloc(i32 2048)
  store ptr %37, ptr %36, align 8
  br label %for.body.i36.i

for.body.i36.i:                                   ; preds = %Map_String_EnumId__constructor.exit.i, %for.body.i36.i
  %i.0.i34.i8 = phi i64 [ 0, %Map_String_EnumId__constructor.exit.i ], [ %40, %for.body.i36.i ]
  %38 = load ptr, ptr %36, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %i.0.i34.i8
  store ptr null, ptr %39, align 8
  %40 = add nuw nsw i64 %i.0.i34.i8, 1
  %41 = icmp ult i64 %i.0.i34.i8, 255
  br i1 %41, label %for.body.i36.i, label %Scope_constructor.exit

Scope_constructor.exit:                           ; preds = %for.body.i36.i
  %memberidx5.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 6
  %memberidx2.i37.i = getelementptr inbounds %Map_String_Type_, ptr %36, i64 0, i32 1
  store i64 256, ptr %memberidx2.i37.i, align 4
  %memberidx3.i38.i = getelementptr inbounds %Map_String_Type_, ptr %36, i64 0, i32 2
  store i64 0, ptr %memberidx3.i38.i, align 4
  store ptr %36, ptr %memberidx5.i, align 8
  %memberidx6.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 5
  store ptr null, ptr %memberidx6.i, align 8
  %memberidx7.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 7
  %42 = tail call ptr @malloc(i32 24)
  %memberidx.i.i7 = getelementptr inbounds %Array_ScopeId_, ptr %42, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i7, align 4
  %memberidx1.i17.i = getelementptr inbounds %Array_ScopeId_, ptr %42, i64 0, i32 2
  store i64 8, ptr %memberidx1.i17.i, align 4
  %43 = tail call ptr @malloc(i32 64)
  store ptr %43, ptr %42, align 8
  store i64 0, ptr %memberidx.i.i7, align 4
  store ptr %42, ptr %memberidx7.i, align 8
  %44 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %Array_Scope_, ptr %44, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_Scope_, ptr %44, i64 0, i32 2
  %46 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %45, %46
  br i1 %.not.i, label %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge, label %if.entry.i

Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge: ; preds = %Scope_constructor.exit
  %.pre13 = load ptr, ptr %44, align 8
  br label %Array_Scope____sl__.exit

if.entry.i:                                       ; preds = %Scope_constructor.exit
  %47 = shl nuw i64 %46, 1
  store i64 %47, ptr %memberidx1.i, align 4
  %48 = load ptr, ptr %44, align 8
  %49 = shl i64 %46, 4
  %50 = tail call ptr @realloc(ptr %48, i64 %49)
  store ptr %50, ptr %44, align 8
  %.pre = load i64, ptr %memberidx.i, align 4
  br label %Array_Scope____sl__.exit

Array_Scope____sl__.exit:                         ; preds = %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge, %if.entry.i
  %51 = phi ptr [ %.pre13, %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge ], [ %50, %if.entry.i ]
  %52 = phi i64 [ %45, %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %53 = add nsw i64 %52, 1
  store i64 %53, ptr %memberidx.i, align 4
  %54 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %8, ptr %54, align 8
  ret ptr %8
}

define internal fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %6 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %5)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend19, %ifend38, %TypeChecker_error.exit152, %if.entry24, %TypeChecker_error.exit123, %if.entry8, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %101, %if.entry8 ], [ null, %TypeChecker_error.exit123 ], [ %156, %if.entry24 ], [ null, %TypeChecker_error.exit152 ], [ %211, %ifend38 ], [ null, %ifend19 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %8 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %memberidx.i = getelementptr inbounds %String, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx.i, align 4
  %10 = trunc i64 %9 to i32
  %11 = add i32 %10, 1
  %12 = tail call ptr @malloc(i32 %11)
  %13 = load ptr, ptr %8, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %13, i64 %9, i1 false)
  %14 = getelementptr inbounds i8, ptr %12, i64 %9
  store i8 0, ptr %14, align 1
  %15 = alloca ptr, align 8
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %15, ptr nonnull @178, ptr %12)
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  store i64 %16, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx2.i, align 4
  tail call void @free(ptr %12)
  %19 = load ptr, ptr %2, align 8
  %memberidx.i92 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %20 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx1.i93, align 8
  %22 = call ptr @malloc(i32 24)
  store i64 4, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %22, i64 0, i32 2
  store ptr %19, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %22, i64 0, i32 1
  store ptr %18, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 2
  %24 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %23, %24
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre186 = load ptr, ptr %21, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %25 = shl nuw i64 %24, 1
  store i64 %25, ptr %memberidx1.i2.i, align 4
  %26 = load ptr, ptr %21, align 8
  %27 = shl i64 %24, 4
  %28 = call ptr @realloc(ptr %26, i64 %27)
  store ptr %28, ptr %21, align 8
  %.pre185 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %29 = phi ptr [ %.pre186, %if.entry.TypeChecker_error.exit_crit_edge ], [ %28, %if.entry.i.i ]
  %30 = phi i64 [ %23, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre185, %if.entry.i.i ]
  %31 = add nsw i64 %30, 1
  store i64 %31, ptr %memberidx.i.i, align 4
  %32 = getelementptr inbounds ptr, ptr %29, i64 %30
  store ptr %22, ptr %32, align 8
  br label %common.ret

ifend:                                            ; preds = %4
  %33 = load ptr, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i170, %ifend
  %.tr11.i.in = phi ptr [ %memberidx3, %ifend ], [ %memberidx1.i169, %if.entry.i170 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %34 = load i64, ptr %.tr11.i, align 4
  switch i64 %34, label %get_class_from_type.exit [
    i64 20, label %if.entry.i170
    i64 11, label %if.entry3.i
  ]

if.entry.i170:                                    ; preds = %tailrecurse.i
  %memberidx1.i169 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i171 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %35 = load ptr, ptr %memberidx6.i171, align 8
  %36 = load ptr, ptr %33, align 8
  %37 = load i64, ptr %35, align 4
  %38 = load ptr, ptr %36, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  %memberidx2.i.i172 = getelementptr inbounds %Module, ptr %40, i64 0, i32 3
  %41 = load ptr, ptr %memberidx2.i.i172, align 8
  %memberidx3.i.i173 = getelementptr inbounds %TypeId, ptr %35, i64 0, i32 2
  %42 = load i64, ptr %memberidx3.i.i173, align 4
  %43 = load ptr, ptr %41, align 8
  %44 = getelementptr inbounds ptr, ptr %43, i64 %42
  %45 = load ptr, ptr %44, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i168 = phi ptr [ %45, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx4 = getelementptr inbounds %Class, ptr %common.ret.op.i168, i64 0, i32 6
  %46 = load ptr, ptr %memberidx4, align 8
  %47 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %6)
  %memberidx.i94 = getelementptr inbounds %Map_String_PropId_, ptr %46, i64 0, i32 1
  %48 = load i64, ptr %memberidx.i94, align 4
  %49 = urem i64 %47, %48
  %50 = load ptr, ptr %46, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %49
  %52 = load ptr, ptr %51, align 8
  %.not.i = icmp eq ptr %52, null
  br i1 %.not.i, label %if.entry5, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %get_class_from_type.exit
  %memberidx1.i.i96 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %53 = load i64, ptr %memberidx1.i.i96, align 4
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %54 = phi ptr [ %63, %else.i ], [ %50, %while.entry.i.preheader ]
  %55 = phi i64 [ %64, %else.i ], [ %48, %while.entry.i.preheader ]
  %56 = phi ptr [ %68, %else.i ], [ %52, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %66, %else.i ], [ %49, %while.entry.i.preheader ]
  %57 = load ptr, ptr %56, align 8
  %memberidx.i.i95 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i.i95, align 4
  %.not.i.i97 = icmp eq i64 %58, %53
  br i1 %.not.i.i97, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %59 = load ptr, ptr %57, align 8
  %60 = load ptr, ptr %6, align 8
  %61 = tail call i64 @memcmp(ptr %59, ptr %60, i64 %53)
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i94, align 4
  %.pre177 = load ptr, ptr %46, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre178.pre = load ptr, ptr %46, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre178.pre, i64 %hash.0.i
  %.pre179.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre179.pre, null
  br i1 %.not25.i, label %if.entry5, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %63 = phi ptr [ %.pre177, %ifend.i.i.else.i_crit_edge ], [ %54, %while.entry.i ]
  %64 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %55, %while.entry.i ]
  %65 = add nuw i64 %hash.0.i, 1
  %66 = urem i64 %65, %64
  %67 = getelementptr inbounds ptr, ptr %63, i64 %66
  %68 = load ptr, ptr %67, align 8
  %.not26.i = icmp eq ptr %68, null
  br i1 %.not26.i, label %if.entry5, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre179.pre, i64 0, i32 1
  %69 = load ptr, ptr %memberidx11.i, align 8
  %70 = icmp eq ptr %69, null
  br i1 %70, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_String_PropId____getitem__.exit
  %71 = add i64 %5, -11
  %72 = icmp ult i64 %71, 2
  br i1 %72, label %if.entry8, label %ifend10

ifend7:                                           ; preds = %Map_String_PropId____getitem__.exit
  %73 = load ptr, ptr %0, align 8
  %memberidx.i.i98 = getelementptr inbounds %PropId, ptr %69, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i.i98, align 8
  %75 = load ptr, ptr %73, align 8
  %76 = load i64, ptr %74, align 4
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %79, i64 0, i32 3
  %80 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %74, i64 0, i32 2
  %81 = load i64, ptr %memberidx3.i.i.i, align 4
  %82 = load ptr, ptr %80, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %85 = load i64, ptr %69, align 4
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend7
  %memberidx1.i100 = getelementptr inbounds %Class, ptr %84, i64 0, i32 5
  %87 = load ptr, ptr %memberidx1.i100, align 8
  %memberidx2.i101 = getelementptr inbounds %PropId, ptr %69, i64 0, i32 2
  %88 = load i64, ptr %memberidx2.i101, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %91, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend7
  %memberidx4.i = getelementptr inbounds %Class, ptr %84, i64 0, i32 4
  %92 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %69, i64 0, i32 2
  %93 = load i64, ptr %memberidx5.i, align 4
  %94 = load ptr, ptr %92, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %96, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i99 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx16 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i99, i64 0, i32 1
  %97 = load ptr, ptr %memberidx16, align 8
  %98 = load ptr, ptr %97, align 8
  %99 = load ptr, ptr %98, align 8
  %100 = icmp eq ptr %3, null
  br i1 %100, label %if.entry17, label %ifend19

if.entry8:                                        ; preds = %if.entry5
  %101 = tail call ptr @malloc(i32 49)
  %102 = load ptr, ptr %memberidx3, align 8
  %memberidx12 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %103 = load ptr, ptr %memberidx12, align 8
  %104 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %102, ptr %103)
  %105 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %105, align 4
  store i64 8, ptr %101, align 4
  %memberidx.i.i102 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i102, align 4
  %memberidx1.i.i103 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 1
  %memberidx.i104 = getelementptr inbounds %BinaryExpression, ptr %101, i64 0, i32 4
  store ptr %1, ptr %memberidx.i104, align 8
  %memberidx1.i105 = getelementptr inbounds %BinaryExpression, ptr %101, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i105, align 4
  %memberidx2.i106 = getelementptr inbounds %BinaryExpression, ptr %101, i64 0, i32 6
  store ptr %104, ptr %memberidx2.i106, align 8
  %memberidx3.i107 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 3
  store ptr %105, ptr %memberidx3.i107, align 8
  store i1 false, ptr %memberidx1.i.i103, align 1
  br label %common.ret

ifend10:                                          ; preds = %if.entry5
  %106 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %memberidx.i109 = getelementptr inbounds %String, ptr %106, i64 0, i32 1
  %107 = load i64, ptr %memberidx.i109, align 4
  %108 = trunc i64 %107 to i32
  %109 = add i32 %108, 1
  %110 = tail call ptr @malloc(i32 %109)
  %111 = load ptr, ptr %106, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %110, ptr align 8 %111, i64 %107, i1 false)
  %112 = getelementptr inbounds i8, ptr %110, i64 %107
  store i8 0, ptr %112, align 1
  %memberidx13 = getelementptr inbounds %Class, ptr %common.ret.op.i168, i64 0, i32 1
  %113 = load ptr, ptr %memberidx13, align 8
  %memberidx.i110 = getelementptr inbounds %String, ptr %113, i64 0, i32 1
  %114 = load i64, ptr %memberidx.i110, align 4
  %115 = trunc i64 %114 to i32
  %116 = add i32 %115, 1
  %117 = tail call ptr @malloc(i32 %116)
  %118 = load ptr, ptr %113, align 8
  %119 = load i64, ptr %memberidx.i110, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %117, ptr align 8 %118, i64 %119, i1 false)
  %120 = getelementptr inbounds i8, ptr %117, i64 %119
  store i8 0, ptr %120, align 1
  %memberidx.i111 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %121 = load i64, ptr %memberidx.i111, align 4
  %122 = trunc i64 %121 to i32
  %123 = add i32 %122, 1
  %124 = tail call ptr @malloc(i32 %123)
  %125 = load ptr, ptr %6, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %124, ptr align 8 %125, i64 %121, i1 false)
  %126 = getelementptr inbounds i8, ptr %124, i64 %121
  store i8 0, ptr %126, align 1
  %127 = alloca ptr, align 8
  %128 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %127, ptr nonnull @179, ptr %110, ptr %117, ptr %124)
  %129 = load ptr, ptr %127, align 8
  %130 = tail call ptr @malloc(i32 24)
  store ptr %129, ptr %130, align 8
  %memberidx1.i112 = getelementptr inbounds %String, ptr %130, i64 0, i32 1
  store i64 %128, ptr %memberidx1.i112, align 4
  %memberidx2.i113 = getelementptr inbounds %String, ptr %130, i64 0, i32 2
  store i64 %128, ptr %memberidx2.i113, align 4
  tail call void @free(ptr %110)
  tail call void @free(ptr %117)
  tail call void @free(ptr %124)
  %131 = load ptr, ptr %2, align 8
  %memberidx.i114 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %132 = load ptr, ptr %memberidx.i114, align 8
  %memberidx1.i115 = getelementptr inbounds %Compiler, ptr %132, i64 0, i32 5
  %133 = load ptr, ptr %memberidx1.i115, align 8
  %134 = call ptr @malloc(i32 24)
  store i64 1, ptr %134, align 4
  %memberidx1.i.i116 = getelementptr inbounds %FloError, ptr %134, i64 0, i32 2
  store ptr %131, ptr %memberidx1.i.i116, align 8
  %memberidx2.i.i117 = getelementptr inbounds %FloError, ptr %134, i64 0, i32 1
  store ptr %130, ptr %memberidx2.i.i117, align 8
  %memberidx.i.i118 = getelementptr inbounds %Array_FloError_, ptr %133, i64 0, i32 1
  %135 = load i64, ptr %memberidx.i.i118, align 4
  %memberidx1.i2.i119 = getelementptr inbounds %Array_FloError_, ptr %133, i64 0, i32 2
  %136 = load i64, ptr %memberidx1.i2.i119, align 4
  %.not.i.i120 = icmp slt i64 %135, %136
  br i1 %.not.i.i120, label %ifend10.TypeChecker_error.exit123_crit_edge, label %if.entry.i.i122

ifend10.TypeChecker_error.exit123_crit_edge:      ; preds = %ifend10
  %.pre184 = load ptr, ptr %133, align 8
  br label %TypeChecker_error.exit123

if.entry.i.i122:                                  ; preds = %ifend10
  %137 = shl nuw i64 %136, 1
  store i64 %137, ptr %memberidx1.i2.i119, align 4
  %138 = load ptr, ptr %133, align 8
  %139 = shl i64 %136, 4
  %140 = call ptr @realloc(ptr %138, i64 %139)
  store ptr %140, ptr %133, align 8
  %.pre183 = load i64, ptr %memberidx.i.i118, align 4
  br label %TypeChecker_error.exit123

TypeChecker_error.exit123:                        ; preds = %ifend10.TypeChecker_error.exit123_crit_edge, %if.entry.i.i122
  %141 = phi ptr [ %.pre184, %ifend10.TypeChecker_error.exit123_crit_edge ], [ %140, %if.entry.i.i122 ]
  %142 = phi i64 [ %135, %ifend10.TypeChecker_error.exit123_crit_edge ], [ %.pre183, %if.entry.i.i122 ]
  %143 = add nsw i64 %142, 1
  store i64 %143, ptr %memberidx.i.i118, align 4
  %144 = getelementptr inbounds ptr, ptr %141, i64 %142
  store ptr %134, ptr %144, align 8
  br label %common.ret

if.entry17:                                       ; preds = %get_class_prop_type.exit
  %memberidx20 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %145 = load ptr, ptr %memberidx20, align 8
  %146 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %99, ptr %145)
  br label %ifend19

ifend19:                                          ; preds = %get_class_prop_type.exit, %if.entry17
  %right.0 = phi ptr [ %146, %if.entry17 ], [ %3, %get_class_prop_type.exit ]
  %memberidx.i124 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %147 = load ptr, ptr %memberidx.i124, align 8
  %memberidx1.i125 = getelementptr inbounds %Compiler, ptr %147, i64 0, i32 5
  %148 = load ptr, ptr %memberidx1.i125, align 8
  %memberidx2.i126 = getelementptr inbounds %Array_FloError_, ptr %148, i64 0, i32 1
  %149 = load i64, ptr %memberidx2.i126, align 4
  %150 = icmp sgt i64 %149, 0
  br i1 %150, label %common.ret, label %ifend23

ifend23:                                          ; preds = %ifend19
  %memberidx.i127 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 2
  %151 = load i64, ptr %memberidx.i127, align 4
  %152 = icmp eq i64 %151, 5
  %153 = add i64 %5, -11
  %154 = icmp ult i64 %153, 2
  %155 = and i1 %154, %152
  br i1 %155, label %if.entry24, label %ifend26

if.entry24:                                       ; preds = %ifend23
  %156 = tail call ptr @malloc(i32 49)
  %157 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %157, align 4
  store i64 8, ptr %156, align 4
  %memberidx.i.i128 = getelementptr inbounds %Expression, ptr %156, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i128, align 4
  %memberidx1.i.i129 = getelementptr inbounds %Expression, ptr %156, i64 0, i32 1
  %memberidx.i130 = getelementptr inbounds %BinaryExpression, ptr %156, i64 0, i32 4
  store ptr %1, ptr %memberidx.i130, align 8
  %memberidx1.i131 = getelementptr inbounds %BinaryExpression, ptr %156, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i131, align 4
  %memberidx2.i132 = getelementptr inbounds %BinaryExpression, ptr %156, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i132, align 8
  %memberidx3.i133 = getelementptr inbounds %Expression, ptr %156, i64 0, i32 3
  store ptr %157, ptr %memberidx3.i133, align 8
  store i1 false, ptr %memberidx1.i.i129, align 1
  br label %common.ret

ifend26:                                          ; preds = %ifend23
  %158 = icmp eq i64 %5, 18
  %memberidx30 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %159 = load ptr, ptr %memberidx30, align 8
  br i1 %158, label %if.entry27, label %ifend29

if.entry27:                                       ; preds = %ifend26
  %160 = load i64, ptr %159, align 4
  %161 = add i64 %160, -1
  %162 = icmp ult i64 %161, 7
  %163 = load i64, ptr %99, align 4
  %164 = add i64 %163, -1
  %165 = icmp ult i64 %164, 7
  %166 = and i1 %162, %165
  br i1 %166, label %if.entry31, label %ifend29

ifend29:                                          ; preds = %ifend26, %if.entry31, %if.entry27
  %167 = phi ptr [ %ternary.i, %if.entry31 ], [ %159, %if.entry27 ], [ %159, %ifend26 ]
  %right.1 = phi ptr [ %170, %if.entry31 ], [ %right.0, %if.entry27 ], [ %right.0, %ifend26 ]
  %168 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %99, ptr %167)
  br i1 %168, label %ifend38, label %if.entry36

if.entry31:                                       ; preds = %if.entry27
  %169 = icmp ugt i64 %160, %163
  %ternary.i = select i1 %169, ptr %159, ptr %99
  %170 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %170, align 4
  %memberidx.i.i.i135 = getelementptr inbounds %Expression, ptr %170, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i135, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %170, i64 0, i32 1
  %memberidx.i.i136 = getelementptr inbounds %TypeCastExpression, ptr %170, i64 0, i32 4
  store ptr %right.0, ptr %memberidx.i.i136, align 8
  %memberidx1.i.i137 = getelementptr inbounds %Expression, ptr %170, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i137, align 8
  %memberidx3.i.i = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 1
  %171 = load i1, ptr %memberidx3.i.i, align 1
  store i1 %171, ptr %memberidx1.i.i.i, align 1
  br label %ifend29

if.entry36:                                       ; preds = %ifend29
  %memberidx35 = getelementptr inbounds %Expression, ptr %right.1, i64 0, i32 3
  %172 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %99)
  %memberidx.i139 = getelementptr inbounds %String, ptr %172, i64 0, i32 1
  %173 = load i64, ptr %memberidx.i139, align 4
  %174 = trunc i64 %173 to i32
  %175 = add i32 %174, 1
  %176 = tail call ptr @malloc(i32 %175)
  %177 = load ptr, ptr %172, align 8
  %178 = load i64, ptr %memberidx.i139, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %176, ptr align 8 %177, i64 %178, i1 false)
  %179 = getelementptr inbounds i8, ptr %176, i64 %178
  store i8 0, ptr %179, align 1
  %180 = load ptr, ptr %memberidx35, align 8
  %181 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %180)
  %memberidx.i140 = getelementptr inbounds %String, ptr %181, i64 0, i32 1
  %182 = load i64, ptr %memberidx.i140, align 4
  %183 = trunc i64 %182 to i32
  %184 = add i32 %183, 1
  %185 = tail call ptr @malloc(i32 %184)
  %186 = load ptr, ptr %181, align 8
  %187 = load i64, ptr %memberidx.i140, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %185, ptr align 8 %186, i64 %187, i1 false)
  %188 = getelementptr inbounds i8, ptr %185, i64 %187
  store i8 0, ptr %188, align 1
  %189 = alloca ptr, align 8
  %190 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %189, ptr nonnull @177, ptr %176, ptr %185)
  %191 = load ptr, ptr %189, align 8
  %192 = tail call ptr @malloc(i32 24)
  store ptr %191, ptr %192, align 8
  %memberidx1.i141 = getelementptr inbounds %String, ptr %192, i64 0, i32 1
  store i64 %190, ptr %memberidx1.i141, align 4
  %memberidx2.i142 = getelementptr inbounds %String, ptr %192, i64 0, i32 2
  store i64 %190, ptr %memberidx2.i142, align 4
  tail call void @free(ptr %176)
  tail call void @free(ptr %185)
  %memberidx40 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %193 = load ptr, ptr %memberidx40, align 8
  %194 = load ptr, ptr %193, align 8
  %195 = load ptr, ptr %memberidx.i124, align 8
  %memberidx1.i144 = getelementptr inbounds %Compiler, ptr %195, i64 0, i32 5
  %196 = load ptr, ptr %memberidx1.i144, align 8
  %197 = call ptr @malloc(i32 24)
  store i64 5, ptr %197, align 4
  %memberidx1.i.i145 = getelementptr inbounds %FloError, ptr %197, i64 0, i32 2
  store ptr %194, ptr %memberidx1.i.i145, align 8
  %memberidx2.i.i146 = getelementptr inbounds %FloError, ptr %197, i64 0, i32 1
  store ptr %192, ptr %memberidx2.i.i146, align 8
  %memberidx.i.i147 = getelementptr inbounds %Array_FloError_, ptr %196, i64 0, i32 1
  %198 = load i64, ptr %memberidx.i.i147, align 4
  %memberidx1.i2.i148 = getelementptr inbounds %Array_FloError_, ptr %196, i64 0, i32 2
  %199 = load i64, ptr %memberidx1.i2.i148, align 4
  %.not.i.i149 = icmp slt i64 %198, %199
  br i1 %.not.i.i149, label %if.entry36.TypeChecker_error.exit152_crit_edge, label %if.entry.i.i151

if.entry36.TypeChecker_error.exit152_crit_edge:   ; preds = %if.entry36
  %.pre182 = load ptr, ptr %196, align 8
  br label %TypeChecker_error.exit152

if.entry.i.i151:                                  ; preds = %if.entry36
  %200 = shl nuw i64 %199, 1
  store i64 %200, ptr %memberidx1.i2.i148, align 4
  %201 = load ptr, ptr %196, align 8
  %202 = shl i64 %199, 4
  %203 = call ptr @realloc(ptr %201, i64 %202)
  store ptr %203, ptr %196, align 8
  %.pre181 = load i64, ptr %memberidx.i.i147, align 4
  br label %TypeChecker_error.exit152

TypeChecker_error.exit152:                        ; preds = %if.entry36.TypeChecker_error.exit152_crit_edge, %if.entry.i.i151
  %204 = phi ptr [ %.pre182, %if.entry36.TypeChecker_error.exit152_crit_edge ], [ %203, %if.entry.i.i151 ]
  %205 = phi i64 [ %198, %if.entry36.TypeChecker_error.exit152_crit_edge ], [ %.pre181, %if.entry.i.i151 ]
  %206 = add nsw i64 %205, 1
  store i64 %206, ptr %memberidx.i.i147, align 4
  %207 = getelementptr inbounds ptr, ptr %204, i64 %205
  store ptr %197, ptr %207, align 8
  br label %common.ret

ifend38:                                          ; preds = %ifend29
  %208 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %208, align 4
  %memberidx.i.i153 = getelementptr inbounds %Expression, ptr %208, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i153, align 4
  %memberidx1.i.i154 = getelementptr inbounds %Expression, ptr %208, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i154, align 1
  %memberidx.i155 = getelementptr inbounds %MemberExpression, ptr %208, i64 0, i32 4
  store ptr %1, ptr %memberidx.i155, align 8
  %memberidx1.i156 = getelementptr inbounds %MemberExpression, ptr %208, i64 0, i32 5
  store ptr %69, ptr %memberidx1.i156, align 8
  %memberidx2.i157 = getelementptr inbounds %Expression, ptr %208, i64 0, i32 3
  store ptr %common.ret.op.i99, ptr %memberidx2.i157, align 8
  %209 = tail call ptr @malloc(i32 24)
  %memberidx.i158 = getelementptr inbounds %Array_Expression_, ptr %209, i64 0, i32 1
  store i64 0, ptr %memberidx.i158, align 4
  %memberidx1.i159 = getelementptr inbounds %Array_Expression_, ptr %209, i64 0, i32 2
  store i64 8, ptr %memberidx1.i159, align 4
  %210 = tail call ptr @malloc(i32 64)
  store ptr %210, ptr %209, align 8
  store ptr %right.1, ptr %210, align 8
  store i64 1, ptr %memberidx.i158, align 4
  %211 = tail call ptr @malloc(i32 41)
  %memberidx44 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i99, i64 0, i32 2
  %212 = load ptr, ptr %memberidx44, align 8
  store i64 8, ptr %211, align 4
  %memberidx.i.i160 = getelementptr inbounds %Expression, ptr %211, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i160, align 4
  %memberidx1.i.i161 = getelementptr inbounds %Expression, ptr %211, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i161, align 1
  %memberidx.i162 = getelementptr inbounds %CallExpression, ptr %211, i64 0, i32 4
  store ptr %208, ptr %memberidx.i162, align 8
  %memberidx1.i163 = getelementptr inbounds %CallExpression, ptr %211, i64 0, i32 5
  store ptr %209, ptr %memberidx1.i163, align 8
  %memberidx2.i164 = getelementptr inbounds %Expression, ptr %211, i64 0, i32 3
  store ptr %212, ptr %memberidx2.i164, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %5)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %if.entry41, %TypeChecker_error.exit142, %if.entry34, %ifend28, %TypeChecker_error.exit, %if.entry17, %ifend12
  %common.ret.op = phi ptr [ %17, %ifend12 ], [ %22, %if.entry17 ], [ null, %TypeChecker_error.exit ], [ %64, %ifend28 ], [ %76, %if.entry34 ], [ null, %TypeChecker_error.exit142 ], [ %119, %if.entry41 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %memberidx2 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %12 = load i1, ptr %memberidx3, align 1
  switch i64 %4, label %ifend16 [
    i64 6, label %if.entry4
    i64 7, label %if.entry14
  ]

if.entry4:                                        ; preds = %ifend
  %13 = load i64, ptr %11, align 4
  %14 = add i64 %13, -1
  %15 = icmp ult i64 %14, 9
  br i1 %15, label %if.entry7, label %ifend33.split

if.entry7:                                        ; preds = %if.entry4
  %16 = icmp ult i64 %14, 7
  br i1 %16, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %if.entry7
  %memberidx13 = getelementptr inbounds %IntType, ptr %11, i64 0, i32 1
  store i1 true, ptr %memberidx13, align 1
  br label %ifend12

ifend12:                                          ; preds = %if.entry7, %if.entry10
  %17 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %17, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 1
  %memberidx.i86 = getelementptr inbounds %UnaryExpression, ptr %17, i64 0, i32 4
  store i64 6, ptr %memberidx.i86, align 4
  %memberidx1.i87 = getelementptr inbounds %UnaryExpression, ptr %17, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i87, align 8
  %memberidx2.i88 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i88, align 8
  store i1 %12, ptr %memberidx1.i.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %ifend
  %18 = load i64, ptr %11, align 4
  %19 = icmp ult i64 %18, 10
  br i1 %19, label %if.entry17, label %ifend33.split

ifend16:                                          ; preds = %ifend
  %20 = add i64 %4, -2
  %21 = icmp ult i64 %20, 4
  br i1 %21, label %if.entry20, label %ifend22

if.entry17:                                       ; preds = %if.entry14
  %22 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %22, align 4
  %memberidx.i.i89 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i89, align 4
  %memberidx1.i.i90 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 1
  %memberidx.i91 = getelementptr inbounds %UnaryExpression, ptr %22, i64 0, i32 4
  store i64 7, ptr %memberidx.i91, align 4
  %memberidx1.i92 = getelementptr inbounds %UnaryExpression, ptr %22, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i92, align 8
  %memberidx2.i93 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i93, align 8
  store i1 %12, ptr %memberidx1.i.i90, align 1
  br label %common.ret

if.entry20:                                       ; preds = %ifend16
  %23 = load i64, ptr %11, align 4
  %24 = add i64 %23, -1
  %25 = icmp ult i64 %24, 9
  %26 = icmp eq i64 %23, 13
  %27 = or i1 %26, %25
  br i1 %27, label %if.entry23, label %ifend22

ifend22:                                          ; preds = %if.entry20, %ifend16
  switch i64 %4, label %ifend33.split [
    i64 8, label %if.entry31
    i64 1, label %if.entry38
  ]

if.entry23:                                       ; preds = %if.entry20
  %memberidx.i95 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i95, align 4
  switch i64 %28, label %if.entry26 [
    i64 8, label %if.entry.i
    i64 13, label %if.entry4.i
    i64 14, label %check_is_var.exit
  ]

if.entry.i:                                       ; preds = %if.entry23
  %memberidx1.i96 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %29 = load ptr, ptr %memberidx1.i96, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %ifend28, label %if.entry26

if.entry4.i:                                      ; preds = %if.entry23
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %32 = load ptr, ptr %memberidx7.i, align 8
  %33 = load i64, ptr %32, align 4
  %34 = icmp eq i64 %33, 1
  br i1 %34, label %ifend28, label %if.entry26

check_is_var.exit:                                ; preds = %if.entry23
  %memberidx13.i = getelementptr inbounds %IndexExpression, ptr %6, i64 0, i32 4
  %35 = load ptr, ptr %memberidx13.i, align 8
  %memberidx14.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %36 = load ptr, ptr %memberidx14.i, align 8
  %37 = load i64, ptr %36, align 4
  %.not153 = icmp eq i64 %37, 15
  br i1 %.not153, label %if.entry26, label %ifend28

if.entry26:                                       ; preds = %if.entry4.i, %if.entry.i, %if.entry23, %check_is_var.exit
  %38 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %memberidx.i97 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i97, align 4
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, 1
  %42 = tail call ptr @malloc(i32 %41)
  %43 = load ptr, ptr %38, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %43, i64 %39, i1 false)
  %44 = getelementptr inbounds i8, ptr %42, i64 %39
  store i8 0, ptr %44, align 1
  %45 = alloca ptr, align 8
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %45, ptr nonnull @185, ptr %42)
  %47 = load ptr, ptr %45, align 8
  %48 = tail call ptr @malloc(i32 24)
  store ptr %47, ptr %48, align 8
  %memberidx1.i98 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i98, align 4
  %memberidx2.i99 = getelementptr inbounds %String, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx2.i99, align 4
  tail call void @free(ptr %42)
  %49 = load ptr, ptr %memberidx1, align 8
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i101 = getelementptr inbounds %Compiler, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i101, align 8
  %53 = call ptr @malloc(i32 24)
  store i64 4, ptr %53, align 4
  %memberidx1.i.i102 = getelementptr inbounds %FloError, ptr %53, i64 0, i32 2
  store ptr %50, ptr %memberidx1.i.i102, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %53, i64 0, i32 1
  store ptr %48, ptr %memberidx2.i.i, align 8
  %memberidx.i.i103 = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i.i103, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 2
  %55 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %54, %55
  br i1 %.not.i.i, label %if.entry26.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry26.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry26
  %.pre157 = load ptr, ptr %52, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry26
  %56 = shl nuw i64 %55, 1
  store i64 %56, ptr %memberidx1.i2.i, align 4
  %57 = load ptr, ptr %52, align 8
  %58 = shl i64 %55, 4
  %59 = call ptr @realloc(ptr %57, i64 %58)
  store ptr %59, ptr %52, align 8
  %.pre156 = load i64, ptr %memberidx.i.i103, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry26.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %60 = phi ptr [ %.pre157, %if.entry26.TypeChecker_error.exit_crit_edge ], [ %59, %if.entry.i.i ]
  %61 = phi i64 [ %54, %if.entry26.TypeChecker_error.exit_crit_edge ], [ %.pre156, %if.entry.i.i ]
  %62 = add nsw i64 %61, 1
  store i64 %62, ptr %memberidx.i.i103, align 4
  %63 = getelementptr inbounds ptr, ptr %60, i64 %61
  store ptr %53, ptr %63, align 8
  br label %common.ret

ifend28:                                          ; preds = %if.entry4.i, %if.entry.i, %check_is_var.exit
  %64 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %64, align 4
  %memberidx.i.i104 = getelementptr inbounds %Expression, ptr %64, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i104, align 4
  %memberidx1.i.i105 = getelementptr inbounds %Expression, ptr %64, i64 0, i32 1
  %memberidx.i106 = getelementptr inbounds %UnaryExpression, ptr %64, i64 0, i32 4
  store i64 %4, ptr %memberidx.i106, align 4
  %memberidx1.i107 = getelementptr inbounds %UnaryExpression, ptr %64, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i107, align 8
  %memberidx2.i108 = getelementptr inbounds %Expression, ptr %64, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i108, align 8
  store i1 false, ptr %memberidx1.i.i105, align 1
  br label %common.ret

if.entry31:                                       ; preds = %ifend22
  %memberidx.i110 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %65 = load i64, ptr %memberidx.i110, align 4
  switch i64 %65, label %ifend33.split [
    i64 8, label %if.entry.i113
    i64 13, label %if.entry4.i116
    i64 14, label %check_is_var.exit121
  ]

if.entry.i113:                                    ; preds = %if.entry31
  %memberidx1.i112 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %66 = load ptr, ptr %memberidx1.i112, align 8
  %67 = load i64, ptr %66, align 4
  %68 = icmp eq i64 %67, 1
  br i1 %68, label %if.entry34, label %ifend33.split

if.entry4.i116:                                   ; preds = %if.entry31
  %memberidx7.i115 = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %69 = load ptr, ptr %memberidx7.i115, align 8
  %70 = load i64, ptr %69, align 4
  %71 = icmp eq i64 %70, 1
  br i1 %71, label %if.entry34, label %ifend33.split

check_is_var.exit121:                             ; preds = %if.entry31
  %memberidx13.i118 = getelementptr inbounds %IndexExpression, ptr %6, i64 0, i32 4
  %72 = load ptr, ptr %memberidx13.i118, align 8
  %memberidx14.i119 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  %73 = load ptr, ptr %memberidx14.i119, align 8
  %74 = load i64, ptr %73, align 4
  %.not = icmp eq i64 %74, 15
  br i1 %.not, label %ifend33.split, label %if.entry34

ifend33.split:                                    ; preds = %if.entry4, %if.entry14, %check_is_var.exit121, %if.entry31, %if.entry.i113, %if.entry4.i116, %ifend22
  %75 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %memberidx.i129.phi.trans.insert = getelementptr inbounds %String, ptr %75, i64 0, i32 1
  %.pre = load i64, ptr %memberidx.i129.phi.trans.insert, align 4
  %extract.t = trunc i64 %.pre to i32
  %phi.bo = add i32 %extract.t, 1
  br label %ifend40

if.entry34:                                       ; preds = %if.entry4.i116, %if.entry.i113, %check_is_var.exit121
  %76 = tail call ptr @malloc(i32 41)
  %77 = tail call ptr @malloc(i32 16)
  %78 = load ptr, ptr %memberidx2, align 8
  store i64 13, ptr %77, align 4
  %memberidx.i122 = getelementptr inbounds %PointerType, ptr %77, i64 0, i32 1
  store ptr %78, ptr %memberidx.i122, align 8
  store i64 8, ptr %76, align 4
  %memberidx.i.i123 = getelementptr inbounds %Expression, ptr %76, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i123, align 4
  %memberidx1.i.i124 = getelementptr inbounds %Expression, ptr %76, i64 0, i32 1
  %memberidx.i125 = getelementptr inbounds %UnaryExpression, ptr %76, i64 0, i32 4
  store i64 8, ptr %memberidx.i125, align 4
  %memberidx1.i126 = getelementptr inbounds %UnaryExpression, ptr %76, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i126, align 8
  %memberidx2.i127 = getelementptr inbounds %Expression, ptr %76, i64 0, i32 3
  store ptr %77, ptr %memberidx2.i127, align 8
  store i1 false, ptr %memberidx1.i.i124, align 1
  br label %common.ret

if.entry38:                                       ; preds = %ifend22
  %79 = load i64, ptr %11, align 4
  %80 = icmp eq i64 %79, 20
  br i1 %80, label %if.entry.i152, label %is_object.exit

if.entry.i152:                                    ; preds = %if.entry38, %if.entry.i152
  %.tr5.i = phi ptr [ %81, %if.entry.i152 ], [ %11, %if.entry38 ]
  %memberidx1.i151 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %81 = load ptr, ptr %memberidx1.i151, align 8
  %82 = load i64, ptr %81, align 4
  %83 = icmp eq i64 %82, 20
  br i1 %83, label %if.entry.i152, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i152, %if.entry38
  %.lcssa.i = phi i64 [ %79, %if.entry38 ], [ %82, %if.entry.i152 ]
  %84 = icmp eq i64 %.lcssa.i, 11
  %85 = icmp eq i64 %79, 13
  %86 = or i1 %85, %84
  br i1 %86, label %if.entry41, label %if.entry38.split

if.entry38.split:                                 ; preds = %is_object.exit
  %87 = tail call ptr @malloc(i32 1)
  store i8 38, ptr %87, align 8
  %88 = tail call ptr @malloc(i32 24)
  store ptr %87, ptr %88, align 8
  %memberidx1.i.i31.i = getelementptr inbounds %String, ptr %88, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i31.i, align 4
  %memberidx2.i.i32.i = getelementptr inbounds %String, ptr %88, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i32.i, align 4
  br label %ifend40

ifend40:                                          ; preds = %if.entry38.split, %ifend33.split
  %.off0 = phi i32 [ %phi.bo, %ifend33.split ], [ 2, %if.entry38.split ]
  %phi.call = phi ptr [ %75, %ifend33.split ], [ %88, %if.entry38.split ]
  %memberidx.i129 = getelementptr inbounds %String, ptr %phi.call, i64 0, i32 1
  %89 = tail call ptr @malloc(i32 %.off0)
  %90 = load ptr, ptr %phi.call, align 8
  %91 = load i64, ptr %memberidx.i129, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %89, ptr align 8 %90, i64 %91, i1 false)
  %92 = getelementptr inbounds i8, ptr %89, i64 %91
  store i8 0, ptr %92, align 1
  %93 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %11)
  %memberidx.i130 = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  %94 = load i64, ptr %memberidx.i130, align 4
  %95 = trunc i64 %94 to i32
  %96 = add i32 %95, 1
  %97 = tail call ptr @malloc(i32 %96)
  %98 = load ptr, ptr %93, align 8
  %99 = load i64, ptr %memberidx.i130, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %97, ptr align 8 %98, i64 %99, i1 false)
  %100 = getelementptr inbounds i8, ptr %97, i64 %99
  store i8 0, ptr %100, align 1
  %101 = alloca ptr, align 8
  %102 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %101, ptr nonnull @186, ptr %89, ptr %97)
  %103 = load ptr, ptr %101, align 8
  %104 = tail call ptr @malloc(i32 24)
  store ptr %103, ptr %104, align 8
  %memberidx1.i131 = getelementptr inbounds %String, ptr %104, i64 0, i32 1
  store i64 %102, ptr %memberidx1.i131, align 4
  %memberidx2.i132 = getelementptr inbounds %String, ptr %104, i64 0, i32 2
  store i64 %102, ptr %memberidx2.i132, align 4
  tail call void @free(ptr %89)
  tail call void @free(ptr %97)
  %105 = load ptr, ptr %2, align 8
  %106 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i134 = getelementptr inbounds %Compiler, ptr %106, i64 0, i32 5
  %107 = load ptr, ptr %memberidx1.i134, align 8
  %108 = call ptr @malloc(i32 24)
  store i64 5, ptr %108, align 4
  %memberidx1.i.i135 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 2
  store ptr %105, ptr %memberidx1.i.i135, align 8
  %memberidx2.i.i136 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 1
  store ptr %104, ptr %memberidx2.i.i136, align 8
  %memberidx.i.i137 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %109 = load i64, ptr %memberidx.i.i137, align 4
  %memberidx1.i2.i138 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 2
  %110 = load i64, ptr %memberidx1.i2.i138, align 4
  %.not.i.i139 = icmp slt i64 %109, %110
  br i1 %.not.i.i139, label %ifend40.TypeChecker_error.exit142_crit_edge, label %if.entry.i.i141

ifend40.TypeChecker_error.exit142_crit_edge:      ; preds = %ifend40
  %.pre155 = load ptr, ptr %107, align 8
  br label %TypeChecker_error.exit142

if.entry.i.i141:                                  ; preds = %ifend40
  %111 = shl nuw i64 %110, 1
  store i64 %111, ptr %memberidx1.i2.i138, align 4
  %112 = load ptr, ptr %107, align 8
  %113 = shl i64 %110, 4
  %114 = call ptr @realloc(ptr %112, i64 %113)
  store ptr %114, ptr %107, align 8
  %.pre154 = load i64, ptr %memberidx.i.i137, align 4
  br label %TypeChecker_error.exit142

TypeChecker_error.exit142:                        ; preds = %ifend40.TypeChecker_error.exit142_crit_edge, %if.entry.i.i141
  %115 = phi ptr [ %.pre155, %ifend40.TypeChecker_error.exit142_crit_edge ], [ %114, %if.entry.i.i141 ]
  %116 = phi i64 [ %109, %ifend40.TypeChecker_error.exit142_crit_edge ], [ %.pre154, %if.entry.i.i141 ]
  %117 = add nsw i64 %116, 1
  store i64 %117, ptr %memberidx.i.i137, align 4
  %118 = getelementptr inbounds ptr, ptr %115, i64 %116
  store ptr %108, ptr %118, align 8
  br label %common.ret

if.entry41:                                       ; preds = %is_object.exit
  %119 = tail call ptr @malloc(i32 41)
  %120 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %120, align 4
  store i64 8, ptr %119, align 4
  %memberidx.i.i143 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i143, align 4
  %memberidx1.i.i144 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  %memberidx.i145 = getelementptr inbounds %UnaryExpression, ptr %119, i64 0, i32 4
  store i64 1, ptr %memberidx.i145, align 4
  %memberidx1.i146 = getelementptr inbounds %UnaryExpression, ptr %119, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i146, align 8
  %memberidx2.i147 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  store ptr %120, ptr %memberidx2.i147, align 8
  store i1 false, ptr %memberidx1.i.i144, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %args = alloca ptr, align 8
  %memberidx = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 3
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %3)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %5, i64 0, i32 5
  %6 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend27, %2, %TypeChecker_error.exit130, %TypeChecker_error.exit112, %TypeChecker_error.exit100, %TypeChecker_error.exit, %ifend10
  %common.ret.op = phi ptr [ %39, %ifend10 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit100 ], [ null, %TypeChecker_error.exit112 ], [ null, %TypeChecker_error.exit130 ], [ null, %2 ], [ null, %ifend27 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %9 = load i64, ptr %4, align 4
  %10 = icmp eq i64 %9, 20
  br i1 %10, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx5 = getelementptr inbounds %GenericType, ptr %4, i64 0, i32 3
  %11 = load ptr, ptr %memberidx5, align 8
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %memory_type.0 = phi ptr [ %11, %if.entry2 ], [ %4, %ifend ]
  %12 = tail call ptr @malloc(i32 24)
  %memberidx.i79 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 1
  store i64 0, ptr %memberidx.i79, align 4
  %memberidx1.i80 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 2
  store i64 8, ptr %memberidx1.i80, align 4
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %12, align 8
  store i64 0, ptr %memberidx.i79, align 4
  store ptr %12, ptr %args, align 8
  %14 = load i64, ptr %memory_type.0, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i136, label %is_object.exit.thread

if.entry.i136:                                    ; preds = %ifend4, %if.entry.i136
  %.tr5.i = phi ptr [ %16, %if.entry.i136 ], [ %memory_type.0, %ifend4 ]
  %memberidx1.i135 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i135, align 8
  %17 = load i64, ptr %16, align 4
  switch i64 %17, label %else9 [
    i64 20, label %if.entry.i136
    i64 11, label %if.entry8
  ]

is_object.exit.thread:                            ; preds = %ifend4
  switch i64 %14, label %else20 [
    i64 11, label %if.entry8.thread
    i64 13, label %if.entry19
  ]

if.entry8.thread:                                 ; preds = %is_object.exit.thread
  %18 = load ptr, ptr %0, align 8
  br label %if.entry3.i

if.entry8:                                        ; preds = %if.entry.i136
  %19 = load ptr, ptr %0, align 8
  br i1 %15, label %if.entry.i138, label %if.entry3.i

if.entry.i138:                                    ; preds = %if.entry8, %if.entry.i138
  %.tr11.i141 = phi ptr [ %20, %if.entry.i138 ], [ %memory_type.0, %if.entry8 ]
  %memberidx1.i137 = getelementptr inbounds %GenericType, ptr %.tr11.i141, i64 0, i32 3
  %20 = load ptr, ptr %memberidx1.i137, align 8
  %21 = load i64, ptr %20, align 4
  %switch = icmp eq i64 %21, 20
  br i1 %switch, label %if.entry.i138, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i138, %if.entry8.thread, %if.entry8
  %22 = phi ptr [ %19, %if.entry8 ], [ %18, %if.entry8.thread ], [ %19, %if.entry.i138 ]
  %.tr11.i.lcssa = phi ptr [ %memory_type.0, %if.entry8 ], [ %memory_type.0, %if.entry8.thread ], [ %20, %if.entry.i138 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = load i64, ptr %23, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx2.i.i139 = getelementptr inbounds %Module, ptr %28, i64 0, i32 3
  %29 = load ptr, ptr %memberidx2.i.i139, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %30 = load i64, ptr %memberidx3.i.i, align 4
  %31 = load ptr, ptr %29, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 %30
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %33, align 8
  %memberidx13 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %35 = load ptr, ptr %memberidx13, align 8
  %36 = call fastcc ptr @TypeChecker_check_constructor_call(ptr nonnull %0, ptr %34, ptr %35, ptr nonnull %args)
  %.not78 = icmp eq ptr %36, null
  br i1 %.not78, label %if.entry3.i.ifend10_crit_edge, label %if.entry14

if.entry3.i.ifend10_crit_edge:                    ; preds = %if.entry3.i
  %.pre152 = load ptr, ptr %args, align 8
  br label %ifend10

else9:                                            ; preds = %if.entry.i136
  %37 = icmp eq i64 %14, 13
  br i1 %37, label %if.entry19, label %else20

ifend10:                                          ; preds = %if.entry3.i.ifend10_crit_edge, %Array_Expression____sl__.exit
  %38 = phi ptr [ %.pre152, %if.entry3.i.ifend10_crit_edge ], [ %12, %Array_Expression____sl__.exit ]
  %memory_type.1 = phi ptr [ %memory_type.0, %if.entry3.i.ifend10_crit_edge ], [ %55, %Array_Expression____sl__.exit ]
  %39 = tail call ptr @malloc(i32 42)
  %memberidx41 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 4
  %40 = load i1, ptr %memberidx41, align 1
  store i64 8, ptr %39, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i81 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 6
  store ptr %memory_type.1, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 5
  store i1 %40, ptr %memberidx1.i82, align 1
  %memberidx2.i83 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 4
  store ptr %38, ptr %memberidx2.i83, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 3
  store ptr %4, ptr %memberidx3.i, align 8
  br label %common.ret

if.entry14:                                       ; preds = %if.entry3.i
  %41 = load ptr, ptr %1, align 8
  %42 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 5
  %43 = load ptr, ptr %memberidx1.i85, align 8
  %44 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %44, align 4
  %memberidx1.i.i86 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i86, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %44, i64 0, i32 1
  store ptr %36, ptr %memberidx2.i.i, align 8
  %memberidx.i.i87 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i.i87, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %46 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %45, %46
  br i1 %.not.i.i, label %if.entry14.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry14.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry14
  %.pre151 = load ptr, ptr %43, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry14
  %47 = shl nuw i64 %46, 1
  store i64 %47, ptr %memberidx1.i2.i, align 4
  %48 = load ptr, ptr %43, align 8
  %49 = shl i64 %46, 4
  %50 = tail call ptr @realloc(ptr %48, i64 %49)
  store ptr %50, ptr %43, align 8
  %.pre150 = load i64, ptr %memberidx.i.i87, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry14.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %51 = phi ptr [ %.pre151, %if.entry14.TypeChecker_error.exit_crit_edge ], [ %50, %if.entry.i.i ]
  %52 = phi i64 [ %45, %if.entry14.TypeChecker_error.exit_crit_edge ], [ %.pre150, %if.entry.i.i ]
  %53 = add nsw i64 %52, 1
  store i64 %53, ptr %memberidx.i.i87, align 4
  %54 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %44, ptr %54, align 8
  br label %common.ret

if.entry19:                                       ; preds = %is_object.exit.thread, %else9
  %memberidx22 = getelementptr inbounds %PointerType, ptr %memory_type.0, i64 0, i32 1
  %55 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %56 = load ptr, ptr %memberidx23, align 8
  %memberidx24 = getelementptr inbounds %Array_ExpressionNode_, ptr %56, i64 0, i32 1
  %57 = load i64, ptr %memberidx24, align 4
  %.not = icmp eq i64 %57, 1
  br i1 %.not, label %ifend27, label %if.entry25

else20:                                           ; preds = %is_object.exit.thread, %else9
  %58 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %memory_type.0)
  %memberidx.i88 = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i88, align 4
  %60 = trunc i64 %59 to i32
  %61 = add i32 %60, 1
  %62 = tail call ptr @malloc(i32 %61)
  %63 = load ptr, ptr %58, align 8
  %64 = load i64, ptr %memberidx.i88, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %62, ptr align 8 %63, i64 %64, i1 false)
  %65 = getelementptr inbounds i8, ptr %62, i64 %64
  store i8 0, ptr %65, align 1
  %66 = alloca ptr, align 8
  %67 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %66, ptr nonnull @194, ptr %62)
  %68 = load ptr, ptr %66, align 8
  %69 = tail call ptr @malloc(i32 24)
  store ptr %68, ptr %69, align 8
  %memberidx1.i89 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  store i64 %67, ptr %memberidx1.i89, align 4
  %memberidx2.i90 = getelementptr inbounds %String, ptr %69, i64 0, i32 2
  store i64 %67, ptr %memberidx2.i90, align 4
  tail call void @free(ptr %62)
  %70 = load ptr, ptr %1, align 8
  %71 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i92 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 5
  %72 = load ptr, ptr %memberidx1.i92, align 8
  %73 = call ptr @malloc(i32 24)
  store i64 5, ptr %73, align 4
  %memberidx1.i.i93 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 2
  store ptr %70, ptr %memberidx1.i.i93, align 8
  %memberidx2.i.i94 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 1
  store ptr %69, ptr %memberidx2.i.i94, align 8
  %memberidx.i.i95 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i.i95, align 4
  %memberidx1.i2.i96 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 2
  %75 = load i64, ptr %memberidx1.i2.i96, align 4
  %.not.i.i97 = icmp slt i64 %74, %75
  br i1 %.not.i.i97, label %else20.TypeChecker_error.exit100_crit_edge, label %if.entry.i.i99

else20.TypeChecker_error.exit100_crit_edge:       ; preds = %else20
  %.pre143 = load ptr, ptr %72, align 8
  br label %TypeChecker_error.exit100

if.entry.i.i99:                                   ; preds = %else20
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx1.i2.i96, align 4
  %77 = load ptr, ptr %72, align 8
  %78 = shl i64 %75, 4
  %79 = call ptr @realloc(ptr %77, i64 %78)
  store ptr %79, ptr %72, align 8
  %.pre = load i64, ptr %memberidx.i.i95, align 4
  br label %TypeChecker_error.exit100

TypeChecker_error.exit100:                        ; preds = %else20.TypeChecker_error.exit100_crit_edge, %if.entry.i.i99
  %80 = phi ptr [ %.pre143, %else20.TypeChecker_error.exit100_crit_edge ], [ %79, %if.entry.i.i99 ]
  %81 = phi i64 [ %74, %else20.TypeChecker_error.exit100_crit_edge ], [ %.pre, %if.entry.i.i99 ]
  %82 = add nsw i64 %81, 1
  store i64 %82, ptr %memberidx.i.i95, align 4
  %83 = getelementptr inbounds ptr, ptr %80, i64 %81
  store ptr %73, ptr %83, align 8
  br label %common.ret

if.entry25:                                       ; preds = %if.entry19
  %84 = alloca ptr, align 8
  %85 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %84, ptr nonnull @192, i64 %57)
  %86 = load ptr, ptr %84, align 8
  %87 = tail call ptr @malloc(i32 24)
  store ptr %86, ptr %87, align 8
  %memberidx1.i101 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  store i64 %85, ptr %memberidx1.i101, align 4
  %memberidx2.i102 = getelementptr inbounds %String, ptr %87, i64 0, i32 2
  store i64 %85, ptr %memberidx2.i102, align 4
  %88 = load ptr, ptr %1, align 8
  %89 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i104 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 5
  %90 = load ptr, ptr %memberidx1.i104, align 8
  %91 = call ptr @malloc(i32 24)
  store i64 4, ptr %91, align 4
  %memberidx1.i.i105 = getelementptr inbounds %FloError, ptr %91, i64 0, i32 2
  store ptr %88, ptr %memberidx1.i.i105, align 8
  %memberidx2.i.i106 = getelementptr inbounds %FloError, ptr %91, i64 0, i32 1
  store ptr %87, ptr %memberidx2.i.i106, align 8
  %memberidx.i.i107 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 1
  %92 = load i64, ptr %memberidx.i.i107, align 4
  %memberidx1.i2.i108 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 2
  %93 = load i64, ptr %memberidx1.i2.i108, align 4
  %.not.i.i109 = icmp slt i64 %92, %93
  br i1 %.not.i.i109, label %if.entry25.TypeChecker_error.exit112_crit_edge, label %if.entry.i.i111

if.entry25.TypeChecker_error.exit112_crit_edge:   ; preds = %if.entry25
  %.pre145 = load ptr, ptr %90, align 8
  br label %TypeChecker_error.exit112

if.entry.i.i111:                                  ; preds = %if.entry25
  %94 = shl nuw i64 %93, 1
  store i64 %94, ptr %memberidx1.i2.i108, align 4
  %95 = load ptr, ptr %90, align 8
  %96 = shl i64 %93, 4
  %97 = call ptr @realloc(ptr %95, i64 %96)
  store ptr %97, ptr %90, align 8
  %.pre144 = load i64, ptr %memberidx.i.i107, align 4
  br label %TypeChecker_error.exit112

TypeChecker_error.exit112:                        ; preds = %if.entry25.TypeChecker_error.exit112_crit_edge, %if.entry.i.i111
  %98 = phi ptr [ %.pre145, %if.entry25.TypeChecker_error.exit112_crit_edge ], [ %97, %if.entry.i.i111 ]
  %99 = phi i64 [ %92, %if.entry25.TypeChecker_error.exit112_crit_edge ], [ %.pre144, %if.entry.i.i111 ]
  %100 = add nsw i64 %99, 1
  store i64 %100, ptr %memberidx.i.i107, align 4
  %101 = getelementptr inbounds ptr, ptr %98, i64 %99
  store ptr %91, ptr %101, align 8
  br label %common.ret

ifend27:                                          ; preds = %if.entry19
  %102 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %102, align 4
  %memberidx.i113 = getelementptr inbounds %IntType, ptr %102, i64 0, i32 1
  store i1 false, ptr %memberidx.i113, align 1
  %103 = load ptr, ptr %memberidx23, align 8
  %104 = load ptr, ptr %103, align 8
  %105 = load ptr, ptr %104, align 8
  %106 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %102, ptr %105)
  %107 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i115 = getelementptr inbounds %Compiler, ptr %107, i64 0, i32 5
  %108 = load ptr, ptr %memberidx1.i115, align 8
  %memberidx2.i116 = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 1
  %109 = load i64, ptr %memberidx2.i116, align 4
  %110 = icmp sgt i64 %109, 0
  br i1 %110, label %common.ret, label %ifend32

ifend32:                                          ; preds = %ifend27
  %memberidx33 = getelementptr inbounds %Expression, ptr %106, i64 0, i32 3
  %111 = load ptr, ptr %memberidx33, align 8
  %112 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %102, ptr %111)
  br i1 %112, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %ifend32
  %113 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %102)
  %memberidx.i117 = getelementptr inbounds %String, ptr %113, i64 0, i32 1
  %114 = load i64, ptr %memberidx.i117, align 4
  %115 = trunc i64 %114 to i32
  %116 = add i32 %115, 1
  %117 = tail call ptr @malloc(i32 %116)
  %118 = load ptr, ptr %113, align 8
  %119 = load i64, ptr %memberidx.i117, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %117, ptr align 8 %118, i64 %119, i1 false)
  %120 = getelementptr inbounds i8, ptr %117, i64 %119
  store i8 0, ptr %120, align 1
  %121 = load ptr, ptr %memberidx33, align 8
  %122 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %121)
  %memberidx.i118 = getelementptr inbounds %String, ptr %122, i64 0, i32 1
  %123 = load i64, ptr %memberidx.i118, align 4
  %124 = trunc i64 %123 to i32
  %125 = add i32 %124, 1
  %126 = tail call ptr @malloc(i32 %125)
  %127 = load ptr, ptr %122, align 8
  %128 = load i64, ptr %memberidx.i118, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %126, ptr align 8 %127, i64 %128, i1 false)
  %129 = getelementptr inbounds i8, ptr %126, i64 %128
  store i8 0, ptr %129, align 1
  %130 = alloca ptr, align 8
  %131 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %130, ptr nonnull @193, ptr %117, ptr %126)
  %132 = load ptr, ptr %130, align 8
  %133 = tail call ptr @malloc(i32 24)
  store ptr %132, ptr %133, align 8
  %memberidx1.i119 = getelementptr inbounds %String, ptr %133, i64 0, i32 1
  store i64 %131, ptr %memberidx1.i119, align 4
  %memberidx2.i120 = getelementptr inbounds %String, ptr %133, i64 0, i32 2
  store i64 %131, ptr %memberidx2.i120, align 4
  tail call void @free(ptr %117)
  tail call void @free(ptr %126)
  %134 = load ptr, ptr %memberidx23, align 8
  %135 = load ptr, ptr %134, align 8
  %136 = load ptr, ptr %135, align 8
  %137 = load ptr, ptr %136, align 8
  %138 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i122 = getelementptr inbounds %Compiler, ptr %138, i64 0, i32 5
  %139 = load ptr, ptr %memberidx1.i122, align 8
  %140 = call ptr @malloc(i32 24)
  store i64 4, ptr %140, align 4
  %memberidx1.i.i123 = getelementptr inbounds %FloError, ptr %140, i64 0, i32 2
  store ptr %137, ptr %memberidx1.i.i123, align 8
  %memberidx2.i.i124 = getelementptr inbounds %FloError, ptr %140, i64 0, i32 1
  store ptr %133, ptr %memberidx2.i.i124, align 8
  %memberidx.i.i125 = getelementptr inbounds %Array_FloError_, ptr %139, i64 0, i32 1
  %141 = load i64, ptr %memberidx.i.i125, align 4
  %memberidx1.i2.i126 = getelementptr inbounds %Array_FloError_, ptr %139, i64 0, i32 2
  %142 = load i64, ptr %memberidx1.i2.i126, align 4
  %.not.i.i127 = icmp slt i64 %141, %142
  br i1 %.not.i.i127, label %if.entry34.TypeChecker_error.exit130_crit_edge, label %if.entry.i.i129

if.entry34.TypeChecker_error.exit130_crit_edge:   ; preds = %if.entry34
  %.pre147 = load ptr, ptr %139, align 8
  br label %TypeChecker_error.exit130

if.entry.i.i129:                                  ; preds = %if.entry34
  %143 = shl nuw i64 %142, 1
  store i64 %143, ptr %memberidx1.i2.i126, align 4
  %144 = load ptr, ptr %139, align 8
  %145 = shl i64 %142, 4
  %146 = call ptr @realloc(ptr %144, i64 %145)
  store ptr %146, ptr %139, align 8
  %.pre146 = load i64, ptr %memberidx.i.i125, align 4
  br label %TypeChecker_error.exit130

TypeChecker_error.exit130:                        ; preds = %if.entry34.TypeChecker_error.exit130_crit_edge, %if.entry.i.i129
  %147 = phi ptr [ %.pre147, %if.entry34.TypeChecker_error.exit130_crit_edge ], [ %146, %if.entry.i.i129 ]
  %148 = phi i64 [ %141, %if.entry34.TypeChecker_error.exit130_crit_edge ], [ %.pre146, %if.entry.i.i129 ]
  %149 = add nsw i64 %148, 1
  store i64 %149, ptr %memberidx.i.i125, align 4
  %150 = getelementptr inbounds ptr, ptr %147, i64 %148
  store ptr %140, ptr %150, align 8
  tail call void @free(ptr nonnull %102)
  br label %common.ret

ifend36:                                          ; preds = %ifend32
  %151 = load i64, ptr %memberidx.i79, align 4
  %152 = load i64, ptr %memberidx1.i80, align 4
  %.not.i = icmp slt i64 %151, %152
  br i1 %.not.i, label %ifend36.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

ifend36.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend36
  %.pre149 = load ptr, ptr %12, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %ifend36
  %153 = shl nuw i64 %152, 1
  store i64 %153, ptr %memberidx1.i80, align 4
  %154 = load ptr, ptr %12, align 8
  %155 = shl i64 %152, 4
  %156 = tail call ptr @realloc(ptr %154, i64 %155)
  store ptr %156, ptr %12, align 8
  %.pre148 = load i64, ptr %memberidx.i79, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend36.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %157 = phi ptr [ %.pre149, %ifend36.Array_Expression____sl__.exit_crit_edge ], [ %156, %if.entry.i ]
  %158 = phi i64 [ %151, %ifend36.Array_Expression____sl__.exit_crit_edge ], [ %.pre148, %if.entry.i ]
  %159 = add nsw i64 %158, 1
  store i64 %159, ptr %memberidx.i79, align 4
  %160 = getelementptr inbounds ptr, ptr %157, i64 %158
  store ptr %106, ptr %160, align 8
  br label %ifend10
}

define internal fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i49 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i.i50 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx1.i.i50, align 8
  %memberidx2.i.i51 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i.i51, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend.i

ifend.i:                                          ; preds = %3
  %memberidx.i52 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i52, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %ifend, label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i53 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i53, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i, align 1
  %.pre = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre, i64 0, i32 5
  %.pre54 = load ptr, ptr %memberidx1.i.phi.trans.insert, align 8
  %memberidx2.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre54, i64 0, i32 1
  %.pre55 = load i64, ptr %memberidx2.i.phi.trans.insert, align 4
  %17 = icmp sgt i64 %.pre55, 0
  br i1 %17, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %ifend4, %ifend, %TypeChecker_check_condition.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %67, %ifend13 ], [ null, %TypeChecker_check_condition.exit ], [ null, %ifend ], [ null, %ifend4 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %ifend.i, %TypeChecker_check_condition.exit
  %common.ret.op.i61 = phi ptr [ %15, %TypeChecker_check_condition.exit ], [ %6, %ifend.i ]
  %memberidx1 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 4
  %18 = load ptr, ptr %memberidx1, align 8
  %19 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %1, ptr %18)
  %20 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i33 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx1.i33, align 8
  %memberidx2.i34 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx2.i34, align 4
  %23 = icmp sgt i64 %22, 0
  br i1 %23, label %common.ret, label %ifend4

ifend4:                                           ; preds = %ifend
  %memberidx5 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %24 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 5
  %25 = load ptr, ptr %memberidx6, align 8
  %26 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %24, ptr %25)
  %27 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i36 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 5
  %28 = load ptr, ptr %memberidx1.i36, align 8
  %memberidx2.i37 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx2.i37, align 4
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend4
  %memberidx10 = getelementptr inbounds %Expression, ptr %26, i64 0, i32 3
  %31 = load ptr, ptr %memberidx10, align 8
  %32 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %24, ptr %31)
  br i1 %32, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %33 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %24)
  %memberidx.i38 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i38, align 4
  %35 = trunc i64 %34 to i32
  %36 = add i32 %35, 1
  %37 = tail call ptr @malloc(i32 %36)
  %38 = load ptr, ptr %33, align 8
  %39 = load i64, ptr %memberidx.i38, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %38, i64 %39, i1 false)
  %40 = getelementptr inbounds i8, ptr %37, i64 %39
  store i8 0, ptr %40, align 1
  %41 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %31)
  %memberidx.i39 = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i39, align 4
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, 1
  %45 = tail call ptr @malloc(i32 %44)
  %46 = load ptr, ptr %41, align 8
  %47 = load i64, ptr %memberidx.i39, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %45, ptr align 8 %46, i64 %47, i1 false)
  %48 = getelementptr inbounds i8, ptr %45, i64 %47
  store i8 0, ptr %48, align 1
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @207, ptr %37, ptr %45)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i40 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 %50, ptr %memberidx1.i40, align 4
  %memberidx2.i41 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i41, align 4
  tail call void @free(ptr %37)
  tail call void @free(ptr %45)
  %53 = load ptr, ptr %2, align 8
  %54 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i43 = getelementptr inbounds %Compiler, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx1.i43, align 8
  %56 = call ptr @malloc(i32 24)
  store i64 5, ptr %56, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 2
  store ptr %53, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 1
  store ptr %52, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %57 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %58 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %57, %58
  br i1 %.not.i.i, label %if.entry11.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry11.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry11
  %.pre57 = load ptr, ptr %55, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry11
  %59 = shl nuw i64 %58, 1
  store i64 %59, ptr %memberidx1.i2.i, align 4
  %60 = load ptr, ptr %55, align 8
  %61 = shl i64 %58, 4
  %62 = call ptr @realloc(ptr %60, i64 %61)
  store ptr %62, ptr %55, align 8
  %.pre56 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %63 = phi ptr [ %.pre57, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %62, %if.entry.i.i ]
  %64 = phi i64 [ %57, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %.pre56, %if.entry.i.i ]
  %65 = add nsw i64 %64, 1
  store i64 %65, ptr %memberidx.i.i, align 4
  %66 = getelementptr inbounds ptr, ptr %63, i64 %64
  store ptr %56, ptr %66, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %67 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %67, align 4
  %memberidx.i.i44 = getelementptr inbounds %Expression, ptr %67, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i44, align 4
  %memberidx1.i.i45 = getelementptr inbounds %Expression, ptr %67, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i45, align 1
  %memberidx.i46 = getelementptr inbounds %TernaryExpression, ptr %67, i64 0, i32 4
  store ptr %common.ret.op.i61, ptr %memberidx.i46, align 8
  %memberidx1.i47 = getelementptr inbounds %TernaryExpression, ptr %67, i64 0, i32 5
  store ptr %19, ptr %memberidx1.i47, align 8
  %memberidx2.i48 = getelementptr inbounds %TernaryExpression, ptr %67, i64 0, i32 6
  store ptr %26, ptr %memberidx2.i48, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %67, i64 0, i32 3
  %68 = load ptr, ptr %memberidx5, align 8
  store ptr %68, ptr %memberidx3.i, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load i64, ptr %1, align 4
  switch i64 %3, label %ifend71 [
    i64 16, label %if.entry
    i64 13, label %if.entry11
    i64 11, label %if.entry16
    i64 12, label %if.entry22
    i64 14, label %if.entry29
    i64 15, label %if.entry35
    i64 20, label %if.entry52
    i64 18, label %if.entry65
    i64 17, label %if.entry69
  ]

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 0)
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 2
  %memberidx = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx2177 = getelementptr inbounds %Array_Type_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2177, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %for.body, label %for.end

for.body:                                         ; preds = %if.entry, %ifend8
  %9 = phi ptr [ %65, %ifend8 ], [ %4, %if.entry ]
  %10 = phi i64 [ %66, %ifend8 ], [ 0, %if.entry ]
  %11 = phi ptr [ %67, %ifend8 ], [ %4, %if.entry ]
  %12 = phi i64 [ %68, %ifend8 ], [ 0, %if.entry ]
  %13 = phi i64 [ %69, %ifend8 ], [ 0, %if.entry ]
  %14 = phi ptr [ %64, %ifend8 ], [ %6, %if.entry ]
  %i.0178 = phi i64 [ %70, %ifend8 ], [ 0, %if.entry ]
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %i.0178
  %17 = load ptr, ptr %16, align 8
  %18 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %17)
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = add nuw i64 %13, %20
  %22 = icmp slt i64 %12, %21
  br i1 %22, label %if.entry.i.i.i, label %String___adda__.exit

if.entry.i.i.i:                                   ; preds = %for.body
  %23 = tail call ptr @realloc(ptr %11, i64 %21)
  store ptr %23, ptr %5, align 8
  store i64 %21, ptr %memberidx2.i.i, align 4
  %.pre188 = load i64, ptr %memberidx1.i.i, align 4
  %.pre192 = add nuw i64 %.pre188, %20
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %for.body, %if.entry.i.i.i
  %.pre-phi = phi i64 [ %21, %for.body ], [ %.pre192, %if.entry.i.i.i ]
  %24 = phi ptr [ %9, %for.body ], [ %23, %if.entry.i.i.i ]
  %25 = phi i64 [ %10, %for.body ], [ %21, %if.entry.i.i.i ]
  %26 = phi i64 [ %13, %for.body ], [ %.pre188, %if.entry.i.i.i ]
  %27 = phi ptr [ %11, %for.body ], [ %23, %if.entry.i.i.i ]
  %28 = phi i64 [ %12, %for.body ], [ %21, %if.entry.i.i.i ]
  %29 = getelementptr inbounds i8, ptr %27, i64 %26
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %29, ptr align 8 %19, i64 %20, i1 false)
  store i64 %.pre-phi, ptr %memberidx1.i.i, align 4
  %30 = load ptr, ptr %memberidx, align 8
  %memberidx5 = getelementptr inbounds %Array_Type_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx5, align 4
  %32 = add i64 %31, -1
  %33 = icmp slt i64 %i.0178, %32
  br i1 %33, label %if.entry6, label %ifend8

common.ret:                                       ; preds = %ifend71, %if.entry69, %if.entry65, %for.end60, %for.end42, %if.entry29, %if.entry22, %if.entry16, %if.entry11, %for.end
  %common.ret.op = phi ptr [ %52, %for.end ], [ %84, %if.entry11 ], [ %97, %if.entry16 ], [ %110, %if.entry22 ], [ %124, %if.entry29 ], [ %164, %for.end42 ], [ %229, %for.end60 ], [ %231, %if.entry65 ], [ %233, %if.entry69 ], [ %234, %ifend71 ]
  ret ptr %common.ret.op

for.end:                                          ; preds = %ifend8, %if.entry
  %34 = phi ptr [ %4, %if.entry ], [ %65, %ifend8 ]
  %35 = phi i64 [ 0, %if.entry ], [ %69, %ifend8 ]
  %36 = trunc i64 %35 to i32
  %37 = add i32 %36, 1
  %38 = tail call ptr @malloc(i32 %37)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %38, ptr align 8 %34, i64 %35, i1 false)
  %39 = getelementptr inbounds i8, ptr %38, i64 %35
  store i8 0, ptr %39, align 1
  %memberidx9 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 2
  %40 = load ptr, ptr %memberidx9, align 8
  %41 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %40)
  %memberidx.i119 = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i119, align 4
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, 1
  %45 = tail call ptr @malloc(i32 %44)
  %46 = load ptr, ptr %41, align 8
  %47 = load i64, ptr %memberidx.i119, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %45, ptr align 8 %46, i64 %47, i1 false)
  %48 = getelementptr inbounds i8, ptr %45, i64 %47
  store i8 0, ptr %48, align 1
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @81, ptr %38, ptr %45)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 %50, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i, align 4
  tail call void @free(ptr %38)
  tail call void @free(ptr %45)
  br label %common.ret

if.entry6:                                        ; preds = %String___adda__.exit
  %53 = tail call ptr @malloc(i32 2)
  store i16 8236, ptr %53, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i.i120 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i120, align 4
  %memberidx2.i.i121 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i121, align 4
  %55 = add nuw i64 %.pre-phi, 2
  %56 = icmp slt i64 %25, %55
  br i1 %56, label %if.entry.i.i.i125, label %String___adda__.exit126

if.entry.i.i.i125:                                ; preds = %if.entry6
  %57 = tail call ptr @realloc(ptr %27, i64 %55)
  store ptr %57, ptr %5, align 8
  store i64 %55, ptr %memberidx2.i.i, align 4
  %.pre189 = load i64, ptr %memberidx1.i.i, align 4
  %.pre193 = add nuw i64 %.pre189, 2
  br label %String___adda__.exit126

String___adda__.exit126:                          ; preds = %if.entry6, %if.entry.i.i.i125
  %.pre-phi194 = phi i64 [ %55, %if.entry6 ], [ %.pre193, %if.entry.i.i.i125 ]
  %58 = phi i64 [ %.pre-phi, %if.entry6 ], [ %.pre189, %if.entry.i.i.i125 ]
  %59 = phi ptr [ %24, %if.entry6 ], [ %57, %if.entry.i.i.i125 ]
  %60 = phi i64 [ %25, %if.entry6 ], [ %55, %if.entry.i.i.i125 ]
  %61 = getelementptr inbounds i8, ptr %59, i64 %58
  %62 = load i16, ptr %53, align 8
  store i16 %62, ptr %61, align 2147483648
  store i64 %.pre-phi194, ptr %memberidx1.i.i, align 4
  %.pre190 = load ptr, ptr %memberidx, align 8
  %memberidx2.phi.trans.insert = getelementptr inbounds %Array_Type_, ptr %.pre190, i64 0, i32 1
  %.pre191 = load i64, ptr %memberidx2.phi.trans.insert, align 4
  br label %ifend8

ifend8:                                           ; preds = %String___adda__.exit, %String___adda__.exit126
  %63 = phi i64 [ %31, %String___adda__.exit ], [ %.pre191, %String___adda__.exit126 ]
  %64 = phi ptr [ %30, %String___adda__.exit ], [ %.pre190, %String___adda__.exit126 ]
  %65 = phi ptr [ %24, %String___adda__.exit ], [ %59, %String___adda__.exit126 ]
  %66 = phi i64 [ %25, %String___adda__.exit ], [ %60, %String___adda__.exit126 ]
  %67 = phi ptr [ %27, %String___adda__.exit ], [ %59, %String___adda__.exit126 ]
  %68 = phi i64 [ %28, %String___adda__.exit ], [ %60, %String___adda__.exit126 ]
  %69 = phi i64 [ %.pre-phi, %String___adda__.exit ], [ %.pre-phi194, %String___adda__.exit126 ]
  %70 = add nuw nsw i64 %i.0178, 1
  %71 = icmp slt i64 %70, %63
  br i1 %71, label %for.body, label %for.end

if.entry11:                                       ; preds = %2
  %memberidx14 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %72 = load ptr, ptr %memberidx14, align 8
  %73 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %72)
  %memberidx.i129 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i129, align 4
  %75 = trunc i64 %74 to i32
  %76 = add i32 %75, 1
  %77 = tail call ptr @malloc(i32 %76)
  %78 = load ptr, ptr %73, align 8
  %79 = load i64, ptr %memberidx.i129, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %77, ptr align 8 %78, i64 %79, i1 false)
  %80 = getelementptr inbounds i8, ptr %77, i64 %79
  store i8 0, ptr %80, align 1
  %81 = alloca ptr, align 8
  %82 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %81, ptr nonnull @82, ptr %77)
  %83 = load ptr, ptr %81, align 8
  %84 = tail call ptr @malloc(i32 24)
  store ptr %83, ptr %84, align 8
  %memberidx1.i130 = getelementptr inbounds %String, ptr %84, i64 0, i32 1
  store i64 %82, ptr %memberidx1.i130, align 4
  %memberidx2.i131 = getelementptr inbounds %String, ptr %84, i64 0, i32 2
  store i64 %82, ptr %memberidx2.i131, align 4
  tail call void @free(ptr %77)
  br label %common.ret

if.entry16:                                       ; preds = %2
  %85 = load ptr, ptr %0, align 8
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %1, i64 0, i32 1
  %86 = load ptr, ptr %memberidx6.i, align 8
  %87 = load ptr, ptr %85, align 8
  %88 = load i64, ptr %86, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx2.i.i176 = getelementptr inbounds %Module, ptr %91, i64 0, i32 3
  %92 = load ptr, ptr %memberidx2.i.i176, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %86, i64 0, i32 2
  %93 = load i64, ptr %memberidx3.i.i, align 4
  %94 = load ptr, ptr %92, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  %memberidx20 = getelementptr inbounds %Class, ptr %96, i64 0, i32 1
  %97 = load ptr, ptr %memberidx20, align 8
  br label %common.ret

if.entry22:                                       ; preds = %2
  %98 = load ptr, ptr %0, align 8
  %memberidx26 = getelementptr inbounds %EnumType, ptr %1, i64 0, i32 1
  %99 = load ptr, ptr %memberidx26, align 8
  %100 = load ptr, ptr %98, align 8
  %101 = load i64, ptr %99, align 4
  %102 = load ptr, ptr %100, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8
  %memberidx2.i132 = getelementptr inbounds %Module, ptr %104, i64 0, i32 6
  %105 = load ptr, ptr %memberidx2.i132, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %99, i64 0, i32 2
  %106 = load i64, ptr %memberidx3.i, align 4
  %107 = load ptr, ptr %105, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %106
  %109 = load ptr, ptr %108, align 8
  %memberidx27 = getelementptr inbounds %Enum, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx27, align 8
  br label %common.ret

if.entry29:                                       ; preds = %2
  %memberidx32 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %111 = load ptr, ptr %memberidx32, align 8
  %112 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %111)
  %memberidx.i137 = getelementptr inbounds %String, ptr %112, i64 0, i32 1
  %113 = load i64, ptr %memberidx.i137, align 4
  %114 = trunc i64 %113 to i32
  %115 = add i32 %114, 1
  %116 = tail call ptr @malloc(i32 %115)
  %117 = load ptr, ptr %112, align 8
  %118 = load i64, ptr %memberidx.i137, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %116, ptr align 8 %117, i64 %118, i1 false)
  %119 = getelementptr inbounds i8, ptr %116, i64 %118
  store i8 0, ptr %119, align 1
  %memberidx33 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %120 = load i64, ptr %memberidx33, align 4
  %121 = alloca ptr, align 8
  %122 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %121, ptr nonnull @83, ptr %116, i64 %120)
  %123 = load ptr, ptr %121, align 8
  %124 = tail call ptr @malloc(i32 24)
  store ptr %123, ptr %124, align 8
  %memberidx1.i138 = getelementptr inbounds %String, ptr %124, i64 0, i32 1
  store i64 %122, ptr %memberidx1.i138, align 4
  %memberidx2.i139 = getelementptr inbounds %String, ptr %124, i64 0, i32 2
  store i64 %122, ptr %memberidx2.i139, align 4
  tail call void @free(ptr %116)
  br label %common.ret

if.entry35:                                       ; preds = %2
  %125 = tail call ptr @malloc(i32 0)
  %126 = tail call ptr @malloc(i32 24)
  store ptr %125, ptr %126, align 8
  %memberidx1.i.i140 = getelementptr inbounds %String, ptr %126, i64 0, i32 1
  %memberidx2.i.i141 = getelementptr inbounds %String, ptr %126, i64 0, i32 2
  %memberidx43 = getelementptr inbounds %TupleType, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i140, i8 0, i64 16, i1 false)
  %127 = load ptr, ptr %memberidx43, align 8
  %memberidx44180 = getelementptr inbounds %Array_Type_, ptr %127, i64 0, i32 1
  %128 = load i64, ptr %memberidx44180, align 4
  %129 = icmp sgt i64 %128, 0
  br i1 %129, label %for.body40, label %for.end42

for.body40:                                       ; preds = %if.entry35, %ifend50
  %130 = phi ptr [ %177, %ifend50 ], [ %125, %if.entry35 ]
  %131 = phi i64 [ %178, %ifend50 ], [ 0, %if.entry35 ]
  %132 = phi ptr [ %179, %ifend50 ], [ %125, %if.entry35 ]
  %133 = phi i64 [ %180, %ifend50 ], [ 0, %if.entry35 ]
  %134 = phi i64 [ %181, %ifend50 ], [ 0, %if.entry35 ]
  %135 = phi ptr [ %176, %ifend50 ], [ %127, %if.entry35 ]
  %i1.0181 = phi i64 [ %182, %ifend50 ], [ 0, %if.entry35 ]
  %136 = load ptr, ptr %135, align 8
  %137 = getelementptr inbounds ptr, ptr %136, i64 %i1.0181
  %138 = load ptr, ptr %137, align 8
  %139 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %138)
  %140 = load ptr, ptr %139, align 8
  %memberidx.i144 = getelementptr inbounds %String, ptr %139, i64 0, i32 1
  %141 = load i64, ptr %memberidx.i144, align 4
  %142 = add nuw i64 %134, %141
  %143 = icmp slt i64 %133, %142
  br i1 %143, label %if.entry.i.i.i147, label %String___adda__.exit148

if.entry.i.i.i147:                                ; preds = %for.body40
  %144 = tail call ptr @realloc(ptr %132, i64 %142)
  store ptr %144, ptr %126, align 8
  store i64 %142, ptr %memberidx2.i.i141, align 4
  %.pre184 = load i64, ptr %memberidx1.i.i140, align 4
  %.pre195 = add nuw i64 %.pre184, %141
  br label %String___adda__.exit148

String___adda__.exit148:                          ; preds = %for.body40, %if.entry.i.i.i147
  %.pre-phi196 = phi i64 [ %142, %for.body40 ], [ %.pre195, %if.entry.i.i.i147 ]
  %145 = phi ptr [ %130, %for.body40 ], [ %144, %if.entry.i.i.i147 ]
  %146 = phi i64 [ %131, %for.body40 ], [ %142, %if.entry.i.i.i147 ]
  %147 = phi i64 [ %134, %for.body40 ], [ %.pre184, %if.entry.i.i.i147 ]
  %148 = phi ptr [ %132, %for.body40 ], [ %144, %if.entry.i.i.i147 ]
  %149 = phi i64 [ %133, %for.body40 ], [ %142, %if.entry.i.i.i147 ]
  %150 = getelementptr inbounds i8, ptr %148, i64 %147
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %150, ptr align 8 %140, i64 %141, i1 false)
  store i64 %.pre-phi196, ptr %memberidx1.i.i140, align 4
  %151 = load ptr, ptr %memberidx43, align 8
  %memberidx47 = getelementptr inbounds %Array_Type_, ptr %151, i64 0, i32 1
  %152 = load i64, ptr %memberidx47, align 4
  %153 = add i64 %152, -1
  %154 = icmp slt i64 %i1.0181, %153
  br i1 %154, label %if.entry48, label %ifend50

for.end42:                                        ; preds = %ifend50, %if.entry35
  %155 = phi ptr [ %125, %if.entry35 ], [ %177, %ifend50 ]
  %156 = phi i64 [ 0, %if.entry35 ], [ %181, %ifend50 ]
  %157 = trunc i64 %156 to i32
  %158 = add i32 %157, 1
  %159 = tail call ptr @malloc(i32 %158)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %159, ptr align 8 %155, i64 %156, i1 false)
  %160 = getelementptr inbounds i8, ptr %159, i64 %156
  store i8 0, ptr %160, align 1
  %161 = alloca ptr, align 8
  %162 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %161, ptr nonnull @84, ptr %159)
  %163 = load ptr, ptr %161, align 8
  %164 = tail call ptr @malloc(i32 24)
  store ptr %163, ptr %164, align 8
  %memberidx1.i150 = getelementptr inbounds %String, ptr %164, i64 0, i32 1
  store i64 %162, ptr %memberidx1.i150, align 4
  %memberidx2.i151 = getelementptr inbounds %String, ptr %164, i64 0, i32 2
  store i64 %162, ptr %memberidx2.i151, align 4
  tail call void @free(ptr %159)
  br label %common.ret

if.entry48:                                       ; preds = %String___adda__.exit148
  %165 = tail call ptr @malloc(i32 2)
  store i16 8236, ptr %165, align 8
  %166 = tail call ptr @malloc(i32 24)
  store ptr %165, ptr %166, align 8
  %memberidx1.i.i152 = getelementptr inbounds %String, ptr %166, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i152, align 4
  %memberidx2.i.i153 = getelementptr inbounds %String, ptr %166, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i153, align 4
  %167 = add nuw i64 %.pre-phi196, 2
  %168 = icmp slt i64 %146, %167
  br i1 %168, label %if.entry.i.i.i157, label %String___adda__.exit158

if.entry.i.i.i157:                                ; preds = %if.entry48
  %169 = tail call ptr @realloc(ptr %148, i64 %167)
  store ptr %169, ptr %126, align 8
  store i64 %167, ptr %memberidx2.i.i141, align 4
  %.pre185 = load i64, ptr %memberidx1.i.i140, align 4
  %.pre197 = add nuw i64 %.pre185, 2
  br label %String___adda__.exit158

String___adda__.exit158:                          ; preds = %if.entry48, %if.entry.i.i.i157
  %.pre-phi198 = phi i64 [ %167, %if.entry48 ], [ %.pre197, %if.entry.i.i.i157 ]
  %170 = phi i64 [ %.pre-phi196, %if.entry48 ], [ %.pre185, %if.entry.i.i.i157 ]
  %171 = phi ptr [ %145, %if.entry48 ], [ %169, %if.entry.i.i.i157 ]
  %172 = phi i64 [ %146, %if.entry48 ], [ %167, %if.entry.i.i.i157 ]
  %173 = getelementptr inbounds i8, ptr %171, i64 %170
  %174 = load i16, ptr %165, align 8
  store i16 %174, ptr %173, align 2147483648
  store i64 %.pre-phi198, ptr %memberidx1.i.i140, align 4
  %.pre186 = load ptr, ptr %memberidx43, align 8
  %memberidx44.phi.trans.insert = getelementptr inbounds %Array_Type_, ptr %.pre186, i64 0, i32 1
  %.pre187 = load i64, ptr %memberidx44.phi.trans.insert, align 4
  br label %ifend50

ifend50:                                          ; preds = %String___adda__.exit148, %String___adda__.exit158
  %175 = phi i64 [ %152, %String___adda__.exit148 ], [ %.pre187, %String___adda__.exit158 ]
  %176 = phi ptr [ %151, %String___adda__.exit148 ], [ %.pre186, %String___adda__.exit158 ]
  %177 = phi ptr [ %145, %String___adda__.exit148 ], [ %171, %String___adda__.exit158 ]
  %178 = phi i64 [ %146, %String___adda__.exit148 ], [ %172, %String___adda__.exit158 ]
  %179 = phi ptr [ %148, %String___adda__.exit148 ], [ %171, %String___adda__.exit158 ]
  %180 = phi i64 [ %149, %String___adda__.exit148 ], [ %172, %String___adda__.exit158 ]
  %181 = phi i64 [ %.pre-phi196, %String___adda__.exit148 ], [ %.pre-phi198, %String___adda__.exit158 ]
  %182 = add nuw nsw i64 %i1.0181, 1
  %183 = icmp slt i64 %182, %175
  br i1 %183, label %for.body40, label %for.end42

if.entry52:                                       ; preds = %2
  %memberidx55 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %184 = load ptr, ptr %memberidx55, align 8
  %185 = tail call ptr @malloc(i32 1)
  store i8 60, ptr %185, align 8
  %186 = tail call ptr @malloc(i32 24)
  store ptr %185, ptr %186, align 8
  %memberidx1.i.i159 = getelementptr inbounds %String, ptr %186, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i159, align 4
  %memberidx2.i.i160 = getelementptr inbounds %String, ptr %186, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i160, align 4
  %memberidx.i161 = getelementptr inbounds %String, ptr %184, i64 0, i32 1
  %187 = load i64, ptr %memberidx.i161, align 4
  %188 = add nuw i64 %187, 1
  %189 = trunc i64 %188 to i32
  %190 = tail call ptr @malloc(i32 %189)
  %191 = load ptr, ptr %184, align 8
  %192 = load i64, ptr %memberidx.i161, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %190, ptr align 8 %191, i64 %192, i1 false)
  %193 = getelementptr inbounds i8, ptr %190, i64 %192
  %194 = load i8, ptr %185, align 8
  store i8 %194, ptr %193, align 8
  %195 = tail call ptr @malloc(i32 24)
  store ptr %190, ptr %195, align 8
  %memberidx1.i.i163 = getelementptr inbounds %String, ptr %195, i64 0, i32 1
  store i64 %188, ptr %memberidx1.i.i163, align 4
  %memberidx2.i.i164 = getelementptr inbounds %String, ptr %195, i64 0, i32 2
  store i64 %188, ptr %memberidx2.i.i164, align 4
  %memberidx61 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %196 = load ptr, ptr %memberidx61, align 8
  %memberidx62182 = getelementptr inbounds %Array_Type_, ptr %196, i64 0, i32 1
  %197 = load i64, ptr %memberidx62182, align 4
  %198 = icmp sgt i64 %197, 0
  br i1 %198, label %for.body58, label %for.end60

for.body58:                                       ; preds = %if.entry52, %String___adda__.exit169
  %199 = phi ptr [ %213, %String___adda__.exit169 ], [ %190, %if.entry52 ]
  %200 = phi i64 [ %214, %String___adda__.exit169 ], [ %188, %if.entry52 ]
  %201 = phi i64 [ %.pre-phi200, %String___adda__.exit169 ], [ %188, %if.entry52 ]
  %202 = phi ptr [ %217, %String___adda__.exit169 ], [ %196, %if.entry52 ]
  %x.0183 = phi i64 [ %216, %String___adda__.exit169 ], [ 0, %if.entry52 ]
  %203 = load ptr, ptr %202, align 8
  %204 = getelementptr inbounds ptr, ptr %203, i64 %x.0183
  %205 = load ptr, ptr %204, align 8
  %206 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %205)
  %207 = load ptr, ptr %206, align 8
  %memberidx.i165 = getelementptr inbounds %String, ptr %206, i64 0, i32 1
  %208 = load i64, ptr %memberidx.i165, align 4
  %209 = add nuw i64 %201, %208
  %210 = icmp slt i64 %200, %209
  br i1 %210, label %if.entry.i.i.i168, label %String___adda__.exit169

if.entry.i.i.i168:                                ; preds = %for.body58
  %211 = tail call ptr @realloc(ptr %199, i64 %209)
  store ptr %211, ptr %195, align 8
  store i64 %209, ptr %memberidx2.i.i164, align 4
  %.pre = load i64, ptr %memberidx1.i.i163, align 4
  %.pre199 = add nuw i64 %.pre, %208
  br label %String___adda__.exit169

String___adda__.exit169:                          ; preds = %for.body58, %if.entry.i.i.i168
  %.pre-phi200 = phi i64 [ %209, %for.body58 ], [ %.pre199, %if.entry.i.i.i168 ]
  %212 = phi i64 [ %201, %for.body58 ], [ %.pre, %if.entry.i.i.i168 ]
  %213 = phi ptr [ %199, %for.body58 ], [ %211, %if.entry.i.i.i168 ]
  %214 = phi i64 [ %200, %for.body58 ], [ %209, %if.entry.i.i.i168 ]
  %215 = getelementptr inbounds i8, ptr %213, i64 %212
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %215, ptr align 8 %207, i64 %208, i1 false)
  store i64 %.pre-phi200, ptr %memberidx1.i.i163, align 4
  %216 = add nuw nsw i64 %x.0183, 1
  %217 = load ptr, ptr %memberidx61, align 8
  %memberidx62 = getelementptr inbounds %Array_Type_, ptr %217, i64 0, i32 1
  %218 = load i64, ptr %memberidx62, align 4
  %219 = icmp slt i64 %216, %218
  br i1 %219, label %for.body58, label %for.end60

for.end60:                                        ; preds = %String___adda__.exit169, %if.entry52
  %220 = phi ptr [ %190, %if.entry52 ], [ %213, %String___adda__.exit169 ]
  %221 = phi i64 [ %188, %if.entry52 ], [ %.pre-phi200, %String___adda__.exit169 ]
  %222 = tail call ptr @malloc(i32 1)
  store i8 62, ptr %222, align 8
  %223 = tail call ptr @malloc(i32 24)
  store ptr %222, ptr %223, align 8
  %memberidx1.i.i142 = getelementptr inbounds %String, ptr %223, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i142, align 4
  %memberidx2.i.i143 = getelementptr inbounds %String, ptr %223, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i143, align 4
  %224 = add nuw i64 %221, 1
  %225 = trunc i64 %224 to i32
  %226 = tail call ptr @malloc(i32 %225)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %226, ptr align 8 %220, i64 %221, i1 false)
  %227 = getelementptr inbounds i8, ptr %226, i64 %221
  %228 = load i8, ptr %222, align 8
  store i8 %228, ptr %227, align 8
  %229 = tail call ptr @malloc(i32 24)
  store ptr %226, ptr %229, align 8
  %memberidx1.i.i135 = getelementptr inbounds %String, ptr %229, i64 0, i32 1
  store i64 %224, ptr %memberidx1.i.i135, align 4
  %memberidx2.i.i136 = getelementptr inbounds %String, ptr %229, i64 0, i32 2
  store i64 %224, ptr %memberidx2.i.i136, align 4
  br label %common.ret

if.entry65:                                       ; preds = %2
  %230 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %230, ptr noundef nonnull align 8 dereferenceable(9) @85, i64 9, i1 false)
  %231 = tail call ptr @malloc(i32 24)
  store ptr %230, ptr %231, align 8
  %memberidx1.i.i127 = getelementptr inbounds %String, ptr %231, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i127, align 4
  %memberidx2.i.i128 = getelementptr inbounds %String, ptr %231, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i128, align 4
  br label %common.ret

if.entry69:                                       ; preds = %2
  %232 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %232, ptr noundef nonnull align 8 dereferenceable(6) @86, i64 6, i1 false)
  %233 = tail call ptr @malloc(i32 24)
  store ptr %232, ptr %233, align 8
  %memberidx1.i.i117 = getelementptr inbounds %String, ptr %233, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i117, align 4
  %memberidx2.i.i118 = getelementptr inbounds %String, ptr %233, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i118, align 4
  br label %common.ret

ifend71:                                          ; preds = %2
  %234 = tail call fastcc ptr @dump_type(ptr nonnull %1, i1 false)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_String_Generic_, ptr %4, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = urem i64 %5, %6
  %8 = load ptr, ptr %4, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %7
  %10 = load ptr, ptr %9, align 8
  %.not.i = icmp eq ptr %10, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %3
  %memberidx1.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %11 = phi ptr [ %21, %else.i ], [ %8, %while.entry.i.preheader ]
  %12 = phi i64 [ %22, %else.i ], [ %6, %while.entry.i.preheader ]
  %13 = phi ptr [ %26, %else.i ], [ %10, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %24, %else.i ], [ %7, %while.entry.i.preheader ]
  %14 = load ptr, ptr %13, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i.i, align 4
  %16 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %15, %16
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %17 = load ptr, ptr %14, align 8
  %18 = load ptr, ptr %1, align 8
  %19 = tail call i64 @memcmp(ptr %17, ptr %18, i64 %15)
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre120 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre121.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre121.pre, i64 %hash.0.i
  %.pre122.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre122.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_String_Generic____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %21 = phi ptr [ %.pre120, %ifend.i.i.else.i_crit_edge ], [ %11, %while.entry.i ]
  %22 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %12, %while.entry.i ]
  %23 = add nuw i64 %hash.0.i, 1
  %24 = urem i64 %23, %22
  %25 = getelementptr inbounds ptr, ptr %21, i64 %24
  %26 = load ptr, ptr %25, align 8
  %.not26.i = icmp eq ptr %26, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_String_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_Generic_, ptr %.pre122.pre, i64 0, i32 1
  %27 = load ptr, ptr %memberidx11.i, align 8
  %28 = icmp eq ptr %27, null
  br i1 %28, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %3, %while.end.i, %Map_String_Generic____getitem__.exit, %ifend20, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %165, %ifend20 ], [ null, %Map_String_Generic____getitem__.exit ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_Generic____getitem__.exit
  %memberidx1 = getelementptr inbounds %Generic, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ClassDeclarationNode, ptr %29, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_GenericParameterNode_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx3, align 4
  %memberidx4 = getelementptr inbounds %Array_Type_, ptr %2, i64 0, i32 1
  %32 = load i64, ptr %memberidx4, align 4
  %.not = icmp eq i64 %31, %32
  br i1 %.not, label %ifend7, label %if.entry5

if.entry5:                                        ; preds = %ifend
  %33 = alloca ptr, align 8
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %33, ptr nonnull @102, i64 %31, i64 %32)
  %35 = load ptr, ptr %33, align 8
  %36 = tail call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i, align 4
  %memberidx.i79 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %37 = load ptr, ptr %memberidx.i79, align 8
  %memberidx1.i80 = getelementptr inbounds %Compiler, ptr %37, i64 0, i32 5
  %38 = load ptr, ptr %memberidx1.i80, align 8
  %39 = call ptr @malloc(i32 24)
  store i64 5, ptr %39, align 4
  %memberidx1.i.i81 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 2
  store ptr null, ptr %memberidx1.i.i81, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %39, i64 0, i32 1
  store ptr %36, ptr %memberidx2.i.i, align 8
  %memberidx.i.i82 = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 1
  %40 = load i64, ptr %memberidx.i.i82, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 2
  %41 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i83 = icmp slt i64 %40, %41
  br i1 %.not.i.i83, label %if.entry5.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry5.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry5
  %.pre124 = load ptr, ptr %38, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry5
  %42 = shl nuw i64 %41, 1
  store i64 %42, ptr %memberidx1.i2.i, align 4
  %43 = load ptr, ptr %38, align 8
  %44 = shl i64 %41, 4
  %45 = call ptr @realloc(ptr %43, i64 %44)
  store ptr %45, ptr %38, align 8
  %.pre123 = load i64, ptr %memberidx.i.i82, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry5.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %46 = phi ptr [ %.pre124, %if.entry5.TypeChecker_error.exit_crit_edge ], [ %45, %if.entry.i.i ]
  %47 = phi i64 [ %40, %if.entry5.TypeChecker_error.exit_crit_edge ], [ %.pre123, %if.entry.i.i ]
  %48 = add nsw i64 %47, 1
  store i64 %48, ptr %memberidx.i.i82, align 4
  %49 = getelementptr inbounds ptr, ptr %46, i64 %47
  store ptr %39, ptr %49, align 8
  br label %common.ret

ifend7:                                           ; preds = %ifend
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %50 = load ptr, ptr %memberidx10, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = load ptr, ptr %51, align 8
  %53 = load ptr, ptr %52, align 8
  %54 = load ptr, ptr %53, align 8
  %memberidx1.i85 = getelementptr inbounds %Module, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx1.i85, align 8
  store ptr %55, ptr %memberidx10, align 8
  %56 = load i64, ptr %55, align 4
  %57 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %56)
  %memberidx2.i87 = getelementptr inbounds %Scope, ptr %57, i64 0, i32 5
  %58 = load ptr, ptr %memberidx10, align 8
  store ptr %58, ptr %memberidx2.i87, align 8
  %59 = load ptr, ptr %0, align 8
  %60 = load ptr, ptr %memberidx10, align 8
  %61 = load ptr, ptr %59, align 8
  %62 = load i64, ptr %60, align 4
  %63 = load ptr, ptr %61, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %65, i64 0, i32 7
  %66 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %60, i64 0, i32 1
  %67 = load i64, ptr %memberidx3.i.i.i, align 4
  %68 = load ptr, ptr %66, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %70, i64 0, i32 7
  %71 = load ptr, ptr %memberidx4.i, align 8
  %72 = load ptr, ptr %57, align 8
  %memberidx.i.i89 = getelementptr inbounds %Array_ScopeId_, ptr %71, i64 0, i32 1
  %73 = load i64, ptr %memberidx.i.i89, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %71, i64 0, i32 2
  %74 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i90 = icmp slt i64 %73, %74
  br i1 %.not.i.i90, label %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i92

ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %ifend7
  %.pre126 = load ptr, ptr %71, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i92:                                   ; preds = %ifend7
  %75 = shl nuw i64 %74, 1
  store i64 %75, ptr %memberidx1.i11.i, align 4
  %76 = load ptr, ptr %71, align 8
  %77 = shl i64 %74, 4
  %78 = tail call ptr @realloc(ptr %76, i64 %77)
  store ptr %78, ptr %71, align 8
  %.pre125 = load i64, ptr %memberidx.i.i89, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i92
  %79 = phi ptr [ %.pre126, %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %78, %if.entry.i.i92 ]
  %80 = phi i64 [ %73, %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre125, %if.entry.i.i92 ]
  %81 = add nsw i64 %80, 1
  store i64 %81, ptr %memberidx.i.i89, align 4
  %82 = getelementptr inbounds ptr, ptr %79, i64 %80
  store ptr %72, ptr %82, align 8
  %83 = tail call ptr @malloc(i32 0)
  %84 = tail call ptr @malloc(i32 24)
  store ptr %83, ptr %84, align 8
  %memberidx1.i.i93 = getelementptr inbounds %String, ptr %84, i64 0, i32 1
  %memberidx2.i.i94 = getelementptr inbounds %String, ptr %84, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i93, i8 0, i64 16, i1 false)
  %85 = load i64, ptr %memberidx3, align 4
  %86 = icmp sgt i64 %85, 0
  br i1 %86, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx16 = getelementptr inbounds %Scope, ptr %57, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %String___adda__.exit
  %87 = phi ptr [ %83, %for.body.lr.ph ], [ %136, %String___adda__.exit ]
  %88 = phi i64 [ 0, %for.body.lr.ph ], [ %137, %String___adda__.exit ]
  %89 = phi i64 [ 0, %for.body.lr.ph ], [ %.pre-phi, %String___adda__.exit ]
  %i.0119 = phi i64 [ 0, %for.body.lr.ph ], [ %143, %String___adda__.exit ]
  %90 = load ptr, ptr %30, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %i.0119
  %92 = load ptr, ptr %91, align 8
  %93 = load ptr, ptr %92, align 8
  %memberidx13 = getelementptr inbounds %IdentifierToken, ptr %93, i64 0, i32 2
  %94 = load ptr, ptr %memberidx13, align 8
  %95 = load ptr, ptr %2, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %i.0119
  %97 = load ptr, ptr %96, align 8
  %98 = load i64, ptr %97, align 4
  %99 = icmp eq i64 %98, 20
  %memberidx15 = getelementptr inbounds %GenericType, ptr %97, i64 0, i32 3
  %spec.select = select i1 %99, ptr %memberidx15, ptr %96
  %ternary = load ptr, ptr %spec.select, align 8
  %100 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %ternary)
  %memberidx.i99 = getelementptr inbounds %String, ptr %100, i64 0, i32 1
  %101 = load i64, ptr %memberidx.i99, align 4
  %102 = trunc i64 %101 to i32
  %103 = add i32 %102, 1
  %104 = call ptr @malloc(i32 %103)
  %105 = load ptr, ptr %100, align 8
  %106 = load i64, ptr %memberidx.i99, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %104, ptr align 8 %105, i64 %106, i1 false)
  %107 = getelementptr inbounds i8, ptr %104, i64 %106
  store i8 0, ptr %107, align 1
  %108 = alloca ptr, align 8
  %109 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %108, ptr nonnull @103, ptr %104)
  %110 = load ptr, ptr %108, align 8
  %111 = tail call ptr @malloc(i32 24)
  store ptr %110, ptr %111, align 8
  %memberidx1.i100 = getelementptr inbounds %String, ptr %111, i64 0, i32 1
  store i64 %109, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %String, ptr %111, i64 0, i32 2
  store i64 %109, ptr %memberidx2.i101, align 4
  tail call void @free(ptr %104)
  %112 = add nuw i64 %89, %109
  %113 = icmp slt i64 %88, %112
  br i1 %113, label %if.entry.i.i.i, label %String___adda__.exit

for.end:                                          ; preds = %String___adda__.exit, %TypeChecker_create_child_scope_within_current_scope.exit
  %114 = phi ptr [ %83, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %136, %String___adda__.exit ]
  %115 = phi i64 [ 0, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %.pre-phi, %String___adda__.exit ]
  %memberidx.i95 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %116 = load i64, ptr %memberidx.i95, align 4
  %117 = trunc i64 %116 to i32
  %118 = add i32 %117, 1
  %119 = call ptr @malloc(i32 %118)
  %120 = load ptr, ptr %1, align 8
  %121 = load i64, ptr %memberidx.i95, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %119, ptr align 8 %120, i64 %121, i1 false)
  %122 = getelementptr inbounds i8, ptr %119, i64 %121
  store i8 0, ptr %122, align 1
  %123 = trunc i64 %115 to i32
  %124 = add i32 %123, 1
  %125 = call ptr @malloc(i32 %124)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %125, ptr align 8 %114, i64 %115, i1 false)
  %126 = getelementptr inbounds i8, ptr %125, i64 %115
  store i8 0, ptr %126, align 1
  %127 = alloca ptr, align 8
  %128 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %127, ptr nonnull @104, ptr %119, ptr %125)
  %129 = load ptr, ptr %127, align 8
  %130 = tail call ptr @malloc(i32 24)
  store ptr %129, ptr %130, align 8
  %memberidx1.i97 = getelementptr inbounds %String, ptr %130, i64 0, i32 1
  store i64 %128, ptr %memberidx1.i97, align 4
  %memberidx2.i98 = getelementptr inbounds %String, ptr %130, i64 0, i32 2
  store i64 %128, ptr %memberidx2.i98, align 4
  tail call void @free(ptr %119)
  tail call void @free(ptr %125)
  %131 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %130)
  %132 = load i64, ptr %131, align 4
  %133 = icmp eq i64 %132, 21
  br i1 %133, label %if.entry18, label %ifend20

if.entry.i.i.i:                                   ; preds = %for.body
  %134 = call ptr @realloc(ptr %87, i64 %112)
  store ptr %134, ptr %84, align 8
  store i64 %112, ptr %memberidx2.i.i94, align 4
  %.pre127 = load i64, ptr %memberidx1.i.i93, align 4
  %.pre130 = add nuw i64 %.pre127, %109
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %for.body, %if.entry.i.i.i
  %.pre-phi = phi i64 [ %112, %for.body ], [ %.pre130, %if.entry.i.i.i ]
  %135 = phi i64 [ %89, %for.body ], [ %.pre127, %if.entry.i.i.i ]
  %136 = phi ptr [ %87, %for.body ], [ %134, %if.entry.i.i.i ]
  %137 = phi i64 [ %88, %for.body ], [ %112, %if.entry.i.i.i ]
  %138 = getelementptr inbounds i8, ptr %136, i64 %135
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %138, ptr align 8 %110, i64 %109, i1 false)
  store i64 %.pre-phi, ptr %memberidx1.i.i93, align 4
  %139 = load ptr, ptr %memberidx16, align 8
  %140 = load ptr, ptr %2, align 8
  %141 = getelementptr inbounds ptr, ptr %140, i64 %i.0119
  %142 = load ptr, ptr %141, align 8
  call fastcc void @Map_String_Type____setitem__(ptr %139, ptr %94, ptr %142)
  %143 = add nuw nsw i64 %i.0119, 1
  %144 = load i64, ptr %memberidx3, align 4
  %145 = icmp slt i64 %143, %144
  br i1 %145, label %for.body, label %for.end

if.entry18:                                       ; preds = %for.end
  %146 = alloca %IdentifierToken, align 8
  %147 = load ptr, ptr %memberidx1, align 8
  %148 = load ptr, ptr %147, align 8
  %memberidx23 = getelementptr inbounds %Token, ptr %148, i64 0, i32 1
  %149 = load ptr, ptr %memberidx23, align 8
  store i64 53, ptr %146, align 8
  %memberidx1.i.i105 = getelementptr inbounds %Token, ptr %146, i64 0, i32 1
  store ptr %149, ptr %memberidx1.i.i105, align 8
  %memberidx.i106 = getelementptr inbounds %IdentifierToken, ptr %146, i64 0, i32 2
  store ptr %130, ptr %memberidx.i106, align 8
  %150 = alloca %ClassDeclarationNode, align 8
  store ptr %146, ptr %150, align 8
  %memberidx1.i107 = getelementptr inbounds %ClassDeclarationNode, ptr %150, i64 0, i32 3
  %151 = call ptr @malloc(i32 24)
  %memberidx.i.i108 = getelementptr inbounds %Array_FieldNode_, ptr %151, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i108, align 4
  %memberidx1.i.i109 = getelementptr inbounds %Array_FieldNode_, ptr %151, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i109, align 4
  %152 = call ptr @malloc(i32 64)
  store ptr %152, ptr %151, align 8
  store i64 0, ptr %memberidx.i.i108, align 4
  %memberidx4.i110 = getelementptr inbounds %ClassDeclarationNode, ptr %150, i64 0, i32 4
  %153 = call ptr @malloc(i32 24)
  %memberidx.i15.i = getelementptr inbounds %Array_MethodNode_, ptr %153, i64 0, i32 1
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx1.i16.i = getelementptr inbounds %Array_MethodNode_, ptr %153, i64 0, i32 2
  store i64 8, ptr %memberidx1.i16.i, align 4
  %154 = call ptr @malloc(i32 64)
  store ptr %154, ptr %153, align 8
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx7.i = getelementptr inbounds %ClassDeclarationNode, ptr %150, i64 0, i32 1
  %155 = call ptr @malloc(i32 24)
  %memberidx.i17.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %155, i64 0, i32 1
  store i64 0, ptr %memberidx.i17.i, align 4
  %memberidx1.i18.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %155, i64 0, i32 2
  store i64 8, ptr %memberidx1.i18.i, align 4
  %156 = call ptr @malloc(i32 64)
  store ptr %156, ptr %155, align 8
  store i64 0, ptr %memberidx.i17.i, align 4
  store ptr %155, ptr %memberidx7.i, align 8
  %memberidx10.i = getelementptr inbounds %ClassDeclarationNode, ptr %150, i64 0, i32 2
  %157 = load ptr, ptr %memberidx1, align 8
  %memberidx26 = getelementptr inbounds %ClassDeclarationNode, ptr %157, i64 0, i32 2
  %158 = load ptr, ptr %memberidx26, align 8
  store ptr %158, ptr %memberidx10.i, align 8
  %159 = load ptr, ptr %memberidx1, align 8
  %memberidx29 = getelementptr inbounds %ClassDeclarationNode, ptr %159, i64 0, i32 3
  %160 = load ptr, ptr %memberidx29, align 8
  store ptr %160, ptr %memberidx1.i107, align 8
  %161 = load ptr, ptr %memberidx1, align 8
  %memberidx32 = getelementptr inbounds %ClassDeclarationNode, ptr %161, i64 0, i32 4
  %162 = load ptr, ptr %memberidx32, align 8
  store ptr %162, ptr %memberidx4.i110, align 8
  %163 = load ptr, ptr %57, align 8
  store ptr %163, ptr %memberidx10, align 8
  call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr nonnull %150)
  call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr nonnull %150)
  %164 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %130)
  br label %ifend20

ifend20:                                          ; preds = %for.end, %if.entry18
  %possible_type.0 = phi ptr [ %164, %if.entry18 ], [ %131, %for.end ]
  store ptr %50, ptr %memberidx10, align 8
  call fastcc void @Scope___del__(ptr nonnull %57)
  tail call void @free(ptr nonnull %57)
  %165 = tail call ptr @malloc(i32 32)
  store i64 20, ptr %165, align 4
  %memberidx.i111 = getelementptr inbounds %GenericType, ptr %165, i64 0, i32 1
  store ptr %1, ptr %memberidx.i111, align 8
  %memberidx1.i112 = getelementptr inbounds %GenericType, ptr %165, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i112, align 8
  %memberidx2.i113 = getelementptr inbounds %GenericType, ptr %165, i64 0, i32 3
  store ptr %possible_type.0, ptr %memberidx2.i113, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_enum_within_module(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 32)
  %memberidx.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 2
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %4, ptr %memberidx.i, align 8
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 2048)
  store ptr %7, ptr %6, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i54 = phi i64 [ 0, %2 ], [ %10, %for.body.i.i ]
  %8 = load ptr, ptr %6, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %i.0.i.i54
  store ptr null, ptr %9, align 8
  %10 = add nuw nsw i64 %i.0.i.i54, 1
  %11 = icmp ult i64 %i.0.i.i54, 255
  br i1 %11, label %for.body.i.i, label %Enum_constructor.exit

Enum_constructor.exit:                            ; preds = %for.body.i.i
  %memberidx3.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 3
  %memberidx2.i.i = getelementptr inbounds %Map_String_PropId_, ptr %6, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_String_PropId_, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %6, ptr %memberidx3.i, align 8
  %12 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx1, align 8
  %14 = load ptr, ptr %0, align 8
  %memberidx.i.i33 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %15 = load ptr, ptr %memberidx.i.i33, align 8
  %16 = load i64, ptr %15, align 4
  %17 = load ptr, ptr %14, align 8
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %16
  %20 = load ptr, ptr %19, align 8
  %memberidx1.i = getelementptr inbounds %Module, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx1.i, align 8
  %22 = load i64, ptr %21, align 4
  %23 = getelementptr inbounds ptr, ptr %18, i64 %22
  %24 = load ptr, ptr %23, align 8
  %memberidx2.i.i34 = getelementptr inbounds %Module, ptr %24, i64 0, i32 7
  %25 = load ptr, ptr %memberidx2.i.i34, align 8
  %memberidx3.i.i35 = getelementptr inbounds %ScopeId, ptr %21, i64 0, i32 1
  %26 = load i64, ptr %memberidx3.i.i35, align 4
  %27 = load ptr, ptr %25, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %26
  %29 = load ptr, ptr %28, align 8
  %memberidx2 = getelementptr inbounds %Enum, ptr %3, i64 0, i32 1
  store ptr %13, ptr %memberidx2, align 8
  %30 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %13)
  %31 = load i64, ptr %30, align 4
  %.not = icmp eq i64 %31, 21
  br i1 %.not, label %ifend, label %if.entry

common.ret:                                       ; preds = %Array_Enum____sl__.exit, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Enum_constructor.exit
  %memberidx.i36 = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  %32 = load i64, ptr %memberidx.i36, align 4
  %33 = trunc i64 %32 to i32
  %34 = add i32 %33, 1
  %35 = tail call ptr @malloc(i32 %34)
  %36 = load ptr, ptr %13, align 8
  %37 = load i64, ptr %memberidx.i36, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %35, ptr align 8 %36, i64 %37, i1 false)
  %38 = getelementptr inbounds i8, ptr %35, i64 %37
  store i8 0, ptr %38, align 1
  %39 = alloca ptr, align 8
  %40 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %39, ptr nonnull @101, ptr %35)
  %41 = load ptr, ptr %39, align 8
  %42 = tail call ptr @malloc(i32 24)
  store ptr %41, ptr %42, align 8
  %memberidx1.i37 = getelementptr inbounds %String, ptr %42, i64 0, i32 1
  store i64 %40, ptr %memberidx1.i37, align 4
  %memberidx2.i38 = getelementptr inbounds %String, ptr %42, i64 0, i32 2
  store i64 %40, ptr %memberidx2.i38, align 4
  tail call void @free(ptr %35)
  %43 = load ptr, ptr %1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %43, i64 0, i32 1
  %44 = load ptr, ptr %memberidx5, align 8
  %memberidx.i39 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %45 = load ptr, ptr %memberidx.i39, align 8
  %memberidx1.i40 = getelementptr inbounds %Compiler, ptr %45, i64 0, i32 5
  %46 = load ptr, ptr %memberidx1.i40, align 8
  %47 = call ptr @malloc(i32 24)
  store i64 1, ptr %47, align 4
  %memberidx1.i.i41 = getelementptr inbounds %FloError, ptr %47, i64 0, i32 2
  store ptr %44, ptr %memberidx1.i.i41, align 8
  %memberidx2.i.i42 = getelementptr inbounds %FloError, ptr %47, i64 0, i32 1
  store ptr %42, ptr %memberidx2.i.i42, align 8
  %memberidx.i.i43 = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 1
  %48 = load i64, ptr %memberidx.i.i43, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 2
  %49 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %48, %49
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre55 = load ptr, ptr %46, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %50 = shl nuw i64 %49, 1
  store i64 %50, ptr %memberidx1.i2.i, align 4
  %51 = load ptr, ptr %46, align 8
  %52 = shl i64 %49, 4
  %53 = call ptr @realloc(ptr %51, i64 %52)
  store ptr %53, ptr %46, align 8
  %.pre = load i64, ptr %memberidx.i.i43, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %54 = phi ptr [ %.pre55, %if.entry.TypeChecker_error.exit_crit_edge ], [ %53, %if.entry.i.i ]
  %55 = phi i64 [ %48, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr %memberidx.i.i43, align 4
  %57 = getelementptr inbounds ptr, ptr %54, i64 %55
  store ptr %47, ptr %57, align 8
  br label %common.ret

ifend:                                            ; preds = %Enum_constructor.exit
  %58 = tail call ptr @malloc(i32 24)
  %59 = load ptr, ptr %memberidx.i.i33, align 8
  %60 = load i64, ptr %59, align 4
  %61 = load ptr, ptr %0, align 8
  %62 = load ptr, ptr %61, align 8
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %60
  %65 = load ptr, ptr %64, align 8
  %memberidx9 = getelementptr inbounds %Module, ptr %65, i64 0, i32 6
  %66 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Enum_, ptr %66, i64 0, i32 1
  %67 = load i64, ptr %memberidx10, align 4
  store i64 %60, ptr %58, align 4
  %memberidx1.i.i45 = getelementptr inbounds %TypeId, ptr %58, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i45, align 4
  %memberidx2.i.i46 = getelementptr inbounds %TypeId, ptr %58, i64 0, i32 2
  store i64 %67, ptr %memberidx2.i.i46, align 4
  store ptr %58, ptr %3, align 8
  %68 = load i64, ptr %59, align 4
  %69 = load ptr, ptr %61, align 8
  %70 = load ptr, ptr %69, align 8
  %71 = getelementptr inbounds ptr, ptr %70, i64 %68
  %72 = load ptr, ptr %71, align 8
  %memberidx11 = getelementptr inbounds %Module, ptr %72, i64 0, i32 6
  %73 = load ptr, ptr %memberidx11, align 8
  %memberidx.i48 = getelementptr inbounds %Array_Enum_, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i48, align 4
  %memberidx1.i49 = getelementptr inbounds %Array_Enum_, ptr %73, i64 0, i32 2
  %75 = load i64, ptr %memberidx1.i49, align 4
  %.not.i = icmp slt i64 %74, %75
  br i1 %.not.i, label %ifend.Array_Enum____sl__.exit_crit_edge, label %if.entry.i

ifend.Array_Enum____sl__.exit_crit_edge:          ; preds = %ifend
  %.pre57 = load ptr, ptr %73, align 8
  br label %Array_Enum____sl__.exit

if.entry.i:                                       ; preds = %ifend
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx1.i49, align 4
  %77 = load ptr, ptr %73, align 8
  %78 = shl i64 %75, 4
  %79 = tail call ptr @realloc(ptr %77, i64 %78)
  store ptr %79, ptr %73, align 8
  %.pre56 = load i64, ptr %memberidx.i48, align 4
  br label %Array_Enum____sl__.exit

Array_Enum____sl__.exit:                          ; preds = %ifend.Array_Enum____sl__.exit_crit_edge, %if.entry.i
  %80 = phi ptr [ %.pre57, %ifend.Array_Enum____sl__.exit_crit_edge ], [ %79, %if.entry.i ]
  %81 = phi i64 [ %74, %ifend.Array_Enum____sl__.exit_crit_edge ], [ %.pre56, %if.entry.i ]
  %82 = add nsw i64 %81, 1
  store i64 %82, ptr %memberidx.i48, align 4
  %83 = getelementptr inbounds ptr, ptr %80, i64 %81
  store ptr %3, ptr %83, align 8
  %memberidx12 = getelementptr inbounds %Scope, ptr %29, i64 0, i32 4
  %84 = load ptr, ptr %memberidx12, align 8
  %85 = load ptr, ptr %memberidx2, align 8
  %86 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %84, ptr %85, ptr %86)
  %memberidx15 = getelementptr inbounds %Scope, ptr %29, i64 0, i32 1
  %87 = load ptr, ptr %memberidx15, align 8
  %88 = load ptr, ptr %memberidx2, align 8
  %89 = tail call ptr @malloc(i32 24)
  %90 = load ptr, ptr %3, align 8
  %91 = load i64, ptr %90, align 4
  %memberidx1.i51 = getelementptr inbounds %TypeId, ptr %90, i64 0, i32 2
  %92 = load i64, ptr %memberidx1.i51, align 4
  store i64 4, ptr %89, align 4
  %memberidx1.i.i52 = getelementptr inbounds %VarId, ptr %89, i64 0, i32 1
  store i64 %91, ptr %memberidx1.i.i52, align 4
  %memberidx2.i.i53 = getelementptr inbounds %VarId, ptr %89, i64 0, i32 2
  store i64 %92, ptr %memberidx2.i.i53, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %87, ptr %88, ptr nonnull %89)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_within_module(ptr %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp ne i64 %6, 21
  %memberidx3 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %4)
  %memberidx.i91 = getelementptr inbounds %Map_String_Generic_, ptr %8, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i91, align 4
  %11 = urem i64 %9, %10
  %12 = load ptr, ptr %8, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %.not.i92 = icmp eq ptr %14, null
  br i1 %.not.i92, label %Map_String_Generic____getitem__.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %2
  %memberidx1.i.i94 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %15 = phi ptr [ %25, %else.i ], [ %12, %while.entry.i.preheader ]
  %16 = phi i64 [ %26, %else.i ], [ %10, %while.entry.i.preheader ]
  %17 = phi ptr [ %30, %else.i ], [ %14, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %28, %else.i ], [ %11, %while.entry.i.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i.i93 = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i.i93, align 4
  %20 = load i64, ptr %memberidx1.i.i94, align 4
  %.not.i.i95 = icmp eq i64 %19, %20
  br i1 %.not.i.i95, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %21 = load ptr, ptr %18, align 8
  %22 = load ptr, ptr %4, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i91, align 4
  %.pre101 = load ptr, ptr %8, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre102.pre = load ptr, ptr %8, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre102.pre, i64 %hash.0.i
  %.pre103.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre103.pre, null
  br i1 %.not25.i, label %Map_String_Generic____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %25 = phi ptr [ %.pre101, %ifend.i.i.else.i_crit_edge ], [ %15, %while.entry.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %16, %while.entry.i ]
  %27 = add nuw i64 %hash.0.i, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not26.i = icmp eq ptr %30, null
  br i1 %.not26.i, label %Map_String_Generic____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i96 = getelementptr inbounds %MapEntry_String_Generic_, ptr %.pre103.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx11.i96, align 8
  %phi.cmp = icmp ne ptr %31, null
  br label %Map_String_Generic____getitem__.exit

Map_String_Generic____getitem__.exit:             ; preds = %else.i, %2, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry7.i ], [ false, %while.end.i ], [ false, %2 ], [ false, %else.i ]
  %32 = or i1 %7, %common.ret.op.i
  br i1 %32, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry16, %Array_Class____sl__.exit, %if.entry8, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Map_String_Generic____getitem__.exit
  %memberidx.i90 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i90, align 4
  %34 = trunc i64 %33 to i32
  %35 = add i32 %34, 1
  %36 = tail call ptr @malloc(i32 %35)
  %37 = load ptr, ptr %4, align 8
  %38 = load i64, ptr %memberidx.i90, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr align 8 %37, i64 %38, i1 false)
  %39 = getelementptr inbounds i8, ptr %36, i64 %38
  store i8 0, ptr %39, align 1
  %40 = alloca ptr, align 8
  %41 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %40, ptr nonnull @101, ptr %36)
  %42 = load ptr, ptr %40, align 8
  %43 = tail call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i88 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 %41, ptr %memberidx1.i88, align 4
  %memberidx2.i89 = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 %41, ptr %memberidx2.i89, align 4
  tail call void @free(ptr %36)
  %44 = load ptr, ptr %1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %44, i64 0, i32 1
  %45 = load ptr, ptr %memberidx5, align 8
  %memberidx.i83 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %46 = load ptr, ptr %memberidx.i83, align 8
  %memberidx1.i84 = getelementptr inbounds %Compiler, ptr %46, i64 0, i32 5
  %47 = load ptr, ptr %memberidx1.i84, align 8
  %48 = call ptr @malloc(i32 24)
  store i64 1, ptr %48, align 4
  %memberidx1.i.i85 = getelementptr inbounds %FloError, ptr %48, i64 0, i32 2
  store ptr %45, ptr %memberidx1.i.i85, align 8
  %memberidx2.i.i86 = getelementptr inbounds %FloError, ptr %48, i64 0, i32 1
  store ptr %43, ptr %memberidx2.i.i86, align 8
  %memberidx.i.i87 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %49 = load i64, ptr %memberidx.i.i87, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %50 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %49, %50
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre107 = load ptr, ptr %47, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %51 = shl nuw i64 %50, 1
  store i64 %51, ptr %memberidx1.i2.i, align 4
  %52 = load ptr, ptr %47, align 8
  %53 = shl i64 %50, 4
  %54 = call ptr @realloc(ptr %52, i64 %53)
  store ptr %54, ptr %47, align 8
  %.pre106 = load i64, ptr %memberidx.i.i87, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %55 = phi ptr [ %.pre107, %if.entry.TypeChecker_error.exit_crit_edge ], [ %54, %if.entry.i.i ]
  %56 = phi i64 [ %49, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre106, %if.entry.i.i ]
  %57 = add nsw i64 %56, 1
  store i64 %57, ptr %memberidx.i.i87, align 4
  %58 = getelementptr inbounds ptr, ptr %55, i64 %56
  store ptr %48, ptr %58, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_Generic____getitem__.exit
  %memberidx6 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 1
  %59 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Array_GenericParameterNode_, ptr %59, i64 0, i32 1
  %60 = load i64, ptr %memberidx7, align 4
  %61 = icmp sgt i64 %60, 0
  br i1 %61, label %if.entry8, label %ifend10

if.entry8:                                        ; preds = %ifend
  %memberidx11 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  store i1 true, ptr %memberidx11, align 1
  %62 = load ptr, ptr %memberidx3, align 8
  %63 = tail call ptr @malloc(i32 16)
  %memberidx13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %64 = load ptr, ptr %memberidx13, align 8
  %65 = load i64, ptr %64, align 4
  store i64 %65, ptr %63, align 4
  %memberidx1.i82 = getelementptr inbounds %Generic, ptr %63, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i82, align 8
  tail call fastcc void @Map_String_Generic____setitem__(ptr %62, ptr %4, ptr nonnull %63)
  br label %common.ret

ifend10:                                          ; preds = %ifend
  %66 = tail call ptr @malloc(i32 81)
  %memberidx.i75 = getelementptr inbounds %Class, ptr %66, i64 0, i32 3
  store ptr null, ptr %memberidx.i75, align 8
  %memberidx2.i77 = getelementptr inbounds %Class, ptr %66, i64 0, i32 8
  %memberidx3.i = getelementptr inbounds %Class, ptr %66, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx2.i77, i8 0, i64 16, i1 false)
  %67 = tail call ptr @malloc(i32 24)
  %memberidx.i.i78 = getelementptr inbounds %Array_ClassField_, ptr %67, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i78, align 4
  %memberidx1.i.i79 = getelementptr inbounds %Array_ClassField_, ptr %67, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i79, align 4
  %68 = tail call ptr @malloc(i32 64)
  store ptr %68, ptr %67, align 8
  store i64 0, ptr %memberidx.i.i78, align 4
  store ptr %67, ptr %memberidx3.i, align 8
  %memberidx6.i = getelementptr inbounds %Class, ptr %66, i64 0, i32 5
  %69 = tail call ptr @malloc(i32 24)
  %memberidx.i19.i = getelementptr inbounds %Array_ClassMethod_, ptr %69, i64 0, i32 1
  store i64 0, ptr %memberidx.i19.i, align 4
  %memberidx1.i20.i = getelementptr inbounds %Array_ClassMethod_, ptr %69, i64 0, i32 2
  store i64 8, ptr %memberidx1.i20.i, align 4
  %70 = tail call ptr @malloc(i32 64)
  store ptr %70, ptr %69, align 8
  store i64 0, ptr %memberidx.i19.i, align 4
  store ptr %69, ptr %memberidx6.i, align 8
  %71 = tail call ptr @malloc(i32 24)
  %72 = tail call ptr @malloc(i32 2048)
  store ptr %72, ptr %71, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %ifend10, %for.body.i.i
  %i.0.i.i100 = phi i64 [ 0, %ifend10 ], [ %75, %for.body.i.i ]
  %73 = load ptr, ptr %71, align 8
  %74 = getelementptr inbounds ptr, ptr %73, i64 %i.0.i.i100
  store ptr null, ptr %74, align 8
  %75 = add nuw nsw i64 %i.0.i.i100, 1
  %76 = icmp ult i64 %i.0.i.i100, 255
  br i1 %76, label %for.body.i.i, label %Map_String_PropId__constructor.exit.i

Map_String_PropId__constructor.exit.i:            ; preds = %for.body.i.i
  %memberidx9.i = getelementptr inbounds %Class, ptr %66, i64 0, i32 6
  %memberidx2.i.i80 = getelementptr inbounds %Map_String_PropId_, ptr %71, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i80, align 4
  %memberidx3.i.i81 = getelementptr inbounds %Map_String_PropId_, ptr %71, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i81, align 4
  store ptr %71, ptr %memberidx9.i, align 8
  %77 = tail call ptr @malloc(i32 24)
  %78 = tail call ptr @malloc(i32 2048)
  store ptr %78, ptr %77, align 8
  br label %for.body.i23.i

for.body.i23.i:                                   ; preds = %Map_String_PropId__constructor.exit.i, %for.body.i23.i
  %i.0.i21.i99 = phi i64 [ 0, %Map_String_PropId__constructor.exit.i ], [ %81, %for.body.i23.i ]
  %79 = load ptr, ptr %77, align 8
  %80 = getelementptr inbounds ptr, ptr %79, i64 %i.0.i21.i99
  store ptr null, ptr %80, align 8
  %81 = add nuw nsw i64 %i.0.i21.i99, 1
  %82 = icmp ult i64 %i.0.i21.i99, 255
  br i1 %82, label %for.body.i23.i, label %Class_constructor.exit

Class_constructor.exit:                           ; preds = %for.body.i23.i
  %memberidx10.i = getelementptr inbounds %Class, ptr %66, i64 0, i32 7
  %memberidx2.i24.i = getelementptr inbounds %Map_String_PropId_, ptr %77, i64 0, i32 1
  store i64 256, ptr %memberidx2.i24.i, align 4
  %memberidx3.i25.i = getelementptr inbounds %Map_String_PropId_, ptr %77, i64 0, i32 2
  store i64 0, ptr %memberidx3.i25.i, align 4
  store ptr %77, ptr %memberidx10.i, align 8
  %memberidx11.i = getelementptr inbounds %Class, ptr %66, i64 0, i32 10
  store i1 false, ptr %memberidx11.i, align 1
  %83 = load ptr, ptr %0, align 8
  %memberidx.i.i72 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %84 = load ptr, ptr %memberidx.i.i72, align 8
  %85 = load i64, ptr %84, align 4
  %86 = load ptr, ptr %83, align 8
  %87 = load ptr, ptr %86, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %85
  %89 = load ptr, ptr %88, align 8
  %memberidx1.i73 = getelementptr inbounds %Module, ptr %89, i64 0, i32 5
  %90 = load ptr, ptr %memberidx1.i73, align 8
  %91 = load i64, ptr %90, align 4
  %92 = getelementptr inbounds ptr, ptr %87, i64 %91
  %93 = load ptr, ptr %92, align 8
  %memberidx2.i.i74 = getelementptr inbounds %Module, ptr %93, i64 0, i32 7
  %94 = load ptr, ptr %memberidx2.i.i74, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %90, i64 0, i32 1
  %95 = load i64, ptr %memberidx3.i.i, align 4
  %96 = load ptr, ptr %94, align 8
  %97 = getelementptr inbounds ptr, ptr %96, i64 %95
  %98 = load ptr, ptr %97, align 8
  %memberidx15 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 2
  %99 = load ptr, ptr %memberidx15, align 8
  %.not = icmp eq ptr %99, null
  %memberidx24 = getelementptr inbounds %Class, ptr %66, i64 0, i32 2
  br i1 %.not, label %else17, label %if.entry16

if.entry16:                                       ; preds = %Class_constructor.exit
  %100 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %99)
  store ptr %100, ptr %memberidx24, align 8
  %memberidx.i70 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %101 = load ptr, ptr %memberidx.i70, align 8
  %memberidx1.i71 = getelementptr inbounds %Compiler, ptr %101, i64 0, i32 5
  %102 = load ptr, ptr %memberidx1.i71, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 1
  %103 = load i64, ptr %memberidx2.i, align 4
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %common.ret, label %ifend18

else17:                                           ; preds = %Class_constructor.exit
  store ptr null, ptr %memberidx24, align 8
  br label %ifend18

ifend18:                                          ; preds = %if.entry16, %else17
  %memberidx25 = getelementptr inbounds %Class, ptr %66, i64 0, i32 1
  store ptr %4, ptr %memberidx25, align 8
  %105 = tail call ptr @malloc(i32 24)
  %106 = load ptr, ptr %memberidx.i.i72, align 8
  %107 = load i64, ptr %106, align 4
  %108 = load ptr, ptr %0, align 8
  %109 = load ptr, ptr %108, align 8
  %110 = load ptr, ptr %109, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %107
  %112 = load ptr, ptr %111, align 8
  %memberidx29 = getelementptr inbounds %Module, ptr %112, i64 0, i32 3
  %113 = load ptr, ptr %memberidx29, align 8
  %memberidx30 = getelementptr inbounds %Array_Class_, ptr %113, i64 0, i32 1
  %114 = load i64, ptr %memberidx30, align 4
  store i64 %107, ptr %105, align 4
  %memberidx1.i.i67 = getelementptr inbounds %TypeId, ptr %105, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i67, align 4
  %memberidx2.i.i68 = getelementptr inbounds %TypeId, ptr %105, i64 0, i32 2
  store i64 %114, ptr %memberidx2.i.i68, align 4
  store ptr %105, ptr %66, align 8
  %115 = load i64, ptr %106, align 4
  %116 = load ptr, ptr %108, align 8
  %117 = load ptr, ptr %116, align 8
  %118 = getelementptr inbounds ptr, ptr %117, i64 %115
  %119 = load ptr, ptr %118, align 8
  %memberidx31 = getelementptr inbounds %Module, ptr %119, i64 0, i32 3
  %120 = load ptr, ptr %memberidx31, align 8
  %memberidx.i = getelementptr inbounds %Array_Class_, ptr %120, i64 0, i32 1
  %121 = load i64, ptr %memberidx.i, align 4
  %memberidx1.i65 = getelementptr inbounds %Array_Class_, ptr %120, i64 0, i32 2
  %122 = load i64, ptr %memberidx1.i65, align 4
  %.not.i = icmp slt i64 %121, %122
  br i1 %.not.i, label %ifend18.Array_Class____sl__.exit_crit_edge, label %if.entry.i

ifend18.Array_Class____sl__.exit_crit_edge:       ; preds = %ifend18
  %.pre105 = load ptr, ptr %120, align 8
  br label %Array_Class____sl__.exit

if.entry.i:                                       ; preds = %ifend18
  %123 = shl nuw i64 %122, 1
  store i64 %123, ptr %memberidx1.i65, align 4
  %124 = load ptr, ptr %120, align 8
  %125 = shl i64 %122, 4
  %126 = tail call ptr @realloc(ptr %124, i64 %125)
  store ptr %126, ptr %120, align 8
  %.pre104 = load i64, ptr %memberidx.i, align 4
  br label %Array_Class____sl__.exit

Array_Class____sl__.exit:                         ; preds = %ifend18.Array_Class____sl__.exit_crit_edge, %if.entry.i
  %127 = phi ptr [ %.pre105, %ifend18.Array_Class____sl__.exit_crit_edge ], [ %126, %if.entry.i ]
  %128 = phi i64 [ %121, %ifend18.Array_Class____sl__.exit_crit_edge ], [ %.pre104, %if.entry.i ]
  %129 = add nsw i64 %128, 1
  store i64 %129, ptr %memberidx.i, align 4
  %130 = getelementptr inbounds ptr, ptr %127, i64 %128
  store ptr %66, ptr %130, align 8
  %memberidx32 = getelementptr inbounds %Scope, ptr %98, i64 0, i32 2
  %131 = load ptr, ptr %memberidx32, align 8
  %132 = load ptr, ptr %66, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %131, ptr %4, ptr %132)
  %memberidx34 = getelementptr inbounds %Scope, ptr %98, i64 0, i32 1
  %133 = load ptr, ptr %memberidx34, align 8
  %134 = tail call ptr @malloc(i32 24)
  %135 = load ptr, ptr %66, align 8
  %136 = load i64, ptr %135, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %135, i64 0, i32 2
  %137 = load i64, ptr %memberidx1.i, align 4
  store i64 3, ptr %134, align 4
  %memberidx1.i.i = getelementptr inbounds %VarId, ptr %134, i64 0, i32 1
  store i64 %136, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %134, i64 0, i32 2
  store i64 %137, ptr %memberidx2.i.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %133, ptr %4, ptr nonnull %134)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_function_within_module(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 49)
  %memberidx.i = getelementptr inbounds %Function, ptr %3, i64 0, i32 6
  %memberidx1 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 4
  %4 = load i1, ptr %memberidx1, align 1
  store i1 %4, ptr %memberidx.i, align 1
  %5 = load ptr, ptr %1, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %5, i64 0, i32 2
  %6 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Function, ptr %3, i64 0, i32 1
  store ptr %6, ptr %memberidx4, align 8
  %7 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %6)
  %.not.i = icmp eq ptr %7, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 2
  br i1 %9, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_create_child_scope_within_current_scope.exit, %Array_Function____sl__.exit, %TypeChecker_error.exit92, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %if.entry.i
  %memberidx.i72 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i72, align 4
  %11 = trunc i64 %10 to i32
  %12 = add i32 %11, 1
  %13 = tail call ptr @malloc(i32 %12)
  %14 = load ptr, ptr %6, align 8
  %15 = load i64, ptr %memberidx.i72, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %14, i64 %15, i1 false)
  %16 = getelementptr inbounds i8, ptr %13, i64 %15
  store i8 0, ptr %16, align 1
  %17 = alloca ptr, align 8
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %17, ptr nonnull @109, ptr %13)
  %19 = load ptr, ptr %17, align 8
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 %18, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx2.i, align 4
  tail call void @free(ptr %13)
  %21 = load ptr, ptr %1, align 8
  %memberidx6 = getelementptr inbounds %Token, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx6, align 8
  %memberidx.i77 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %23 = load ptr, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx1.i78, align 8
  %25 = call ptr @malloc(i32 24)
  store i64 1, ptr %25, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %25, i64 0, i32 2
  store ptr %22, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %25, i64 0, i32 1
  store ptr %20, ptr %memberidx2.i.i, align 8
  %memberidx.i.i79 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i.i79, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %27 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %26, %27
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre112 = load ptr, ptr %24, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %28 = shl nuw i64 %27, 1
  store i64 %28, ptr %memberidx1.i2.i, align 4
  %29 = load ptr, ptr %24, align 8
  %30 = shl i64 %27, 4
  %31 = call ptr @realloc(ptr %29, i64 %30)
  store ptr %31, ptr %24, align 8
  %.pre = load i64, ptr %memberidx.i.i79, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %32 = phi ptr [ %.pre112, %if.entry.TypeChecker_error.exit_crit_edge ], [ %31, %if.entry.i.i ]
  %33 = phi i64 [ %26, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx.i.i79, align 4
  %35 = getelementptr inbounds ptr, ptr %32, i64 %33
  store ptr %25, ptr %35, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %36 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %6)
  %37 = load i64, ptr %36, align 4
  %.not = icmp eq i64 %37, 21
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %ifend
  %memberidx.i80 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i80, align 4
  %39 = trunc i64 %38 to i32
  %40 = add i32 %39, 1
  %41 = tail call ptr @malloc(i32 %40)
  %42 = load ptr, ptr %6, align 8
  %43 = load i64, ptr %memberidx.i80, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %41, ptr align 8 %42, i64 %43, i1 false)
  %44 = getelementptr inbounds i8, ptr %41, i64 %43
  store i8 0, ptr %44, align 1
  %45 = alloca ptr, align 8
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %45, ptr nonnull @110, ptr %41)
  %47 = load ptr, ptr %45, align 8
  %48 = tail call ptr @malloc(i32 24)
  store ptr %47, ptr %48, align 8
  %memberidx1.i81 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i81, align 4
  %memberidx2.i82 = getelementptr inbounds %String, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx2.i82, align 4
  tail call void @free(ptr %41)
  %49 = load ptr, ptr %1, align 8
  %memberidx12 = getelementptr inbounds %Token, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx12, align 8
  %memberidx.i83 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %51 = load ptr, ptr %memberidx.i83, align 8
  %memberidx1.i84 = getelementptr inbounds %Compiler, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i84, align 8
  %53 = call ptr @malloc(i32 24)
  store i64 1, ptr %53, align 4
  %memberidx1.i.i85 = getelementptr inbounds %FloError, ptr %53, i64 0, i32 2
  store ptr %50, ptr %memberidx1.i.i85, align 8
  %memberidx2.i.i86 = getelementptr inbounds %FloError, ptr %53, i64 0, i32 1
  store ptr %48, ptr %memberidx2.i.i86, align 8
  %memberidx.i.i87 = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i.i87, align 4
  %memberidx1.i2.i88 = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 2
  %55 = load i64, ptr %memberidx1.i2.i88, align 4
  %.not.i.i89 = icmp slt i64 %54, %55
  br i1 %.not.i.i89, label %if.entry8.TypeChecker_error.exit92_crit_edge, label %if.entry.i.i91

if.entry8.TypeChecker_error.exit92_crit_edge:     ; preds = %if.entry8
  %.pre114 = load ptr, ptr %52, align 8
  br label %TypeChecker_error.exit92

if.entry.i.i91:                                   ; preds = %if.entry8
  %56 = shl nuw i64 %55, 1
  store i64 %56, ptr %memberidx1.i2.i88, align 4
  %57 = load ptr, ptr %52, align 8
  %58 = shl i64 %55, 4
  %59 = call ptr @realloc(ptr %57, i64 %58)
  store ptr %59, ptr %52, align 8
  %.pre113 = load i64, ptr %memberidx.i.i87, align 4
  br label %TypeChecker_error.exit92

TypeChecker_error.exit92:                         ; preds = %if.entry8.TypeChecker_error.exit92_crit_edge, %if.entry.i.i91
  %60 = phi ptr [ %.pre114, %if.entry8.TypeChecker_error.exit92_crit_edge ], [ %59, %if.entry.i.i91 ]
  %61 = phi i64 [ %54, %if.entry8.TypeChecker_error.exit92_crit_edge ], [ %.pre113, %if.entry.i.i91 ]
  %62 = add nsw i64 %61, 1
  store i64 %62, ptr %memberidx.i.i87, align 4
  %63 = getelementptr inbounds ptr, ptr %60, i64 %61
  store ptr %53, ptr %63, align 8
  br label %common.ret

ifend10:                                          ; preds = %ifend
  %memberidx13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %64 = load ptr, ptr %memberidx13, align 8
  %65 = load i64, ptr %64, align 4
  %66 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %65)
  %memberidx2.i94 = getelementptr inbounds %Scope, ptr %66, i64 0, i32 5
  %67 = load ptr, ptr %memberidx13, align 8
  store ptr %67, ptr %memberidx2.i94, align 8
  %68 = load ptr, ptr %0, align 8
  %69 = load ptr, ptr %memberidx13, align 8
  %70 = load ptr, ptr %68, align 8
  %71 = load i64, ptr %69, align 4
  %72 = load ptr, ptr %70, align 8
  %73 = getelementptr inbounds ptr, ptr %72, i64 %71
  %74 = load ptr, ptr %73, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %74, i64 0, i32 7
  %75 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %69, i64 0, i32 1
  %76 = load i64, ptr %memberidx3.i.i.i, align 4
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %79, i64 0, i32 7
  %80 = load ptr, ptr %memberidx4.i, align 8
  %81 = load ptr, ptr %66, align 8
  %memberidx.i.i96 = getelementptr inbounds %Array_ScopeId_, ptr %80, i64 0, i32 1
  %82 = load i64, ptr %memberidx.i.i96, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %80, i64 0, i32 2
  %83 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i97 = icmp slt i64 %82, %83
  br i1 %.not.i.i97, label %ifend10.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i99

ifend10.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %ifend10
  %.pre116 = load ptr, ptr %80, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i99:                                   ; preds = %ifend10
  %84 = shl nuw i64 %83, 1
  store i64 %84, ptr %memberidx1.i11.i, align 4
  %85 = load ptr, ptr %80, align 8
  %86 = shl i64 %83, 4
  %87 = tail call ptr @realloc(ptr %85, i64 %86)
  store ptr %87, ptr %80, align 8
  %.pre115 = load i64, ptr %memberidx.i.i96, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %ifend10.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i99
  %88 = phi ptr [ %.pre116, %ifend10.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %87, %if.entry.i.i99 ]
  %89 = phi i64 [ %82, %ifend10.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre115, %if.entry.i.i99 ]
  %90 = add nsw i64 %89, 1
  store i64 %90, ptr %memberidx.i.i96, align 4
  %91 = getelementptr inbounds ptr, ptr %88, i64 %89
  store ptr %81, ptr %91, align 8
  %92 = load ptr, ptr %66, align 8
  store ptr %92, ptr %memberidx13, align 8
  %memberidx16 = getelementptr inbounds %Function, ptr %3, i64 0, i32 2
  %93 = tail call ptr @malloc(i32 24)
  %memberidx.i100 = getelementptr inbounds %Array_FunctionArg_, ptr %93, i64 0, i32 1
  store i64 0, ptr %memberidx.i100, align 4
  %memberidx1.i101 = getelementptr inbounds %Array_FunctionArg_, ptr %93, i64 0, i32 2
  store i64 8, ptr %memberidx1.i101, align 4
  %94 = tail call ptr @malloc(i32 64)
  store ptr %94, ptr %93, align 8
  store i64 0, ptr %memberidx.i100, align 4
  store ptr %93, ptr %memberidx16, align 8
  %memberidx19 = getelementptr inbounds %Function, ptr %3, i64 0, i32 4
  %memberidx20 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 1
  %95 = load ptr, ptr %memberidx20, align 8
  %memberidx21 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 3
  %96 = load ptr, ptr %memberidx21, align 8
  %97 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %95, ptr %96, ptr nonnull %93)
  store ptr %97, ptr %memberidx19, align 8
  %memberidx.i102 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %98 = load ptr, ptr %memberidx.i102, align 8
  %memberidx1.i103 = getelementptr inbounds %Compiler, ptr %98, i64 0, i32 5
  %99 = load ptr, ptr %memberidx1.i103, align 8
  %memberidx2.i104 = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 1
  %100 = load i64, ptr %memberidx2.i104, align 4
  %101 = icmp sgt i64 %100, 0
  br i1 %101, label %common.ret, label %ifend25

ifend25:                                          ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %102 = tail call ptr @malloc(i32 24)
  %103 = load ptr, ptr %memberidx13, align 8
  %104 = load i64, ptr %103, align 4
  %105 = load ptr, ptr %0, align 8
  %106 = load ptr, ptr %105, align 8
  %107 = load ptr, ptr %106, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %104
  %109 = load ptr, ptr %108, align 8
  %memberidx29 = getelementptr inbounds %Module, ptr %109, i64 0, i32 4
  %110 = load ptr, ptr %memberidx29, align 8
  %memberidx30 = getelementptr inbounds %Array_Function_, ptr %110, i64 0, i32 1
  %111 = load i64, ptr %memberidx30, align 4
  store i64 0, ptr %102, align 4
  %memberidx1.i106 = getelementptr inbounds %VarId, ptr %102, i64 0, i32 1
  store i64 %104, ptr %memberidx1.i106, align 4
  %memberidx2.i107 = getelementptr inbounds %VarId, ptr %102, i64 0, i32 2
  store i64 %111, ptr %memberidx2.i107, align 4
  store ptr %102, ptr %3, align 8
  %112 = load ptr, ptr %memberidx2.i94, align 8
  store ptr %112, ptr %memberidx13, align 8
  %memberidx33 = getelementptr inbounds %Function, ptr %3, i64 0, i32 5
  %113 = load ptr, ptr %66, align 8
  store ptr %113, ptr %memberidx33, align 8
  %114 = load i64, ptr %112, align 4
  %115 = load ptr, ptr %105, align 8
  %116 = load ptr, ptr %115, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %114
  %118 = load ptr, ptr %117, align 8
  %memberidx1.i110 = getelementptr inbounds %Module, ptr %118, i64 0, i32 5
  %119 = load ptr, ptr %memberidx1.i110, align 8
  %120 = load i64, ptr %119, align 4
  %121 = getelementptr inbounds ptr, ptr %116, i64 %120
  %122 = load ptr, ptr %121, align 8
  %memberidx2.i.i111 = getelementptr inbounds %Module, ptr %122, i64 0, i32 7
  %123 = load ptr, ptr %memberidx2.i.i111, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %119, i64 0, i32 1
  %124 = load i64, ptr %memberidx3.i.i, align 4
  %125 = load ptr, ptr %123, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %124
  %127 = load ptr, ptr %126, align 8
  %memberidx35 = getelementptr inbounds %Module, ptr %118, i64 0, i32 4
  %128 = load ptr, ptr %memberidx35, align 8
  %memberidx.i73 = getelementptr inbounds %Array_Function_, ptr %128, i64 0, i32 1
  %129 = load i64, ptr %memberidx.i73, align 4
  %memberidx1.i74 = getelementptr inbounds %Array_Function_, ptr %128, i64 0, i32 2
  %130 = load i64, ptr %memberidx1.i74, align 4
  %.not.i75 = icmp slt i64 %129, %130
  br i1 %.not.i75, label %ifend25.Array_Function____sl__.exit_crit_edge, label %if.entry.i76

ifend25.Array_Function____sl__.exit_crit_edge:    ; preds = %ifend25
  %.pre118 = load ptr, ptr %128, align 8
  br label %Array_Function____sl__.exit

if.entry.i76:                                     ; preds = %ifend25
  %131 = shl nuw i64 %130, 1
  store i64 %131, ptr %memberidx1.i74, align 4
  %132 = load ptr, ptr %128, align 8
  %133 = shl i64 %130, 4
  %134 = tail call ptr @realloc(ptr %132, i64 %133)
  store ptr %134, ptr %128, align 8
  %.pre117 = load i64, ptr %memberidx.i73, align 4
  br label %Array_Function____sl__.exit

Array_Function____sl__.exit:                      ; preds = %ifend25.Array_Function____sl__.exit_crit_edge, %if.entry.i76
  %135 = phi ptr [ %.pre118, %ifend25.Array_Function____sl__.exit_crit_edge ], [ %134, %if.entry.i76 ]
  %136 = phi i64 [ %129, %ifend25.Array_Function____sl__.exit_crit_edge ], [ %.pre117, %if.entry.i76 ]
  %137 = add nsw i64 %136, 1
  store i64 %137, ptr %memberidx.i73, align 4
  %138 = getelementptr inbounds ptr, ptr %135, i64 %136
  store ptr %3, ptr %138, align 8
  %memberidx36 = getelementptr inbounds %Scope, ptr %127, i64 0, i32 3
  %139 = load ptr, ptr %memberidx36, align 8
  %140 = load ptr, ptr %memberidx4, align 8
  %141 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %139, ptr %140, ptr %141)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %4)
  %6 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %tailrecurse.i, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i66, %tailrecurse.i ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %7 = load i64, ptr %.tr11.i, align 4
  %switch = icmp eq i64 %7, 20
  %memberidx1.i66 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br i1 %switch, label %tailrecurse.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i68 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %8 = load ptr, ptr %memberidx6.i68, align 8
  %9 = load ptr, ptr %6, align 8
  %10 = load i64, ptr %8, align 4
  %11 = load ptr, ptr %9, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx2.i.i69 = getelementptr inbounds %Module, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx2.i.i69, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %15 = load i64, ptr %memberidx3.i.i, align 4
  %16 = load ptr, ptr %14, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8
  %memberidx3 = getelementptr inbounds %Class, ptr %18, i64 0, i32 6
  %19 = load ptr, ptr %memberidx3, align 8
  %20 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %5)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %19, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %19, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i = icmp eq ptr %25, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %27 = phi ptr [ %36, %else.i ], [ %23, %while.entry.i.preheader ]
  %28 = phi i64 [ %37, %else.i ], [ %21, %while.entry.i.preheader ]
  %29 = phi ptr [ %41, %else.i ], [ %25, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %39, %else.i ], [ %22, %while.entry.i.preheader ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %31, %26
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %32 = load ptr, ptr %30, align 8
  %33 = load ptr, ptr %5, align 8
  %34 = tail call i64 @memcmp(ptr %32, ptr %33, i64 %26)
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre71 = load ptr, ptr %19, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre72.pre = load ptr, ptr %19, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre72.pre, i64 %hash.0.i
  %.pre73.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre73.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %36 = phi ptr [ %.pre71, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %37 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %38 = add nuw i64 %hash.0.i, 1
  %39 = urem i64 %38, %37
  %40 = getelementptr inbounds ptr, ptr %36, i64 %39
  %41 = load ptr, ptr %40, align 8
  %.not26.i = icmp eq ptr %41, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre73.pre, i64 0, i32 1
  %42 = load ptr, ptr %memberidx11.i, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %get_class_prop_type.exit, %Map_String_PropId____getitem__.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %118, %ifend13 ], [ null, %Map_String_PropId____getitem__.exit ], [ null, %get_class_prop_type.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %44 = load ptr, ptr %0, align 8
  %memberidx.i.i38 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i38, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = load i64, ptr %45, align 4
  %48 = load ptr, ptr %46, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %50, i64 0, i32 3
  %51 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %45, i64 0, i32 2
  %52 = load i64, ptr %memberidx3.i.i.i, align 4
  %53 = load ptr, ptr %51, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 %52
  %55 = load ptr, ptr %54, align 8
  %56 = load i64, ptr %42, align 4
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 5
  %58 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %59 = load i64, ptr %memberidx2.i, align 4
  %60 = load ptr, ptr %58, align 8
  %61 = getelementptr inbounds ptr, ptr %60, i64 %59
  %62 = load ptr, ptr %61, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %62, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 4
  %63 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %64 = load i64, ptr %memberidx5.i, align 4
  %65 = load ptr, ptr %63, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %67, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i39 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx5 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i39, i64 0, i32 1
  %68 = load ptr, ptr %memberidx5, align 8
  %69 = load ptr, ptr %68, align 8
  %70 = load ptr, ptr %69, align 8
  %memberidx6 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %71 = load ptr, ptr %memberidx6, align 8
  %72 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %70, ptr %71)
  %memberidx.i40 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %73 = load ptr, ptr %memberidx.i40, align 8
  %memberidx1.i41 = getelementptr inbounds %Compiler, ptr %73, i64 0, i32 5
  %74 = load ptr, ptr %memberidx1.i41, align 8
  %memberidx2.i42 = getelementptr inbounds %Array_FloError_, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx2.i42, align 4
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %common.ret, label %ifend9

ifend9:                                           ; preds = %get_class_prop_type.exit
  %memberidx10 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  %77 = load ptr, ptr %memberidx10, align 8
  %78 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %70, ptr %77)
  br i1 %78, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %79 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %70)
  %memberidx.i43 = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  %80 = load i64, ptr %memberidx.i43, align 4
  %81 = trunc i64 %80 to i32
  %82 = add i32 %81, 1
  %83 = tail call ptr @malloc(i32 %82)
  %84 = load ptr, ptr %79, align 8
  %85 = load i64, ptr %memberidx.i43, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %83, ptr align 8 %84, i64 %85, i1 false)
  %86 = getelementptr inbounds i8, ptr %83, i64 %85
  store i8 0, ptr %86, align 1
  %87 = load ptr, ptr %memberidx10, align 8
  %88 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %87)
  %memberidx.i44 = getelementptr inbounds %String, ptr %88, i64 0, i32 1
  %89 = load i64, ptr %memberidx.i44, align 4
  %90 = trunc i64 %89 to i32
  %91 = add i32 %90, 1
  %92 = tail call ptr @malloc(i32 %91)
  %93 = load ptr, ptr %88, align 8
  %94 = load i64, ptr %memberidx.i44, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %92, ptr align 8 %93, i64 %94, i1 false)
  %95 = getelementptr inbounds i8, ptr %92, i64 %94
  store i8 0, ptr %95, align 1
  %96 = alloca ptr, align 8
  %97 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %96, ptr nonnull @177, ptr %83, ptr %92)
  %98 = load ptr, ptr %96, align 8
  %99 = tail call ptr @malloc(i32 24)
  store ptr %98, ptr %99, align 8
  %memberidx1.i45 = getelementptr inbounds %String, ptr %99, i64 0, i32 1
  store i64 %97, ptr %memberidx1.i45, align 4
  %memberidx2.i46 = getelementptr inbounds %String, ptr %99, i64 0, i32 2
  store i64 %97, ptr %memberidx2.i46, align 4
  tail call void @free(ptr %83)
  tail call void @free(ptr %92)
  %100 = load ptr, ptr %memberidx6, align 8
  %101 = load ptr, ptr %100, align 8
  %102 = load ptr, ptr %memberidx.i40, align 8
  %memberidx1.i48 = getelementptr inbounds %Compiler, ptr %102, i64 0, i32 5
  %103 = load ptr, ptr %memberidx1.i48, align 8
  %104 = call ptr @malloc(i32 24)
  store i64 5, ptr %104, align 4
  %memberidx1.i.i49 = getelementptr inbounds %FloError, ptr %104, i64 0, i32 2
  store ptr %101, ptr %memberidx1.i.i49, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %104, i64 0, i32 1
  store ptr %99, ptr %memberidx2.i.i, align 8
  %memberidx.i.i50 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 1
  %105 = load i64, ptr %memberidx.i.i50, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 2
  %106 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i51 = icmp slt i64 %105, %106
  br i1 %.not.i.i51, label %if.entry11.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry11.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry11
  %.pre75 = load ptr, ptr %103, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry11
  %107 = shl nuw i64 %106, 1
  store i64 %107, ptr %memberidx1.i2.i, align 4
  %108 = load ptr, ptr %103, align 8
  %109 = shl i64 %106, 4
  %110 = call ptr @realloc(ptr %108, i64 %109)
  store ptr %110, ptr %103, align 8
  %.pre74 = load i64, ptr %memberidx.i.i50, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %111 = phi ptr [ %.pre75, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %110, %if.entry.i.i ]
  %112 = phi i64 [ %105, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %.pre74, %if.entry.i.i ]
  %113 = add nsw i64 %112, 1
  store i64 %113, ptr %memberidx.i.i50, align 4
  %114 = getelementptr inbounds ptr, ptr %111, i64 %112
  store ptr %104, ptr %114, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %115 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %115, align 4
  %memberidx.i.i52 = getelementptr inbounds %Expression, ptr %115, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i52, align 4
  %memberidx1.i.i53 = getelementptr inbounds %Expression, ptr %115, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i53, align 1
  %memberidx.i54 = getelementptr inbounds %MemberExpression, ptr %115, i64 0, i32 4
  store ptr %1, ptr %memberidx.i54, align 8
  %memberidx1.i55 = getelementptr inbounds %MemberExpression, ptr %115, i64 0, i32 5
  store ptr %42, ptr %memberidx1.i55, align 8
  %memberidx2.i56 = getelementptr inbounds %Expression, ptr %115, i64 0, i32 3
  store ptr %common.ret.op.i39, ptr %memberidx2.i56, align 8
  %116 = tail call ptr @malloc(i32 24)
  %memberidx.i57 = getelementptr inbounds %Array_Expression_, ptr %116, i64 0, i32 1
  store i64 0, ptr %memberidx.i57, align 4
  %memberidx1.i58 = getelementptr inbounds %Array_Expression_, ptr %116, i64 0, i32 2
  store i64 8, ptr %memberidx1.i58, align 4
  %117 = tail call ptr @malloc(i32 64)
  store ptr %117, ptr %116, align 8
  store ptr %72, ptr %117, align 8
  store i64 1, ptr %memberidx.i57, align 4
  %118 = tail call ptr @malloc(i32 41)
  %memberidx19 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i39, i64 0, i32 2
  %119 = load ptr, ptr %memberidx19, align 8
  store i64 8, ptr %118, align 4
  %memberidx.i.i59 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i59, align 4
  %memberidx1.i.i60 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i60, align 1
  %memberidx.i61 = getelementptr inbounds %CallExpression, ptr %118, i64 0, i32 4
  store ptr %115, ptr %memberidx.i61, align 8
  %memberidx1.i62 = getelementptr inbounds %CallExpression, ptr %118, i64 0, i32 5
  store ptr %116, ptr %memberidx1.i62, align 8
  %memberidx2.i63 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 3
  store ptr %119, ptr %memberidx2.i63, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = load ptr, ptr %0, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i85, %3
  %.tr11.i.in = phi ptr [ %memberidx1, %3 ], [ %memberidx1.i84, %if.entry.i85 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %5 = load i64, ptr %.tr11.i, align 4
  switch i64 %5, label %get_class_from_type.exit [
    i64 20, label %if.entry.i85
    i64 11, label %if.entry3.i
  ]

if.entry.i85:                                     ; preds = %tailrecurse.i
  %memberidx1.i84 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i86 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %6 = load ptr, ptr %memberidx6.i86, align 8
  %7 = load ptr, ptr %4, align 8
  %8 = load i64, ptr %6, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i87 = getelementptr inbounds %Module, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2.i.i87, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i83 = phi ptr [ %16, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx2 = getelementptr inbounds %Class, ptr %common.ret.op.i83, i64 0, i32 6
  %17 = load ptr, ptr %memberidx2, align 8
  %18 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %18, ptr noundef nonnull align 8 dereferenceable(11) @121, i64 11, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i, align 4
  %20 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %19)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %17, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %17, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i = icmp eq ptr %25, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %get_class_from_type.exit, %else.i
  %26 = phi ptr [ %34, %else.i ], [ %23, %get_class_from_type.exit ]
  %27 = phi i64 [ %35, %else.i ], [ %21, %get_class_from_type.exit ]
  %28 = phi ptr [ %39, %else.i ], [ %25, %get_class_from_type.exit ]
  %hash.0.i = phi i64 [ %37, %else.i ], [ %22, %get_class_from_type.exit ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %30, 11
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i64 @memcmp(ptr %31, ptr %18, i64 11)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre91 = load ptr, ptr %17, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre92.pre = load ptr, ptr %17, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre92.pre, i64 %hash.0.i
  %.pre93.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre93.pre, null
  br i1 %.not25.i, label %if.entry, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %34 = phi ptr [ %.pre91, %ifend.i.i.else.i_crit_edge ], [ %26, %while.entry.i ]
  %35 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %36 = add nuw i64 %hash.0.i, 1
  %37 = urem i64 %36, %35
  %38 = getelementptr inbounds ptr, ptr %34, i64 %37
  %39 = load ptr, ptr %38, align 8
  %.not26.i = icmp eq ptr %39, null
  br i1 %.not26.i, label %if.entry, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre93.pre, i64 0, i32 1
  %40 = load ptr, ptr %memberidx11.i, align 8
  %41 = icmp eq ptr %40, null
  br i1 %41, label %if.entry, label %ifend

common.ret:                                       ; preds = %get_class_prop_type.exit, %ifend14, %TypeChecker_error.exit69, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit69 ], [ %140, %ifend14 ], [ null, %get_class_prop_type.exit ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_String_PropId____getitem__.exit
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i83, i64 0, i32 1
  %42 = load ptr, ptr %memberidx3, align 8
  %memberidx.i42 = getelementptr inbounds %String, ptr %42, i64 0, i32 1
  %43 = load i64, ptr %memberidx.i42, align 4
  %44 = trunc i64 %43 to i32
  %45 = add i32 %44, 1
  %46 = tail call ptr @malloc(i32 %45)
  %47 = load ptr, ptr %42, align 8
  %48 = load i64, ptr %memberidx.i42, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %46, ptr align 8 %47, i64 %48, i1 false)
  %49 = getelementptr inbounds i8, ptr %46, i64 %48
  store i8 0, ptr %49, align 1
  %50 = alloca ptr, align 8
  %51 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %50, ptr nonnull @208, ptr %46)
  %52 = load ptr, ptr %50, align 8
  %53 = tail call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  store i64 %51, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %53, i64 0, i32 2
  store i64 %51, ptr %memberidx2.i, align 4
  tail call void @free(ptr %46)
  %54 = load ptr, ptr %2, align 8
  %memberidx.i43 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %55 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i44 = getelementptr inbounds %Compiler, ptr %55, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1.i44, align 8
  %57 = call ptr @malloc(i32 24)
  store i64 4, ptr %57, align 4
  %memberidx1.i.i45 = getelementptr inbounds %FloError, ptr %57, i64 0, i32 2
  store ptr %54, ptr %memberidx1.i.i45, align 8
  %memberidx2.i.i46 = getelementptr inbounds %FloError, ptr %57, i64 0, i32 1
  store ptr %53, ptr %memberidx2.i.i46, align 8
  %memberidx.i.i47 = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i.i47, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 2
  %59 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i48 = icmp slt i64 %58, %59
  br i1 %.not.i.i48, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre97 = load ptr, ptr %56, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %60 = shl nuw i64 %59, 1
  store i64 %60, ptr %memberidx1.i2.i, align 4
  %61 = load ptr, ptr %56, align 8
  %62 = shl i64 %59, 4
  %63 = call ptr @realloc(ptr %61, i64 %62)
  store ptr %63, ptr %56, align 8
  %.pre96 = load i64, ptr %memberidx.i.i47, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %64 = phi ptr [ %.pre97, %if.entry.TypeChecker_error.exit_crit_edge ], [ %63, %if.entry.i.i ]
  %65 = phi i64 [ %58, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre96, %if.entry.i.i ]
  %66 = add nsw i64 %65, 1
  store i64 %66, ptr %memberidx.i.i47, align 4
  %67 = getelementptr inbounds ptr, ptr %64, i64 %65
  store ptr %57, ptr %67, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %68 = load ptr, ptr %0, align 8
  %memberidx.i.i49 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i.i49, align 8
  %70 = load ptr, ptr %68, align 8
  %71 = load i64, ptr %69, align 4
  %72 = load ptr, ptr %70, align 8
  %73 = getelementptr inbounds ptr, ptr %72, i64 %71
  %74 = load ptr, ptr %73, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %74, i64 0, i32 3
  %75 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %69, i64 0, i32 2
  %76 = load i64, ptr %memberidx3.i.i.i, align 4
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %80 = load i64, ptr %40, align 4
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i51 = getelementptr inbounds %Class, ptr %79, i64 0, i32 5
  %82 = load ptr, ptr %memberidx1.i51, align 8
  %memberidx2.i52 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %83 = load i64, ptr %memberidx2.i52, align 4
  %84 = load ptr, ptr %82, align 8
  %85 = getelementptr inbounds ptr, ptr %84, i64 %83
  %86 = load ptr, ptr %85, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %86, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %79, i64 0, i32 4
  %87 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %88 = load i64, ptr %memberidx5.i, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %91, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i50 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx6 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i50, i64 0, i32 1
  %92 = load ptr, ptr %memberidx6, align 8
  %93 = load ptr, ptr %92, align 8
  %94 = load ptr, ptr %93, align 8
  %memberidx7 = getelementptr inbounds %ExpressionIndexNode, ptr %2, i64 0, i32 4
  %95 = load ptr, ptr %memberidx7, align 8
  %96 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %94, ptr %95)
  %memberidx.i53 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %97 = load ptr, ptr %memberidx.i53, align 8
  %memberidx1.i54 = getelementptr inbounds %Compiler, ptr %97, i64 0, i32 5
  %98 = load ptr, ptr %memberidx1.i54, align 8
  %memberidx2.i55 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %99 = load i64, ptr %memberidx2.i55, align 4
  %100 = icmp sgt i64 %99, 0
  br i1 %100, label %common.ret, label %ifend10

ifend10:                                          ; preds = %get_class_prop_type.exit
  %memberidx11 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 3
  %101 = load ptr, ptr %memberidx11, align 8
  %102 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %94, ptr %101)
  br i1 %102, label %ifend14, label %if.entry12

if.entry12:                                       ; preds = %ifend10
  %103 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %94)
  %memberidx.i56 = getelementptr inbounds %String, ptr %103, i64 0, i32 1
  %104 = load i64, ptr %memberidx.i56, align 4
  %105 = trunc i64 %104 to i32
  %106 = add i32 %105, 1
  %107 = tail call ptr @malloc(i32 %106)
  %108 = load ptr, ptr %103, align 8
  %109 = load i64, ptr %memberidx.i56, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %107, ptr align 8 %108, i64 %109, i1 false)
  %110 = getelementptr inbounds i8, ptr %107, i64 %109
  store i8 0, ptr %110, align 1
  %111 = load ptr, ptr %memberidx11, align 8
  %112 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %111)
  %memberidx.i57 = getelementptr inbounds %String, ptr %112, i64 0, i32 1
  %113 = load i64, ptr %memberidx.i57, align 4
  %114 = trunc i64 %113 to i32
  %115 = add i32 %114, 1
  %116 = tail call ptr @malloc(i32 %115)
  %117 = load ptr, ptr %112, align 8
  %118 = load i64, ptr %memberidx.i57, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %116, ptr align 8 %117, i64 %118, i1 false)
  %119 = getelementptr inbounds i8, ptr %116, i64 %118
  store i8 0, ptr %119, align 1
  %120 = alloca ptr, align 8
  %121 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %120, ptr nonnull @177, ptr %107, ptr %116)
  %122 = load ptr, ptr %120, align 8
  %123 = tail call ptr @malloc(i32 24)
  store ptr %122, ptr %123, align 8
  %memberidx1.i58 = getelementptr inbounds %String, ptr %123, i64 0, i32 1
  store i64 %121, ptr %memberidx1.i58, align 4
  %memberidx2.i59 = getelementptr inbounds %String, ptr %123, i64 0, i32 2
  store i64 %121, ptr %memberidx2.i59, align 4
  tail call void @free(ptr %107)
  tail call void @free(ptr %116)
  %124 = load ptr, ptr %memberidx7, align 8
  %125 = load ptr, ptr %124, align 8
  %126 = load ptr, ptr %memberidx.i53, align 8
  %memberidx1.i61 = getelementptr inbounds %Compiler, ptr %126, i64 0, i32 5
  %127 = load ptr, ptr %memberidx1.i61, align 8
  %128 = call ptr @malloc(i32 24)
  store i64 5, ptr %128, align 4
  %memberidx1.i.i62 = getelementptr inbounds %FloError, ptr %128, i64 0, i32 2
  store ptr %125, ptr %memberidx1.i.i62, align 8
  %memberidx2.i.i63 = getelementptr inbounds %FloError, ptr %128, i64 0, i32 1
  store ptr %123, ptr %memberidx2.i.i63, align 8
  %memberidx.i.i64 = getelementptr inbounds %Array_FloError_, ptr %127, i64 0, i32 1
  %129 = load i64, ptr %memberidx.i.i64, align 4
  %memberidx1.i2.i65 = getelementptr inbounds %Array_FloError_, ptr %127, i64 0, i32 2
  %130 = load i64, ptr %memberidx1.i2.i65, align 4
  %.not.i.i66 = icmp slt i64 %129, %130
  br i1 %.not.i.i66, label %if.entry12.TypeChecker_error.exit69_crit_edge, label %if.entry.i.i68

if.entry12.TypeChecker_error.exit69_crit_edge:    ; preds = %if.entry12
  %.pre95 = load ptr, ptr %127, align 8
  br label %TypeChecker_error.exit69

if.entry.i.i68:                                   ; preds = %if.entry12
  %131 = shl nuw i64 %130, 1
  store i64 %131, ptr %memberidx1.i2.i65, align 4
  %132 = load ptr, ptr %127, align 8
  %133 = shl i64 %130, 4
  %134 = call ptr @realloc(ptr %132, i64 %133)
  store ptr %134, ptr %127, align 8
  %.pre94 = load i64, ptr %memberidx.i.i64, align 4
  br label %TypeChecker_error.exit69

TypeChecker_error.exit69:                         ; preds = %if.entry12.TypeChecker_error.exit69_crit_edge, %if.entry.i.i68
  %135 = phi ptr [ %.pre95, %if.entry12.TypeChecker_error.exit69_crit_edge ], [ %134, %if.entry.i.i68 ]
  %136 = phi i64 [ %129, %if.entry12.TypeChecker_error.exit69_crit_edge ], [ %.pre94, %if.entry.i.i68 ]
  %137 = add nsw i64 %136, 1
  store i64 %137, ptr %memberidx.i.i64, align 4
  %138 = getelementptr inbounds ptr, ptr %135, i64 %136
  store ptr %128, ptr %138, align 8
  br label %common.ret

ifend14:                                          ; preds = %ifend10
  %139 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %139, align 4
  %memberidx.i.i70 = getelementptr inbounds %Expression, ptr %139, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i70, align 4
  %memberidx1.i.i71 = getelementptr inbounds %Expression, ptr %139, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i71, align 1
  %memberidx.i72 = getelementptr inbounds %MemberExpression, ptr %139, i64 0, i32 4
  store ptr %1, ptr %memberidx.i72, align 8
  %memberidx1.i73 = getelementptr inbounds %MemberExpression, ptr %139, i64 0, i32 5
  store ptr %40, ptr %memberidx1.i73, align 8
  %memberidx2.i74 = getelementptr inbounds %Expression, ptr %139, i64 0, i32 3
  store ptr %common.ret.op.i50, ptr %memberidx2.i74, align 8
  %140 = tail call ptr @malloc(i32 41)
  %141 = tail call ptr @malloc(i32 24)
  %memberidx.i75 = getelementptr inbounds %Array_Expression_, ptr %141, i64 0, i32 1
  store i64 0, ptr %memberidx.i75, align 4
  %memberidx1.i76 = getelementptr inbounds %Array_Expression_, ptr %141, i64 0, i32 2
  store i64 8, ptr %memberidx1.i76, align 4
  %142 = tail call ptr @malloc(i32 64)
  store ptr %142, ptr %141, align 8
  store ptr %96, ptr %142, align 8
  store i64 1, ptr %memberidx.i75, align 4
  %memberidx20 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i50, i64 0, i32 2
  %143 = load ptr, ptr %memberidx20, align 8
  store i64 8, ptr %140, align 4
  %memberidx.i.i77 = getelementptr inbounds %Expression, ptr %140, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i77, align 4
  %memberidx1.i.i78 = getelementptr inbounds %Expression, ptr %140, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i78, align 1
  %memberidx.i79 = getelementptr inbounds %CallExpression, ptr %140, i64 0, i32 4
  store ptr %139, ptr %memberidx.i79, align 8
  %memberidx1.i80 = getelementptr inbounds %CallExpression, ptr %140, i64 0, i32 5
  store ptr %141, ptr %memberidx1.i80, align 8
  %memberidx2.i81 = getelementptr inbounds %Expression, ptr %140, i64 0, i32 3
  store ptr %143, ptr %memberidx2.i81, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_tuple_index_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca %IntType, align 8
  store i64 6, ptr %4, align 8
  %memberidx.i = getelementptr inbounds %IntType, ptr %4, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 8
  %memberidx = getelementptr inbounds %ExpressionIndexNode, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx, align 8
  %6 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %4, ptr %5)
  %memberidx1 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load i64, ptr %7, align 4
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %ifend, label %if.entry

common.ret:                                       ; preds = %ifend24, %TypeChecker_error.exit89, %TypeChecker_error.exit76, %TypeChecker_error.exit64, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit64 ], [ null, %TypeChecker_error.exit76 ], [ null, %TypeChecker_error.exit89 ], [ %112, %ifend24 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %11 = call ptr @malloc(i32 34)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(34) %11, ptr noundef nonnull align 8 dereferenceable(34) @209, i64 34, i1 false)
  %12 = call ptr @malloc(i32 24)
  store ptr %11, ptr %12, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  store i64 34, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %12, i64 0, i32 2
  store i64 34, ptr %memberidx2.i.i, align 4
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load ptr, ptr %13, align 8
  %memberidx.i50 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %15 = load ptr, ptr %memberidx.i50, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx1.i, align 8
  %17 = call ptr @malloc(i32 24)
  store i64 5, ptr %17, align 4
  %memberidx1.i.i51 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 2
  store ptr %14, ptr %memberidx1.i.i51, align 8
  %memberidx2.i.i52 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 1
  store ptr %12, ptr %memberidx2.i.i52, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %19 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %18, %19
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre100 = load ptr, ptr %16, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %20 = shl nuw i64 %19, 1
  store i64 %20, ptr %memberidx1.i2.i, align 4
  %21 = load ptr, ptr %16, align 8
  %22 = shl i64 %19, 4
  %23 = call ptr @realloc(ptr %21, i64 %22)
  store ptr %23, ptr %16, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %24 = phi ptr [ %.pre100, %if.entry.TypeChecker_error.exit_crit_edge ], [ %23, %if.entry.i.i ]
  %25 = phi i64 [ %18, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %26 = add nsw i64 %25, 1
  store i64 %26, ptr %memberidx.i.i, align 4
  %27 = getelementptr inbounds ptr, ptr %24, i64 %25
  store ptr %17, ptr %27, align 8
  br label %common.ret

ifend:                                            ; preds = %3
  %memberidx5 = getelementptr inbounds %IntType, ptr %7, i64 0, i32 1
  %28 = load i1, ptr %memberidx5, align 1
  br i1 %28, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend
  %29 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %7)
  %memberidx.i53 = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i53, align 4
  %31 = trunc i64 %30 to i32
  %32 = add i32 %31, 1
  %33 = call ptr @malloc(i32 %32)
  %34 = load ptr, ptr %29, align 8
  %35 = load i64, ptr %memberidx.i53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %34, i64 %35, i1 false)
  %36 = getelementptr inbounds i8, ptr %33, i64 %35
  store i8 0, ptr %36, align 1
  %37 = alloca ptr, align 8
  %38 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %37, ptr nonnull @210, ptr %33)
  %39 = load ptr, ptr %37, align 8
  %40 = tail call ptr @malloc(i32 24)
  store ptr %39, ptr %40, align 8
  %memberidx1.i54 = getelementptr inbounds %String, ptr %40, i64 0, i32 1
  store i64 %38, ptr %memberidx1.i54, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %40, i64 0, i32 2
  store i64 %38, ptr %memberidx2.i, align 4
  tail call void @free(ptr %33)
  %41 = load ptr, ptr %memberidx, align 8
  %42 = load ptr, ptr %41, align 8
  %memberidx.i55 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %43 = load ptr, ptr %memberidx.i55, align 8
  %memberidx1.i56 = getelementptr inbounds %Compiler, ptr %43, i64 0, i32 5
  %44 = load ptr, ptr %memberidx1.i56, align 8
  %45 = call ptr @malloc(i32 24)
  store i64 5, ptr %45, align 4
  %memberidx1.i.i57 = getelementptr inbounds %FloError, ptr %45, i64 0, i32 2
  store ptr %42, ptr %memberidx1.i.i57, align 8
  %memberidx2.i.i58 = getelementptr inbounds %FloError, ptr %45, i64 0, i32 1
  store ptr %40, ptr %memberidx2.i.i58, align 8
  %memberidx.i.i59 = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 1
  %46 = load i64, ptr %memberidx.i.i59, align 4
  %memberidx1.i2.i60 = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 2
  %47 = load i64, ptr %memberidx1.i2.i60, align 4
  %.not.i.i61 = icmp slt i64 %46, %47
  br i1 %.not.i.i61, label %if.entry6.TypeChecker_error.exit64_crit_edge, label %if.entry.i.i63

if.entry6.TypeChecker_error.exit64_crit_edge:     ; preds = %if.entry6
  %.pre106 = load ptr, ptr %44, align 8
  br label %TypeChecker_error.exit64

if.entry.i.i63:                                   ; preds = %if.entry6
  %48 = shl nuw i64 %47, 1
  store i64 %48, ptr %memberidx1.i2.i60, align 4
  %49 = load ptr, ptr %44, align 8
  %50 = shl i64 %47, 4
  %51 = call ptr @realloc(ptr %49, i64 %50)
  store ptr %51, ptr %44, align 8
  %.pre105 = load i64, ptr %memberidx.i.i59, align 4
  br label %TypeChecker_error.exit64

TypeChecker_error.exit64:                         ; preds = %if.entry6.TypeChecker_error.exit64_crit_edge, %if.entry.i.i63
  %52 = phi ptr [ %.pre106, %if.entry6.TypeChecker_error.exit64_crit_edge ], [ %51, %if.entry.i.i63 ]
  %53 = phi i64 [ %46, %if.entry6.TypeChecker_error.exit64_crit_edge ], [ %.pre105, %if.entry.i.i63 ]
  %54 = add nsw i64 %53, 1
  store i64 %54, ptr %memberidx.i.i59, align 4
  %55 = getelementptr inbounds ptr, ptr %52, i64 %53
  store ptr %45, ptr %55, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend
  %memberidx12 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %56 = load i1, ptr %memberidx12, align 1
  br i1 %56, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend8
  %57 = call ptr @malloc(i32 40)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %57, ptr noundef nonnull align 8 dereferenceable(40) @211, i64 40, i1 false)
  %58 = call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i65 = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 40, ptr %memberidx1.i.i65, align 4
  %memberidx2.i.i66 = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 40, ptr %memberidx2.i.i66, align 4
  %59 = load ptr, ptr %memberidx, align 8
  %60 = load ptr, ptr %59, align 8
  %memberidx.i67 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %61 = load ptr, ptr %memberidx.i67, align 8
  %memberidx1.i68 = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx1.i68, align 8
  %63 = call ptr @malloc(i32 24)
  store i64 5, ptr %63, align 4
  %memberidx1.i.i69 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %60, ptr %memberidx1.i.i69, align 8
  %memberidx2.i.i70 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i70, align 8
  %memberidx.i.i71 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %64 = load i64, ptr %memberidx.i.i71, align 4
  %memberidx1.i2.i72 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %65 = load i64, ptr %memberidx1.i2.i72, align 4
  %.not.i.i73 = icmp slt i64 %64, %65
  br i1 %.not.i.i73, label %if.entry13.TypeChecker_error.exit76_crit_edge, label %if.entry.i.i75

if.entry13.TypeChecker_error.exit76_crit_edge:    ; preds = %if.entry13
  %.pre102 = load ptr, ptr %62, align 8
  br label %TypeChecker_error.exit76

if.entry.i.i75:                                   ; preds = %if.entry13
  %66 = shl nuw i64 %65, 1
  store i64 %66, ptr %memberidx1.i2.i72, align 4
  %67 = load ptr, ptr %62, align 8
  %68 = shl i64 %65, 4
  %69 = call ptr @realloc(ptr %67, i64 %68)
  store ptr %69, ptr %62, align 8
  %.pre101 = load i64, ptr %memberidx.i.i71, align 4
  br label %TypeChecker_error.exit76

TypeChecker_error.exit76:                         ; preds = %if.entry13.TypeChecker_error.exit76_crit_edge, %if.entry.i.i75
  %70 = phi ptr [ %.pre102, %if.entry13.TypeChecker_error.exit76_crit_edge ], [ %69, %if.entry.i.i75 ]
  %71 = phi i64 [ %64, %if.entry13.TypeChecker_error.exit76_crit_edge ], [ %.pre101, %if.entry.i.i75 ]
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %memberidx.i.i71, align 4
  %73 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %63, ptr %73, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend8
  %74 = load ptr, ptr %0, align 8
  %75 = call fastcc i64 @evaluate_const_int_expression(ptr %74, ptr nonnull %6)
  %memberidx19 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %76 = load ptr, ptr %memberidx19, align 8
  %77 = icmp slt i64 %75, 0
  %memberidx20 = getelementptr inbounds %TupleType, ptr %76, i64 0, i32 1
  %78 = load ptr, ptr %memberidx20, align 8
  %memberidx21 = getelementptr inbounds %Array_Type_, ptr %78, i64 0, i32 1
  %79 = load i64, ptr %memberidx21, align 4
  %80 = icmp sge i64 %75, %79
  %81 = or i1 %77, %80
  br i1 %81, label %if.entry22, label %ifend24

if.entry22:                                       ; preds = %ifend15
  %82 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %76)
  %memberidx.i77 = getelementptr inbounds %String, ptr %82, i64 0, i32 1
  %83 = load i64, ptr %memberidx.i77, align 4
  %84 = trunc i64 %83 to i32
  %85 = add i32 %84, 1
  %86 = call ptr @malloc(i32 %85)
  %87 = load ptr, ptr %82, align 8
  %88 = load i64, ptr %memberidx.i77, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %86, ptr align 8 %87, i64 %88, i1 false)
  %89 = getelementptr inbounds i8, ptr %86, i64 %88
  store i8 0, ptr %89, align 1
  %90 = alloca ptr, align 8
  %91 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %90, ptr nonnull @212, ptr %86)
  %92 = load ptr, ptr %90, align 8
  %93 = tail call ptr @malloc(i32 24)
  store ptr %92, ptr %93, align 8
  %memberidx1.i78 = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  store i64 %91, ptr %memberidx1.i78, align 4
  %memberidx2.i79 = getelementptr inbounds %String, ptr %93, i64 0, i32 2
  store i64 %91, ptr %memberidx2.i79, align 4
  tail call void @free(ptr %86)
  %94 = load ptr, ptr %memberidx, align 8
  %95 = load ptr, ptr %94, align 8
  %memberidx.i80 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %96 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i81 = getelementptr inbounds %Compiler, ptr %96, i64 0, i32 5
  %97 = load ptr, ptr %memberidx1.i81, align 8
  %98 = call ptr @malloc(i32 24)
  store i64 5, ptr %98, align 4
  %memberidx1.i.i82 = getelementptr inbounds %FloError, ptr %98, i64 0, i32 2
  store ptr %95, ptr %memberidx1.i.i82, align 8
  %memberidx2.i.i83 = getelementptr inbounds %FloError, ptr %98, i64 0, i32 1
  store ptr %93, ptr %memberidx2.i.i83, align 8
  %memberidx.i.i84 = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 1
  %99 = load i64, ptr %memberidx.i.i84, align 4
  %memberidx1.i2.i85 = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 2
  %100 = load i64, ptr %memberidx1.i2.i85, align 4
  %.not.i.i86 = icmp slt i64 %99, %100
  br i1 %.not.i.i86, label %if.entry22.TypeChecker_error.exit89_crit_edge, label %if.entry.i.i88

if.entry22.TypeChecker_error.exit89_crit_edge:    ; preds = %if.entry22
  %.pre104 = load ptr, ptr %97, align 8
  br label %TypeChecker_error.exit89

if.entry.i.i88:                                   ; preds = %if.entry22
  %101 = shl nuw i64 %100, 1
  store i64 %101, ptr %memberidx1.i2.i85, align 4
  %102 = load ptr, ptr %97, align 8
  %103 = shl i64 %100, 4
  %104 = call ptr @realloc(ptr %102, i64 %103)
  store ptr %104, ptr %97, align 8
  %.pre103 = load i64, ptr %memberidx.i.i84, align 4
  br label %TypeChecker_error.exit89

TypeChecker_error.exit89:                         ; preds = %if.entry22.TypeChecker_error.exit89_crit_edge, %if.entry.i.i88
  %105 = phi ptr [ %.pre104, %if.entry22.TypeChecker_error.exit89_crit_edge ], [ %104, %if.entry.i.i88 ]
  %106 = phi i64 [ %99, %if.entry22.TypeChecker_error.exit89_crit_edge ], [ %.pre103, %if.entry.i.i88 ]
  %107 = add nsw i64 %106, 1
  store i64 %107, ptr %memberidx.i.i84, align 4
  %108 = getelementptr inbounds ptr, ptr %105, i64 %106
  store ptr %98, ptr %108, align 8
  br label %common.ret

ifend24:                                          ; preds = %ifend15
  %109 = load ptr, ptr %78, align 8
  %110 = getelementptr inbounds ptr, ptr %109, i64 %75
  %111 = load ptr, ptr %110, align 8
  tail call void @free(ptr nonnull %6)
  %112 = tail call ptr @malloc(i32 41)
  %113 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %113, align 4
  %memberidx.i.i90 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i90, align 4
  %memberidx1.i.i91 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i91, align 1
  %memberidx.i92 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 3
  %114 = call ptr @malloc(i32 9)
  store i64 6, ptr %114, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %114, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  store ptr %114, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %IntExpression, ptr %113, i64 0, i32 4
  store i64 %75, ptr %memberidx1.i93, align 4
  store i1 true, ptr %memberidx1.i.i91, align 1
  store i64 8, ptr %112, align 4
  %memberidx.i.i95 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i95, align 4
  %memberidx1.i.i96 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i96, align 1
  %memberidx.i97 = getelementptr inbounds %IndexExpression, ptr %112, i64 0, i32 4
  store ptr %1, ptr %memberidx.i97, align 8
  %memberidx1.i98 = getelementptr inbounds %IndexExpression, ptr %112, i64 0, i32 5
  store ptr %113, ptr %memberidx1.i98, align 8
  %memberidx2.i99 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 3
  store ptr %111, ptr %memberidx2.i99, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend9, %2, %TypeChecker_error.exit80, %ifend24, %TypeChecker_error.exit, %if.entry7, %if.entry2
  %common.ret.op = phi ptr [ %17, %if.entry2 ], [ %19, %if.entry7 ], [ null, %TypeChecker_error.exit ], [ %51, %ifend24 ], [ null, %TypeChecker_error.exit80 ], [ null, %2 ], [ null, %ifend9 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = load i64, ptr %10, align 4
  %12 = icmp eq i64 %11, 20
  br i1 %12, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %13, %if.entry.i ], [ %10, %ifend ]
  %memberidx1.i81 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %13 = load ptr, ptr %memberidx1.i81, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend
  %.lcssa.i = phi i64 [ %11, %ifend ], [ %14, %if.entry.i ]
  %16 = icmp eq i64 %.lcssa.i, 11
  br i1 %16, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit
  %17 = tail call fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %5, ptr %1)
  br label %common.ret

ifend4:                                           ; preds = %is_object.exit
  %18 = icmp eq i64 %11, 15
  br i1 %18, label %if.entry7, label %ifend9

if.entry7:                                        ; preds = %ifend4
  %19 = tail call fastcc ptr @TypeChecker_check_tuple_index_expr(ptr %0, ptr %5, ptr %1)
  br label %common.ret

ifend9:                                           ; preds = %ifend4
  %20 = alloca %IntType, align 8
  store i64 6, ptr %20, align 8
  %memberidx.i55 = getelementptr inbounds %IntType, ptr %20, i64 0, i32 1
  store i1 false, ptr %memberidx.i55, align 8
  %memberidx10 = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 4
  %21 = load ptr, ptr %memberidx10, align 8
  %22 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %20, ptr %21)
  %23 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i57 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx1.i57, align 8
  %memberidx2.i58 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx2.i58, align 4
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend9
  %memberidx14 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 3
  %27 = load ptr, ptr %memberidx14, align 8
  %28 = load i64, ptr %27, align 4
  %29 = add i64 %28, -1
  %30 = icmp ult i64 %29, 7
  br i1 %30, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %31 = call ptr @malloc(i32 34)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(34) %31, ptr noundef nonnull align 8 dereferenceable(34) @209, i64 34, i1 false)
  %32 = call ptr @malloc(i32 24)
  store ptr %31, ptr %32, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  store i64 34, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 2
  store i64 34, ptr %memberidx2.i.i, align 4
  %33 = load ptr, ptr %memberidx10, align 8
  %34 = load ptr, ptr %33, align 8
  %35 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i60 = getelementptr inbounds %Compiler, ptr %35, i64 0, i32 5
  %36 = load ptr, ptr %memberidx1.i60, align 8
  %37 = call ptr @malloc(i32 24)
  store i64 5, ptr %37, align 4
  %memberidx1.i.i61 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 2
  store ptr %34, ptr %memberidx1.i.i61, align 8
  %memberidx2.i.i62 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 1
  store ptr %32, ptr %memberidx2.i.i62, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 2
  %39 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %38, %39
  br i1 %.not.i.i, label %if.entry15.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry15.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry15
  %.pre82 = load ptr, ptr %36, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry15
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx1.i2.i, align 4
  %41 = load ptr, ptr %36, align 8
  %42 = shl i64 %39, 4
  %43 = call ptr @realloc(ptr %41, i64 %42)
  store ptr %43, ptr %36, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry15.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %44 = phi ptr [ %.pre82, %if.entry15.TypeChecker_error.exit_crit_edge ], [ %43, %if.entry.i.i ]
  %45 = phi i64 [ %38, %if.entry15.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %46 = add nsw i64 %45, 1
  store i64 %46, ptr %memberidx.i.i, align 4
  %47 = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %37, ptr %47, align 8
  br label %common.ret

ifend17:                                          ; preds = %ifend13
  %48 = call ptr @malloc(i32 8)
  store i64 21, ptr %48, align 4
  %49 = load ptr, ptr %memberidx1, align 8
  %50 = load i64, ptr %49, align 4
  switch i64 %50, label %else28 [
    i64 13, label %if.entry22
    i64 14, label %if.entry27
  ]

if.entry22:                                       ; preds = %ifend17
  %memberidx25 = getelementptr inbounds %PointerType, ptr %49, i64 0, i32 1
  br label %ifend24

ifend24:                                          ; preds = %if.entry27, %if.entry22
  %value_type.0.in = phi ptr [ %memberidx25, %if.entry22 ], [ %memberidx30, %if.entry27 ]
  %value_type.0 = load ptr, ptr %value_type.0.in, align 8
  %51 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %51, align 4
  %memberidx.i.i63 = getelementptr inbounds %Expression, ptr %51, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i63, align 4
  %memberidx1.i.i64 = getelementptr inbounds %Expression, ptr %51, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i64, align 1
  %memberidx.i65 = getelementptr inbounds %IndexExpression, ptr %51, i64 0, i32 4
  store ptr %5, ptr %memberidx.i65, align 8
  %memberidx1.i66 = getelementptr inbounds %IndexExpression, ptr %51, i64 0, i32 5
  store ptr %22, ptr %memberidx1.i66, align 8
  %memberidx2.i67 = getelementptr inbounds %Expression, ptr %51, i64 0, i32 3
  store ptr %value_type.0, ptr %memberidx2.i67, align 8
  br label %common.ret

if.entry27:                                       ; preds = %ifend17
  %memberidx30 = getelementptr inbounds %ArrayType, ptr %49, i64 0, i32 1
  br label %ifend24

else28:                                           ; preds = %ifend17
  %52 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %49)
  %memberidx.i68 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  %53 = load i64, ptr %memberidx.i68, align 4
  %54 = trunc i64 %53 to i32
  %55 = add i32 %54, 1
  %56 = call ptr @malloc(i32 %55)
  %57 = load ptr, ptr %52, align 8
  %58 = load i64, ptr %memberidx.i68, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %56, ptr align 8 %57, i64 %58, i1 false)
  %59 = getelementptr inbounds i8, ptr %56, i64 %58
  store i8 0, ptr %59, align 1
  %60 = alloca ptr, align 8
  %61 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %60, ptr nonnull @213, ptr %56)
  %62 = load ptr, ptr %60, align 8
  %63 = tail call ptr @malloc(i32 24)
  store ptr %62, ptr %63, align 8
  %memberidx1.i69 = getelementptr inbounds %String, ptr %63, i64 0, i32 1
  store i64 %61, ptr %memberidx1.i69, align 4
  %memberidx2.i70 = getelementptr inbounds %String, ptr %63, i64 0, i32 2
  store i64 %61, ptr %memberidx2.i70, align 4
  tail call void @free(ptr %56)
  %64 = load ptr, ptr %1, align 8
  %65 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i72 = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 5
  %66 = load ptr, ptr %memberidx1.i72, align 8
  %67 = call ptr @malloc(i32 24)
  store i64 5, ptr %67, align 4
  %memberidx1.i.i73 = getelementptr inbounds %FloError, ptr %67, i64 0, i32 2
  store ptr %64, ptr %memberidx1.i.i73, align 8
  %memberidx2.i.i74 = getelementptr inbounds %FloError, ptr %67, i64 0, i32 1
  store ptr %63, ptr %memberidx2.i.i74, align 8
  %memberidx.i.i75 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 1
  %68 = load i64, ptr %memberidx.i.i75, align 4
  %memberidx1.i2.i76 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 2
  %69 = load i64, ptr %memberidx1.i2.i76, align 4
  %.not.i.i77 = icmp slt i64 %68, %69
  br i1 %.not.i.i77, label %else28.TypeChecker_error.exit80_crit_edge, label %if.entry.i.i79

else28.TypeChecker_error.exit80_crit_edge:        ; preds = %else28
  %.pre84 = load ptr, ptr %66, align 8
  br label %TypeChecker_error.exit80

if.entry.i.i79:                                   ; preds = %else28
  %70 = shl nuw i64 %69, 1
  store i64 %70, ptr %memberidx1.i2.i76, align 4
  %71 = load ptr, ptr %66, align 8
  %72 = shl i64 %69, 4
  %73 = call ptr @realloc(ptr %71, i64 %72)
  store ptr %73, ptr %66, align 8
  %.pre83 = load i64, ptr %memberidx.i.i75, align 4
  br label %TypeChecker_error.exit80

TypeChecker_error.exit80:                         ; preds = %else28.TypeChecker_error.exit80_crit_edge, %if.entry.i.i79
  %74 = phi ptr [ %.pre84, %else28.TypeChecker_error.exit80_crit_edge ], [ %73, %if.entry.i.i79 ]
  %75 = phi i64 [ %68, %else28.TypeChecker_error.exit80_crit_edge ], [ %.pre83, %if.entry.i.i79 ]
  %76 = add nsw i64 %75, 1
  store i64 %76, ptr %memberidx.i.i75, align 4
  %77 = getelementptr inbounds ptr, ptr %74, i64 %75
  store ptr %67, ptr %77, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_block(ptr %0, ptr nocapture readonly %1, ptr readonly %2, i1 %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 19)
  %6 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_Statement_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Statement_, ptr %6, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %6, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %6, ptr %5, align 8
  %memberidx3.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 1
  %memberidx4.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 2
  %memberidx5.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 3
  %memberidx6.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 4
  %.not = icmp eq ptr %2, null
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(11) %memberidx3.i, i8 0, i64 11, i1 false)
  br i1 %.not, label %false_block, label %end

false_block:                                      ; preds = %4
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %memberidx.i, align 8
  %9 = load i64, ptr %8, align 4
  %10 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %9)
  %memberidx2.i76 = getelementptr inbounds %Scope, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx.i, align 8
  store ptr %11, ptr %memberidx2.i76, align 8
  %12 = load ptr, ptr %0, align 8
  %13 = load ptr, ptr %memberidx.i, align 8
  %14 = load ptr, ptr %12, align 8
  %15 = load i64, ptr %13, align 4
  %16 = load ptr, ptr %14, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %18, i64 0, i32 7
  %19 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %13, i64 0, i32 1
  %20 = load i64, ptr %memberidx3.i.i.i, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx4.i78 = getelementptr inbounds %Scope, ptr %23, i64 0, i32 7
  %24 = load ptr, ptr %memberidx4.i78, align 8
  %25 = load ptr, ptr %10, align 8
  %memberidx.i.i79 = getelementptr inbounds %Array_ScopeId_, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i.i79, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %24, i64 0, i32 2
  %27 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i = icmp slt i64 %26, %27
  br i1 %.not.i.i, label %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i

false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %false_block
  %.pre129 = load ptr, ptr %24, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i:                                     ; preds = %false_block
  %28 = shl nuw i64 %27, 1
  store i64 %28, ptr %memberidx1.i11.i, align 4
  %29 = load ptr, ptr %24, align 8
  %30 = shl i64 %27, 4
  %31 = tail call ptr @realloc(ptr %29, i64 %30)
  store ptr %31, ptr %24, align 8
  %.pre = load i64, ptr %memberidx.i.i79, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i
  %32 = phi ptr [ %.pre129, %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %31, %if.entry.i.i ]
  %33 = phi i64 [ %26, %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx.i.i79, align 4
  %35 = getelementptr inbounds ptr, ptr %32, i64 %33
  store ptr %25, ptr %35, align 8
  br label %end

end:                                              ; preds = %4, %TypeChecker_create_child_scope_within_current_scope.exit
  %ternary = phi ptr [ %10, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %2, %4 ]
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %36 = load ptr, ptr %ternary, align 8
  store ptr %36, ptr %memberidx, align 8
  %memberidx2 = getelementptr inbounds %BlockNode, ptr %1, i64 0, i32 1
  %37 = load ptr, ptr %memberidx2, align 8
  %38 = tail call ptr @malloc(i32 25)
  %39 = load ptr, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %Array_StatementNode_, ptr %37, i64 0, i32 1
  %40 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %38, align 1
  %memberidx1.i.i80 = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %38, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %38, i64 0, i32 3
  store ptr %39, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %38, i64 0, i32 2
  store i64 %40, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i80, align 4
  %41 = icmp slt i64 %40, 1
  br i1 %41, label %for.end.thread134, label %for.body.lr.ph

for.end.thread134:                                ; preds = %end
  tail call void @free(ptr nonnull %38)
  br label %ifend38

for.body.lr.ph:                                   ; preds = %end
  %memberidx.i84 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend34
  %42 = phi i64 [ 1, %for.body.lr.ph ], [ %64, %ifend34 ]
  %stmt_node.0116.in = phi ptr [ %39, %for.body.lr.ph ], [ %65, %ifend34 ]
  %stmt_node.0116 = load ptr, ptr %stmt_node.0116.in, align 8
  %43 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr %stmt_node.0116)
  %44 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %44, i64 0, i32 5
  %45 = load ptr, ptr %memberidx1.i85, align 8
  %memberidx2.i86 = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 1
  %46 = load i64, ptr %memberidx2.i86, align 4
  %47 = icmp sgt i64 %46, 0
  br i1 %47, label %common.ret.loopexit, label %ifend

if.entry36.thread:                                ; preds = %if.entry15, %Array_Statement____sl__.exit, %if.entry32, %if.entry27
  %memberidx5.i.sink = phi ptr [ %memberidx5.i, %if.entry32 ], [ %memberidx4.i, %if.entry27 ], [ %memberidx3.i, %Array_Statement____sl__.exit ], [ %memberidx3.i, %if.entry15 ]
  store i1 false, ptr %38, align 1
  store i1 true, ptr %memberidx5.i.sink, align 1
  tail call void @free(ptr nonnull %38)
  br label %ifend38

common.ret.loopexit:                              ; preds = %for.body
  store i1 false, ptr %38, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %ifend38
  %common.ret.op = phi ptr [ %5, %ifend38 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %for.body
  %48 = load i64, ptr %memberidx.i.i, align 4
  %49 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i = icmp slt i64 %48, %49
  br i1 %.not.i, label %ifend.Array_Statement____sl__.exit_crit_edge, label %if.entry.i

ifend.Array_Statement____sl__.exit_crit_edge:     ; preds = %ifend
  %.pre131 = load ptr, ptr %6, align 8
  br label %Array_Statement____sl__.exit

if.entry.i:                                       ; preds = %ifend
  %50 = shl nuw i64 %49, 1
  store i64 %50, ptr %memberidx1.i.i, align 4
  %51 = load ptr, ptr %6, align 8
  %52 = shl i64 %49, 4
  %53 = tail call ptr @realloc(ptr %51, i64 %52)
  store ptr %53, ptr %6, align 8
  %.pre130 = load i64, ptr %memberidx.i.i, align 4
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %ifend.Array_Statement____sl__.exit_crit_edge, %if.entry.i
  %54 = phi ptr [ %.pre131, %ifend.Array_Statement____sl__.exit_crit_edge ], [ %53, %if.entry.i ]
  %55 = phi i64 [ %48, %ifend.Array_Statement____sl__.exit_crit_edge ], [ %.pre130, %if.entry.i ]
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr %memberidx.i.i, align 4
  %57 = getelementptr inbounds ptr, ptr %54, i64 %55
  store ptr %43, ptr %57, align 8
  %58 = load i64, ptr %43, align 4
  switch i64 %58, label %ifend34 [
    i64 7, label %if.entry36.thread
    i64 0, label %if.entry11
    i64 5, label %if.entry27
    i64 6, label %if.entry32
  ]

if.entry11:                                       ; preds = %Array_Statement____sl__.exit
  %memberidx14 = getelementptr inbounds %IfStatement, ptr %43, i64 0, i32 3
  %59 = load ptr, ptr %memberidx14, align 8
  %.not75 = icmp eq ptr %59, null
  br i1 %.not75, label %ifend34, label %if.entry15

if.entry15:                                       ; preds = %if.entry11
  %memberidx18 = getelementptr inbounds %IfStatement, ptr %43, i64 0, i32 2
  %60 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %Block, ptr %60, i64 0, i32 1
  %61 = load i1, ptr %memberidx19, align 1
  %memberidx21 = getelementptr inbounds %Block, ptr %59, i64 0, i32 1
  %62 = load i1, ptr %memberidx21, align 1
  %63 = and i1 %61, %62
  br i1 %63, label %if.entry36.thread, label %ifend34

if.entry27:                                       ; preds = %Array_Statement____sl__.exit
  br label %if.entry36.thread

if.entry32:                                       ; preds = %Array_Statement____sl__.exit
  br label %if.entry36.thread

ifend34:                                          ; preds = %Array_Statement____sl__.exit, %if.entry11, %if.entry15
  %64 = add nuw nsw i64 %42, 1
  store i64 %64, ptr %memberidx1.i.i80, align 4
  %65 = getelementptr inbounds ptr, ptr %39, i64 %42
  %.not133 = icmp slt i64 %42, %40
  br i1 %.not133, label %for.body, label %if.entry36

if.entry36:                                       ; preds = %ifend34
  tail call void @free(ptr nonnull %38)
  %.pre132 = load i64, ptr %43, align 4
  %66 = icmp eq i64 %.pre132, 8
  %67 = and i1 %66, %3
  br i1 %67, label %if.entry40, label %ifend38

ifend38:                                          ; preds = %if.entry36.thread, %for.end.thread134, %if.entry40, %if.entry36
  %memberidx46 = getelementptr inbounds %Scope, ptr %ternary, i64 0, i32 5
  %68 = load ptr, ptr %memberidx46, align 8
  store ptr %68, ptr %memberidx, align 8
  br label %common.ret

if.entry40:                                       ; preds = %if.entry36
  store ptr %43, ptr %memberidx6.i, align 8
  %69 = load i64, ptr %memberidx.i.i, align 4
  %70 = add nsw i64 %69, -1
  store i64 %70, ptr %memberidx.i.i, align 4
  br label %ifend38
}

define internal fastcc void @Map_String_Generic__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_Generic_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_Generic____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_Generic____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_Generic__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_Generic_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_Generic__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @TypeChecker_check_class_body(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 21
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend54, %ifend13, %ifend10, %2, %TypeChecker_error.exit180, %for.end41, %TypeChecker_error.exit
  ret void

ifend:                                            ; preds = %2
  %8 = load ptr, ptr %0, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i182, %ifend
  %9 = phi i64 [ %.pr, %if.entry.i182 ], [ %6, %ifend ]
  %.tr11.i = phi ptr [ %10, %if.entry.i182 ], [ %5, %ifend ]
  switch i64 %9, label %get_class_from_type.exit [
    i64 20, label %if.entry.i182
    i64 11, label %if.entry3.i
  ]

if.entry.i182:                                    ; preds = %tailrecurse.i
  %memberidx1.i181 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1.i181, align 8
  %.pr = load i64, ptr %10, align 4
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i, align 8
  %12 = load ptr, ptr %8, align 8
  %13 = load i64, ptr %11, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx2.i.i183 = getelementptr inbounds %Module, ptr %16, i64 0, i32 3
  %17 = load ptr, ptr %memberidx2.i.i183, align 8
  %memberidx3.i.i184 = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %18 = load i64, ptr %memberidx3.i.i184, align 4
  %19 = load ptr, ptr %17, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %18
  %21 = load ptr, ptr %20, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i = phi ptr [ %21, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx4 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %22 = load ptr, ptr %memberidx4, align 8
  %23 = load ptr, ptr %common.ret.op.i, align 8
  store ptr %23, ptr %memberidx4, align 8
  %memberidx7 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 2
  %24 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %24, null
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %get_class_from_type.exit
  tail call fastcc void @TypeChecker_add_inherited_props_to_class(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  br label %ifend10

ifend10:                                          ; preds = %get_class_from_type.exit, %if.entry8
  tail call fastcc void @TypeChecker_declare_class_fields(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i, align 4
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend10
  tail call fastcc void @TypeChecker_declare_class_methods(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %29 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i134 = getelementptr inbounds %Compiler, ptr %29, i64 0, i32 5
  %30 = load ptr, ptr %memberidx1.i134, align 8
  %memberidx2.i135 = getelementptr inbounds %Array_FloError_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx2.i135, align 4
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %common.ret, label %for.entry

for.entry:                                        ; preds = %ifend13
  %memberidx17 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 6
  %33 = load ptr, ptr %memberidx17, align 8
  %34 = tail call ptr @malloc(i32 25)
  %35 = load ptr, ptr %33, align 8
  %memberidx1.i136 = getelementptr inbounds %Map_String_PropId_, ptr %33, i64 0, i32 1
  %36 = load i64, ptr %memberidx1.i136, align 4
  %memberidx2.i137 = getelementptr inbounds %Map_String_PropId_, ptr %33, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i137, align 4
  store i1 false, ptr %34, align 1
  %memberidx1.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %34, i64 0, i32 1
  store ptr %35, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %34, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %34, i64 0, i32 3
  store i64 %37, ptr %memberidx3.i.i, align 4
  %38 = add nsw i64 %36, -1
  store i64 %38, ptr %memberidx2.i.i, align 4
  %39 = icmp sgt i64 %36, 0
  br i1 %39, label %while.entry.i, label %MapIterator_String_PropId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %40 = phi i64 [ %43, %ifend.i ], [ %38, %for.entry ]
  %41 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %35, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %41, i64 1
  %42 = load ptr, ptr %41, align 8
  %.not.i = icmp eq ptr %42, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %43 = add nsw i64 %40, -1
  store i64 %43, ptr %memberidx2.i.i, align 4
  %44 = icmp sgt i64 %40, 0
  br i1 %44, label %while.entry.i, label %MapIterator_String_PropId__next.exit.loopexit

MapIterator_String_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %45 = phi i64 [ %43, %ifend.i ], [ %40, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %MapIterator_String_PropId__next.exit.loopexit, %for.entry
  %46 = phi i64 [ %45, %MapIterator_String_PropId__next.exit.loopexit ], [ %38, %for.entry ]
  %memberidx1.i.i.promoted198 = phi ptr [ %incdec.ptr.i, %MapIterator_String_PropId__next.exit.loopexit ], [ %35, %for.entry ]
  %storemerge185193 = add nsw i64 %37, -1
  %storemerge194 = icmp slt i64 %37, 1
  br i1 %storemerge194, label %for.end.loopexit, label %for.body

for.body:                                         ; preds = %MapIterator_String_PropId__next.exit, %MapIterator_String_PropId__next.exit150
  %47 = phi i64 [ %79, %MapIterator_String_PropId__next.exit150 ], [ %46, %MapIterator_String_PropId__next.exit ]
  %incdec.ptr.i144.lcssa200 = phi ptr [ %incdec.ptr.i144.lcssa199, %MapIterator_String_PropId__next.exit150 ], [ %memberidx1.i.i.promoted198, %MapIterator_String_PropId__next.exit ]
  %storemerge185195 = phi i64 [ %storemerge185, %MapIterator_String_PropId__next.exit150 ], [ %storemerge185193, %MapIterator_String_PropId__next.exit ]
  %prop_entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i144.lcssa200, i64 -1
  %prop_entry.0 = load ptr, ptr %prop_entry.0.in, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_PropId_, ptr %prop_entry.0, i64 0, i32 1
  %48 = load ptr, ptr %memberidx19, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %if.entry22, label %ifend24

for.cond.for.end.loopexit_crit_edge:              ; preds = %MapIterator_String_PropId__next.exit150
  store ptr %incdec.ptr.i144.lcssa199, ptr %memberidx1.i.i, align 8
  br label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.cond.for.end.loopexit_crit_edge, %MapIterator_String_PropId__next.exit
  %storemerge185.lcssa = phi i64 [ -1, %for.cond.for.end.loopexit_crit_edge ], [ %storemerge185193, %MapIterator_String_PropId__next.exit ]
  store i64 %storemerge185.lcssa, ptr %memberidx3.i.i, align 4
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %ifend33
  %.sink = phi ptr [ %34, %for.end.loopexit ], [ %memberidx36, %ifend33 ]
  store i1 true, ptr %.sink, align 1
  tail call void @free(ptr nonnull %34)
  %memberidx42 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 5
  %51 = load ptr, ptr %memberidx42, align 8
  %memberidx43188 = getelementptr inbounds %Array_ClassMethod_, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx43188, align 4
  %53 = icmp sgt i64 %52, 0
  br i1 %53, label %for.body39.lr.ph, label %for.end41

for.body39.lr.ph:                                 ; preds = %for.end
  %memberidx44 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %memberidx48 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 4
  %memberidx49 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %.pre211 = load ptr, ptr %memberidx44, align 8
  br label %for.body39

if.entry22:                                       ; preds = %for.body
  %54 = load ptr, ptr %prop_entry.0, align 8
  %55 = load ptr, ptr %0, align 8
  %memberidx.i.i = getelementptr inbounds %PropId, ptr %48, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i.i, align 8
  %57 = load ptr, ptr %55, align 8
  %58 = load i64, ptr %56, align 4
  %59 = load ptr, ptr %57, align 8
  %60 = getelementptr inbounds ptr, ptr %59, i64 %58
  %61 = load ptr, ptr %60, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %61, i64 0, i32 3
  %62 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %56, i64 0, i32 2
  %63 = load i64, ptr %memberidx3.i.i.i, align 4
  %64 = load ptr, ptr %62, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  %memberidx.i140 = getelementptr inbounds %Class, ptr %66, i64 0, i32 5
  %67 = load ptr, ptr %memberidx.i140, align 8
  %memberidx1.i141 = getelementptr inbounds %PropId, ptr %48, i64 0, i32 2
  %68 = load i64, ptr %memberidx1.i141, align 4
  %69 = load ptr, ptr %67, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %memberidx26 = getelementptr inbounds %ClassMethod, ptr %71, i64 0, i32 7
  %72 = load i1, ptr %memberidx26, align 1
  br i1 %72, label %if.entry27, label %ifend24

ifend24:                                          ; preds = %if.entry22, %for.body
  %73 = add nsw i64 %47, -1
  store i64 %73, ptr %memberidx2.i.i, align 4
  %74 = icmp sgt i64 %47, 0
  br i1 %74, label %while.entry.i146, label %MapIterator_String_PropId__next.exit150

while.entry.i146:                                 ; preds = %ifend24, %ifend.i149
  %75 = phi i64 [ %78, %ifend.i149 ], [ %73, %ifend24 ]
  %76 = phi ptr [ %incdec.ptr.i144, %ifend.i149 ], [ %incdec.ptr.i144.lcssa200, %ifend24 ]
  %incdec.ptr.i144 = getelementptr inbounds ptr, ptr %76, i64 1
  %77 = load ptr, ptr %76, align 8
  %.not.i145 = icmp eq ptr %77, null
  br i1 %.not.i145, label %ifend.i149, label %MapIterator_String_PropId__next.exit150

ifend.i149:                                       ; preds = %while.entry.i146
  %78 = add nsw i64 %75, -1
  store i64 %78, ptr %memberidx2.i.i, align 4
  %.not221 = icmp eq i64 %75, 0
  br i1 %.not221, label %MapIterator_String_PropId__next.exit150, label %while.entry.i146

MapIterator_String_PropId__next.exit150:          ; preds = %while.entry.i146, %ifend.i149, %ifend24
  %79 = phi i64 [ %73, %ifend24 ], [ %75, %while.entry.i146 ], [ -1, %ifend.i149 ]
  %incdec.ptr.i144.lcssa199 = phi ptr [ %incdec.ptr.i144.lcssa200, %ifend24 ], [ %incdec.ptr.i144, %ifend.i149 ], [ %incdec.ptr.i144, %while.entry.i146 ]
  %storemerge185 = add nsw i64 %storemerge185195, -1
  %storemerge = icmp slt i64 %storemerge185195, 1
  br i1 %storemerge, label %for.cond.for.end.loopexit_crit_edge, label %for.body

if.entry27:                                       ; preds = %if.entry22
  store ptr %incdec.ptr.i144.lcssa200, ptr %memberidx1.i.i, align 8
  store i64 %storemerge185195, ptr %memberidx3.i.i, align 4
  store i1 false, ptr %34, align 1
  %memberidx30 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 3
  %80 = load ptr, ptr %memberidx30, align 8
  %.not132 = icmp eq ptr %80, null
  br i1 %.not132, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %if.entry27
  %memberidx.i151 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  %81 = load i64, ptr %memberidx.i151, align 4
  %82 = trunc i64 %81 to i32
  %83 = add i32 %82, 1
  %84 = tail call ptr @malloc(i32 %83)
  %85 = load ptr, ptr %54, align 8
  %86 = load i64, ptr %memberidx.i151, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %84, ptr align 8 %85, i64 %86, i1 false)
  %87 = getelementptr inbounds i8, ptr %84, i64 %86
  store i8 0, ptr %87, align 1
  %88 = alloca ptr, align 8
  %89 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %88, ptr nonnull @155, ptr %84)
  %90 = load ptr, ptr %88, align 8
  %91 = tail call ptr @malloc(i32 24)
  store ptr %90, ptr %91, align 8
  %memberidx1.i152 = getelementptr inbounds %String, ptr %91, i64 0, i32 1
  store i64 %89, ptr %memberidx1.i152, align 4
  %memberidx2.i153 = getelementptr inbounds %String, ptr %91, i64 0, i32 2
  store i64 %89, ptr %memberidx2.i153, align 4
  tail call void @free(ptr %84)
  %92 = load ptr, ptr %1, align 8
  %memberidx35 = getelementptr inbounds %Token, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx35, align 8
  %94 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i155 = getelementptr inbounds %Compiler, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx1.i155, align 8
  %96 = call ptr @malloc(i32 24)
  store i64 4, ptr %96, align 4
  %memberidx1.i.i156 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 2
  store ptr %93, ptr %memberidx1.i.i156, align 8
  %memberidx2.i.i157 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 1
  store ptr %91, ptr %memberidx2.i.i157, align 8
  %memberidx.i.i158 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i.i158, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 2
  %98 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %97, %98
  br i1 %.not.i.i, label %if.entry31.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry31.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry31
  %.pre210 = load ptr, ptr %95, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry31
  %99 = shl nuw i64 %98, 1
  store i64 %99, ptr %memberidx1.i2.i, align 4
  %100 = load ptr, ptr %95, align 8
  %101 = shl i64 %98, 4
  %102 = call ptr @realloc(ptr %100, i64 %101)
  store ptr %102, ptr %95, align 8
  %.pre = load i64, ptr %memberidx.i.i158, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry31.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %103 = phi ptr [ %.pre210, %if.entry31.TypeChecker_error.exit_crit_edge ], [ %102, %if.entry.i.i ]
  %104 = phi i64 [ %97, %if.entry31.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %105 = add nsw i64 %104, 1
  store i64 %105, ptr %memberidx.i.i158, align 4
  %106 = getelementptr inbounds ptr, ptr %103, i64 %104
  store ptr %96, ptr %106, align 8
  br label %common.ret

ifend33:                                          ; preds = %if.entry27
  %memberidx36 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 10
  br label %for.end

for.body39:                                       ; preds = %for.body39.lr.ph, %for.incr40
  %107 = phi ptr [ %.pre211, %for.body39.lr.ph ], [ %119, %for.incr40 ]
  %108 = phi ptr [ %51, %for.body39.lr.ph ], [ %121, %for.incr40 ]
  %i.0189 = phi i64 [ 0, %for.body39.lr.ph ], [ %120, %for.incr40 ]
  %109 = load ptr, ptr %108, align 8
  %110 = getelementptr inbounds ptr, ptr %109, i64 %i.0189
  %111 = load ptr, ptr %110, align 8
  %112 = load ptr, ptr %111, align 8
  store ptr %112, ptr %memberidx44, align 8
  %113 = load ptr, ptr %memberidx48, align 8
  %114 = load ptr, ptr %113, align 8
  %115 = getelementptr inbounds ptr, ptr %114, i64 %i.0189
  %116 = load ptr, ptr %115, align 8
  %memberidx50 = getelementptr inbounds %ClassMethod, ptr %111, i64 0, i32 8
  %117 = load ptr, ptr %memberidx50, align 8
  store ptr %117, ptr %memberidx49, align 8
  %memberidx51 = getelementptr inbounds %ClassMethod, ptr %111, i64 0, i32 7
  %118 = load i1, ptr %memberidx51, align 1
  br i1 %118, label %for.incr40, label %ifend54

for.incr40:                                       ; preds = %for.body39, %ifend64
  %119 = phi ptr [ %112, %for.body39 ], [ %107, %ifend64 ]
  %120 = add nuw nsw i64 %i.0189, 1
  %121 = load ptr, ptr %memberidx42, align 8
  %memberidx43 = getelementptr inbounds %Array_ClassMethod_, ptr %121, i64 0, i32 1
  %122 = load i64, ptr %memberidx43, align 4
  %123 = icmp slt i64 %120, %122
  br i1 %123, label %for.body39, label %for.end41

for.end41:                                        ; preds = %for.incr40, %for.end
  store ptr %22, ptr %memberidx4, align 8
  br label %common.ret

ifend54:                                          ; preds = %for.body39
  %memberidx55 = getelementptr inbounds %ClassMethod, ptr %111, i64 0, i32 5
  %memberidx56 = getelementptr inbounds %MethodNode, ptr %116, i64 0, i32 2
  %124 = load ptr, ptr %memberidx56, align 8
  %125 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %124, ptr null, i1 false)
  store ptr %125, ptr %memberidx55, align 8
  %126 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i160 = getelementptr inbounds %Compiler, ptr %126, i64 0, i32 5
  %127 = load ptr, ptr %memberidx1.i160, align 8
  %memberidx2.i161 = getelementptr inbounds %Array_FloError_, ptr %127, i64 0, i32 1
  %128 = load i64, ptr %memberidx2.i161, align 4
  %129 = icmp sgt i64 %128, 0
  br i1 %129, label %common.ret, label %ifend59

ifend59:                                          ; preds = %ifend54
  %memberidx61 = getelementptr inbounds %Block, ptr %125, i64 0, i32 1
  %130 = load i1, ptr %memberidx61, align 1
  br i1 %130, label %ifend64, label %if.entry62

if.entry62:                                       ; preds = %ifend59
  %memberidx65 = getelementptr inbounds %ClassMethod, ptr %111, i64 0, i32 4
  %131 = load ptr, ptr %memberidx65, align 8
  %memberidx66 = getelementptr inbounds %FunctionType, ptr %131, i64 0, i32 2
  %132 = load ptr, ptr %memberidx66, align 8
  %133 = load i64, ptr %132, align 4
  %134 = icmp eq i64 %133, 10
  br i1 %134, label %if.entry68, label %else69

ifend64:                                          ; preds = %ifend59, %Array_Statement____sl__.exit
  store ptr %107, ptr %memberidx44, align 8
  %135 = load ptr, ptr %0, align 8
  %136 = load ptr, ptr %memberidx50, align 8
  %137 = load ptr, ptr %135, align 8
  %138 = load i64, ptr %136, align 4
  %139 = load ptr, ptr %137, align 8
  %140 = getelementptr inbounds ptr, ptr %139, i64 %138
  %141 = load ptr, ptr %140, align 8
  %memberidx2.i162 = getelementptr inbounds %Module, ptr %141, i64 0, i32 7
  %142 = load ptr, ptr %memberidx2.i162, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %136, i64 0, i32 1
  %143 = load i64, ptr %memberidx3.i, align 4
  %144 = load ptr, ptr %142, align 8
  %145 = getelementptr inbounds ptr, ptr %144, i64 %143
  %146 = load ptr, ptr %145, align 8
  %memberidx79 = getelementptr inbounds %Scope, ptr %146, i64 0, i32 5
  %147 = load ptr, ptr %memberidx79, align 8
  store ptr %147, ptr %memberidx49, align 8
  br label %for.incr40

if.entry68:                                       ; preds = %if.entry62
  %148 = load ptr, ptr %125, align 8
  %149 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %149, align 4
  %memberidx.i163 = getelementptr inbounds %ReturnStatement, ptr %149, i64 0, i32 1
  store ptr null, ptr %memberidx.i163, align 8
  %memberidx.i164 = getelementptr inbounds %Array_Statement_, ptr %148, i64 0, i32 1
  %150 = load i64, ptr %memberidx.i164, align 4
  %memberidx1.i165 = getelementptr inbounds %Array_Statement_, ptr %148, i64 0, i32 2
  %151 = load i64, ptr %memberidx1.i165, align 4
  %.not.i166 = icmp slt i64 %150, %151
  br i1 %.not.i166, label %if.entry68.Array_Statement____sl__.exit_crit_edge, label %if.entry.i

if.entry68.Array_Statement____sl__.exit_crit_edge: ; preds = %if.entry68
  %.pre215 = load ptr, ptr %148, align 8
  br label %Array_Statement____sl__.exit

if.entry.i:                                       ; preds = %if.entry68
  %152 = shl nuw i64 %151, 1
  store i64 %152, ptr %memberidx1.i165, align 4
  %153 = load ptr, ptr %148, align 8
  %154 = shl i64 %151, 4
  %155 = tail call ptr @realloc(ptr %153, i64 %154)
  store ptr %155, ptr %148, align 8
  %.pre214 = load i64, ptr %memberidx.i164, align 4
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %if.entry68.Array_Statement____sl__.exit_crit_edge, %if.entry.i
  %156 = phi ptr [ %.pre215, %if.entry68.Array_Statement____sl__.exit_crit_edge ], [ %155, %if.entry.i ]
  %157 = phi i64 [ %150, %if.entry68.Array_Statement____sl__.exit_crit_edge ], [ %.pre214, %if.entry.i ]
  %158 = add nsw i64 %157, 1
  store i64 %158, ptr %memberidx.i164, align 4
  %159 = getelementptr inbounds ptr, ptr %156, i64 %157
  store ptr %149, ptr %159, align 8
  br label %ifend64

else69:                                           ; preds = %if.entry62
  %160 = tail call ptr @malloc(i32 38)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(38) %160, ptr noundef nonnull align 8 dereferenceable(38) @156, i64 38, i1 false)
  %161 = tail call ptr @malloc(i32 24)
  store ptr %160, ptr %161, align 8
  %memberidx1.i.i169 = getelementptr inbounds %String, ptr %161, i64 0, i32 1
  store i64 38, ptr %memberidx1.i.i169, align 4
  %memberidx2.i.i170 = getelementptr inbounds %String, ptr %161, i64 0, i32 2
  store i64 38, ptr %memberidx2.i.i170, align 4
  %memberidx73 = getelementptr inbounds %MethodNode, ptr %116, i64 0, i32 4
  %162 = load ptr, ptr %memberidx73, align 8
  %163 = load ptr, ptr %162, align 8
  %164 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i172 = getelementptr inbounds %Compiler, ptr %164, i64 0, i32 5
  %165 = load ptr, ptr %memberidx1.i172, align 8
  %166 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %166, align 4
  %memberidx1.i.i173 = getelementptr inbounds %FloError, ptr %166, i64 0, i32 2
  store ptr %163, ptr %memberidx1.i.i173, align 8
  %memberidx2.i.i174 = getelementptr inbounds %FloError, ptr %166, i64 0, i32 1
  store ptr %161, ptr %memberidx2.i.i174, align 8
  %memberidx.i.i175 = getelementptr inbounds %Array_FloError_, ptr %165, i64 0, i32 1
  %167 = load i64, ptr %memberidx.i.i175, align 4
  %memberidx1.i2.i176 = getelementptr inbounds %Array_FloError_, ptr %165, i64 0, i32 2
  %168 = load i64, ptr %memberidx1.i2.i176, align 4
  %.not.i.i177 = icmp slt i64 %167, %168
  br i1 %.not.i.i177, label %else69.TypeChecker_error.exit180_crit_edge, label %if.entry.i.i179

else69.TypeChecker_error.exit180_crit_edge:       ; preds = %else69
  %.pre213 = load ptr, ptr %165, align 8
  br label %TypeChecker_error.exit180

if.entry.i.i179:                                  ; preds = %else69
  %169 = shl nuw i64 %168, 1
  store i64 %169, ptr %memberidx1.i2.i176, align 4
  %170 = load ptr, ptr %165, align 8
  %171 = shl i64 %168, 4
  %172 = tail call ptr @realloc(ptr %170, i64 %171)
  store ptr %172, ptr %165, align 8
  %.pre212 = load i64, ptr %memberidx.i.i175, align 4
  br label %TypeChecker_error.exit180

TypeChecker_error.exit180:                        ; preds = %else69.TypeChecker_error.exit180_crit_edge, %if.entry.i.i179
  %173 = phi ptr [ %.pre213, %else69.TypeChecker_error.exit180_crit_edge ], [ %172, %if.entry.i.i179 ]
  %174 = phi i64 [ %167, %else69.TypeChecker_error.exit180_crit_edge ], [ %.pre212, %if.entry.i.i179 ]
  %175 = add nsw i64 %174, 1
  store i64 %175, ptr %memberidx.i.i175, align 4
  %176 = getelementptr inbounds ptr, ptr %173, i64 %174
  store ptr %166, ptr %176, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %2, null
  %8 = tail call ptr @malloc(i32 1)
  store i8 64, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %9, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %9, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i, align 4
  %11 = icmp slt i64 %10, 1
  br i1 %11, label %String_starts_with.exit, label %ifend.i

ifend.i:                                          ; preds = %3
  %12 = load ptr, ptr %1, align 8
  %13 = tail call i64 @memcmp(ptr %12, ptr nonnull %8, i64 1)
  %14 = icmp eq i64 %13, 0
  br label %String_starts_with.exit

String_starts_with.exit:                          ; preds = %3, %ifend.i
  %common.ret.op.i = phi i1 [ %14, %ifend.i ], [ false, %3 ]
  %15 = or i1 %7, %common.ret.op.i
  br i1 %15, label %ifend, label %if.entry

if.entry:                                         ; preds = %String_starts_with.exit
  %memberidx.i54 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %16 = load ptr, ptr %memberidx.i54, align 8
  %17 = load i64, ptr %16, align 4
  %18 = load ptr, ptr %0, align 8
  %19 = load ptr, ptr %18, align 8
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 %17
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i.i, align 4
  %25 = trunc i64 %24 to i32
  %26 = add i32 %25, 1
  %27 = tail call ptr @malloc(i32 %26)
  %28 = load ptr, ptr %23, align 8
  %29 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %28, i64 %29, i1 false)
  %30 = getelementptr inbounds i8, ptr %27, i64 %29
  store i8 0, ptr %30, align 1
  %31 = tail call ptr @dirname(ptr %27)
  %32 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %31)
  %33 = trunc i64 %32 to i32
  %34 = tail call ptr @malloc(i32 %33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %31, i64 %32, i1 false)
  %35 = tail call ptr @malloc(i32 24)
  store ptr %34, ptr %35, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %35, i64 0, i32 1
  store i64 %32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %35, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %36 = add i32 %33, 1
  %37 = tail call ptr @malloc(i32 %36)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %34, i64 %32, i1 false)
  %38 = getelementptr inbounds i8, ptr %37, i64 %32
  store i8 0, ptr %38, align 1
  %39 = load i64, ptr %memberidx.i, align 4
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, 1
  %42 = tail call ptr @malloc(i32 %41)
  %43 = load ptr, ptr %1, align 8
  %44 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %43, i64 %44, i1 false)
  %45 = getelementptr inbounds i8, ptr %42, i64 %44
  store i8 0, ptr %45, align 1
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @8, ptr %37, ptr %42)
  %47 = load ptr, ptr %4, align 8
  %48 = call ptr @malloc(i32 24)
  store ptr %47, ptr %48, align 8
  %memberidx1.i.i56 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i56, align 4
  %memberidx2.i.i57 = getelementptr inbounds %String, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx2.i.i57, align 4
  call void @free(ptr %37)
  call void @free(ptr %42)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %ifend

ifend:                                            ; preds = %String_starts_with.exit, %if.entry
  %filepath.0 = phi ptr [ %48, %if.entry ], [ %1, %String_starts_with.exit ]
  %49 = load ptr, ptr %memberidx, align 8
  %50 = call fastcc ptr @Compiler_register_file(ptr %49, ptr nonnull %filepath.0)
  %51 = load i64, ptr %50, align 4
  %52 = load ptr, ptr %0, align 8
  %53 = load ptr, ptr %52, align 8
  %memberidx7 = getelementptr inbounds %Array_Module_, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx7, align 4
  %55 = icmp slt i64 %51, %54
  br i1 %55, label %if.entry8, label %ifend10

common.ret:                                       ; preds = %ifend27, %ifend22, %ifend15, %ifend30, %TypeChecker_error.exit, %if.entry8
  %common.ret.op = phi ptr [ %58, %if.entry8 ], [ null, %TypeChecker_error.exit ], [ %98, %ifend30 ], [ null, %ifend15 ], [ null, %ifend22 ], [ null, %ifend27 ]
  ret ptr %common.ret.op

if.entry8:                                        ; preds = %ifend
  %56 = load ptr, ptr %53, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %51
  %58 = load ptr, ptr %57, align 8
  br label %common.ret

ifend10:                                          ; preds = %ifend
  %59 = load ptr, ptr %memberidx, align 8
  %60 = call fastcc i1 @Compiler_set_current_file(ptr %59, ptr nonnull %50)
  br i1 %60, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend10
  %61 = load i64, ptr %memberidx.i, align 4
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, 1
  %64 = call ptr @malloc(i32 %63)
  %65 = load ptr, ptr %1, align 8
  %66 = load i64, ptr %memberidx.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %64, ptr align 8 %65, i64 %66, i1 false)
  %67 = getelementptr inbounds i8, ptr %64, i64 %66
  store i8 0, ptr %67, align 1
  %68 = alloca ptr, align 8
  %69 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %68, ptr nonnull @40, ptr %64)
  %70 = load ptr, ptr %68, align 8
  %71 = tail call ptr @malloc(i32 24)
  store ptr %70, ptr %71, align 8
  %memberidx1.i59 = getelementptr inbounds %String, ptr %71, i64 0, i32 1
  store i64 %69, ptr %memberidx1.i59, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %71, i64 0, i32 2
  store i64 %69, ptr %memberidx2.i, align 4
  tail call void @free(ptr %64)
  %72 = load ptr, ptr %memberidx, align 8
  %memberidx1.i61 = getelementptr inbounds %Compiler, ptr %72, i64 0, i32 5
  %73 = load ptr, ptr %memberidx1.i61, align 8
  %74 = call ptr @malloc(i32 24)
  store i64 3, ptr %74, align 4
  %memberidx1.i.i62 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i.i62, align 8
  %memberidx2.i.i63 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 1
  store ptr %71, ptr %memberidx2.i.i63, align 8
  %memberidx.i.i64 = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i.i64, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 2
  %76 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %75, %76
  br i1 %.not.i.i, label %if.entry13.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry13.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry13
  %.pre75 = load ptr, ptr %73, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry13
  %77 = shl nuw i64 %76, 1
  store i64 %77, ptr %memberidx1.i2.i, align 4
  %78 = load ptr, ptr %73, align 8
  %79 = shl i64 %76, 4
  %80 = call ptr @realloc(ptr %78, i64 %79)
  store ptr %80, ptr %73, align 8
  %.pre = load i64, ptr %memberidx.i.i64, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry13.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %81 = phi ptr [ %.pre75, %if.entry13.TypeChecker_error.exit_crit_edge ], [ %80, %if.entry.i.i ]
  %82 = phi i64 [ %75, %if.entry13.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %83 = add nsw i64 %82, 1
  store i64 %83, ptr %memberidx.i.i64, align 4
  %84 = getelementptr inbounds ptr, ptr %81, i64 %82
  store ptr %74, ptr %84, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend10
  %85 = load ptr, ptr %memberidx, align 8
  %memberidx17 = getelementptr inbounds %Compiler, ptr %85, i64 0, i32 2
  %86 = load ptr, ptr %memberidx17, align 8
  %memberidx19 = getelementptr inbounds %Compiler, ptr %85, i64 0, i32 5
  %87 = load ptr, ptr %memberidx19, align 8
  %88 = call fastcc ptr @Lexer_tokenize(ptr %86, ptr %87)
  %89 = load ptr, ptr %memberidx, align 8
  %memberidx1.i66 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 5
  %90 = load ptr, ptr %memberidx1.i66, align 8
  %memberidx2.i67 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 1
  %91 = load i64, ptr %memberidx2.i67, align 4
  %92 = icmp sgt i64 %91, 0
  br i1 %92, label %common.ret, label %ifend22

ifend22:                                          ; preds = %ifend15
  %93 = call fastcc ptr @Parser_parse(ptr %88, ptr nonnull %90)
  %94 = load ptr, ptr %memberidx, align 8
  %memberidx1.i69 = getelementptr inbounds %Compiler, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx1.i69, align 8
  %memberidx2.i70 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %96 = load i64, ptr %memberidx2.i70, align 4
  %97 = icmp sgt i64 %96, 0
  br i1 %97, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend22
  %98 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %0, ptr %93, ptr nonnull %filepath.0)
  %99 = load ptr, ptr %memberidx, align 8
  %memberidx1.i72 = getelementptr inbounds %Compiler, ptr %99, i64 0, i32 5
  %100 = load ptr, ptr %memberidx1.i72, align 8
  %memberidx2.i73 = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 1
  %101 = load i64, ptr %memberidx2.i73, align 4
  %102 = icmp sgt i64 %101, 0
  br i1 %102, label %common.ret, label %ifend30

ifend30:                                          ; preds = %ifend27
  %103 = call fastcc i1 @Compiler_set_current_file(ptr nonnull %99, ptr %6)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_fields(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 3
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx2299 = getelementptr inbounds %Array_FieldNode_, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx2299, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %6 = load i64, ptr %memberidx, align 4
  %memberidx.i166 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx21 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx82 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx89 = getelementptr inbounds %Class, ptr %1, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassField____sl__.exit
  %7 = phi ptr [ %3, %for.body.lr.ph ], [ %250, %Array_ClassField____sl__.exit ]
  %current_field_offset.0301 = phi i64 [ %6, %for.body.lr.ph ], [ %current_field_offset.1, %Array_ClassField____sl__.exit ]
  %i.0300 = phi i64 [ 0, %for.body.lr.ph ], [ %249, %Array_ClassField____sl__.exit ]
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %i.0300
  %10 = load ptr, ptr %9, align 8
  %11 = tail call ptr @malloc(i32 49)
  %memberidx.i = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 1
  %memberidx4 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %10, align 8
  %memberidx6 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx6, align 8
  store ptr %13, ptr %memberidx4, align 8
  %14 = call fastcc i1 @is_operator_overload_name(ptr %13)
  br i1 %14, label %if.entry, label %ifend

common.ret:                                       ; preds = %Array_ClassField____sl__.exit, %ifend, %if.entry54, %for.entry, %TypeChecker_error.exit277, %TypeChecker_error.exit242, %TypeChecker_error.exit223, %TypeChecker_error.exit191
  ret void

if.entry:                                         ; preds = %for.body
  %15 = load ptr, ptr %memberidx4, align 8
  %16 = call ptr @malloc(i32 75)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %16, ptr noundef nonnull align 8 dereferenceable(75) @136, i64 75, i1 false)
  %17 = call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  store i64 75, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %17, i64 0, i32 2
  store i64 75, ptr %memberidx2.i.i, align 4
  %memberidx.i163 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i163, align 4
  %19 = add nuw i64 %18, 75
  %20 = trunc i64 %19 to i32
  %21 = call ptr @malloc(i32 %20)
  %22 = load ptr, ptr %15, align 8
  %23 = load i64, ptr %memberidx.i163, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, ptr %21, i64 %23
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %24, ptr noundef nonnull align 8 dereferenceable(75) %16, i64 75, i1 false)
  %25 = call ptr @malloc(i32 24)
  store ptr %21, ptr %25, align 8
  %memberidx1.i.i164 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i.i164, align 4
  %memberidx2.i.i165 = getelementptr inbounds %String, ptr %25, i64 0, i32 2
  store i64 %19, ptr %memberidx2.i.i165, align 4
  %26 = load ptr, ptr %10, align 8
  %memberidx10 = getelementptr inbounds %Token, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx10, align 8
  %28 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i167 = getelementptr inbounds %Compiler, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i167, align 8
  %30 = call ptr @malloc(i32 24)
  store i64 1, ptr %30, align 4
  %memberidx1.i.i168 = getelementptr inbounds %FloError, ptr %30, i64 0, i32 2
  store ptr %27, ptr %memberidx1.i.i168, align 8
  %memberidx2.i.i169 = getelementptr inbounds %FloError, ptr %30, i64 0, i32 1
  store ptr %25, ptr %memberidx2.i.i169, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 2
  %32 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %31, %32
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre312 = load ptr, ptr %29, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %33 = shl nuw i64 %32, 1
  store i64 %33, ptr %memberidx1.i2.i, align 4
  %34 = load ptr, ptr %29, align 8
  %35 = shl i64 %32, 4
  %36 = call ptr @realloc(ptr %34, i64 %35)
  store ptr %36, ptr %29, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %37 = phi ptr [ %.pre312, %if.entry.TypeChecker_error.exit_crit_edge ], [ %36, %if.entry.i.i ]
  %38 = phi i64 [ %31, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %39 = add nsw i64 %38, 1
  store i64 %39, ptr %memberidx.i.i, align 4
  %40 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %30, ptr %40, align 8
  br label %ifend

ifend:                                            ; preds = %for.body, %TypeChecker_error.exit
  %memberidx11 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 2
  %memberidx12 = getelementptr inbounds %FieldNode, ptr %10, i64 0, i32 1
  %41 = load i64, ptr %memberidx12, align 4
  store i64 %41, ptr %memberidx11, align 4
  %42 = tail call ptr @malloc(i32 24)
  %43 = load ptr, ptr %1, align 8
  store i64 1, ptr %42, align 4
  %memberidx1.i170 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 1
  store ptr %43, ptr %memberidx1.i170, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  store i64 %i.0300, ptr %memberidx2.i, align 4
  store ptr %42, ptr %11, align 8
  %memberidx15 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 4
  %memberidx16 = getelementptr inbounds %FieldNode, ptr %10, i64 0, i32 3
  %44 = load ptr, ptr %memberidx16, align 8
  %45 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %44)
  store ptr %45, ptr %memberidx15, align 8
  %memberidx17 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 5
  store i64 %current_field_offset.0301, ptr %memberidx17, align 4
  %46 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i172 = getelementptr inbounds %Compiler, ptr %46, i64 0, i32 5
  %47 = load ptr, ptr %memberidx1.i172, align 8
  %memberidx2.i173 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %48 = load i64, ptr %memberidx2.i173, align 4
  %49 = icmp sgt i64 %48, 0
  br i1 %49, label %common.ret, label %ifend20

ifend20:                                          ; preds = %ifend
  %50 = load ptr, ptr %memberidx21, align 8
  %51 = load ptr, ptr %memberidx4, align 8
  %52 = call fastcc i64 @Map_String_PropId__hash_fnc(ptr %51)
  %memberidx.i174 = getelementptr inbounds %Map_String_PropId_, ptr %50, i64 0, i32 1
  %53 = load i64, ptr %memberidx.i174, align 4
  %54 = urem i64 %52, %53
  %55 = load ptr, ptr %50, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 %54
  %57 = load ptr, ptr %56, align 8
  %.not.i = icmp eq ptr %57, null
  br i1 %.not.i, label %ifend25, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend20
  %memberidx1.i.i176 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %58 = phi ptr [ %68, %else.i ], [ %55, %while.entry.i.preheader ]
  %59 = phi i64 [ %69, %else.i ], [ %53, %while.entry.i.preheader ]
  %60 = phi ptr [ %73, %else.i ], [ %57, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %71, %else.i ], [ %54, %while.entry.i.preheader ]
  %61 = load ptr, ptr %60, align 8
  %memberidx.i.i175 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i.i175, align 4
  %63 = load i64, ptr %memberidx1.i.i176, align 4
  %.not.i.i177 = icmp eq i64 %62, %63
  br i1 %.not.i.i177, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %64 = load ptr, ptr %61, align 8
  %65 = load ptr, ptr %51, align 8
  %66 = call i64 @memcmp(ptr %64, ptr %65, i64 %62)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre313 = load i64, ptr %memberidx.i174, align 4
  %.pre314 = load ptr, ptr %50, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre315.pre = load ptr, ptr %50, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre315.pre, i64 %hash.0.i
  %.pre316.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre316.pre, null
  br i1 %.not25.i, label %ifend25, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %68 = phi ptr [ %.pre314, %ifend.i.i.else.i_crit_edge ], [ %58, %while.entry.i ]
  %69 = phi i64 [ %.pre313, %ifend.i.i.else.i_crit_edge ], [ %59, %while.entry.i ]
  %70 = add nuw i64 %hash.0.i, 1
  %71 = urem i64 %70, %69
  %72 = getelementptr inbounds ptr, ptr %68, i64 %71
  %73 = load ptr, ptr %72, align 8
  %.not26.i = icmp eq ptr %73, null
  br i1 %.not26.i, label %ifend25, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre316.pre, i64 0, i32 1
  %74 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %74, null
  br i1 %.not, label %ifend25, label %if.entry23

if.entry23:                                       ; preds = %Map_String_PropId____getitem__.exit
  %memberidx26 = getelementptr inbounds %PropId, ptr %74, i64 0, i32 1
  %75 = load ptr, ptr %memberidx26, align 8
  %76 = load ptr, ptr %1, align 8
  %77 = icmp eq ptr %75, %76
  br i1 %77, label %if.entry28, label %ifend30

ifend25:                                          ; preds = %else.i, %ifend20, %while.end.i, %ifend40, %Map_String_PropId____getitem__.exit
  %memberidx53 = getelementptr inbounds %FieldNode, ptr %10, i64 0, i32 2
  %78 = load ptr, ptr %memberidx53, align 8
  %.not161 = icmp eq ptr %78, null
  br i1 %.not161, label %else55, label %if.entry54

if.entry28:                                       ; preds = %if.entry23
  %79 = load ptr, ptr %memberidx4, align 8
  %memberidx.i178 = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  %80 = load i64, ptr %memberidx.i178, align 4
  %81 = trunc i64 %80 to i32
  %82 = add i32 %81, 1
  %83 = call ptr @malloc(i32 %82)
  %84 = load ptr, ptr %79, align 8
  %85 = load i64, ptr %memberidx.i178, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %83, ptr align 8 %84, i64 %85, i1 false)
  %86 = getelementptr inbounds i8, ptr %83, i64 %85
  store i8 0, ptr %86, align 1
  %memberidx32 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %87 = load ptr, ptr %memberidx32, align 8
  %memberidx.i179 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  %88 = load i64, ptr %memberidx.i179, align 4
  %89 = trunc i64 %88 to i32
  %90 = add i32 %89, 1
  %91 = call ptr @malloc(i32 %90)
  %92 = load ptr, ptr %87, align 8
  %93 = load i64, ptr %memberidx.i179, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %91, ptr align 8 %92, i64 %93, i1 false)
  %94 = getelementptr inbounds i8, ptr %91, i64 %93
  store i8 0, ptr %94, align 1
  %95 = alloca ptr, align 8
  %96 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %95, ptr nonnull @137, ptr %83, ptr %91)
  %97 = load ptr, ptr %95, align 8
  %98 = tail call ptr @malloc(i32 24)
  store ptr %97, ptr %98, align 8
  %memberidx1.i180 = getelementptr inbounds %String, ptr %98, i64 0, i32 1
  store i64 %96, ptr %memberidx1.i180, align 4
  %memberidx2.i181 = getelementptr inbounds %String, ptr %98, i64 0, i32 2
  store i64 %96, ptr %memberidx2.i181, align 4
  tail call void @free(ptr %83)
  tail call void @free(ptr %91)
  %99 = load ptr, ptr %10, align 8
  %memberidx34 = getelementptr inbounds %Token, ptr %99, i64 0, i32 1
  %100 = load ptr, ptr %memberidx34, align 8
  %101 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i183 = getelementptr inbounds %Compiler, ptr %101, i64 0, i32 5
  %102 = load ptr, ptr %memberidx1.i183, align 8
  %103 = call ptr @malloc(i32 24)
  store i64 1, ptr %103, align 4
  %memberidx1.i.i184 = getelementptr inbounds %FloError, ptr %103, i64 0, i32 2
  store ptr %100, ptr %memberidx1.i.i184, align 8
  %memberidx2.i.i185 = getelementptr inbounds %FloError, ptr %103, i64 0, i32 1
  store ptr %98, ptr %memberidx2.i.i185, align 8
  %memberidx.i.i186 = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 1
  %104 = load i64, ptr %memberidx.i.i186, align 4
  %memberidx1.i2.i187 = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 2
  %105 = load i64, ptr %memberidx1.i2.i187, align 4
  %.not.i.i188 = icmp slt i64 %104, %105
  br i1 %.not.i.i188, label %if.entry28.TypeChecker_error.exit191_crit_edge, label %if.entry.i.i190

if.entry28.TypeChecker_error.exit191_crit_edge:   ; preds = %if.entry28
  %.pre322 = load ptr, ptr %102, align 8
  br label %TypeChecker_error.exit191

if.entry.i.i190:                                  ; preds = %if.entry28
  %106 = shl nuw i64 %105, 1
  store i64 %106, ptr %memberidx1.i2.i187, align 4
  %107 = load ptr, ptr %102, align 8
  %108 = shl i64 %105, 4
  %109 = call ptr @realloc(ptr %107, i64 %108)
  store ptr %109, ptr %102, align 8
  %.pre321 = load i64, ptr %memberidx.i.i186, align 4
  br label %TypeChecker_error.exit191

TypeChecker_error.exit191:                        ; preds = %if.entry28.TypeChecker_error.exit191_crit_edge, %if.entry.i.i190
  %110 = phi ptr [ %.pre322, %if.entry28.TypeChecker_error.exit191_crit_edge ], [ %109, %if.entry.i.i190 ]
  %111 = phi i64 [ %104, %if.entry28.TypeChecker_error.exit191_crit_edge ], [ %.pre321, %if.entry.i.i190 ]
  %112 = add nsw i64 %111, 1
  store i64 %112, ptr %memberidx.i.i186, align 4
  %113 = getelementptr inbounds ptr, ptr %110, i64 %111
  store ptr %103, ptr %113, align 8
  br label %common.ret

ifend30:                                          ; preds = %if.entry23
  %114 = load ptr, ptr %0, align 8
  %115 = load ptr, ptr %114, align 8
  %116 = load i64, ptr %75, align 4
  %117 = load ptr, ptr %115, align 8
  %118 = getelementptr inbounds ptr, ptr %117, i64 %116
  %119 = load ptr, ptr %118, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %119, i64 0, i32 3
  %120 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %75, i64 0, i32 2
  %121 = load i64, ptr %memberidx3.i.i.i, align 4
  %122 = load ptr, ptr %120, align 8
  %123 = getelementptr inbounds ptr, ptr %122, i64 %121
  %124 = load ptr, ptr %123, align 8
  %125 = load i64, ptr %74, align 4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %if.entry.i204, label %ifend.i208

if.entry.i204:                                    ; preds = %ifend30
  %memberidx1.i194 = getelementptr inbounds %Class, ptr %124, i64 0, i32 5
  %127 = load ptr, ptr %memberidx1.i194, align 8
  %memberidx2.i195 = getelementptr inbounds %PropId, ptr %74, i64 0, i32 2
  %128 = load i64, ptr %memberidx2.i195, align 4
  %129 = load ptr, ptr %127, align 8
  %130 = getelementptr inbounds ptr, ptr %129, i64 %128
  %131 = load ptr, ptr %130, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %131, i64 0, i32 4
  %memberidx3.i203 = getelementptr inbounds %ClassMethod, ptr %131, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i208:                                       ; preds = %ifend30
  %memberidx4.i = getelementptr inbounds %Class, ptr %124, i64 0, i32 4
  %132 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %74, i64 0, i32 2
  %133 = load i64, ptr %memberidx5.i, align 4
  %134 = load ptr, ptr %132, align 8
  %135 = getelementptr inbounds ptr, ptr %134, i64 %133
  %136 = load ptr, ptr %135, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %136, i64 0, i32 4
  %memberidx6.i207 = getelementptr inbounds %ClassField, ptr %136, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i204, %ifend.i208
  %common.ret.op.i193286.in = phi ptr [ %memberidx3.i, %if.entry.i204 ], [ %memberidx6.i, %ifend.i208 ]
  %common.ret.op.in.i199 = phi ptr [ %memberidx3.i203, %if.entry.i204 ], [ %memberidx6.i207, %ifend.i208 ]
  %common.ret.op.i193286 = load ptr, ptr %common.ret.op.i193286.in, align 8
  %common.ret.op.i200 = load i64, ptr %common.ret.op.in.i199, align 4
  %137 = load ptr, ptr %memberidx15, align 8
  %138 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i193286, ptr %137)
  br i1 %138, label %ifend40, label %if.entry38

if.entry38:                                       ; preds = %get_class_prop_visibility.exit
  %139 = load ptr, ptr %memberidx4, align 8
  %memberidx.i209 = getelementptr inbounds %String, ptr %139, i64 0, i32 1
  %140 = load i64, ptr %memberidx.i209, align 4
  %141 = trunc i64 %140 to i32
  %142 = add i32 %141, 1
  %143 = call ptr @malloc(i32 %142)
  %144 = load ptr, ptr %139, align 8
  %145 = load i64, ptr %memberidx.i209, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %143, ptr align 8 %144, i64 %145, i1 false)
  %146 = getelementptr inbounds i8, ptr %143, i64 %145
  store i8 0, ptr %146, align 1
  %memberidx42 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %147 = load ptr, ptr %memberidx42, align 8
  %memberidx.i210 = getelementptr inbounds %String, ptr %147, i64 0, i32 1
  %148 = load i64, ptr %memberidx.i210, align 4
  %149 = trunc i64 %148 to i32
  %150 = add i32 %149, 1
  %151 = call ptr @malloc(i32 %150)
  %152 = load ptr, ptr %147, align 8
  %153 = load i64, ptr %memberidx.i210, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %151, ptr align 8 %152, i64 %153, i1 false)
  %154 = getelementptr inbounds i8, ptr %151, i64 %153
  store i8 0, ptr %154, align 1
  %155 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i193286)
  %memberidx.i211 = getelementptr inbounds %String, ptr %155, i64 0, i32 1
  %156 = load i64, ptr %memberidx.i211, align 4
  %157 = trunc i64 %156 to i32
  %158 = add i32 %157, 1
  %159 = call ptr @malloc(i32 %158)
  %160 = load ptr, ptr %155, align 8
  %161 = load i64, ptr %memberidx.i211, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %159, ptr align 8 %160, i64 %161, i1 false)
  %162 = getelementptr inbounds i8, ptr %159, i64 %161
  store i8 0, ptr %162, align 1
  %163 = alloca ptr, align 8
  %164 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %163, ptr nonnull @138, ptr %143, ptr %151, ptr %159)
  %165 = load ptr, ptr %163, align 8
  %166 = tail call ptr @malloc(i32 24)
  store ptr %165, ptr %166, align 8
  %memberidx1.i212 = getelementptr inbounds %String, ptr %166, i64 0, i32 1
  store i64 %164, ptr %memberidx1.i212, align 4
  %memberidx2.i213 = getelementptr inbounds %String, ptr %166, i64 0, i32 2
  store i64 %164, ptr %memberidx2.i213, align 4
  tail call void @free(ptr %143)
  tail call void @free(ptr %151)
  tail call void @free(ptr %159)
  %167 = load ptr, ptr %10, align 8
  %memberidx44 = getelementptr inbounds %Token, ptr %167, i64 0, i32 1
  %168 = load ptr, ptr %memberidx44, align 8
  %169 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i215 = getelementptr inbounds %Compiler, ptr %169, i64 0, i32 5
  %170 = load ptr, ptr %memberidx1.i215, align 8
  %171 = call ptr @malloc(i32 24)
  store i64 5, ptr %171, align 4
  %memberidx1.i.i216 = getelementptr inbounds %FloError, ptr %171, i64 0, i32 2
  store ptr %168, ptr %memberidx1.i.i216, align 8
  %memberidx2.i.i217 = getelementptr inbounds %FloError, ptr %171, i64 0, i32 1
  store ptr %166, ptr %memberidx2.i.i217, align 8
  %memberidx.i.i218 = getelementptr inbounds %Array_FloError_, ptr %170, i64 0, i32 1
  %172 = load i64, ptr %memberidx.i.i218, align 4
  %memberidx1.i2.i219 = getelementptr inbounds %Array_FloError_, ptr %170, i64 0, i32 2
  %173 = load i64, ptr %memberidx1.i2.i219, align 4
  %.not.i.i220 = icmp slt i64 %172, %173
  br i1 %.not.i.i220, label %if.entry38.TypeChecker_error.exit223_crit_edge, label %if.entry.i.i222

if.entry38.TypeChecker_error.exit223_crit_edge:   ; preds = %if.entry38
  %.pre318 = load ptr, ptr %170, align 8
  br label %TypeChecker_error.exit223

if.entry.i.i222:                                  ; preds = %if.entry38
  %174 = shl nuw i64 %173, 1
  store i64 %174, ptr %memberidx1.i2.i219, align 4
  %175 = load ptr, ptr %170, align 8
  %176 = shl i64 %173, 4
  %177 = call ptr @realloc(ptr %175, i64 %176)
  store ptr %177, ptr %170, align 8
  %.pre317 = load i64, ptr %memberidx.i.i218, align 4
  br label %TypeChecker_error.exit223

TypeChecker_error.exit223:                        ; preds = %if.entry38.TypeChecker_error.exit223_crit_edge, %if.entry.i.i222
  %178 = phi ptr [ %.pre318, %if.entry38.TypeChecker_error.exit223_crit_edge ], [ %177, %if.entry.i.i222 ]
  %179 = phi i64 [ %172, %if.entry38.TypeChecker_error.exit223_crit_edge ], [ %.pre317, %if.entry.i.i222 ]
  %180 = add nsw i64 %179, 1
  store i64 %180, ptr %memberidx.i.i218, align 4
  %181 = getelementptr inbounds ptr, ptr %178, i64 %179
  store ptr %171, ptr %181, align 8
  br label %common.ret

ifend40:                                          ; preds = %get_class_prop_visibility.exit
  %182 = load i64, ptr %memberidx11, align 4
  %.not162 = icmp eq i64 %182, %common.ret.op.i200
  br i1 %.not162, label %ifend25, label %if.entry46

if.entry46:                                       ; preds = %ifend40
  %183 = load ptr, ptr %memberidx4, align 8
  %memberidx.i224 = getelementptr inbounds %String, ptr %183, i64 0, i32 1
  %184 = load i64, ptr %memberidx.i224, align 4
  %185 = trunc i64 %184 to i32
  %186 = add i32 %185, 1
  %187 = call ptr @malloc(i32 %186)
  %188 = load ptr, ptr %183, align 8
  %189 = load i64, ptr %memberidx.i224, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %187, ptr align 8 %188, i64 %189, i1 false)
  %190 = getelementptr inbounds i8, ptr %187, i64 %189
  store i8 0, ptr %190, align 1
  %memberidx50 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %191 = load ptr, ptr %memberidx50, align 8
  %memberidx.i225 = getelementptr inbounds %String, ptr %191, i64 0, i32 1
  %192 = load i64, ptr %memberidx.i225, align 4
  %193 = trunc i64 %192 to i32
  %194 = add i32 %193, 1
  %195 = call ptr @malloc(i32 %194)
  %196 = load ptr, ptr %191, align 8
  %197 = load i64, ptr %memberidx.i225, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %195, ptr align 8 %196, i64 %197, i1 false)
  %198 = getelementptr inbounds i8, ptr %195, i64 %197
  store i8 0, ptr %198, align 1
  switch i64 %common.ret.op.i200, label %ifend3.i [
    i64 1, label %if.entry.i228
    i64 2, label %if.entry1.i
  ]

if.entry.i228:                                    ; preds = %if.entry46
  %199 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %199, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  %200 = call ptr @malloc(i32 24)
  store ptr %199, ptr %200, align 8
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry46
  %201 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %201, ptr noundef nonnull align 8 dereferenceable(6) @53, i64 6, i1 false)
  %202 = call ptr @malloc(i32 24)
  store ptr %201, ptr %202, align 8
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry46
  %203 = call ptr @malloc(i32 9)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %203, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  %204 = call ptr @malloc(i32 24)
  store ptr %203, ptr %204, align 8
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i228, %if.entry1.i, %ifend3.i
  %.sink345 = phi ptr [ %200, %if.entry.i228 ], [ %202, %if.entry1.i ], [ %204, %ifend3.i ]
  %.sink344 = phi i64 [ 7, %if.entry.i228 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %.off0 = phi i32 [ 8, %if.entry.i228 ], [ 7, %if.entry1.i ], [ 10, %ifend3.i ]
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %.sink345, i64 0, i32 1
  store i64 %.sink344, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i227 = getelementptr inbounds %String, ptr %.sink345, i64 0, i32 2
  store i64 %.sink344, ptr %memberidx2.i.i.i227, align 4
  %memberidx.i230 = getelementptr inbounds %String, ptr %.sink345, i64 0, i32 1
  %205 = call ptr @malloc(i32 %.off0)
  %206 = load ptr, ptr %.sink345, align 8
  %207 = load i64, ptr %memberidx.i230, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %205, ptr align 8 %206, i64 %207, i1 false)
  %208 = getelementptr inbounds i8, ptr %205, i64 %207
  store i8 0, ptr %208, align 1
  %209 = alloca ptr, align 8
  %210 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %209, ptr nonnull @139, ptr nonnull %187, ptr nonnull %195, ptr %205)
  %211 = load ptr, ptr %209, align 8
  %212 = tail call ptr @malloc(i32 24)
  store ptr %211, ptr %212, align 8
  %memberidx1.i231 = getelementptr inbounds %String, ptr %212, i64 0, i32 1
  store i64 %210, ptr %memberidx1.i231, align 4
  %memberidx2.i232 = getelementptr inbounds %String, ptr %212, i64 0, i32 2
  store i64 %210, ptr %memberidx2.i232, align 4
  tail call void @free(ptr nonnull %187)
  tail call void @free(ptr nonnull %195)
  tail call void @free(ptr %205)
  %213 = load ptr, ptr %10, align 8
  %memberidx52 = getelementptr inbounds %Token, ptr %213, i64 0, i32 1
  %214 = load ptr, ptr %memberidx52, align 8
  %215 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i234 = getelementptr inbounds %Compiler, ptr %215, i64 0, i32 5
  %216 = load ptr, ptr %memberidx1.i234, align 8
  %217 = call ptr @malloc(i32 24)
  store i64 4, ptr %217, align 4
  %memberidx1.i.i235 = getelementptr inbounds %FloError, ptr %217, i64 0, i32 2
  store ptr %214, ptr %memberidx1.i.i235, align 8
  %memberidx2.i.i236 = getelementptr inbounds %FloError, ptr %217, i64 0, i32 1
  store ptr %212, ptr %memberidx2.i.i236, align 8
  %memberidx.i.i237 = getelementptr inbounds %Array_FloError_, ptr %216, i64 0, i32 1
  %218 = load i64, ptr %memberidx.i.i237, align 4
  %memberidx1.i2.i238 = getelementptr inbounds %Array_FloError_, ptr %216, i64 0, i32 2
  %219 = load i64, ptr %memberidx1.i2.i238, align 4
  %.not.i.i239 = icmp slt i64 %218, %219
  br i1 %.not.i.i239, label %dump_access.exit.TypeChecker_error.exit242_crit_edge, label %if.entry.i.i241

dump_access.exit.TypeChecker_error.exit242_crit_edge: ; preds = %dump_access.exit
  %.pre320 = load ptr, ptr %216, align 8
  br label %TypeChecker_error.exit242

if.entry.i.i241:                                  ; preds = %dump_access.exit
  %220 = shl nuw i64 %219, 1
  store i64 %220, ptr %memberidx1.i2.i238, align 4
  %221 = load ptr, ptr %216, align 8
  %222 = shl i64 %219, 4
  %223 = call ptr @realloc(ptr %221, i64 %222)
  store ptr %223, ptr %216, align 8
  %.pre319 = load i64, ptr %memberidx.i.i237, align 4
  br label %TypeChecker_error.exit242

TypeChecker_error.exit242:                        ; preds = %dump_access.exit.TypeChecker_error.exit242_crit_edge, %if.entry.i.i241
  %224 = phi ptr [ %.pre320, %dump_access.exit.TypeChecker_error.exit242_crit_edge ], [ %223, %if.entry.i.i241 ]
  %225 = phi i64 [ %218, %dump_access.exit.TypeChecker_error.exit242_crit_edge ], [ %.pre319, %if.entry.i.i241 ]
  %226 = add nsw i64 %225, 1
  store i64 %226, ptr %memberidx.i.i237, align 4
  %227 = getelementptr inbounds ptr, ptr %224, i64 %225
  store ptr %217, ptr %227, align 8
  br label %common.ret

if.entry54:                                       ; preds = %ifend25
  %memberidx57 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 6
  %228 = load ptr, ptr %memberidx15, align 8
  %229 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %228, ptr nonnull %78)
  store ptr %229, ptr %memberidx57, align 8
  %230 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i244 = getelementptr inbounds %Compiler, ptr %230, i64 0, i32 5
  %231 = load ptr, ptr %memberidx1.i244, align 8
  %memberidx2.i245 = getelementptr inbounds %Array_FloError_, ptr %231, i64 0, i32 1
  %232 = load i64, ptr %memberidx2.i245, align 4
  %233 = icmp sgt i64 %232, 0
  br i1 %233, label %common.ret, label %ifend62

else55:                                           ; preds = %ifend25
  store i1 false, ptr %memberidx.i, align 1
  %234 = load ptr, ptr %memberidx21, align 8
  %235 = load ptr, ptr %memberidx4, align 8
  %236 = load ptr, ptr %11, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %234, ptr %235, ptr %236)
  %237 = add nsw i64 %current_field_offset.0301, 1
  br label %ifend56

ifend56:                                          ; preds = %else55, %ifend78
  %current_field_offset.1 = phi i64 [ %current_field_offset.0301, %ifend78 ], [ %237, %else55 ]
  %238 = load ptr, ptr %memberidx89, align 8
  %memberidx.i246 = getelementptr inbounds %Array_ClassField_, ptr %238, i64 0, i32 1
  %239 = load i64, ptr %memberidx.i246, align 4
  %memberidx1.i247 = getelementptr inbounds %Array_ClassField_, ptr %238, i64 0, i32 2
  %240 = load i64, ptr %memberidx1.i247, align 4
  %.not.i248 = icmp slt i64 %239, %240
  br i1 %.not.i248, label %ifend56.Array_ClassField____sl__.exit_crit_edge, label %if.entry.i250

ifend56.Array_ClassField____sl__.exit_crit_edge:  ; preds = %ifend56
  %.pre328 = load ptr, ptr %238, align 8
  br label %Array_ClassField____sl__.exit

if.entry.i250:                                    ; preds = %ifend56
  %241 = shl nuw i64 %240, 1
  store i64 %241, ptr %memberidx1.i247, align 4
  %242 = load ptr, ptr %238, align 8
  %243 = shl i64 %240, 4
  %244 = call ptr @realloc(ptr %242, i64 %243)
  store ptr %244, ptr %238, align 8
  %.pre327 = load i64, ptr %memberidx.i246, align 4
  br label %Array_ClassField____sl__.exit

Array_ClassField____sl__.exit:                    ; preds = %ifend56.Array_ClassField____sl__.exit_crit_edge, %if.entry.i250
  %245 = phi ptr [ %.pre328, %ifend56.Array_ClassField____sl__.exit_crit_edge ], [ %244, %if.entry.i250 ]
  %246 = phi i64 [ %239, %ifend56.Array_ClassField____sl__.exit_crit_edge ], [ %.pre327, %if.entry.i250 ]
  %247 = add nsw i64 %246, 1
  store i64 %247, ptr %memberidx.i246, align 4
  %248 = getelementptr inbounds ptr, ptr %245, i64 %246
  store ptr %11, ptr %248, align 8
  %249 = add nuw nsw i64 %i.0300, 1
  %250 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FieldNode_, ptr %250, i64 0, i32 1
  %251 = load i64, ptr %memberidx2, align 4
  %252 = icmp slt i64 %249, %251
  br i1 %252, label %for.body, label %common.ret

ifend62:                                          ; preds = %if.entry54
  %253 = load ptr, ptr %memberidx15, align 8
  %memberidx65 = getelementptr inbounds %Expression, ptr %229, i64 0, i32 3
  %254 = load ptr, ptr %memberidx65, align 8
  %255 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %253, ptr %254)
  br i1 %255, label %ifend68, label %if.entry66

if.entry66:                                       ; preds = %ifend62
  %256 = load ptr, ptr %memberidx15, align 8
  %257 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %256)
  %memberidx.i252 = getelementptr inbounds %String, ptr %257, i64 0, i32 1
  %258 = load i64, ptr %memberidx.i252, align 4
  %259 = trunc i64 %258 to i32
  %260 = add i32 %259, 1
  %261 = call ptr @malloc(i32 %260)
  %262 = load ptr, ptr %257, align 8
  %263 = load i64, ptr %memberidx.i252, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %261, ptr align 8 %262, i64 %263, i1 false)
  %264 = getelementptr inbounds i8, ptr %261, i64 %263
  store i8 0, ptr %264, align 1
  %265 = load ptr, ptr %memberidx57, align 8
  %memberidx71 = getelementptr inbounds %Expression, ptr %265, i64 0, i32 3
  %266 = load ptr, ptr %memberidx71, align 8
  %267 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %266)
  %memberidx.i253 = getelementptr inbounds %String, ptr %267, i64 0, i32 1
  %268 = load i64, ptr %memberidx.i253, align 4
  %269 = trunc i64 %268 to i32
  %270 = add i32 %269, 1
  %271 = call ptr @malloc(i32 %270)
  %272 = load ptr, ptr %267, align 8
  %273 = load i64, ptr %memberidx.i253, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %271, ptr align 8 %272, i64 %273, i1 false)
  %274 = getelementptr inbounds i8, ptr %271, i64 %273
  store i8 0, ptr %274, align 1
  %275 = alloca ptr, align 8
  %276 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %275, ptr nonnull @140, ptr %261, ptr %271)
  %277 = load ptr, ptr %275, align 8
  %278 = tail call ptr @malloc(i32 24)
  store ptr %277, ptr %278, align 8
  %memberidx1.i254 = getelementptr inbounds %String, ptr %278, i64 0, i32 1
  store i64 %276, ptr %memberidx1.i254, align 4
  %memberidx2.i255 = getelementptr inbounds %String, ptr %278, i64 0, i32 2
  store i64 %276, ptr %memberidx2.i255, align 4
  tail call void @free(ptr %261)
  tail call void @free(ptr %271)
  %279 = load ptr, ptr %memberidx53, align 8
  %280 = load ptr, ptr %279, align 8
  %281 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i257 = getelementptr inbounds %Compiler, ptr %281, i64 0, i32 5
  %282 = load ptr, ptr %memberidx1.i257, align 8
  %283 = call ptr @malloc(i32 24)
  store i64 5, ptr %283, align 4
  %memberidx1.i.i258 = getelementptr inbounds %FloError, ptr %283, i64 0, i32 2
  store ptr %280, ptr %memberidx1.i.i258, align 8
  %memberidx2.i.i259 = getelementptr inbounds %FloError, ptr %283, i64 0, i32 1
  store ptr %278, ptr %memberidx2.i.i259, align 8
  %memberidx.i.i260 = getelementptr inbounds %Array_FloError_, ptr %282, i64 0, i32 1
  %284 = load i64, ptr %memberidx.i.i260, align 4
  %memberidx1.i2.i261 = getelementptr inbounds %Array_FloError_, ptr %282, i64 0, i32 2
  %285 = load i64, ptr %memberidx1.i2.i261, align 4
  %.not.i.i262 = icmp slt i64 %284, %285
  br i1 %.not.i.i262, label %if.entry66.TypeChecker_error.exit265_crit_edge, label %if.entry.i.i264

if.entry66.TypeChecker_error.exit265_crit_edge:   ; preds = %if.entry66
  %.pre324 = load ptr, ptr %282, align 8
  br label %TypeChecker_error.exit265

if.entry.i.i264:                                  ; preds = %if.entry66
  %286 = shl nuw i64 %285, 1
  store i64 %286, ptr %memberidx1.i2.i261, align 4
  %287 = load ptr, ptr %282, align 8
  %288 = shl i64 %285, 4
  %289 = call ptr @realloc(ptr %287, i64 %288)
  store ptr %289, ptr %282, align 8
  %.pre323 = load i64, ptr %memberidx.i.i260, align 4
  br label %TypeChecker_error.exit265

TypeChecker_error.exit265:                        ; preds = %if.entry66.TypeChecker_error.exit265_crit_edge, %if.entry.i.i264
  %290 = phi ptr [ %.pre324, %if.entry66.TypeChecker_error.exit265_crit_edge ], [ %289, %if.entry.i.i264 ]
  %291 = phi i64 [ %284, %if.entry66.TypeChecker_error.exit265_crit_edge ], [ %.pre323, %if.entry.i.i264 ]
  %292 = add nsw i64 %291, 1
  store i64 %292, ptr %memberidx.i.i260, align 4
  %293 = getelementptr inbounds ptr, ptr %290, i64 %291
  store ptr %283, ptr %293, align 8
  br label %ifend68

ifend68:                                          ; preds = %ifend62, %TypeChecker_error.exit265
  %294 = load ptr, ptr %memberidx57, align 8
  %memberidx75 = getelementptr inbounds %Expression, ptr %294, i64 0, i32 1
  %295 = load i1, ptr %memberidx75, align 1
  br i1 %295, label %ifend78, label %if.entry76

if.entry76:                                       ; preds = %ifend68
  %296 = call ptr @malloc(i32 45)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %296, ptr noundef nonnull align 8 dereferenceable(45) @141, i64 45, i1 false)
  %297 = call ptr @malloc(i32 24)
  store ptr %296, ptr %297, align 8
  %memberidx1.i.i266 = getelementptr inbounds %String, ptr %297, i64 0, i32 1
  store i64 45, ptr %memberidx1.i.i266, align 4
  %memberidx2.i.i267 = getelementptr inbounds %String, ptr %297, i64 0, i32 2
  store i64 45, ptr %memberidx2.i.i267, align 4
  %298 = load ptr, ptr %memberidx53, align 8
  %299 = load ptr, ptr %298, align 8
  %300 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i269 = getelementptr inbounds %Compiler, ptr %300, i64 0, i32 5
  %301 = load ptr, ptr %memberidx1.i269, align 8
  %302 = call ptr @malloc(i32 24)
  store i64 4, ptr %302, align 4
  %memberidx1.i.i270 = getelementptr inbounds %FloError, ptr %302, i64 0, i32 2
  store ptr %299, ptr %memberidx1.i.i270, align 8
  %memberidx2.i.i271 = getelementptr inbounds %FloError, ptr %302, i64 0, i32 1
  store ptr %297, ptr %memberidx2.i.i271, align 8
  %memberidx.i.i272 = getelementptr inbounds %Array_FloError_, ptr %301, i64 0, i32 1
  %303 = load i64, ptr %memberidx.i.i272, align 4
  %memberidx1.i2.i273 = getelementptr inbounds %Array_FloError_, ptr %301, i64 0, i32 2
  %304 = load i64, ptr %memberidx1.i2.i273, align 4
  %.not.i.i274 = icmp slt i64 %303, %304
  br i1 %.not.i.i274, label %if.entry76.TypeChecker_error.exit277_crit_edge, label %if.entry.i.i276

if.entry76.TypeChecker_error.exit277_crit_edge:   ; preds = %if.entry76
  %.pre326 = load ptr, ptr %301, align 8
  br label %TypeChecker_error.exit277

if.entry.i.i276:                                  ; preds = %if.entry76
  %305 = shl nuw i64 %304, 1
  store i64 %305, ptr %memberidx1.i2.i273, align 4
  %306 = load ptr, ptr %301, align 8
  %307 = shl i64 %304, 4
  %308 = call ptr @realloc(ptr %306, i64 %307)
  store ptr %308, ptr %301, align 8
  %.pre325 = load i64, ptr %memberidx.i.i272, align 4
  br label %TypeChecker_error.exit277

TypeChecker_error.exit277:                        ; preds = %if.entry76.TypeChecker_error.exit277_crit_edge, %if.entry.i.i276
  %309 = phi ptr [ %.pre326, %if.entry76.TypeChecker_error.exit277_crit_edge ], [ %308, %if.entry.i.i276 ]
  %310 = phi i64 [ %303, %if.entry76.TypeChecker_error.exit277_crit_edge ], [ %.pre325, %if.entry.i.i276 ]
  %311 = add nsw i64 %310, 1
  store i64 %311, ptr %memberidx.i.i272, align 4
  %312 = getelementptr inbounds ptr, ptr %309, i64 %310
  store ptr %302, ptr %312, align 8
  br label %common.ret

ifend78:                                          ; preds = %ifend68
  store i1 true, ptr %memberidx.i, align 1
  %313 = load ptr, ptr %memberidx82, align 8
  %314 = load ptr, ptr %memberidx4, align 8
  %315 = load ptr, ptr %11, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %313, ptr %314, ptr %315)
  br label %ifend56
}

define internal fastcc void @TypeChecker_check_module_import(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Array_Token__, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx2, align 4
  %6 = icmp sgt i64 %5, 0
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry53, %else54, %for.end, %ifend, %TypeChecker_error.exit264, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %2
  %7 = tail call ptr @malloc(i32 49)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(49) %7, ptr noundef nonnull align 8 dereferenceable(49) @107, i64 49, i1 false)
  %8 = tail call ptr @malloc(i32 24)
  store ptr %7, ptr %8, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %8, i64 0, i32 1
  store i64 49, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %8, i64 0, i32 2
  store i64 49, ptr %memberidx2.i.i, align 4
  %9 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %11 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %11, i64 0, i32 5
  %12 = load ptr, ptr %memberidx1.i, align 8
  %13 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %13, align 4
  %memberidx1.i.i115 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 2
  store ptr %10, ptr %memberidx1.i.i115, align 8
  %memberidx2.i.i116 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 1
  store ptr %8, ptr %memberidx2.i.i116, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %14 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 2
  %15 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %14, %15
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %.pre338 = load ptr, ptr %12, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %16 = shl nuw i64 %15, 1
  store i64 %16, ptr %memberidx1.i2.i, align 4
  %17 = load ptr, ptr %12, align 8
  %18 = shl i64 %15, 4
  %19 = tail call ptr @realloc(ptr %17, i64 %18)
  store ptr %19, ptr %12, align 8
  %.pre337 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %20 = phi ptr [ %.pre338, %if.entry.TypeChecker_error.exit_crit_edge ], [ %19, %if.entry.i.i ]
  %21 = phi i64 [ %14, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre337, %if.entry.i.i ]
  %22 = add nsw i64 %21, 1
  store i64 %22, ptr %memberidx.i.i, align 4
  %23 = getelementptr inbounds ptr, ptr %20, i64 %21
  store ptr %13, ptr %23, align 8
  br label %common.ret

ifend:                                            ; preds = %2
  %memberidx6 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 2
  %24 = load ptr, ptr %memberidx6, align 8
  %memberidx8 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %25 = load ptr, ptr %memberidx8, align 8
  %26 = tail call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %24, ptr %25)
  %memberidx.i117 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %27 = load ptr, ptr %memberidx.i117, align 8
  %memberidx1.i118 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 5
  %28 = load ptr, ptr %memberidx1.i118, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx2.i, align 4
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %common.ret, label %ifend11

ifend11:                                          ; preds = %ifend
  %31 = load ptr, ptr %0, align 8
  %memberidx13 = getelementptr inbounds %Module, ptr %26, i64 0, i32 5
  %32 = load ptr, ptr %memberidx13, align 8
  %33 = load ptr, ptr %31, align 8
  %34 = load i64, ptr %32, align 4
  %35 = load ptr, ptr %33, align 8
  %36 = getelementptr inbounds ptr, ptr %35, i64 %34
  %37 = load ptr, ptr %36, align 8
  %memberidx2.i119 = getelementptr inbounds %Module, ptr %37, i64 0, i32 7
  %38 = load ptr, ptr %memberidx2.i119, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %32, i64 0, i32 1
  %39 = load i64, ptr %memberidx3.i, align 4
  %40 = load ptr, ptr %38, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr %1, align 8
  %memberidx15 = getelementptr inbounds %Array_ImportClause_, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx15, align 4
  %45 = icmp sgt i64 %44, 0
  br i1 %45, label %for.entry, label %else17

else17:                                           ; preds = %ifend11
  %memberidx52 = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 2
  %46 = load ptr, ptr %memberidx52, align 8
  %.not = icmp eq ptr %46, null
  br i1 %.not, label %else54, label %if.entry53

for.entry:                                        ; preds = %ifend11
  %47 = tail call ptr @malloc(i32 25)
  %48 = load ptr, ptr %43, align 8
  %49 = load i64, ptr %memberidx15, align 4
  store i1 false, ptr %47, align 1
  %memberidx1.i.i121 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %47, i64 0, i32 1
  %memberidx2.i.i122 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %47, i64 0, i32 3
  store ptr %48, ptr %memberidx2.i.i122, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %47, i64 0, i32 2
  store i64 %49, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i121, align 4
  %50 = icmp slt i64 %49, 1
  br i1 %50, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx26 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %memberidx30 = getelementptr inbounds %Scope, ptr %42, i64 0, i32 2
  %memberidx.i.i.i150 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %memberidx34 = getelementptr inbounds %Scope, ptr %42, i64 0, i32 4
  %memberidx38 = getelementptr inbounds %Scope, ptr %42, i64 0, i32 1
  %memberidx42 = getelementptr inbounds %Scope, ptr %42, i64 0, i32 3
  %memberidx46 = getelementptr inbounds %Scope, ptr %42, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %51 = phi i64 [ 1, %for.body.lr.ph ], [ %55, %for.incr ]
  %import_clause.0302.in = phi ptr [ %48, %for.body.lr.ph ], [ %56, %for.incr ]
  %import_clause.0302 = load ptr, ptr %import_clause.0302.in, align 8
  %52 = load ptr, ptr %import_clause.0302, align 8
  %memberidx22 = getelementptr inbounds %IdentifierToken, ptr %52, i64 0, i32 2
  %53 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %ImportClause, ptr %import_clause.0302, i64 0, i32 1
  %54 = load ptr, ptr %memberidx23, align 8
  %.not108 = icmp eq ptr %54, null
  br i1 %.not108, label %end, label %true_block

for.incr:                                         ; preds = %Map_String_Generic____getitem__.exit, %if.entry47, %if.entry43, %if.entry39, %if.entry35, %if.entry31
  %55 = add nuw nsw i64 %51, 1
  store i64 %55, ptr %memberidx1.i.i121, align 4
  %56 = getelementptr inbounds ptr, ptr %48, i64 %51
  %.not351 = icmp slt i64 %51, %49
  br i1 %.not351, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %for.entry
  tail call void @free(ptr nonnull %47)
  br label %common.ret

true_block:                                       ; preds = %for.body
  %memberidx25 = getelementptr inbounds %IdentifierToken, ptr %54, i64 0, i32 2
  %57 = load ptr, ptr %memberidx25, align 8
  br label %end

end:                                              ; preds = %for.body, %true_block
  %ternary = phi ptr [ %57, %true_block ], [ %53, %for.body ]
  %58 = load ptr, ptr %memberidx26, align 8
  %59 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %53)
  %memberidx.i128 = getelementptr inbounds %Map_String_Generic_, ptr %58, i64 0, i32 1
  %60 = load i64, ptr %memberidx.i128, align 4
  %61 = urem i64 %59, %60
  %62 = load ptr, ptr %58, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8
  %.not.i = icmp eq ptr %64, null
  br i1 %.not.i, label %ifend29, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %end
  %memberidx1.i.i130 = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %65 = phi ptr [ %75, %else.i ], [ %62, %while.entry.i.preheader ]
  %66 = phi i64 [ %76, %else.i ], [ %60, %while.entry.i.preheader ]
  %67 = phi ptr [ %80, %else.i ], [ %64, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %78, %else.i ], [ %61, %while.entry.i.preheader ]
  %68 = load ptr, ptr %67, align 8
  %memberidx.i.i129 = getelementptr inbounds %String, ptr %68, i64 0, i32 1
  %69 = load i64, ptr %memberidx.i.i129, align 4
  %70 = load i64, ptr %memberidx1.i.i130, align 4
  %.not.i.i131 = icmp eq i64 %69, %70
  br i1 %.not.i.i131, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %71 = load ptr, ptr %68, align 8
  %72 = load ptr, ptr %53, align 8
  %73 = tail call i64 @memcmp(ptr %71, ptr %72, i64 %69)
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i128, align 4
  %.pre307 = load ptr, ptr %58, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre308.pre = load ptr, ptr %58, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre308.pre, i64 %hash.0.i
  %.pre309.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre309.pre, null
  br i1 %.not25.i, label %ifend29, label %Map_String_Generic____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %75 = phi ptr [ %.pre307, %ifend.i.i.else.i_crit_edge ], [ %65, %while.entry.i ]
  %76 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %66, %while.entry.i ]
  %77 = add nuw i64 %hash.0.i, 1
  %78 = urem i64 %77, %76
  %79 = getelementptr inbounds ptr, ptr %75, i64 %78
  %80 = load ptr, ptr %79, align 8
  %.not26.i = icmp eq ptr %80, null
  br i1 %.not26.i, label %ifend29, label %while.entry.i

Map_String_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_Generic_, ptr %.pre309.pre, i64 0, i32 1
  %81 = load ptr, ptr %memberidx11.i, align 8
  %.not109 = icmp eq ptr %81, null
  br i1 %.not109, label %ifend29, label %for.incr

ifend29:                                          ; preds = %else.i, %end, %while.end.i, %Map_String_Generic____getitem__.exit
  %82 = load ptr, ptr %memberidx30, align 8
  %83 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr %53)
  %memberidx.i132 = getelementptr inbounds %Map_String_ClassId_, ptr %82, i64 0, i32 1
  %84 = load i64, ptr %memberidx.i132, align 4
  %85 = urem i64 %83, %84
  %86 = load ptr, ptr %82, align 8
  %87 = getelementptr inbounds ptr, ptr %86, i64 %85
  %88 = load ptr, ptr %87, align 8
  %.not.i133 = icmp eq ptr %88, null
  br i1 %.not.i133, label %ifend33, label %while.entry.i138.preheader

while.entry.i138.preheader:                       ; preds = %ifend29
  %memberidx1.i.i136 = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  br label %while.entry.i138

while.entry.i138:                                 ; preds = %while.entry.i138.preheader, %else.i146
  %89 = phi ptr [ %99, %else.i146 ], [ %86, %while.entry.i138.preheader ]
  %90 = phi i64 [ %100, %else.i146 ], [ %84, %while.entry.i138.preheader ]
  %91 = phi ptr [ %104, %else.i146 ], [ %88, %while.entry.i138.preheader ]
  %hash.0.i134 = phi i64 [ %102, %else.i146 ], [ %85, %while.entry.i138.preheader ]
  %92 = load ptr, ptr %91, align 8
  %memberidx.i.i135 = getelementptr inbounds %String, ptr %92, i64 0, i32 1
  %93 = load i64, ptr %memberidx.i.i135, align 4
  %94 = load i64, ptr %memberidx1.i.i136, align 4
  %.not.i.i137 = icmp eq i64 %93, %94
  br i1 %.not.i.i137, label %ifend.i.i139, label %else.i146

ifend.i.i139:                                     ; preds = %while.entry.i138
  %95 = load ptr, ptr %92, align 8
  %96 = load ptr, ptr %53, align 8
  %97 = tail call i64 @memcmp(ptr %95, ptr %96, i64 %93)
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %while.end.i144, label %ifend.i.i139.else.i146_crit_edge

ifend.i.i139.else.i146_crit_edge:                 ; preds = %ifend.i.i139
  %.pre310 = load i64, ptr %memberidx.i132, align 4
  %.pre311 = load ptr, ptr %82, align 8
  br label %else.i146

while.end.i144:                                   ; preds = %ifend.i.i139
  %.pre312.pre = load ptr, ptr %82, align 8
  %.phi.trans.insert313.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre312.pre, i64 %hash.0.i134
  %.pre314.pre = load ptr, ptr %.phi.trans.insert313.phi.trans.insert, align 8
  %.not25.i143 = icmp eq ptr %.pre314.pre, null
  br i1 %.not25.i143, label %ifend33, label %Map_String_ClassId____getitem__.exit

else.i146:                                        ; preds = %ifend.i.i139.else.i146_crit_edge, %while.entry.i138
  %99 = phi ptr [ %.pre311, %ifend.i.i139.else.i146_crit_edge ], [ %89, %while.entry.i138 ]
  %100 = phi i64 [ %.pre310, %ifend.i.i139.else.i146_crit_edge ], [ %90, %while.entry.i138 ]
  %101 = add nuw i64 %hash.0.i134, 1
  %102 = urem i64 %101, %100
  %103 = getelementptr inbounds ptr, ptr %99, i64 %102
  %104 = load ptr, ptr %103, align 8
  %.not26.i145 = icmp eq ptr %104, null
  br i1 %.not26.i145, label %ifend33, label %while.entry.i138

Map_String_ClassId____getitem__.exit:             ; preds = %while.end.i144
  %memberidx11.i148 = getelementptr inbounds %MapEntry_String_ClassId_, ptr %.pre314.pre, i64 0, i32 1
  %105 = load ptr, ptr %memberidx11.i148, align 8
  %.not110 = icmp eq ptr %105, null
  br i1 %.not110, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %Map_String_ClassId____getitem__.exit
  %106 = load ptr, ptr %0, align 8
  %107 = load ptr, ptr %memberidx.i.i.i150, align 8
  %108 = load i64, ptr %107, align 4
  %109 = load ptr, ptr %106, align 8
  %110 = load ptr, ptr %109, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %108
  %112 = load ptr, ptr %111, align 8
  %memberidx1.i.i151 = getelementptr inbounds %Module, ptr %112, i64 0, i32 5
  %113 = load ptr, ptr %memberidx1.i.i151, align 8
  %114 = load i64, ptr %113, align 4
  %115 = getelementptr inbounds ptr, ptr %110, i64 %114
  %116 = load ptr, ptr %115, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %116, i64 0, i32 7
  %117 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %113, i64 0, i32 1
  %118 = load i64, ptr %memberidx3.i.i.i, align 4
  %119 = load ptr, ptr %117, align 8
  %120 = getelementptr inbounds ptr, ptr %119, i64 %118
  %121 = load ptr, ptr %120, align 8
  %memberidx.i152 = getelementptr inbounds %Scope, ptr %121, i64 0, i32 2
  %122 = load ptr, ptr %memberidx.i152, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %122, ptr %ternary, ptr nonnull %105)
  %memberidx1.i153 = getelementptr inbounds %Scope, ptr %121, i64 0, i32 1
  %123 = load ptr, ptr %memberidx1.i153, align 8
  %124 = tail call ptr @malloc(i32 24)
  %125 = load i64, ptr %105, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %105, i64 0, i32 2
  %126 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 3, ptr %124, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %124, i64 0, i32 1
  store i64 %125, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %124, i64 0, i32 2
  store i64 %126, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %123, ptr %ternary, ptr nonnull %124)
  br label %for.incr

ifend33:                                          ; preds = %else.i146, %ifend29, %while.end.i144, %Map_String_ClassId____getitem__.exit
  %127 = load ptr, ptr %memberidx34, align 8
  %128 = tail call fastcc i64 @Map_String_EnumId__hash_fnc(ptr %53)
  %memberidx.i154 = getelementptr inbounds %Map_String_EnumId_, ptr %127, i64 0, i32 1
  %129 = load i64, ptr %memberidx.i154, align 4
  %130 = urem i64 %128, %129
  %131 = load ptr, ptr %127, align 8
  %132 = getelementptr inbounds ptr, ptr %131, i64 %130
  %133 = load ptr, ptr %132, align 8
  %.not.i155 = icmp eq ptr %133, null
  br i1 %.not.i155, label %ifend37, label %while.entry.i160.preheader

while.entry.i160.preheader:                       ; preds = %ifend33
  %memberidx1.i.i158 = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  br label %while.entry.i160

while.entry.i160:                                 ; preds = %while.entry.i160.preheader, %else.i168
  %134 = phi ptr [ %144, %else.i168 ], [ %131, %while.entry.i160.preheader ]
  %135 = phi i64 [ %145, %else.i168 ], [ %129, %while.entry.i160.preheader ]
  %136 = phi ptr [ %149, %else.i168 ], [ %133, %while.entry.i160.preheader ]
  %hash.0.i156 = phi i64 [ %147, %else.i168 ], [ %130, %while.entry.i160.preheader ]
  %137 = load ptr, ptr %136, align 8
  %memberidx.i.i157 = getelementptr inbounds %String, ptr %137, i64 0, i32 1
  %138 = load i64, ptr %memberidx.i.i157, align 4
  %139 = load i64, ptr %memberidx1.i.i158, align 4
  %.not.i.i159 = icmp eq i64 %138, %139
  br i1 %.not.i.i159, label %ifend.i.i161, label %else.i168

ifend.i.i161:                                     ; preds = %while.entry.i160
  %140 = load ptr, ptr %137, align 8
  %141 = load ptr, ptr %53, align 8
  %142 = tail call i64 @memcmp(ptr %140, ptr %141, i64 %138)
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %while.end.i166, label %ifend.i.i161.else.i168_crit_edge

ifend.i.i161.else.i168_crit_edge:                 ; preds = %ifend.i.i161
  %.pre315 = load i64, ptr %memberidx.i154, align 4
  %.pre316 = load ptr, ptr %127, align 8
  br label %else.i168

while.end.i166:                                   ; preds = %ifend.i.i161
  %.pre317.pre = load ptr, ptr %127, align 8
  %.phi.trans.insert318.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre317.pre, i64 %hash.0.i156
  %.pre319.pre = load ptr, ptr %.phi.trans.insert318.phi.trans.insert, align 8
  %.not25.i165 = icmp eq ptr %.pre319.pre, null
  br i1 %.not25.i165, label %ifend37, label %Map_String_EnumId____getitem__.exit

else.i168:                                        ; preds = %ifend.i.i161.else.i168_crit_edge, %while.entry.i160
  %144 = phi ptr [ %.pre316, %ifend.i.i161.else.i168_crit_edge ], [ %134, %while.entry.i160 ]
  %145 = phi i64 [ %.pre315, %ifend.i.i161.else.i168_crit_edge ], [ %135, %while.entry.i160 ]
  %146 = add nuw i64 %hash.0.i156, 1
  %147 = urem i64 %146, %145
  %148 = getelementptr inbounds ptr, ptr %144, i64 %147
  %149 = load ptr, ptr %148, align 8
  %.not26.i167 = icmp eq ptr %149, null
  br i1 %.not26.i167, label %ifend37, label %while.entry.i160

Map_String_EnumId____getitem__.exit:              ; preds = %while.end.i166
  %memberidx11.i170 = getelementptr inbounds %MapEntry_String_EnumId_, ptr %.pre319.pre, i64 0, i32 1
  %150 = load ptr, ptr %memberidx11.i170, align 8
  %.not111 = icmp eq ptr %150, null
  br i1 %.not111, label %ifend37, label %if.entry35

if.entry35:                                       ; preds = %Map_String_EnumId____getitem__.exit
  %151 = load ptr, ptr %0, align 8
  %152 = load ptr, ptr %memberidx.i.i.i150, align 8
  %153 = load i64, ptr %152, align 4
  %154 = load ptr, ptr %151, align 8
  %155 = load ptr, ptr %154, align 8
  %156 = getelementptr inbounds ptr, ptr %155, i64 %153
  %157 = load ptr, ptr %156, align 8
  %memberidx1.i.i173 = getelementptr inbounds %Module, ptr %157, i64 0, i32 5
  %158 = load ptr, ptr %memberidx1.i.i173, align 8
  %159 = load i64, ptr %158, align 4
  %160 = getelementptr inbounds ptr, ptr %155, i64 %159
  %161 = load ptr, ptr %160, align 8
  %memberidx2.i.i.i174 = getelementptr inbounds %Module, ptr %161, i64 0, i32 7
  %162 = load ptr, ptr %memberidx2.i.i.i174, align 8
  %memberidx3.i.i.i175 = getelementptr inbounds %ScopeId, ptr %158, i64 0, i32 1
  %163 = load i64, ptr %memberidx3.i.i.i175, align 4
  %164 = load ptr, ptr %162, align 8
  %165 = getelementptr inbounds ptr, ptr %164, i64 %163
  %166 = load ptr, ptr %165, align 8
  %memberidx.i176 = getelementptr inbounds %Scope, ptr %166, i64 0, i32 4
  %167 = load ptr, ptr %memberidx.i176, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %167, ptr %ternary, ptr nonnull %150)
  %memberidx1.i177 = getelementptr inbounds %Scope, ptr %166, i64 0, i32 1
  %168 = load ptr, ptr %memberidx1.i177, align 8
  %169 = tail call ptr @malloc(i32 24)
  %170 = load i64, ptr %150, align 4
  %memberidx1.i5.i178 = getelementptr inbounds %TypeId, ptr %150, i64 0, i32 2
  %171 = load i64, ptr %memberidx1.i5.i178, align 4
  store i64 4, ptr %169, align 4
  %memberidx1.i.i.i179 = getelementptr inbounds %VarId, ptr %169, i64 0, i32 1
  store i64 %170, ptr %memberidx1.i.i.i179, align 4
  %memberidx2.i.i6.i180 = getelementptr inbounds %VarId, ptr %169, i64 0, i32 2
  store i64 %171, ptr %memberidx2.i.i6.i180, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %168, ptr %ternary, ptr nonnull %169)
  br label %for.incr

ifend37:                                          ; preds = %else.i168, %ifend33, %while.end.i166, %Map_String_EnumId____getitem__.exit
  %172 = load ptr, ptr %memberidx38, align 8
  %173 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %53)
  %memberidx.i181 = getelementptr inbounds %Map_String_VarId_, ptr %172, i64 0, i32 1
  %174 = load i64, ptr %memberidx.i181, align 4
  %175 = urem i64 %173, %174
  %176 = load ptr, ptr %172, align 8
  %177 = getelementptr inbounds ptr, ptr %176, i64 %175
  %178 = load ptr, ptr %177, align 8
  %.not.i182 = icmp eq ptr %178, null
  br i1 %.not.i182, label %ifend41, label %while.entry.i187.preheader

while.entry.i187.preheader:                       ; preds = %ifend37
  %memberidx1.i.i185 = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  br label %while.entry.i187

while.entry.i187:                                 ; preds = %while.entry.i187.preheader, %else.i195
  %179 = phi ptr [ %189, %else.i195 ], [ %176, %while.entry.i187.preheader ]
  %180 = phi i64 [ %190, %else.i195 ], [ %174, %while.entry.i187.preheader ]
  %181 = phi ptr [ %194, %else.i195 ], [ %178, %while.entry.i187.preheader ]
  %hash.0.i183 = phi i64 [ %192, %else.i195 ], [ %175, %while.entry.i187.preheader ]
  %182 = load ptr, ptr %181, align 8
  %memberidx.i.i184 = getelementptr inbounds %String, ptr %182, i64 0, i32 1
  %183 = load i64, ptr %memberidx.i.i184, align 4
  %184 = load i64, ptr %memberidx1.i.i185, align 4
  %.not.i.i186 = icmp eq i64 %183, %184
  br i1 %.not.i.i186, label %ifend.i.i188, label %else.i195

ifend.i.i188:                                     ; preds = %while.entry.i187
  %185 = load ptr, ptr %182, align 8
  %186 = load ptr, ptr %53, align 8
  %187 = tail call i64 @memcmp(ptr %185, ptr %186, i64 %183)
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %while.end.i193, label %ifend.i.i188.else.i195_crit_edge

ifend.i.i188.else.i195_crit_edge:                 ; preds = %ifend.i.i188
  %.pre320 = load i64, ptr %memberidx.i181, align 4
  %.pre321 = load ptr, ptr %172, align 8
  br label %else.i195

while.end.i193:                                   ; preds = %ifend.i.i188
  %.pre322.pre = load ptr, ptr %172, align 8
  %.phi.trans.insert323.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre322.pre, i64 %hash.0.i183
  %.pre324.pre = load ptr, ptr %.phi.trans.insert323.phi.trans.insert, align 8
  %.not25.i192 = icmp eq ptr %.pre324.pre, null
  br i1 %.not25.i192, label %ifend41, label %Map_String_VarId____getitem__.exit

else.i195:                                        ; preds = %ifend.i.i188.else.i195_crit_edge, %while.entry.i187
  %189 = phi ptr [ %.pre321, %ifend.i.i188.else.i195_crit_edge ], [ %179, %while.entry.i187 ]
  %190 = phi i64 [ %.pre320, %ifend.i.i188.else.i195_crit_edge ], [ %180, %while.entry.i187 ]
  %191 = add nuw i64 %hash.0.i183, 1
  %192 = urem i64 %191, %190
  %193 = getelementptr inbounds ptr, ptr %189, i64 %192
  %194 = load ptr, ptr %193, align 8
  %.not26.i194 = icmp eq ptr %194, null
  br i1 %.not26.i194, label %ifend41, label %while.entry.i187

Map_String_VarId____getitem__.exit:               ; preds = %while.end.i193
  %memberidx11.i197 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre324.pre, i64 0, i32 1
  %195 = load ptr, ptr %memberidx11.i197, align 8
  %.not112 = icmp eq ptr %195, null
  br i1 %.not112, label %ifend41, label %if.entry39

if.entry39:                                       ; preds = %Map_String_VarId____getitem__.exit
  %196 = load ptr, ptr %0, align 8
  %197 = load ptr, ptr %memberidx.i.i.i150, align 8
  %198 = load i64, ptr %197, align 4
  %199 = load ptr, ptr %196, align 8
  %200 = load ptr, ptr %199, align 8
  %201 = getelementptr inbounds ptr, ptr %200, i64 %198
  %202 = load ptr, ptr %201, align 8
  %memberidx1.i.i200 = getelementptr inbounds %Module, ptr %202, i64 0, i32 5
  %203 = load ptr, ptr %memberidx1.i.i200, align 8
  %204 = load i64, ptr %203, align 4
  %205 = getelementptr inbounds ptr, ptr %200, i64 %204
  %206 = load ptr, ptr %205, align 8
  %memberidx2.i.i.i201 = getelementptr inbounds %Module, ptr %206, i64 0, i32 7
  %207 = load ptr, ptr %memberidx2.i.i.i201, align 8
  %memberidx3.i.i.i202 = getelementptr inbounds %ScopeId, ptr %203, i64 0, i32 1
  %208 = load i64, ptr %memberidx3.i.i.i202, align 4
  %209 = load ptr, ptr %207, align 8
  %210 = getelementptr inbounds ptr, ptr %209, i64 %208
  %211 = load ptr, ptr %210, align 8
  %memberidx.i203 = getelementptr inbounds %Scope, ptr %211, i64 0, i32 1
  %212 = load ptr, ptr %memberidx.i203, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %212, ptr %ternary, ptr nonnull %195)
  br label %for.incr

ifend41:                                          ; preds = %else.i195, %ifend37, %while.end.i193, %Map_String_VarId____getitem__.exit
  %213 = load ptr, ptr %memberidx42, align 8
  %214 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %53)
  %memberidx.i204 = getelementptr inbounds %Map_String_VarId_, ptr %213, i64 0, i32 1
  %215 = load i64, ptr %memberidx.i204, align 4
  %216 = urem i64 %214, %215
  %217 = load ptr, ptr %213, align 8
  %218 = getelementptr inbounds ptr, ptr %217, i64 %216
  %219 = load ptr, ptr %218, align 8
  %.not.i205 = icmp eq ptr %219, null
  br i1 %.not.i205, label %ifend45, label %while.entry.i210.preheader

while.entry.i210.preheader:                       ; preds = %ifend41
  %memberidx1.i.i208 = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  br label %while.entry.i210

while.entry.i210:                                 ; preds = %while.entry.i210.preheader, %else.i218
  %220 = phi ptr [ %230, %else.i218 ], [ %217, %while.entry.i210.preheader ]
  %221 = phi i64 [ %231, %else.i218 ], [ %215, %while.entry.i210.preheader ]
  %222 = phi ptr [ %235, %else.i218 ], [ %219, %while.entry.i210.preheader ]
  %hash.0.i206 = phi i64 [ %233, %else.i218 ], [ %216, %while.entry.i210.preheader ]
  %223 = load ptr, ptr %222, align 8
  %memberidx.i.i207 = getelementptr inbounds %String, ptr %223, i64 0, i32 1
  %224 = load i64, ptr %memberidx.i.i207, align 4
  %225 = load i64, ptr %memberidx1.i.i208, align 4
  %.not.i.i209 = icmp eq i64 %224, %225
  br i1 %.not.i.i209, label %ifend.i.i211, label %else.i218

ifend.i.i211:                                     ; preds = %while.entry.i210
  %226 = load ptr, ptr %223, align 8
  %227 = load ptr, ptr %53, align 8
  %228 = tail call i64 @memcmp(ptr %226, ptr %227, i64 %224)
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %while.end.i216, label %ifend.i.i211.else.i218_crit_edge

ifend.i.i211.else.i218_crit_edge:                 ; preds = %ifend.i.i211
  %.pre325 = load i64, ptr %memberidx.i204, align 4
  %.pre326 = load ptr, ptr %213, align 8
  br label %else.i218

while.end.i216:                                   ; preds = %ifend.i.i211
  %.pre327.pre = load ptr, ptr %213, align 8
  %.phi.trans.insert328.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre327.pre, i64 %hash.0.i206
  %.pre329.pre = load ptr, ptr %.phi.trans.insert328.phi.trans.insert, align 8
  %.not25.i215 = icmp eq ptr %.pre329.pre, null
  br i1 %.not25.i215, label %ifend45, label %Map_String_VarId____getitem__.exit222

else.i218:                                        ; preds = %ifend.i.i211.else.i218_crit_edge, %while.entry.i210
  %230 = phi ptr [ %.pre326, %ifend.i.i211.else.i218_crit_edge ], [ %220, %while.entry.i210 ]
  %231 = phi i64 [ %.pre325, %ifend.i.i211.else.i218_crit_edge ], [ %221, %while.entry.i210 ]
  %232 = add nuw i64 %hash.0.i206, 1
  %233 = urem i64 %232, %231
  %234 = getelementptr inbounds ptr, ptr %230, i64 %233
  %235 = load ptr, ptr %234, align 8
  %.not26.i217 = icmp eq ptr %235, null
  br i1 %.not26.i217, label %ifend45, label %while.entry.i210

Map_String_VarId____getitem__.exit222:            ; preds = %while.end.i216
  %memberidx11.i220 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre329.pre, i64 0, i32 1
  %236 = load ptr, ptr %memberidx11.i220, align 8
  %.not113 = icmp eq ptr %236, null
  br i1 %.not113, label %ifend45, label %if.entry43

if.entry43:                                       ; preds = %Map_String_VarId____getitem__.exit222
  %237 = load ptr, ptr %0, align 8
  %238 = load ptr, ptr %memberidx.i.i.i150, align 8
  %239 = load i64, ptr %238, align 4
  %240 = load ptr, ptr %237, align 8
  %241 = load ptr, ptr %240, align 8
  %242 = getelementptr inbounds ptr, ptr %241, i64 %239
  %243 = load ptr, ptr %242, align 8
  %memberidx1.i.i224 = getelementptr inbounds %Module, ptr %243, i64 0, i32 5
  %244 = load ptr, ptr %memberidx1.i.i224, align 8
  %245 = load i64, ptr %244, align 4
  %246 = getelementptr inbounds ptr, ptr %241, i64 %245
  %247 = load ptr, ptr %246, align 8
  %memberidx2.i.i.i225 = getelementptr inbounds %Module, ptr %247, i64 0, i32 7
  %248 = load ptr, ptr %memberidx2.i.i.i225, align 8
  %memberidx3.i.i.i226 = getelementptr inbounds %ScopeId, ptr %244, i64 0, i32 1
  %249 = load i64, ptr %memberidx3.i.i.i226, align 4
  %250 = load ptr, ptr %248, align 8
  %251 = getelementptr inbounds ptr, ptr %250, i64 %249
  %252 = load ptr, ptr %251, align 8
  %memberidx.i227 = getelementptr inbounds %Scope, ptr %252, i64 0, i32 3
  %253 = load ptr, ptr %memberidx.i227, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %253, ptr %ternary, ptr nonnull %236)
  br label %for.incr

ifend45:                                          ; preds = %else.i218, %ifend41, %while.end.i216, %Map_String_VarId____getitem__.exit222
  %254 = load ptr, ptr %memberidx46, align 8
  %255 = tail call fastcc i64 @Map_String_Type__hash_fnc(ptr %53)
  %memberidx.i228 = getelementptr inbounds %Map_String_Type_, ptr %254, i64 0, i32 1
  %256 = load i64, ptr %memberidx.i228, align 4
  %257 = urem i64 %255, %256
  %258 = load ptr, ptr %254, align 8
  %259 = getelementptr inbounds ptr, ptr %258, i64 %257
  %260 = load ptr, ptr %259, align 8
  %.not.i229 = icmp eq ptr %260, null
  br i1 %.not.i229, label %else48, label %while.entry.i234.preheader

while.entry.i234.preheader:                       ; preds = %ifend45
  %memberidx1.i.i232 = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  br label %while.entry.i234

while.entry.i234:                                 ; preds = %while.entry.i234.preheader, %else.i242
  %261 = phi ptr [ %271, %else.i242 ], [ %258, %while.entry.i234.preheader ]
  %262 = phi i64 [ %272, %else.i242 ], [ %256, %while.entry.i234.preheader ]
  %263 = phi ptr [ %276, %else.i242 ], [ %260, %while.entry.i234.preheader ]
  %hash.0.i230 = phi i64 [ %274, %else.i242 ], [ %257, %while.entry.i234.preheader ]
  %264 = load ptr, ptr %263, align 8
  %memberidx.i.i231 = getelementptr inbounds %String, ptr %264, i64 0, i32 1
  %265 = load i64, ptr %memberidx.i.i231, align 4
  %266 = load i64, ptr %memberidx1.i.i232, align 4
  %.not.i.i233 = icmp eq i64 %265, %266
  br i1 %.not.i.i233, label %ifend.i.i235, label %else.i242

ifend.i.i235:                                     ; preds = %while.entry.i234
  %267 = load ptr, ptr %264, align 8
  %268 = load ptr, ptr %53, align 8
  %269 = tail call i64 @memcmp(ptr %267, ptr %268, i64 %265)
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %while.end.i240, label %ifend.i.i235.else.i242_crit_edge

ifend.i.i235.else.i242_crit_edge:                 ; preds = %ifend.i.i235
  %.pre330 = load i64, ptr %memberidx.i228, align 4
  %.pre331 = load ptr, ptr %254, align 8
  br label %else.i242

while.end.i240:                                   ; preds = %ifend.i.i235
  %.pre332.pre = load ptr, ptr %254, align 8
  %.phi.trans.insert333.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre332.pre, i64 %hash.0.i230
  %.pre334.pre = load ptr, ptr %.phi.trans.insert333.phi.trans.insert, align 8
  %.not25.i239 = icmp eq ptr %.pre334.pre, null
  br i1 %.not25.i239, label %else48, label %Map_String_Type____getitem__.exit

else.i242:                                        ; preds = %ifend.i.i235.else.i242_crit_edge, %while.entry.i234
  %271 = phi ptr [ %.pre331, %ifend.i.i235.else.i242_crit_edge ], [ %261, %while.entry.i234 ]
  %272 = phi i64 [ %.pre330, %ifend.i.i235.else.i242_crit_edge ], [ %262, %while.entry.i234 ]
  %273 = add nuw i64 %hash.0.i230, 1
  %274 = urem i64 %273, %272
  %275 = getelementptr inbounds ptr, ptr %271, i64 %274
  %276 = load ptr, ptr %275, align 8
  %.not26.i241 = icmp eq ptr %276, null
  br i1 %.not26.i241, label %else48, label %while.entry.i234

Map_String_Type____getitem__.exit:                ; preds = %while.end.i240
  %memberidx11.i244 = getelementptr inbounds %MapEntry_String_Type_, ptr %.pre334.pre, i64 0, i32 1
  %277 = load ptr, ptr %memberidx11.i244, align 8
  %.not114 = icmp eq ptr %277, null
  br i1 %.not114, label %else48, label %if.entry47

if.entry47:                                       ; preds = %Map_String_Type____getitem__.exit
  %278 = load ptr, ptr %0, align 8
  %279 = load ptr, ptr %memberidx.i.i.i150, align 8
  %280 = load i64, ptr %279, align 4
  %281 = load ptr, ptr %278, align 8
  %282 = load ptr, ptr %281, align 8
  %283 = getelementptr inbounds ptr, ptr %282, i64 %280
  %284 = load ptr, ptr %283, align 8
  %memberidx1.i.i247 = getelementptr inbounds %Module, ptr %284, i64 0, i32 5
  %285 = load ptr, ptr %memberidx1.i.i247, align 8
  %286 = load i64, ptr %285, align 4
  %287 = getelementptr inbounds ptr, ptr %282, i64 %286
  %288 = load ptr, ptr %287, align 8
  %memberidx2.i.i.i248 = getelementptr inbounds %Module, ptr %288, i64 0, i32 7
  %289 = load ptr, ptr %memberidx2.i.i.i248, align 8
  %memberidx3.i.i.i249 = getelementptr inbounds %ScopeId, ptr %285, i64 0, i32 1
  %290 = load i64, ptr %memberidx3.i.i.i249, align 4
  %291 = load ptr, ptr %289, align 8
  %292 = getelementptr inbounds ptr, ptr %291, i64 %290
  %293 = load ptr, ptr %292, align 8
  %memberidx.i250 = getelementptr inbounds %Scope, ptr %293, i64 0, i32 6
  %294 = load ptr, ptr %memberidx.i250, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr %294, ptr %ternary, ptr nonnull %277)
  br label %for.incr

else48:                                           ; preds = %ifend45, %while.end.i240, %Map_String_Type____getitem__.exit, %else.i242
  store i1 false, ptr %47, align 1
  %memberidx.i251 = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  %295 = load i64, ptr %memberidx.i251, align 4
  %296 = trunc i64 %295 to i32
  %297 = add i32 %296, 1
  %298 = tail call ptr @malloc(i32 %297)
  %299 = load ptr, ptr %53, align 8
  %300 = load i64, ptr %memberidx.i251, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %298, ptr align 8 %299, i64 %300, i1 false)
  %301 = getelementptr inbounds i8, ptr %298, i64 %300
  store i8 0, ptr %301, align 1
  %memberidx.i252 = getelementptr inbounds %String, ptr %24, i64 0, i32 1
  %302 = load i64, ptr %memberidx.i252, align 4
  %303 = trunc i64 %302 to i32
  %304 = add i32 %303, 1
  %305 = tail call ptr @malloc(i32 %304)
  %306 = load ptr, ptr %24, align 8
  %307 = load i64, ptr %memberidx.i252, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %305, ptr align 8 %306, i64 %307, i1 false)
  %308 = getelementptr inbounds i8, ptr %305, i64 %307
  store i8 0, ptr %308, align 1
  %309 = alloca ptr, align 8
  %310 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %309, ptr nonnull @108, ptr %298, ptr %305)
  %311 = load ptr, ptr %309, align 8
  %312 = tail call ptr @malloc(i32 24)
  store ptr %311, ptr %312, align 8
  %memberidx1.i253 = getelementptr inbounds %String, ptr %312, i64 0, i32 1
  store i64 %310, ptr %memberidx1.i253, align 4
  %memberidx2.i254 = getelementptr inbounds %String, ptr %312, i64 0, i32 2
  store i64 %310, ptr %memberidx2.i254, align 4
  tail call void @free(ptr %298)
  tail call void @free(ptr %305)
  %313 = load ptr, ptr %import_clause.0302, align 8
  %memberidx51 = getelementptr inbounds %Token, ptr %313, i64 0, i32 1
  %314 = load ptr, ptr %memberidx51, align 8
  %315 = load ptr, ptr %memberidx.i117, align 8
  %memberidx1.i256 = getelementptr inbounds %Compiler, ptr %315, i64 0, i32 5
  %316 = load ptr, ptr %memberidx1.i256, align 8
  %317 = call ptr @malloc(i32 24)
  store i64 1, ptr %317, align 4
  %memberidx1.i.i257 = getelementptr inbounds %FloError, ptr %317, i64 0, i32 2
  store ptr %314, ptr %memberidx1.i.i257, align 8
  %memberidx2.i.i258 = getelementptr inbounds %FloError, ptr %317, i64 0, i32 1
  store ptr %312, ptr %memberidx2.i.i258, align 8
  %memberidx.i.i259 = getelementptr inbounds %Array_FloError_, ptr %316, i64 0, i32 1
  %318 = load i64, ptr %memberidx.i.i259, align 4
  %memberidx1.i2.i260 = getelementptr inbounds %Array_FloError_, ptr %316, i64 0, i32 2
  %319 = load i64, ptr %memberidx1.i2.i260, align 4
  %.not.i.i261 = icmp slt i64 %318, %319
  br i1 %.not.i.i261, label %else48.TypeChecker_error.exit264_crit_edge, label %if.entry.i.i263

else48.TypeChecker_error.exit264_crit_edge:       ; preds = %else48
  %.pre336 = load ptr, ptr %316, align 8
  br label %TypeChecker_error.exit264

if.entry.i.i263:                                  ; preds = %else48
  %320 = shl nuw i64 %319, 1
  store i64 %320, ptr %memberidx1.i2.i260, align 4
  %321 = load ptr, ptr %316, align 8
  %322 = shl i64 %319, 4
  %323 = call ptr @realloc(ptr %321, i64 %322)
  store ptr %323, ptr %316, align 8
  %.pre335 = load i64, ptr %memberidx.i.i259, align 4
  br label %TypeChecker_error.exit264

TypeChecker_error.exit264:                        ; preds = %else48.TypeChecker_error.exit264_crit_edge, %if.entry.i.i263
  %324 = phi ptr [ %.pre336, %else48.TypeChecker_error.exit264_crit_edge ], [ %323, %if.entry.i.i263 ]
  %325 = phi i64 [ %318, %else48.TypeChecker_error.exit264_crit_edge ], [ %.pre335, %if.entry.i.i263 ]
  %326 = add nsw i64 %325, 1
  store i64 %326, ptr %memberidx.i.i259, align 4
  %327 = getelementptr inbounds ptr, ptr %324, i64 %325
  store ptr %317, ptr %327, align 8
  br label %common.ret

if.entry53:                                       ; preds = %else17
  %memberidx57 = getelementptr inbounds %IdentifierToken, ptr %46, i64 0, i32 2
  %328 = load ptr, ptr %memberidx57, align 8
  %memberidx.i.i265 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %329 = load ptr, ptr %memberidx.i.i265, align 8
  %330 = load i64, ptr %329, align 4
  %331 = getelementptr inbounds ptr, ptr %35, i64 %330
  %332 = load ptr, ptr %331, align 8
  %memberidx1.i266 = getelementptr inbounds %Module, ptr %332, i64 0, i32 5
  %333 = load ptr, ptr %memberidx1.i266, align 8
  %334 = load i64, ptr %333, align 4
  %335 = getelementptr inbounds ptr, ptr %35, i64 %334
  %336 = load ptr, ptr %335, align 8
  %memberidx2.i.i267 = getelementptr inbounds %Module, ptr %336, i64 0, i32 7
  %337 = load ptr, ptr %memberidx2.i.i267, align 8
  %memberidx3.i.i268 = getelementptr inbounds %ScopeId, ptr %333, i64 0, i32 1
  %338 = load i64, ptr %memberidx3.i.i268, align 4
  %339 = load ptr, ptr %337, align 8
  %340 = getelementptr inbounds ptr, ptr %339, i64 %338
  %341 = load ptr, ptr %340, align 8
  %memberidx58 = getelementptr inbounds %Scope, ptr %341, i64 0, i32 1
  %342 = load ptr, ptr %memberidx58, align 8
  %343 = tail call ptr @malloc(i32 32)
  %344 = load ptr, ptr %42, align 8
  %345 = load i64, ptr %344, align 4
  %memberidx1.i269 = getelementptr inbounds %ScopeId, ptr %344, i64 0, i32 1
  %346 = load i64, ptr %memberidx1.i269, align 4
  store i64 5, ptr %343, align 4
  %memberidx1.i.i270 = getelementptr inbounds %VarId, ptr %343, i64 0, i32 1
  store i64 %345, ptr %memberidx1.i.i270, align 4
  %memberidx2.i.i271 = getelementptr inbounds %VarId, ptr %343, i64 0, i32 2
  store i64 %346, ptr %memberidx2.i.i271, align 4
  %memberidx2.i272 = getelementptr inbounds %ModuleVarId, ptr %343, i64 0, i32 3
  store ptr %344, ptr %memberidx2.i272, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %342, ptr %328, ptr nonnull %343)
  br label %common.ret

else54:                                           ; preds = %else17
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %26)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %TypeChecker_error.exit391, %if.entry84, %if.entry79, %TypeChecker_error.exit360, %Array_Expression____sl__.exit, %TypeChecker_error.exit295, %TypeChecker_error.exit267, %TypeChecker_error.exit257, %TypeChecker_error.exit195, %TypeChecker_error.exit, %ifend6
  %common.ret.op = phi ptr [ %17, %ifend6 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit195 ], [ null, %TypeChecker_error.exit257 ], [ null, %TypeChecker_error.exit267 ], [ null, %TypeChecker_error.exit295 ], [ %323, %Array_Expression____sl__.exit ], [ null, %TypeChecker_error.exit360 ], [ %385, %if.entry79 ], [ %395, %if.entry84 ], [ null, %TypeChecker_error.exit391 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx3, align 8
  %13 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %13, align 4
  %14 = load i64, ptr %10, align 4
  switch i64 %14, label %else85 [
    i64 20, label %if.entry.i2
    i64 11, label %if.entry3.i
    i64 17, label %if.entry25
    i64 13, label %if.entry54
    i64 14, label %if.entry76
    i64 18, label %if.entry84
  ]

if.entry.i2:                                      ; preds = %ifend, %if.entry.i2
  %.tr5.i = phi ptr [ %15, %if.entry.i2 ], [ %10, %ifend ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %15 = load ptr, ptr %memberidx1.i1, align 8
  %16 = load i64, ptr %15, align 4
  switch i64 %16, label %else85 [
    i64 20, label %if.entry.i2
    i64 11, label %while.entry
  ]

ifend6:                                           ; preds = %if.entry76, %ifend.i367, %get_class_prop_type.exit281, %ifend49, %get_class_prop_type.exit
  %prop_ty.0 = phi ptr [ %common.ret.op.i197, %get_class_prop_type.exit ], [ %common.ret.op.i272, %get_class_prop_type.exit281 ], [ %309, %ifend49 ], [ %13, %ifend.i367 ], [ %13, %if.entry76 ]
  %prop_id.0 = phi ptr [ %56, %get_class_prop_type.exit ], [ %169, %get_class_prop_type.exit281 ], [ %199, %ifend49 ], [ null, %ifend.i367 ], [ null, %if.entry76 ]
  %17 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %17, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i171 = getelementptr inbounds %MemberExpression, ptr %17, i64 0, i32 4
  store ptr %5, ptr %memberidx.i171, align 8
  %memberidx1.i172 = getelementptr inbounds %MemberExpression, ptr %17, i64 0, i32 5
  store ptr %prop_id.0, ptr %memberidx1.i172, align 8
  %memberidx2.i173 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  store ptr %prop_ty.0, ptr %memberidx2.i173, align 8
  br label %common.ret

while.entry:                                      ; preds = %if.entry.i2, %while.entry
  %prop_owner_type.0 = phi ptr [ %18, %while.entry ], [ %10, %if.entry.i2 ]
  %memberidx8 = getelementptr inbounds %GenericType, ptr %prop_owner_type.0, i64 0, i32 3
  %18 = load ptr, ptr %memberidx8, align 8
  %19 = load i64, ptr %18, align 4
  %20 = icmp eq i64 %19, 20
  br i1 %20, label %while.entry, label %if.entry3.i

if.entry3.i:                                      ; preds = %while.entry, %ifend
  %prop_owner_type.1 = phi ptr [ %10, %ifend ], [ %18, %while.entry ]
  %21 = load ptr, ptr %0, align 8
  %memberidx6.i7 = getelementptr inbounds %ObjectType, ptr %prop_owner_type.1, i64 0, i32 1
  %22 = load ptr, ptr %memberidx6.i7, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = load i64, ptr %22, align 4
  %25 = load ptr, ptr %23, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  %memberidx2.i.i8 = getelementptr inbounds %Module, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx2.i.i8, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %29 = load i64, ptr %memberidx3.i.i, align 4
  %30 = load ptr, ptr %28, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %29
  %32 = load ptr, ptr %31, align 8
  %memberidx11 = getelementptr inbounds %Class, ptr %32, i64 0, i32 6
  %33 = load ptr, ptr %memberidx11, align 8
  %34 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i174 = getelementptr inbounds %Map_String_PropId_, ptr %33, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i174, align 4
  %36 = urem i64 %34, %35
  %37 = load ptr, ptr %33, align 8
  %38 = getelementptr inbounds ptr, ptr %37, i64 %36
  %39 = load ptr, ptr %38, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %if.entry12, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i176 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %40 = phi ptr [ %50, %else.i ], [ %37, %while.entry.i.preheader ]
  %41 = phi i64 [ %51, %else.i ], [ %35, %while.entry.i.preheader ]
  %42 = phi ptr [ %55, %else.i ], [ %39, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %53, %else.i ], [ %36, %while.entry.i.preheader ]
  %43 = load ptr, ptr %42, align 8
  %memberidx.i.i175 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i.i175, align 4
  %45 = load i64, ptr %memberidx1.i.i176, align 4
  %.not.i.i = icmp eq i64 %44, %45
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %46 = load ptr, ptr %43, align 8
  %47 = load ptr, ptr %12, align 8
  %48 = tail call i64 @memcmp(ptr %46, ptr %47, i64 %44)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i174, align 4
  %.pre16 = load ptr, ptr %33, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre17.pre = load ptr, ptr %33, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre17.pre, i64 %hash.0.i
  %.pre18.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre18.pre, null
  br i1 %.not25.i, label %if.entry12, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %50 = phi ptr [ %.pre16, %ifend.i.i.else.i_crit_edge ], [ %40, %while.entry.i ]
  %51 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %41, %while.entry.i ]
  %52 = add nuw i64 %hash.0.i, 1
  %53 = urem i64 %52, %51
  %54 = getelementptr inbounds ptr, ptr %50, i64 %53
  %55 = load ptr, ptr %54, align 8
  %.not26.i = icmp eq ptr %55, null
  br i1 %.not26.i, label %if.entry12, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre18.pre, i64 0, i32 1
  %56 = load ptr, ptr %memberidx11.i, align 8
  %57 = icmp eq ptr %56, null
  br i1 %57, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_String_PropId____getitem__.exit
  %memberidx.i177 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i177, align 4
  %59 = trunc i64 %58 to i32
  %60 = add i32 %59, 1
  %61 = tail call ptr @malloc(i32 %60)
  %62 = load ptr, ptr %12, align 8
  %63 = load i64, ptr %memberidx.i177, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %62, i64 %63, i1 false)
  %64 = getelementptr inbounds i8, ptr %61, i64 %63
  store i8 0, ptr %64, align 1
  %memberidx15 = getelementptr inbounds %Class, ptr %32, i64 0, i32 1
  %65 = load ptr, ptr %memberidx15, align 8
  %memberidx.i178 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  %66 = load i64, ptr %memberidx.i178, align 4
  %67 = trunc i64 %66 to i32
  %68 = add i32 %67, 1
  %69 = tail call ptr @malloc(i32 %68)
  %70 = load ptr, ptr %65, align 8
  %71 = load i64, ptr %memberidx.i178, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %69, ptr align 8 %70, i64 %71, i1 false)
  %72 = getelementptr inbounds i8, ptr %69, i64 %71
  store i8 0, ptr %72, align 1
  %73 = alloca ptr, align 8
  %74 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %73, ptr nonnull @197, ptr %61, ptr %69)
  %75 = load ptr, ptr %73, align 8
  %76 = tail call ptr @malloc(i32 24)
  store ptr %75, ptr %76, align 8
  %memberidx1.i179 = getelementptr inbounds %String, ptr %76, i64 0, i32 1
  store i64 %74, ptr %memberidx1.i179, align 4
  %memberidx2.i180 = getelementptr inbounds %String, ptr %76, i64 0, i32 2
  store i64 %74, ptr %memberidx2.i180, align 4
  tail call void @free(ptr %61)
  tail call void @free(ptr %69)
  %77 = load ptr, ptr %memberidx2, align 8
  %memberidx17 = getelementptr inbounds %Token, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx17, align 8
  %79 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i182 = getelementptr inbounds %Compiler, ptr %79, i64 0, i32 5
  %80 = load ptr, ptr %memberidx1.i182, align 8
  %81 = call ptr @malloc(i32 24)
  store i64 1, ptr %81, align 4
  %memberidx1.i.i183 = getelementptr inbounds %FloError, ptr %81, i64 0, i32 2
  store ptr %78, ptr %memberidx1.i.i183, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %81, i64 0, i32 1
  store ptr %76, ptr %memberidx2.i.i, align 8
  %memberidx.i.i184 = getelementptr inbounds %Array_FloError_, ptr %80, i64 0, i32 1
  %82 = load i64, ptr %memberidx.i.i184, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %80, i64 0, i32 2
  %83 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i185 = icmp slt i64 %82, %83
  br i1 %.not.i.i185, label %if.entry12.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry12.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry12
  %.pre22 = load ptr, ptr %80, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry12
  %84 = shl nuw i64 %83, 1
  store i64 %84, ptr %memberidx1.i2.i, align 4
  %85 = load ptr, ptr %80, align 8
  %86 = shl i64 %83, 4
  %87 = call ptr @realloc(ptr %85, i64 %86)
  store ptr %87, ptr %80, align 8
  %.pre21 = load i64, ptr %memberidx.i.i184, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry12.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %88 = phi ptr [ %.pre22, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %87, %if.entry.i.i ]
  %89 = phi i64 [ %82, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %.pre21, %if.entry.i.i ]
  %90 = add nsw i64 %89, 1
  store i64 %90, ptr %memberidx.i.i184, align 4
  %91 = getelementptr inbounds ptr, ptr %88, i64 %89
  store ptr %81, ptr %91, align 8
  br label %common.ret

ifend14:                                          ; preds = %Map_String_PropId____getitem__.exit
  %92 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %56)
  %.not170 = icmp eq ptr %92, null
  br i1 %.not170, label %ifend20, label %if.entry18

if.entry18:                                       ; preds = %ifend14
  %93 = load ptr, ptr %memberidx2, align 8
  %memberidx22 = getelementptr inbounds %Token, ptr %93, i64 0, i32 1
  %94 = load ptr, ptr %memberidx22, align 8
  %95 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i187 = getelementptr inbounds %Compiler, ptr %95, i64 0, i32 5
  %96 = load ptr, ptr %memberidx1.i187, align 8
  %97 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %97, align 4
  %memberidx1.i.i188 = getelementptr inbounds %FloError, ptr %97, i64 0, i32 2
  store ptr %94, ptr %memberidx1.i.i188, align 8
  %memberidx2.i.i189 = getelementptr inbounds %FloError, ptr %97, i64 0, i32 1
  store ptr %92, ptr %memberidx2.i.i189, align 8
  %memberidx.i.i190 = getelementptr inbounds %Array_FloError_, ptr %96, i64 0, i32 1
  %98 = load i64, ptr %memberidx.i.i190, align 4
  %memberidx1.i2.i191 = getelementptr inbounds %Array_FloError_, ptr %96, i64 0, i32 2
  %99 = load i64, ptr %memberidx1.i2.i191, align 4
  %.not.i.i192 = icmp slt i64 %98, %99
  br i1 %.not.i.i192, label %if.entry18.TypeChecker_error.exit195_crit_edge, label %if.entry.i.i194

if.entry18.TypeChecker_error.exit195_crit_edge:   ; preds = %if.entry18
  %.pre20 = load ptr, ptr %96, align 8
  br label %TypeChecker_error.exit195

if.entry.i.i194:                                  ; preds = %if.entry18
  %100 = shl nuw i64 %99, 1
  store i64 %100, ptr %memberidx1.i2.i191, align 4
  %101 = load ptr, ptr %96, align 8
  %102 = shl i64 %99, 4
  %103 = tail call ptr @realloc(ptr %101, i64 %102)
  store ptr %103, ptr %96, align 8
  %.pre19 = load i64, ptr %memberidx.i.i190, align 4
  br label %TypeChecker_error.exit195

TypeChecker_error.exit195:                        ; preds = %if.entry18.TypeChecker_error.exit195_crit_edge, %if.entry.i.i194
  %104 = phi ptr [ %.pre20, %if.entry18.TypeChecker_error.exit195_crit_edge ], [ %103, %if.entry.i.i194 ]
  %105 = phi i64 [ %98, %if.entry18.TypeChecker_error.exit195_crit_edge ], [ %.pre19, %if.entry.i.i194 ]
  %106 = add nsw i64 %105, 1
  store i64 %106, ptr %memberidx.i.i190, align 4
  %107 = getelementptr inbounds ptr, ptr %104, i64 %105
  store ptr %97, ptr %107, align 8
  br label %common.ret

ifend20:                                          ; preds = %ifend14
  %108 = load ptr, ptr %0, align 8
  %memberidx.i.i196 = getelementptr inbounds %PropId, ptr %56, i64 0, i32 1
  %109 = load ptr, ptr %memberidx.i.i196, align 8
  %110 = load ptr, ptr %108, align 8
  %111 = load i64, ptr %109, align 4
  %112 = load ptr, ptr %110, align 8
  %113 = getelementptr inbounds ptr, ptr %112, i64 %111
  %114 = load ptr, ptr %113, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %114, i64 0, i32 3
  %115 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %109, i64 0, i32 2
  %116 = load i64, ptr %memberidx3.i.i.i, align 4
  %117 = load ptr, ptr %115, align 8
  %118 = getelementptr inbounds ptr, ptr %117, i64 %116
  %119 = load ptr, ptr %118, align 8
  %120 = load i64, ptr %56, align 4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend20
  %memberidx1.i198 = getelementptr inbounds %Class, ptr %119, i64 0, i32 5
  %122 = load ptr, ptr %memberidx1.i198, align 8
  %memberidx2.i199 = getelementptr inbounds %PropId, ptr %56, i64 0, i32 2
  %123 = load i64, ptr %memberidx2.i199, align 4
  %124 = load ptr, ptr %122, align 8
  %125 = getelementptr inbounds ptr, ptr %124, i64 %123
  %126 = load ptr, ptr %125, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %126, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend20
  %memberidx4.i = getelementptr inbounds %Class, ptr %119, i64 0, i32 4
  %127 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %56, i64 0, i32 2
  %128 = load i64, ptr %memberidx5.i, align 4
  %129 = load ptr, ptr %127, align 8
  %130 = getelementptr inbounds ptr, ptr %129, i64 %128
  %131 = load ptr, ptr %130, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %131, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i197 = load ptr, ptr %common.ret.op.in.i, align 8
  br label %ifend6

if.entry25:                                       ; preds = %ifend
  %memberidx28 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %132 = load ptr, ptr %memberidx28, align 8
  %133 = load i64, ptr %132, align 4
  %134 = icmp eq i64 %133, 3
  %memberidx.i200 = getelementptr inbounds %VarId, ptr %132, i64 0, i32 1
  %135 = load i64, ptr %memberidx.i200, align 4
  %136 = load ptr, ptr %0, align 8
  %137 = load ptr, ptr %136, align 8
  %138 = load ptr, ptr %137, align 8
  %139 = getelementptr inbounds ptr, ptr %138, i64 %135
  %140 = load ptr, ptr %139, align 8
  br i1 %134, label %if.entry30, label %else31

if.entry30:                                       ; preds = %if.entry25
  %memberidx1.i201 = getelementptr inbounds %Module, ptr %140, i64 0, i32 3
  %141 = load ptr, ptr %memberidx1.i201, align 8
  %memberidx2.i202 = getelementptr inbounds %VarId, ptr %132, i64 0, i32 2
  %142 = load i64, ptr %memberidx2.i202, align 4
  %143 = load ptr, ptr %141, align 8
  %144 = getelementptr inbounds ptr, ptr %143, i64 %142
  %145 = load ptr, ptr %144, align 8
  %memberidx33 = getelementptr inbounds %Class, ptr %145, i64 0, i32 7
  %146 = load ptr, ptr %memberidx33, align 8
  %147 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i203 = getelementptr inbounds %Map_String_PropId_, ptr %146, i64 0, i32 1
  %148 = load i64, ptr %memberidx.i203, align 4
  %149 = urem i64 %147, %148
  %150 = load ptr, ptr %146, align 8
  %151 = getelementptr inbounds ptr, ptr %150, i64 %149
  %152 = load ptr, ptr %151, align 8
  %.not.i204 = icmp eq ptr %152, null
  br i1 %.not.i204, label %if.entry34, label %while.entry.i209.preheader

while.entry.i209.preheader:                       ; preds = %if.entry30
  %memberidx1.i.i207 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  br label %while.entry.i209

while.entry.i209:                                 ; preds = %while.entry.i209.preheader, %else.i217
  %153 = phi ptr [ %163, %else.i217 ], [ %150, %while.entry.i209.preheader ]
  %154 = phi i64 [ %164, %else.i217 ], [ %148, %while.entry.i209.preheader ]
  %155 = phi ptr [ %168, %else.i217 ], [ %152, %while.entry.i209.preheader ]
  %hash.0.i205 = phi i64 [ %166, %else.i217 ], [ %149, %while.entry.i209.preheader ]
  %156 = load ptr, ptr %155, align 8
  %memberidx.i.i206 = getelementptr inbounds %String, ptr %156, i64 0, i32 1
  %157 = load i64, ptr %memberidx.i.i206, align 4
  %158 = load i64, ptr %memberidx1.i.i207, align 4
  %.not.i.i208 = icmp eq i64 %157, %158
  br i1 %.not.i.i208, label %ifend.i.i210, label %else.i217

ifend.i.i210:                                     ; preds = %while.entry.i209
  %159 = load ptr, ptr %156, align 8
  %160 = load ptr, ptr %12, align 8
  %161 = tail call i64 @memcmp(ptr %159, ptr %160, i64 %157)
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %while.end.i215, label %ifend.i.i210.else.i217_crit_edge

ifend.i.i210.else.i217_crit_edge:                 ; preds = %ifend.i.i210
  %.pre35 = load i64, ptr %memberidx.i203, align 4
  %.pre36 = load ptr, ptr %146, align 8
  br label %else.i217

while.end.i215:                                   ; preds = %ifend.i.i210
  %.pre37.pre = load ptr, ptr %146, align 8
  %.phi.trans.insert38.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre37.pre, i64 %hash.0.i205
  %.pre39.pre = load ptr, ptr %.phi.trans.insert38.phi.trans.insert, align 8
  %.not25.i214 = icmp eq ptr %.pre39.pre, null
  br i1 %.not25.i214, label %if.entry34, label %Map_String_PropId____getitem__.exit221

else.i217:                                        ; preds = %ifend.i.i210.else.i217_crit_edge, %while.entry.i209
  %163 = phi ptr [ %.pre36, %ifend.i.i210.else.i217_crit_edge ], [ %153, %while.entry.i209 ]
  %164 = phi i64 [ %.pre35, %ifend.i.i210.else.i217_crit_edge ], [ %154, %while.entry.i209 ]
  %165 = add nuw i64 %hash.0.i205, 1
  %166 = urem i64 %165, %164
  %167 = getelementptr inbounds ptr, ptr %163, i64 %166
  %168 = load ptr, ptr %167, align 8
  %.not26.i216 = icmp eq ptr %168, null
  br i1 %.not26.i216, label %if.entry34, label %while.entry.i209

Map_String_PropId____getitem__.exit221:           ; preds = %while.end.i215
  %memberidx11.i219 = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre39.pre, i64 0, i32 1
  %169 = load ptr, ptr %memberidx11.i219, align 8
  %170 = icmp eq ptr %169, null
  br i1 %170, label %if.entry34, label %ifend36

else31:                                           ; preds = %if.entry25
  %memberidx1.i223 = getelementptr inbounds %Module, ptr %140, i64 0, i32 6
  %171 = load ptr, ptr %memberidx1.i223, align 8
  %memberidx2.i224 = getelementptr inbounds %VarId, ptr %132, i64 0, i32 2
  %172 = load i64, ptr %memberidx2.i224, align 4
  %173 = load ptr, ptr %171, align 8
  %174 = getelementptr inbounds ptr, ptr %173, i64 %172
  %175 = load ptr, ptr %174, align 8
  %memberidx46 = getelementptr inbounds %Enum, ptr %175, i64 0, i32 3
  %176 = load ptr, ptr %memberidx46, align 8
  %177 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i225 = getelementptr inbounds %Map_String_PropId_, ptr %176, i64 0, i32 1
  %178 = load i64, ptr %memberidx.i225, align 4
  %179 = urem i64 %177, %178
  %180 = load ptr, ptr %176, align 8
  %181 = getelementptr inbounds ptr, ptr %180, i64 %179
  %182 = load ptr, ptr %181, align 8
  %.not.i226 = icmp eq ptr %182, null
  br i1 %.not.i226, label %if.entry47, label %while.entry.i231.preheader

while.entry.i231.preheader:                       ; preds = %else31
  %memberidx1.i.i229 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  br label %while.entry.i231

while.entry.i231:                                 ; preds = %while.entry.i231.preheader, %else.i239
  %183 = phi ptr [ %193, %else.i239 ], [ %180, %while.entry.i231.preheader ]
  %184 = phi i64 [ %194, %else.i239 ], [ %178, %while.entry.i231.preheader ]
  %185 = phi ptr [ %198, %else.i239 ], [ %182, %while.entry.i231.preheader ]
  %hash.0.i227 = phi i64 [ %196, %else.i239 ], [ %179, %while.entry.i231.preheader ]
  %186 = load ptr, ptr %185, align 8
  %memberidx.i.i228 = getelementptr inbounds %String, ptr %186, i64 0, i32 1
  %187 = load i64, ptr %memberidx.i.i228, align 4
  %188 = load i64, ptr %memberidx1.i.i229, align 4
  %.not.i.i230 = icmp eq i64 %187, %188
  br i1 %.not.i.i230, label %ifend.i.i232, label %else.i239

ifend.i.i232:                                     ; preds = %while.entry.i231
  %189 = load ptr, ptr %186, align 8
  %190 = load ptr, ptr %12, align 8
  %191 = tail call i64 @memcmp(ptr %189, ptr %190, i64 %187)
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %while.end.i237, label %ifend.i.i232.else.i239_crit_edge

ifend.i.i232.else.i239_crit_edge:                 ; preds = %ifend.i.i232
  %.pre28 = load i64, ptr %memberidx.i225, align 4
  %.pre29 = load ptr, ptr %176, align 8
  br label %else.i239

while.end.i237:                                   ; preds = %ifend.i.i232
  %.pre30.pre = load ptr, ptr %176, align 8
  %.phi.trans.insert31.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre30.pre, i64 %hash.0.i227
  %.pre32.pre = load ptr, ptr %.phi.trans.insert31.phi.trans.insert, align 8
  %.not25.i236 = icmp eq ptr %.pre32.pre, null
  br i1 %.not25.i236, label %if.entry47, label %Map_String_PropId____getitem__.exit243

else.i239:                                        ; preds = %ifend.i.i232.else.i239_crit_edge, %while.entry.i231
  %193 = phi ptr [ %.pre29, %ifend.i.i232.else.i239_crit_edge ], [ %183, %while.entry.i231 ]
  %194 = phi i64 [ %.pre28, %ifend.i.i232.else.i239_crit_edge ], [ %184, %while.entry.i231 ]
  %195 = add nuw i64 %hash.0.i227, 1
  %196 = urem i64 %195, %194
  %197 = getelementptr inbounds ptr, ptr %193, i64 %196
  %198 = load ptr, ptr %197, align 8
  %.not26.i238 = icmp eq ptr %198, null
  br i1 %.not26.i238, label %if.entry47, label %while.entry.i231

Map_String_PropId____getitem__.exit243:           ; preds = %while.end.i237
  %memberidx11.i241 = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre32.pre, i64 0, i32 1
  %199 = load ptr, ptr %memberidx11.i241, align 8
  %200 = icmp eq ptr %199, null
  br i1 %200, label %if.entry47, label %ifend49

if.entry34:                                       ; preds = %else.i217, %if.entry30, %while.end.i215, %Map_String_PropId____getitem__.exit221
  %memberidx.i244 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %201 = load i64, ptr %memberidx.i244, align 4
  %202 = trunc i64 %201 to i32
  %203 = add i32 %202, 1
  %204 = tail call ptr @malloc(i32 %203)
  %205 = load ptr, ptr %12, align 8
  %206 = load i64, ptr %memberidx.i244, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %204, ptr align 8 %205, i64 %206, i1 false)
  %207 = getelementptr inbounds i8, ptr %204, i64 %206
  store i8 0, ptr %207, align 1
  %memberidx37 = getelementptr inbounds %Class, ptr %145, i64 0, i32 1
  %208 = load ptr, ptr %memberidx37, align 8
  %memberidx.i245 = getelementptr inbounds %String, ptr %208, i64 0, i32 1
  %209 = load i64, ptr %memberidx.i245, align 4
  %210 = trunc i64 %209 to i32
  %211 = add i32 %210, 1
  %212 = tail call ptr @malloc(i32 %211)
  %213 = load ptr, ptr %208, align 8
  %214 = load i64, ptr %memberidx.i245, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %212, ptr align 8 %213, i64 %214, i1 false)
  %215 = getelementptr inbounds i8, ptr %212, i64 %214
  store i8 0, ptr %215, align 1
  %216 = alloca ptr, align 8
  %217 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %216, ptr nonnull @198, ptr %204, ptr %212)
  %218 = load ptr, ptr %216, align 8
  %219 = tail call ptr @malloc(i32 24)
  store ptr %218, ptr %219, align 8
  %memberidx1.i246 = getelementptr inbounds %String, ptr %219, i64 0, i32 1
  store i64 %217, ptr %memberidx1.i246, align 4
  %memberidx2.i247 = getelementptr inbounds %String, ptr %219, i64 0, i32 2
  store i64 %217, ptr %memberidx2.i247, align 4
  tail call void @free(ptr %204)
  tail call void @free(ptr %212)
  %220 = load ptr, ptr %memberidx2, align 8
  %memberidx39 = getelementptr inbounds %Token, ptr %220, i64 0, i32 1
  %221 = load ptr, ptr %memberidx39, align 8
  %222 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i249 = getelementptr inbounds %Compiler, ptr %222, i64 0, i32 5
  %223 = load ptr, ptr %memberidx1.i249, align 8
  %224 = call ptr @malloc(i32 24)
  store i64 1, ptr %224, align 4
  %memberidx1.i.i250 = getelementptr inbounds %FloError, ptr %224, i64 0, i32 2
  store ptr %221, ptr %memberidx1.i.i250, align 8
  %memberidx2.i.i251 = getelementptr inbounds %FloError, ptr %224, i64 0, i32 1
  store ptr %219, ptr %memberidx2.i.i251, align 8
  %memberidx.i.i252 = getelementptr inbounds %Array_FloError_, ptr %223, i64 0, i32 1
  %225 = load i64, ptr %memberidx.i.i252, align 4
  %memberidx1.i2.i253 = getelementptr inbounds %Array_FloError_, ptr %223, i64 0, i32 2
  %226 = load i64, ptr %memberidx1.i2.i253, align 4
  %.not.i.i254 = icmp slt i64 %225, %226
  br i1 %.not.i.i254, label %if.entry34.TypeChecker_error.exit257_crit_edge, label %if.entry.i.i256

if.entry34.TypeChecker_error.exit257_crit_edge:   ; preds = %if.entry34
  %.pre43 = load ptr, ptr %223, align 8
  br label %TypeChecker_error.exit257

if.entry.i.i256:                                  ; preds = %if.entry34
  %227 = shl nuw i64 %226, 1
  store i64 %227, ptr %memberidx1.i2.i253, align 4
  %228 = load ptr, ptr %223, align 8
  %229 = shl i64 %226, 4
  %230 = call ptr @realloc(ptr %228, i64 %229)
  store ptr %230, ptr %223, align 8
  %.pre42 = load i64, ptr %memberidx.i.i252, align 4
  br label %TypeChecker_error.exit257

TypeChecker_error.exit257:                        ; preds = %if.entry34.TypeChecker_error.exit257_crit_edge, %if.entry.i.i256
  %231 = phi ptr [ %.pre43, %if.entry34.TypeChecker_error.exit257_crit_edge ], [ %230, %if.entry.i.i256 ]
  %232 = phi i64 [ %225, %if.entry34.TypeChecker_error.exit257_crit_edge ], [ %.pre42, %if.entry.i.i256 ]
  %233 = add nsw i64 %232, 1
  store i64 %233, ptr %memberidx.i.i252, align 4
  %234 = getelementptr inbounds ptr, ptr %231, i64 %232
  store ptr %224, ptr %234, align 8
  br label %common.ret

ifend36:                                          ; preds = %Map_String_PropId____getitem__.exit221
  %235 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %169)
  %.not = icmp eq ptr %235, null
  br i1 %.not, label %ifend42, label %if.entry40

if.entry40:                                       ; preds = %ifend36
  %236 = load ptr, ptr %memberidx2, align 8
  %memberidx44 = getelementptr inbounds %Token, ptr %236, i64 0, i32 1
  %237 = load ptr, ptr %memberidx44, align 8
  %238 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i259 = getelementptr inbounds %Compiler, ptr %238, i64 0, i32 5
  %239 = load ptr, ptr %memberidx1.i259, align 8
  %240 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %240, align 4
  %memberidx1.i.i260 = getelementptr inbounds %FloError, ptr %240, i64 0, i32 2
  store ptr %237, ptr %memberidx1.i.i260, align 8
  %memberidx2.i.i261 = getelementptr inbounds %FloError, ptr %240, i64 0, i32 1
  store ptr %235, ptr %memberidx2.i.i261, align 8
  %memberidx.i.i262 = getelementptr inbounds %Array_FloError_, ptr %239, i64 0, i32 1
  %241 = load i64, ptr %memberidx.i.i262, align 4
  %memberidx1.i2.i263 = getelementptr inbounds %Array_FloError_, ptr %239, i64 0, i32 2
  %242 = load i64, ptr %memberidx1.i2.i263, align 4
  %.not.i.i264 = icmp slt i64 %241, %242
  br i1 %.not.i.i264, label %if.entry40.TypeChecker_error.exit267_crit_edge, label %if.entry.i.i266

if.entry40.TypeChecker_error.exit267_crit_edge:   ; preds = %if.entry40
  %.pre41 = load ptr, ptr %239, align 8
  br label %TypeChecker_error.exit267

if.entry.i.i266:                                  ; preds = %if.entry40
  %243 = shl nuw i64 %242, 1
  store i64 %243, ptr %memberidx1.i2.i263, align 4
  %244 = load ptr, ptr %239, align 8
  %245 = shl i64 %242, 4
  %246 = tail call ptr @realloc(ptr %244, i64 %245)
  store ptr %246, ptr %239, align 8
  %.pre40 = load i64, ptr %memberidx.i.i262, align 4
  br label %TypeChecker_error.exit267

TypeChecker_error.exit267:                        ; preds = %if.entry40.TypeChecker_error.exit267_crit_edge, %if.entry.i.i266
  %247 = phi ptr [ %.pre41, %if.entry40.TypeChecker_error.exit267_crit_edge ], [ %246, %if.entry.i.i266 ]
  %248 = phi i64 [ %241, %if.entry40.TypeChecker_error.exit267_crit_edge ], [ %.pre40, %if.entry.i.i266 ]
  %249 = add nsw i64 %248, 1
  store i64 %249, ptr %memberidx.i.i262, align 4
  %250 = getelementptr inbounds ptr, ptr %247, i64 %248
  store ptr %240, ptr %250, align 8
  br label %common.ret

ifend42:                                          ; preds = %ifend36
  %251 = load ptr, ptr %0, align 8
  %memberidx.i.i268 = getelementptr inbounds %PropId, ptr %169, i64 0, i32 1
  %252 = load ptr, ptr %memberidx.i.i268, align 8
  %253 = load ptr, ptr %251, align 8
  %254 = load i64, ptr %252, align 4
  %255 = load ptr, ptr %253, align 8
  %256 = getelementptr inbounds ptr, ptr %255, i64 %254
  %257 = load ptr, ptr %256, align 8
  %memberidx2.i.i.i269 = getelementptr inbounds %Module, ptr %257, i64 0, i32 3
  %258 = load ptr, ptr %memberidx2.i.i.i269, align 8
  %memberidx3.i.i.i270 = getelementptr inbounds %TypeId, ptr %252, i64 0, i32 2
  %259 = load i64, ptr %memberidx3.i.i.i270, align 4
  %260 = load ptr, ptr %258, align 8
  %261 = getelementptr inbounds ptr, ptr %260, i64 %259
  %262 = load ptr, ptr %261, align 8
  %263 = load i64, ptr %169, align 4
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %if.entry.i276, label %ifend.i280

if.entry.i276:                                    ; preds = %ifend42
  %memberidx1.i273 = getelementptr inbounds %Class, ptr %262, i64 0, i32 5
  %265 = load ptr, ptr %memberidx1.i273, align 8
  %memberidx2.i274 = getelementptr inbounds %PropId, ptr %169, i64 0, i32 2
  %266 = load i64, ptr %memberidx2.i274, align 4
  %267 = load ptr, ptr %265, align 8
  %268 = getelementptr inbounds ptr, ptr %267, i64 %266
  %269 = load ptr, ptr %268, align 8
  %memberidx3.i275 = getelementptr inbounds %ClassMethod, ptr %269, i64 0, i32 4
  br label %get_class_prop_type.exit281

ifend.i280:                                       ; preds = %ifend42
  %memberidx4.i277 = getelementptr inbounds %Class, ptr %262, i64 0, i32 4
  %270 = load ptr, ptr %memberidx4.i277, align 8
  %memberidx5.i278 = getelementptr inbounds %PropId, ptr %169, i64 0, i32 2
  %271 = load i64, ptr %memberidx5.i278, align 4
  %272 = load ptr, ptr %270, align 8
  %273 = getelementptr inbounds ptr, ptr %272, i64 %271
  %274 = load ptr, ptr %273, align 8
  %memberidx6.i279 = getelementptr inbounds %ClassField, ptr %274, i64 0, i32 4
  br label %get_class_prop_type.exit281

get_class_prop_type.exit281:                      ; preds = %if.entry.i276, %ifend.i280
  %common.ret.op.in.i271 = phi ptr [ %memberidx3.i275, %if.entry.i276 ], [ %memberidx6.i279, %ifend.i280 ]
  %common.ret.op.i272 = load ptr, ptr %common.ret.op.in.i271, align 8
  br label %ifend6

if.entry47:                                       ; preds = %else.i239, %else31, %while.end.i237, %Map_String_PropId____getitem__.exit243
  %memberidx.i282 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %275 = load i64, ptr %memberidx.i282, align 4
  %276 = trunc i64 %275 to i32
  %277 = add i32 %276, 1
  %278 = tail call ptr @malloc(i32 %277)
  %279 = load ptr, ptr %12, align 8
  %280 = load i64, ptr %memberidx.i282, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %278, ptr align 8 %279, i64 %280, i1 false)
  %281 = getelementptr inbounds i8, ptr %278, i64 %280
  store i8 0, ptr %281, align 1
  %memberidx50 = getelementptr inbounds %Enum, ptr %175, i64 0, i32 1
  %282 = load ptr, ptr %memberidx50, align 8
  %memberidx.i283 = getelementptr inbounds %String, ptr %282, i64 0, i32 1
  %283 = load i64, ptr %memberidx.i283, align 4
  %284 = trunc i64 %283 to i32
  %285 = add i32 %284, 1
  %286 = tail call ptr @malloc(i32 %285)
  %287 = load ptr, ptr %282, align 8
  %288 = load i64, ptr %memberidx.i283, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %286, ptr align 8 %287, i64 %288, i1 false)
  %289 = getelementptr inbounds i8, ptr %286, i64 %288
  store i8 0, ptr %289, align 1
  %290 = alloca ptr, align 8
  %291 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %290, ptr nonnull @199, ptr %278, ptr %286)
  %292 = load ptr, ptr %290, align 8
  %293 = tail call ptr @malloc(i32 24)
  store ptr %292, ptr %293, align 8
  %memberidx1.i284 = getelementptr inbounds %String, ptr %293, i64 0, i32 1
  store i64 %291, ptr %memberidx1.i284, align 4
  %memberidx2.i285 = getelementptr inbounds %String, ptr %293, i64 0, i32 2
  store i64 %291, ptr %memberidx2.i285, align 4
  tail call void @free(ptr %278)
  tail call void @free(ptr %286)
  %294 = load ptr, ptr %memberidx2, align 8
  %memberidx52 = getelementptr inbounds %Token, ptr %294, i64 0, i32 1
  %295 = load ptr, ptr %memberidx52, align 8
  %296 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i287 = getelementptr inbounds %Compiler, ptr %296, i64 0, i32 5
  %297 = load ptr, ptr %memberidx1.i287, align 8
  %298 = call ptr @malloc(i32 24)
  store i64 1, ptr %298, align 4
  %memberidx1.i.i288 = getelementptr inbounds %FloError, ptr %298, i64 0, i32 2
  store ptr %295, ptr %memberidx1.i.i288, align 8
  %memberidx2.i.i289 = getelementptr inbounds %FloError, ptr %298, i64 0, i32 1
  store ptr %293, ptr %memberidx2.i.i289, align 8
  %memberidx.i.i290 = getelementptr inbounds %Array_FloError_, ptr %297, i64 0, i32 1
  %299 = load i64, ptr %memberidx.i.i290, align 4
  %memberidx1.i2.i291 = getelementptr inbounds %Array_FloError_, ptr %297, i64 0, i32 2
  %300 = load i64, ptr %memberidx1.i2.i291, align 4
  %.not.i.i292 = icmp slt i64 %299, %300
  br i1 %.not.i.i292, label %if.entry47.TypeChecker_error.exit295_crit_edge, label %if.entry.i.i294

if.entry47.TypeChecker_error.exit295_crit_edge:   ; preds = %if.entry47
  %.pre34 = load ptr, ptr %297, align 8
  br label %TypeChecker_error.exit295

if.entry.i.i294:                                  ; preds = %if.entry47
  %301 = shl nuw i64 %300, 1
  store i64 %301, ptr %memberidx1.i2.i291, align 4
  %302 = load ptr, ptr %297, align 8
  %303 = shl i64 %300, 4
  %304 = call ptr @realloc(ptr %302, i64 %303)
  store ptr %304, ptr %297, align 8
  %.pre33 = load i64, ptr %memberidx.i.i290, align 4
  br label %TypeChecker_error.exit295

TypeChecker_error.exit295:                        ; preds = %if.entry47.TypeChecker_error.exit295_crit_edge, %if.entry.i.i294
  %305 = phi ptr [ %.pre34, %if.entry47.TypeChecker_error.exit295_crit_edge ], [ %304, %if.entry.i.i294 ]
  %306 = phi i64 [ %299, %if.entry47.TypeChecker_error.exit295_crit_edge ], [ %.pre33, %if.entry.i.i294 ]
  %307 = add nsw i64 %306, 1
  store i64 %307, ptr %memberidx.i.i290, align 4
  %308 = getelementptr inbounds ptr, ptr %305, i64 %306
  store ptr %298, ptr %308, align 8
  br label %common.ret

ifend49:                                          ; preds = %Map_String_PropId____getitem__.exit243
  %309 = tail call ptr @malloc(i32 16)
  %310 = load ptr, ptr %175, align 8
  store i64 12, ptr %309, align 4
  %memberidx.i296 = getelementptr inbounds %EnumType, ptr %309, i64 0, i32 1
  store ptr %310, ptr %memberidx.i296, align 8
  br label %ifend6

if.entry54:                                       ; preds = %ifend
  %311 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %311, ptr noundef nonnull align 8 dereferenceable(9) @200, i64 9, i1 false)
  %312 = tail call ptr @malloc(i32 24)
  store ptr %311, ptr %312, align 8
  %memberidx1.i.i297 = getelementptr inbounds %String, ptr %312, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i297, align 4
  %memberidx2.i.i298 = getelementptr inbounds %String, ptr %312, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i298, align 4
  %memberidx.i299 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %313 = load i64, ptr %memberidx.i299, align 4
  %.not.i301 = icmp eq i64 %313, 9
  br i1 %.not.i301, label %ifend.i303, label %else58

ifend.i303:                                       ; preds = %if.entry54
  %314 = load ptr, ptr %12, align 8
  %315 = tail call i64 @memcmp(ptr %314, ptr nonnull %311, i64 9)
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %ifend59, label %else58

else58:                                           ; preds = %if.entry54, %ifend.i303
  %317 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %317, ptr noundef nonnull align 8 dereferenceable(9) @201, i64 9, i1 false)
  %318 = tail call ptr @malloc(i32 24)
  store ptr %317, ptr %318, align 8
  %memberidx1.i.i304 = getelementptr inbounds %String, ptr %318, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i304, align 4
  %memberidx2.i.i305 = getelementptr inbounds %String, ptr %318, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i305, align 4
  %319 = load i64, ptr %memberidx.i299, align 4
  %.not.i308 = icmp eq i64 %319, 9
  br i1 %.not.i308, label %ifend.i310, label %else61

ifend.i310:                                       ; preds = %else58
  %320 = load ptr, ptr %12, align 8
  %321 = tail call i64 @memcmp(ptr %320, ptr nonnull %317, i64 9)
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %ifend59, label %else61

ifend59:                                          ; preds = %ifend.i346, %ifend.i338, %ifend.i330, %ifend.i310, %ifend.i303
  %mem_intrinsic.0 = phi i64 [ 3, %ifend.i303 ], [ 4, %ifend.i310 ], [ 5, %ifend.i330 ], [ 6, %ifend.i338 ], [ 7, %ifend.i346 ]
  %323 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %323, align 4
  %memberidx.i.i312 = getelementptr inbounds %Expression, ptr %323, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i312, align 4
  %memberidx1.i.i313 = getelementptr inbounds %Expression, ptr %323, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i313, align 1
  %memberidx.i314 = getelementptr inbounds %IntrinsicCall, ptr %323, i64 0, i32 4
  store i64 %mem_intrinsic.0, ptr %memberidx.i314, align 4
  %memberidx1.i315 = getelementptr inbounds %IntrinsicCall, ptr %323, i64 0, i32 5
  %324 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %324, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %324, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i, align 4
  %325 = tail call ptr @malloc(i32 64)
  store ptr %325, ptr %324, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %324, ptr %memberidx1.i315, align 8
  %memberidx4.i317 = getelementptr inbounds %Expression, ptr %323, i64 0, i32 3
  %326 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %326, align 4
  store ptr %326, ptr %memberidx4.i317, align 8
  %327 = load i64, ptr %memberidx.i7.i, align 4
  %328 = load i64, ptr %memberidx1.i8.i, align 4
  %.not.i320 = icmp slt i64 %327, %328
  br i1 %.not.i320, label %ifend59.Array_Expression____sl__.exit_crit_edge, label %if.entry.i322

ifend59.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend59
  %.pre27 = load ptr, ptr %324, align 8
  br label %Array_Expression____sl__.exit

if.entry.i322:                                    ; preds = %ifend59
  %329 = shl nuw i64 %328, 1
  store i64 %329, ptr %memberidx1.i8.i, align 4
  %330 = load ptr, ptr %324, align 8
  %331 = shl i64 %328, 4
  %332 = tail call ptr @realloc(ptr %330, i64 %331)
  store ptr %332, ptr %324, align 8
  %.pre26 = load i64, ptr %memberidx.i7.i, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend59.Array_Expression____sl__.exit_crit_edge, %if.entry.i322
  %333 = phi ptr [ %.pre27, %ifend59.Array_Expression____sl__.exit_crit_edge ], [ %332, %if.entry.i322 ]
  %334 = phi i64 [ %327, %ifend59.Array_Expression____sl__.exit_crit_edge ], [ %.pre26, %if.entry.i322 ]
  %335 = add nsw i64 %334, 1
  store i64 %335, ptr %memberidx.i7.i, align 4
  %336 = getelementptr inbounds ptr, ptr %333, i64 %334
  store ptr %5, ptr %336, align 8
  br label %common.ret

else61:                                           ; preds = %else58, %ifend.i310
  %337 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %337, ptr noundef nonnull align 8 dereferenceable(9) @202, i64 9, i1 false)
  %338 = tail call ptr @malloc(i32 24)
  store ptr %337, ptr %338, align 8
  %memberidx1.i.i324 = getelementptr inbounds %String, ptr %338, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i324, align 4
  %memberidx2.i.i325 = getelementptr inbounds %String, ptr %338, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i325, align 4
  %339 = load i64, ptr %memberidx.i299, align 4
  %.not.i328 = icmp eq i64 %339, 9
  br i1 %.not.i328, label %ifend.i330, label %else64

ifend.i330:                                       ; preds = %else61
  %340 = load ptr, ptr %12, align 8
  %341 = tail call i64 @memcmp(ptr %340, ptr nonnull %337, i64 9)
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %ifend59, label %else64

else64:                                           ; preds = %else61, %ifend.i330
  %343 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %343, ptr noundef nonnull align 8 dereferenceable(6) @203, i64 6, i1 false)
  %344 = tail call ptr @malloc(i32 24)
  store ptr %343, ptr %344, align 8
  %memberidx1.i.i332 = getelementptr inbounds %String, ptr %344, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i332, align 4
  %memberidx2.i.i333 = getelementptr inbounds %String, ptr %344, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i333, align 4
  %345 = load i64, ptr %memberidx.i299, align 4
  %.not.i336 = icmp eq i64 %345, 6
  br i1 %.not.i336, label %ifend.i338, label %else67

ifend.i338:                                       ; preds = %else64
  %346 = load ptr, ptr %12, align 8
  %347 = tail call i64 @memcmp(ptr %346, ptr nonnull %343, i64 6)
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %ifend59, label %else67

else67:                                           ; preds = %else64, %ifend.i338
  %349 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %349, ptr noundef nonnull align 8 dereferenceable(7) @204, i64 7, i1 false)
  %350 = tail call ptr @malloc(i32 24)
  store ptr %349, ptr %350, align 8
  %memberidx1.i.i340 = getelementptr inbounds %String, ptr %350, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i340, align 4
  %memberidx2.i.i341 = getelementptr inbounds %String, ptr %350, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i341, align 4
  %351 = load i64, ptr %memberidx.i299, align 4
  %.not.i344 = icmp eq i64 %351, 7
  %extract.t52 = trunc i64 %351 to i32
  br i1 %.not.i344, label %ifend.i346, label %else70

ifend.i346:                                       ; preds = %else67
  %352 = load ptr, ptr %12, align 8
  %353 = tail call i64 @memcmp(ptr %352, ptr nonnull %349, i64 7)
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %ifend59, label %ifend.i346.else70_crit_edge

ifend.i346.else70_crit_edge:                      ; preds = %ifend.i346
  %.pre23 = load i64, ptr %memberidx.i299, align 4
  %extract.t = trunc i64 %.pre23 to i32
  br label %else70

else70:                                           ; preds = %ifend.i346.else70_crit_edge, %else67
  %.off0 = phi i32 [ %extract.t, %ifend.i346.else70_crit_edge ], [ %extract.t52, %else67 ]
  %355 = add i32 %.off0, 1
  %356 = tail call ptr @malloc(i32 %355)
  %357 = load ptr, ptr %12, align 8
  %358 = load i64, ptr %memberidx.i299, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %356, ptr align 8 %357, i64 %358, i1 false)
  %359 = getelementptr inbounds i8, ptr %356, i64 %358
  store i8 0, ptr %359, align 1
  %360 = alloca ptr, align 8
  %361 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %360, ptr nonnull @205, ptr %356)
  %362 = load ptr, ptr %360, align 8
  %363 = tail call ptr @malloc(i32 24)
  store ptr %362, ptr %363, align 8
  %memberidx1.i349 = getelementptr inbounds %String, ptr %363, i64 0, i32 1
  store i64 %361, ptr %memberidx1.i349, align 4
  %memberidx2.i350 = getelementptr inbounds %String, ptr %363, i64 0, i32 2
  store i64 %361, ptr %memberidx2.i350, align 4
  tail call void @free(ptr %356)
  %364 = load ptr, ptr %memberidx2, align 8
  %memberidx73 = getelementptr inbounds %Token, ptr %364, i64 0, i32 1
  %365 = load ptr, ptr %memberidx73, align 8
  %366 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i352 = getelementptr inbounds %Compiler, ptr %366, i64 0, i32 5
  %367 = load ptr, ptr %memberidx1.i352, align 8
  %368 = call ptr @malloc(i32 24)
  store i64 1, ptr %368, align 4
  %memberidx1.i.i353 = getelementptr inbounds %FloError, ptr %368, i64 0, i32 2
  store ptr %365, ptr %memberidx1.i.i353, align 8
  %memberidx2.i.i354 = getelementptr inbounds %FloError, ptr %368, i64 0, i32 1
  store ptr %363, ptr %memberidx2.i.i354, align 8
  %memberidx.i.i355 = getelementptr inbounds %Array_FloError_, ptr %367, i64 0, i32 1
  %369 = load i64, ptr %memberidx.i.i355, align 4
  %memberidx1.i2.i356 = getelementptr inbounds %Array_FloError_, ptr %367, i64 0, i32 2
  %370 = load i64, ptr %memberidx1.i2.i356, align 4
  %.not.i.i357 = icmp slt i64 %369, %370
  br i1 %.not.i.i357, label %else70.TypeChecker_error.exit360_crit_edge, label %if.entry.i.i359

else70.TypeChecker_error.exit360_crit_edge:       ; preds = %else70
  %.pre25 = load ptr, ptr %367, align 8
  br label %TypeChecker_error.exit360

if.entry.i.i359:                                  ; preds = %else70
  %371 = shl nuw i64 %370, 1
  store i64 %371, ptr %memberidx1.i2.i356, align 4
  %372 = load ptr, ptr %367, align 8
  %373 = shl i64 %370, 4
  %374 = call ptr @realloc(ptr %372, i64 %373)
  store ptr %374, ptr %367, align 8
  %.pre24 = load i64, ptr %memberidx.i.i355, align 4
  br label %TypeChecker_error.exit360

TypeChecker_error.exit360:                        ; preds = %else70.TypeChecker_error.exit360_crit_edge, %if.entry.i.i359
  %375 = phi ptr [ %.pre25, %else70.TypeChecker_error.exit360_crit_edge ], [ %374, %if.entry.i.i359 ]
  %376 = phi i64 [ %369, %else70.TypeChecker_error.exit360_crit_edge ], [ %.pre24, %if.entry.i.i359 ]
  %377 = add nsw i64 %376, 1
  store i64 %377, ptr %memberidx.i.i355, align 4
  %378 = getelementptr inbounds ptr, ptr %375, i64 %376
  store ptr %368, ptr %378, align 8
  br label %common.ret

if.entry76:                                       ; preds = %ifend
  %379 = tail call ptr @malloc(i32 4)
  store i32 1702521203, ptr %379, align 8
  %380 = tail call ptr @malloc(i32 24)
  store ptr %379, ptr %380, align 8
  %memberidx1.i.i361 = getelementptr inbounds %String, ptr %380, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i361, align 4
  %memberidx2.i.i362 = getelementptr inbounds %String, ptr %380, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i362, align 4
  %memberidx.i363 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %381 = load i64, ptr %memberidx.i363, align 4
  %.not.i365 = icmp eq i64 %381, 4
  br i1 %.not.i365, label %ifend.i367, label %ifend6

ifend.i367:                                       ; preds = %if.entry76
  %382 = load ptr, ptr %12, align 8
  %383 = tail call i64 @memcmp(ptr %382, ptr nonnull %379, i64 4)
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %if.entry79, label %ifend6

if.entry79:                                       ; preds = %ifend.i367
  %385 = tail call ptr @malloc(i32 33)
  %memberidx82 = getelementptr inbounds %ArrayType, ptr %10, i64 0, i32 2
  %386 = load i64, ptr %memberidx82, align 4
  store i64 8, ptr %385, align 4
  %memberidx.i.i369 = getelementptr inbounds %Expression, ptr %385, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i369, align 4
  %memberidx1.i.i370 = getelementptr inbounds %Expression, ptr %385, i64 0, i32 1
  %memberidx.i371 = getelementptr inbounds %Expression, ptr %385, i64 0, i32 3
  %387 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %387, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %387, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  store ptr %387, ptr %memberidx.i371, align 8
  %memberidx1.i372 = getelementptr inbounds %IntExpression, ptr %385, i64 0, i32 4
  store i64 %386, ptr %memberidx1.i372, align 4
  store i1 true, ptr %memberidx1.i.i370, align 1
  br label %common.ret

if.entry84:                                       ; preds = %ifend
  %memberidx87 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %388 = load ptr, ptr %memberidx87, align 8
  %memberidx88 = getelementptr inbounds %ModuleVarId, ptr %388, i64 0, i32 3
  %389 = load ptr, ptr %memberidx88, align 8
  %memberidx89 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %390 = load ptr, ptr %memberidx89, align 8
  store ptr %389, ptr %memberidx89, align 8
  %391 = alloca %VarAccessExpressionNode, align 8
  %392 = load ptr, ptr %memberidx2, align 8
  %memberidx.i374 = getelementptr inbounds %Token, ptr %392, i64 0, i32 1
  %393 = load ptr, ptr %memberidx.i374, align 8
  store ptr %393, ptr %391, align 8
  %memberidx.i.i.i375 = getelementptr inbounds %StatementNode, ptr %391, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i375, align 8
  %memberidx.i.i376 = getelementptr inbounds %ExpressionNode, ptr %391, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i376, align 8
  %memberidx1.i377 = getelementptr inbounds %VarAccessExpressionNode, ptr %391, i64 0, i32 3
  store ptr %392, ptr %memberidx1.i377, align 8
  %394 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %394, align 4
  %395 = call fastcc ptr @TypeChecker_check_var_access_expr(ptr nonnull %0, ptr nonnull %394, ptr nonnull %391)
  store ptr %390, ptr %memberidx89, align 8
  br label %common.ret

else85:                                           ; preds = %if.entry.i2, %ifend
  %memberidx.i378 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %396 = load i64, ptr %memberidx.i378, align 4
  %397 = trunc i64 %396 to i32
  %398 = add i32 %397, 1
  %399 = tail call ptr @malloc(i32 %398)
  %400 = load ptr, ptr %12, align 8
  %401 = load i64, ptr %memberidx.i378, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %399, ptr align 8 %400, i64 %401, i1 false)
  %402 = getelementptr inbounds i8, ptr %399, i64 %401
  store i8 0, ptr %402, align 1
  %403 = load ptr, ptr %memberidx1, align 8
  %404 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %403)
  %memberidx.i379 = getelementptr inbounds %String, ptr %404, i64 0, i32 1
  %405 = load i64, ptr %memberidx.i379, align 4
  %406 = trunc i64 %405 to i32
  %407 = add i32 %406, 1
  %408 = tail call ptr @malloc(i32 %407)
  %409 = load ptr, ptr %404, align 8
  %410 = load i64, ptr %memberidx.i379, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %408, ptr align 8 %409, i64 %410, i1 false)
  %411 = getelementptr inbounds i8, ptr %408, i64 %410
  store i8 0, ptr %411, align 1
  %412 = alloca ptr, align 8
  %413 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %412, ptr nonnull @206, ptr %399, ptr %408)
  %414 = load ptr, ptr %412, align 8
  %415 = tail call ptr @malloc(i32 24)
  store ptr %414, ptr %415, align 8
  %memberidx1.i380 = getelementptr inbounds %String, ptr %415, i64 0, i32 1
  store i64 %413, ptr %memberidx1.i380, align 4
  %memberidx2.i381 = getelementptr inbounds %String, ptr %415, i64 0, i32 2
  store i64 %413, ptr %memberidx2.i381, align 4
  tail call void @free(ptr %399)
  tail call void @free(ptr %408)
  %416 = load ptr, ptr %memberidx, align 8
  %417 = load ptr, ptr %416, align 8
  %418 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i383 = getelementptr inbounds %Compiler, ptr %418, i64 0, i32 5
  %419 = load ptr, ptr %memberidx1.i383, align 8
  %420 = call ptr @malloc(i32 24)
  store i64 4, ptr %420, align 4
  %memberidx1.i.i384 = getelementptr inbounds %FloError, ptr %420, i64 0, i32 2
  store ptr %417, ptr %memberidx1.i.i384, align 8
  %memberidx2.i.i385 = getelementptr inbounds %FloError, ptr %420, i64 0, i32 1
  store ptr %415, ptr %memberidx2.i.i385, align 8
  %memberidx.i.i386 = getelementptr inbounds %Array_FloError_, ptr %419, i64 0, i32 1
  %421 = load i64, ptr %memberidx.i.i386, align 4
  %memberidx1.i2.i387 = getelementptr inbounds %Array_FloError_, ptr %419, i64 0, i32 2
  %422 = load i64, ptr %memberidx1.i2.i387, align 4
  %.not.i.i388 = icmp slt i64 %421, %422
  br i1 %.not.i.i388, label %else85.TypeChecker_error.exit391_crit_edge, label %if.entry.i.i390

else85.TypeChecker_error.exit391_crit_edge:       ; preds = %else85
  %.pre45 = load ptr, ptr %419, align 8
  br label %TypeChecker_error.exit391

if.entry.i.i390:                                  ; preds = %else85
  %423 = shl nuw i64 %422, 1
  store i64 %423, ptr %memberidx1.i2.i387, align 4
  %424 = load ptr, ptr %419, align 8
  %425 = shl i64 %422, 4
  %426 = call ptr @realloc(ptr %424, i64 %425)
  store ptr %426, ptr %419, align 8
  %.pre44 = load i64, ptr %memberidx.i.i386, align 4
  br label %TypeChecker_error.exit391

TypeChecker_error.exit391:                        ; preds = %else85.TypeChecker_error.exit391_crit_edge, %if.entry.i.i390
  %427 = phi ptr [ %.pre45, %else85.TypeChecker_error.exit391_crit_edge ], [ %426, %if.entry.i.i390 ]
  %428 = phi i64 [ %421, %else85.TypeChecker_error.exit391_crit_edge ], [ %.pre44, %if.entry.i.i390 ]
  %429 = add nsw i64 %428, 1
  store i64 %429, ptr %memberidx.i.i386, align 4
  %430 = getelementptr inbounds ptr, ptr %427, i64 %428
  store ptr %420, ptr %430, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %.not = icmp eq i64 %5, 19
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %6, align 4
  %8 = icmp eq i64 %7, 20
  br i1 %8, label %if.entry.i81, label %is_object.exit

if.entry.i81:                                     ; preds = %if.entry, %if.entry.i81
  %.tr5.i = phi ptr [ %9, %if.entry.i81 ], [ %6, %if.entry ]
  %memberidx1.i80 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i80, align 8
  %10 = load i64, ptr %9, align 4
  %11 = icmp eq i64 %10, 20
  br i1 %11, label %if.entry.i81, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i81, %if.entry
  %.lcssa.i = phi i64 [ %7, %if.entry ], [ %10, %if.entry.i81 ]
  %12 = icmp eq i64 %.lcssa.i, 11
  br i1 %12, label %if.entry2, label %ifend4

ifend:                                            ; preds = %ifend4, %4
  %right.0 = phi ptr [ %52, %ifend4 ], [ %2, %4 ]
  %memberidx.i = getelementptr inbounds %Expression, ptr %1, i64 0, i32 2
  %13 = load i64, ptr %memberidx.i, align 4
  switch i64 %13, label %if.entry12 [
    i64 8, label %if.entry.i
    i64 13, label %if.entry4.i
    i64 14, label %check_is_var.exit
  ]

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %14 = load ptr, ptr %memberidx1.i, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %ifend14, label %if.entry12

if.entry4.i:                                      ; preds = %ifend
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %1, i64 0, i32 5
  %17 = load ptr, ptr %memberidx7.i, align 8
  %18 = load i64, ptr %17, align 4
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %ifend14, label %if.entry12

check_is_var.exit:                                ; preds = %ifend
  %memberidx13.i = getelementptr inbounds %IndexExpression, ptr %1, i64 0, i32 4
  %20 = load ptr, ptr %memberidx13.i, align 8
  %memberidx14.i = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  %21 = load ptr, ptr %memberidx14.i, align 8
  %22 = load i64, ptr %21, align 4
  %.not82 = icmp eq i64 %22, 15
  br i1 %.not82, label %if.entry12, label %ifend14

if.entry2:                                        ; preds = %is_object.exit
  %23 = tail call fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr %3)
  %24 = icmp ne ptr %23, null
  %memberidx.i48 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i48, align 8
  %memberidx1.i49 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i49, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i, align 4
  %28 = icmp sgt i64 %27, 0
  %29 = or i1 %24, %28
  br i1 %29, label %common.ret, label %if.entry2.ifend4_crit_edge

if.entry2.ifend4_crit_edge:                       ; preds = %if.entry2
  %.pre = load ptr, ptr %memberidx1, align 8
  %.pre83 = load i64, ptr %memberidx, align 4
  br label %ifend4

ifend4:                                           ; preds = %if.entry2.ifend4_crit_edge, %is_object.exit
  %30 = phi i64 [ %.pre83, %if.entry2.ifend4_crit_edge ], [ %5, %is_object.exit ]
  %31 = phi ptr [ %.pre, %if.entry2.ifend4_crit_edge ], [ %6, %is_object.exit ]
  %32 = icmp eq i64 %30, 20
  %spec.store.select.i = select i1 %32, i64 1, i64 %30
  %33 = icmp eq i64 %spec.store.select.i, 21
  %spec.store.select34.i = select i1 %33, i64 2, i64 %spec.store.select.i
  %34 = icmp eq i64 %spec.store.select34.i, 22
  %spec.store.select30.i = select i1 %34, i64 3, i64 %spec.store.select34.i
  %35 = icmp eq i64 %spec.store.select30.i, 23
  %spec.store.select37.i = select i1 %35, i64 4, i64 %spec.store.select30.i
  %36 = icmp eq i64 %spec.store.select37.i, 24
  %spec.store.select31.i = select i1 %36, i64 5, i64 %spec.store.select37.i
  %37 = icmp eq i64 %spec.store.select31.i, 25
  %spec.store.select35.i = select i1 %37, i64 6, i64 %spec.store.select31.i
  %38 = icmp eq i64 %spec.store.select35.i, 26
  %spec.store.select32.i = select i1 %38, i64 16, i64 %spec.store.select35.i
  %39 = icmp eq i64 %spec.store.select32.i, 27
  %spec.store.select38.i = select i1 %39, i64 15, i64 %spec.store.select32.i
  %40 = icmp eq i64 %spec.store.select38.i, 29
  %spec.store.select33.i = select i1 %40, i64 13, i64 %spec.store.select38.i
  %41 = icmp eq i64 %spec.store.select33.i, 30
  %spec.store.select36.i = select i1 %41, i64 14, i64 %spec.store.select33.i
  %42 = tail call ptr @malloc(i32 48)
  %memberidx28.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 3
  %43 = load ptr, ptr %memberidx28.i, align 8
  %memberidx29.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 5
  %44 = load ptr, ptr %memberidx29.i, align 8
  %45 = load ptr, ptr %43, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = tail call ptr @malloc(i32 32)
  %48 = load i64, ptr %45, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %46, i64 0, i32 1
  %49 = load i64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %46, i64 0, i32 3
  %51 = load i64, ptr %memberidx3.i.i.i, align 4
  store i64 %48, ptr %47, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 1
  store i64 %49, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 3
  store i64 %51, ptr %memberidx3.i.i.i.i, align 4
  store ptr %47, ptr %42, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %42, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %ExpressionNode, ptr %42, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 3
  store ptr %43, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 4
  store i64 %spec.store.select36.i, ptr %memberidx3.i.i, align 4
  %memberidx4.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 5
  store ptr %44, ptr %memberidx4.i.i, align 8
  %52 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %31, ptr nonnull %42)
  %memberidx.i52 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %53 = load ptr, ptr %memberidx.i52, align 8
  %memberidx1.i53 = getelementptr inbounds %Compiler, ptr %53, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1.i53, align 8
  %memberidx2.i54 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx2.i54, align 4
  %56 = icmp sgt i64 %55, 0
  br i1 %56, label %common.ret, label %ifend

common.ret:                                       ; preds = %if.entry2, %ifend4, %ifend21, %TypeChecker_error.exit74, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit74 ], [ %113, %ifend21 ], [ null, %ifend4 ], [ %23, %if.entry2 ]
  ret ptr %common.ret.op

if.entry12:                                       ; preds = %if.entry4.i, %if.entry.i, %ifend, %check_is_var.exit
  %57 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %57, ptr noundef nonnull align 8 dereferenceable(33) @172, i64 33, i1 false)
  %58 = tail call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 33, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i55 = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 33, ptr %memberidx2.i.i55, align 4
  %memberidx15 = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 3
  %59 = load ptr, ptr %memberidx15, align 8
  %60 = load ptr, ptr %59, align 8
  %memberidx.i56 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %61 = load ptr, ptr %memberidx.i56, align 8
  %memberidx1.i57 = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx1.i57, align 8
  %63 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %63, align 4
  %memberidx1.i.i58 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %60, ptr %memberidx1.i.i58, align 8
  %memberidx2.i.i59 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i59, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %64 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %65 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %64, %65
  br i1 %.not.i.i, label %if.entry12.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry12.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry12
  %.pre87 = load ptr, ptr %62, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry12
  %66 = shl nuw i64 %65, 1
  store i64 %66, ptr %memberidx1.i2.i, align 4
  %67 = load ptr, ptr %62, align 8
  %68 = shl i64 %65, 4
  %69 = tail call ptr @realloc(ptr %67, i64 %68)
  store ptr %69, ptr %62, align 8
  %.pre86 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry12.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %70 = phi ptr [ %.pre87, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %69, %if.entry.i.i ]
  %71 = phi i64 [ %64, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %.pre86, %if.entry.i.i ]
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %memberidx.i.i, align 4
  %73 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %63, ptr %73, align 8
  br label %common.ret

ifend14:                                          ; preds = %if.entry4.i, %if.entry.i, %check_is_var.exit
  %memberidx17 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %74 = load ptr, ptr %memberidx17, align 8
  %memberidx18 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %75 = load ptr, ptr %memberidx18, align 8
  %76 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %74, ptr %75)
  br i1 %76, label %ifend21, label %if.entry19

if.entry19:                                       ; preds = %ifend14
  %77 = load ptr, ptr %memberidx18, align 8
  %78 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %77)
  %memberidx.i61 = getelementptr inbounds %String, ptr %78, i64 0, i32 1
  %79 = load i64, ptr %memberidx.i61, align 4
  %80 = trunc i64 %79 to i32
  %81 = add i32 %80, 1
  %82 = tail call ptr @malloc(i32 %81)
  %83 = load ptr, ptr %78, align 8
  %84 = load i64, ptr %memberidx.i61, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %82, ptr align 8 %83, i64 %84, i1 false)
  %85 = getelementptr inbounds i8, ptr %82, i64 %84
  store i8 0, ptr %85, align 1
  %86 = load ptr, ptr %memberidx17, align 8
  %87 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %86)
  %memberidx.i62 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  %88 = load i64, ptr %memberidx.i62, align 4
  %89 = trunc i64 %88 to i32
  %90 = add i32 %89, 1
  %91 = tail call ptr @malloc(i32 %90)
  %92 = load ptr, ptr %87, align 8
  %93 = load i64, ptr %memberidx.i62, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %91, ptr align 8 %92, i64 %93, i1 false)
  %94 = getelementptr inbounds i8, ptr %91, i64 %93
  store i8 0, ptr %94, align 1
  %95 = alloca ptr, align 8
  %96 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %95, ptr nonnull @173, ptr %82, ptr %91)
  %97 = load ptr, ptr %95, align 8
  %98 = tail call ptr @malloc(i32 24)
  store ptr %97, ptr %98, align 8
  %memberidx1.i63 = getelementptr inbounds %String, ptr %98, i64 0, i32 1
  store i64 %96, ptr %memberidx1.i63, align 4
  %memberidx2.i64 = getelementptr inbounds %String, ptr %98, i64 0, i32 2
  store i64 %96, ptr %memberidx2.i64, align 4
  tail call void @free(ptr %82)
  tail call void @free(ptr %91)
  %99 = load ptr, ptr %3, align 8
  %memberidx.i65 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %100 = load ptr, ptr %memberidx.i65, align 8
  %memberidx1.i66 = getelementptr inbounds %Compiler, ptr %100, i64 0, i32 5
  %101 = load ptr, ptr %memberidx1.i66, align 8
  %102 = call ptr @malloc(i32 24)
  store i64 5, ptr %102, align 4
  %memberidx1.i.i67 = getelementptr inbounds %FloError, ptr %102, i64 0, i32 2
  store ptr %99, ptr %memberidx1.i.i67, align 8
  %memberidx2.i.i68 = getelementptr inbounds %FloError, ptr %102, i64 0, i32 1
  store ptr %98, ptr %memberidx2.i.i68, align 8
  %memberidx.i.i69 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 1
  %103 = load i64, ptr %memberidx.i.i69, align 4
  %memberidx1.i2.i70 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 2
  %104 = load i64, ptr %memberidx1.i2.i70, align 4
  %.not.i.i71 = icmp slt i64 %103, %104
  br i1 %.not.i.i71, label %if.entry19.TypeChecker_error.exit74_crit_edge, label %if.entry.i.i73

if.entry19.TypeChecker_error.exit74_crit_edge:    ; preds = %if.entry19
  %.pre85 = load ptr, ptr %101, align 8
  br label %TypeChecker_error.exit74

if.entry.i.i73:                                   ; preds = %if.entry19
  %105 = shl nuw i64 %104, 1
  store i64 %105, ptr %memberidx1.i2.i70, align 4
  %106 = load ptr, ptr %101, align 8
  %107 = shl i64 %104, 4
  %108 = call ptr @realloc(ptr %106, i64 %107)
  store ptr %108, ptr %101, align 8
  %.pre84 = load i64, ptr %memberidx.i.i69, align 4
  br label %TypeChecker_error.exit74

TypeChecker_error.exit74:                         ; preds = %if.entry19.TypeChecker_error.exit74_crit_edge, %if.entry.i.i73
  %109 = phi ptr [ %.pre85, %if.entry19.TypeChecker_error.exit74_crit_edge ], [ %108, %if.entry.i.i73 ]
  %110 = phi i64 [ %103, %if.entry19.TypeChecker_error.exit74_crit_edge ], [ %.pre84, %if.entry.i.i73 ]
  %111 = add nsw i64 %110, 1
  store i64 %111, ptr %memberidx.i.i69, align 4
  %112 = getelementptr inbounds ptr, ptr %109, i64 %110
  store ptr %102, ptr %112, align 8
  br label %common.ret

ifend21:                                          ; preds = %ifend14
  %113 = tail call ptr @malloc(i32 49)
  %114 = load ptr, ptr %memberidx18, align 8
  store i64 8, ptr %113, align 4
  %memberidx.i.i75 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i75, align 4
  %memberidx1.i.i76 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 1
  %memberidx.i77 = getelementptr inbounds %BinaryExpression, ptr %113, i64 0, i32 4
  store ptr %1, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %BinaryExpression, ptr %113, i64 0, i32 5
  store i64 19, ptr %memberidx1.i78, align 4
  %memberidx2.i79 = getelementptr inbounds %BinaryExpression, ptr %113, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i79, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %113, i64 0, i32 3
  store ptr %114, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i76, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_init_function_signature(ptr %0, ptr nocapture readonly %1, ptr %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 1
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i, align 4
  %6 = tail call ptr @malloc(i32 25)
  %7 = load ptr, ptr %1, align 8
  %memberidx1.i75 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i75, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 2
  store i64 %8, ptr %memberidx3.i.i, align 4
  %9 = icmp slt i64 %8, 1
  br i1 %9, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i80 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx.i86 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 1
  %memberidx1.i87 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Type____sl__.exit
  %10 = phi i64 [ 1, %for.body.lr.ph ], [ %52, %Array_Type____sl__.exit ]
  %arg.0110.in = phi ptr [ %7, %for.body.lr.ph ], [ %53, %Array_Type____sl__.exit ]
  %arg.0110 = load ptr, ptr %arg.0110.in, align 8
  %11 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %11, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %11, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i, align 4
  %memberidx1.i.i77 = getelementptr inbounds %Expression, ptr %11, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i77, align 1
  %memberidx3 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 5
  %12 = load ptr, ptr %arg.0110, align 8
  %memberidx5 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx5, align 8
  store ptr %13, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 6
  store ptr null, ptr %memberidx6, align 8
  %14 = call ptr @malloc(i32 8)
  store i64 21, ptr %14, align 4
  %memberidx7 = getelementptr inbounds %ArgNode, ptr %arg.0110, i64 0, i32 1
  %15 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

common.ret.loopexit:                              ; preds = %if.entry, %if.entry13
  store i1 false, ptr %6, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %for.end
  %common.ret.op = phi ptr [ %17, %for.end ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

for.end:                                          ; preds = %Array_Type____sl__.exit, %for.entry
  tail call void @free(ptr nonnull %6)
  %16 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %2)
  %17 = tail call ptr @malloc(i32 25)
  store i64 16, ptr %17, align 4
  %memberidx.i78 = getelementptr inbounds %FunctionType, ptr %17, i64 0, i32 1
  store ptr %4, ptr %memberidx.i78, align 8
  %memberidx1.i79 = getelementptr inbounds %FunctionType, ptr %17, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i79, align 8
  br label %common.ret

if.entry:                                         ; preds = %for.body
  %18 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %15)
  %19 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i81 = getelementptr inbounds %Compiler, ptr %19, i64 0, i32 5
  %20 = load ptr, ptr %memberidx1.i81, align 8
  %memberidx2.i82 = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx2.i82, align 4
  %22 = icmp sgt i64 %21, 0
  br i1 %22, label %common.ret.loopexit, label %ifend

ifend:                                            ; preds = %if.entry, %for.body
  %arg_type.0 = phi ptr [ %18, %if.entry ], [ %14, %for.body ]
  %memberidx12 = getelementptr inbounds %ArgNode, ptr %arg.0110, i64 0, i32 2
  %23 = load ptr, ptr %memberidx12, align 8
  %.not74 = icmp eq ptr %23, null
  br i1 %.not74, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend
  %24 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %arg_type.0, ptr nonnull %23)
  store ptr %24, ptr %memberidx6, align 8
  %25 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i84 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i84, align 8
  %memberidx2.i85 = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i85, align 4
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %common.ret.loopexit, label %ifend20

ifend15:                                          ; preds = %ifend20, %TypeChecker_error.exit, %else23, %ifend
  %arg_type.1 = phi ptr [ %arg_type.0, %TypeChecker_error.exit ], [ %arg_type.0, %else23 ], [ %arg_type.0, %ifend ], [ %56, %ifend20 ]
  %29 = load i64, ptr %memberidx.i86, align 4
  %30 = load i64, ptr %memberidx1.i87, align 4
  %.not.i = icmp slt i64 %29, %30
  br i1 %.not.i, label %ifend15.Array_FunctionArg____sl__.exit_crit_edge, label %if.entry.i

ifend15.Array_FunctionArg____sl__.exit_crit_edge: ; preds = %ifend15
  %.pre114 = load ptr, ptr %3, align 8
  br label %Array_FunctionArg____sl__.exit

if.entry.i:                                       ; preds = %ifend15
  %31 = shl nuw i64 %30, 1
  store i64 %31, ptr %memberidx1.i87, align 4
  %32 = load ptr, ptr %3, align 8
  %33 = shl i64 %30, 4
  %34 = call ptr @realloc(ptr %32, i64 %33)
  store ptr %34, ptr %3, align 8
  %.pre113 = load i64, ptr %memberidx.i86, align 4
  br label %Array_FunctionArg____sl__.exit

Array_FunctionArg____sl__.exit:                   ; preds = %ifend15.Array_FunctionArg____sl__.exit_crit_edge, %if.entry.i
  %35 = phi ptr [ %.pre114, %ifend15.Array_FunctionArg____sl__.exit_crit_edge ], [ %34, %if.entry.i ]
  %36 = phi i64 [ %29, %ifend15.Array_FunctionArg____sl__.exit_crit_edge ], [ %.pre113, %if.entry.i ]
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr %memberidx.i86, align 4
  %38 = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %11, ptr %38, align 8
  %memberidx36 = getelementptr inbounds %Expression, ptr %11, i64 0, i32 3
  store ptr %arg_type.1, ptr %memberidx36, align 8
  %39 = load ptr, ptr %memberidx3, align 8
  %40 = call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr %0, ptr %39, ptr nonnull %11, ptr %arg_type.1)
  %memberidx38 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 4
  %memberidx39 = getelementptr inbounds %Var, ptr %40, i64 0, i32 1
  %41 = load ptr, ptr %memberidx39, align 8
  store ptr %41, ptr %memberidx38, align 8
  %42 = load i64, ptr %memberidx.i, align 4
  %43 = load i64, ptr %memberidx1.i, align 4
  %.not.i91 = icmp slt i64 %42, %43
  br i1 %.not.i91, label %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge, label %if.entry.i93

Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge: ; preds = %Array_FunctionArg____sl__.exit
  %.pre116 = load ptr, ptr %4, align 8
  br label %Array_Type____sl__.exit

if.entry.i93:                                     ; preds = %Array_FunctionArg____sl__.exit
  %44 = shl nuw i64 %43, 1
  store i64 %44, ptr %memberidx1.i, align 4
  %45 = load ptr, ptr %4, align 8
  %46 = shl i64 %43, 4
  %47 = call ptr @realloc(ptr %45, i64 %46)
  store ptr %47, ptr %4, align 8
  %.pre115 = load i64, ptr %memberidx.i, align 4
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge, %if.entry.i93
  %48 = phi ptr [ %.pre116, %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge ], [ %47, %if.entry.i93 ]
  %49 = phi i64 [ %42, %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge ], [ %.pre115, %if.entry.i93 ]
  %50 = add nsw i64 %49, 1
  store i64 %50, ptr %memberidx.i, align 4
  %51 = getelementptr inbounds ptr, ptr %48, i64 %49
  store ptr %arg_type.1, ptr %51, align 8
  %52 = add nuw nsw i64 %10, 1
  store i64 %52, ptr %memberidx1.i.i, align 4
  %53 = getelementptr inbounds ptr, ptr %7, i64 %10
  %.not117 = icmp slt i64 %10, %8
  br i1 %.not117, label %for.body, label %for.end

ifend20:                                          ; preds = %if.entry13
  %54 = load i64, ptr %arg_type.0, align 4
  %55 = icmp eq i64 %54, 21
  %memberidx26 = getelementptr inbounds %Expression, ptr %24, i64 0, i32 3
  %56 = load ptr, ptr %memberidx26, align 8
  br i1 %55, label %ifend15, label %else23

else23:                                           ; preds = %ifend20
  %57 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %arg_type.0, ptr %56)
  br i1 %57, label %ifend15, label %if.entry29

if.entry29:                                       ; preds = %else23
  %58 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %arg_type.0)
  %memberidx.i97 = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i97, align 4
  %60 = trunc i64 %59 to i32
  %61 = add i32 %60, 1
  %62 = call ptr @malloc(i32 %61)
  %63 = load ptr, ptr %58, align 8
  %64 = load i64, ptr %memberidx.i97, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %62, ptr align 8 %63, i64 %64, i1 false)
  %65 = getelementptr inbounds i8, ptr %62, i64 %64
  store i8 0, ptr %65, align 1
  %66 = load ptr, ptr %memberidx6, align 8
  %memberidx33 = getelementptr inbounds %Expression, ptr %66, i64 0, i32 3
  %67 = load ptr, ptr %memberidx33, align 8
  %68 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %67)
  %memberidx.i98 = getelementptr inbounds %String, ptr %68, i64 0, i32 1
  %69 = load i64, ptr %memberidx.i98, align 4
  %70 = trunc i64 %69 to i32
  %71 = add i32 %70, 1
  %72 = call ptr @malloc(i32 %71)
  %73 = load ptr, ptr %68, align 8
  %74 = load i64, ptr %memberidx.i98, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %72, ptr align 8 %73, i64 %74, i1 false)
  %75 = getelementptr inbounds i8, ptr %72, i64 %74
  store i8 0, ptr %75, align 1
  %76 = alloca ptr, align 8
  %77 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %76, ptr nonnull @106, ptr %62, ptr %72)
  %78 = load ptr, ptr %76, align 8
  %79 = tail call ptr @malloc(i32 24)
  store ptr %78, ptr %79, align 8
  %memberidx1.i99 = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  store i64 %77, ptr %memberidx1.i99, align 4
  %memberidx2.i100 = getelementptr inbounds %String, ptr %79, i64 0, i32 2
  store i64 %77, ptr %memberidx2.i100, align 4
  tail call void @free(ptr %62)
  tail call void @free(ptr %72)
  %80 = load ptr, ptr %memberidx12, align 8
  %81 = load ptr, ptr %80, align 8
  %82 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i102 = getelementptr inbounds %Compiler, ptr %82, i64 0, i32 5
  %83 = load ptr, ptr %memberidx1.i102, align 8
  %84 = call ptr @malloc(i32 24)
  store i64 5, ptr %84, align 4
  %memberidx1.i.i103 = getelementptr inbounds %FloError, ptr %84, i64 0, i32 2
  store ptr %81, ptr %memberidx1.i.i103, align 8
  %memberidx2.i.i104 = getelementptr inbounds %FloError, ptr %84, i64 0, i32 1
  store ptr %79, ptr %memberidx2.i.i104, align 8
  %memberidx.i.i105 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 1
  %85 = load i64, ptr %memberidx.i.i105, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 2
  %86 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %85, %86
  br i1 %.not.i.i, label %if.entry29.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry29.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry29
  %.pre112 = load ptr, ptr %83, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry29
  %87 = shl nuw i64 %86, 1
  store i64 %87, ptr %memberidx1.i2.i, align 4
  %88 = load ptr, ptr %83, align 8
  %89 = shl i64 %86, 4
  %90 = call ptr @realloc(ptr %88, i64 %89)
  store ptr %90, ptr %83, align 8
  %.pre = load i64, ptr %memberidx.i.i105, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry29.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %91 = phi ptr [ %.pre112, %if.entry29.TypeChecker_error.exit_crit_edge ], [ %90, %if.entry.i.i ]
  %92 = phi i64 [ %85, %if.entry29.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %93 = add nsw i64 %92, 1
  store i64 %93, ptr %memberidx.i.i105, align 4
  %94 = getelementptr inbounds ptr, ptr %91, i64 %92
  store ptr %84, ptr %94, align 8
  br label %ifend15
}

define internal fastcc ptr @TypeChecker_check_constructor_call(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2, ptr nocapture writeonly %3) unnamed_addr {
  %5 = load ptr, ptr %0, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = load i64, ptr %1, align 4
  %8 = load ptr, ptr %6, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %7
  %10 = load ptr, ptr %9, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i, align 4
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %else13, %if.entry12, %ifend11, %if.entry
  %common.ret.op = phi ptr [ %19, %if.entry ], [ null, %ifend11 ], [ %52, %if.entry12 ], [ %80, %else13 ], [ null, %ifend ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %18 = tail call ptr @malloc(i32 44)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(44) %18, ptr noundef nonnull align 8 dereferenceable(44) @189, i64 44, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 44, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 44, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %4
  %memberidx2 = getelementptr inbounds %Class, ptr %15, i64 0, i32 5
  %20 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %16, i64 0, i32 2
  %21 = load i64, ptr %memberidx3, align 4
  %22 = load ptr, ptr %20, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %24, i64 0, i32 4
  %25 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %24, i64 0, i32 6
  %26 = load ptr, ptr %memberidx5, align 8
  %27 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr %25, ptr %26, ptr %2)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %28 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i38 = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx2.i38, align 4
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %common.ret, label %ifend8

ifend8:                                           ; preds = %ifend
  %memberidx.i39 = getelementptr inbounds %FunctionType, ptr %25, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i39, align 8
  %memberidx1.i40 = getelementptr inbounds %Array_Type_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx1.i40, align 4
  %memberidx2.i41 = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 1
  %34 = load i64, ptr %memberidx2.i41, align 4
  %.not.i = icmp eq i64 %33, %34
  br i1 %.not.i, label %for.cond.i.preheader, label %if.entry12

for.cond.i.preheader:                             ; preds = %ifend8
  %35 = icmp sgt i64 %33, 0
  br i1 %35, label %for.body.i, label %ifend11

for.body.i:                                       ; preds = %for.cond.i.preheader, %ifend8.i
  %i.0.i54 = phi i64 [ %45, %ifend8.i ], [ 0, %for.cond.i.preheader ]
  %36 = load ptr, ptr %memberidx.i39, align 8
  %37 = load ptr, ptr %36, align 8
  %38 = getelementptr inbounds ptr, ptr %37, i64 %i.0.i54
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr %27, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %i.0.i54
  %42 = load ptr, ptr %41, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %42, i64 0, i32 3
  %43 = load ptr, ptr %memberidx5.i, align 8
  %44 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %39, ptr %43)
  br i1 %44, label %ifend8.i, label %else13

ifend8.i:                                         ; preds = %for.body.i
  %45 = add nuw nsw i64 %i.0.i54, 1
  %46 = load i64, ptr %memberidx2.i41, align 4
  %47 = icmp slt i64 %45, %46
  br i1 %47, label %for.body.i, label %ifend11

ifend11:                                          ; preds = %ifend8.i, %for.cond.i.preheader
  store ptr %27, ptr %3, align 8
  br label %common.ret

if.entry12:                                       ; preds = %ifend8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %2, i64 0, i32 1
  %48 = load i64, ptr %memberidx17, align 4
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @190, i64 %33, i64 %48)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i42 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 %50, ptr %memberidx1.i42, align 4
  %memberidx2.i43 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i43, align 4
  br label %common.ret

else13:                                           ; preds = %for.body.i
  %53 = load ptr, ptr %memberidx.i39, align 8
  %54 = load ptr, ptr %53, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %i.0.i54
  %56 = load ptr, ptr %55, align 8
  %57 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %56)
  %memberidx.i44 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i44, align 4
  %59 = trunc i64 %58 to i32
  %60 = add i32 %59, 1
  %61 = tail call ptr @malloc(i32 %60)
  %62 = load ptr, ptr %57, align 8
  %63 = load i64, ptr %memberidx.i44, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %62, i64 %63, i1 false)
  %64 = getelementptr inbounds i8, ptr %61, i64 %63
  store i8 0, ptr %64, align 1
  %65 = load ptr, ptr %27, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %i.0.i54
  %67 = load ptr, ptr %66, align 8
  %memberidx19 = getelementptr inbounds %Expression, ptr %67, i64 0, i32 3
  %68 = load ptr, ptr %memberidx19, align 8
  %69 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %68)
  %memberidx.i45 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  %70 = load i64, ptr %memberidx.i45, align 4
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, 1
  %73 = tail call ptr @malloc(i32 %72)
  %74 = load ptr, ptr %69, align 8
  %75 = load i64, ptr %memberidx.i45, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %73, ptr align 8 %74, i64 %75, i1 false)
  %76 = getelementptr inbounds i8, ptr %73, i64 %75
  store i8 0, ptr %76, align 1
  %77 = alloca ptr, align 8
  %78 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %77, ptr nonnull @191, ptr %61, ptr %73, i64 %i.0.i54)
  %79 = load ptr, ptr %77, align 8
  %80 = tail call ptr @malloc(i32 24)
  store ptr %79, ptr %80, align 8
  %memberidx1.i46 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  store i64 %78, ptr %memberidx1.i46, align 4
  %memberidx2.i47 = getelementptr inbounds %String, ptr %80, i64 0, i32 2
  store i64 %78, ptr %memberidx2.i47, align 4
  tail call void @free(ptr %61)
  tail call void @free(ptr %73)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_methods(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1564 = getelementptr inbounds %Array_MethodNode_, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx1564, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i240 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %memberidx52 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx110 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %memberidx121 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx98 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx134 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassMethod____sl__.exit
  %6 = phi ptr [ %3, %for.body.lr.ph ], [ %473, %Array_ClassMethod____sl__.exit ]
  %i.0565 = phi i64 [ 0, %for.body.lr.ph ], [ %472, %Array_ClassMethod____sl__.exit ]
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %i.0565
  %9 = load ptr, ptr %8, align 8
  %10 = tail call ptr @malloc(i32 58)
  %memberidx.i = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 7
  store i1 false, ptr %memberidx.i, align 1
  %11 = load ptr, ptr %9, align 8
  %memberidx4 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 3
  store ptr %12, ptr %memberidx5, align 8
  %13 = load ptr, ptr %memberidx.i240, align 8
  %14 = load i64, ptr %13, align 4
  %15 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %14)
  %memberidx2.i = getelementptr inbounds %Scope, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx.i240, align 8
  store ptr %16, ptr %memberidx2.i, align 8
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %memberidx.i240, align 8
  %19 = load ptr, ptr %17, align 8
  %20 = load i64, ptr %18, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %23, i64 0, i32 7
  %24 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %18, i64 0, i32 1
  %25 = load i64, ptr %memberidx3.i.i.i, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %28, i64 0, i32 7
  %29 = load ptr, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %15, align 8
  %memberidx.i.i = getelementptr inbounds %Array_ScopeId_, ptr %29, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %29, i64 0, i32 2
  %32 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i = icmp slt i64 %31, %32
  br i1 %.not.i.i, label %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i

for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %for.body
  %.pre603 = load ptr, ptr %29, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i:                                     ; preds = %for.body
  %33 = shl nuw i64 %32, 1
  store i64 %33, ptr %memberidx1.i11.i, align 4
  %34 = load ptr, ptr %29, align 8
  %35 = shl i64 %32, 4
  %36 = tail call ptr @realloc(ptr %34, i64 %35)
  store ptr %36, ptr %29, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i
  %37 = phi ptr [ %.pre603, %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %36, %if.entry.i.i ]
  %38 = phi i64 [ %31, %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %39 = add nsw i64 %38, 1
  store i64 %39, ptr %memberidx.i.i, align 4
  %40 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %30, ptr %40, align 8
  %41 = load ptr, ptr %15, align 8
  store ptr %41, ptr %memberidx.i240, align 8
  %memberidx8 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 6
  %42 = tail call ptr @malloc(i32 24)
  %memberidx.i241 = getelementptr inbounds %Array_FunctionArg_, ptr %42, i64 0, i32 1
  store i64 0, ptr %memberidx.i241, align 4
  %memberidx1.i = getelementptr inbounds %Array_FunctionArg_, ptr %42, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %43 = tail call ptr @malloc(i32 64)
  store ptr %43, ptr %42, align 8
  store i64 0, ptr %memberidx.i241, align 4
  store ptr %42, ptr %memberidx8, align 8
  %44 = tail call fastcc i1 @is_operator_overload_name(ptr %12)
  br i1 %44, label %if.entry, label %ifend

common.ret:                                       ; preds = %Array_ClassMethod____sl__.exit, %for.entry, %TypeChecker_error.exit468, %TypeChecker_error.exit456, %TypeChecker_error.exit441, %TypeChecker_error.exit421, %TypeChecker_error.exit395, %TypeChecker_error.exit375, %TypeChecker_error.exit339, %TypeChecker_error.exit323, %TypeChecker_error.exit292, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %45 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %45, align 8
  %46 = tail call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i.i242 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i242, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i, align 4
  %memberidx.i243 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %47 = load i64, ptr %memberidx.i243, align 4
  %.not.i = icmp eq i64 %47, 8
  br i1 %.not.i, label %ifend.i, label %String___eq__.exit

ifend.i:                                          ; preds = %if.entry
  %48 = load ptr, ptr %12, align 8
  %49 = tail call i64 @memcmp(ptr %48, ptr nonnull %45, i64 8)
  %50 = icmp eq i64 %49, 0
  br label %String___eq__.exit

String___eq__.exit:                               ; preds = %if.entry, %ifend.i
  %common.ret.op.i = phi i1 [ %50, %ifend.i ], [ false, %if.entry ]
  %51 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %51, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i.i245 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i245, align 4
  %memberidx2.i.i246 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i246, align 4
  %53 = load i64, ptr %memberidx.i243, align 4
  %.not.i249 = icmp eq i64 %53, 7
  br i1 %.not.i249, label %ifend.i251, label %String___eq__.exit252

ifend.i251:                                       ; preds = %String___eq__.exit
  %54 = load ptr, ptr %12, align 8
  %55 = tail call i64 @memcmp(ptr %54, ptr nonnull %51, i64 7)
  %56 = icmp eq i64 %55, 0
  br label %String___eq__.exit252

String___eq__.exit252:                            ; preds = %String___eq__.exit, %ifend.i251
  %common.ret.op.i250 = phi i1 [ %56, %ifend.i251 ], [ false, %String___eq__.exit ]
  %57 = or i1 %common.ret.op.i, %common.ret.op.i250
  br i1 %57, label %ifend13, label %else12

ifend:                                            ; preds = %ifend21, %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx33 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 6
  %58 = load i1, ptr %memberidx33, align 1
  store i1 %58, ptr %memberidx.i, align 1
  %memberidx34 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 1
  %memberidx35 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 5
  %59 = load i1, ptr %memberidx35, align 1
  store i1 %59, ptr %memberidx34, align 1
  %memberidx36 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 2
  %memberidx37 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 3
  %60 = load i64, ptr %memberidx37, align 4
  store i64 %60, ptr %memberidx36, align 4
  %memberidx38 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 4
  %memberidx39 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 1
  %61 = load ptr, ptr %memberidx39, align 8
  %memberidx40 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 4
  %62 = load ptr, ptr %memberidx40, align 8
  %63 = load ptr, ptr %memberidx8, align 8
  %64 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %61, ptr %62, ptr %63)
  store ptr %64, ptr %memberidx38, align 8
  %65 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %65, align 8
  %66 = tail call ptr @malloc(i32 24)
  store ptr %65, ptr %66, align 8
  %memberidx1.i.i253 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i253, align 4
  %memberidx2.i.i254 = getelementptr inbounds %String, ptr %66, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i254, align 4
  %memberidx.i255 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %67 = load i64, ptr %memberidx.i255, align 4
  %.not.i257 = icmp eq i64 %67, 8
  br i1 %.not.i257, label %ifend.i259, label %ifend44

ifend.i259:                                       ; preds = %ifend
  %68 = load ptr, ptr %12, align 8
  %69 = tail call i64 @memcmp(ptr %68, ptr nonnull %65, i64 8)
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %if.entry42, label %ifend44

else12:                                           ; preds = %String___eq__.exit252
  %71 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %71, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %72 = tail call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i.i261 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i261, align 4
  %memberidx2.i.i262 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i262, align 4
  %73 = load i64, ptr %memberidx.i243, align 4
  %.not.i265 = icmp eq i64 %73, 11
  br i1 %.not.i265, label %String___eq__.exit268, label %ifend13

String___eq__.exit268:                            ; preds = %else12
  %74 = load ptr, ptr %12, align 8
  %75 = tail call i64 @memcmp(ptr %74, ptr nonnull %71, i64 11)
  %.fr = freeze i64 %75
  %76 = icmp eq i64 %.fr, 0
  %spec.select = select i1 %76, i64 2, i64 1
  br label %ifend13

ifend13:                                          ; preds = %String___eq__.exit268, %else12, %String___eq__.exit252
  %args_num.0 = phi i64 [ 0, %String___eq__.exit252 ], [ 1, %else12 ], [ %spec.select, %String___eq__.exit268 ]
  %memberidx17 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 1
  %77 = load ptr, ptr %memberidx17, align 8
  %memberidx18 = getelementptr inbounds %Array_ArgNode_, ptr %77, i64 0, i32 1
  %78 = load i64, ptr %memberidx18, align 4
  %.not239 = icmp eq i64 %78, %args_num.0
  br i1 %.not239, label %ifend21, label %if.entry19

if.entry19:                                       ; preds = %ifend13
  %79 = load i64, ptr %memberidx.i243, align 4
  %80 = trunc i64 %79 to i32
  %81 = add i32 %80, 1
  %82 = tail call ptr @malloc(i32 %81)
  %83 = load ptr, ptr %12, align 8
  %84 = load i64, ptr %memberidx.i243, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %82, ptr align 8 %83, i64 %84, i1 false)
  %85 = getelementptr inbounds i8, ptr %82, i64 %84
  store i8 0, ptr %85, align 1
  %86 = load ptr, ptr %memberidx17, align 8
  %memberidx23 = getelementptr inbounds %Array_ArgNode_, ptr %86, i64 0, i32 1
  %87 = load i64, ptr %memberidx23, align 4
  %88 = alloca ptr, align 8
  %89 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %88, ptr nonnull @142, i64 %args_num.0, ptr %82, i64 %87)
  %90 = load ptr, ptr %88, align 8
  %91 = tail call ptr @malloc(i32 24)
  store ptr %90, ptr %91, align 8
  %memberidx1.i270 = getelementptr inbounds %String, ptr %91, i64 0, i32 1
  store i64 %89, ptr %memberidx1.i270, align 4
  %memberidx2.i271 = getelementptr inbounds %String, ptr %91, i64 0, i32 2
  store i64 %89, ptr %memberidx2.i271, align 4
  tail call void @free(ptr %82)
  %92 = load ptr, ptr %9, align 8
  %memberidx25 = getelementptr inbounds %Token, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx25, align 8
  %memberidx.i272 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %94 = load ptr, ptr %memberidx.i272, align 8
  %memberidx1.i273 = getelementptr inbounds %Compiler, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx1.i273, align 8
  %96 = call ptr @malloc(i32 24)
  store i64 4, ptr %96, align 4
  %memberidx1.i.i274 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 2
  store ptr %93, ptr %memberidx1.i.i274, align 8
  %memberidx2.i.i275 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 1
  store ptr %91, ptr %memberidx2.i.i275, align 8
  %memberidx.i.i276 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i.i276, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 2
  %98 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i277 = icmp slt i64 %97, %98
  br i1 %.not.i.i277, label %if.entry19.TypeChecker_error.exit_crit_edge, label %if.entry.i.i279

if.entry19.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry19
  %.pre605 = load ptr, ptr %95, align 8
  br label %TypeChecker_error.exit

if.entry.i.i279:                                  ; preds = %if.entry19
  %99 = shl nuw i64 %98, 1
  store i64 %99, ptr %memberidx1.i2.i, align 4
  %100 = load ptr, ptr %95, align 8
  %101 = shl i64 %98, 4
  %102 = call ptr @realloc(ptr %100, i64 %101)
  store ptr %102, ptr %95, align 8
  %.pre604 = load i64, ptr %memberidx.i.i276, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry19.TypeChecker_error.exit_crit_edge, %if.entry.i.i279
  %103 = phi ptr [ %.pre605, %if.entry19.TypeChecker_error.exit_crit_edge ], [ %102, %if.entry.i.i279 ]
  %104 = phi i64 [ %97, %if.entry19.TypeChecker_error.exit_crit_edge ], [ %.pre604, %if.entry.i.i279 ]
  %105 = add nsw i64 %104, 1
  store i64 %105, ptr %memberidx.i.i276, align 4
  %106 = getelementptr inbounds ptr, ptr %103, i64 %104
  store ptr %96, ptr %106, align 8
  br label %common.ret

ifend21:                                          ; preds = %ifend13
  %memberidx26 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 5
  %107 = load i1, ptr %memberidx26, align 1
  br i1 %107, label %if.entry27, label %ifend

if.entry27:                                       ; preds = %ifend21
  %108 = load i64, ptr %memberidx.i243, align 4
  %109 = trunc i64 %108 to i32
  %110 = add i32 %109, 1
  %111 = tail call ptr @malloc(i32 %110)
  %112 = load ptr, ptr %12, align 8
  %113 = load i64, ptr %memberidx.i243, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %111, ptr align 8 %112, i64 %113, i1 false)
  %114 = getelementptr inbounds i8, ptr %111, i64 %113
  store i8 0, ptr %114, align 1
  %115 = alloca ptr, align 8
  %116 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %115, ptr nonnull @143, ptr %111)
  %117 = load ptr, ptr %115, align 8
  %118 = tail call ptr @malloc(i32 24)
  store ptr %117, ptr %118, align 8
  %memberidx1.i281 = getelementptr inbounds %String, ptr %118, i64 0, i32 1
  store i64 %116, ptr %memberidx1.i281, align 4
  %memberidx2.i282 = getelementptr inbounds %String, ptr %118, i64 0, i32 2
  store i64 %116, ptr %memberidx2.i282, align 4
  tail call void @free(ptr %111)
  %119 = load ptr, ptr %9, align 8
  %memberidx31 = getelementptr inbounds %Token, ptr %119, i64 0, i32 1
  %120 = load ptr, ptr %memberidx31, align 8
  %memberidx.i283 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %121 = load ptr, ptr %memberidx.i283, align 8
  %memberidx1.i284 = getelementptr inbounds %Compiler, ptr %121, i64 0, i32 5
  %122 = load ptr, ptr %memberidx1.i284, align 8
  %123 = call ptr @malloc(i32 24)
  store i64 4, ptr %123, align 4
  %memberidx1.i.i285 = getelementptr inbounds %FloError, ptr %123, i64 0, i32 2
  store ptr %120, ptr %memberidx1.i.i285, align 8
  %memberidx2.i.i286 = getelementptr inbounds %FloError, ptr %123, i64 0, i32 1
  store ptr %118, ptr %memberidx2.i.i286, align 8
  %memberidx.i.i287 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 1
  %124 = load i64, ptr %memberidx.i.i287, align 4
  %memberidx1.i2.i288 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 2
  %125 = load i64, ptr %memberidx1.i2.i288, align 4
  %.not.i.i289 = icmp slt i64 %124, %125
  br i1 %.not.i.i289, label %if.entry27.TypeChecker_error.exit292_crit_edge, label %if.entry.i.i291

if.entry27.TypeChecker_error.exit292_crit_edge:   ; preds = %if.entry27
  %.pre640 = load ptr, ptr %122, align 8
  br label %TypeChecker_error.exit292

if.entry.i.i291:                                  ; preds = %if.entry27
  %126 = shl nuw i64 %125, 1
  store i64 %126, ptr %memberidx1.i2.i288, align 4
  %127 = load ptr, ptr %122, align 8
  %128 = shl i64 %125, 4
  %129 = call ptr @realloc(ptr %127, i64 %128)
  store ptr %129, ptr %122, align 8
  %.pre639 = load i64, ptr %memberidx.i.i287, align 4
  br label %TypeChecker_error.exit292

TypeChecker_error.exit292:                        ; preds = %if.entry27.TypeChecker_error.exit292_crit_edge, %if.entry.i.i291
  %130 = phi ptr [ %.pre640, %if.entry27.TypeChecker_error.exit292_crit_edge ], [ %129, %if.entry.i.i291 ]
  %131 = phi i64 [ %124, %if.entry27.TypeChecker_error.exit292_crit_edge ], [ %.pre639, %if.entry.i.i291 ]
  %132 = add nsw i64 %131, 1
  store i64 %132, ptr %memberidx.i.i287, align 4
  %133 = getelementptr inbounds ptr, ptr %130, i64 %131
  store ptr %123, ptr %133, align 8
  br label %common.ret

if.entry42:                                       ; preds = %ifend.i259
  %134 = load ptr, ptr %memberidx38, align 8
  %memberidx46 = getelementptr inbounds %FunctionType, ptr %134, i64 0, i32 2
  %135 = load ptr, ptr %memberidx46, align 8
  %136 = load i64, ptr %135, align 4
  %137 = icmp eq i64 %136, 20
  br i1 %137, label %if.entry.i517, label %is_object.exit

if.entry.i517:                                    ; preds = %if.entry42, %if.entry.i517
  %.tr5.i = phi ptr [ %138, %if.entry.i517 ], [ %135, %if.entry42 ]
  %memberidx1.i516 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %138 = load ptr, ptr %memberidx1.i516, align 8
  %139 = load i64, ptr %138, align 4
  %140 = icmp eq i64 %139, 20
  br i1 %140, label %if.entry.i517, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i517, %if.entry42
  %.lcssa.i = phi i64 [ %136, %if.entry42 ], [ %139, %if.entry.i517 ]
  %141 = icmp eq i64 %.lcssa.i, 11
  br i1 %141, label %ifend.i298, label %if.entry47

ifend.i298:                                       ; preds = %is_object.exit
  %142 = load ptr, ptr %0, align 8
  br label %tailrecurse.i507

tailrecurse.i507:                                 ; preds = %if.entry.i510, %ifend.i298
  %143 = phi i64 [ %136, %ifend.i298 ], [ %.pre606, %if.entry.i510 ]
  %.tr11.i506 = phi ptr [ %135, %ifend.i298 ], [ %144, %if.entry.i510 ]
  switch i64 %143, label %get_class_from_type.exit515 [
    i64 20, label %if.entry.i510
    i64 11, label %if.entry3.i514
  ]

if.entry.i510:                                    ; preds = %tailrecurse.i507
  %memberidx1.i509 = getelementptr inbounds %GenericType, ptr %.tr11.i506, i64 0, i32 3
  %144 = load ptr, ptr %memberidx1.i509, align 8
  %.pre606 = load i64, ptr %144, align 4
  br label %tailrecurse.i507

if.entry3.i514:                                   ; preds = %tailrecurse.i507
  %memberidx6.i511 = getelementptr inbounds %ObjectType, ptr %.tr11.i506, i64 0, i32 1
  %145 = load ptr, ptr %memberidx6.i511, align 8
  %146 = load ptr, ptr %142, align 8
  %147 = load i64, ptr %145, align 4
  %148 = load ptr, ptr %146, align 8
  %149 = getelementptr inbounds ptr, ptr %148, i64 %147
  %150 = load ptr, ptr %149, align 8
  %memberidx2.i.i512 = getelementptr inbounds %Module, ptr %150, i64 0, i32 3
  %151 = load ptr, ptr %memberidx2.i.i512, align 8
  %memberidx3.i.i513 = getelementptr inbounds %TypeId, ptr %145, i64 0, i32 2
  %152 = load i64, ptr %memberidx3.i.i513, align 4
  %153 = load ptr, ptr %151, align 8
  %154 = getelementptr inbounds ptr, ptr %153, i64 %152
  %155 = load ptr, ptr %154, align 8
  br label %get_class_from_type.exit515

get_class_from_type.exit515:                      ; preds = %tailrecurse.i507, %if.entry3.i514
  %common.ret.op.i508 = phi ptr [ %155, %if.entry3.i514 ], [ null, %tailrecurse.i507 ]
  %memberidx1.i294 = getelementptr inbounds %Class, ptr %common.ret.op.i508, i64 0, i32 6
  %156 = load ptr, ptr %memberidx1.i294, align 8
  %157 = tail call ptr @malloc(i32 4)
  store i32 1701736292, ptr %157, align 8
  %158 = tail call ptr @malloc(i32 24)
  store ptr %157, ptr %158, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %158, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i295 = getelementptr inbounds %String, ptr %158, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i295, align 4
  %159 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %158)
  %memberidx.i.i296 = getelementptr inbounds %Map_String_PropId_, ptr %156, i64 0, i32 1
  %160 = load i64, ptr %memberidx.i.i296, align 4
  %161 = urem i64 %159, %160
  %162 = load ptr, ptr %156, align 8
  %163 = getelementptr inbounds ptr, ptr %162, i64 %161
  %164 = load ptr, ptr %163, align 8
  %.not.i.i297 = icmp eq ptr %164, null
  br i1 %.not.i.i297, label %if.entry47, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %get_class_from_type.exit515, %else.i.i
  %165 = phi ptr [ %173, %else.i.i ], [ %162, %get_class_from_type.exit515 ]
  %166 = phi i64 [ %174, %else.i.i ], [ %160, %get_class_from_type.exit515 ]
  %167 = phi ptr [ %178, %else.i.i ], [ %164, %get_class_from_type.exit515 ]
  %hash.0.i.i = phi i64 [ %176, %else.i.i ], [ %161, %get_class_from_type.exit515 ]
  %168 = load ptr, ptr %167, align 8
  %memberidx.i.i.i299 = getelementptr inbounds %String, ptr %168, i64 0, i32 1
  %169 = load i64, ptr %memberidx.i.i.i299, align 4
  %.not.i.i.i = icmp eq i64 %169, 4
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %170 = load ptr, ptr %168, align 8
  %171 = tail call i64 @memcmp(ptr %170, ptr nonnull %157, i64 4)
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre607 = load i64, ptr %memberidx.i.i296, align 4
  %.pre608 = load ptr, ptr %156, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre609.pre = load ptr, ptr %156, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre609.pre, i64 %hash.0.i.i
  %.pre610.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre610.pre, null
  br i1 %.not25.i.i, label %if.entry47, label %Map_String_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %173 = phi ptr [ %.pre608, %ifend.i.i.i.else.i.i_crit_edge ], [ %165, %while.entry.i.i ]
  %174 = phi i64 [ %.pre607, %ifend.i.i.i.else.i.i_crit_edge ], [ %166, %while.entry.i.i ]
  %175 = add nuw i64 %hash.0.i.i, 1
  %176 = urem i64 %175, %174
  %177 = getelementptr inbounds ptr, ptr %173, i64 %176
  %178 = load ptr, ptr %177, align 8
  %.not26.i.i = icmp eq ptr %178, null
  br i1 %.not26.i.i, label %if.entry47, label %while.entry.i.i

Map_String_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre610.pre, i64 0, i32 1
  %179 = load ptr, ptr %memberidx11.i.i, align 8
  %180 = icmp eq ptr %179, null
  br i1 %180, label %if.entry47, label %ifend4.i

ifend4.i:                                         ; preds = %Map_String_PropId____getitem__.exit.i
  %181 = load ptr, ptr %0, align 8
  %memberidx.i.i34.i = getelementptr inbounds %PropId, ptr %179, i64 0, i32 1
  %182 = load ptr, ptr %memberidx.i.i34.i, align 8
  %183 = load ptr, ptr %181, align 8
  %184 = load i64, ptr %182, align 4
  %185 = load ptr, ptr %183, align 8
  %186 = getelementptr inbounds ptr, ptr %185, i64 %184
  %187 = load ptr, ptr %186, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %187, i64 0, i32 3
  %188 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %182, i64 0, i32 2
  %189 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %190 = load ptr, ptr %188, align 8
  %191 = getelementptr inbounds ptr, ptr %190, i64 %189
  %192 = load ptr, ptr %191, align 8
  %193 = load i64, ptr %179, align 4
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %if.entry.i.i302, label %ifend.i.i

if.entry.i.i302:                                  ; preds = %ifend4.i
  %memberidx1.i.i300 = getelementptr inbounds %Class, ptr %192, i64 0, i32 5
  %195 = load ptr, ptr %memberidx1.i.i300, align 8
  %memberidx2.i.i301 = getelementptr inbounds %PropId, ptr %179, i64 0, i32 2
  %196 = load i64, ptr %memberidx2.i.i301, align 4
  %197 = load ptr, ptr %195, align 8
  %198 = getelementptr inbounds ptr, ptr %197, i64 %196
  %199 = load ptr, ptr %198, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %199, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend4.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %192, i64 0, i32 4
  %200 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %179, i64 0, i32 2
  %201 = load i64, ptr %memberidx5.i.i, align 4
  %202 = load ptr, ptr %200, align 8
  %203 = getelementptr inbounds ptr, ptr %202, i64 %201
  %204 = load ptr, ptr %203, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %204, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i302
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i302 ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i35.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %205 = load i64, ptr %common.ret.op.i35.i, align 4
  %.not.i303 = icmp eq i64 %205, 0
  br i1 %.not.i303, label %ifend9.i, label %if.entry47

ifend9.i:                                         ; preds = %get_class_prop_type.exit.i
  %206 = load ptr, ptr %memberidx1.i294, align 8
  %207 = tail call ptr @malloc(i32 4)
  store i32 1954047342, ptr %207, align 8
  %208 = tail call ptr @malloc(i32 24)
  store ptr %207, ptr %208, align 8
  %memberidx1.i.i36.i = getelementptr inbounds %String, ptr %208, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i36.i, align 4
  %memberidx2.i.i37.i = getelementptr inbounds %String, ptr %208, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i37.i, align 4
  %209 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %208)
  %memberidx.i38.i = getelementptr inbounds %Map_String_PropId_, ptr %206, i64 0, i32 1
  %210 = load i64, ptr %memberidx.i38.i, align 4
  %211 = urem i64 %209, %210
  %212 = load ptr, ptr %206, align 8
  %213 = getelementptr inbounds ptr, ptr %212, i64 %211
  %214 = load ptr, ptr %213, align 8
  %.not.i39.i = icmp eq ptr %214, null
  br i1 %.not.i39.i, label %if.entry47, label %while.entry.i44.i

while.entry.i44.i:                                ; preds = %ifend9.i, %else.i52.i
  %215 = phi ptr [ %223, %else.i52.i ], [ %212, %ifend9.i ]
  %216 = phi i64 [ %224, %else.i52.i ], [ %210, %ifend9.i ]
  %217 = phi ptr [ %228, %else.i52.i ], [ %214, %ifend9.i ]
  %hash.0.i40.i = phi i64 [ %226, %else.i52.i ], [ %211, %ifend9.i ]
  %218 = load ptr, ptr %217, align 8
  %memberidx.i.i41.i = getelementptr inbounds %String, ptr %218, i64 0, i32 1
  %219 = load i64, ptr %memberidx.i.i41.i, align 4
  %.not.i.i43.i = icmp eq i64 %219, 4
  br i1 %.not.i.i43.i, label %ifend.i.i45.i, label %else.i52.i

ifend.i.i45.i:                                    ; preds = %while.entry.i44.i
  %220 = load ptr, ptr %218, align 8
  %221 = tail call i64 @memcmp(ptr %220, ptr nonnull %207, i64 4)
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %while.end.i50.i, label %ifend.i.i45.i.else.i52.i_crit_edge

ifend.i.i45.i.else.i52.i_crit_edge:               ; preds = %ifend.i.i45.i
  %.pre611 = load i64, ptr %memberidx.i38.i, align 4
  %.pre612 = load ptr, ptr %206, align 8
  br label %else.i52.i

while.end.i50.i:                                  ; preds = %ifend.i.i45.i
  %.pre613.pre = load ptr, ptr %206, align 8
  %.phi.trans.insert614.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre613.pre, i64 %hash.0.i40.i
  %.pre615.pre = load ptr, ptr %.phi.trans.insert614.phi.trans.insert, align 8
  %.not25.i49.i = icmp eq ptr %.pre615.pre, null
  br i1 %.not25.i49.i, label %if.entry47, label %Map_String_PropId____getitem__.exit56.i

else.i52.i:                                       ; preds = %ifend.i.i45.i.else.i52.i_crit_edge, %while.entry.i44.i
  %223 = phi ptr [ %.pre612, %ifend.i.i45.i.else.i52.i_crit_edge ], [ %215, %while.entry.i44.i ]
  %224 = phi i64 [ %.pre611, %ifend.i.i45.i.else.i52.i_crit_edge ], [ %216, %while.entry.i44.i ]
  %225 = add nuw i64 %hash.0.i40.i, 1
  %226 = urem i64 %225, %224
  %227 = getelementptr inbounds ptr, ptr %223, i64 %226
  %228 = load ptr, ptr %227, align 8
  %.not26.i51.i = icmp eq ptr %228, null
  br i1 %.not26.i51.i, label %if.entry47, label %while.entry.i44.i

Map_String_PropId____getitem__.exit56.i:          ; preds = %while.end.i50.i
  %memberidx11.i54.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre615.pre, i64 0, i32 1
  %229 = load ptr, ptr %memberidx11.i54.i, align 8
  %230 = icmp eq ptr %229, null
  br i1 %230, label %if.entry47, label %ifend13.i

ifend13.i:                                        ; preds = %Map_String_PropId____getitem__.exit56.i
  %231 = load ptr, ptr %0, align 8
  %memberidx.i.i57.i = getelementptr inbounds %PropId, ptr %229, i64 0, i32 1
  %232 = load ptr, ptr %memberidx.i.i57.i, align 8
  %233 = load ptr, ptr %231, align 8
  %234 = load i64, ptr %232, align 4
  %235 = load ptr, ptr %233, align 8
  %236 = getelementptr inbounds ptr, ptr %235, i64 %234
  %237 = load ptr, ptr %236, align 8
  %memberidx2.i.i.i58.i = getelementptr inbounds %Module, ptr %237, i64 0, i32 3
  %238 = load ptr, ptr %memberidx2.i.i.i58.i, align 8
  %memberidx3.i.i.i59.i = getelementptr inbounds %TypeId, ptr %232, i64 0, i32 2
  %239 = load i64, ptr %memberidx3.i.i.i59.i, align 4
  %240 = load ptr, ptr %238, align 8
  %241 = getelementptr inbounds ptr, ptr %240, i64 %239
  %242 = load ptr, ptr %241, align 8
  %243 = load i64, ptr %229, align 4
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %if.entry.i65.i, label %ifend.i69.i

if.entry.i65.i:                                   ; preds = %ifend13.i
  %memberidx1.i62.i = getelementptr inbounds %Class, ptr %242, i64 0, i32 5
  %245 = load ptr, ptr %memberidx1.i62.i, align 8
  %memberidx2.i63.i = getelementptr inbounds %PropId, ptr %229, i64 0, i32 2
  %246 = load i64, ptr %memberidx2.i63.i, align 4
  %247 = load ptr, ptr %245, align 8
  %248 = getelementptr inbounds ptr, ptr %247, i64 %246
  %249 = load ptr, ptr %248, align 8
  %memberidx3.i64.i = getelementptr inbounds %ClassMethod, ptr %249, i64 0, i32 4
  br label %get_class_prop_type.exit70.i

ifend.i69.i:                                      ; preds = %ifend13.i
  %memberidx4.i66.i = getelementptr inbounds %Class, ptr %242, i64 0, i32 4
  %250 = load ptr, ptr %memberidx4.i66.i, align 8
  %memberidx5.i67.i = getelementptr inbounds %PropId, ptr %229, i64 0, i32 2
  %251 = load i64, ptr %memberidx5.i67.i, align 4
  %252 = load ptr, ptr %250, align 8
  %253 = getelementptr inbounds ptr, ptr %252, i64 %251
  %254 = load ptr, ptr %253, align 8
  %memberidx6.i68.i = getelementptr inbounds %ClassField, ptr %254, i64 0, i32 4
  br label %get_class_prop_type.exit70.i

get_class_prop_type.exit70.i:                     ; preds = %ifend.i69.i, %if.entry.i65.i
  %common.ret.op.in.i60.i = phi ptr [ %memberidx3.i64.i, %if.entry.i65.i ], [ %memberidx6.i68.i, %ifend.i69.i ]
  %common.ret.op.i61.i = load ptr, ptr %common.ret.op.in.i60.i, align 8
  %255 = load i64, ptr %common.ret.op.i61.i, align 4
  %.not31.i = icmp eq i64 %255, 16
  br i1 %.not31.i, label %ifend18.i, label %if.entry47

ifend18.i:                                        ; preds = %get_class_prop_type.exit70.i
  %memberidx19.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i61.i, i64 0, i32 1
  %256 = load ptr, ptr %memberidx19.i, align 8
  %memberidx20.i = getelementptr inbounds %Array_Type_, ptr %256, i64 0, i32 1
  %257 = load i64, ptr %memberidx20.i, align 4
  %.not32.i = icmp eq i64 %257, 0
  br i1 %.not32.i, label %ifend44, label %if.entry47

ifend44:                                          ; preds = %ifend, %ifend18.i, %ifend.i259
  %258 = load ptr, ptr %memberidx52, align 8
  %259 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i304 = getelementptr inbounds %Map_String_PropId_, ptr %258, i64 0, i32 1
  %260 = load i64, ptr %memberidx.i304, align 4
  %261 = urem i64 %259, %260
  %262 = load ptr, ptr %258, align 8
  %263 = getelementptr inbounds ptr, ptr %262, i64 %261
  %264 = load ptr, ptr %263, align 8
  %.not.i305 = icmp eq ptr %264, null
  br i1 %.not.i305, label %ifend55, label %while.entry.i

while.entry.i:                                    ; preds = %ifend44, %else.i
  %265 = phi ptr [ %275, %else.i ], [ %262, %ifend44 ]
  %266 = phi i64 [ %276, %else.i ], [ %260, %ifend44 ]
  %267 = phi ptr [ %280, %else.i ], [ %264, %ifend44 ]
  %hash.0.i = phi i64 [ %278, %else.i ], [ %261, %ifend44 ]
  %268 = load ptr, ptr %267, align 8
  %memberidx.i.i306 = getelementptr inbounds %String, ptr %268, i64 0, i32 1
  %269 = load i64, ptr %memberidx.i.i306, align 4
  %270 = load i64, ptr %memberidx.i255, align 4
  %.not.i.i308 = icmp eq i64 %269, %270
  br i1 %.not.i.i308, label %ifend.i.i309, label %else.i

ifend.i.i309:                                     ; preds = %while.entry.i
  %271 = load ptr, ptr %268, align 8
  %272 = load ptr, ptr %12, align 8
  %273 = tail call i64 @memcmp(ptr %271, ptr %272, i64 %269)
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %while.end.i, label %ifend.i.i309.else.i_crit_edge

ifend.i.i309.else.i_crit_edge:                    ; preds = %ifend.i.i309
  %.pre616 = load i64, ptr %memberidx.i304, align 4
  %.pre617 = load ptr, ptr %258, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i309
  %.pre618.pre = load ptr, ptr %258, align 8
  %.phi.trans.insert619.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre618.pre, i64 %hash.0.i
  %.pre620.pre = load ptr, ptr %.phi.trans.insert619.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre620.pre, null
  br i1 %.not25.i, label %ifend55, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i309.else.i_crit_edge, %while.entry.i
  %275 = phi ptr [ %.pre617, %ifend.i.i309.else.i_crit_edge ], [ %265, %while.entry.i ]
  %276 = phi i64 [ %.pre616, %ifend.i.i309.else.i_crit_edge ], [ %266, %while.entry.i ]
  %277 = add nuw i64 %hash.0.i, 1
  %278 = urem i64 %277, %276
  %279 = getelementptr inbounds ptr, ptr %275, i64 %278
  %280 = load ptr, ptr %279, align 8
  %.not26.i = icmp eq ptr %280, null
  br i1 %.not26.i, label %ifend55, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre620.pre, i64 0, i32 1
  %281 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %281, null
  br i1 %.not, label %ifend55, label %if.entry53

if.entry47:                                       ; preds = %ifend9.i, %get_class_from_type.exit515, %while.end.i50.i, %while.end.i.i, %is_object.exit, %Map_String_PropId____getitem__.exit.i, %get_class_prop_type.exit.i, %Map_String_PropId____getitem__.exit56.i, %get_class_prop_type.exit70.i, %ifend18.i, %else.i.i, %else.i52.i
  %282 = tail call ptr @malloc(i32 74)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(74) %282, ptr noundef nonnull align 8 dereferenceable(74) @144, i64 74, i1 false)
  %283 = tail call ptr @malloc(i32 24)
  store ptr %282, ptr %283, align 8
  %memberidx1.i.i312 = getelementptr inbounds %String, ptr %283, i64 0, i32 1
  store i64 74, ptr %memberidx1.i.i312, align 4
  %memberidx2.i.i313 = getelementptr inbounds %String, ptr %283, i64 0, i32 2
  store i64 74, ptr %memberidx2.i.i313, align 4
  %284 = load ptr, ptr %9, align 8
  %memberidx51 = getelementptr inbounds %Token, ptr %284, i64 0, i32 1
  %285 = load ptr, ptr %memberidx51, align 8
  %memberidx.i314 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %286 = load ptr, ptr %memberidx.i314, align 8
  %memberidx1.i315 = getelementptr inbounds %Compiler, ptr %286, i64 0, i32 5
  %287 = load ptr, ptr %memberidx1.i315, align 8
  %288 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %288, align 4
  %memberidx1.i.i316 = getelementptr inbounds %FloError, ptr %288, i64 0, i32 2
  store ptr %285, ptr %memberidx1.i.i316, align 8
  %memberidx2.i.i317 = getelementptr inbounds %FloError, ptr %288, i64 0, i32 1
  store ptr %283, ptr %memberidx2.i.i317, align 8
  %memberidx.i.i318 = getelementptr inbounds %Array_FloError_, ptr %287, i64 0, i32 1
  %289 = load i64, ptr %memberidx.i.i318, align 4
  %memberidx1.i2.i319 = getelementptr inbounds %Array_FloError_, ptr %287, i64 0, i32 2
  %290 = load i64, ptr %memberidx1.i2.i319, align 4
  %.not.i.i320 = icmp slt i64 %289, %290
  br i1 %.not.i.i320, label %if.entry47.TypeChecker_error.exit323_crit_edge, label %if.entry.i.i322

if.entry47.TypeChecker_error.exit323_crit_edge:   ; preds = %if.entry47
  %.pre638 = load ptr, ptr %287, align 8
  br label %TypeChecker_error.exit323

if.entry.i.i322:                                  ; preds = %if.entry47
  %291 = shl nuw i64 %290, 1
  store i64 %291, ptr %memberidx1.i2.i319, align 4
  %292 = load ptr, ptr %287, align 8
  %293 = shl i64 %290, 4
  %294 = tail call ptr @realloc(ptr %292, i64 %293)
  store ptr %294, ptr %287, align 8
  %.pre637 = load i64, ptr %memberidx.i.i318, align 4
  br label %TypeChecker_error.exit323

TypeChecker_error.exit323:                        ; preds = %if.entry47.TypeChecker_error.exit323_crit_edge, %if.entry.i.i322
  %295 = phi ptr [ %.pre638, %if.entry47.TypeChecker_error.exit323_crit_edge ], [ %294, %if.entry.i.i322 ]
  %296 = phi i64 [ %289, %if.entry47.TypeChecker_error.exit323_crit_edge ], [ %.pre637, %if.entry.i.i322 ]
  %297 = add nsw i64 %296, 1
  store i64 %297, ptr %memberidx.i.i318, align 4
  %298 = getelementptr inbounds ptr, ptr %295, i64 %296
  store ptr %288, ptr %298, align 8
  br label %common.ret

if.entry53:                                       ; preds = %Map_String_PropId____getitem__.exit
  %memberidx56 = getelementptr inbounds %PropId, ptr %281, i64 0, i32 1
  %299 = load ptr, ptr %memberidx56, align 8
  %300 = load ptr, ptr %1, align 8
  %301 = icmp eq ptr %299, %300
  br i1 %301, label %if.entry58, label %ifend60

ifend55:                                          ; preds = %else.i, %ifend44, %while.end.i, %ifend69, %Map_String_PropId____getitem__.exit
  %302 = tail call ptr @malloc(i32 24)
  %303 = load ptr, ptr %1, align 8
  store i64 0, ptr %302, align 4
  %memberidx1.i324 = getelementptr inbounds %PropId, ptr %302, i64 0, i32 1
  store ptr %303, ptr %memberidx1.i324, align 8
  %memberidx2.i325 = getelementptr inbounds %PropId, ptr %302, i64 0, i32 2
  store i64 %i.0565, ptr %memberidx2.i325, align 4
  store ptr %302, ptr %10, align 8
  %304 = load i1, ptr %memberidx35, align 1
  br i1 %304, label %if.entry83, label %else84

if.entry58:                                       ; preds = %if.entry53
  %305 = load i64, ptr %memberidx.i255, align 4
  %306 = trunc i64 %305 to i32
  %307 = add i32 %306, 1
  %308 = tail call ptr @malloc(i32 %307)
  %309 = load ptr, ptr %12, align 8
  %310 = load i64, ptr %memberidx.i255, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %308, ptr align 8 %309, i64 %310, i1 false)
  %311 = getelementptr inbounds i8, ptr %308, i64 %310
  store i8 0, ptr %311, align 1
  %memberidx61 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %312 = load ptr, ptr %memberidx61, align 8
  %memberidx.i327 = getelementptr inbounds %String, ptr %312, i64 0, i32 1
  %313 = load i64, ptr %memberidx.i327, align 4
  %314 = trunc i64 %313 to i32
  %315 = add i32 %314, 1
  %316 = tail call ptr @malloc(i32 %315)
  %317 = load ptr, ptr %312, align 8
  %318 = load i64, ptr %memberidx.i327, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %316, ptr align 8 %317, i64 %318, i1 false)
  %319 = getelementptr inbounds i8, ptr %316, i64 %318
  store i8 0, ptr %319, align 1
  %320 = alloca ptr, align 8
  %321 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %320, ptr nonnull @145, ptr %308, ptr %316)
  %322 = load ptr, ptr %320, align 8
  %323 = tail call ptr @malloc(i32 24)
  store ptr %322, ptr %323, align 8
  %memberidx1.i328 = getelementptr inbounds %String, ptr %323, i64 0, i32 1
  store i64 %321, ptr %memberidx1.i328, align 4
  %memberidx2.i329 = getelementptr inbounds %String, ptr %323, i64 0, i32 2
  store i64 %321, ptr %memberidx2.i329, align 4
  tail call void @free(ptr %308)
  tail call void @free(ptr %316)
  %324 = load ptr, ptr %9, align 8
  %memberidx63 = getelementptr inbounds %Token, ptr %324, i64 0, i32 1
  %325 = load ptr, ptr %memberidx63, align 8
  %memberidx.i330 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %326 = load ptr, ptr %memberidx.i330, align 8
  %memberidx1.i331 = getelementptr inbounds %Compiler, ptr %326, i64 0, i32 5
  %327 = load ptr, ptr %memberidx1.i331, align 8
  %328 = call ptr @malloc(i32 24)
  store i64 1, ptr %328, align 4
  %memberidx1.i.i332 = getelementptr inbounds %FloError, ptr %328, i64 0, i32 2
  store ptr %325, ptr %memberidx1.i.i332, align 8
  %memberidx2.i.i333 = getelementptr inbounds %FloError, ptr %328, i64 0, i32 1
  store ptr %323, ptr %memberidx2.i.i333, align 8
  %memberidx.i.i334 = getelementptr inbounds %Array_FloError_, ptr %327, i64 0, i32 1
  %329 = load i64, ptr %memberidx.i.i334, align 4
  %memberidx1.i2.i335 = getelementptr inbounds %Array_FloError_, ptr %327, i64 0, i32 2
  %330 = load i64, ptr %memberidx1.i2.i335, align 4
  %.not.i.i336 = icmp slt i64 %329, %330
  br i1 %.not.i.i336, label %if.entry58.TypeChecker_error.exit339_crit_edge, label %if.entry.i.i338

if.entry58.TypeChecker_error.exit339_crit_edge:   ; preds = %if.entry58
  %.pre626 = load ptr, ptr %327, align 8
  br label %TypeChecker_error.exit339

if.entry.i.i338:                                  ; preds = %if.entry58
  %331 = shl nuw i64 %330, 1
  store i64 %331, ptr %memberidx1.i2.i335, align 4
  %332 = load ptr, ptr %327, align 8
  %333 = shl i64 %330, 4
  %334 = call ptr @realloc(ptr %332, i64 %333)
  store ptr %334, ptr %327, align 8
  %.pre625 = load i64, ptr %memberidx.i.i334, align 4
  br label %TypeChecker_error.exit339

TypeChecker_error.exit339:                        ; preds = %if.entry58.TypeChecker_error.exit339_crit_edge, %if.entry.i.i338
  %335 = phi ptr [ %.pre626, %if.entry58.TypeChecker_error.exit339_crit_edge ], [ %334, %if.entry.i.i338 ]
  %336 = phi i64 [ %329, %if.entry58.TypeChecker_error.exit339_crit_edge ], [ %.pre625, %if.entry.i.i338 ]
  %337 = add nsw i64 %336, 1
  store i64 %337, ptr %memberidx.i.i334, align 4
  %338 = getelementptr inbounds ptr, ptr %335, i64 %336
  store ptr %328, ptr %338, align 8
  br label %common.ret

ifend60:                                          ; preds = %if.entry53
  %339 = load ptr, ptr %0, align 8
  %340 = load ptr, ptr %339, align 8
  %341 = load i64, ptr %299, align 4
  %342 = load ptr, ptr %340, align 8
  %343 = getelementptr inbounds ptr, ptr %342, i64 %341
  %344 = load ptr, ptr %343, align 8
  %memberidx2.i.i.i341 = getelementptr inbounds %Module, ptr %344, i64 0, i32 3
  %345 = load ptr, ptr %memberidx2.i.i.i341, align 8
  %memberidx3.i.i.i342 = getelementptr inbounds %TypeId, ptr %299, i64 0, i32 2
  %346 = load i64, ptr %memberidx3.i.i.i342, align 4
  %347 = load ptr, ptr %345, align 8
  %348 = getelementptr inbounds ptr, ptr %347, i64 %346
  %349 = load ptr, ptr %348, align 8
  %350 = load i64, ptr %281, align 4
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %if.entry.i356, label %ifend.i360

if.entry.i356:                                    ; preds = %ifend60
  %memberidx1.i344 = getelementptr inbounds %Class, ptr %349, i64 0, i32 5
  %352 = load ptr, ptr %memberidx1.i344, align 8
  %memberidx2.i345 = getelementptr inbounds %PropId, ptr %281, i64 0, i32 2
  %353 = load i64, ptr %memberidx2.i345, align 4
  %354 = load ptr, ptr %352, align 8
  %355 = getelementptr inbounds ptr, ptr %354, i64 %353
  %356 = load ptr, ptr %355, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %356, i64 0, i32 4
  %memberidx3.i355 = getelementptr inbounds %ClassMethod, ptr %356, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i360:                                       ; preds = %ifend60
  %memberidx4.i346 = getelementptr inbounds %Class, ptr %349, i64 0, i32 4
  %357 = load ptr, ptr %memberidx4.i346, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %281, i64 0, i32 2
  %358 = load i64, ptr %memberidx5.i, align 4
  %359 = load ptr, ptr %357, align 8
  %360 = getelementptr inbounds ptr, ptr %359, i64 %358
  %361 = load ptr, ptr %360, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %361, i64 0, i32 4
  %memberidx6.i359 = getelementptr inbounds %ClassField, ptr %361, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i356, %ifend.i360
  %common.ret.op.i343527.in = phi ptr [ %memberidx3.i, %if.entry.i356 ], [ %memberidx6.i, %ifend.i360 ]
  %common.ret.op.in.i351 = phi ptr [ %memberidx3.i355, %if.entry.i356 ], [ %memberidx6.i359, %ifend.i360 ]
  %common.ret.op.i343527 = load ptr, ptr %common.ret.op.i343527.in, align 8
  %common.ret.op.i352 = load i64, ptr %common.ret.op.in.i351, align 4
  %362 = load ptr, ptr %memberidx38, align 8
  %363 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i343527, ptr %362)
  br i1 %363, label %ifend69, label %if.entry67

if.entry67:                                       ; preds = %get_class_prop_visibility.exit
  %364 = load i64, ptr %memberidx.i255, align 4
  %365 = trunc i64 %364 to i32
  %366 = add i32 %365, 1
  %367 = tail call ptr @malloc(i32 %366)
  %368 = load ptr, ptr %12, align 8
  %369 = load i64, ptr %memberidx.i255, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %367, ptr align 8 %368, i64 %369, i1 false)
  %370 = getelementptr inbounds i8, ptr %367, i64 %369
  store i8 0, ptr %370, align 1
  %memberidx70 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %371 = load ptr, ptr %memberidx70, align 8
  %memberidx.i362 = getelementptr inbounds %String, ptr %371, i64 0, i32 1
  %372 = load i64, ptr %memberidx.i362, align 4
  %373 = trunc i64 %372 to i32
  %374 = add i32 %373, 1
  %375 = tail call ptr @malloc(i32 %374)
  %376 = load ptr, ptr %371, align 8
  %377 = load i64, ptr %memberidx.i362, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %375, ptr align 8 %376, i64 %377, i1 false)
  %378 = getelementptr inbounds i8, ptr %375, i64 %377
  store i8 0, ptr %378, align 1
  %379 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i343527)
  %memberidx.i363 = getelementptr inbounds %String, ptr %379, i64 0, i32 1
  %380 = load i64, ptr %memberidx.i363, align 4
  %381 = trunc i64 %380 to i32
  %382 = add i32 %381, 1
  %383 = tail call ptr @malloc(i32 %382)
  %384 = load ptr, ptr %379, align 8
  %385 = load i64, ptr %memberidx.i363, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %383, ptr align 8 %384, i64 %385, i1 false)
  %386 = getelementptr inbounds i8, ptr %383, i64 %385
  store i8 0, ptr %386, align 1
  %387 = alloca ptr, align 8
  %388 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %387, ptr nonnull @146, ptr %367, ptr %375, ptr %383)
  %389 = load ptr, ptr %387, align 8
  %390 = tail call ptr @malloc(i32 24)
  store ptr %389, ptr %390, align 8
  %memberidx1.i364 = getelementptr inbounds %String, ptr %390, i64 0, i32 1
  store i64 %388, ptr %memberidx1.i364, align 4
  %memberidx2.i365 = getelementptr inbounds %String, ptr %390, i64 0, i32 2
  store i64 %388, ptr %memberidx2.i365, align 4
  tail call void @free(ptr %367)
  tail call void @free(ptr %375)
  tail call void @free(ptr %383)
  %391 = load ptr, ptr %9, align 8
  %memberidx72 = getelementptr inbounds %Token, ptr %391, i64 0, i32 1
  %392 = load ptr, ptr %memberidx72, align 8
  %memberidx.i366 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %393 = load ptr, ptr %memberidx.i366, align 8
  %memberidx1.i367 = getelementptr inbounds %Compiler, ptr %393, i64 0, i32 5
  %394 = load ptr, ptr %memberidx1.i367, align 8
  %395 = call ptr @malloc(i32 24)
  store i64 5, ptr %395, align 4
  %memberidx1.i.i368 = getelementptr inbounds %FloError, ptr %395, i64 0, i32 2
  store ptr %392, ptr %memberidx1.i.i368, align 8
  %memberidx2.i.i369 = getelementptr inbounds %FloError, ptr %395, i64 0, i32 1
  store ptr %390, ptr %memberidx2.i.i369, align 8
  %memberidx.i.i370 = getelementptr inbounds %Array_FloError_, ptr %394, i64 0, i32 1
  %396 = load i64, ptr %memberidx.i.i370, align 4
  %memberidx1.i2.i371 = getelementptr inbounds %Array_FloError_, ptr %394, i64 0, i32 2
  %397 = load i64, ptr %memberidx1.i2.i371, align 4
  %.not.i.i372 = icmp slt i64 %396, %397
  br i1 %.not.i.i372, label %if.entry67.TypeChecker_error.exit375_crit_edge, label %if.entry.i.i374

if.entry67.TypeChecker_error.exit375_crit_edge:   ; preds = %if.entry67
  %.pre622 = load ptr, ptr %394, align 8
  br label %TypeChecker_error.exit375

if.entry.i.i374:                                  ; preds = %if.entry67
  %398 = shl nuw i64 %397, 1
  store i64 %398, ptr %memberidx1.i2.i371, align 4
  %399 = load ptr, ptr %394, align 8
  %400 = shl i64 %397, 4
  %401 = call ptr @realloc(ptr %399, i64 %400)
  store ptr %401, ptr %394, align 8
  %.pre621 = load i64, ptr %memberidx.i.i370, align 4
  br label %TypeChecker_error.exit375

TypeChecker_error.exit375:                        ; preds = %if.entry67.TypeChecker_error.exit375_crit_edge, %if.entry.i.i374
  %402 = phi ptr [ %.pre622, %if.entry67.TypeChecker_error.exit375_crit_edge ], [ %401, %if.entry.i.i374 ]
  %403 = phi i64 [ %396, %if.entry67.TypeChecker_error.exit375_crit_edge ], [ %.pre621, %if.entry.i.i374 ]
  %404 = add nsw i64 %403, 1
  store i64 %404, ptr %memberidx.i.i370, align 4
  %405 = getelementptr inbounds ptr, ptr %402, i64 %403
  store ptr %395, ptr %405, align 8
  br label %common.ret

ifend69:                                          ; preds = %get_class_prop_visibility.exit
  %406 = load i64, ptr %memberidx36, align 4
  %.not238 = icmp eq i64 %406, %common.ret.op.i352
  br i1 %.not238, label %ifend55, label %if.entry74

if.entry74:                                       ; preds = %ifend69
  %407 = load i64, ptr %memberidx.i255, align 4
  %408 = trunc i64 %407 to i32
  %409 = add i32 %408, 1
  %410 = tail call ptr @malloc(i32 %409)
  %411 = load ptr, ptr %12, align 8
  %412 = load i64, ptr %memberidx.i255, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %410, ptr align 8 %411, i64 %412, i1 false)
  %413 = getelementptr inbounds i8, ptr %410, i64 %412
  store i8 0, ptr %413, align 1
  %memberidx77 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %414 = load ptr, ptr %memberidx77, align 8
  %memberidx.i377 = getelementptr inbounds %String, ptr %414, i64 0, i32 1
  %415 = load i64, ptr %memberidx.i377, align 4
  %416 = trunc i64 %415 to i32
  %417 = add i32 %416, 1
  %418 = tail call ptr @malloc(i32 %417)
  %419 = load ptr, ptr %414, align 8
  %420 = load i64, ptr %memberidx.i377, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %418, ptr align 8 %419, i64 %420, i1 false)
  %421 = getelementptr inbounds i8, ptr %418, i64 %420
  store i8 0, ptr %421, align 1
  switch i64 %common.ret.op.i352, label %ifend3.i [
    i64 1, label %if.entry.i381
    i64 2, label %if.entry1.i
  ]

if.entry.i381:                                    ; preds = %if.entry74
  %422 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %422, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  %423 = tail call ptr @malloc(i32 24)
  store ptr %422, ptr %423, align 8
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry74
  %424 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %424, ptr noundef nonnull align 8 dereferenceable(6) @53, i64 6, i1 false)
  %425 = tail call ptr @malloc(i32 24)
  store ptr %424, ptr %425, align 8
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry74
  %426 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %426, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  %427 = tail call ptr @malloc(i32 24)
  store ptr %426, ptr %427, align 8
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i381, %if.entry1.i, %ifend3.i
  %.sink700 = phi ptr [ %423, %if.entry.i381 ], [ %425, %if.entry1.i ], [ %427, %ifend3.i ]
  %.sink699 = phi i64 [ 7, %if.entry.i381 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %.off0 = phi i32 [ 8, %if.entry.i381 ], [ 7, %if.entry1.i ], [ 10, %ifend3.i ]
  %memberidx1.i.i.i379 = getelementptr inbounds %String, ptr %.sink700, i64 0, i32 1
  store i64 %.sink699, ptr %memberidx1.i.i.i379, align 4
  %memberidx2.i.i.i380 = getelementptr inbounds %String, ptr %.sink700, i64 0, i32 2
  store i64 %.sink699, ptr %memberidx2.i.i.i380, align 4
  %memberidx.i383 = getelementptr inbounds %String, ptr %.sink700, i64 0, i32 1
  %428 = tail call ptr @malloc(i32 %.off0)
  %429 = load ptr, ptr %.sink700, align 8
  %430 = load i64, ptr %memberidx.i383, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %428, ptr align 8 %429, i64 %430, i1 false)
  %431 = getelementptr inbounds i8, ptr %428, i64 %430
  store i8 0, ptr %431, align 1
  %432 = alloca ptr, align 8
  %433 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %432, ptr nonnull @147, ptr nonnull %410, ptr nonnull %418, ptr %428)
  %434 = load ptr, ptr %432, align 8
  %435 = tail call ptr @malloc(i32 24)
  store ptr %434, ptr %435, align 8
  %memberidx1.i384 = getelementptr inbounds %String, ptr %435, i64 0, i32 1
  store i64 %433, ptr %memberidx1.i384, align 4
  %memberidx2.i385 = getelementptr inbounds %String, ptr %435, i64 0, i32 2
  store i64 %433, ptr %memberidx2.i385, align 4
  tail call void @free(ptr nonnull %410)
  tail call void @free(ptr nonnull %418)
  tail call void @free(ptr %428)
  %436 = load ptr, ptr %9, align 8
  %memberidx79 = getelementptr inbounds %Token, ptr %436, i64 0, i32 1
  %437 = load ptr, ptr %memberidx79, align 8
  %memberidx.i386 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %438 = load ptr, ptr %memberidx.i386, align 8
  %memberidx1.i387 = getelementptr inbounds %Compiler, ptr %438, i64 0, i32 5
  %439 = load ptr, ptr %memberidx1.i387, align 8
  %440 = call ptr @malloc(i32 24)
  store i64 4, ptr %440, align 4
  %memberidx1.i.i388 = getelementptr inbounds %FloError, ptr %440, i64 0, i32 2
  store ptr %437, ptr %memberidx1.i.i388, align 8
  %memberidx2.i.i389 = getelementptr inbounds %FloError, ptr %440, i64 0, i32 1
  store ptr %435, ptr %memberidx2.i.i389, align 8
  %memberidx.i.i390 = getelementptr inbounds %Array_FloError_, ptr %439, i64 0, i32 1
  %441 = load i64, ptr %memberidx.i.i390, align 4
  %memberidx1.i2.i391 = getelementptr inbounds %Array_FloError_, ptr %439, i64 0, i32 2
  %442 = load i64, ptr %memberidx1.i2.i391, align 4
  %.not.i.i392 = icmp slt i64 %441, %442
  br i1 %.not.i.i392, label %dump_access.exit.TypeChecker_error.exit395_crit_edge, label %if.entry.i.i394

dump_access.exit.TypeChecker_error.exit395_crit_edge: ; preds = %dump_access.exit
  %.pre624 = load ptr, ptr %439, align 8
  br label %TypeChecker_error.exit395

if.entry.i.i394:                                  ; preds = %dump_access.exit
  %443 = shl nuw i64 %442, 1
  store i64 %443, ptr %memberidx1.i2.i391, align 4
  %444 = load ptr, ptr %439, align 8
  %445 = shl i64 %442, 4
  %446 = call ptr @realloc(ptr %444, i64 %445)
  store ptr %446, ptr %439, align 8
  %.pre623 = load i64, ptr %memberidx.i.i390, align 4
  br label %TypeChecker_error.exit395

TypeChecker_error.exit395:                        ; preds = %dump_access.exit.TypeChecker_error.exit395_crit_edge, %if.entry.i.i394
  %447 = phi ptr [ %.pre624, %dump_access.exit.TypeChecker_error.exit395_crit_edge ], [ %446, %if.entry.i.i394 ]
  %448 = phi i64 [ %441, %dump_access.exit.TypeChecker_error.exit395_crit_edge ], [ %.pre623, %if.entry.i.i394 ]
  %449 = add nsw i64 %448, 1
  store i64 %449, ptr %memberidx.i.i390, align 4
  %450 = getelementptr inbounds ptr, ptr %447, i64 %448
  store ptr %440, ptr %450, align 8
  br label %common.ret

if.entry83:                                       ; preds = %ifend55
  %451 = load i1, ptr %memberidx33, align 1
  br i1 %451, label %if.entry87, label %ifend89

else84:                                           ; preds = %ifend55
  %452 = load ptr, ptr %memberidx5, align 8
  %453 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %453, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %454 = tail call ptr @malloc(i32 24)
  store ptr %453, ptr %454, align 8
  %memberidx1.i.i396 = getelementptr inbounds %String, ptr %454, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i396, align 4
  %memberidx2.i.i397 = getelementptr inbounds %String, ptr %454, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i397, align 4
  %memberidx.i398 = getelementptr inbounds %String, ptr %452, i64 0, i32 1
  %455 = load i64, ptr %memberidx.i398, align 4
  %.not.i400 = icmp eq i64 %455, 11
  br i1 %.not.i400, label %ifend.i402, label %else102

ifend.i402:                                       ; preds = %else84
  %456 = load ptr, ptr %452, align 8
  %457 = tail call i64 @memcmp(ptr %456, ptr nonnull %453, i64 11)
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %if.entry101, label %else102

ifend85:                                          ; preds = %get_class_prop_type.exit482, %if.entry3.i, %ifend103, %ifend95
  %memberidx132 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 8
  %459 = load ptr, ptr %15, align 8
  store ptr %459, ptr %memberidx132, align 8
  %460 = load ptr, ptr %memberidx134, align 8
  %memberidx.i404 = getelementptr inbounds %Array_ClassMethod_, ptr %460, i64 0, i32 1
  %461 = load i64, ptr %memberidx.i404, align 4
  %memberidx1.i405 = getelementptr inbounds %Array_ClassMethod_, ptr %460, i64 0, i32 2
  %462 = load i64, ptr %memberidx1.i405, align 4
  %.not.i406 = icmp slt i64 %461, %462
  br i1 %.not.i406, label %ifend85.Array_ClassMethod____sl__.exit_crit_edge, label %if.entry.i408

ifend85.Array_ClassMethod____sl__.exit_crit_edge: ; preds = %ifend85
  %.pre632 = load ptr, ptr %460, align 8
  br label %Array_ClassMethod____sl__.exit

if.entry.i408:                                    ; preds = %ifend85
  %463 = shl nuw i64 %462, 1
  store i64 %463, ptr %memberidx1.i405, align 4
  %464 = load ptr, ptr %460, align 8
  %465 = shl i64 %462, 4
  %466 = tail call ptr @realloc(ptr %464, i64 %465)
  store ptr %466, ptr %460, align 8
  %.pre631 = load i64, ptr %memberidx.i404, align 4
  br label %Array_ClassMethod____sl__.exit

Array_ClassMethod____sl__.exit:                   ; preds = %ifend85.Array_ClassMethod____sl__.exit_crit_edge, %if.entry.i408
  %467 = phi ptr [ %.pre632, %ifend85.Array_ClassMethod____sl__.exit_crit_edge ], [ %466, %if.entry.i408 ]
  %468 = phi i64 [ %461, %ifend85.Array_ClassMethod____sl__.exit_crit_edge ], [ %.pre631, %if.entry.i408 ]
  %469 = add nsw i64 %468, 1
  store i64 %469, ptr %memberidx.i404, align 4
  %470 = getelementptr inbounds ptr, ptr %467, i64 %468
  store ptr %10, ptr %470, align 8
  %471 = load ptr, ptr %memberidx2.i, align 8
  store ptr %471, ptr %memberidx.i240, align 8
  %472 = add nuw nsw i64 %i.0565, 1
  %473 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_MethodNode_, ptr %473, i64 0, i32 1
  %474 = load i64, ptr %memberidx1, align 4
  %475 = icmp slt i64 %472, %474
  br i1 %475, label %for.body, label %common.ret

if.entry87:                                       ; preds = %if.entry83
  %476 = tail call ptr @malloc(i32 31)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %476, ptr noundef nonnull align 8 dereferenceable(31) @148, i64 31, i1 false)
  %477 = tail call ptr @malloc(i32 24)
  store ptr %476, ptr %477, align 8
  %memberidx1.i.i410 = getelementptr inbounds %String, ptr %477, i64 0, i32 1
  store i64 31, ptr %memberidx1.i.i410, align 4
  %memberidx2.i.i411 = getelementptr inbounds %String, ptr %477, i64 0, i32 2
  store i64 31, ptr %memberidx2.i.i411, align 4
  %478 = load ptr, ptr %9, align 8
  %memberidx91 = getelementptr inbounds %Token, ptr %478, i64 0, i32 1
  %479 = load ptr, ptr %memberidx91, align 8
  %memberidx.i412 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %480 = load ptr, ptr %memberidx.i412, align 8
  %memberidx1.i413 = getelementptr inbounds %Compiler, ptr %480, i64 0, i32 5
  %481 = load ptr, ptr %memberidx1.i413, align 8
  %482 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %482, align 4
  %memberidx1.i.i414 = getelementptr inbounds %FloError, ptr %482, i64 0, i32 2
  store ptr %479, ptr %memberidx1.i.i414, align 8
  %memberidx2.i.i415 = getelementptr inbounds %FloError, ptr %482, i64 0, i32 1
  store ptr %477, ptr %memberidx2.i.i415, align 8
  %memberidx.i.i416 = getelementptr inbounds %Array_FloError_, ptr %481, i64 0, i32 1
  %483 = load i64, ptr %memberidx.i.i416, align 4
  %memberidx1.i2.i417 = getelementptr inbounds %Array_FloError_, ptr %481, i64 0, i32 2
  %484 = load i64, ptr %memberidx1.i2.i417, align 4
  %.not.i.i418 = icmp slt i64 %483, %484
  br i1 %.not.i.i418, label %if.entry87.TypeChecker_error.exit421_crit_edge, label %if.entry.i.i420

if.entry87.TypeChecker_error.exit421_crit_edge:   ; preds = %if.entry87
  %.pre636 = load ptr, ptr %481, align 8
  br label %TypeChecker_error.exit421

if.entry.i.i420:                                  ; preds = %if.entry87
  %485 = shl nuw i64 %484, 1
  store i64 %485, ptr %memberidx1.i2.i417, align 4
  %486 = load ptr, ptr %481, align 8
  %487 = shl i64 %484, 4
  %488 = tail call ptr @realloc(ptr %486, i64 %487)
  store ptr %488, ptr %481, align 8
  %.pre635 = load i64, ptr %memberidx.i.i416, align 4
  br label %TypeChecker_error.exit421

TypeChecker_error.exit421:                        ; preds = %if.entry87.TypeChecker_error.exit421_crit_edge, %if.entry.i.i420
  %489 = phi ptr [ %.pre636, %if.entry87.TypeChecker_error.exit421_crit_edge ], [ %488, %if.entry.i.i420 ]
  %490 = phi i64 [ %483, %if.entry87.TypeChecker_error.exit421_crit_edge ], [ %.pre635, %if.entry.i.i420 ]
  %491 = add nsw i64 %490, 1
  store i64 %491, ptr %memberidx.i.i416, align 4
  %492 = getelementptr inbounds ptr, ptr %489, i64 %490
  store ptr %482, ptr %492, align 8
  br label %common.ret

ifend89:                                          ; preds = %if.entry83
  %493 = load ptr, ptr %memberidx5, align 8
  %494 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %494, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %495 = tail call ptr @malloc(i32 24)
  store ptr %494, ptr %495, align 8
  %memberidx1.i.i422 = getelementptr inbounds %String, ptr %495, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i422, align 4
  %memberidx2.i.i423 = getelementptr inbounds %String, ptr %495, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i423, align 4
  %memberidx.i424 = getelementptr inbounds %String, ptr %493, i64 0, i32 1
  %496 = load i64, ptr %memberidx.i424, align 4
  %.not.i426 = icmp eq i64 %496, 11
  br i1 %.not.i426, label %ifend.i428, label %ifend95

ifend.i428:                                       ; preds = %ifend89
  %497 = load ptr, ptr %493, align 8
  %498 = tail call i64 @memcmp(ptr %497, ptr nonnull %494, i64 11)
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %if.entry93, label %ifend95

if.entry93:                                       ; preds = %ifend.i428
  %500 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %500, ptr noundef nonnull align 8 dereferenceable(33) @150, i64 33, i1 false)
  %501 = tail call ptr @malloc(i32 24)
  store ptr %500, ptr %501, align 8
  %memberidx1.i.i430 = getelementptr inbounds %String, ptr %501, i64 0, i32 1
  store i64 33, ptr %memberidx1.i.i430, align 4
  %memberidx2.i.i431 = getelementptr inbounds %String, ptr %501, i64 0, i32 2
  store i64 33, ptr %memberidx2.i.i431, align 4
  %502 = load ptr, ptr %9, align 8
  %memberidx97 = getelementptr inbounds %Token, ptr %502, i64 0, i32 1
  %503 = load ptr, ptr %memberidx97, align 8
  %memberidx.i432 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %504 = load ptr, ptr %memberidx.i432, align 8
  %memberidx1.i433 = getelementptr inbounds %Compiler, ptr %504, i64 0, i32 5
  %505 = load ptr, ptr %memberidx1.i433, align 8
  %506 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %506, align 4
  %memberidx1.i.i434 = getelementptr inbounds %FloError, ptr %506, i64 0, i32 2
  store ptr %503, ptr %memberidx1.i.i434, align 8
  %memberidx2.i.i435 = getelementptr inbounds %FloError, ptr %506, i64 0, i32 1
  store ptr %501, ptr %memberidx2.i.i435, align 8
  %memberidx.i.i436 = getelementptr inbounds %Array_FloError_, ptr %505, i64 0, i32 1
  %507 = load i64, ptr %memberidx.i.i436, align 4
  %memberidx1.i2.i437 = getelementptr inbounds %Array_FloError_, ptr %505, i64 0, i32 2
  %508 = load i64, ptr %memberidx1.i2.i437, align 4
  %.not.i.i438 = icmp slt i64 %507, %508
  br i1 %.not.i.i438, label %if.entry93.TypeChecker_error.exit441_crit_edge, label %if.entry.i.i440

if.entry93.TypeChecker_error.exit441_crit_edge:   ; preds = %if.entry93
  %.pre634 = load ptr, ptr %505, align 8
  br label %TypeChecker_error.exit441

if.entry.i.i440:                                  ; preds = %if.entry93
  %509 = shl nuw i64 %508, 1
  store i64 %509, ptr %memberidx1.i2.i437, align 4
  %510 = load ptr, ptr %505, align 8
  %511 = shl i64 %508, 4
  %512 = tail call ptr @realloc(ptr %510, i64 %511)
  store ptr %512, ptr %505, align 8
  %.pre633 = load i64, ptr %memberidx.i.i436, align 4
  br label %TypeChecker_error.exit441

TypeChecker_error.exit441:                        ; preds = %if.entry93.TypeChecker_error.exit441_crit_edge, %if.entry.i.i440
  %513 = phi ptr [ %.pre634, %if.entry93.TypeChecker_error.exit441_crit_edge ], [ %512, %if.entry.i.i440 ]
  %514 = phi i64 [ %507, %if.entry93.TypeChecker_error.exit441_crit_edge ], [ %.pre633, %if.entry.i.i440 ]
  %515 = add nsw i64 %514, 1
  store i64 %515, ptr %memberidx.i.i436, align 4
  %516 = getelementptr inbounds ptr, ptr %513, i64 %514
  store ptr %506, ptr %516, align 8
  br label %common.ret

ifend95:                                          ; preds = %ifend89, %ifend.i428
  %517 = load ptr, ptr %memberidx98, align 8
  %518 = load ptr, ptr %10, align 8
  tail call fastcc void @Map_String_PropId____setitem__(ptr %517, ptr %12, ptr %518)
  br label %ifend85

if.entry101:                                      ; preds = %ifend.i402
  %519 = load i1, ptr %memberidx33, align 1
  br i1 %519, label %if.entry105, label %ifend107

else102:                                          ; preds = %else84, %ifend.i402
  %520 = load i1, ptr %memberidx33, align 1
  br i1 %520, label %if.entry113, label %ifend115

ifend103:                                         ; preds = %ifend115, %ifend107
  %521 = tail call ptr @malloc(i32 16)
  %522 = load ptr, ptr %1, align 8
  store i64 11, ptr %521, align 4
  %memberidx.i442 = getelementptr inbounds %ObjectType, ptr %521, i64 0, i32 1
  store ptr %522, ptr %memberidx.i442, align 8
  %523 = tail call ptr @malloc(i32 4)
  store i32 1936287860, ptr %523, align 8
  %524 = tail call ptr @malloc(i32 24)
  store ptr %523, ptr %524, align 8
  %memberidx1.i.i443 = getelementptr inbounds %String, ptr %524, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i443, align 4
  %memberidx2.i.i444 = getelementptr inbounds %String, ptr %524, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i444, align 4
  %525 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %524, ptr null, ptr nonnull %521)
  %526 = load ptr, ptr %memberidx121, align 8
  %.not236 = icmp eq ptr %526, null
  br i1 %.not236, label %ifend85, label %if.entry122

if.entry105:                                      ; preds = %if.entry101
  %527 = tail call ptr @malloc(i32 35)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %527, ptr noundef nonnull align 8 dereferenceable(35) @151, i64 35, i1 false)
  %528 = tail call ptr @malloc(i32 24)
  store ptr %527, ptr %528, align 8
  %memberidx1.i.i445 = getelementptr inbounds %String, ptr %528, i64 0, i32 1
  store i64 35, ptr %memberidx1.i.i445, align 4
  %memberidx2.i.i446 = getelementptr inbounds %String, ptr %528, i64 0, i32 2
  store i64 35, ptr %memberidx2.i.i446, align 4
  %529 = load ptr, ptr %9, align 8
  %memberidx109 = getelementptr inbounds %Token, ptr %529, i64 0, i32 1
  %530 = load ptr, ptr %memberidx109, align 8
  %memberidx.i447 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %531 = load ptr, ptr %memberidx.i447, align 8
  %memberidx1.i448 = getelementptr inbounds %Compiler, ptr %531, i64 0, i32 5
  %532 = load ptr, ptr %memberidx1.i448, align 8
  %533 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %533, align 4
  %memberidx1.i.i449 = getelementptr inbounds %FloError, ptr %533, i64 0, i32 2
  store ptr %530, ptr %memberidx1.i.i449, align 8
  %memberidx2.i.i450 = getelementptr inbounds %FloError, ptr %533, i64 0, i32 1
  store ptr %528, ptr %memberidx2.i.i450, align 8
  %memberidx.i.i451 = getelementptr inbounds %Array_FloError_, ptr %532, i64 0, i32 1
  %534 = load i64, ptr %memberidx.i.i451, align 4
  %memberidx1.i2.i452 = getelementptr inbounds %Array_FloError_, ptr %532, i64 0, i32 2
  %535 = load i64, ptr %memberidx1.i2.i452, align 4
  %.not.i.i453 = icmp slt i64 %534, %535
  br i1 %.not.i.i453, label %if.entry105.TypeChecker_error.exit456_crit_edge, label %if.entry.i.i455

if.entry105.TypeChecker_error.exit456_crit_edge:  ; preds = %if.entry105
  %.pre630 = load ptr, ptr %532, align 8
  br label %TypeChecker_error.exit456

if.entry.i.i455:                                  ; preds = %if.entry105
  %536 = shl nuw i64 %535, 1
  store i64 %536, ptr %memberidx1.i2.i452, align 4
  %537 = load ptr, ptr %532, align 8
  %538 = shl i64 %535, 4
  %539 = tail call ptr @realloc(ptr %537, i64 %538)
  store ptr %539, ptr %532, align 8
  %.pre629 = load i64, ptr %memberidx.i.i451, align 4
  br label %TypeChecker_error.exit456

TypeChecker_error.exit456:                        ; preds = %if.entry105.TypeChecker_error.exit456_crit_edge, %if.entry.i.i455
  %540 = phi ptr [ %.pre630, %if.entry105.TypeChecker_error.exit456_crit_edge ], [ %539, %if.entry.i.i455 ]
  %541 = phi i64 [ %534, %if.entry105.TypeChecker_error.exit456_crit_edge ], [ %.pre629, %if.entry.i.i455 ]
  %542 = add nsw i64 %541, 1
  store i64 %542, ptr %memberidx.i.i451, align 4
  %543 = getelementptr inbounds ptr, ptr %540, i64 %541
  store ptr %533, ptr %543, align 8
  br label %common.ret

ifend107:                                         ; preds = %if.entry101
  %544 = load ptr, ptr %10, align 8
  store ptr %544, ptr %memberidx110, align 8
  br label %ifend103

if.entry113:                                      ; preds = %else102
  %545 = tail call ptr @malloc(i32 58)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(58) %545, ptr noundef nonnull align 8 dereferenceable(58) @152, i64 58, i1 false)
  %546 = tail call ptr @malloc(i32 24)
  store ptr %545, ptr %546, align 8
  %memberidx1.i.i457 = getelementptr inbounds %String, ptr %546, i64 0, i32 1
  store i64 58, ptr %memberidx1.i.i457, align 4
  %memberidx2.i.i458 = getelementptr inbounds %String, ptr %546, i64 0, i32 2
  store i64 58, ptr %memberidx2.i.i458, align 4
  %547 = load ptr, ptr %9, align 8
  %memberidx117 = getelementptr inbounds %Token, ptr %547, i64 0, i32 1
  %548 = load ptr, ptr %memberidx117, align 8
  %memberidx.i459 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %549 = load ptr, ptr %memberidx.i459, align 8
  %memberidx1.i460 = getelementptr inbounds %Compiler, ptr %549, i64 0, i32 5
  %550 = load ptr, ptr %memberidx1.i460, align 8
  %551 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %551, align 4
  %memberidx1.i.i461 = getelementptr inbounds %FloError, ptr %551, i64 0, i32 2
  store ptr %548, ptr %memberidx1.i.i461, align 8
  %memberidx2.i.i462 = getelementptr inbounds %FloError, ptr %551, i64 0, i32 1
  store ptr %546, ptr %memberidx2.i.i462, align 8
  %memberidx.i.i463 = getelementptr inbounds %Array_FloError_, ptr %550, i64 0, i32 1
  %552 = load i64, ptr %memberidx.i.i463, align 4
  %memberidx1.i2.i464 = getelementptr inbounds %Array_FloError_, ptr %550, i64 0, i32 2
  %553 = load i64, ptr %memberidx1.i2.i464, align 4
  %.not.i.i465 = icmp slt i64 %552, %553
  br i1 %.not.i.i465, label %if.entry113.TypeChecker_error.exit468_crit_edge, label %if.entry.i.i467

if.entry113.TypeChecker_error.exit468_crit_edge:  ; preds = %if.entry113
  %.pre628 = load ptr, ptr %550, align 8
  br label %TypeChecker_error.exit468

if.entry.i.i467:                                  ; preds = %if.entry113
  %554 = shl nuw i64 %553, 1
  store i64 %554, ptr %memberidx1.i2.i464, align 4
  %555 = load ptr, ptr %550, align 8
  %556 = shl i64 %553, 4
  %557 = tail call ptr @realloc(ptr %555, i64 %556)
  store ptr %557, ptr %550, align 8
  %.pre627 = load i64, ptr %memberidx.i.i463, align 4
  br label %TypeChecker_error.exit468

TypeChecker_error.exit468:                        ; preds = %if.entry113.TypeChecker_error.exit468_crit_edge, %if.entry.i.i467
  %558 = phi ptr [ %.pre628, %if.entry113.TypeChecker_error.exit468_crit_edge ], [ %557, %if.entry.i.i467 ]
  %559 = phi i64 [ %552, %if.entry113.TypeChecker_error.exit468_crit_edge ], [ %.pre627, %if.entry.i.i467 ]
  %560 = add nsw i64 %559, 1
  store i64 %560, ptr %memberidx.i.i463, align 4
  %561 = getelementptr inbounds ptr, ptr %558, i64 %559
  store ptr %551, ptr %561, align 8
  br label %common.ret

ifend115:                                         ; preds = %else102
  %562 = load ptr, ptr %memberidx52, align 8
  %563 = load ptr, ptr %10, align 8
  tail call fastcc void @Map_String_PropId____setitem__(ptr %562, ptr %12, ptr %563)
  br label %ifend103

if.entry122:                                      ; preds = %ifend103
  %564 = load ptr, ptr %0, align 8
  %565 = load i64, ptr %526, align 4
  %switch562 = icmp eq i64 %565, 20
  br i1 %switch562, label %if.entry.i502, label %if.entry3.i

if.entry.i502:                                    ; preds = %if.entry122, %if.entry.i502
  %.tr11.i563 = phi ptr [ %566, %if.entry.i502 ], [ %526, %if.entry122 ]
  %memberidx1.i501 = getelementptr inbounds %GenericType, ptr %.tr11.i563, i64 0, i32 3
  %566 = load ptr, ptr %memberidx1.i501, align 8
  %567 = load i64, ptr %566, align 4
  %switch = icmp eq i64 %567, 20
  br i1 %switch, label %if.entry.i502, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i502, %if.entry122
  %.tr11.i.lcssa = phi ptr [ %526, %if.entry122 ], [ %566, %if.entry.i502 ]
  %memberidx6.i503 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %568 = load ptr, ptr %memberidx6.i503, align 8
  %569 = load ptr, ptr %564, align 8
  %570 = load i64, ptr %568, align 4
  %571 = load ptr, ptr %569, align 8
  %572 = getelementptr inbounds ptr, ptr %571, i64 %570
  %573 = load ptr, ptr %572, align 8
  %memberidx2.i.i504 = getelementptr inbounds %Module, ptr %573, i64 0, i32 3
  %574 = load ptr, ptr %memberidx2.i.i504, align 8
  %memberidx3.i.i505 = getelementptr inbounds %TypeId, ptr %568, i64 0, i32 2
  %575 = load i64, ptr %memberidx3.i.i505, align 4
  %576 = load ptr, ptr %574, align 8
  %577 = getelementptr inbounds ptr, ptr %576, i64 %575
  %578 = load ptr, ptr %577, align 8
  %memberidx127 = getelementptr inbounds %Class, ptr %578, i64 0, i32 3
  %579 = load ptr, ptr %memberidx127, align 8
  %.not237 = icmp eq ptr %579, null
  br i1 %.not237, label %ifend85, label %if.entry128

if.entry128:                                      ; preds = %if.entry3.i
  %memberidx.i.i469 = getelementptr inbounds %PropId, ptr %579, i64 0, i32 1
  %580 = load ptr, ptr %memberidx.i.i469, align 8
  %581 = load i64, ptr %580, align 4
  %582 = getelementptr inbounds ptr, ptr %571, i64 %581
  %583 = load ptr, ptr %582, align 8
  %memberidx2.i.i.i470 = getelementptr inbounds %Module, ptr %583, i64 0, i32 3
  %584 = load ptr, ptr %memberidx2.i.i.i470, align 8
  %memberidx3.i.i.i471 = getelementptr inbounds %TypeId, ptr %580, i64 0, i32 2
  %585 = load i64, ptr %memberidx3.i.i.i471, align 4
  %586 = load ptr, ptr %584, align 8
  %587 = getelementptr inbounds ptr, ptr %586, i64 %585
  %588 = load ptr, ptr %587, align 8
  %589 = load i64, ptr %579, align 4
  %590 = icmp eq i64 %589, 0
  br i1 %590, label %if.entry.i477, label %ifend.i481

if.entry.i477:                                    ; preds = %if.entry128
  %memberidx1.i474 = getelementptr inbounds %Class, ptr %588, i64 0, i32 5
  %591 = load ptr, ptr %memberidx1.i474, align 8
  %memberidx2.i475 = getelementptr inbounds %PropId, ptr %579, i64 0, i32 2
  %592 = load i64, ptr %memberidx2.i475, align 4
  %593 = load ptr, ptr %591, align 8
  %594 = getelementptr inbounds ptr, ptr %593, i64 %592
  %595 = load ptr, ptr %594, align 8
  %memberidx3.i476 = getelementptr inbounds %ClassMethod, ptr %595, i64 0, i32 4
  br label %get_class_prop_type.exit482

ifend.i481:                                       ; preds = %if.entry128
  %memberidx4.i478 = getelementptr inbounds %Class, ptr %588, i64 0, i32 4
  %596 = load ptr, ptr %memberidx4.i478, align 8
  %memberidx5.i479 = getelementptr inbounds %PropId, ptr %579, i64 0, i32 2
  %597 = load i64, ptr %memberidx5.i479, align 4
  %598 = load ptr, ptr %596, align 8
  %599 = getelementptr inbounds ptr, ptr %598, i64 %597
  %600 = load ptr, ptr %599, align 8
  %memberidx6.i480 = getelementptr inbounds %ClassField, ptr %600, i64 0, i32 4
  br label %get_class_prop_type.exit482

get_class_prop_type.exit482:                      ; preds = %if.entry.i477, %ifend.i481
  %common.ret.op.in.i472 = phi ptr [ %memberidx3.i476, %if.entry.i477 ], [ %memberidx6.i480, %ifend.i481 ]
  %common.ret.op.i473 = load ptr, ptr %common.ret.op.in.i472, align 8
  %601 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %601, ptr noundef nonnull align 8 dereferenceable(5) @153, i64 5, i1 false)
  %602 = tail call ptr @malloc(i32 24)
  store ptr %601, ptr %602, align 8
  %memberidx1.i.i483 = getelementptr inbounds %String, ptr %602, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i483, align 4
  %memberidx2.i.i484 = getelementptr inbounds %String, ptr %602, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i484, align 4
  %603 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %602, ptr null, ptr %common.ret.op.i473)
  br label %ifend85
}

define internal fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %4, i64 0, i32 5
  %5 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %for.body, %3, %ifend43, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %108, %ifend43 ], [ null, %3 ], [ null, %for.body ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %8 = tail call ptr @malloc(i32 24)
  %memberidx.i89 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 1
  store i64 0, ptr %memberidx.i89, align 4
  %memberidx1.i90 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 2
  store i64 8, ptr %memberidx1.i90, align 4
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %8, align 8
  store i64 0, ptr %memberidx.i89, align 4
  %10 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %10, align 4
  %11 = load i64, ptr %1, align 4
  switch i64 %11, label %ifend5 [
    i64 14, label %if.entry3
    i64 20, label %if.entry.i122
  ]

if.entry3:                                        ; preds = %ifend
  %memberidx6 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  br label %ifend5.sink.split

ifend5.sink.split:                                ; preds = %if.entry3, %if.entry12
  %.sink = phi ptr [ %29, %if.entry12 ], [ %memberidx6, %if.entry3 ]
  %is_constant.0.ph = phi i1 [ false, %if.entry12 ], [ true, %if.entry3 ]
  %12 = load ptr, ptr %.sink, align 8
  br label %ifend5

ifend5:                                           ; preds = %ifend5.sink.split, %is_object.exit, %ifend, %String___eq__.exit
  %is_constant.0 = phi i1 [ false, %String___eq__.exit ], [ true, %ifend ], [ false, %is_object.exit ], [ %is_constant.0.ph, %ifend5.sink.split ]
  %element_type.0 = phi ptr [ %10, %String___eq__.exit ], [ %10, %ifend ], [ %10, %is_object.exit ], [ %12, %ifend5.sink.split ]
  %memberidx16 = getelementptr inbounds %ArrayExpressionNode, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx16, align 8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %13, i64 0, i32 1
  %14 = load i64, ptr %memberidx17, align 4
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %for.body, label %ifend20

if.entry.i122:                                    ; preds = %ifend, %if.entry.i122
  %.tr5.i = phi ptr [ %16, %if.entry.i122 ], [ %1, %ifend ]
  %memberidx1.i121 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i121, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 20
  br i1 %18, label %if.entry.i122, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i122
  %memberidx11 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx11, align 8
  %20 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %20, ptr noundef nonnull align 8 dereferenceable(5) @75, i64 5, i1 false)
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %21, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i, align 4
  %memberidx.i91 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i91, align 4
  %.not.i = icmp eq i64 %22, 5
  br i1 %.not.i, label %String___eq__.exit, label %ifend5

String___eq__.exit:                               ; preds = %is_object.exit
  %23 = icmp eq i64 %17, 11
  %24 = load ptr, ptr %19, align 8
  %25 = tail call i64 @memcmp(ptr %24, ptr nonnull %20, i64 5)
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %if.entry12, label %ifend5

if.entry12:                                       ; preds = %String___eq__.exit
  %memberidx15 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %28 = load ptr, ptr %memberidx15, align 8
  %29 = load ptr, ptr %28, align 8
  br label %ifend5.sink.split

ifend20:                                          ; preds = %Array_Expression____sl__.exit, %ifend5
  %is_constant.1 = phi i1 [ %is_constant.0, %ifend5 ], [ %47, %Array_Expression____sl__.exit ]
  %element_type.1 = phi ptr [ %element_type.0, %ifend5 ], [ %.element_type.2133, %Array_Expression____sl__.exit ]
  %30 = load i64, ptr %1, align 4
  %.not = icmp eq i64 %30, 14
  br i1 %.not, label %else42, label %if.entry41

for.body:                                         ; preds = %ifend5, %Array_Expression____sl__.exit
  %31 = phi ptr [ %59, %Array_Expression____sl__.exit ], [ %13, %ifend5 ]
  %i.0134 = phi i64 [ %58, %Array_Expression____sl__.exit ], [ 0, %ifend5 ]
  %element_type.2133 = phi ptr [ %.element_type.2133, %Array_Expression____sl__.exit ], [ %element_type.0, %ifend5 ]
  %is_constant.2132 = phi i1 [ %47, %Array_Expression____sl__.exit ], [ %is_constant.0, %ifend5 ]
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr inbounds ptr, ptr %32, i64 %i.0134
  %34 = load ptr, ptr %33, align 8
  %35 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %element_type.2133, ptr %34)
  %36 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i94 = getelementptr inbounds %Compiler, ptr %36, i64 0, i32 5
  %37 = load ptr, ptr %memberidx1.i94, align 8
  %memberidx2.i95 = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 1
  %38 = load i64, ptr %memberidx2.i95, align 4
  %39 = icmp sgt i64 %38, 0
  br i1 %39, label %common.ret, label %ifend26

ifend26:                                          ; preds = %for.body
  %40 = icmp eq i64 %i.0134, 0
  %41 = load i64, ptr %element_type.2133, align 4
  %42 = icmp eq i64 %41, 21
  %43 = and i1 %40, %42
  %memberidx31 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %44 = load ptr, ptr %memberidx31, align 8
  %.element_type.2133 = select i1 %43, ptr %44, ptr %element_type.2133
  %memberidx32 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 1
  %45 = load i1, ptr %memberidx32, align 1
  %46 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %.element_type.2133, ptr %44)
  br i1 %46, label %if.entry34, label %else35

if.entry34:                                       ; preds = %ifend26
  %47 = and i1 %is_constant.2132, %45
  %48 = load i64, ptr %memberidx.i89, align 4
  %49 = load i64, ptr %memberidx1.i90, align 4
  %.not.i98 = icmp slt i64 %48, %49
  br i1 %.not.i98, label %if.entry34.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

if.entry34.Array_Expression____sl__.exit_crit_edge: ; preds = %if.entry34
  %.pre144 = load ptr, ptr %8, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %if.entry34
  %50 = shl nuw i64 %49, 1
  store i64 %50, ptr %memberidx1.i90, align 4
  %51 = load ptr, ptr %8, align 8
  %52 = shl i64 %49, 4
  %53 = tail call ptr @realloc(ptr %51, i64 %52)
  store ptr %53, ptr %8, align 8
  %.pre143 = load i64, ptr %memberidx.i89, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %if.entry34.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %54 = phi ptr [ %.pre144, %if.entry34.Array_Expression____sl__.exit_crit_edge ], [ %53, %if.entry.i ]
  %55 = phi i64 [ %48, %if.entry34.Array_Expression____sl__.exit_crit_edge ], [ %.pre143, %if.entry.i ]
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr %memberidx.i89, align 4
  %57 = getelementptr inbounds ptr, ptr %54, i64 %55
  store ptr %35, ptr %57, align 8
  %58 = add nuw nsw i64 %i.0134, 1
  %59 = load ptr, ptr %memberidx16, align 8
  %memberidx22 = getelementptr inbounds %Array_ExpressionNode_, ptr %59, i64 0, i32 1
  %60 = load i64, ptr %memberidx22, align 4
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %for.body, label %ifend20

else35:                                           ; preds = %ifend26
  %memberidx33 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %62 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %.element_type.2133)
  %memberidx.i100 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  %63 = load i64, ptr %memberidx.i100, align 4
  %64 = trunc i64 %63 to i32
  %65 = add i32 %64, 1
  %66 = tail call ptr @malloc(i32 %65)
  %67 = load ptr, ptr %62, align 8
  %68 = load i64, ptr %memberidx.i100, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %66, ptr align 8 %67, i64 %68, i1 false)
  %69 = getelementptr inbounds i8, ptr %66, i64 %68
  store i8 0, ptr %69, align 1
  %70 = load ptr, ptr %memberidx33, align 8
  %71 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %70)
  %memberidx.i101 = getelementptr inbounds %String, ptr %71, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i101, align 4
  %73 = trunc i64 %72 to i32
  %74 = add i32 %73, 1
  %75 = tail call ptr @malloc(i32 %74)
  %76 = load ptr, ptr %71, align 8
  %77 = load i64, ptr %memberidx.i101, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %75, ptr align 8 %76, i64 %77, i1 false)
  %78 = getelementptr inbounds i8, ptr %75, i64 %77
  store i8 0, ptr %78, align 1
  %79 = alloca ptr, align 8
  %80 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %79, ptr nonnull @169, ptr %66, ptr %75)
  %81 = load ptr, ptr %79, align 8
  %82 = tail call ptr @malloc(i32 24)
  store ptr %81, ptr %82, align 8
  %memberidx1.i102 = getelementptr inbounds %String, ptr %82, i64 0, i32 1
  store i64 %80, ptr %memberidx1.i102, align 4
  %memberidx2.i103 = getelementptr inbounds %String, ptr %82, i64 0, i32 2
  store i64 %80, ptr %memberidx2.i103, align 4
  tail call void @free(ptr %66)
  tail call void @free(ptr %75)
  %83 = load ptr, ptr %memberidx16, align 8
  %84 = load ptr, ptr %83, align 8
  %85 = getelementptr inbounds ptr, ptr %84, i64 %i.0134
  %86 = load ptr, ptr %85, align 8
  %87 = load ptr, ptr %86, align 8
  %88 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i105 = getelementptr inbounds %Compiler, ptr %88, i64 0, i32 5
  %89 = load ptr, ptr %memberidx1.i105, align 8
  %90 = call ptr @malloc(i32 24)
  store i64 5, ptr %90, align 4
  %memberidx1.i.i106 = getelementptr inbounds %FloError, ptr %90, i64 0, i32 2
  store ptr %87, ptr %memberidx1.i.i106, align 8
  %memberidx2.i.i107 = getelementptr inbounds %FloError, ptr %90, i64 0, i32 1
  store ptr %82, ptr %memberidx2.i.i107, align 8
  %memberidx.i.i108 = getelementptr inbounds %Array_FloError_, ptr %89, i64 0, i32 1
  %91 = load i64, ptr %memberidx.i.i108, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %89, i64 0, i32 2
  %92 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %91, %92
  br i1 %.not.i.i, label %else35.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

else35.TypeChecker_error.exit_crit_edge:          ; preds = %else35
  %.pre142 = load ptr, ptr %89, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %else35
  %93 = shl nuw i64 %92, 1
  store i64 %93, ptr %memberidx1.i2.i, align 4
  %94 = load ptr, ptr %89, align 8
  %95 = shl i64 %92, 4
  %96 = call ptr @realloc(ptr %94, i64 %95)
  store ptr %96, ptr %89, align 8
  %.pre141 = load i64, ptr %memberidx.i.i108, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %else35.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %97 = phi ptr [ %.pre142, %else35.TypeChecker_error.exit_crit_edge ], [ %96, %if.entry.i.i ]
  %98 = phi i64 [ %91, %else35.TypeChecker_error.exit_crit_edge ], [ %.pre141, %if.entry.i.i ]
  %99 = add nsw i64 %98, 1
  store i64 %99, ptr %memberidx.i.i108, align 4
  %100 = getelementptr inbounds ptr, ptr %97, i64 %98
  store ptr %90, ptr %100, align 8
  br label %common.ret

if.entry41:                                       ; preds = %ifend20
  %101 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %101, ptr noundef nonnull align 8 dereferenceable(5) @75, i64 5, i1 false)
  %102 = tail call ptr @malloc(i32 24)
  store ptr %101, ptr %102, align 8
  %memberidx1.i.i109 = getelementptr inbounds %String, ptr %102, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i109, align 4
  %memberidx2.i.i110 = getelementptr inbounds %String, ptr %102, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i110, align 4
  %103 = tail call ptr @malloc(i32 24)
  %memberidx.i111 = getelementptr inbounds %Array_Type_, ptr %103, i64 0, i32 1
  store i64 0, ptr %memberidx.i111, align 4
  %memberidx1.i112 = getelementptr inbounds %Array_Type_, ptr %103, i64 0, i32 2
  store i64 8, ptr %memberidx1.i112, align 4
  %104 = tail call ptr @malloc(i32 64)
  store ptr %104, ptr %103, align 8
  store ptr %element_type.1, ptr %104, align 8
  store i64 1, ptr %memberidx.i111, align 4
  %105 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr nonnull %102, ptr nonnull %103)
  %.not88 = icmp eq ptr %105, null
  %spec.select = select i1 %.not88, i1 %is_constant.1, i1 false
  %spec.select120 = select i1 %.not88, ptr %1, ptr %105
  br label %ifend43

else42:                                           ; preds = %ifend20
  %106 = tail call ptr @malloc(i32 24)
  %107 = load i64, ptr %memberidx.i89, align 4
  store i64 14, ptr %106, align 4
  %memberidx.i113 = getelementptr inbounds %ArrayType, ptr %106, i64 0, i32 1
  store ptr %element_type.1, ptr %memberidx.i113, align 8
  %memberidx1.i114 = getelementptr inbounds %ArrayType, ptr %106, i64 0, i32 2
  store i64 %107, ptr %memberidx1.i114, align 4
  br label %ifend43

ifend43:                                          ; preds = %if.entry41, %else42
  %is_constant.3 = phi i1 [ %is_constant.1, %else42 ], [ %spec.select, %if.entry41 ]
  %array_type.0 = phi ptr [ %106, %else42 ], [ %spec.select120, %if.entry41 ]
  %108 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %108, align 4
  %memberidx.i.i115 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i115, align 4
  %memberidx1.i.i116 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 1
  %memberidx.i117 = getelementptr inbounds %ArrayExpression, ptr %108, i64 0, i32 4
  store ptr %8, ptr %memberidx.i117, align 8
  store i1 %is_constant.3, ptr %memberidx1.i.i116, align 1
  %memberidx51 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 3
  store ptr %array_type.0, ptr %memberidx51, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_check_enum_body(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %6 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %6, align 4
  %memberidx.i = getelementptr inbounds %IntType, ptr %6, i64 0, i32 1
  store i1 true, ptr %memberidx.i, align 1
  br label %ifend

else:                                             ; preds = %3
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %4)
  %8 = load i64, ptr %7, align 4
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %ifend, label %if.entry2

ifend:                                            ; preds = %TypeChecker_error.exit94, %else, %if.entry
  %enum_variant.0 = phi ptr [ %6, %if.entry ], [ %7, %TypeChecker_error.exit94 ], [ %7, %else ]
  %memberidx7 = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 1
  %11 = load ptr, ptr %memberidx7, align 8
  %memberidx8125 = getelementptr inbounds %Array_EnumNodeField_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx8125, align 4
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx41 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 3
  %memberidx43 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  br label %for.body

if.entry2:                                        ; preds = %else
  %14 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %7)
  %memberidx.i83 = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i83, align 4
  %16 = trunc i64 %15 to i32
  %17 = add i32 %16, 1
  %18 = tail call ptr @malloc(i32 %17)
  %19 = load ptr, ptr %14, align 8
  %20 = load i64, ptr %memberidx.i83, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %19, i64 %20, i1 false)
  %21 = getelementptr inbounds i8, ptr %18, i64 %20
  store i8 0, ptr %21, align 1
  %22 = alloca ptr, align 8
  %23 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %22, ptr nonnull @111, ptr %18)
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 24)
  store ptr %24, ptr %25, align 8
  %memberidx1.i84 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  store i64 %23, ptr %memberidx1.i84, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %25, i64 0, i32 2
  store i64 %23, ptr %memberidx2.i, align 4
  tail call void @free(ptr %18)
  %26 = load ptr, ptr %memberidx, align 8
  %27 = load ptr, ptr %26, align 8
  %memberidx.i85 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %28 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i86 = getelementptr inbounds %Compiler, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i86, align 8
  %30 = call ptr @malloc(i32 24)
  store i64 5, ptr %30, align 4
  %memberidx1.i.i87 = getelementptr inbounds %FloError, ptr %30, i64 0, i32 2
  store ptr %27, ptr %memberidx1.i.i87, align 8
  %memberidx2.i.i88 = getelementptr inbounds %FloError, ptr %30, i64 0, i32 1
  store ptr %25, ptr %memberidx2.i.i88, align 8
  %memberidx.i.i89 = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i89, align 4
  %memberidx1.i2.i90 = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 2
  %32 = load i64, ptr %memberidx1.i2.i90, align 4
  %.not.i.i91 = icmp slt i64 %31, %32
  br i1 %.not.i.i91, label %if.entry2.TypeChecker_error.exit94_crit_edge, label %if.entry.i.i93

if.entry2.TypeChecker_error.exit94_crit_edge:     ; preds = %if.entry2
  %.pre131 = load ptr, ptr %29, align 8
  br label %TypeChecker_error.exit94

if.entry.i.i93:                                   ; preds = %if.entry2
  %33 = shl nuw i64 %32, 1
  store i64 %33, ptr %memberidx1.i2.i90, align 4
  %34 = load ptr, ptr %29, align 8
  %35 = shl i64 %32, 4
  %36 = call ptr @realloc(ptr %34, i64 %35)
  store ptr %36, ptr %29, align 8
  %.pre = load i64, ptr %memberidx.i.i89, align 4
  br label %TypeChecker_error.exit94

TypeChecker_error.exit94:                         ; preds = %if.entry2.TypeChecker_error.exit94_crit_edge, %if.entry.i.i93
  %37 = phi ptr [ %.pre131, %if.entry2.TypeChecker_error.exit94_crit_edge ], [ %36, %if.entry.i.i93 ]
  %38 = phi i64 [ %31, %if.entry2.TypeChecker_error.exit94_crit_edge ], [ %.pre, %if.entry.i.i93 ]
  %39 = add nsw i64 %38, 1
  store i64 %39, ptr %memberidx.i.i89, align 4
  %40 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %30, ptr %40, align 8
  br label %ifend

for.body:                                         ; preds = %for.body.lr.ph, %Array_EnumField____sl__.exit
  %41 = phi ptr [ %11, %for.body.lr.ph ], [ %69, %Array_EnumField____sl__.exit ]
  %next_enum_value.0127 = phi i64 [ 0, %for.body.lr.ph ], [ %next_enum_value.1, %Array_EnumField____sl__.exit ]
  %i.0126 = phi i64 [ 0, %for.body.lr.ph ], [ %68, %Array_EnumField____sl__.exit ]
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %i.0126
  %44 = load ptr, ptr %43, align 8
  %45 = load ptr, ptr %44, align 8
  %memberidx11 = getelementptr inbounds %IdentifierToken, ptr %45, i64 0, i32 2
  %46 = load ptr, ptr %memberidx11, align 8
  %47 = tail call ptr @malloc(i32 24)
  %memberidx.i95 = getelementptr inbounds %EnumField, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i95, align 8
  %48 = tail call ptr @malloc(i32 24)
  %49 = load ptr, ptr %1, align 8
  store i64 1, ptr %48, align 4
  %memberidx1.i99 = getelementptr inbounds %PropId, ptr %48, i64 0, i32 1
  store ptr %49, ptr %memberidx1.i99, align 8
  %memberidx2.i100 = getelementptr inbounds %PropId, ptr %48, i64 0, i32 2
  store i64 %i.0126, ptr %memberidx2.i100, align 4
  store ptr %48, ptr %47, align 8
  %memberidx14 = getelementptr inbounds %EnumNodeField, ptr %44, i64 0, i32 1
  %50 = load ptr, ptr %memberidx14, align 8
  %.not = icmp eq ptr %50, null
  %memberidx38 = getelementptr inbounds %EnumField, ptr %47, i64 0, i32 2
  br i1 %.not, label %else16, label %if.entry15

common.ret:                                       ; preds = %Array_EnumField____sl__.exit, %ifend, %TypeChecker_error.exit, %TypeChecker_error.exit120
  ret void

if.entry15:                                       ; preds = %for.body
  %51 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %enum_variant.0, ptr nonnull %50)
  store ptr %51, ptr %memberidx38, align 8
  %memberidx21 = getelementptr inbounds %Expression, ptr %51, i64 0, i32 1
  %52 = load i1, ptr %memberidx21, align 1
  br i1 %52, label %ifend24, label %if.entry22

else16:                                           ; preds = %for.body
  %53 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %53, align 4
  %memberidx.i.i101 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i101, align 4
  %memberidx1.i.i102 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i102, align 1
  %memberidx.i103 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 3
  %54 = call ptr @malloc(i32 9)
  store i64 6, ptr %54, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %54, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  %memberidx1.i104 = getelementptr inbounds %IntExpression, ptr %53, i64 0, i32 4
  store i64 %next_enum_value.0127, ptr %memberidx1.i104, align 4
  store i1 true, ptr %memberidx1.i.i102, align 1
  store ptr %53, ptr %memberidx38, align 8
  store ptr %enum_variant.0, ptr %memberidx.i103, align 8
  br label %ifend17

ifend17:                                          ; preds = %else16, %ifend31
  %next_enum_value.1.in = phi i64 [ %130, %ifend31 ], [ %next_enum_value.0127, %else16 ]
  %next_enum_value.1 = add nsw i64 %next_enum_value.1.in, 1
  %55 = load ptr, ptr %memberidx41, align 8
  %56 = load ptr, ptr %47, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %55, ptr %46, ptr %56)
  %57 = load ptr, ptr %memberidx43, align 8
  %memberidx.i106 = getelementptr inbounds %Array_EnumField_, ptr %57, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i106, align 4
  %memberidx1.i107 = getelementptr inbounds %Array_EnumField_, ptr %57, i64 0, i32 2
  %59 = load i64, ptr %memberidx1.i107, align 4
  %.not.i = icmp slt i64 %58, %59
  br i1 %.not.i, label %ifend17.Array_EnumField____sl__.exit_crit_edge, label %if.entry.i

ifend17.Array_EnumField____sl__.exit_crit_edge:   ; preds = %ifend17
  %.pre137 = load ptr, ptr %57, align 8
  br label %Array_EnumField____sl__.exit

if.entry.i:                                       ; preds = %ifend17
  %60 = shl nuw i64 %59, 1
  store i64 %60, ptr %memberidx1.i107, align 4
  %61 = load ptr, ptr %57, align 8
  %62 = shl i64 %59, 4
  %63 = call ptr @realloc(ptr %61, i64 %62)
  store ptr %63, ptr %57, align 8
  %.pre136 = load i64, ptr %memberidx.i106, align 4
  br label %Array_EnumField____sl__.exit

Array_EnumField____sl__.exit:                     ; preds = %ifend17.Array_EnumField____sl__.exit_crit_edge, %if.entry.i
  %64 = phi ptr [ %.pre137, %ifend17.Array_EnumField____sl__.exit_crit_edge ], [ %63, %if.entry.i ]
  %65 = phi i64 [ %58, %ifend17.Array_EnumField____sl__.exit_crit_edge ], [ %.pre136, %if.entry.i ]
  %66 = add nsw i64 %65, 1
  store i64 %66, ptr %memberidx.i106, align 4
  %67 = getelementptr inbounds ptr, ptr %64, i64 %65
  store ptr %47, ptr %67, align 8
  %68 = add nuw nsw i64 %i.0126, 1
  %69 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_EnumNodeField_, ptr %69, i64 0, i32 1
  %70 = load i64, ptr %memberidx8, align 4
  %71 = icmp slt i64 %68, %70
  br i1 %71, label %for.body, label %common.ret

if.entry22:                                       ; preds = %if.entry15
  %72 = call ptr @malloc(i32 37)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %72, ptr noundef nonnull align 8 dereferenceable(37) @112, i64 37, i1 false)
  %73 = call ptr @malloc(i32 24)
  store ptr %72, ptr %73, align 8
  %memberidx1.i.i109 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  store i64 37, ptr %memberidx1.i.i109, align 4
  %memberidx2.i.i110 = getelementptr inbounds %String, ptr %73, i64 0, i32 2
  store i64 37, ptr %memberidx2.i.i110, align 4
  %74 = load ptr, ptr %memberidx14, align 8
  %75 = load ptr, ptr %74, align 8
  %memberidx.i111 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %76 = load ptr, ptr %memberidx.i111, align 8
  %memberidx1.i112 = getelementptr inbounds %Compiler, ptr %76, i64 0, i32 5
  %77 = load ptr, ptr %memberidx1.i112, align 8
  %78 = call ptr @malloc(i32 24)
  store i64 5, ptr %78, align 4
  %memberidx1.i.i113 = getelementptr inbounds %FloError, ptr %78, i64 0, i32 2
  store ptr %75, ptr %memberidx1.i.i113, align 8
  %memberidx2.i.i114 = getelementptr inbounds %FloError, ptr %78, i64 0, i32 1
  store ptr %73, ptr %memberidx2.i.i114, align 8
  %memberidx.i.i115 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 1
  %79 = load i64, ptr %memberidx.i.i115, align 4
  %memberidx1.i2.i116 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 2
  %80 = load i64, ptr %memberidx1.i2.i116, align 4
  %.not.i.i117 = icmp slt i64 %79, %80
  br i1 %.not.i.i117, label %if.entry22.TypeChecker_error.exit120_crit_edge, label %if.entry.i.i119

if.entry22.TypeChecker_error.exit120_crit_edge:   ; preds = %if.entry22
  %.pre133 = load ptr, ptr %77, align 8
  br label %TypeChecker_error.exit120

if.entry.i.i119:                                  ; preds = %if.entry22
  %81 = shl nuw i64 %80, 1
  store i64 %81, ptr %memberidx1.i2.i116, align 4
  %82 = load ptr, ptr %77, align 8
  %83 = shl i64 %80, 4
  %84 = call ptr @realloc(ptr %82, i64 %83)
  store ptr %84, ptr %77, align 8
  %.pre132 = load i64, ptr %memberidx.i.i115, align 4
  br label %TypeChecker_error.exit120

TypeChecker_error.exit120:                        ; preds = %if.entry22.TypeChecker_error.exit120_crit_edge, %if.entry.i.i119
  %85 = phi ptr [ %.pre133, %if.entry22.TypeChecker_error.exit120_crit_edge ], [ %84, %if.entry.i.i119 ]
  %86 = phi i64 [ %79, %if.entry22.TypeChecker_error.exit120_crit_edge ], [ %.pre132, %if.entry.i.i119 ]
  %87 = add nsw i64 %86, 1
  store i64 %87, ptr %memberidx.i.i115, align 4
  %88 = getelementptr inbounds ptr, ptr %85, i64 %86
  store ptr %78, ptr %88, align 8
  br label %common.ret

ifend24:                                          ; preds = %if.entry15
  %memberidx28 = getelementptr inbounds %Expression, ptr %51, i64 0, i32 3
  %89 = load ptr, ptr %memberidx28, align 8
  %90 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nonnull %enum_variant.0, ptr %89)
  br i1 %90, label %ifend31, label %if.entry29

if.entry29:                                       ; preds = %ifend24
  %91 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %enum_variant.0)
  %memberidx.i121 = getelementptr inbounds %String, ptr %91, i64 0, i32 1
  %92 = load i64, ptr %memberidx.i121, align 4
  %93 = trunc i64 %92 to i32
  %94 = add i32 %93, 1
  %95 = call ptr @malloc(i32 %94)
  %96 = load ptr, ptr %91, align 8
  %97 = load i64, ptr %memberidx.i121, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %95, ptr align 8 %96, i64 %97, i1 false)
  %98 = getelementptr inbounds i8, ptr %95, i64 %97
  store i8 0, ptr %98, align 1
  %99 = load ptr, ptr %memberidx38, align 8
  %memberidx33 = getelementptr inbounds %Expression, ptr %99, i64 0, i32 3
  %100 = load ptr, ptr %memberidx33, align 8
  %101 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %100)
  %memberidx.i98 = getelementptr inbounds %String, ptr %101, i64 0, i32 1
  %102 = load i64, ptr %memberidx.i98, align 4
  %103 = trunc i64 %102 to i32
  %104 = add i32 %103, 1
  %105 = call ptr @malloc(i32 %104)
  %106 = load ptr, ptr %101, align 8
  %107 = load i64, ptr %memberidx.i98, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %105, ptr align 8 %106, i64 %107, i1 false)
  %108 = getelementptr inbounds i8, ptr %105, i64 %107
  store i8 0, ptr %108, align 1
  %109 = alloca ptr, align 8
  %110 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %109, ptr nonnull @113, ptr %95, ptr %105)
  %111 = load ptr, ptr %109, align 8
  %112 = tail call ptr @malloc(i32 24)
  store ptr %111, ptr %112, align 8
  %memberidx1.i96 = getelementptr inbounds %String, ptr %112, i64 0, i32 1
  store i64 %110, ptr %memberidx1.i96, align 4
  %memberidx2.i97 = getelementptr inbounds %String, ptr %112, i64 0, i32 2
  store i64 %110, ptr %memberidx2.i97, align 4
  tail call void @free(ptr %95)
  tail call void @free(ptr %105)
  %113 = load ptr, ptr %memberidx14, align 8
  %114 = load ptr, ptr %113, align 8
  %memberidx.i82 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %115 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %115, i64 0, i32 5
  %116 = load ptr, ptr %memberidx1.i, align 8
  %117 = call ptr @malloc(i32 24)
  store i64 5, ptr %117, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %117, i64 0, i32 2
  store ptr %114, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %117, i64 0, i32 1
  store ptr %112, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 1
  %118 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 2
  %119 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %118, %119
  br i1 %.not.i.i, label %if.entry29.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry29.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry29
  %.pre135 = load ptr, ptr %116, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry29
  %120 = shl nuw i64 %119, 1
  store i64 %120, ptr %memberidx1.i2.i, align 4
  %121 = load ptr, ptr %116, align 8
  %122 = shl i64 %119, 4
  %123 = call ptr @realloc(ptr %121, i64 %122)
  store ptr %123, ptr %116, align 8
  %.pre134 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry29.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %124 = phi ptr [ %.pre135, %if.entry29.TypeChecker_error.exit_crit_edge ], [ %123, %if.entry.i.i ]
  %125 = phi i64 [ %118, %if.entry29.TypeChecker_error.exit_crit_edge ], [ %.pre134, %if.entry.i.i ]
  %126 = add nsw i64 %125, 1
  store i64 %126, ptr %memberidx.i.i, align 4
  %127 = getelementptr inbounds ptr, ptr %124, i64 %125
  store ptr %117, ptr %127, align 8
  br label %common.ret

ifend31:                                          ; preds = %ifend24
  %128 = load ptr, ptr %0, align 8
  %129 = load ptr, ptr %memberidx38, align 8
  %130 = call fastcc i64 @evaluate_const_int_expression(ptr %128, ptr %129)
  br label %ifend17
}

define internal fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca %Type, align 8
  %memberidx = getelementptr inbounds %ExpressionNode, ptr %2, i64 0, i32 2
  %5 = load i64, ptr %memberidx, align 4
  switch i64 %5, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 3, label %if.entry6
    i64 2, label %if.entry10
    i64 6, label %if.entry14
    i64 7, label %if.entry18
    i64 8, label %if.entry22
    i64 9, label %if.entry26
    i64 10, label %if.entry30
    i64 16, label %if.entry34
    i64 11, label %if.entry38
    i64 12, label %if.entry42
    i64 13, label %if.entry46
    i64 14, label %if.entry50
    i64 15, label %if.entry54
    i64 17, label %if.entry58
  ]

common.ret:                                       ; preds = %3, %if.entry7.i, %ifend.i127, %if.entry42.i, %ifend35.i, %if.entry58, %if.entry54, %if.entry50, %if.entry46, %if.entry42, %if.entry38, %if.entry34, %if.entry30, %if.entry26, %if.entry22, %TypeChecker_check_tuple_expression.exit, %if.entry14, %TypeChecker_check_string_expression.exit, %if.entry6
  %common.ret.op = phi ptr [ %60, %if.entry6 ], [ %99, %TypeChecker_check_string_expression.exit ], [ %103, %if.entry14 ], [ %common.ret.op.i, %TypeChecker_check_tuple_expression.exit ], [ %158, %if.entry22 ], [ %159, %if.entry26 ], [ %160, %if.entry30 ], [ %161, %if.entry34 ], [ %162, %if.entry38 ], [ %163, %if.entry42 ], [ %164, %if.entry46 ], [ %165, %if.entry50 ], [ %166, %if.entry54 ], [ %167, %if.entry58 ], [ %8, %ifend35.i ], [ %8, %if.entry42.i ], [ %43, %ifend.i127 ], [ %43, %if.entry7.i ], [ null, %3 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %IntExpressionNode, ptr %2, i64 0, i32 3
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %IntToken, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx1.i, align 4
  %8 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %8, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 3
  %9 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %9, align 4
  %memberidx.i5.i.i = getelementptr inbounds %IntType, ptr %9, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i.i, align 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %IntExpression, ptr %8, i64 0, i32 4
  store i64 %7, ptr %memberidx1.i.i, align 4
  store i1 true, ptr %memberidx1.i.i.i, align 1
  %10 = load i64, ptr %1, align 4
  %11 = add i64 %10, -1
  %12 = icmp ult i64 %11, 7
  br i1 %12, label %ifend.i, label %ifend35.i

ifend.i:                                          ; preds = %if.entry
  store i64 %10, ptr %9, align 4
  %memberidx7.i = getelementptr inbounds %IntType, ptr %1, i64 0, i32 1
  %13 = load i1, ptr %memberidx7.i, align 1
  store i1 %13, ptr %memberidx.i5.i.i, align 1
  %14 = add i64 %7, -8
  %15 = icmp ult i64 %14, -16
  %16 = icmp eq i64 %10, 1
  %17 = and i1 %15, %16
  %18 = select i1 %17, i64 2, i64 %10
  %19 = add i64 %7, -128
  %20 = icmp ult i64 %19, -256
  %21 = icmp eq i64 %18, 2
  %22 = and i1 %20, %21
  %23 = select i1 %22, i64 3, i64 %18
  %.demorgan = and i1 %15, %16
  %.demorgan186 = and i1 %20, %21
  %24 = or i1 %.demorgan, %.demorgan186
  %25 = add i64 %7, -32768
  %26 = icmp ult i64 %25, -65536
  %27 = icmp eq i64 %23, 3
  %28 = and i1 %26, %27
  %spec.select184 = select i1 %28, i64 4, i64 %23
  %.demorgan187 = and i1 %26, %27
  %29 = or i1 %24, %.demorgan187
  %30 = add i64 %7, -2147483648
  %31 = icmp ult i64 %30, -4294967296
  %32 = icmp eq i64 %spec.select184, 4
  %33 = and i1 %31, %32
  %spec.select185 = select i1 %33, i64 5, i64 %spec.select184
  %.demorgan188 = and i1 %31, %32
  %34 = or i1 %29, %.demorgan188
  br i1 %34, label %35, label %ifend35.i

35:                                               ; preds = %ifend.i
  store i64 %spec.select185, ptr %9, align 4
  br label %ifend35.i

ifend35.i:                                        ; preds = %35, %ifend.i, %if.entry
  %36 = phi i64 [ 6, %if.entry ], [ %spec.select185, %ifend.i ], [ %spec.select185, %35 ]
  %37 = icmp eq i64 %7, -9223372036854775808
  %38 = add nsw i64 %36, -5
  %39 = icmp ult i64 %38, 2
  %40 = and i1 %37, %39
  br i1 %40, label %if.entry42.i, label %common.ret

if.entry42.i:                                     ; preds = %ifend35.i
  store i64 7, ptr %9, align 4
  br label %common.ret

if.entry2:                                        ; preds = %3
  %memberidx.i118 = getelementptr inbounds %FloatExpressionNode, ptr %2, i64 0, i32 3
  %41 = load ptr, ptr %memberidx.i118, align 8
  %memberidx1.i119 = getelementptr inbounds %FloatToken, ptr %41, i64 0, i32 2
  %42 = load double, ptr %memberidx1.i119, align 8
  %43 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %43, align 4
  %memberidx.i.i.i120 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i.i120, align 4
  %memberidx1.i.i.i121 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 1
  %memberidx.i.i122 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 3
  %44 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %44, align 4
  store ptr %44, ptr %memberidx.i.i122, align 8
  %memberidx1.i.i123 = getelementptr inbounds %FloatExpression, ptr %43, i64 0, i32 4
  store double %42, ptr %memberidx1.i.i123, align 8
  store i1 true, ptr %memberidx1.i.i.i121, align 1
  %45 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %45, ptr noundef nonnull align 8 dereferenceable(6) @221, i64 6, i1 false)
  %46 = tail call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i.i19.i = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i19.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i.i, align 4
  %47 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %47, ptr noundef nonnull align 8 dereferenceable(6) %45, i64 6, i1 false)
  %48 = getelementptr inbounds i8, ptr %47, i64 6
  store i8 0, ptr %48, align 1
  %49 = tail call double @atof(ptr %47)
  tail call void @free(ptr %47)
  %50 = load i64, ptr %1, align 4
  %51 = and i64 %50, -2
  %52 = icmp eq i64 %51, 8
  br i1 %52, label %if.entry.i126, label %if.entry2.ifend.i127_crit_edge

if.entry2.ifend.i127_crit_edge:                   ; preds = %if.entry2
  %.pre183 = load i64, ptr %44, align 4
  br label %ifend.i127

if.entry.i126:                                    ; preds = %if.entry2
  store i64 %50, ptr %44, align 4
  br label %ifend.i127

ifend.i127:                                       ; preds = %if.entry2.ifend.i127_crit_edge, %if.entry.i126
  %53 = phi i64 [ %.pre183, %if.entry2.ifend.i127_crit_edge ], [ %50, %if.entry.i126 ]
  %54 = fneg double %49
  %55 = fcmp olt double %42, %54
  %56 = fcmp ogt double %42, %49
  %57 = or i1 %55, %56
  %58 = icmp eq i64 %53, 8
  %59 = and i1 %57, %58
  br i1 %59, label %if.entry7.i, label %common.ret

if.entry7.i:                                      ; preds = %ifend.i127
  store i64 9, ptr %44, align 4
  br label %common.ret

if.entry6:                                        ; preds = %3
  %60 = tail call ptr @malloc(i32 33)
  %memberidx.i128 = getelementptr inbounds %CharExpressionNode, ptr %2, i64 0, i32 3
  %61 = load ptr, ptr %memberidx.i128, align 8
  %memberidx1.i129 = getelementptr inbounds %CharToken, ptr %61, i64 0, i32 2
  %62 = load i8, ptr %memberidx1.i129, align 1
  %63 = zext i8 %62 to i64
  store i64 8, ptr %60, align 4
  %memberidx.i.i.i130 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i130, align 4
  %memberidx1.i.i.i131 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 1
  %memberidx.i.i132 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 3
  %64 = tail call ptr @malloc(i32 9)
  %memberidx.i5.i.i133 = getelementptr inbounds %IntType, ptr %64, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i.i133, align 1
  store ptr %64, ptr %memberidx.i.i132, align 8
  %memberidx1.i.i134 = getelementptr inbounds %IntExpression, ptr %60, i64 0, i32 4
  store i64 %63, ptr %memberidx1.i.i134, align 4
  store i1 true, ptr %memberidx1.i.i.i131, align 1
  store i64 2, ptr %64, align 4
  br label %common.ret

if.entry10:                                       ; preds = %3
  %65 = tail call ptr @malloc(i32 24)
  %memberidx.i.i146 = getelementptr inbounds %Array_Expression_, ptr %65, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i146, align 4
  %memberidx1.i.i147 = getelementptr inbounds %Array_Expression_, ptr %65, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i147, align 4
  %66 = tail call ptr @malloc(i32 64)
  store ptr %66, ptr %65, align 8
  store i64 0, ptr %memberidx.i.i146, align 4
  %memberidx2.i149 = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 4
  %67 = load ptr, ptr %memberidx2.i149, align 8
  %68 = tail call ptr @malloc(i32 25)
  %69 = load ptr, ptr %67, align 8
  %memberidx1.i21.i = getelementptr inbounds %Array_ExpressionNode_, ptr %67, i64 0, i32 1
  %70 = load i64, ptr %memberidx1.i21.i, align 4
  store i1 false, ptr %68, align 1
  %memberidx1.i.i.i150 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 1
  %memberidx2.i.i.i151 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 3
  store ptr %69, ptr %memberidx2.i.i.i151, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 2
  store i64 %70, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i150, align 4
  %71 = icmp slt i64 %70, 1
  br i1 %71, label %for.end.i160, label %for.body.i156

for.body.i156:                                    ; preds = %if.entry10, %Array_Expression____sl__.exit.i159
  %72 = phi i64 [ %85, %Array_Expression____sl__.exit.i159 ], [ 1, %if.entry10 ]
  %arg.0.i171.in = phi ptr [ %86, %Array_Expression____sl__.exit.i159 ], [ %69, %if.entry10 ]
  %arg.0.i171 = load ptr, ptr %arg.0.i171.in, align 8
  %73 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %73, align 4
  %74 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %73, ptr %arg.0.i171)
  %75 = load i64, ptr %memberidx.i.i146, align 4
  %76 = load i64, ptr %memberidx1.i.i147, align 4
  %.not.i.i155 = icmp slt i64 %75, %76
  br i1 %.not.i.i155, label %for.body.i156.Array_Expression____sl__.exit.i159_crit_edge, label %if.entry.i.i158

for.body.i156.Array_Expression____sl__.exit.i159_crit_edge: ; preds = %for.body.i156
  %.pre182 = load ptr, ptr %65, align 8
  br label %Array_Expression____sl__.exit.i159

if.entry.i.i158:                                  ; preds = %for.body.i156
  %77 = shl nuw i64 %76, 1
  store i64 %77, ptr %memberidx1.i.i147, align 4
  %78 = load ptr, ptr %65, align 8
  %79 = shl i64 %76, 4
  %80 = tail call ptr @realloc(ptr %78, i64 %79)
  store ptr %80, ptr %65, align 8
  %.pre181 = load i64, ptr %memberidx.i.i146, align 4
  br label %Array_Expression____sl__.exit.i159

Array_Expression____sl__.exit.i159:               ; preds = %for.body.i156.Array_Expression____sl__.exit.i159_crit_edge, %if.entry.i.i158
  %81 = phi ptr [ %80, %if.entry.i.i158 ], [ %.pre182, %for.body.i156.Array_Expression____sl__.exit.i159_crit_edge ]
  %82 = phi i64 [ %.pre181, %if.entry.i.i158 ], [ %75, %for.body.i156.Array_Expression____sl__.exit.i159_crit_edge ]
  %83 = add nsw i64 %82, 1
  store i64 %83, ptr %memberidx.i.i146, align 4
  %84 = getelementptr inbounds ptr, ptr %81, i64 %82
  store ptr %74, ptr %84, align 8
  %85 = add nuw nsw i64 %72, 1
  store i64 %85, ptr %memberidx1.i.i.i150, align 4
  %86 = getelementptr inbounds ptr, ptr %69, i64 %72
  %.not = icmp slt i64 %72, %70
  br i1 %.not, label %for.body.i156, label %for.end.i160

for.end.i160:                                     ; preds = %Array_Expression____sl__.exit.i159, %if.entry10
  tail call void @free(ptr nonnull %68)
  %87 = load i64, ptr %1, align 4
  %88 = icmp eq i64 %87, 13
  br i1 %88, label %if.entry.i29.i, label %if.entry.i161

if.entry.i29.i:                                   ; preds = %for.end.i160
  %memberidx1.i28.i = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %89 = load ptr, ptr %memberidx1.i28.i, align 8
  %90 = load i64, ptr %89, align 4
  %91 = add i64 %90, -1
  %92 = icmp ult i64 %91, 7
  br i1 %92, label %if.entry2.i.i, label %if.entry.i161

if.entry2.i.i:                                    ; preds = %if.entry.i29.i
  %93 = icmp ne i64 %90, 2
  %memberidx6.i.i = getelementptr inbounds %IntType, ptr %89, i64 0, i32 1
  %94 = load i1, ptr %memberidx6.i.i, align 1
  %95 = or i1 %93, %94
  br i1 %95, label %if.entry.i161, label %TypeChecker_check_string_expression.exit

if.entry.i161:                                    ; preds = %for.end.i160, %if.entry.i29.i, %if.entry2.i.i
  %96 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %96, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %97 = tail call ptr @malloc(i32 24)
  store ptr %96, ptr %97, align 8
  %memberidx1.i.i30.i = getelementptr inbounds %String, ptr %97, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i30.i, align 4
  %memberidx2.i.i31.i = getelementptr inbounds %String, ptr %97, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i31.i, align 4
  %98 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %97)
  br label %TypeChecker_check_string_expression.exit

TypeChecker_check_string_expression.exit:         ; preds = %if.entry2.i.i, %if.entry.i161
  %is_const.1.i = phi i1 [ false, %if.entry.i161 ], [ %71, %if.entry2.i.i ]
  %expected_type.0.i = phi ptr [ %98, %if.entry.i161 ], [ %1, %if.entry2.i.i ]
  %99 = tail call ptr @malloc(i32 49)
  %memberidx4.i162 = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 3
  %100 = load ptr, ptr %memberidx4.i162, align 8
  %memberidx5.i163 = getelementptr inbounds %StrToken, ptr %100, i64 0, i32 2
  %101 = load ptr, ptr %memberidx5.i163, align 8
  %memberidx7.i164 = getelementptr inbounds %StrToken, ptr %100, i64 0, i32 3
  %102 = load ptr, ptr %memberidx7.i164, align 8
  store i64 8, ptr %99, align 4
  %memberidx.i.i32.i = getelementptr inbounds %Expression, ptr %99, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i32.i, align 4
  %memberidx1.i.i33.i = getelementptr inbounds %Expression, ptr %99, i64 0, i32 1
  %memberidx.i34.i = getelementptr inbounds %StringExpression, ptr %99, i64 0, i32 6
  store ptr %65, ptr %memberidx.i34.i, align 8
  %memberidx1.i35.i = getelementptr inbounds %StringExpression, ptr %99, i64 0, i32 5
  store ptr %102, ptr %memberidx1.i35.i, align 8
  %memberidx2.i36.i = getelementptr inbounds %Expression, ptr %99, i64 0, i32 3
  %memberidx3.i.i = getelementptr inbounds %StringExpression, ptr %99, i64 0, i32 4
  store ptr %101, ptr %memberidx3.i.i, align 8
  store ptr %expected_type.0.i, ptr %memberidx2.i36.i, align 8
  store i1 %is_const.1.i, ptr %memberidx1.i.i33.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %3
  %103 = tail call fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry18:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  store i64 21, ptr %4, align 8
  %104 = tail call ptr @malloc(i32 24)
  %memberidx.i.i137 = getelementptr inbounds %Array_Expression_, ptr %104, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i137, align 4
  %memberidx1.i.i138 = getelementptr inbounds %Array_Expression_, ptr %104, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i138, align 4
  %105 = tail call ptr @malloc(i32 64)
  store ptr %105, ptr %104, align 8
  store i64 0, ptr %memberidx.i.i137, align 4
  %106 = tail call ptr @malloc(i32 16)
  store i64 15, ptr %106, align 4
  %memberidx.i39.i = getelementptr inbounds %TupleType, ptr %106, i64 0, i32 1
  %107 = tail call ptr @malloc(i32 24)
  %memberidx.i.i.i140 = getelementptr inbounds %Array_Type_, ptr %107, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i140, align 4
  %memberidx1.i.i.i141 = getelementptr inbounds %Array_Type_, ptr %107, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i141, align 4
  %108 = tail call ptr @malloc(i32 64)
  store ptr %108, ptr %107, align 8
  store i64 0, ptr %memberidx.i.i.i140, align 4
  store ptr %107, ptr %memberidx.i39.i, align 8
  %memberidx3.i = getelementptr inbounds %TupleExpressionNode, ptr %2, i64 0, i32 3
  %109 = load ptr, ptr %memberidx3.i, align 8
  %memberidx4.i173 = getelementptr inbounds %Array_ExpressionNode_, ptr %109, i64 0, i32 1
  %110 = load i64, ptr %memberidx4.i173, align 4
  %111 = icmp sgt i64 %110, 0
  br i1 %111, label %for.body.i.lr.ph, label %for.end.i

for.body.i.lr.ph:                                 ; preds = %if.entry18
  %112 = load i64, ptr %1, align 4
  %113 = icmp eq i64 %112, 15
  %spec.select = select i1 %113, ptr %1, ptr null
  %.not.i = icmp eq ptr %spec.select, null
  %memberidx8.i144 = getelementptr inbounds %TupleType, ptr %spec.select, i64 0, i32 1
  %memberidx.i43.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %Array_Expression____sl__.exit.i
  %114 = phi ptr [ %109, %for.body.i.lr.ph ], [ %155, %Array_Expression____sl__.exit.i ]
  %i.0.i175 = phi i64 [ 0, %for.body.i.lr.ph ], [ %154, %Array_Expression____sl__.exit.i ]
  %is_constant.0.i174 = phi i1 [ true, %for.body.i.lr.ph ], [ %131, %Array_Expression____sl__.exit.i ]
  br i1 %.not.i, label %ifend7.i, label %if.entry5.i

for.end.i:                                        ; preds = %Array_Expression____sl__.exit.i, %if.entry18
  %is_constant.0.i.lcssa = phi i1 [ true, %if.entry18 ], [ %131, %Array_Expression____sl__.exit.i ]
  %115 = call ptr @malloc(i32 33)
  store i64 8, ptr %115, align 4
  %memberidx.i.i40.i = getelementptr inbounds %Expression, ptr %115, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i40.i, align 4
  %memberidx1.i.i41.i = getelementptr inbounds %Expression, ptr %115, i64 0, i32 1
  %memberidx.i42.i = getelementptr inbounds %TupleExpression, ptr %115, i64 0, i32 4
  store ptr %104, ptr %memberidx.i42.i, align 8
  store i1 %is_constant.0.i.lcssa, ptr %memberidx1.i.i41.i, align 1
  %memberidx22.i = getelementptr inbounds %Expression, ptr %115, i64 0, i32 3
  store ptr %106, ptr %memberidx22.i, align 8
  br label %TypeChecker_check_tuple_expression.exit

if.entry5.i:                                      ; preds = %for.body.i
  %116 = load ptr, ptr %memberidx8.i144, align 8
  %memberidx9.i = getelementptr inbounds %Array_Type_, ptr %116, i64 0, i32 1
  %117 = load i64, ptr %memberidx9.i, align 4
  %118 = icmp slt i64 %i.0.i175, %117
  br i1 %118, label %if.entry10.i145, label %ifend7.i

ifend7.i:                                         ; preds = %if.entry10.i145, %if.entry5.i, %for.body.i
  %expected_element_type.0.i = phi ptr [ %129, %if.entry10.i145 ], [ %4, %if.entry5.i ], [ %4, %for.body.i ]
  %119 = load ptr, ptr %114, align 8
  %120 = getelementptr inbounds ptr, ptr %119, i64 %i.0.i175
  %121 = load ptr, ptr %120, align 8
  %122 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %expected_element_type.0.i, ptr %121)
  %123 = load ptr, ptr %memberidx.i43.i, align 8
  %memberidx1.i44.i = getelementptr inbounds %Compiler, ptr %123, i64 0, i32 5
  %124 = load ptr, ptr %memberidx1.i44.i, align 8
  %memberidx2.i45.i = getelementptr inbounds %Array_FloError_, ptr %124, i64 0, i32 1
  %125 = load i64, ptr %memberidx2.i45.i, align 4
  %126 = icmp sgt i64 %125, 0
  br i1 %126, label %TypeChecker_check_tuple_expression.exit, label %ifend17.i

if.entry10.i145:                                  ; preds = %if.entry5.i
  %127 = load ptr, ptr %116, align 8
  %128 = getelementptr inbounds ptr, ptr %127, i64 %i.0.i175
  %129 = load ptr, ptr %128, align 8
  br label %ifend7.i

ifend17.i:                                        ; preds = %ifend7.i
  %memberidx18.i = getelementptr inbounds %Expression, ptr %122, i64 0, i32 1
  %130 = load i1, ptr %memberidx18.i, align 1
  %131 = and i1 %is_constant.0.i174, %130
  %132 = load ptr, ptr %memberidx.i39.i, align 8
  %memberidx20.i = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %133 = load ptr, ptr %memberidx20.i, align 8
  %memberidx.i46.i = getelementptr inbounds %Array_Type_, ptr %132, i64 0, i32 1
  %134 = load i64, ptr %memberidx.i46.i, align 4
  %memberidx1.i47.i = getelementptr inbounds %Array_Type_, ptr %132, i64 0, i32 2
  %135 = load i64, ptr %memberidx1.i47.i, align 4
  %.not.i.i = icmp slt i64 %134, %135
  br i1 %.not.i.i, label %ifend17.i.Array_Type____sl__.exit.i_crit_edge, label %if.entry.i.i

ifend17.i.Array_Type____sl__.exit.i_crit_edge:    ; preds = %ifend17.i
  %.pre178 = load ptr, ptr %132, align 8
  br label %Array_Type____sl__.exit.i

if.entry.i.i:                                     ; preds = %ifend17.i
  %136 = shl nuw i64 %135, 1
  store i64 %136, ptr %memberidx1.i47.i, align 4
  %137 = load ptr, ptr %132, align 8
  %138 = shl i64 %135, 4
  %139 = call ptr @realloc(ptr %137, i64 %138)
  store ptr %139, ptr %132, align 8
  %.pre = load i64, ptr %memberidx.i46.i, align 4
  br label %Array_Type____sl__.exit.i

Array_Type____sl__.exit.i:                        ; preds = %ifend17.i.Array_Type____sl__.exit.i_crit_edge, %if.entry.i.i
  %140 = phi ptr [ %139, %if.entry.i.i ], [ %.pre178, %ifend17.i.Array_Type____sl__.exit.i_crit_edge ]
  %141 = phi i64 [ %.pre, %if.entry.i.i ], [ %134, %ifend17.i.Array_Type____sl__.exit.i_crit_edge ]
  %142 = add nsw i64 %141, 1
  store i64 %142, ptr %memberidx.i46.i, align 4
  %143 = getelementptr inbounds ptr, ptr %140, i64 %141
  store ptr %133, ptr %143, align 8
  %144 = load i64, ptr %memberidx.i.i137, align 4
  %145 = load i64, ptr %memberidx1.i.i138, align 4
  %.not.i51.i = icmp slt i64 %144, %145
  br i1 %.not.i51.i, label %Array_Type____sl__.exit.i.Array_Expression____sl__.exit.i_crit_edge, label %if.entry.i53.i

Array_Type____sl__.exit.i.Array_Expression____sl__.exit.i_crit_edge: ; preds = %Array_Type____sl__.exit.i
  %.pre180 = load ptr, ptr %104, align 8
  br label %Array_Expression____sl__.exit.i

if.entry.i53.i:                                   ; preds = %Array_Type____sl__.exit.i
  %146 = shl nuw i64 %145, 1
  store i64 %146, ptr %memberidx1.i.i138, align 4
  %147 = load ptr, ptr %104, align 8
  %148 = shl i64 %145, 4
  %149 = call ptr @realloc(ptr %147, i64 %148)
  store ptr %149, ptr %104, align 8
  %.pre179 = load i64, ptr %memberidx.i.i137, align 4
  br label %Array_Expression____sl__.exit.i

Array_Expression____sl__.exit.i:                  ; preds = %Array_Type____sl__.exit.i.Array_Expression____sl__.exit.i_crit_edge, %if.entry.i53.i
  %150 = phi ptr [ %149, %if.entry.i53.i ], [ %.pre180, %Array_Type____sl__.exit.i.Array_Expression____sl__.exit.i_crit_edge ]
  %151 = phi i64 [ %.pre179, %if.entry.i53.i ], [ %144, %Array_Type____sl__.exit.i.Array_Expression____sl__.exit.i_crit_edge ]
  %152 = add nsw i64 %151, 1
  store i64 %152, ptr %memberidx.i.i137, align 4
  %153 = getelementptr inbounds ptr, ptr %150, i64 %151
  store ptr %122, ptr %153, align 8
  %154 = add nuw nsw i64 %i.0.i175, 1
  %155 = load ptr, ptr %memberidx3.i, align 8
  %memberidx4.i = getelementptr inbounds %Array_ExpressionNode_, ptr %155, i64 0, i32 1
  %156 = load i64, ptr %memberidx4.i, align 4
  %157 = icmp slt i64 %154, %156
  br i1 %157, label %for.body.i, label %for.end.i

TypeChecker_check_tuple_expression.exit:          ; preds = %ifend7.i, %for.end.i
  %common.ret.op.i = phi ptr [ %115, %for.end.i ], [ null, %ifend7.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %common.ret

if.entry22:                                       ; preds = %3
  %158 = tail call fastcc ptr @TypeChecker_check_var_access_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry26:                                       ; preds = %3
  %159 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry30:                                       ; preds = %3
  %160 = tail call fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry34:                                       ; preds = %3
  %161 = tail call fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry38:                                       ; preds = %3
  %162 = tail call fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry42:                                       ; preds = %3
  %163 = tail call fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry46:                                       ; preds = %3
  %164 = tail call fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry50:                                       ; preds = %3
  %165 = tail call fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry54:                                       ; preds = %3
  %166 = tail call fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry58:                                       ; preds = %3
  %167 = tail call fastcc ptr @TypeChecker_check_match_expr(ptr %0, ptr nonnull %2)
  br label %common.ret
}

define internal fastcc noalias ptr @TypeChecker_check_var_access_expr(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %4, i64 0, i32 2
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %7, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %7, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %8, 4
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %3
  %9 = load ptr, ptr %5, align 8
  %10 = tail call i64 @memcmp(ptr %9, ptr nonnull %6, i64 4)
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend20, %TypeChecker_error.exit117, %ifend11, %TypeChecker_error.exit, %if.entry2, %if.entry
  %common.ret.op = phi ptr [ %12, %if.entry ], [ %20, %if.entry2 ], [ null, %TypeChecker_error.exit ], [ %49, %ifend11 ], [ null, %TypeChecker_error.exit117 ], [ %88, %ifend20 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %ifend.i
  %12 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %12, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i, align 4
  %memberidx1.i.i68 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %13, align 4
  %memberidx.i69 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 3
  store ptr %13, ptr %memberidx.i69, align 8
  %memberidx1.i70 = getelementptr inbounds %BooleanExpression, ptr %12, i64 0, i32 4
  store i1 true, ptr %memberidx1.i70, align 1
  store i1 true, ptr %memberidx1.i.i68, align 1
  br label %common.ret

ifend:                                            ; preds = %3, %ifend.i
  %14 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %14, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i71 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i71, align 4
  %memberidx2.i.i72 = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i72, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i75 = icmp eq i64 %16, 5
  br i1 %.not.i75, label %ifend.i77, label %ifend4

ifend.i77:                                        ; preds = %ifend
  %17 = load ptr, ptr %5, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 5)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend.i77
  %20 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %20, align 4
  %memberidx.i.i79 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i79, align 4
  %memberidx1.i.i80 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 1
  %21 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %21, align 4
  %memberidx.i81 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  store ptr %21, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %BooleanExpression, ptr %20, i64 0, i32 4
  store i1 false, ptr %memberidx1.i82, align 1
  store i1 true, ptr %memberidx1.i.i80, align 1
  br label %common.ret

ifend4:                                           ; preds = %ifend, %ifend.i77
  %22 = tail call ptr @malloc(i32 4)
  store i32 1819047278, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  %memberidx1.i.i84 = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i84, align 4
  %memberidx2.i.i85 = getelementptr inbounds %String, ptr %23, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i85, align 4
  %24 = load i64, ptr %memberidx.i, align 4
  %.not.i88 = icmp eq i64 %24, 4
  br i1 %.not.i88, label %ifend.i90, label %ifend7

ifend.i90:                                        ; preds = %ifend4
  %25 = load ptr, ptr %5, align 8
  %26 = tail call i64 @memcmp(ptr %25, ptr nonnull %22, i64 4)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend.i90
  %28 = load i64, ptr %1, align 4
  %29 = icmp eq i64 %28, 10
  br i1 %29, label %if.entry9, label %ifend11

ifend7:                                           ; preds = %ifend4, %ifend.i90
  %30 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr nonnull %5)
  %31 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %31, align 4
  %.not = icmp eq ptr %30, null
  br i1 %.not, label %ifend16, label %if.entry14

if.entry9:                                        ; preds = %if.entry5
  %32 = tail call ptr @malloc(i32 37)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %32, ptr noundef nonnull align 8 dereferenceable(37) @170, i64 37, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  %memberidx1.i.i94 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  store i64 37, ptr %memberidx1.i.i94, align 4
  %memberidx2.i.i95 = getelementptr inbounds %String, ptr %33, i64 0, i32 2
  store i64 37, ptr %memberidx2.i.i95, align 4
  %34 = load ptr, ptr %memberidx, align 8
  %memberidx13 = getelementptr inbounds %Token, ptr %34, i64 0, i32 1
  %35 = load ptr, ptr %memberidx13, align 8
  %memberidx.i96 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %36 = load ptr, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %Compiler, ptr %36, i64 0, i32 5
  %37 = load ptr, ptr %memberidx1.i97, align 8
  %38 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %38, align 4
  %memberidx1.i.i98 = getelementptr inbounds %FloError, ptr %38, i64 0, i32 2
  store ptr %35, ptr %memberidx1.i.i98, align 8
  %memberidx2.i.i99 = getelementptr inbounds %FloError, ptr %38, i64 0, i32 1
  store ptr %33, ptr %memberidx2.i.i99, align 8
  %memberidx.i.i100 = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i.i100, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 2
  %40 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %39, %40
  br i1 %.not.i.i, label %if.entry9.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry9.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry9
  %.pre137 = load ptr, ptr %37, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry9
  %41 = shl nuw i64 %40, 1
  store i64 %41, ptr %memberidx1.i2.i, align 4
  %42 = load ptr, ptr %37, align 8
  %43 = shl i64 %40, 4
  %44 = tail call ptr @realloc(ptr %42, i64 %43)
  store ptr %44, ptr %37, align 8
  %.pre136 = load i64, ptr %memberidx.i.i100, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry9.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %45 = phi ptr [ %.pre137, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %44, %if.entry.i.i ]
  %46 = phi i64 [ %39, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %.pre136, %if.entry.i.i ]
  %47 = add nsw i64 %46, 1
  store i64 %47, ptr %memberidx.i.i100, align 4
  %48 = getelementptr inbounds ptr, ptr %45, i64 %46
  store ptr %38, ptr %48, align 8
  br label %common.ret

ifend11:                                          ; preds = %if.entry5
  %49 = tail call ptr @malloc(i32 25)
  store i64 8, ptr %49, align 4
  %memberidx.i.i101 = getelementptr inbounds %Expression, ptr %49, i64 0, i32 2
  store i64 5, ptr %memberidx.i.i101, align 4
  %memberidx1.i.i102 = getelementptr inbounds %Expression, ptr %49, i64 0, i32 1
  %memberidx.i103 = getelementptr inbounds %Expression, ptr %49, i64 0, i32 3
  store ptr %1, ptr %memberidx.i103, align 8
  store i1 true, ptr %memberidx1.i.i102, align 1
  br label %common.ret

if.entry14:                                       ; preds = %ifend7
  %50 = load i64, ptr %30, align 4
  switch i64 %50, label %else31 [
    i64 0, label %if.entry18
    i64 1, label %if.entry24
    i64 2, label %if.entry30
  ]

ifend16:                                          ; preds = %ifend7
  %51 = load i64, ptr %memberidx.i, align 4
  %52 = trunc i64 %51 to i32
  %53 = add i32 %52, 1
  %54 = tail call ptr @malloc(i32 %53)
  %55 = load ptr, ptr %5, align 8
  %56 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %54, ptr align 8 %55, i64 %56, i1 false)
  %57 = getelementptr inbounds i8, ptr %54, i64 %56
  store i8 0, ptr %57, align 1
  %58 = alloca ptr, align 8
  %59 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %58, ptr nonnull @171, ptr %54)
  %60 = load ptr, ptr %58, align 8
  %61 = tail call ptr @malloc(i32 24)
  store ptr %60, ptr %61, align 8
  %memberidx1.i106 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  store i64 %59, ptr %memberidx1.i106, align 4
  %memberidx2.i107 = getelementptr inbounds %String, ptr %61, i64 0, i32 2
  store i64 %59, ptr %memberidx2.i107, align 4
  tail call void @free(ptr %54)
  %62 = load ptr, ptr %2, align 8
  %memberidx.i108 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %63 = load ptr, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %Compiler, ptr %63, i64 0, i32 5
  %64 = load ptr, ptr %memberidx1.i109, align 8
  %65 = call ptr @malloc(i32 24)
  store i64 1, ptr %65, align 4
  %memberidx1.i.i110 = getelementptr inbounds %FloError, ptr %65, i64 0, i32 2
  store ptr %62, ptr %memberidx1.i.i110, align 8
  %memberidx2.i.i111 = getelementptr inbounds %FloError, ptr %65, i64 0, i32 1
  store ptr %61, ptr %memberidx2.i.i111, align 8
  %memberidx.i.i112 = getelementptr inbounds %Array_FloError_, ptr %64, i64 0, i32 1
  %66 = load i64, ptr %memberidx.i.i112, align 4
  %memberidx1.i2.i113 = getelementptr inbounds %Array_FloError_, ptr %64, i64 0, i32 2
  %67 = load i64, ptr %memberidx1.i2.i113, align 4
  %.not.i.i114 = icmp slt i64 %66, %67
  br i1 %.not.i.i114, label %ifend16.TypeChecker_error.exit117_crit_edge, label %if.entry.i.i116

ifend16.TypeChecker_error.exit117_crit_edge:      ; preds = %ifend16
  %.pre135 = load ptr, ptr %64, align 8
  br label %TypeChecker_error.exit117

if.entry.i.i116:                                  ; preds = %ifend16
  %68 = shl nuw i64 %67, 1
  store i64 %68, ptr %memberidx1.i2.i113, align 4
  %69 = load ptr, ptr %64, align 8
  %70 = shl i64 %67, 4
  %71 = call ptr @realloc(ptr %69, i64 %70)
  store ptr %71, ptr %64, align 8
  %.pre = load i64, ptr %memberidx.i.i112, align 4
  br label %TypeChecker_error.exit117

TypeChecker_error.exit117:                        ; preds = %ifend16.TypeChecker_error.exit117_crit_edge, %if.entry.i.i116
  %72 = phi ptr [ %.pre135, %ifend16.TypeChecker_error.exit117_crit_edge ], [ %71, %if.entry.i.i116 ]
  %73 = phi i64 [ %66, %ifend16.TypeChecker_error.exit117_crit_edge ], [ %.pre, %if.entry.i.i116 ]
  %74 = add nsw i64 %73, 1
  store i64 %74, ptr %memberidx.i.i112, align 4
  %75 = getelementptr inbounds ptr, ptr %72, i64 %73
  store ptr %65, ptr %75, align 8
  br label %common.ret

if.entry18:                                       ; preds = %if.entry14
  %76 = load ptr, ptr %0, align 8
  %77 = load ptr, ptr %76, align 8
  %memberidx1.i118 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %78 = load i64, ptr %memberidx1.i118, align 4
  %79 = load ptr, ptr %77, align 8
  %80 = getelementptr inbounds ptr, ptr %79, i64 %78
  %81 = load ptr, ptr %80, align 8
  %memberidx2.i119 = getelementptr inbounds %Module, ptr %81, i64 0, i32 4
  %82 = load ptr, ptr %memberidx2.i119, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %83 = load i64, ptr %memberidx3.i, align 4
  %84 = load ptr, ptr %82, align 8
  %85 = getelementptr inbounds ptr, ptr %84, i64 %83
  %86 = load ptr, ptr %85, align 8
  %memberidx22 = getelementptr inbounds %Function, ptr %86, i64 0, i32 4
  %87 = load ptr, ptr %memberidx22, align 8
  br label %ifend20

ifend20:                                          ; preds = %if.entry41, %else38, %if.entry37, %if.entry30, %if.entry24, %if.entry18
  %var_ty.0 = phi ptr [ %87, %if.entry18 ], [ %102, %if.entry24 ], [ %114, %if.entry30 ], [ %117, %if.entry37 ], [ %119, %if.entry41 ], [ %31, %else38 ]
  %88 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %88, align 4
  %memberidx.i.i120 = getelementptr inbounds %Expression, ptr %88, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i120, align 4
  %memberidx1.i.i121 = getelementptr inbounds %Expression, ptr %88, i64 0, i32 1
  %memberidx.i122 = getelementptr inbounds %VarAccessExpression, ptr %88, i64 0, i32 4
  store ptr %30, ptr %memberidx.i122, align 8
  %memberidx1.i123 = getelementptr inbounds %Expression, ptr %88, i64 0, i32 3
  store ptr %var_ty.0, ptr %memberidx1.i123, align 8
  %89 = load i64, ptr %30, align 4
  %90 = icmp eq i64 %89, 2
  store i1 %90, ptr %memberidx1.i.i121, align 1
  br label %common.ret

if.entry24:                                       ; preds = %if.entry14
  %91 = load ptr, ptr %0, align 8
  %92 = load ptr, ptr %91, align 8
  %memberidx1.i125 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %93 = load i64, ptr %memberidx1.i125, align 4
  %94 = load ptr, ptr %92, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  %memberidx2.i126 = getelementptr inbounds %Module, ptr %96, i64 0, i32 1
  %97 = load ptr, ptr %memberidx2.i126, align 8
  %memberidx3.i127 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %98 = load i64, ptr %memberidx3.i127, align 4
  %99 = load ptr, ptr %97, align 8
  %100 = getelementptr inbounds ptr, ptr %99, i64 %98
  %101 = load ptr, ptr %100, align 8
  %102 = load ptr, ptr %101, align 8
  br label %ifend20

if.entry30:                                       ; preds = %if.entry14
  %103 = load ptr, ptr %0, align 8
  %104 = load ptr, ptr %103, align 8
  %memberidx1.i128 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %105 = load i64, ptr %memberidx1.i128, align 4
  %106 = load ptr, ptr %104, align 8
  %107 = getelementptr inbounds ptr, ptr %106, i64 %105
  %108 = load ptr, ptr %107, align 8
  %memberidx2.i129 = getelementptr inbounds %Module, ptr %108, i64 0, i32 2
  %109 = load ptr, ptr %memberidx2.i129, align 8
  %memberidx3.i130 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %110 = load i64, ptr %memberidx3.i130, align 4
  %111 = load ptr, ptr %109, align 8
  %112 = getelementptr inbounds ptr, ptr %111, i64 %110
  %113 = load ptr, ptr %112, align 8
  %114 = load ptr, ptr %113, align 8
  br label %ifend20

else31:                                           ; preds = %if.entry14
  %115 = add i64 %50, -3
  %116 = icmp ult i64 %115, 2
  br i1 %116, label %if.entry37, label %else38

if.entry37:                                       ; preds = %else31
  %117 = tail call ptr @malloc(i32 8)
  store i64 17, ptr %117, align 4
  br label %ifend20

else38:                                           ; preds = %else31
  %118 = icmp eq i64 %50, 5
  br i1 %118, label %if.entry41, label %ifend20

if.entry41:                                       ; preds = %else38
  %119 = tail call ptr @malloc(i32 8)
  store i64 18, ptr %119, align 4
  br label %ifend20
}

define internal fastcc ptr @TypeChecker_check_intrinsic_call(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  %5 = add i64 %4, -3
  %6 = icmp ult i64 %5, 2
  %7 = icmp eq i64 %4, 7
  %8 = or i1 %7, %6
  %9 = alloca %IntType, align 8
  store i64 6, ptr %9, align 8
  %memberidx.i = getelementptr inbounds %IntType, ptr %9, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 8
  %10 = alloca %Type, align 8
  store i64 21, ptr %10, align 8
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  %11 = load i64, ptr %memberidx2, align 4
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx3 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %13 = icmp eq i64 %4, 6
  %14 = icmp eq i64 %4, 5
  %memberidx.i120 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %i.0174 = phi i64 [ 0, %for.body.lr.ph ], [ %54, %Array_Expression____sl__.exit ]
  %15 = icmp eq i64 %i.0174, 1
  %16 = and i1 %8, %15
  br i1 %16, label %end, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  %memberidx25 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %17 = load ptr, ptr %memberidx25, align 8
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr %18, align 8
  %memberidx26 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %20 = load ptr, ptr %memberidx26, align 8
  %21 = load i64, ptr %20, align 4
  %22 = icmp eq i64 %21, 13
  br i1 %22, label %ifend29, label %if.entry27

false_block:                                      ; preds = %for.body
  %23 = load ptr, ptr %memberidx3, align 8
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %24, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx4, align 8
  br label %end

end:                                              ; preds = %for.body, %false_block
  %ternary = phi ptr [ %26, %false_block ], [ %10, %for.body ]
  %27 = and i1 %6, %15
  %28 = icmp eq i64 %i.0174, 0
  %29 = and i1 %13, %28
  %30 = select i1 %14, i1 true, i1 %29
  %31 = select i1 %30, i1 true, i1 %27
  %expected_type.2 = select i1 %31, ptr %9, ptr %ternary
  %32 = load ptr, ptr %3, align 8
  %33 = getelementptr inbounds ptr, ptr %32, i64 %i.0174
  %34 = load ptr, ptr %33, align 8
  %35 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %expected_type.2, ptr %34)
  %36 = load ptr, ptr %memberidx.i120, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %36, i64 0, i32 5
  %37 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 1
  %38 = load i64, ptr %memberidx2.i, align 4
  %39 = icmp sgt i64 %38, 0
  br i1 %39, label %common.ret, label %ifend13

common.ret:                                       ; preds = %end, %ifend29, %ifend41, %ifend55, %if.entry62, %TypeChecker_error.exit166, %TypeChecker_error.exit154, %TypeChecker_error.exit142, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit142 ], [ null, %TypeChecker_error.exit154 ], [ null, %TypeChecker_error.exit166 ], [ %1, %if.entry62 ], [ %1, %ifend55 ], [ %1, %ifend41 ], [ %1, %ifend29 ], [ null, %end ]
  ret ptr %common.ret.op

ifend13:                                          ; preds = %end
  %40 = load i64, ptr %expected_type.2, align 4
  %.not119 = icmp eq i64 %40, 21
  br i1 %.not119, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %memberidx18 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %41 = load ptr, ptr %memberidx18, align 8
  %42 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %expected_type.2, ptr %41)
  br i1 %42, label %ifend17, label %if.entry19

ifend17:                                          ; preds = %if.entry15, %ifend13
  %43 = load ptr, ptr %memberidx3, align 8
  %memberidx.i121 = getelementptr inbounds %Array_Expression_, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i121, align 4
  %memberidx1.i122 = getelementptr inbounds %Array_Expression_, ptr %43, i64 0, i32 2
  %45 = load i64, ptr %memberidx1.i122, align 4
  %.not.i = icmp slt i64 %44, %45
  br i1 %.not.i, label %ifend17.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

ifend17.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend17
  %.pre181 = load ptr, ptr %43, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %ifend17
  %46 = shl nuw i64 %45, 1
  store i64 %46, ptr %memberidx1.i122, align 4
  %47 = load ptr, ptr %43, align 8
  %48 = shl i64 %45, 4
  %49 = call ptr @realloc(ptr %47, i64 %48)
  store ptr %49, ptr %43, align 8
  %.pre180 = load i64, ptr %memberidx.i121, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend17.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %50 = phi ptr [ %.pre181, %ifend17.Array_Expression____sl__.exit_crit_edge ], [ %49, %if.entry.i ]
  %51 = phi i64 [ %44, %ifend17.Array_Expression____sl__.exit_crit_edge ], [ %.pre180, %if.entry.i ]
  %52 = add nsw i64 %51, 1
  store i64 %52, ptr %memberidx.i121, align 4
  %53 = getelementptr inbounds ptr, ptr %50, i64 %51
  store ptr %35, ptr %53, align 8
  %54 = add nuw nsw i64 %i.0174, 1
  %55 = load i64, ptr %memberidx2, align 4
  %56 = icmp slt i64 %54, %55
  br i1 %56, label %for.body, label %for.end

if.entry19:                                       ; preds = %if.entry15
  %57 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %expected_type.2)
  %memberidx.i123 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i123, align 4
  %59 = trunc i64 %58 to i32
  %60 = add i32 %59, 1
  %61 = call ptr @malloc(i32 %60)
  %62 = load ptr, ptr %57, align 8
  %63 = load i64, ptr %memberidx.i123, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %62, i64 %63, i1 false)
  %64 = getelementptr inbounds i8, ptr %61, i64 %63
  store i8 0, ptr %64, align 1
  %65 = load ptr, ptr %memberidx18, align 8
  %66 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %65)
  %memberidx.i124 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  %67 = load i64, ptr %memberidx.i124, align 4
  %68 = trunc i64 %67 to i32
  %69 = add i32 %68, 1
  %70 = call ptr @malloc(i32 %69)
  %71 = load ptr, ptr %66, align 8
  %72 = load i64, ptr %memberidx.i124, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %70, ptr align 8 %71, i64 %72, i1 false)
  %73 = getelementptr inbounds i8, ptr %70, i64 %72
  store i8 0, ptr %73, align 1
  %74 = alloca ptr, align 8
  %75 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %74, ptr nonnull @217, i64 %i.0174, ptr %61, ptr %70)
  %76 = load ptr, ptr %74, align 8
  %77 = tail call ptr @malloc(i32 24)
  store ptr %76, ptr %77, align 8
  %memberidx1.i125 = getelementptr inbounds %String, ptr %77, i64 0, i32 1
  store i64 %75, ptr %memberidx1.i125, align 4
  %memberidx2.i126 = getelementptr inbounds %String, ptr %77, i64 0, i32 2
  store i64 %75, ptr %memberidx2.i126, align 4
  tail call void @free(ptr %61)
  tail call void @free(ptr %70)
  %78 = load ptr, ptr %3, align 8
  %79 = getelementptr inbounds ptr, ptr %78, i64 %i.0174
  %80 = load ptr, ptr %79, align 8
  %81 = load ptr, ptr %80, align 8
  %82 = load ptr, ptr %memberidx.i120, align 8
  %memberidx1.i128 = getelementptr inbounds %Compiler, ptr %82, i64 0, i32 5
  %83 = load ptr, ptr %memberidx1.i128, align 8
  %84 = call ptr @malloc(i32 24)
  store i64 5, ptr %84, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %84, i64 0, i32 2
  store ptr %81, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %84, i64 0, i32 1
  store ptr %77, ptr %memberidx2.i.i, align 8
  %memberidx.i.i129 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 1
  %85 = load i64, ptr %memberidx.i.i129, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 2
  %86 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %85, %86
  br i1 %.not.i.i, label %if.entry19.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry19.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry19
  %.pre179 = load ptr, ptr %83, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry19
  %87 = shl nuw i64 %86, 1
  store i64 %87, ptr %memberidx1.i2.i, align 4
  %88 = load ptr, ptr %83, align 8
  %89 = shl i64 %86, 4
  %90 = call ptr @realloc(ptr %88, i64 %89)
  store ptr %90, ptr %83, align 8
  %.pre = load i64, ptr %memberidx.i.i129, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry19.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %91 = phi ptr [ %.pre179, %if.entry19.TypeChecker_error.exit_crit_edge ], [ %90, %if.entry.i.i ]
  %92 = phi i64 [ %85, %if.entry19.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %93 = add nsw i64 %92, 1
  store i64 %93, ptr %memberidx.i.i129, align 4
  %94 = getelementptr inbounds ptr, ptr %91, i64 %92
  store ptr %84, ptr %94, align 8
  br label %common.ret

if.entry27:                                       ; preds = %for.end
  %95 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %20)
  %memberidx.i130 = getelementptr inbounds %String, ptr %95, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i130, align 4
  %97 = trunc i64 %96 to i32
  %98 = add i32 %97, 1
  %99 = call ptr @malloc(i32 %98)
  %100 = load ptr, ptr %95, align 8
  %101 = load i64, ptr %memberidx.i130, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %99, ptr align 8 %100, i64 %101, i1 false)
  %102 = getelementptr inbounds i8, ptr %99, i64 %101
  store i8 0, ptr %102, align 1
  %103 = alloca ptr, align 8
  %104 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %103, ptr nonnull @218, ptr %99)
  %105 = load ptr, ptr %103, align 8
  %106 = tail call ptr @malloc(i32 24)
  store ptr %105, ptr %106, align 8
  %memberidx1.i131 = getelementptr inbounds %String, ptr %106, i64 0, i32 1
  store i64 %104, ptr %memberidx1.i131, align 4
  %memberidx2.i132 = getelementptr inbounds %String, ptr %106, i64 0, i32 2
  store i64 %104, ptr %memberidx2.i132, align 4
  tail call void @free(ptr %99)
  %memberidx32 = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 3
  %107 = load ptr, ptr %memberidx32, align 8
  %108 = load ptr, ptr %107, align 8
  %memberidx.i133 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %109 = load ptr, ptr %memberidx.i133, align 8
  %memberidx1.i134 = getelementptr inbounds %Compiler, ptr %109, i64 0, i32 5
  %110 = load ptr, ptr %memberidx1.i134, align 8
  %111 = call ptr @malloc(i32 24)
  store i64 5, ptr %111, align 4
  %memberidx1.i.i135 = getelementptr inbounds %FloError, ptr %111, i64 0, i32 2
  store ptr %108, ptr %memberidx1.i.i135, align 8
  %memberidx2.i.i136 = getelementptr inbounds %FloError, ptr %111, i64 0, i32 1
  store ptr %106, ptr %memberidx2.i.i136, align 8
  %memberidx.i.i137 = getelementptr inbounds %Array_FloError_, ptr %110, i64 0, i32 1
  %112 = load i64, ptr %memberidx.i.i137, align 4
  %memberidx1.i2.i138 = getelementptr inbounds %Array_FloError_, ptr %110, i64 0, i32 2
  %113 = load i64, ptr %memberidx1.i2.i138, align 4
  %.not.i.i139 = icmp slt i64 %112, %113
  br i1 %.not.i.i139, label %if.entry27.TypeChecker_error.exit142_crit_edge, label %if.entry.i.i141

if.entry27.TypeChecker_error.exit142_crit_edge:   ; preds = %if.entry27
  %.pre183 = load ptr, ptr %110, align 8
  br label %TypeChecker_error.exit142

if.entry.i.i141:                                  ; preds = %if.entry27
  %114 = shl nuw i64 %113, 1
  store i64 %114, ptr %memberidx1.i2.i138, align 4
  %115 = load ptr, ptr %110, align 8
  %116 = shl i64 %113, 4
  %117 = call ptr @realloc(ptr %115, i64 %116)
  store ptr %117, ptr %110, align 8
  %.pre182 = load i64, ptr %memberidx.i.i137, align 4
  br label %TypeChecker_error.exit142

TypeChecker_error.exit142:                        ; preds = %if.entry27.TypeChecker_error.exit142_crit_edge, %if.entry.i.i141
  %118 = phi ptr [ %.pre183, %if.entry27.TypeChecker_error.exit142_crit_edge ], [ %117, %if.entry.i.i141 ]
  %119 = phi i64 [ %112, %if.entry27.TypeChecker_error.exit142_crit_edge ], [ %.pre182, %if.entry.i.i141 ]
  %120 = add nsw i64 %119, 1
  store i64 %120, ptr %memberidx.i.i137, align 4
  %121 = getelementptr inbounds ptr, ptr %118, i64 %119
  store ptr %111, ptr %121, align 8
  br label %common.ret

ifend29:                                          ; preds = %for.end
  switch i64 %4, label %common.ret [
    i64 6, label %if.entry34
    i64 7, label %if.entry48
    i64 5, label %if.entry48
    i64 4, label %if.entry48
    i64 3, label %if.entry48
  ]

if.entry34:                                       ; preds = %ifend29
  %memberidx38 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 1
  %122 = load i64, ptr %memberidx38, align 4
  %.not118 = icmp eq i64 %122, 2
  br i1 %.not118, label %ifend41, label %if.entry39

if.entry39:                                       ; preds = %if.entry34
  %123 = alloca ptr, align 8
  %124 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %123, ptr nonnull @219, i64 %122)
  %125 = load ptr, ptr %123, align 8
  %126 = tail call ptr @malloc(i32 24)
  store ptr %125, ptr %126, align 8
  %memberidx1.i143 = getelementptr inbounds %String, ptr %126, i64 0, i32 1
  store i64 %124, ptr %memberidx1.i143, align 4
  %memberidx2.i144 = getelementptr inbounds %String, ptr %126, i64 0, i32 2
  store i64 %124, ptr %memberidx2.i144, align 4
  %127 = load ptr, ptr %2, align 8
  %memberidx.i145 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %128 = load ptr, ptr %memberidx.i145, align 8
  %memberidx1.i146 = getelementptr inbounds %Compiler, ptr %128, i64 0, i32 5
  %129 = load ptr, ptr %memberidx1.i146, align 8
  %130 = call ptr @malloc(i32 24)
  store i64 4, ptr %130, align 4
  %memberidx1.i.i147 = getelementptr inbounds %FloError, ptr %130, i64 0, i32 2
  store ptr %127, ptr %memberidx1.i.i147, align 8
  %memberidx2.i.i148 = getelementptr inbounds %FloError, ptr %130, i64 0, i32 1
  store ptr %126, ptr %memberidx2.i.i148, align 8
  %memberidx.i.i149 = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 1
  %131 = load i64, ptr %memberidx.i.i149, align 4
  %memberidx1.i2.i150 = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 2
  %132 = load i64, ptr %memberidx1.i2.i150, align 4
  %.not.i.i151 = icmp slt i64 %131, %132
  br i1 %.not.i.i151, label %if.entry39.TypeChecker_error.exit154_crit_edge, label %if.entry.i.i153

if.entry39.TypeChecker_error.exit154_crit_edge:   ; preds = %if.entry39
  %.pre187 = load ptr, ptr %129, align 8
  br label %TypeChecker_error.exit154

if.entry.i.i153:                                  ; preds = %if.entry39
  %133 = shl nuw i64 %132, 1
  store i64 %133, ptr %memberidx1.i2.i150, align 4
  %134 = load ptr, ptr %129, align 8
  %135 = shl i64 %132, 4
  %136 = call ptr @realloc(ptr %134, i64 %135)
  store ptr %136, ptr %129, align 8
  %.pre186 = load i64, ptr %memberidx.i.i149, align 4
  br label %TypeChecker_error.exit154

TypeChecker_error.exit154:                        ; preds = %if.entry39.TypeChecker_error.exit154_crit_edge, %if.entry.i.i153
  %137 = phi ptr [ %.pre187, %if.entry39.TypeChecker_error.exit154_crit_edge ], [ %136, %if.entry.i.i153 ]
  %138 = phi i64 [ %131, %if.entry39.TypeChecker_error.exit154_crit_edge ], [ %.pre186, %if.entry.i.i153 ]
  %139 = add nsw i64 %138, 1
  store i64 %139, ptr %memberidx.i.i149, align 4
  %140 = getelementptr inbounds ptr, ptr %137, i64 %138
  store ptr %130, ptr %140, align 8
  br label %common.ret

ifend41:                                          ; preds = %if.entry34
  %memberidx45 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %20, ptr %memberidx45, align 8
  br label %common.ret

if.entry48:                                       ; preds = %ifend29, %ifend29, %ifend29, %ifend29
  %memberidx52 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 1
  %141 = load i64, ptr %memberidx52, align 4
  %.not = icmp eq i64 %141, 3
  br i1 %.not, label %ifend55, label %if.entry53

if.entry53:                                       ; preds = %if.entry48
  %142 = alloca ptr, align 8
  %143 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %142, ptr nonnull @220, i64 %141)
  %144 = load ptr, ptr %142, align 8
  %145 = tail call ptr @malloc(i32 24)
  store ptr %144, ptr %145, align 8
  %memberidx1.i155 = getelementptr inbounds %String, ptr %145, i64 0, i32 1
  store i64 %143, ptr %memberidx1.i155, align 4
  %memberidx2.i156 = getelementptr inbounds %String, ptr %145, i64 0, i32 2
  store i64 %143, ptr %memberidx2.i156, align 4
  %146 = load ptr, ptr %2, align 8
  %memberidx.i157 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %147 = load ptr, ptr %memberidx.i157, align 8
  %memberidx1.i158 = getelementptr inbounds %Compiler, ptr %147, i64 0, i32 5
  %148 = load ptr, ptr %memberidx1.i158, align 8
  %149 = call ptr @malloc(i32 24)
  store i64 4, ptr %149, align 4
  %memberidx1.i.i159 = getelementptr inbounds %FloError, ptr %149, i64 0, i32 2
  store ptr %146, ptr %memberidx1.i.i159, align 8
  %memberidx2.i.i160 = getelementptr inbounds %FloError, ptr %149, i64 0, i32 1
  store ptr %145, ptr %memberidx2.i.i160, align 8
  %memberidx.i.i161 = getelementptr inbounds %Array_FloError_, ptr %148, i64 0, i32 1
  %150 = load i64, ptr %memberidx.i.i161, align 4
  %memberidx1.i2.i162 = getelementptr inbounds %Array_FloError_, ptr %148, i64 0, i32 2
  %151 = load i64, ptr %memberidx1.i2.i162, align 4
  %.not.i.i163 = icmp slt i64 %150, %151
  br i1 %.not.i.i163, label %if.entry53.TypeChecker_error.exit166_crit_edge, label %if.entry.i.i165

if.entry53.TypeChecker_error.exit166_crit_edge:   ; preds = %if.entry53
  %.pre185 = load ptr, ptr %148, align 8
  br label %TypeChecker_error.exit166

if.entry.i.i165:                                  ; preds = %if.entry53
  %152 = shl nuw i64 %151, 1
  store i64 %152, ptr %memberidx1.i2.i162, align 4
  %153 = load ptr, ptr %148, align 8
  %154 = shl i64 %151, 4
  %155 = call ptr @realloc(ptr %153, i64 %154)
  store ptr %155, ptr %148, align 8
  %.pre184 = load i64, ptr %memberidx.i.i161, align 4
  br label %TypeChecker_error.exit166

TypeChecker_error.exit166:                        ; preds = %if.entry53.TypeChecker_error.exit166_crit_edge, %if.entry.i.i165
  %156 = phi ptr [ %.pre185, %if.entry53.TypeChecker_error.exit166_crit_edge ], [ %155, %if.entry.i.i165 ]
  %157 = phi i64 [ %150, %if.entry53.TypeChecker_error.exit166_crit_edge ], [ %.pre184, %if.entry.i.i165 ]
  %158 = add nsw i64 %157, 1
  store i64 %158, ptr %memberidx.i.i161, align 4
  %159 = getelementptr inbounds ptr, ptr %156, i64 %157
  store ptr %149, ptr %159, align 8
  br label %common.ret

ifend55:                                          ; preds = %if.entry48
  %memberidx61 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %20, ptr %memberidx61, align 8
  br i1 %7, label %if.entry62, label %common.ret

if.entry62:                                       ; preds = %ifend55
  %160 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %160, align 4
  %memberidx.i167 = getelementptr inbounds %IntType, ptr %160, i64 0, i32 1
  store i1 true, ptr %memberidx.i167, align 1
  store ptr %160, ptr %memberidx61, align 8
  br label %common.ret
}

define internal fastcc noalias ptr @dump_type(ptr nocapture readonly %0, i1 %1) unnamed_addr {
  %3 = load i64, ptr %0, align 4
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %if.entry, label %ifend

common.ret:                                       ; preds = %true_block, %false_block, %ifend55, %if.entry53, %if.entry49, %if.entry45, %if.entry41, %if.entry37, %if.entry33, %if.entry29, %if.entry25, %if.entry21, %if.entry17, %if.entry4, %if.entry
  %common.ret.op = phi ptr [ %6, %if.entry ], [ %13, %if.entry4 ], [ %30, %if.entry17 ], [ %38, %if.entry21 ], [ %46, %if.entry25 ], [ %54, %if.entry29 ], [ %62, %if.entry33 ], [ %70, %if.entry37 ], [ %72, %if.entry41 ], [ %74, %if.entry45 ], [ %76, %if.entry49 ], [ %78, %if.entry53 ], [ %80, %ifend55 ], [ %20, %true_block ], [ %22, %false_block ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %5 = tail call ptr @malloc(i32 4)
  store i32 1819242338, ptr %5, align 8
  %6 = tail call ptr @malloc(i32 24)
  store ptr %5, ptr %6, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %6, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %2
  %7 = add i64 %3, -1
  %8 = icmp ult i64 %7, 7
  br i1 %8, label %if.entry1, label %ifend3

if.entry1:                                        ; preds = %ifend
  br i1 %1, label %if.entry4, label %ifend6

ifend3:                                           ; preds = %ifend11, %ifend
  %9 = phi i64 [ %18, %ifend11 ], [ %3, %ifend ]
  switch i64 %9, label %ifend55 [
    i64 8, label %if.entry41
    i64 9, label %if.entry45
    i64 10, label %if.entry49
    i64 17, label %if.entry53
  ]

if.entry4:                                        ; preds = %if.entry1
  %10 = alloca ptr, align 8
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %10, ptr nonnull @87, i64 64)
  %12 = load ptr, ptr %10, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  store i64 %11, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx2.i, align 4
  br label %common.ret

ifend6:                                           ; preds = %if.entry1
  %memberidx7 = getelementptr inbounds %IntType, ptr %0, i64 0, i32 1
  %14 = load i1, ptr %memberidx7, align 1
  %15 = icmp eq i64 %3, 6
  br i1 %15, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend6
  br i1 %14, label %true_block, label %false_block

ifend11:                                          ; preds = %ifend6
  %16 = tail call ptr @malloc(i32 1)
  %. = select i1 %14, i8 105, i8 117
  store i8 %., ptr %16, align 8
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  %memberidx1.i.i83 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i83, align 4
  %memberidx2.i.i84 = getelementptr inbounds %String, ptr %17, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i84, align 4
  %18 = load i64, ptr %0, align 4
  switch i64 %18, label %ifend3 [
    i64 1, label %if.entry17
    i64 2, label %if.entry21
    i64 3, label %if.entry25
    i64 4, label %if.entry29
    i64 5, label %if.entry33
    i64 7, label %if.entry37
  ]

true_block:                                       ; preds = %if.entry9
  %19 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %19, ptr noundef nonnull align 8 dereferenceable(3) @88, i64 3, i1 false)
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i.i77 = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i77, align 4
  %memberidx2.i.i78 = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i78, align 4
  br label %common.ret

false_block:                                      ; preds = %if.entry9
  %21 = tail call ptr @malloc(i32 4)
  store i32 1953393013, ptr %21, align 8
  %22 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  %memberidx1.i.i79 = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i79, align 4
  %memberidx2.i.i80 = getelementptr inbounds %String, ptr %22, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i80, align 4
  br label %common.ret

if.entry17:                                       ; preds = %ifend11
  %memberidx.i = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %23 = tail call ptr @malloc(i32 2)
  %24 = load ptr, ptr %17, align 8
  %25 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 8 %24, i64 %25, i1 false)
  %26 = getelementptr inbounds i8, ptr %23, i64 %25
  store i8 0, ptr %26, align 1
  %27 = alloca ptr, align 8
  %28 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %27, ptr nonnull @89, ptr %23)
  %29 = load ptr, ptr %27, align 8
  %30 = tail call ptr @malloc(i32 24)
  store ptr %29, ptr %30, align 8
  %memberidx1.i85 = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  store i64 %28, ptr %memberidx1.i85, align 4
  %memberidx2.i86 = getelementptr inbounds %String, ptr %30, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i86, align 4
  tail call void @free(ptr %23)
  br label %common.ret

if.entry21:                                       ; preds = %ifend11
  %memberidx.i87 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %31 = tail call ptr @malloc(i32 2)
  %32 = load ptr, ptr %17, align 8
  %33 = load i64, ptr %memberidx.i87, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %31, ptr align 8 %32, i64 %33, i1 false)
  %34 = getelementptr inbounds i8, ptr %31, i64 %33
  store i8 0, ptr %34, align 1
  %35 = alloca ptr, align 8
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %35, ptr nonnull @90, ptr %31)
  %37 = load ptr, ptr %35, align 8
  %38 = tail call ptr @malloc(i32 24)
  store ptr %37, ptr %38, align 8
  %memberidx1.i88 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  store i64 %36, ptr %memberidx1.i88, align 4
  %memberidx2.i89 = getelementptr inbounds %String, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx2.i89, align 4
  tail call void @free(ptr %31)
  br label %common.ret

if.entry25:                                       ; preds = %ifend11
  %memberidx.i90 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %39 = tail call ptr @malloc(i32 2)
  %40 = load ptr, ptr %17, align 8
  %41 = load i64, ptr %memberidx.i90, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %40, i64 %41, i1 false)
  %42 = getelementptr inbounds i8, ptr %39, i64 %41
  store i8 0, ptr %42, align 1
  %43 = alloca ptr, align 8
  %44 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %43, ptr nonnull @91, ptr %39)
  %45 = load ptr, ptr %43, align 8
  %46 = tail call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i91 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 %44, ptr %memberidx1.i91, align 4
  %memberidx2.i92 = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 %44, ptr %memberidx2.i92, align 4
  tail call void @free(ptr %39)
  br label %common.ret

if.entry29:                                       ; preds = %ifend11
  %memberidx.i93 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %47 = tail call ptr @malloc(i32 2)
  %48 = load ptr, ptr %17, align 8
  %49 = load i64, ptr %memberidx.i93, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %48, i64 %49, i1 false)
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  store i8 0, ptr %50, align 1
  %51 = alloca ptr, align 8
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %51, ptr nonnull @92, ptr %47)
  %53 = load ptr, ptr %51, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i94 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %52, ptr %memberidx1.i94, align 4
  %memberidx2.i95 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx2.i95, align 4
  tail call void @free(ptr %47)
  br label %common.ret

if.entry33:                                       ; preds = %ifend11
  %memberidx.i96 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %55 = tail call ptr @malloc(i32 2)
  %56 = load ptr, ptr %17, align 8
  %57 = load i64, ptr %memberidx.i96, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %55, ptr align 8 %56, i64 %57, i1 false)
  %58 = getelementptr inbounds i8, ptr %55, i64 %57
  store i8 0, ptr %58, align 1
  %59 = alloca ptr, align 8
  %60 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %59, ptr nonnull @93, ptr %55)
  %61 = load ptr, ptr %59, align 8
  %62 = tail call ptr @malloc(i32 24)
  store ptr %61, ptr %62, align 8
  %memberidx1.i97 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  store i64 %60, ptr %memberidx1.i97, align 4
  %memberidx2.i98 = getelementptr inbounds %String, ptr %62, i64 0, i32 2
  store i64 %60, ptr %memberidx2.i98, align 4
  tail call void @free(ptr %55)
  br label %common.ret

if.entry37:                                       ; preds = %ifend11
  %memberidx.i99 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %63 = tail call ptr @malloc(i32 2)
  %64 = load ptr, ptr %17, align 8
  %65 = load i64, ptr %memberidx.i99, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %63, ptr align 8 %64, i64 %65, i1 false)
  %66 = getelementptr inbounds i8, ptr %63, i64 %65
  store i8 0, ptr %66, align 1
  %67 = alloca ptr, align 8
  %68 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %67, ptr nonnull @94, ptr %63)
  %69 = load ptr, ptr %67, align 8
  %70 = tail call ptr @malloc(i32 24)
  store ptr %69, ptr %70, align 8
  %memberidx1.i100 = getelementptr inbounds %String, ptr %70, i64 0, i32 1
  store i64 %68, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %String, ptr %70, i64 0, i32 2
  store i64 %68, ptr %memberidx2.i101, align 4
  tail call void @free(ptr %63)
  br label %common.ret

if.entry41:                                       ; preds = %ifend3
  %71 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %71, ptr noundef nonnull align 8 dereferenceable(3) @95, i64 3, i1 false)
  %72 = tail call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i.i104 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i104, align 4
  %memberidx2.i.i105 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i105, align 4
  br label %common.ret

if.entry45:                                       ; preds = %ifend3
  %73 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %73, ptr noundef nonnull align 8 dereferenceable(3) @96, i64 3, i1 false)
  %74 = tail call ptr @malloc(i32 24)
  store ptr %73, ptr %74, align 8
  %memberidx1.i.i106 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i106, align 4
  %memberidx2.i.i107 = getelementptr inbounds %String, ptr %74, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i107, align 4
  br label %common.ret

if.entry49:                                       ; preds = %ifend3
  %75 = tail call ptr @malloc(i32 4)
  store i32 1684631414, ptr %75, align 8
  %76 = tail call ptr @malloc(i32 24)
  store ptr %75, ptr %76, align 8
  %memberidx1.i.i108 = getelementptr inbounds %String, ptr %76, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i108, align 4
  %memberidx2.i.i109 = getelementptr inbounds %String, ptr %76, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i109, align 4
  br label %common.ret

if.entry53:                                       ; preds = %ifend3
  %77 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %77, ptr noundef nonnull align 8 dereferenceable(6) @97, i64 6, i1 false)
  %78 = tail call ptr @malloc(i32 24)
  store ptr %77, ptr %78, align 8
  %memberidx1.i.i102 = getelementptr inbounds %String, ptr %78, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i102, align 4
  %memberidx2.i.i103 = getelementptr inbounds %String, ptr %78, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i103, align 4
  br label %common.ret

ifend55:                                          ; preds = %ifend3
  %79 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %79, ptr noundef nonnull align 8 dereferenceable(7) @98, i64 7, i1 false)
  %80 = tail call ptr @malloc(i32 24)
  store ptr %79, ptr %80, align 8
  %memberidx1.i.i75 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i75, align 4
  %memberidx2.i.i76 = getelementptr inbounds %String, ptr %80, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i76, align 4
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind readonly
define internal fastcc i64 @evaluate_const_int_expression(ptr %0, ptr nocapture readonly %1) unnamed_addr #8 {
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry12, %2
  %accumulator.tr.ph = phi i64 [ %11, %if.entry12 ], [ 0, %2 ]
  %.tr157.ph = phi ptr [ %10, %if.entry12 ], [ %1, %2 ]
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer, %if.entry86
  %.tr157 = phi ptr [ %74, %if.entry86 ], [ %.tr157.ph, %tailrecurse.outer ]
  %memberidx = getelementptr inbounds %Expression, ptr %.tr157, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry3
    i64 9, label %if.entry8
    i64 10, label %if.entry72
    i64 8, label %if.entry86
  ]

common.ret169:                                    ; preds = %if.entry81, %if.entry76, %if.entry66, %if.entry60, %if.entry54, %if.entry48, %if.entry42, %if.entry36, %if.entry30, %if.entry24, %if.entry18, %common.ret
  %common.ret169.op = phi i64 [ %accumulator.ret.tr, %common.ret ], [ %accumulator.ret.tr158, %if.entry18 ], [ %accumulator.ret.tr159, %if.entry24 ], [ %accumulator.ret.tr160, %if.entry30 ], [ %accumulator.ret.tr161, %if.entry36 ], [ %accumulator.ret.tr162, %if.entry42 ], [ %accumulator.ret.tr163, %if.entry48 ], [ %accumulator.ret.tr164, %if.entry54 ], [ %accumulator.ret.tr165, %if.entry60 ], [ %accumulator.ret.tr166, %if.entry66 ], [ %accumulator.ret.tr167, %if.entry76 ], [ %accumulator.ret.tr168, %if.entry81 ]
  ret i64 %common.ret169.op

common.ret:                                       ; preds = %if.entry8, %tailrecurse, %if.entry72, %if.entry3, %if.entry
  %common.ret.op = phi i64 [ %4, %if.entry ], [ %6, %if.entry3 ], [ -99999999, %if.entry72 ], [ -99999999, %tailrecurse ], [ -99999999, %if.entry8 ]
  %accumulator.ret.tr = add nsw i64 %common.ret.op, %accumulator.tr.ph
  br label %common.ret169

if.entry:                                         ; preds = %tailrecurse
  %memberidx1 = getelementptr inbounds %IntExpression, ptr %.tr157, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  br label %common.ret

if.entry3:                                        ; preds = %tailrecurse
  %memberidx6 = getelementptr inbounds %FloatExpression, ptr %.tr157, i64 0, i32 4
  %5 = load double, ptr %memberidx6, align 8
  %6 = fptosi double %5 to i64
  br label %common.ret

if.entry8:                                        ; preds = %tailrecurse
  %memberidx11 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 5
  %7 = load i64, ptr %memberidx11, align 4
  switch i64 %7, label %common.ret [
    i64 1, label %if.entry12
    i64 2, label %if.entry18
    i64 3, label %if.entry24
    i64 4, label %if.entry30
    i64 5, label %if.entry36
    i64 13, label %if.entry42
    i64 14, label %if.entry48
    i64 15, label %if.entry54
    i64 16, label %if.entry60
    i64 17, label %if.entry66
  ]

if.entry12:                                       ; preds = %if.entry8
  %memberidx15 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %8 = load ptr, ptr %memberidx15, align 8
  %9 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %8)
  %memberidx16 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %10 = load ptr, ptr %memberidx16, align 8
  %11 = add nsw i64 %9, %accumulator.tr.ph
  br label %tailrecurse.outer

if.entry18:                                       ; preds = %if.entry8
  %memberidx21 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %12 = load ptr, ptr %memberidx21, align 8
  %13 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %12)
  %memberidx22 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %14 = load ptr, ptr %memberidx22, align 8
  %15 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %14)
  %16 = add i64 %13, %accumulator.tr.ph
  %accumulator.ret.tr158 = sub i64 %16, %15
  br label %common.ret169

if.entry24:                                       ; preds = %if.entry8
  %memberidx27 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %17 = load ptr, ptr %memberidx27, align 8
  %18 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %17)
  %memberidx28 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %19 = load ptr, ptr %memberidx28, align 8
  %20 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %19)
  %21 = mul nsw i64 %20, %18
  %accumulator.ret.tr159 = add nsw i64 %21, %accumulator.tr.ph
  br label %common.ret169

if.entry30:                                       ; preds = %if.entry8
  %memberidx33 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %22 = load ptr, ptr %memberidx33, align 8
  %23 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %22)
  %memberidx34 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %24 = load ptr, ptr %memberidx34, align 8
  %25 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %24)
  %26 = sdiv i64 %23, %25
  %accumulator.ret.tr160 = add nsw i64 %26, %accumulator.tr.ph
  br label %common.ret169

if.entry36:                                       ; preds = %if.entry8
  %memberidx39 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %27 = load ptr, ptr %memberidx39, align 8
  %28 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %27)
  %memberidx40 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %29 = load ptr, ptr %memberidx40, align 8
  %30 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %29)
  %31 = srem i64 %28, %30
  %accumulator.ret.tr161 = add nsw i64 %31, %accumulator.tr.ph
  br label %common.ret169

if.entry42:                                       ; preds = %if.entry8
  %memberidx45 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %32 = load ptr, ptr %memberidx45, align 8
  %33 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %32)
  %memberidx46 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %34 = load ptr, ptr %memberidx46, align 8
  %35 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %34)
  %36 = shl i64 %33, %35
  %accumulator.ret.tr162 = add nsw i64 %36, %accumulator.tr.ph
  br label %common.ret169

if.entry48:                                       ; preds = %if.entry8
  %memberidx51 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %37 = load ptr, ptr %memberidx51, align 8
  %38 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %37)
  %memberidx52 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %39 = load ptr, ptr %memberidx52, align 8
  %40 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %39)
  %41 = lshr i64 %38, %40
  %accumulator.ret.tr163 = add nsw i64 %41, %accumulator.tr.ph
  br label %common.ret169

if.entry54:                                       ; preds = %if.entry8
  %memberidx57 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %42 = load ptr, ptr %memberidx57, align 8
  %43 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %42)
  %memberidx58 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %44 = load ptr, ptr %memberidx58, align 8
  %45 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %44)
  %46 = or i64 %45, %43
  %accumulator.ret.tr164 = add nsw i64 %46, %accumulator.tr.ph
  br label %common.ret169

if.entry60:                                       ; preds = %if.entry8
  %memberidx63 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %47 = load ptr, ptr %memberidx63, align 8
  %48 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %47)
  %memberidx64 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %49 = load ptr, ptr %memberidx64, align 8
  %50 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %49)
  %51 = and i64 %50, %48
  %accumulator.ret.tr165 = add nsw i64 %51, %accumulator.tr.ph
  br label %common.ret169

if.entry66:                                       ; preds = %if.entry8
  %memberidx69 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %52 = load ptr, ptr %memberidx69, align 8
  %53 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %52)
  %memberidx70 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %54 = load ptr, ptr %memberidx70, align 8
  %55 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %54)
  %56 = xor i64 %55, %53
  %accumulator.ret.tr166 = add nsw i64 %56, %accumulator.tr.ph
  br label %common.ret169

if.entry72:                                       ; preds = %tailrecurse
  %memberidx75 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 4
  %57 = load i64, ptr %memberidx75, align 4
  switch i64 %57, label %common.ret [
    i64 6, label %if.entry76
    i64 7, label %if.entry81
  ]

if.entry76:                                       ; preds = %if.entry72
  %memberidx79 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 5
  %58 = load ptr, ptr %memberidx79, align 8
  %59 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %58)
  %accumulator.ret.tr167 = sub i64 %accumulator.tr.ph, %59
  br label %common.ret169

if.entry81:                                       ; preds = %if.entry72
  %memberidx84 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 5
  %60 = load ptr, ptr %memberidx84, align 8
  %61 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %60)
  %62 = xor i64 %61, -1
  %accumulator.ret.tr168 = add nsw i64 %accumulator.tr.ph, %62
  br label %common.ret169

if.entry86:                                       ; preds = %tailrecurse
  %memberidx89 = getelementptr inbounds %VarAccessExpression, ptr %.tr157, i64 0, i32 4
  %63 = load ptr, ptr %memberidx89, align 8
  %64 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx1.i, align 4
  %66 = load ptr, ptr %64, align 8
  %67 = getelementptr inbounds ptr, ptr %66, i64 %65
  %68 = load ptr, ptr %67, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %68, i64 0, i32 2
  %69 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 2
  %70 = load i64, ptr %memberidx3.i, align 4
  %71 = load ptr, ptr %69, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 %70
  %73 = load ptr, ptr %72, align 8
  %memberidx90 = getelementptr inbounds %Const, ptr %73, i64 0, i32 2
  %74 = load ptr, ptr %memberidx90, align 8
  br label %tailrecurse
}

define internal fastcc i1 @is_operator_overload_name(ptr nocapture readonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %2, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %3, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %3, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %4, 6
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %1
  %5 = load ptr, ptr %0, align 8
  %6 = tail call i64 @memcmp(ptr %5, ptr nonnull %2, i64 6)
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend.i359, %ifend87, %ifend.i351, %ifend.i343, %ifend.i335, %ifend.i327, %ifend.i319, %ifend.i311, %ifend.i303, %ifend.i295, %ifend.i287, %ifend.i279, %ifend.i271, %ifend.i263, %ifend.i255, %ifend.i247, %ifend.i239, %ifend.i231, %ifend.i223, %ifend.i215, %ifend.i207, %ifend.i199, %ifend.i191, %ifend.i183, %ifend.i175, %ifend.i167, %ifend.i159, %ifend.i151, %ifend.i143, %ifend.i135, %ifend.i127, %ifend.i
  %common.ret.op = phi i1 [ true, %ifend.i ], [ true, %ifend.i127 ], [ true, %ifend.i135 ], [ true, %ifend.i143 ], [ true, %ifend.i151 ], [ true, %ifend.i159 ], [ true, %ifend.i167 ], [ true, %ifend.i175 ], [ true, %ifend.i183 ], [ true, %ifend.i191 ], [ true, %ifend.i199 ], [ true, %ifend.i207 ], [ true, %ifend.i215 ], [ true, %ifend.i223 ], [ true, %ifend.i231 ], [ true, %ifend.i239 ], [ true, %ifend.i247 ], [ true, %ifend.i255 ], [ true, %ifend.i263 ], [ true, %ifend.i271 ], [ true, %ifend.i279 ], [ true, %ifend.i287 ], [ true, %ifend.i295 ], [ true, %ifend.i303 ], [ true, %ifend.i311 ], [ true, %ifend.i319 ], [ true, %ifend.i327 ], [ true, %ifend.i335 ], [ true, %ifend.i343 ], [ true, %ifend.i351 ], [ %187, %ifend.i359 ], [ false, %ifend87 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %1, %ifend.i
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @115, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  %memberidx1.i.i121 = getelementptr inbounds %String, ptr %9, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i121, align 4
  %memberidx2.i.i122 = getelementptr inbounds %String, ptr %9, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i122, align 4
  %10 = load i64, ptr %memberidx.i, align 4
  %.not.i125 = icmp eq i64 %10, 7
  br i1 %.not.i125, label %ifend.i127, label %ifend3

ifend.i127:                                       ; preds = %ifend
  %11 = load ptr, ptr %0, align 8
  %12 = tail call i64 @memcmp(ptr %11, ptr nonnull %8, i64 7)
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %common.ret, label %ifend3

ifend3:                                           ; preds = %ifend, %ifend.i127
  %14 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %14, ptr noundef nonnull align 8 dereferenceable(7) @116, i64 7, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i129 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i129, align 4
  %memberidx2.i.i130 = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i130, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i133 = icmp eq i64 %16, 7
  br i1 %.not.i133, label %ifend.i135, label %ifend6

ifend.i135:                                       ; preds = %ifend3
  %17 = load ptr, ptr %0, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 7)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %common.ret, label %ifend6

ifend6:                                           ; preds = %ifend3, %ifend.i135
  %20 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %20, ptr noundef nonnull align 8 dereferenceable(7) @117, i64 7, i1 false)
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  %memberidx1.i.i137 = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i137, align 4
  %memberidx2.i.i138 = getelementptr inbounds %String, ptr %21, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i138, align 4
  %22 = load i64, ptr %memberidx.i, align 4
  %.not.i141 = icmp eq i64 %22, 7
  br i1 %.not.i141, label %ifend.i143, label %ifend9

ifend.i143:                                       ; preds = %ifend6
  %23 = load ptr, ptr %0, align 8
  %24 = tail call i64 @memcmp(ptr %23, ptr nonnull %20, i64 7)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend6, %ifend.i143
  %26 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %26, ptr noundef nonnull align 8 dereferenceable(7) @118, i64 7, i1 false)
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i145 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i145, align 4
  %memberidx2.i.i146 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i146, align 4
  %28 = load i64, ptr %memberidx.i, align 4
  %.not.i149 = icmp eq i64 %28, 7
  br i1 %.not.i149, label %ifend.i151, label %ifend12

ifend.i151:                                       ; preds = %ifend9
  %29 = load ptr, ptr %0, align 8
  %30 = tail call i64 @memcmp(ptr %29, ptr nonnull %26, i64 7)
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %common.ret, label %ifend12

ifend12:                                          ; preds = %ifend9, %ifend.i151
  %32 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %32, ptr noundef nonnull align 8 dereferenceable(6) @119, i64 6, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  %memberidx1.i.i153 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i153, align 4
  %memberidx2.i.i154 = getelementptr inbounds %String, ptr %33, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i154, align 4
  %34 = load i64, ptr %memberidx.i, align 4
  %.not.i157 = icmp eq i64 %34, 6
  br i1 %.not.i157, label %ifend.i159, label %ifend15

ifend.i159:                                       ; preds = %ifend12
  %35 = load ptr, ptr %0, align 8
  %36 = tail call i64 @memcmp(ptr %35, ptr nonnull %32, i64 6)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %common.ret, label %ifend15

ifend15:                                          ; preds = %ifend12, %ifend.i159
  %38 = tail call ptr @malloc(i32 8)
  store i64 6872318640199393119, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i.i161 = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i161, align 4
  %memberidx2.i.i162 = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i162, align 4
  %40 = load i64, ptr %memberidx.i, align 4
  %.not.i165 = icmp eq i64 %40, 8
  br i1 %.not.i165, label %ifend.i167, label %ifend18

ifend.i167:                                       ; preds = %ifend15
  %41 = load ptr, ptr %0, align 8
  %42 = tail call i64 @memcmp(ptr %41, ptr nonnull %38, i64 8)
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %common.ret, label %ifend18

ifend18:                                          ; preds = %ifend15, %ifend.i167
  %44 = tail call ptr @malloc(i32 8)
  store i64 6872318631895850847, ptr %44, align 8
  %45 = tail call ptr @malloc(i32 24)
  store ptr %44, ptr %45, align 8
  %memberidx1.i.i169 = getelementptr inbounds %String, ptr %45, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i169, align 4
  %memberidx2.i.i170 = getelementptr inbounds %String, ptr %45, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i170, align 4
  %46 = load i64, ptr %memberidx.i, align 4
  %.not.i173 = icmp eq i64 %46, 8
  br i1 %.not.i173, label %ifend.i175, label %ifend21

ifend.i175:                                       ; preds = %ifend18
  %47 = load ptr, ptr %0, align 8
  %48 = tail call i64 @memcmp(ptr %47, ptr nonnull %44, i64 8)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %common.ret, label %ifend21

ifend21:                                          ; preds = %ifend18, %ifend.i175
  %50 = tail call ptr @malloc(i32 8)
  store i64 6872318674845130591, ptr %50, align 8
  %51 = tail call ptr @malloc(i32 24)
  store ptr %50, ptr %51, align 8
  %memberidx1.i.i177 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i177, align 4
  %memberidx2.i.i178 = getelementptr inbounds %String, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i178, align 4
  %52 = load i64, ptr %memberidx.i, align 4
  %.not.i181 = icmp eq i64 %52, 8
  br i1 %.not.i181, label %ifend.i183, label %ifend24

ifend.i183:                                       ; preds = %ifend21
  %53 = load ptr, ptr %0, align 8
  %54 = tail call i64 @memcmp(ptr %53, ptr nonnull %50, i64 8)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend21, %ifend.i183
  %56 = tail call ptr @malloc(i32 8)
  store i64 6872318717592887135, ptr %56, align 8
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  %memberidx1.i.i185 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i185, align 4
  %memberidx2.i.i186 = getelementptr inbounds %String, ptr %57, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i186, align 4
  %58 = load i64, ptr %memberidx.i, align 4
  %.not.i189 = icmp eq i64 %58, 8
  br i1 %.not.i189, label %ifend.i191, label %ifend27

ifend.i191:                                       ; preds = %ifend24
  %59 = load ptr, ptr %0, align 8
  %60 = tail call i64 @memcmp(ptr %59, ptr nonnull %56, i64 8)
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend24, %ifend.i191
  %62 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %62, ptr noundef nonnull align 8 dereferenceable(7) @120, i64 7, i1 false)
  %63 = tail call ptr @malloc(i32 24)
  store ptr %62, ptr %63, align 8
  %memberidx1.i.i193 = getelementptr inbounds %String, ptr %63, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i193, align 4
  %memberidx2.i.i194 = getelementptr inbounds %String, ptr %63, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i194, align 4
  %64 = load i64, ptr %memberidx.i, align 4
  %.not.i197 = icmp eq i64 %64, 7
  br i1 %.not.i197, label %ifend.i199, label %ifend30

ifend.i199:                                       ; preds = %ifend27
  %65 = load ptr, ptr %0, align 8
  %66 = tail call i64 @memcmp(ptr %65, ptr nonnull %62, i64 7)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %common.ret, label %ifend30

ifend30:                                          ; preds = %ifend27, %ifend.i199
  %68 = tail call ptr @malloc(i32 8)
  store i64 6872318640367165279, ptr %68, align 8
  %69 = tail call ptr @malloc(i32 24)
  store ptr %68, ptr %69, align 8
  %memberidx1.i.i201 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i201, align 4
  %memberidx2.i.i202 = getelementptr inbounds %String, ptr %69, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i202, align 4
  %70 = load i64, ptr %memberidx.i, align 4
  %.not.i205 = icmp eq i64 %70, 8
  br i1 %.not.i205, label %ifend.i207, label %ifend33

ifend.i207:                                       ; preds = %ifend30
  %71 = load ptr, ptr %0, align 8
  %72 = tail call i64 @memcmp(ptr %71, ptr nonnull %68, i64 8)
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %common.ret, label %ifend33

ifend33:                                          ; preds = %ifend30, %ifend.i207
  %74 = tail call ptr @malloc(i32 8)
  store i64 6872318700514991967, ptr %74, align 8
  %75 = tail call ptr @malloc(i32 24)
  store ptr %74, ptr %75, align 8
  %memberidx1.i.i209 = getelementptr inbounds %String, ptr %75, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i209, align 4
  %memberidx2.i.i210 = getelementptr inbounds %String, ptr %75, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i210, align 4
  %76 = load i64, ptr %memberidx.i, align 4
  %.not.i213 = icmp eq i64 %76, 8
  br i1 %.not.i213, label %ifend.i215, label %ifend36

ifend.i215:                                       ; preds = %ifend33
  %77 = load ptr, ptr %0, align 8
  %78 = tail call i64 @memcmp(ptr %77, ptr nonnull %74, i64 8)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %common.ret, label %ifend36

ifend36:                                          ; preds = %ifend33, %ifend.i215
  %80 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %80, ptr noundef nonnull align 8 dereferenceable(11) @121, i64 11, i1 false)
  %81 = tail call ptr @malloc(i32 24)
  store ptr %80, ptr %81, align 8
  %memberidx1.i.i217 = getelementptr inbounds %String, ptr %81, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i217, align 4
  %memberidx2.i.i218 = getelementptr inbounds %String, ptr %81, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i218, align 4
  %82 = load i64, ptr %memberidx.i, align 4
  %.not.i221 = icmp eq i64 %82, 11
  br i1 %.not.i221, label %ifend.i223, label %ifend39

ifend.i223:                                       ; preds = %ifend36
  %83 = load ptr, ptr %0, align 8
  %84 = tail call i64 @memcmp(ptr %83, ptr nonnull %80, i64 11)
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %common.ret, label %ifend39

ifend39:                                          ; preds = %ifend36, %ifend.i223
  %86 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %86, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %87 = tail call ptr @malloc(i32 24)
  store ptr %86, ptr %87, align 8
  %memberidx1.i.i225 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i225, align 4
  %memberidx2.i.i226 = getelementptr inbounds %String, ptr %87, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i226, align 4
  %88 = load i64, ptr %memberidx.i, align 4
  %.not.i229 = icmp eq i64 %88, 11
  br i1 %.not.i229, label %ifend.i231, label %ifend42

ifend.i231:                                       ; preds = %ifend39
  %89 = load ptr, ptr %0, align 8
  %90 = tail call i64 @memcmp(ptr %89, ptr nonnull %86, i64 11)
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %common.ret, label %ifend42

ifend42:                                          ; preds = %ifend39, %ifend.i231
  %92 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %92, ptr noundef nonnull align 8 dereferenceable(6) @123, i64 6, i1 false)
  %93 = tail call ptr @malloc(i32 24)
  store ptr %92, ptr %93, align 8
  %memberidx1.i.i233 = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i233, align 4
  %memberidx2.i.i234 = getelementptr inbounds %String, ptr %93, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i234, align 4
  %94 = load i64, ptr %memberidx.i, align 4
  %.not.i237 = icmp eq i64 %94, 6
  br i1 %.not.i237, label %ifend.i239, label %ifend45

ifend.i239:                                       ; preds = %ifend42
  %95 = load ptr, ptr %0, align 8
  %96 = tail call i64 @memcmp(ptr %95, ptr nonnull %92, i64 6)
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %common.ret, label %ifend45

ifend45:                                          ; preds = %ifend42, %ifend.i239
  %98 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %98, ptr noundef nonnull align 8 dereferenceable(6) @124, i64 6, i1 false)
  %99 = tail call ptr @malloc(i32 24)
  store ptr %98, ptr %99, align 8
  %memberidx1.i.i241 = getelementptr inbounds %String, ptr %99, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i241, align 4
  %memberidx2.i.i242 = getelementptr inbounds %String, ptr %99, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i242, align 4
  %100 = load i64, ptr %memberidx.i, align 4
  %.not.i245 = icmp eq i64 %100, 6
  br i1 %.not.i245, label %ifend.i247, label %ifend48

ifend.i247:                                       ; preds = %ifend45
  %101 = load ptr, ptr %0, align 8
  %102 = tail call i64 @memcmp(ptr %101, ptr nonnull %98, i64 6)
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %common.ret, label %ifend48

ifend48:                                          ; preds = %ifend45, %ifend.i247
  %104 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %104, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  %105 = tail call ptr @malloc(i32 24)
  store ptr %104, ptr %105, align 8
  %memberidx1.i.i249 = getelementptr inbounds %String, ptr %105, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i249, align 4
  %memberidx2.i.i250 = getelementptr inbounds %String, ptr %105, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i250, align 4
  %106 = load i64, ptr %memberidx.i, align 4
  %.not.i253 = icmp eq i64 %106, 7
  br i1 %.not.i253, label %ifend.i255, label %ifend51

ifend.i255:                                       ; preds = %ifend48
  %107 = load ptr, ptr %0, align 8
  %108 = tail call i64 @memcmp(ptr %107, ptr nonnull %104, i64 7)
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %common.ret, label %ifend51

ifend51:                                          ; preds = %ifend48, %ifend.i255
  %110 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %110, ptr noundef nonnull align 8 dereferenceable(7) @126, i64 7, i1 false)
  %111 = tail call ptr @malloc(i32 24)
  store ptr %110, ptr %111, align 8
  %memberidx1.i.i257 = getelementptr inbounds %String, ptr %111, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i257, align 4
  %memberidx2.i.i258 = getelementptr inbounds %String, ptr %111, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i258, align 4
  %112 = load i64, ptr %memberidx.i, align 4
  %.not.i261 = icmp eq i64 %112, 7
  br i1 %.not.i261, label %ifend.i263, label %ifend54

ifend.i263:                                       ; preds = %ifend51
  %113 = load ptr, ptr %0, align 8
  %114 = tail call i64 @memcmp(ptr %113, ptr nonnull %110, i64 7)
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %common.ret, label %ifend54

ifend54:                                          ; preds = %ifend51, %ifend.i263
  %116 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %116, ptr noundef nonnull align 8 dereferenceable(6) @127, i64 6, i1 false)
  %117 = tail call ptr @malloc(i32 24)
  store ptr %116, ptr %117, align 8
  %memberidx1.i.i265 = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i265, align 4
  %memberidx2.i.i266 = getelementptr inbounds %String, ptr %117, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i266, align 4
  %118 = load i64, ptr %memberidx.i, align 4
  %.not.i269 = icmp eq i64 %118, 6
  br i1 %.not.i269, label %ifend.i271, label %ifend57

ifend.i271:                                       ; preds = %ifend54
  %119 = load ptr, ptr %0, align 8
  %120 = tail call i64 @memcmp(ptr %119, ptr nonnull %116, i64 6)
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %common.ret, label %ifend57

ifend57:                                          ; preds = %ifend54, %ifend.i271
  %122 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %122, ptr noundef nonnull align 8 dereferenceable(6) @128, i64 6, i1 false)
  %123 = tail call ptr @malloc(i32 24)
  store ptr %122, ptr %123, align 8
  %memberidx1.i.i273 = getelementptr inbounds %String, ptr %123, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i273, align 4
  %memberidx2.i.i274 = getelementptr inbounds %String, ptr %123, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i274, align 4
  %124 = load i64, ptr %memberidx.i, align 4
  %.not.i277 = icmp eq i64 %124, 6
  br i1 %.not.i277, label %ifend.i279, label %ifend60

ifend.i279:                                       ; preds = %ifend57
  %125 = load ptr, ptr %0, align 8
  %126 = tail call i64 @memcmp(ptr %125, ptr nonnull %122, i64 6)
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %common.ret, label %ifend60

ifend60:                                          ; preds = %ifend57, %ifend.i279
  %128 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %128, ptr noundef nonnull align 8 dereferenceable(6) @129, i64 6, i1 false)
  %129 = tail call ptr @malloc(i32 24)
  store ptr %128, ptr %129, align 8
  %memberidx1.i.i281 = getelementptr inbounds %String, ptr %129, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i281, align 4
  %memberidx2.i.i282 = getelementptr inbounds %String, ptr %129, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i282, align 4
  %130 = load i64, ptr %memberidx.i, align 4
  %.not.i285 = icmp eq i64 %130, 6
  br i1 %.not.i285, label %ifend.i287, label %ifend63

ifend.i287:                                       ; preds = %ifend60
  %131 = load ptr, ptr %0, align 8
  %132 = tail call i64 @memcmp(ptr %131, ptr nonnull %128, i64 6)
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %common.ret, label %ifend63

ifend63:                                          ; preds = %ifend60, %ifend.i287
  %134 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %134, ptr noundef nonnull align 8 dereferenceable(6) @130, i64 6, i1 false)
  %135 = tail call ptr @malloc(i32 24)
  store ptr %134, ptr %135, align 8
  %memberidx1.i.i289 = getelementptr inbounds %String, ptr %135, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i289, align 4
  %memberidx2.i.i290 = getelementptr inbounds %String, ptr %135, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i290, align 4
  %136 = load i64, ptr %memberidx.i, align 4
  %.not.i293 = icmp eq i64 %136, 6
  br i1 %.not.i293, label %ifend.i295, label %ifend66

ifend.i295:                                       ; preds = %ifend63
  %137 = load ptr, ptr %0, align 8
  %138 = tail call i64 @memcmp(ptr %137, ptr nonnull %134, i64 6)
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %common.ret, label %ifend66

ifend66:                                          ; preds = %ifend63, %ifend.i295
  %140 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %140, ptr noundef nonnull align 8 dereferenceable(6) @131, i64 6, i1 false)
  %141 = tail call ptr @malloc(i32 24)
  store ptr %140, ptr %141, align 8
  %memberidx1.i.i297 = getelementptr inbounds %String, ptr %141, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i297, align 4
  %memberidx2.i.i298 = getelementptr inbounds %String, ptr %141, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i298, align 4
  %142 = load i64, ptr %memberidx.i, align 4
  %.not.i301 = icmp eq i64 %142, 6
  br i1 %.not.i301, label %ifend.i303, label %ifend69

ifend.i303:                                       ; preds = %ifend66
  %143 = load ptr, ptr %0, align 8
  %144 = tail call i64 @memcmp(ptr %143, ptr nonnull %140, i64 6)
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %common.ret, label %ifend69

ifend69:                                          ; preds = %ifend66, %ifend.i303
  %146 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %146, ptr noundef nonnull align 8 dereferenceable(6) @132, i64 6, i1 false)
  %147 = tail call ptr @malloc(i32 24)
  store ptr %146, ptr %147, align 8
  %memberidx1.i.i305 = getelementptr inbounds %String, ptr %147, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i305, align 4
  %memberidx2.i.i306 = getelementptr inbounds %String, ptr %147, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i306, align 4
  %148 = load i64, ptr %memberidx.i, align 4
  %.not.i309 = icmp eq i64 %148, 6
  br i1 %.not.i309, label %ifend.i311, label %ifend72

ifend.i311:                                       ; preds = %ifend69
  %149 = load ptr, ptr %0, align 8
  %150 = tail call i64 @memcmp(ptr %149, ptr nonnull %146, i64 6)
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %common.ret, label %ifend72

ifend72:                                          ; preds = %ifend69, %ifend.i311
  %152 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %152, ptr noundef nonnull align 8 dereferenceable(7) @133, i64 7, i1 false)
  %153 = tail call ptr @malloc(i32 24)
  store ptr %152, ptr %153, align 8
  %memberidx1.i.i313 = getelementptr inbounds %String, ptr %153, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i313, align 4
  %memberidx2.i.i314 = getelementptr inbounds %String, ptr %153, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i314, align 4
  %154 = load i64, ptr %memberidx.i, align 4
  %.not.i317 = icmp eq i64 %154, 7
  br i1 %.not.i317, label %ifend.i319, label %ifend75

ifend.i319:                                       ; preds = %ifend72
  %155 = load ptr, ptr %0, align 8
  %156 = tail call i64 @memcmp(ptr %155, ptr nonnull %152, i64 7)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %common.ret, label %ifend75

ifend75:                                          ; preds = %ifend72, %ifend.i319
  %158 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %158, ptr noundef nonnull align 8 dereferenceable(7) @134, i64 7, i1 false)
  %159 = tail call ptr @malloc(i32 24)
  store ptr %158, ptr %159, align 8
  %memberidx1.i.i321 = getelementptr inbounds %String, ptr %159, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i321, align 4
  %memberidx2.i.i322 = getelementptr inbounds %String, ptr %159, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i322, align 4
  %160 = load i64, ptr %memberidx.i, align 4
  %.not.i325 = icmp eq i64 %160, 7
  br i1 %.not.i325, label %ifend.i327, label %ifend78

ifend.i327:                                       ; preds = %ifend75
  %161 = load ptr, ptr %0, align 8
  %162 = tail call i64 @memcmp(ptr %161, ptr nonnull %158, i64 7)
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %common.ret, label %ifend78

ifend78:                                          ; preds = %ifend75, %ifend.i327
  %164 = tail call ptr @malloc(i32 8)
  store i64 6872318721989304159, ptr %164, align 8
  %165 = tail call ptr @malloc(i32 24)
  store ptr %164, ptr %165, align 8
  %memberidx1.i.i329 = getelementptr inbounds %String, ptr %165, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i329, align 4
  %memberidx2.i.i330 = getelementptr inbounds %String, ptr %165, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i330, align 4
  %166 = load i64, ptr %memberidx.i, align 4
  %.not.i333 = icmp eq i64 %166, 8
  br i1 %.not.i333, label %ifend.i335, label %ifend81

ifend.i335:                                       ; preds = %ifend78
  %167 = load ptr, ptr %0, align 8
  %168 = tail call i64 @memcmp(ptr %167, ptr nonnull %164, i64 8)
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %common.ret, label %ifend81

ifend81:                                          ; preds = %ifend78, %ifend.i335
  %170 = tail call ptr @malloc(i32 8)
  store i64 6872318640384728927, ptr %170, align 8
  %171 = tail call ptr @malloc(i32 24)
  store ptr %170, ptr %171, align 8
  %memberidx1.i.i337 = getelementptr inbounds %String, ptr %171, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i337, align 4
  %memberidx2.i.i338 = getelementptr inbounds %String, ptr %171, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i338, align 4
  %172 = load i64, ptr %memberidx.i, align 4
  %.not.i341 = icmp eq i64 %172, 8
  br i1 %.not.i341, label %ifend.i343, label %ifend84

ifend.i343:                                       ; preds = %ifend81
  %173 = load ptr, ptr %0, align 8
  %174 = tail call i64 @memcmp(ptr %173, ptr nonnull %170, i64 8)
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %common.ret, label %ifend84

ifend84:                                          ; preds = %ifend81, %ifend.i343
  %176 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %176, align 8
  %177 = tail call ptr @malloc(i32 24)
  store ptr %176, ptr %177, align 8
  %memberidx1.i.i345 = getelementptr inbounds %String, ptr %177, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i345, align 4
  %memberidx2.i.i346 = getelementptr inbounds %String, ptr %177, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i346, align 4
  %178 = load i64, ptr %memberidx.i, align 4
  %.not.i349 = icmp eq i64 %178, 8
  br i1 %.not.i349, label %ifend.i351, label %ifend87

ifend.i351:                                       ; preds = %ifend84
  %179 = load ptr, ptr %0, align 8
  %180 = tail call i64 @memcmp(ptr %179, ptr nonnull %176, i64 8)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %common.ret, label %ifend87

ifend87:                                          ; preds = %ifend84, %ifend.i351
  %182 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %182, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %183 = tail call ptr @malloc(i32 24)
  store ptr %182, ptr %183, align 8
  %memberidx1.i.i353 = getelementptr inbounds %String, ptr %183, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i353, align 4
  %memberidx2.i.i354 = getelementptr inbounds %String, ptr %183, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i354, align 4
  %184 = load i64, ptr %memberidx.i, align 4
  %.not.i357 = icmp eq i64 %184, 7
  br i1 %.not.i357, label %ifend.i359, label %common.ret

ifend.i359:                                       ; preds = %ifend87
  %185 = load ptr, ptr %0, align 8
  %186 = tail call i64 @memcmp(ptr %185, ptr nonnull %182, i64 7)
  %187 = icmp eq i64 %186, 0
  br label %common.ret
}

define internal fastcc noalias ptr @bin_op_to_op_overload_name(i64 %0) unnamed_addr {
  switch i64 %0, label %common.ret [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 20, label %if.entry16
    i64 21, label %if.entry19
    i64 22, label %if.entry22
    i64 23, label %if.entry25
    i64 24, label %if.entry28
    i64 25, label %if.entry31
    i64 7, label %if.entry34
    i64 8, label %if.entry37
    i64 9, label %if.entry40
    i64 10, label %if.entry43
    i64 11, label %if.entry46
    i64 12, label %if.entry49
    i64 13, label %if.entry52
    i64 14, label %if.entry55
    i64 29, label %if.entry58
    i64 30, label %if.entry61
    i64 15, label %if.entry64
    i64 16, label %if.entry67
    i64 17, label %if.entry70
    i64 26, label %if.entry73
    i64 28, label %if.entry76
    i64 18, label %if.entry79
  ]

common.ret.sink.split:                            ; preds = %if.entry, %if.entry1, %if.entry4, %if.entry7, %if.entry10, %if.entry13, %if.entry16, %if.entry19, %if.entry22, %if.entry25, %if.entry28, %if.entry31, %if.entry34, %if.entry37, %if.entry40, %if.entry43, %if.entry46, %if.entry49, %if.entry52, %if.entry55, %if.entry58, %if.entry61, %if.entry64, %if.entry67, %if.entry70, %if.entry73, %if.entry76, %if.entry79
  %.sink165 = phi ptr [ %57, %if.entry79 ], [ %55, %if.entry76 ], [ %53, %if.entry73 ], [ %51, %if.entry70 ], [ %49, %if.entry67 ], [ %47, %if.entry64 ], [ %45, %if.entry61 ], [ %43, %if.entry58 ], [ %41, %if.entry55 ], [ %39, %if.entry52 ], [ %37, %if.entry49 ], [ %35, %if.entry46 ], [ %33, %if.entry43 ], [ %31, %if.entry40 ], [ %29, %if.entry37 ], [ %27, %if.entry34 ], [ %25, %if.entry31 ], [ %23, %if.entry28 ], [ %21, %if.entry25 ], [ %19, %if.entry22 ], [ %17, %if.entry19 ], [ %15, %if.entry16 ], [ %13, %if.entry13 ], [ %11, %if.entry10 ], [ %9, %if.entry7 ], [ %7, %if.entry4 ], [ %5, %if.entry1 ], [ %3, %if.entry ]
  %.sink164 = phi i64 [ 6, %if.entry79 ], [ 8, %if.entry76 ], [ 8, %if.entry73 ], [ 7, %if.entry70 ], [ 7, %if.entry67 ], [ 6, %if.entry64 ], [ 7, %if.entry61 ], [ 7, %if.entry58 ], [ 6, %if.entry55 ], [ 6, %if.entry52 ], [ 6, %if.entry49 ], [ 6, %if.entry46 ], [ 6, %if.entry43 ], [ 6, %if.entry40 ], [ 6, %if.entry37 ], [ 6, %if.entry34 ], [ 8, %if.entry31 ], [ 8, %if.entry28 ], [ 8, %if.entry25 ], [ 8, %if.entry22 ], [ 8, %if.entry19 ], [ 8, %if.entry16 ], [ 7, %if.entry13 ], [ 7, %if.entry10 ], [ 7, %if.entry7 ], [ 7, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %memberidx1.i.i161 = getelementptr inbounds %String, ptr %.sink165, i64 0, i32 1
  store i64 %.sink164, ptr %memberidx1.i.i161, align 4
  %memberidx2.i.i162 = getelementptr inbounds %String, ptr %.sink165, i64 0, i32 2
  store i64 %.sink164, ptr %memberidx2.i.i162, align 4
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %1
  %common.ret.op = phi ptr [ null, %1 ], [ %.sink165, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %2 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %2, ptr noundef nonnull align 8 dereferenceable(7) @115, i64 7, i1 false)
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  br label %common.ret.sink.split

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @116, i64 7, i1 false)
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  br label %common.ret.sink.split

if.entry4:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %6, ptr noundef nonnull align 8 dereferenceable(7) @117, i64 7, i1 false)
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret.sink.split

if.entry7:                                        ; preds = %1
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @118, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  br label %common.ret.sink.split

if.entry10:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %10, ptr noundef nonnull align 8 dereferenceable(7) @134, i64 7, i1 false)
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  br label %common.ret.sink.split

if.entry13:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %12, ptr noundef nonnull align 8 dereferenceable(7) @133, i64 7, i1 false)
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  br label %common.ret.sink.split

if.entry16:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 8)
  store i64 6872318640199393119, ptr %14, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  br label %common.ret.sink.split

if.entry19:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 8)
  store i64 6872318631895850847, ptr %16, align 8
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  br label %common.ret.sink.split

if.entry22:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 8)
  store i64 6872318674845130591, ptr %18, align 8
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  br label %common.ret.sink.split

if.entry25:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 8)
  store i64 6872318717592887135, ptr %20, align 8
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  br label %common.ret.sink.split

if.entry28:                                       ; preds = %1
  %22 = tail call ptr @malloc(i32 8)
  store i64 6872318640384728927, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  br label %common.ret.sink.split

if.entry31:                                       ; preds = %1
  %24 = tail call ptr @malloc(i32 8)
  store i64 6872318721989304159, ptr %24, align 8
  %25 = tail call ptr @malloc(i32 24)
  store ptr %24, ptr %25, align 8
  br label %common.ret.sink.split

if.entry34:                                       ; preds = %1
  %26 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %26, ptr noundef nonnull align 8 dereferenceable(6) @174, i64 6, i1 false)
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  br label %common.ret.sink.split

if.entry37:                                       ; preds = %1
  %28 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %28, ptr noundef nonnull align 8 dereferenceable(6) @132, i64 6, i1 false)
  %29 = tail call ptr @malloc(i32 24)
  store ptr %28, ptr %29, align 8
  br label %common.ret.sink.split

if.entry40:                                       ; preds = %1
  %30 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %30, ptr noundef nonnull align 8 dereferenceable(6) @128, i64 6, i1 false)
  %31 = tail call ptr @malloc(i32 24)
  store ptr %30, ptr %31, align 8
  br label %common.ret.sink.split

if.entry43:                                       ; preds = %1
  %32 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %32, ptr noundef nonnull align 8 dereferenceable(6) @131, i64 6, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  br label %common.ret.sink.split

if.entry46:                                       ; preds = %1
  %34 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %34, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  %35 = tail call ptr @malloc(i32 24)
  store ptr %34, ptr %35, align 8
  br label %common.ret.sink.split

if.entry49:                                       ; preds = %1
  %36 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %36, ptr noundef nonnull align 8 dereferenceable(6) @130, i64 6, i1 false)
  %37 = tail call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  br label %common.ret.sink.split

if.entry52:                                       ; preds = %1
  %38 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %38, ptr noundef nonnull align 8 dereferenceable(6) @123, i64 6, i1 false)
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  br label %common.ret.sink.split

if.entry55:                                       ; preds = %1
  %40 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %40, ptr noundef nonnull align 8 dereferenceable(6) @124, i64 6, i1 false)
  %41 = tail call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  br label %common.ret.sink.split

if.entry58:                                       ; preds = %1
  %42 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %42, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  %43 = tail call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  br label %common.ret.sink.split

if.entry61:                                       ; preds = %1
  %44 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %44, ptr noundef nonnull align 8 dereferenceable(7) @126, i64 7, i1 false)
  %45 = tail call ptr @malloc(i32 24)
  store ptr %44, ptr %45, align 8
  br label %common.ret.sink.split

if.entry64:                                       ; preds = %1
  %46 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %46, ptr noundef nonnull align 8 dereferenceable(6) @119, i64 6, i1 false)
  %47 = tail call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  br label %common.ret.sink.split

if.entry67:                                       ; preds = %1
  %48 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %48, ptr noundef nonnull align 8 dereferenceable(7) @175, i64 7, i1 false)
  %49 = tail call ptr @malloc(i32 24)
  store ptr %48, ptr %49, align 8
  br label %common.ret.sink.split

if.entry70:                                       ; preds = %1
  %50 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %50, ptr noundef nonnull align 8 dereferenceable(7) @176, i64 7, i1 false)
  %51 = tail call ptr @malloc(i32 24)
  store ptr %50, ptr %51, align 8
  br label %common.ret.sink.split

if.entry73:                                       ; preds = %1
  %52 = tail call ptr @malloc(i32 8)
  store i64 6872318640367165279, ptr %52, align 8
  %53 = tail call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  br label %common.ret.sink.split

if.entry76:                                       ; preds = %1
  %54 = tail call ptr @malloc(i32 8)
  store i64 6872318700514991967, ptr %54, align 8
  %55 = tail call ptr @malloc(i32 24)
  store ptr %54, ptr %55, align 8
  br label %common.ret.sink.split

if.entry79:                                       ; preds = %1
  %56 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %56, ptr noundef nonnull align 8 dereferenceable(6) @127, i64 6, i1 false)
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  br label %common.ret.sink.split
}

define internal fastcc noalias ptr @dump_bin_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend54 [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 7, label %if.entry16
    i64 8, label %if.entry19
    i64 9, label %if.entry22
    i64 10, label %if.entry25
    i64 11, label %if.entry28
    i64 12, label %if.entry31
    i64 13, label %if.entry34
    i64 14, label %if.entry37
    i64 15, label %if.entry40
    i64 16, label %if.entry43
    i64 17, label %if.entry46
    i64 18, label %if.entry49
    i64 19, label %if.entry52
  ]

common.ret:                                       ; preds = %ifend54, %if.entry52, %if.entry49, %if.entry46, %if.entry43, %if.entry40, %if.entry37, %if.entry34, %if.entry31, %if.entry28, %if.entry25, %if.entry22, %if.entry19, %if.entry16, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink113 = phi ptr [ %41, %ifend54 ], [ %39, %if.entry52 ], [ %37, %if.entry49 ], [ %35, %if.entry46 ], [ %33, %if.entry43 ], [ %31, %if.entry40 ], [ %29, %if.entry37 ], [ %27, %if.entry34 ], [ %25, %if.entry31 ], [ %23, %if.entry28 ], [ %21, %if.entry25 ], [ %19, %if.entry22 ], [ %17, %if.entry19 ], [ %15, %if.entry16 ], [ %13, %if.entry13 ], [ %11, %if.entry10 ], [ %9, %if.entry7 ], [ %7, %if.entry4 ], [ %5, %if.entry1 ], [ %3, %if.entry ]
  %.sink112 = phi i64 [ 2, %ifend54 ], [ 1, %if.entry52 ], [ 2, %if.entry49 ], [ 1, %if.entry46 ], [ 3, %if.entry43 ], [ 2, %if.entry40 ], [ 2, %if.entry37 ], [ 2, %if.entry34 ], [ 2, %if.entry31 ], [ 2, %if.entry28 ], [ 2, %if.entry25 ], [ 1, %if.entry22 ], [ 2, %if.entry19 ], [ 1, %if.entry16 ], [ 1, %if.entry13 ], [ 2, %if.entry10 ], [ 1, %if.entry7 ], [ 1, %if.entry4 ], [ 1, %if.entry1 ], [ 1, %if.entry ]
  %memberidx1.i.i109 = getelementptr inbounds %String, ptr %.sink113, i64 0, i32 1
  store i64 %.sink112, ptr %memberidx1.i.i109, align 4
  %memberidx2.i.i110 = getelementptr inbounds %String, ptr %.sink113, i64 0, i32 2
  store i64 %.sink112, ptr %memberidx2.i.i110, align 4
  ret ptr %.sink113

if.entry:                                         ; preds = %1
  %2 = tail call ptr @malloc(i32 1)
  store i8 43, ptr %2, align 8
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 1)
  store i8 45, ptr %4, align 8
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  br label %common.ret

if.entry4:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 1)
  store i8 42, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %8 = tail call ptr @malloc(i32 1)
  store i8 47, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 2)
  store i16 10794, ptr %10, align 8
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 1)
  store i8 94, ptr %12, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 1)
  store i8 62, ptr %14, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  br label %common.ret

if.entry19:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 2)
  store i16 15678, ptr %16, align 8
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  br label %common.ret

if.entry22:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 1)
  store i8 60, ptr %18, align 8
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  br label %common.ret

if.entry25:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 2)
  store i16 15676, ptr %20, align 8
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  br label %common.ret

if.entry28:                                       ; preds = %1
  %22 = tail call ptr @malloc(i32 2)
  store i16 15677, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  br label %common.ret

if.entry31:                                       ; preds = %1
  %24 = tail call ptr @malloc(i32 2)
  store i16 15649, ptr %24, align 8
  %25 = tail call ptr @malloc(i32 24)
  store ptr %24, ptr %25, align 8
  br label %common.ret

if.entry34:                                       ; preds = %1
  %26 = tail call ptr @malloc(i32 2)
  store i16 15420, ptr %26, align 8
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  br label %common.ret

if.entry37:                                       ; preds = %1
  %28 = tail call ptr @malloc(i32 2)
  store i16 15934, ptr %28, align 8
  %29 = tail call ptr @malloc(i32 24)
  store ptr %28, ptr %29, align 8
  br label %common.ret

if.entry40:                                       ; preds = %1
  %30 = tail call ptr @malloc(i32 2)
  store i16 29295, ptr %30, align 8
  %31 = tail call ptr @malloc(i32 24)
  store ptr %30, ptr %31, align 8
  br label %common.ret

if.entry43:                                       ; preds = %1
  %32 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %32, ptr noundef nonnull align 8 dereferenceable(3) @41, i64 3, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  br label %common.ret

if.entry46:                                       ; preds = %1
  %34 = tail call ptr @malloc(i32 1)
  store i8 94, ptr %34, align 8
  %35 = tail call ptr @malloc(i32 24)
  store ptr %34, ptr %35, align 8
  br label %common.ret

if.entry49:                                       ; preds = %1
  %36 = tail call ptr @malloc(i32 2)
  store i16 28265, ptr %36, align 8
  %37 = tail call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  br label %common.ret

if.entry52:                                       ; preds = %1
  %38 = tail call ptr @malloc(i32 1)
  store i8 61, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  br label %common.ret

ifend54:                                          ; preds = %1
  %40 = tail call ptr @malloc(i32 2)
  store i16 11822, ptr %40, align 8
  %41 = tail call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  br label %common.ret
}

define internal fastcc void @check_cast_lower_bits(ptr nocapture %0, ptr nocapture %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %4, align 4
  %8 = load i64, ptr %6, align 4
  %.not = icmp eq i64 %7, %8
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %2
  %9 = and i64 %7, -2
  %10 = icmp eq i64 %9, 8
  %11 = add i64 %8, -1
  %12 = icmp ult i64 %11, 7
  %13 = and i1 %10, %12
  br i1 %13, label %if.entry4, label %else5

ifend:                                            ; preds = %if.entry7, %ifend12, %if.entry4, %2
  ret void

if.entry4:                                        ; preds = %if.entry
  %14 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %14, align 4
  %memberidx.i.i.i50 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i50, align 4
  %memberidx1.i.i.i51 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 1
  %memberidx.i.i52 = getelementptr inbounds %TypeCastExpression, ptr %14, i64 0, i32 4
  store ptr %5, ptr %memberidx.i.i52, align 8
  %memberidx1.i.i53 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 3
  store ptr %4, ptr %memberidx1.i.i53, align 8
  %memberidx3.i.i55 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 1
  %15 = load i1, ptr %memberidx3.i.i55, align 1
  store i1 %15, ptr %memberidx1.i.i.i51, align 1
  store ptr %14, ptr %1, align 8
  br label %ifend

else5:                                            ; preds = %if.entry
  %16 = add i64 %7, -1
  %17 = icmp ult i64 %16, 7
  %18 = and i64 %8, -2
  %19 = icmp eq i64 %18, 8
  %20 = and i1 %17, %19
  br i1 %20, label %if.entry7, label %else8

if.entry7:                                        ; preds = %else5
  %21 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %21, align 4
  %memberidx.i.i.i56 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i56, align 4
  %memberidx1.i.i.i57 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %memberidx.i.i58 = getelementptr inbounds %TypeCastExpression, ptr %21, i64 0, i32 4
  store ptr %3, ptr %memberidx.i.i58, align 8
  %memberidx1.i.i59 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  store ptr %6, ptr %memberidx1.i.i59, align 8
  %memberidx3.i.i61 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %22 = load i1, ptr %memberidx3.i.i61, align 1
  store i1 %22, ptr %memberidx1.i.i.i57, align 1
  store ptr %21, ptr %0, align 8
  br label %ifend

else8:                                            ; preds = %else5
  %23 = icmp sgt i64 %7, %8
  %ternary.i = select i1 %23, ptr %4, ptr %6
  %24 = load i64, ptr %ternary.i, align 4
  %25 = add i64 %24, -1
  %26 = icmp ult i64 %25, 7
  %27 = and i1 %12, %26
  br i1 %27, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %else8
  %memberidx13 = getelementptr inbounds %IntType, ptr %ternary.i, i64 0, i32 1
  %28 = load i1, ptr %memberidx13, align 1
  %memberidx14 = getelementptr inbounds %IntType, ptr %6, i64 0, i32 1
  %29 = load i1, ptr %memberidx14, align 1
  %30 = xor i1 %28, %29
  br i1 %30, label %if.entry15, label %ifend12

ifend12:                                          ; preds = %if.entry15, %if.entry10, %else8
  %31 = phi ptr [ %.pre, %if.entry15 ], [ %3, %if.entry10 ], [ %3, %else8 ]
  %32 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %32, align 4
  %memberidx.i.i.i44 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i44, align 4
  %memberidx1.i.i.i45 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 1
  %memberidx.i.i46 = getelementptr inbounds %TypeCastExpression, ptr %32, i64 0, i32 4
  store ptr %31, ptr %memberidx.i.i46, align 8
  %memberidx1.i.i47 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i47, align 8
  %memberidx3.i.i49 = getelementptr inbounds %Expression, ptr %31, i64 0, i32 1
  %33 = load i1, ptr %memberidx3.i.i49, align 1
  store i1 %33, ptr %memberidx1.i.i.i45, align 1
  store ptr %32, ptr %0, align 8
  %34 = load ptr, ptr %1, align 8
  %35 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %35, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %35, i64 0, i32 4
  store ptr %34, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Expression, ptr %34, i64 0, i32 1
  %36 = load i1, ptr %memberidx3.i.i, align 1
  store i1 %36, ptr %memberidx1.i.i.i, align 1
  store ptr %35, ptr %1, align 8
  br label %ifend

if.entry15:                                       ; preds = %if.entry10
  store i1 true, ptr %memberidx14, align 1
  store i1 true, ptr %memberidx13, align 1
  %.pre = load ptr, ptr %0, align 8
  br label %ifend12
}

define internal fastcc noalias ptr @dump_unary_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend15 [
    i64 2, label %if.entry
    i64 3, label %if.entry1
    i64 4, label %if.entry4
    i64 5, label %if.entry7
    i64 6, label %if.entry10
    i64 7, label %if.entry13
  ]

common.ret:                                       ; preds = %ifend15, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink35 = phi ptr [ %15, %ifend15 ], [ %13, %if.entry13 ], [ %11, %if.entry10 ], [ %9, %if.entry7 ], [ %7, %if.entry4 ], [ %5, %if.entry1 ], [ %3, %if.entry ]
  %.sink34 = phi i64 [ 1, %ifend15 ], [ 1, %if.entry13 ], [ 1, %if.entry10 ], [ 8, %if.entry7 ], [ 8, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %memberidx1.i.i31 = getelementptr inbounds %String, ptr %.sink35, i64 0, i32 1
  store i64 %.sink34, ptr %memberidx1.i.i31, align 4
  %memberidx2.i.i32 = getelementptr inbounds %String, ptr %.sink35, i64 0, i32 2
  store i64 %.sink34, ptr %memberidx2.i.i32, align 4
  ret ptr %.sink35

if.entry:                                         ; preds = %1
  %2 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %2, ptr noundef nonnull align 8 dereferenceable(7) @183, i64 7, i1 false)
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @184, i64 7, i1 false)
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  br label %common.ret

if.entry4:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 8)
  store i64 3110625547759087656, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %8 = tail call ptr @malloc(i32 8)
  store i64 3255303685788364840, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 1)
  store i8 45, ptr %10, align 8
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 1)
  store i8 33, ptr %12, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  br label %common.ret

ifend15:                                          ; preds = %1
  %14 = tail call ptr @malloc(i32 1)
  store i8 38, ptr %14, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_store_expr_to_mem(ptr nocapture %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %next_args.i = alloca [2 x ptr], align 8
  %args = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %memberidx, align 4
  %6 = icmp ne i64 %5, 6
  %memberidx1 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %7 = load i1, ptr %memberidx1, align 1
  %8 = or i1 %7, %6
  br i1 %8, label %else, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx2 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = load i64, ptr %9, align 4
  %.not = icmp eq i64 %10, 20
  br i1 %.not, label %ifend6, label %if.entry4

else:                                             ; preds = %4
  %11 = icmp ne i64 %5, 7
  %12 = or i1 %7, %11
  br i1 %12, label %else10, label %if.entry9

common.ret:                                       ; preds = %CodeGen_store_tuple_elements.exit, %if.entry4, %ifend
  %common.ret.op = phi ptr [ %value.0, %ifend ], [ %19, %if.entry4 ], [ %2, %CodeGen_store_tuple_elements.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else10, %ifend6
  %value.0 = phi ptr [ %20, %ifend6 ], [ %39, %else10 ]
  %13 = tail call ptr @LLVMBuildStore(ptr %1, ptr %value.0, ptr %2)
  br label %common.ret

if.entry4:                                        ; preds = %if.entry
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 0, i1 false)
  store ptr %15, ptr %args, align 8
  %16 = getelementptr inbounds ptr, ptr %args, i64 1
  store ptr %15, ptr %16, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %9, i1 true)
  %18 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %17, ptr %2, ptr nonnull %args, i64 2, ptr nonnull @80)
  %19 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %18, ptr nonnull %3)
  br label %common.ret

ifend6:                                           ; preds = %if.entry
  %20 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %9, ptr nonnull %3)
  br label %ifend

if.entry9:                                        ; preds = %else
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %next_args.i)
  %21 = tail call ptr @LLVMInt32Type()
  %22 = tail call ptr @LLVMConstInt(ptr %21, i64 0, i1 false)
  store ptr %22, ptr %next_args.i, align 8
  %23 = getelementptr inbounds ptr, ptr %next_args.i, i64 1
  store ptr null, ptr %23, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %24 = load ptr, ptr %memberidx.i, align 8
  %25 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %24, i1 true)
  %memberidx1.i = getelementptr inbounds %TupleExpression, ptr %3, i64 0, i32 4
  %26 = load ptr, ptr %memberidx1.i, align 8
  %27 = tail call ptr @malloc(i32 25)
  %28 = load ptr, ptr %26, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Expression_, ptr %26, i64 0, i32 1
  %29 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %27, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 3
  store ptr %28, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 2
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %30 = icmp slt i64 %29, 1
  br i1 %30, label %CodeGen_store_tuple_elements.exit, label %for.body.i

for.body.i:                                       ; preds = %if.entry9, %for.body.i
  %31 = phi i64 [ %37, %for.body.i ], [ 1, %if.entry9 ]
  %value.0.i41.in = phi ptr [ %38, %for.body.i ], [ %28, %if.entry9 ]
  %idx.0.i40 = phi i64 [ %32, %for.body.i ], [ 0, %if.entry9 ]
  %value.0.i41 = load ptr, ptr %value.0.i41.in, align 8
  %32 = add nuw nsw i64 %idx.0.i40, 1
  %33 = call ptr @LLVMConstInt(ptr %21, i64 %idx.0.i40, i1 false)
  store ptr %33, ptr %23, align 8
  %34 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %25, ptr %2, ptr nonnull %next_args.i, i64 2, ptr nonnull @80)
  %35 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.0.i41)
  %36 = call ptr @LLVMBuildStore(ptr %1, ptr %35, ptr %34)
  %37 = add nuw nsw i64 %31, 1
  store i64 %37, ptr %memberidx1.i.i.i, align 4
  %38 = getelementptr inbounds ptr, ptr %28, i64 %31
  %.not42 = icmp slt i64 %31, %29
  br i1 %.not42, label %for.body.i, label %CodeGen_store_tuple_elements.exit

CodeGen_store_tuple_elements.exit:                ; preds = %for.body.i, %if.entry9
  call void @free(ptr nonnull %27)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %next_args.i)
  br label %common.ret

else10:                                           ; preds = %else
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %3)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_array_exp(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 20
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %for.end, %if.entry
  %common.ret.op = phi ptr [ %7, %if.entry ], [ %34, %for.end ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %7 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %4, ptr nonnull %2)
  br label %common.ret

ifend:                                            ; preds = %3
  %memberidx3 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 1
  %8 = load i1, ptr %memberidx3, align 1
  br i1 %8, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  %9 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %9, ptr noundef nonnull align 8 dereferenceable(54) @256, i64 54, i1 false)
  %10 = tail call ptr @malloc(i32 24)
  %11 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %11, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %12 = tail call ptr @malloc(i32 24)
  %13 = tail call i64 @write(i64 1, ptr %11, i64 7)
  tail call void @free(ptr %11)
  tail call void @free(ptr %12)
  %14 = tail call i64 @write(i64 1, ptr %9, i64 54)
  %15 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %9)
  tail call void @free(ptr %10)
  tail call void @exit(i64 -1)
  %.pre = load ptr, ptr %memberidx, align 8
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %16 = phi ptr [ %4, %ifend ], [ %.pre, %if.entry4 ]
  %memberidx8 = getelementptr inbounds %ArrayType, ptr %16, i64 0, i32 1
  %17 = load ptr, ptr %memberidx8, align 8
  %18 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %17, i1 true)
  %memberidx9 = getelementptr inbounds %ArrayExpression, ptr %2, i64 0, i32 4
  %19 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Expression_, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx10, align 4
  %21 = alloca ptr, i64 %20, align 8
  %22 = tail call ptr @malloc(i32 25)
  %23 = load ptr, ptr %19, align 8
  %24 = load i64, ptr %memberidx10, align 4
  store i1 false, ptr %22, align 1
  %memberidx1.i.i29 = getelementptr inbounds %ArrayIterator_Expression_, ptr %22, i64 0, i32 1
  %memberidx2.i.i30 = getelementptr inbounds %ArrayIterator_Expression_, ptr %22, i64 0, i32 3
  store ptr %23, ptr %memberidx2.i.i30, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %22, i64 0, i32 2
  store i64 %24, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i29, align 4
  %25 = icmp slt i64 %24, 1
  br i1 %25, label %for.end, label %for.body

for.body:                                         ; preds = %ifend6, %for.body
  %26 = phi i64 [ %30, %for.body ], [ 1, %ifend6 ]
  %value.037.in = phi ptr [ %31, %for.body ], [ %23, %ifend6 ]
  %idx.036 = phi i64 [ %27, %for.body ], [ 0, %ifend6 ]
  %value.037 = load ptr, ptr %value.037.in, align 8
  %27 = add nuw nsw i64 %idx.036, 1
  %28 = getelementptr inbounds ptr, ptr %21, i64 %idx.036
  %29 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.037)
  store ptr %29, ptr %28, align 8
  %30 = add nuw nsw i64 %26, 1
  store i64 %30, ptr %memberidx1.i.i29, align 4
  %31 = getelementptr inbounds ptr, ptr %23, i64 %26
  %.not = icmp slt i64 %26, %24
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend6
  tail call void @free(ptr nonnull %22)
  %32 = load ptr, ptr %memberidx9, align 8
  %memberidx14 = getelementptr inbounds %Array_Expression_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx14, align 4
  %34 = call ptr @LLVMConstArray(ptr %18, ptr nonnull %21, i64 %33)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_var_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load ptr, ptr %7, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 1
  %9 = load i64, ptr %memberidx1.i, align 4
  %10 = load ptr, ptr %8, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 1
  %13 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %memberidx2 = getelementptr inbounds %Var, ptr %17, i64 0, i32 2
  %18 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 3
  %19 = load i1, ptr %memberidx3, align 1
  br i1 %19, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %memberidx4 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = trunc i64 %21 to i32
  %23 = add i32 %22, 1
  %24 = tail call ptr @malloc(i32 %23)
  %25 = load ptr, ptr %20, align 8
  %26 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %25, i64 %26, i1 false)
  %27 = getelementptr inbounds i8, ptr %24, i64 %26
  store i8 0, ptr %27, align 1
  %28 = load ptr, ptr %17, align 8
  %29 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %28, i1 true)
  %30 = load ptr, ptr %0, align 8
  %31 = tail call ptr @LLVMAddGlobal(ptr %30, ptr %29, ptr %24)
  %.not30 = icmp eq ptr %18, null
  br i1 %.not30, label %ifend9, label %if.entry7

else:                                             ; preds = %3
  %memberidx.i31 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %32 = load ptr, ptr %memberidx.i31, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %33 = load i64, ptr %6, align 4
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %9, i64 %33, i64 %14)
  %35 = load ptr, ptr %5, align 8
  %36 = call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %37 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %36)
  %memberidx.i37 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %32, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i37, align 4
  %39 = urem i64 %37, %38
  %40 = load ptr, ptr %32, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8
  %.not.i = icmp eq ptr %42, null
  br i1 %.not.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %else, %else.i
  %43 = phi ptr [ %51, %else.i ], [ %40, %else ]
  %44 = phi i64 [ %52, %else.i ], [ %38, %else ]
  %45 = phi ptr [ %56, %else.i ], [ %42, %else ]
  %hash.0.i = phi i64 [ %54, %else.i ], [ %39, %else ]
  %46 = load ptr, ptr %45, align 8
  %memberidx.i.i38 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx.i.i38, align 4
  %.not.i.i = icmp eq i64 %47, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %48 = load ptr, ptr %46, align 8
  %49 = call i64 @memcmp(ptr %48, ptr %35, i64 %34)
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i37, align 4
  %.pre41 = load ptr, ptr %32, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre42.pre = load ptr, ptr %32, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre42.pre, i64 %hash.0.i
  %.pre43.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre43.pre, null
  br i1 %.not25.i, label %Map_String_LLVMValueRef____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %51 = phi ptr [ %.pre41, %ifend.i.i.else.i_crit_edge ], [ %43, %while.entry.i ]
  %52 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %44, %while.entry.i ]
  %53 = add nuw i64 %hash.0.i, 1
  %54 = urem i64 %53, %52
  %55 = getelementptr inbounds ptr, ptr %51, i64 %54
  %56 = load ptr, ptr %55, align 8
  %.not26.i = icmp eq ptr %56, null
  br i1 %.not26.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre43.pre, i64 0, i32 1
  %57 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %else, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %57, %if.entry7.i ], [ null, %while.end.i ], [ null, %else ], [ null, %else.i ]
  %.not = icmp eq ptr %18, null
  br i1 %.not, label %ifend, label %if.entry10

ifend:                                            ; preds = %if.entry10, %Map_String_LLVMValueRef____getitem__.exit, %ifend9
  ret void

if.entry7:                                        ; preds = %if.entry
  %58 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %18)
  tail call void @LLVMSetInitializer(ptr %31, ptr %58)
  br label %ifend9

ifend9:                                           ; preds = %if.entry, %if.entry7
  %memberidx.i32 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %59 = load ptr, ptr %memberidx.i32, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %60 = load i64, ptr %memberidx1.i, align 4
  %61 = load i64, ptr %6, align 4
  %62 = load i64, ptr %memberidx3.i, align 4
  %63 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %60, i64 %61, i64 %62)
  %64 = load ptr, ptr %4, align 8
  %65 = call ptr @malloc(i32 24)
  store ptr %64, ptr %65, align 8
  %memberidx1.i.i.i35 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  store i64 %63, ptr %memberidx1.i.i.i35, align 4
  %memberidx2.i.i.i36 = getelementptr inbounds %String, ptr %65, i64 0, i32 2
  store i64 %63, ptr %memberidx2.i.i.i36, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %59, ptr nonnull %65, ptr %31)
  br label %ifend

if.entry10:                                       ; preds = %Map_String_LLVMValueRef____getitem__.exit
  %66 = call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i, ptr nonnull %18)
  br label %ifend
}

define internal fastcc void @CodeGen_codegen_const_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load ptr, ptr %7, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 1
  %9 = load i64, ptr %memberidx1.i, align 4
  %10 = load ptr, ptr %8, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %memberidx2 = getelementptr inbounds %Const, ptr %17, i64 0, i32 2
  %18 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 3
  %19 = load i1, ptr %memberidx3, align 1
  br i1 %19, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %memberidx4 = getelementptr inbounds %Expression, ptr %18, i64 0, i32 3
  %20 = load ptr, ptr %memberidx4, align 8
  %21 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %20, i1 true)
  %memberidx5 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 1
  %22 = load ptr, ptr %memberidx5, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i, align 4
  %24 = trunc i64 %23 to i32
  %25 = add i32 %24, 1
  %26 = tail call ptr @malloc(i32 %25)
  %27 = load ptr, ptr %22, align 8
  %28 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %27, i64 %28, i1 false)
  %29 = getelementptr inbounds i8, ptr %26, i64 %28
  store i8 0, ptr %29, align 1
  %30 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %18)
  %31 = load ptr, ptr %0, align 8
  %32 = tail call ptr @LLVMAddGlobal(ptr %31, ptr %21, ptr %26)
  tail call void @LLVMSetInitializer(ptr %32, ptr %30)
  tail call void @LLVMSetGlobalConstant(ptr %32, i1 true)
  %memberidx.i23 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %33 = load ptr, ptr %memberidx.i23, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %34 = load i64, ptr %memberidx1.i, align 4
  %35 = load i64, ptr %6, align 4
  %36 = load i64, ptr %memberidx3.i, align 4
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %34, i64 %35, i64 %36)
  %38 = load ptr, ptr %5, align 8
  %39 = call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %33, ptr nonnull %39, ptr %32)
  br label %ifend

else:                                             ; preds = %3
  %memberidx.i24 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %40 = load ptr, ptr %memberidx.i24, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %41 = load i64, ptr %6, align 4
  %42 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %9, i64 %41, i64 %14)
  %43 = load ptr, ptr %4, align 8
  %44 = call ptr @malloc(i32 24)
  store ptr %43, ptr %44, align 8
  %memberidx1.i.i.i27 = getelementptr inbounds %String, ptr %44, i64 0, i32 1
  store i64 %42, ptr %memberidx1.i.i.i27, align 4
  %memberidx2.i.i.i28 = getelementptr inbounds %String, ptr %44, i64 0, i32 2
  store i64 %42, ptr %memberidx2.i.i.i28, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %45 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %44)
  %memberidx.i29 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %40, i64 0, i32 1
  %46 = load i64, ptr %memberidx.i29, align 4
  %47 = urem i64 %45, %46
  %48 = load ptr, ptr %40, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %.not.i = icmp eq ptr %50, null
  br i1 %.not.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %else, %else.i
  %51 = phi ptr [ %59, %else.i ], [ %48, %else ]
  %52 = phi i64 [ %60, %else.i ], [ %46, %else ]
  %53 = phi ptr [ %64, %else.i ], [ %50, %else ]
  %hash.0.i = phi i64 [ %62, %else.i ], [ %47, %else ]
  %54 = load ptr, ptr %53, align 8
  %memberidx.i.i30 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i.i30, align 4
  %.not.i.i = icmp eq i64 %55, %42
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %56 = load ptr, ptr %54, align 8
  %57 = call i64 @memcmp(ptr %56, ptr %43, i64 %42)
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i29, align 4
  %.pre32 = load ptr, ptr %40, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre33.pre = load ptr, ptr %40, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre33.pre, i64 %hash.0.i
  %.pre34.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre34.pre, null
  br i1 %.not25.i, label %Map_String_LLVMValueRef____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %59 = phi ptr [ %.pre32, %ifend.i.i.else.i_crit_edge ], [ %51, %while.entry.i ]
  %60 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %52, %while.entry.i ]
  %61 = add nuw i64 %hash.0.i, 1
  %62 = urem i64 %61, %60
  %63 = getelementptr inbounds ptr, ptr %59, i64 %62
  %64 = load ptr, ptr %63, align 8
  %.not26.i = icmp eq ptr %64, null
  br i1 %.not26.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre34.pre, i64 0, i32 1
  %65 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %else, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %65, %if.entry7.i ], [ null, %while.end.i ], [ null, %else ], [ null, %else.i ]
  %66 = call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i, ptr %18)
  br label %ifend

ifend:                                            ; preds = %Map_String_LLVMValueRef____getitem__.exit, %if.entry
  ret void
}

define internal fastcc void @Map_String_LLVMValueRef__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_LLVMValueRef____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_LLVMValueRef__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_store_array_elements(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %next_args = alloca [1 x ptr], align 8
  %4 = tail call ptr @LLVMIntType(i64 64)
  %5 = tail call ptr @LLVMConstInt(ptr %4, i64 1, i1 false)
  store ptr %5, ptr %next_args, align 8
  %6 = tail call ptr @LLVMTypeOf(ptr %2)
  %memberidx = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = tail call ptr @malloc(i32 25)
  %9 = load ptr, ptr %7, align 8
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 1
  %10 = load i64, ptr %memberidx1.i, align 4
  %11 = icmp slt i64 %10, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %value.016.in = phi ptr [ %17, %for.body ], [ %9, %for.entry ]
  %addr.015 = phi ptr [ %15, %for.body ], [ %2, %for.entry ]
  %value.016 = load ptr, ptr %value.016.in, align 8
  %13 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.016)
  %14 = call ptr @LLVMBuildStore(ptr %1, ptr %13, ptr %addr.015)
  %15 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %6, ptr %addr.015, ptr nonnull %next_args, i64 1, ptr nonnull @80)
  %16 = add nuw nsw i64 %12, 1
  %17 = getelementptr inbounds ptr, ptr %9, i64 %12
  %.not = icmp slt i64 %12, %10
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %addr.0.lcssa = phi ptr [ %2, %for.entry ], [ %15, %for.body ]
  tail call void @free(ptr nonnull %8)
  ret ptr %addr.0.lcssa
}

define internal fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = load i64, ptr %2, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %2, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %memberidx2 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 1
  %15 = load ptr, ptr %memberidx2, align 8
  %16 = tail call ptr @malloc(i32 25)
  %17 = load ptr, ptr %15, align 8
  %memberidx1.i = getelementptr inbounds %Map_String_VarId_, ptr %15, i64 0, i32 1
  %18 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i49 = getelementptr inbounds %Map_String_VarId_, ptr %15, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i49, align 4
  %memberidx1.i.i = getelementptr inbounds %MapIterator_String_VarId_, ptr %16, i64 0, i32 1
  store ptr %17, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_String_VarId_, ptr %16, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_VarId_, ptr %16, i64 0, i32 3
  %20 = add nsw i64 %18, -1
  store i64 %20, ptr %memberidx2.i.i, align 4
  %21 = icmp sgt i64 %18, 0
  br i1 %21, label %while.entry.i, label %MapIterator_String_VarId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %22 = phi i64 [ %25, %ifend.i ], [ %20, %for.entry ]
  %23 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %17, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %23, i64 1
  %24 = load ptr, ptr %23, align 8
  %.not.i = icmp eq ptr %24, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_VarId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %25 = add nsw i64 %22, -1
  store i64 %25, ptr %memberidx2.i.i, align 4
  %26 = icmp sgt i64 %22, 0
  br i1 %26, label %while.entry.i, label %MapIterator_String_VarId__next.exit.loopexit

MapIterator_String_VarId__next.exit.loopexit:     ; preds = %ifend.i, %while.entry.i
  %27 = phi i64 [ %25, %ifend.i ], [ %22, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_String_VarId__next.exit

MapIterator_String_VarId__next.exit:              ; preds = %MapIterator_String_VarId__next.exit.loopexit, %for.entry
  %28 = phi i64 [ %27, %MapIterator_String_VarId__next.exit.loopexit ], [ %20, %for.entry ]
  %.pn91 = phi ptr [ %incdec.ptr.i, %MapIterator_String_VarId__next.exit.loopexit ], [ %17, %for.entry ]
  %storemerge8285 = add nsw i64 %19, -1
  store i64 %storemerge8285, ptr %memberidx3.i.i, align 4
  %storemerge86 = icmp slt i64 %19, 1
  store i1 %storemerge86, ptr %16, align 1
  br i1 %storemerge86, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_String_VarId__next.exit
  %memberidx.i61 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_String_VarId__next.exit71
  %29 = phi i64 [ %storemerge8285, %for.body.lr.ph ], [ %storemerge82, %MapIterator_String_VarId__next.exit71 ]
  %30 = phi i64 [ %28, %for.body.lr.ph ], [ %74, %MapIterator_String_VarId__next.exit71 ]
  %memberidx1.i.i.promoted = phi ptr [ %.pn91, %for.body.lr.ph ], [ %.pn90, %MapIterator_String_VarId__next.exit71 ]
  %var_value_type.087 = phi ptr [ undef, %for.body.lr.ph ], [ %var_value_type.1, %MapIterator_String_VarId__next.exit71 ]
  %var_entry.0.in = getelementptr inbounds ptr, ptr %memberidx1.i.i.promoted, i64 -1
  %var_entry.0 = load ptr, ptr %var_entry.0.in, align 8
  %31 = load ptr, ptr %var_entry.0, align 8
  %memberidx5 = getelementptr inbounds %MapEntry_String_VarId_, ptr %var_entry.0, i64 0, i32 1
  %32 = load ptr, ptr %memberidx5, align 8
  %33 = load i64, ptr %32, align 4
  switch i64 %33, label %ifend [
    i64 1, label %if.entry
    i64 0, label %if.entry10
    i64 2, label %if.entry16
  ]

for.end:                                          ; preds = %MapIterator_String_VarId__next.exit71, %MapIterator_String_VarId__next.exit
  tail call void @free(ptr nonnull %16)
  %memberidx22 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 7
  %34 = load ptr, ptr %memberidx22, align 8
  %35 = call ptr @malloc(i32 25)
  %36 = load ptr, ptr %34, align 8
  %memberidx1.i51 = getelementptr inbounds %Array_ScopeId_, ptr %34, i64 0, i32 1
  %37 = load i64, ptr %memberidx1.i51, align 4
  store i1 false, ptr %35, align 1
  %memberidx1.i.i52 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %35, i64 0, i32 1
  %memberidx2.i.i53 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %35, i64 0, i32 3
  store ptr %36, ptr %memberidx2.i.i53, align 8
  %memberidx3.i.i54 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %35, i64 0, i32 2
  store i64 %37, ptr %memberidx3.i.i54, align 4
  store i64 1, ptr %memberidx1.i.i52, align 4
  %38 = icmp slt i64 %37, 1
  br i1 %38, label %for.end26, label %for.body24

if.entry:                                         ; preds = %for.body
  %39 = load ptr, ptr %memberidx, align 8
  %40 = load ptr, ptr %39, align 8
  %memberidx1.i57 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %41 = load i64, ptr %memberidx1.i57, align 4
  %42 = load ptr, ptr %40, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %memberidx2.i58 = getelementptr inbounds %Module, ptr %44, i64 0, i32 1
  %45 = load ptr, ptr %memberidx2.i58, align 8
  %memberidx3.i59 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %46 = load i64, ptr %memberidx3.i59, align 4
  %47 = load ptr, ptr %45, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  br label %ifend.sink.split

ifend.sink.split:                                 ; preds = %if.entry, %if.entry10, %if.entry16
  %.sink = phi ptr [ %96, %if.entry16 ], [ %memberidx14, %if.entry10 ], [ %49, %if.entry ]
  %50 = load ptr, ptr %.sink, align 8
  br label %ifend

ifend:                                            ; preds = %ifend.sink.split, %for.body
  %var_value_type.1 = phi ptr [ %var_value_type.087, %for.body ], [ %50, %ifend.sink.split ]
  %51 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %var_value_type.1, i1 true)
  %memberidx.i60 = getelementptr inbounds %String, ptr %31, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i60, align 4
  %53 = trunc i64 %52 to i32
  %54 = add i32 %53, 1
  %55 = call ptr @malloc(i32 %54)
  %56 = load ptr, ptr %31, align 8
  %57 = load i64, ptr %memberidx.i60, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %55, ptr align 8 %56, i64 %57, i1 false)
  %58 = getelementptr inbounds i8, ptr %55, i64 %57
  store i8 0, ptr %58, align 1
  %59 = call ptr @LLVMBuildAlloca(ptr %1, ptr %51, ptr %55)
  %60 = load ptr, ptr %memberidx.i61, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %61 = load i64, ptr %memberidx.i.i, align 4
  %62 = load i64, ptr %32, align 4
  %memberidx2.i.i62 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %63 = load i64, ptr %memberidx2.i.i62, align 4
  %64 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %61, i64 %62, i64 %63)
  %65 = load ptr, ptr %3, align 8
  %66 = call ptr @malloc(i32 24)
  store ptr %65, ptr %66, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  store i64 %64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %66, i64 0, i32 2
  store i64 %64, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %60, ptr nonnull %66, ptr %59)
  %67 = add nsw i64 %30, -1
  store i64 %67, ptr %memberidx2.i.i, align 4
  %68 = icmp sgt i64 %30, 0
  br i1 %68, label %while.entry.i67, label %MapIterator_String_VarId__next.exit71

while.entry.i67:                                  ; preds = %ifend, %ifend.i70
  %69 = phi i64 [ %72, %ifend.i70 ], [ %67, %ifend ]
  %70 = phi ptr [ %incdec.ptr.i65, %ifend.i70 ], [ %memberidx1.i.i.promoted, %ifend ]
  %incdec.ptr.i65 = getelementptr inbounds ptr, ptr %70, i64 1
  %71 = load ptr, ptr %70, align 8
  %.not.i66 = icmp eq ptr %71, null
  br i1 %.not.i66, label %ifend.i70, label %MapIterator_String_VarId__next.exit71.loopexit

ifend.i70:                                        ; preds = %while.entry.i67
  %72 = add nsw i64 %69, -1
  store i64 %72, ptr %memberidx2.i.i, align 4
  %.not92 = icmp eq i64 %69, 0
  br i1 %.not92, label %MapIterator_String_VarId__next.exit71.loopexit, label %while.entry.i67

MapIterator_String_VarId__next.exit71.loopexit:   ; preds = %ifend.i70, %while.entry.i67
  %73 = phi i64 [ -1, %ifend.i70 ], [ %69, %while.entry.i67 ]
  store ptr %incdec.ptr.i65, ptr %memberidx1.i.i, align 8
  br label %MapIterator_String_VarId__next.exit71

MapIterator_String_VarId__next.exit71:            ; preds = %MapIterator_String_VarId__next.exit71.loopexit, %ifend
  %74 = phi i64 [ %73, %MapIterator_String_VarId__next.exit71.loopexit ], [ %67, %ifend ]
  %.pn90 = phi ptr [ %incdec.ptr.i65, %MapIterator_String_VarId__next.exit71.loopexit ], [ %memberidx1.i.i.promoted, %ifend ]
  %storemerge82 = add nsw i64 %29, -1
  store i64 %storemerge82, ptr %memberidx3.i.i, align 4
  %storemerge = icmp slt i64 %29, 1
  store i1 %storemerge, ptr %16, align 1
  br i1 %storemerge, label %for.end, label %for.body

if.entry10:                                       ; preds = %for.body
  %75 = load ptr, ptr %memberidx, align 8
  %76 = load ptr, ptr %75, align 8
  %memberidx1.i72 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %77 = load i64, ptr %memberidx1.i72, align 4
  %78 = load ptr, ptr %76, align 8
  %79 = getelementptr inbounds ptr, ptr %78, i64 %77
  %80 = load ptr, ptr %79, align 8
  %memberidx2.i73 = getelementptr inbounds %Module, ptr %80, i64 0, i32 4
  %81 = load ptr, ptr %memberidx2.i73, align 8
  %memberidx3.i74 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %82 = load i64, ptr %memberidx3.i74, align 4
  %83 = load ptr, ptr %81, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  %memberidx14 = getelementptr inbounds %Function, ptr %85, i64 0, i32 4
  br label %ifend.sink.split

if.entry16:                                       ; preds = %for.body
  %86 = load ptr, ptr %memberidx, align 8
  %87 = load ptr, ptr %86, align 8
  %memberidx1.i75 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %88 = load i64, ptr %memberidx1.i75, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx2.i76 = getelementptr inbounds %Module, ptr %91, i64 0, i32 2
  %92 = load ptr, ptr %memberidx2.i76, align 8
  %memberidx3.i77 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %93 = load i64, ptr %memberidx3.i77, align 4
  %94 = load ptr, ptr %92, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  br label %ifend.sink.split

for.body24:                                       ; preds = %for.end, %for.body24
  %97 = phi i64 [ %98, %for.body24 ], [ 1, %for.end ]
  %child_scope.084.in = phi ptr [ %99, %for.body24 ], [ %36, %for.end ]
  %child_scope.084 = load ptr, ptr %child_scope.084.in, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr %0, ptr %1, ptr %child_scope.084)
  %98 = add nuw nsw i64 %97, 1
  store i64 %98, ptr %memberidx1.i.i52, align 4
  %99 = getelementptr inbounds ptr, ptr %36, i64 %97
  %.not = icmp slt i64 %97, %37
  br i1 %.not, label %for.body24, label %for.end26

for.end26:                                        ; preds = %for.body24, %for.end
  tail call void @free(ptr nonnull %35)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_type(ptr nocapture %0, ptr nocapture readonly %1, i1 %2) unnamed_addr {
  %4 = load i64, ptr %1, align 4
  switch i64 %4, label %ifend58 [
    i64 10, label %if.entry
    i64 0, label %if.entry5
    i64 1, label %if.entry9
    i64 2, label %if.entry13
    i64 3, label %if.entry17
    i64 4, label %if.entry21
    i64 6, label %if.entry25
    i64 5, label %if.entry29
    i64 7, label %if.entry33
    i64 8, label %if.entry37
    i64 9, label %if.entry41
    i64 13, label %if.entry45
    i64 14, label %if.entry50
    i64 20, label %if.entry56
  ]

common.ret:                                       ; preds = %if.entry88, %for.end, %true_block91, %true_block, %if.entry102, %ifend100, %for.end81, %if.entry50, %if.entry45, %if.entry41, %if.entry37, %if.entry33, %if.entry29, %if.entry25, %if.entry21, %if.entry17, %if.entry13, %if.entry9, %if.entry5, %if.entry
  %common.ret.op = phi ptr [ %5, %if.entry ], [ %6, %if.entry5 ], [ %7, %if.entry9 ], [ %8, %if.entry13 ], [ %9, %if.entry17 ], [ %10, %if.entry21 ], [ %11, %if.entry25 ], [ %12, %if.entry29 ], [ %13, %if.entry33 ], [ %14, %if.entry37 ], [ %15, %if.entry41 ], [ %18, %if.entry45 ], [ %22, %if.entry50 ], [ %57, %for.end81 ], [ null, %ifend100 ], [ %99, %if.entry102 ], [ %43, %true_block ], [ %76, %true_block91 ], [ %42, %for.end ], [ %75, %if.entry88 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %5 = tail call ptr @LLVMVoidType()
  br label %common.ret

if.entry5:                                        ; preds = %3
  %6 = tail call ptr @LLVMInt1Type()
  br label %common.ret

if.entry9:                                        ; preds = %3
  %7 = tail call ptr @LLVMIntType(i64 4)
  br label %common.ret

if.entry13:                                       ; preds = %3
  %8 = tail call ptr @LLVMInt8Type()
  br label %common.ret

if.entry17:                                       ; preds = %3
  %9 = tail call ptr @LLVMInt16Type()
  br label %common.ret

if.entry21:                                       ; preds = %3
  %10 = tail call ptr @LLVMInt32Type()
  br label %common.ret

if.entry25:                                       ; preds = %3
  %11 = tail call ptr @LLVMIntType(i64 64)
  br label %common.ret

if.entry29:                                       ; preds = %3
  %12 = tail call ptr @LLVMInt64Type()
  br label %common.ret

if.entry33:                                       ; preds = %3
  %13 = tail call ptr @LLVMInt128Type()
  br label %common.ret

if.entry37:                                       ; preds = %3
  %14 = tail call ptr @LLVMFloatType()
  br label %common.ret

if.entry41:                                       ; preds = %3
  %15 = tail call ptr @LLVMDoubleType()
  br label %common.ret

if.entry45:                                       ; preds = %3
  %memberidx48 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %16 = load ptr, ptr %memberidx48, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %16, i1 true)
  %18 = tail call ptr @LLVMPointerType(ptr %17, i64 0)
  br label %common.ret

if.entry50:                                       ; preds = %3
  %memberidx53 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx53, align 8
  %20 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %19, i1 true)
  %memberidx54 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %21 = load i64, ptr %memberidx54, align 4
  %22 = tail call ptr @LLVMArrayType(ptr %20, i64 %21)
  br label %common.ret

if.entry56:                                       ; preds = %3
  %memberidx59 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 3
  %23 = load ptr, ptr %memberidx59, align 8
  %.pr = load i64, ptr %23, align 4
  br label %ifend58

ifend58:                                          ; preds = %3, %if.entry56
  %24 = phi i64 [ %4, %3 ], [ %.pr, %if.entry56 ]
  %tt.0 = phi ptr [ %1, %3 ], [ %23, %if.entry56 ]
  switch i64 %24, label %ifend86 [
    i64 16, label %if.entry60
    i64 15, label %if.entry71
    i64 11, label %if.entry84
  ]

if.entry60:                                       ; preds = %ifend58
  %memberidx63 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 1
  %25 = load ptr, ptr %memberidx63, align 8
  %memberidx64 = getelementptr inbounds %Array_Type_, ptr %25, i64 0, i32 1
  %26 = load i64, ptr %memberidx64, align 4
  %27 = alloca ptr, i64 %26, align 8
  %28 = tail call ptr @malloc(i32 25)
  %29 = load ptr, ptr %25, align 8
  %30 = load i64, ptr %memberidx64, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i168 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 1
  %memberidx2.i.i169 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i169, align 8
  %memberidx3.i.i170 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i170, align 4
  store i64 1, ptr %memberidx1.i.i168, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry60, %for.body
  %32 = phi i64 [ %36, %for.body ], [ 1, %if.entry60 ]
  %arg_ty.0194.in = phi ptr [ %37, %for.body ], [ %29, %if.entry60 ]
  %idx.0193 = phi i64 [ %33, %for.body ], [ 0, %if.entry60 ]
  %arg_ty.0194 = load ptr, ptr %arg_ty.0194.in, align 8
  %33 = add nuw nsw i64 %idx.0193, 1
  %34 = getelementptr inbounds ptr, ptr %27, i64 %idx.0193
  %35 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %arg_ty.0194, i1 true)
  store ptr %35, ptr %34, align 8
  %36 = add nuw nsw i64 %32, 1
  store i64 %36, ptr %memberidx1.i.i168, align 4
  %37 = getelementptr inbounds ptr, ptr %29, i64 %32
  %.not203 = icmp slt i64 %32, %30
  br i1 %.not203, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.entry60
  tail call void @free(ptr nonnull %28)
  %memberidx67 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 2
  %38 = load ptr, ptr %memberidx67, align 8
  %39 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %38, i1 true)
  %40 = load ptr, ptr %memberidx63, align 8
  %memberidx69 = getelementptr inbounds %Array_Type_, ptr %40, i64 0, i32 1
  %41 = load i64, ptr %memberidx69, align 4
  %42 = call ptr @LLVMFunctionType(ptr %39, ptr nonnull %27, i64 %41, i1 false)
  br i1 %2, label %true_block, label %common.ret

true_block:                                       ; preds = %for.end
  %43 = call ptr @LLVMPointerType(ptr %42, i64 0)
  br label %common.ret

if.entry71:                                       ; preds = %ifend58
  %memberidx74 = getelementptr inbounds %TupleType, ptr %tt.0, i64 0, i32 1
  %44 = load ptr, ptr %memberidx74, align 8
  %memberidx75 = getelementptr inbounds %Array_Type_, ptr %44, i64 0, i32 1
  %45 = load i64, ptr %memberidx75, align 4
  %46 = alloca ptr, i64 %45, align 8
  %47 = tail call ptr @malloc(i32 25)
  %48 = load ptr, ptr %44, align 8
  %49 = load i64, ptr %memberidx75, align 4
  store i1 false, ptr %47, align 1
  %memberidx1.i.i159 = getelementptr inbounds %ArrayIterator_Type_, ptr %47, i64 0, i32 1
  %memberidx2.i.i160 = getelementptr inbounds %ArrayIterator_Type_, ptr %47, i64 0, i32 3
  store ptr %48, ptr %memberidx2.i.i160, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Type_, ptr %47, i64 0, i32 2
  store i64 %49, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i159, align 4
  %50 = icmp slt i64 %49, 1
  br i1 %50, label %for.end81, label %for.body79

for.body79:                                       ; preds = %if.entry71, %for.body79
  %51 = phi i64 [ %55, %for.body79 ], [ 1, %if.entry71 ]
  %element_type2.0197.in = phi ptr [ %56, %for.body79 ], [ %48, %if.entry71 ]
  %idx1.0196 = phi i64 [ %52, %for.body79 ], [ 0, %if.entry71 ]
  %element_type2.0197 = load ptr, ptr %element_type2.0197.in, align 8
  %52 = add nuw nsw i64 %idx1.0196, 1
  %53 = getelementptr inbounds ptr, ptr %46, i64 %idx1.0196
  %54 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %element_type2.0197, i1 true)
  store ptr %54, ptr %53, align 8
  %55 = add nuw nsw i64 %51, 1
  store i64 %55, ptr %memberidx1.i.i159, align 4
  %56 = getelementptr inbounds ptr, ptr %48, i64 %51
  %.not202 = icmp slt i64 %51, %49
  br i1 %.not202, label %for.body79, label %for.end81

for.end81:                                        ; preds = %for.body79, %if.entry71
  %idx1.0.lcssa = phi i64 [ 0, %if.entry71 ], [ %52, %for.body79 ]
  tail call void @free(ptr nonnull %47)
  %57 = call ptr @LLVMStructType(ptr nonnull %46, i64 %idx1.0.lcssa, i1 false)
  br label %common.ret

if.entry84:                                       ; preds = %ifend58
  %memberidx87 = getelementptr inbounds %ObjectType, ptr %tt.0, i64 0, i32 1
  %58 = load ptr, ptr %memberidx87, align 8
  %59 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %58)
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %if.entry88

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry84
  %memberidx.i171 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %60 = load ptr, ptr %memberidx.i171, align 8
  %61 = load ptr, ptr %60, align 8
  %62 = load i64, ptr %58, align 4
  %63 = load ptr, ptr %61, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx2.i.i172 = getelementptr inbounds %Module, ptr %65, i64 0, i32 3
  %66 = load ptr, ptr %memberidx2.i.i172, align 8
  %memberidx3.i.i173 = getelementptr inbounds %TypeId, ptr %58, i64 0, i32 2
  %67 = load i64, ptr %memberidx3.i.i173, align 4
  %68 = load ptr, ptr %66, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %70)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %70)
  %71 = load ptr, ptr %70, align 8
  %72 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %71)
  %.not155 = icmp eq ptr %72, null
  br i1 %.not155, label %CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge, label %if.entry88

CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge: ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %.pre = load i64, ptr %tt.0, align 4
  br label %ifend86

ifend86:                                          ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge, %ifend58
  %73 = phi i64 [ %.pre, %CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge ], [ %24, %ifend58 ]
  %74 = icmp eq i64 %73, 12
  br i1 %74, label %if.entry98, label %ifend100

if.entry88:                                       ; preds = %if.entry84, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i188 = phi ptr [ %72, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %59, %if.entry84 ]
  %75 = load ptr, ptr %common.ret.op.i188, align 8
  br i1 %2, label %true_block91, label %common.ret

true_block91:                                     ; preds = %if.entry88
  %76 = tail call ptr @LLVMPointerType(ptr %75, i64 0)
  br label %common.ret

if.entry98:                                       ; preds = %ifend86
  %memberidx101 = getelementptr inbounds %EnumType, ptr %tt.0, i64 0, i32 1
  %77 = load ptr, ptr %memberidx101, align 8
  %78 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %77)
  %.not.i174 = icmp eq ptr %78, null
  br i1 %.not.i174, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %if.entry102

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry98
  %memberidx.i177 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %79 = load ptr, ptr %memberidx.i177, align 8
  %80 = load ptr, ptr %79, align 8
  %81 = load i64, ptr %77, align 4
  %82 = load ptr, ptr %80, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %memberidx2.i.i178 = getelementptr inbounds %Module, ptr %84, i64 0, i32 6
  %85 = load ptr, ptr %memberidx2.i.i178, align 8
  %memberidx3.i.i179 = getelementptr inbounds %TypeId, ptr %77, i64 0, i32 2
  %86 = load i64, ptr %memberidx3.i.i179, align 4
  %87 = load ptr, ptr %85, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %86
  %89 = load ptr, ptr %88, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %89)
  %90 = load ptr, ptr %89, align 8
  %91 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %90)
  %.not = icmp eq ptr %91, null
  br i1 %.not, label %ifend100, label %if.entry102

ifend100:                                         ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit, %ifend86
  %92 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %92, ptr noundef nonnull align 8 dereferenceable(32) @244, i64 32, i1 false)
  %93 = tail call ptr @malloc(i32 24)
  %94 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %94, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %95 = tail call ptr @malloc(i32 24)
  %96 = tail call i64 @write(i64 1, ptr %94, i64 7)
  tail call void @free(ptr %94)
  tail call void @free(ptr %95)
  %97 = tail call i64 @write(i64 1, ptr %92, i64 32)
  %98 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %92)
  tail call void @free(ptr %93)
  tail call void @exit(i64 -1)
  br label %common.ret

if.entry102:                                      ; preds = %if.entry98, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i175191 = phi ptr [ %91, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %78, %if.entry98 ]
  %99 = load ptr, ptr %common.ret.op.i175191, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_tuple_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 1
  %4 = load i1, ptr %memberidx, align 1
  br i1 %4, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  %5 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %5, ptr noundef nonnull align 8 dereferenceable(54) @257, i64 54, i1 false)
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %7, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %8 = tail call ptr @malloc(i32 24)
  %9 = tail call i64 @write(i64 1, ptr %7, i64 7)
  tail call void @free(ptr %7)
  tail call void @free(ptr %8)
  %10 = tail call i64 @write(i64 1, ptr %5, i64 54)
  %11 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %5)
  tail call void @free(ptr %6)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %memberidx1 = getelementptr inbounds %TupleExpression, ptr %2, i64 0, i32 4
  %12 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 1
  %13 = load i64, ptr %memberidx2, align 4
  %14 = alloca ptr, i64 %13, align 8
  %15 = tail call ptr @malloc(i32 25)
  %16 = load ptr, ptr %12, align 8
  %17 = load i64, ptr %memberidx2, align 4
  store i1 false, ptr %15, align 1
  %memberidx1.i.i12 = getelementptr inbounds %ArrayIterator_Expression_, ptr %15, i64 0, i32 1
  %memberidx2.i.i13 = getelementptr inbounds %ArrayIterator_Expression_, ptr %15, i64 0, i32 3
  store ptr %16, ptr %memberidx2.i.i13, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %15, i64 0, i32 2
  store i64 %17, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i12, align 4
  %18 = icmp slt i64 %17, 1
  br i1 %18, label %for.end, label %for.body

for.body:                                         ; preds = %ifend, %for.body
  %19 = phi i64 [ %23, %for.body ], [ 1, %ifend ]
  %value.020.in = phi ptr [ %24, %for.body ], [ %16, %ifend ]
  %idx.019 = phi i64 [ %20, %for.body ], [ 0, %ifend ]
  %value.020 = load ptr, ptr %value.020.in, align 8
  %20 = add nuw nsw i64 %idx.019, 1
  %21 = getelementptr inbounds ptr, ptr %14, i64 %idx.019
  %22 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.020)
  store ptr %22, ptr %21, align 8
  %23 = add nuw nsw i64 %19, 1
  store i64 %23, ptr %memberidx1.i.i12, align 4
  %24 = getelementptr inbounds ptr, ptr %16, i64 %19
  %.not = icmp slt i64 %19, %17
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  %idx.0.lcssa = phi i64 [ 0, %ifend ], [ %20, %for.body ]
  tail call void @free(ptr nonnull %15)
  %25 = call ptr @LLVMConstStruct(ptr nonnull %14, i64 %idx.0.lcssa, i1 false)
  ret ptr %25
}

define internal fastcc ptr @CodeGen_codegen_var_access_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %2, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %4)
  %memberidx1 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %6, i1 true)
  %8 = icmp eq ptr %5, null
  br i1 %8, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %9 = tail call ptr @malloc(i32 50)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %9, ptr noundef nonnull align 8 dereferenceable(50) @266, i64 50, i1 false)
  %10 = tail call ptr @malloc(i32 24)
  %11 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %11, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %12 = tail call ptr @malloc(i32 24)
  %13 = tail call i64 @write(i64 1, ptr %11, i64 7)
  tail call void @free(ptr %11)
  tail call void @free(ptr %12)
  %14 = tail call i64 @write(i64 1, ptr %9, i64 50)
  %15 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %9)
  tail call void @free(ptr %10)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %16 = load ptr, ptr %memberidx, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %common.ret, label %ifend6

common.ret:                                       ; preds = %ifend, %ifend10, %if.entry8
  %common.ret.op = phi ptr [ %20, %if.entry8 ], [ %21, %ifend10 ], [ %5, %ifend ]
  ret ptr %common.ret.op

ifend6:                                           ; preds = %ifend
  %memberidx7 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %19 = load i1, ptr %memberidx7, align 1
  br i1 %19, label %if.entry8, label %ifend10

if.entry8:                                        ; preds = %ifend6
  %20 = tail call ptr @LLVMGetInitializer(ptr %5)
  br label %common.ret

ifend10:                                          ; preds = %ifend6
  %21 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %7, ptr %5, ptr nonnull @80)
  br label %common.ret
}

define internal fastcc void @Map_String_uint__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_uint_, ptr %17, i64 0, i32 1
  %19 = load i64, ptr %memberidx19, align 4
  tail call fastcc void @Map_String_uint____setitem__(ptr nonnull %0, ptr %18, i64 %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_uint____setitem__(ptr nocapture %0, ptr %1, i64 %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_uint__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_uint__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_uint_, ptr %37, i64 0, i32 1
  store i64 %2, ptr %memberidx1.i, align 4
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_uint__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_codegen_match_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @LLVMAppendBasicBlock(ptr %4, ptr nonnull @271)
  %6 = load ptr, ptr %memberidx, align 8
  %7 = tail call ptr @LLVMAppendBasicBlock(ptr %6, ptr nonnull @272)
  %memberidx2 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 5
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx3, align 4
  %10 = add nuw i64 %9, 1
  %11 = alloca ptr, i64 %10, align 8
  %12 = alloca ptr, i64 %10, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx4, align 8
  %14 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %13, i1 true)
  %memberidx5 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 4
  %15 = load ptr, ptr %memberidx5, align 8
  %16 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %15)
  %memberidx6 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 7
  %17 = load i1, ptr %memberidx6, align 1
  br i1 %17, label %end, label %false_block

false_block:                                      ; preds = %3
  %18 = tail call ptr @LLVMBuildSwitch(ptr %1, ptr %16, ptr %5, i64 0)
  br label %end

end:                                              ; preds = %3, %false_block
  %ternary = phi ptr [ %18, %false_block ], [ null, %3 ]
  %19 = load ptr, ptr %memberidx2, align 8
  %20 = tail call ptr @malloc(i32 25)
  %21 = load ptr, ptr %19, align 8
  %memberidx1.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %19, i64 0, i32 1
  %22 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %20, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 3
  store ptr %21, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 2
  store i64 %22, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %23 = icmp slt i64 %22, 1
  br i1 %23, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %end
  %24 = icmp ne ptr %ternary, null
  %memberidx.i92 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %CodeGen_codegen_block.exit
  %25 = phi i64 [ 1, %for.body.lr.ph ], [ %69, %CodeGen_codegen_block.exit ]
  %case.0122.in = phi ptr [ %21, %for.body.lr.ph ], [ %70, %CodeGen_codegen_block.exit ]
  %curr_block.0121 = phi ptr [ null, %for.body.lr.ph ], [ %curr_block.1, %CodeGen_codegen_block.exit ]
  %idx.0120 = phi i64 [ 0, %for.body.lr.ph ], [ %67, %CodeGen_codegen_block.exit ]
  %case.0122 = load ptr, ptr %case.0122.in, align 8
  %.not88 = icmp eq ptr %curr_block.0121, null
  br i1 %.not88, label %ifend, label %if.entry

for.end:                                          ; preds = %CodeGen_codegen_block.exit, %end
  %idx.0.lcssa = phi i64 [ 0, %end ], [ %67, %CodeGen_codegen_block.exit ]
  tail call void @free(ptr nonnull %20)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %5)
  %26 = getelementptr inbounds ptr, ptr %11, i64 %idx.0.lcssa
  store ptr %5, ptr %26, align 8
  %27 = getelementptr inbounds ptr, ptr %12, i64 %idx.0.lcssa
  %memberidx24 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 6
  %28 = load ptr, ptr %memberidx24, align 8
  %memberidx.i94 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %29 = load i1, ptr %memberidx.i94, align 1
  store i1 false, ptr %memberidx.i94, align 1
  %30 = load ptr, ptr %28, align 8
  %31 = tail call ptr @malloc(i32 25)
  %32 = load ptr, ptr %30, align 8
  %memberidx1.i.i95 = getelementptr inbounds %Array_Statement_, ptr %30, i64 0, i32 1
  %33 = load i64, ptr %memberidx1.i.i95, align 4
  store i1 false, ptr %31, align 1
  %memberidx1.i.i.i96 = getelementptr inbounds %ArrayIterator_Statement_, ptr %31, i64 0, i32 1
  %memberidx2.i.i.i97 = getelementptr inbounds %ArrayIterator_Statement_, ptr %31, i64 0, i32 3
  store ptr %32, ptr %memberidx2.i.i.i97, align 8
  %memberidx3.i.i.i98 = getelementptr inbounds %ArrayIterator_Statement_, ptr %31, i64 0, i32 2
  store i64 %33, ptr %memberidx3.i.i.i98, align 4
  store i64 1, ptr %memberidx1.i.i.i96, align 4
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %for.end.i110, label %for.body.i107

for.body.i107:                                    ; preds = %for.end, %for.body.i107
  %35 = phi i64 [ %36, %for.body.i107 ], [ 1, %for.end ]
  %statement.0.i102115.in = phi ptr [ %37, %for.body.i107 ], [ %32, %for.end ]
  %statement.0.i102115 = load ptr, ptr %statement.0.i102115.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i102115)
  %36 = add nuw nsw i64 %35, 1
  store i64 %36, ptr %memberidx1.i.i.i96, align 4
  %37 = getelementptr inbounds ptr, ptr %32, i64 %35
  %.not130 = icmp slt i64 %35, %33
  br i1 %.not130, label %for.body.i107, label %for.end.i110

for.end.i110:                                     ; preds = %for.body.i107, %for.end
  tail call void @free(ptr nonnull %31)
  %memberidx4.i108 = getelementptr inbounds %Block, ptr %28, i64 0, i32 4
  %38 = load ptr, ptr %memberidx4.i108, align 8
  %.not.i109 = icmp eq ptr %38, null
  br i1 %.not.i109, label %CodeGen_codegen_block.exit113, label %if.entry.i111

if.entry.i111:                                    ; preds = %for.end.i110
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %38)
  br label %CodeGen_codegen_block.exit113

CodeGen_codegen_block.exit113:                    ; preds = %for.end.i110, %if.entry.i111
  %yields.0.i112 = phi ptr [ %39, %if.entry.i111 ], [ null, %for.end.i110 ]
  store i1 %29, ptr %memberidx.i94, align 1
  store ptr %yields.0.i112, ptr %27, align 8
  %40 = tail call ptr @LLVMBuildBr(ptr %1, ptr %7)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %7)
  %41 = load ptr, ptr %memberidx4, align 8
  %42 = load i64, ptr %41, align 4
  %.not = icmp eq i64 %42, 10
  br i1 %.not, label %common.ret, label %if.entry27

if.entry:                                         ; preds = %for.body
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr nonnull %curr_block.0121)
  br label %ifend

ifend:                                            ; preds = %for.body, %if.entry
  %43 = load ptr, ptr %memberidx, align 8
  %44 = tail call ptr @LLVMAppendBasicBlock(ptr %43, ptr nonnull @273)
  %45 = load i64, ptr %case.0122, align 4
  %46 = icmp eq i64 %45, 1
  %47 = and i1 %24, %46
  br i1 %47, label %if.entry11, label %else12

if.entry11:                                       ; preds = %ifend
  %memberidx14 = getelementptr inbounds %MatchExpressionCase, ptr %case.0122, i64 0, i32 1
  %48 = load ptr, ptr %memberidx14, align 8
  tail call fastcc void @CodeGen_codegen_match_case(ptr nonnull %0, ptr %1, ptr nonnull %ternary, ptr %48, ptr %44)
  br label %ifend13

else12:                                           ; preds = %ifend
  %49 = load ptr, ptr %memberidx2, align 8
  %memberidx19 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %49, i64 0, i32 1
  %50 = load i64, ptr %memberidx19, align 4
  %51 = add i64 %50, -1
  %52 = icmp eq i64 %idx.0120, %51
  br i1 %52, label %end17, label %false_block16

ifend13:                                          ; preds = %end17, %if.entry11
  %curr_block.1 = phi ptr [ %curr_block.0121, %if.entry11 ], [ %ternary21, %end17 ]
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %44)
  %memberidx23 = getelementptr inbounds %MatchExpressionCase, ptr %case.0122, i64 0, i32 2
  %53 = load ptr, ptr %memberidx23, align 8
  %54 = load i1, ptr %memberidx.i92, align 1
  store i1 false, ptr %memberidx.i92, align 1
  %55 = load ptr, ptr %53, align 8
  %56 = tail call ptr @malloc(i32 25)
  %57 = load ptr, ptr %55, align 8
  %memberidx1.i.i93 = getelementptr inbounds %Array_Statement_, ptr %55, i64 0, i32 1
  %58 = load i64, ptr %memberidx1.i.i93, align 4
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %56, i64 0, i32 1
  %59 = icmp slt i64 %58, 1
  br i1 %59, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %ifend13, %for.body.i
  %60 = phi i64 [ %61, %for.body.i ], [ 1, %ifend13 ]
  %statement.0.i117.in = phi ptr [ %62, %for.body.i ], [ %57, %ifend13 ]
  %statement.0.i117 = load ptr, ptr %statement.0.i117.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i117)
  %61 = add nuw nsw i64 %60, 1
  store i64 %61, ptr %memberidx1.i.i.i, align 4
  %62 = getelementptr inbounds ptr, ptr %57, i64 %60
  %.not128 = icmp slt i64 %60, %58
  br i1 %.not128, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %ifend13
  tail call void @free(ptr nonnull %56)
  %memberidx4.i = getelementptr inbounds %Block, ptr %53, i64 0, i32 4
  %63 = load ptr, ptr %memberidx4.i, align 8
  %.not.i = icmp eq ptr %63, null
  br i1 %.not.i, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %64 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %63)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  %yields.0.i = phi ptr [ %64, %if.entry.i ], [ null, %for.end.i ]
  store i1 %54, ptr %memberidx.i92, align 1
  %65 = tail call ptr @LLVMBuildBr(ptr %1, ptr %7)
  %66 = getelementptr inbounds ptr, ptr %11, i64 %idx.0120
  store ptr %44, ptr %66, align 8
  %67 = add nuw nsw i64 %idx.0120, 1
  %68 = getelementptr inbounds ptr, ptr %12, i64 %idx.0120
  store ptr %yields.0.i, ptr %68, align 8
  %69 = add nuw nsw i64 %25, 1
  store i64 %69, ptr %memberidx1.i.i, align 4
  %70 = getelementptr inbounds ptr, ptr %21, i64 %25
  %.not129 = icmp slt i64 %25, %22
  br i1 %.not129, label %for.body, label %for.end

false_block16:                                    ; preds = %else12
  %71 = load ptr, ptr %memberidx, align 8
  %72 = tail call ptr @LLVMAppendBasicBlock(ptr %71, ptr nonnull @274)
  br label %end17

end17:                                            ; preds = %else12, %false_block16
  %ternary21 = phi ptr [ %72, %false_block16 ], [ %5, %else12 ]
  %memberidx22 = getelementptr inbounds %MatchExpressionCase, ptr %case.0122, i64 0, i32 1
  %73 = load ptr, ptr %memberidx22, align 8
  %74 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %73)
  %75 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %74, ptr %44, ptr %ternary21)
  br label %ifend13

common.ret:                                       ; preds = %CodeGen_codegen_block.exit113, %if.entry27
  %common.ret.op = phi ptr [ %77, %if.entry27 ], [ null, %CodeGen_codegen_block.exit113 ]
  ret ptr %common.ret.op

if.entry27:                                       ; preds = %CodeGen_codegen_block.exit113
  %76 = add nuw nsw i64 %idx.0.lcssa, 1
  %77 = tail call ptr @LLVMBuildPhi(ptr %1, ptr %14, ptr nonnull @275)
  call void @LLVMAddIncoming(ptr %77, ptr nonnull %12, ptr nonnull %11, i64 %76)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = load ptr, ptr %1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %memberidx1 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = tail call ptr @malloc(i32 25)
  %12 = load ptr, ptr %10, align 8
  %memberidx1.i = getelementptr inbounds %Array_ClassMethod_, ptr %10, i64 0, i32 1
  %13 = load i64, ptr %memberidx1.i, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 3
  store ptr %12, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 2
  store i64 %13, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %14 = icmp slt i64 %13, 1
  %method.0267 = load ptr, ptr %12, align 8
  store i1 %14, ptr %11, align 1
  br i1 %14, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx5 = getelementptr inbounds %CGClassType, ptr %9, i64 0, i32 3
  %memberidx8 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %memberidx15 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx.i135 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %memberidx21 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx33 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %memberidx43 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %memberidx.i254 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %15 = phi i64 [ 1, %for.body.lr.ph ], [ %17, %for.incr ]
  %method.0268 = phi ptr [ %method.0267, %for.body.lr.ph ], [ %method.0, %for.incr ]
  %memberidx3 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 7
  %16 = load i1, ptr %memberidx3, align 1
  br i1 %16, label %for.incr, label %ifend

for.incr:                                         ; preds = %for.body, %CodeGen_codegen_block.exit
  %17 = add nuw nsw i64 %15, 1
  store i64 %17, ptr %memberidx1.i.i, align 4
  %18 = getelementptr inbounds ptr, ptr %12, i64 %15
  %19 = icmp sge i64 %15, %13
  %method.0 = load ptr, ptr %18, align 8
  store i1 %19, ptr %11, align 1
  br i1 %19, label %for.end, label %for.body

for.end:                                          ; preds = %for.incr, %for.entry
  tail call void @free(ptr nonnull %11)
  ret void

ifend:                                            ; preds = %for.body
  %20 = load ptr, ptr %method.0268, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  %memberidx.i96 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i96, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %22 = load i64, ptr %21, align 4
  %memberidx1.i.i97 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx1.i.i97, align 4
  %memberidx2.i.i98 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 2
  %24 = load i64, ptr %memberidx2.i.i98, align 4
  %25 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @243, i64 %22, i64 %23, i64 %24)
  %26 = load ptr, ptr %6, align 8
  %27 = call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 %25, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %28 = trunc i64 %25 to i32
  %29 = add i32 %28, 1
  %30 = call ptr @malloc(i32 %29)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr align 8 %26, i64 %25, i1 false)
  %31 = getelementptr inbounds i8, ptr %30, i64 %25
  store i8 0, ptr %31, align 1
  %32 = load i64, ptr %20, align 4
  %memberidx2.i99 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %33 = load i64, ptr %memberidx2.i99, align 4
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %7, ptr nonnull @259, ptr %30, i64 %32, i64 %33)
  %35 = load ptr, ptr %7, align 8
  %36 = call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  %37 = load ptr, ptr %memberidx5, align 8
  %38 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %36)
  %memberidx.i100 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %37, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i100, align 4
  %40 = urem i64 %38, %39
  %41 = load ptr, ptr %37, align 8
  %42 = getelementptr inbounds ptr, ptr %41, i64 %40
  %43 = load ptr, ptr %42, align 8
  %.not.i = icmp eq ptr %43, null
  br i1 %.not.i, label %while.end.i, label %while.entry.i

while.entry.i:                                    ; preds = %ifend, %else.i
  %44 = phi ptr [ %56, %else.i ], [ %41, %ifend ]
  %45 = phi i64 [ %57, %else.i ], [ %39, %ifend ]
  %46 = phi ptr [ %61, %else.i ], [ %43, %ifend ]
  %hash.0.i = phi i64 [ %59, %else.i ], [ %40, %ifend ]
  %47 = load ptr, ptr %46, align 8
  %memberidx.i.i101 = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  %48 = load i64, ptr %memberidx.i.i101, align 4
  %.not.i.i = icmp eq i64 %48, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %49 = load ptr, ptr %47, align 8
  %50 = call i64 @memcmp(ptr %49, ptr %35, i64 %34)
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i100, align 4
  %.pre269 = load ptr, ptr %37, align 8
  br label %else.i

while.end.i:                                      ; preds = %else.i, %ifend.i.i, %ifend
  %memberidx6 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 3
  %52 = load ptr, ptr %memberidx6, align 8
  %53 = call ptr @malloc(i32 11)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %53, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %54 = call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i.i103 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i103, align 4
  %memberidx2.i.i104 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i104, align 4
  %memberidx.i105 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i105, align 4
  %.not.i107 = icmp eq i64 %55, 11
  br i1 %.not.i107, label %ifend.i, label %String___eq__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %56 = phi ptr [ %.pre269, %ifend.i.i.else.i_crit_edge ], [ %44, %while.entry.i ]
  %57 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %45, %while.entry.i ]
  %58 = add nuw i64 %hash.0.i, 1
  %59 = urem i64 %58, %57
  %60 = getelementptr inbounds ptr, ptr %56, i64 %59
  %61 = load ptr, ptr %60, align 8
  %.not26.i = icmp eq ptr %61, null
  br i1 %.not26.i, label %while.end.i, label %while.entry.i

ifend.i:                                          ; preds = %while.end.i
  %62 = load ptr, ptr %52, align 8
  %63 = call i64 @memcmp(ptr %62, ptr nonnull %53, i64 11)
  %64 = icmp eq i64 %63, 0
  br label %String___eq__.exit

String___eq__.exit:                               ; preds = %while.end.i, %ifend.i
  %common.ret.op.i108 = phi i1 [ %64, %ifend.i ], [ false, %while.end.i ]
  %65 = load ptr, ptr %0, align 8
  %66 = load ptr, ptr %memberidx8, align 8
  %memberidx.i109 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  %67 = load i64, ptr %memberidx.i109, align 4
  %68 = trunc i64 %67 to i32
  %69 = add i32 %68, 1
  %70 = call ptr @malloc(i32 %69)
  %71 = load ptr, ptr %66, align 8
  %72 = load i64, ptr %memberidx.i109, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %70, ptr align 8 %71, i64 %72, i1 false)
  %73 = getelementptr inbounds i8, ptr %70, i64 %72
  store i8 0, ptr %73, align 1
  %74 = load ptr, ptr %memberidx6, align 8
  %memberidx.i110 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i110, align 4
  %76 = trunc i64 %75 to i32
  %77 = add i32 %76, 1
  %78 = call ptr @malloc(i32 %77)
  %79 = load ptr, ptr %74, align 8
  %80 = load i64, ptr %memberidx.i110, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %78, ptr align 8 %79, i64 %80, i1 false)
  %81 = getelementptr inbounds i8, ptr %78, i64 %80
  store i8 0, ptr %81, align 1
  %82 = alloca ptr, align 8
  %83 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %82, ptr nonnull @104, ptr %70, ptr %78)
  %84 = load ptr, ptr %82, align 8
  %85 = tail call ptr @malloc(i32 24)
  store ptr %84, ptr %85, align 8
  %memberidx1.i111 = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  store i64 %83, ptr %memberidx1.i111, align 4
  %memberidx2.i112 = getelementptr inbounds %String, ptr %85, i64 0, i32 2
  store i64 %83, ptr %memberidx2.i112, align 4
  tail call void @free(ptr %70)
  tail call void @free(ptr %78)
  %86 = trunc i64 %83 to i32
  %87 = add i32 %86, 1
  %88 = call ptr @malloc(i32 %87)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %88, ptr align 8 %84, i64 %83, i1 false)
  %89 = getelementptr inbounds i8, ptr %88, i64 %83
  store i8 0, ptr %89, align 1
  %90 = call ptr @LLVMGetNamedFunction(ptr %65, ptr %88)
  %91 = call ptr @LLVMAppendBasicBlock(ptr %90, ptr nonnull @80)
  %92 = call ptr @LLVMCreateBuilder()
  call void @LLVMPositionBuilderAtEnd(ptr %92, ptr %91)
  %memberidx10 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 8
  %93 = load ptr, ptr %memberidx10, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nonnull %0, ptr %92, ptr %93)
  %memberidx11 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 1
  %94 = load i1, ptr %memberidx11, align 1
  br i1 %94, label %for.entry34, label %if.entry12

if.entry12:                                       ; preds = %String___eq__.exit
  %95 = call ptr @LLVMGetParam(ptr %90, i64 0)
  %96 = load ptr, ptr %memberidx15, align 8
  %97 = load ptr, ptr %memberidx10, align 8
  %98 = load ptr, ptr %96, align 8
  %99 = load i64, ptr %97, align 4
  %100 = load ptr, ptr %98, align 8
  %101 = getelementptr inbounds ptr, ptr %100, i64 %99
  %102 = load ptr, ptr %101, align 8
  %memberidx2.i114 = getelementptr inbounds %Module, ptr %102, i64 0, i32 7
  %103 = load ptr, ptr %memberidx2.i114, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %97, i64 0, i32 1
  %104 = load i64, ptr %memberidx3.i, align 4
  %105 = load ptr, ptr %103, align 8
  %106 = getelementptr inbounds ptr, ptr %105, i64 %104
  %107 = load ptr, ptr %106, align 8
  %memberidx17 = getelementptr inbounds %Scope, ptr %107, i64 0, i32 1
  %108 = load ptr, ptr %memberidx17, align 8
  %109 = call ptr @malloc(i32 4)
  store i32 1936287860, ptr %109, align 8
  %110 = call ptr @malloc(i32 24)
  store ptr %109, ptr %110, align 8
  %memberidx1.i.i115 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i115, align 4
  %memberidx2.i.i116 = getelementptr inbounds %String, ptr %110, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i116, align 4
  %111 = call fastcc i64 @Map_String_VarId__hash_fnc(ptr nonnull %110)
  %memberidx.i117 = getelementptr inbounds %Map_String_VarId_, ptr %108, i64 0, i32 1
  %112 = load i64, ptr %memberidx.i117, align 4
  %113 = urem i64 %111, %112
  %114 = load ptr, ptr %108, align 8
  %115 = getelementptr inbounds ptr, ptr %114, i64 %113
  br label %while.entry.i123

while.entry.i123:                                 ; preds = %else.i131, %if.entry12
  %.sink314 = phi ptr [ %142, %else.i131 ], [ %115, %if.entry12 ]
  %116 = phi ptr [ %138, %else.i131 ], [ %114, %if.entry12 ]
  %117 = phi i64 [ %139, %else.i131 ], [ %112, %if.entry12 ]
  %hash.0.i119 = phi i64 [ %141, %else.i131 ], [ %113, %if.entry12 ]
  %118 = load ptr, ptr %.sink314, align 8, !nonnull !0
  %119 = load ptr, ptr %118, align 8
  %memberidx.i.i120 = getelementptr inbounds %String, ptr %119, i64 0, i32 1
  %120 = load i64, ptr %memberidx.i.i120, align 4
  %.not.i.i122 = icmp eq i64 %120, 4
  br i1 %.not.i.i122, label %ifend.i.i124, label %else.i131

ifend.i.i124:                                     ; preds = %while.entry.i123
  %121 = load ptr, ptr %119, align 8
  %122 = call i64 @memcmp(ptr %121, ptr nonnull %109, i64 4)
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %ifend.i.i124.while.end.i129.loopexit_crit_edge, label %ifend.i.i124.else.i131_crit_edge

ifend.i.i124.while.end.i129.loopexit_crit_edge:   ; preds = %ifend.i.i124
  %.pre272.pre = load ptr, ptr %108, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre272.pre, i64 %hash.0.i119
  %.pre273.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %memberidx11.i133 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre273.pre, i64 0, i32 1
  %124 = load ptr, ptr %memberidx11.i133, align 8
  %125 = load ptr, ptr %memberidx.i135, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %memberidx.i.i136 = getelementptr inbounds %VarId, ptr %124, i64 0, i32 1
  %126 = load i64, ptr %memberidx.i.i136, align 4
  %127 = load i64, ptr %124, align 4
  %memberidx2.i.i137 = getelementptr inbounds %VarId, ptr %124, i64 0, i32 2
  %128 = load i64, ptr %memberidx2.i.i137, align 4
  %129 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %126, i64 %127, i64 %128)
  %130 = load ptr, ptr %5, align 8
  %131 = call ptr @malloc(i32 24)
  store ptr %130, ptr %131, align 8
  %memberidx1.i.i.i138 = getelementptr inbounds %String, ptr %131, i64 0, i32 1
  store i64 %129, ptr %memberidx1.i.i.i138, align 4
  %memberidx2.i.i.i139 = getelementptr inbounds %String, ptr %131, i64 0, i32 2
  store i64 %129, ptr %memberidx2.i.i.i139, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %132 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %131)
  %memberidx.i183 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %125, i64 0, i32 1
  %133 = load i64, ptr %memberidx.i183, align 4
  %134 = urem i64 %132, %133
  %135 = load ptr, ptr %125, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %134
  %137 = load ptr, ptr %136, align 8
  %.not.i184 = icmp eq ptr %137, null
  br i1 %.not.i184, label %Map_String_LLVMValueRef____getitem__.exit201, label %while.entry.i189

ifend.i.i124.else.i131_crit_edge:                 ; preds = %ifend.i.i124
  %.pre270 = load i64, ptr %memberidx.i117, align 4
  %.pre271 = load ptr, ptr %108, align 8
  br label %else.i131

else.i131:                                        ; preds = %ifend.i.i124.else.i131_crit_edge, %while.entry.i123
  %138 = phi ptr [ %.pre271, %ifend.i.i124.else.i131_crit_edge ], [ %116, %while.entry.i123 ]
  %139 = phi i64 [ %.pre270, %ifend.i.i124.else.i131_crit_edge ], [ %117, %while.entry.i123 ]
  %140 = add nuw i64 %hash.0.i119, 1
  %141 = urem i64 %140, %139
  %142 = getelementptr inbounds ptr, ptr %138, i64 %141
  br label %while.entry.i123

while.entry.i189:                                 ; preds = %ifend.i.i124.while.end.i129.loopexit_crit_edge, %else.i197
  %143 = phi ptr [ %151, %else.i197 ], [ %135, %ifend.i.i124.while.end.i129.loopexit_crit_edge ]
  %144 = phi i64 [ %152, %else.i197 ], [ %133, %ifend.i.i124.while.end.i129.loopexit_crit_edge ]
  %145 = phi ptr [ %156, %else.i197 ], [ %137, %ifend.i.i124.while.end.i129.loopexit_crit_edge ]
  %hash.0.i185 = phi i64 [ %154, %else.i197 ], [ %134, %ifend.i.i124.while.end.i129.loopexit_crit_edge ]
  %146 = load ptr, ptr %145, align 8
  %memberidx.i.i186 = getelementptr inbounds %String, ptr %146, i64 0, i32 1
  %147 = load i64, ptr %memberidx.i.i186, align 4
  %.not.i.i188 = icmp eq i64 %147, %129
  br i1 %.not.i.i188, label %ifend.i.i190, label %else.i197

ifend.i.i190:                                     ; preds = %while.entry.i189
  %148 = load ptr, ptr %146, align 8
  %149 = call i64 @memcmp(ptr %148, ptr %130, i64 %129)
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %while.end.i195, label %ifend.i.i190.else.i197_crit_edge

ifend.i.i190.else.i197_crit_edge:                 ; preds = %ifend.i.i190
  %.pre274 = load i64, ptr %memberidx.i183, align 4
  %.pre275 = load ptr, ptr %125, align 8
  br label %else.i197

while.end.i195:                                   ; preds = %ifend.i.i190
  %.pre276.pre = load ptr, ptr %125, align 8
  %.phi.trans.insert277.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre276.pre, i64 %hash.0.i185
  %.pre278.pre = load ptr, ptr %.phi.trans.insert277.phi.trans.insert, align 8
  %.not25.i194 = icmp eq ptr %.pre278.pre, null
  br i1 %.not25.i194, label %Map_String_LLVMValueRef____getitem__.exit201, label %if.entry7.i200

else.i197:                                        ; preds = %ifend.i.i190.else.i197_crit_edge, %while.entry.i189
  %151 = phi ptr [ %.pre275, %ifend.i.i190.else.i197_crit_edge ], [ %143, %while.entry.i189 ]
  %152 = phi i64 [ %.pre274, %ifend.i.i190.else.i197_crit_edge ], [ %144, %while.entry.i189 ]
  %153 = add nuw i64 %hash.0.i185, 1
  %154 = urem i64 %153, %152
  %155 = getelementptr inbounds ptr, ptr %151, i64 %154
  %156 = load ptr, ptr %155, align 8
  %.not26.i196 = icmp eq ptr %156, null
  br i1 %.not26.i196, label %Map_String_LLVMValueRef____getitem__.exit201, label %while.entry.i189

if.entry7.i200:                                   ; preds = %while.end.i195
  %memberidx11.i199 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre278.pre, i64 0, i32 1
  %157 = load ptr, ptr %memberidx11.i199, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit201

Map_String_LLVMValueRef____getitem__.exit201:     ; preds = %else.i197, %ifend.i.i124.while.end.i129.loopexit_crit_edge, %while.end.i195, %if.entry7.i200
  %common.ret.op.i198 = phi ptr [ %157, %if.entry7.i200 ], [ null, %while.end.i195 ], [ null, %ifend.i.i124.while.end.i129.loopexit_crit_edge ], [ null, %else.i197 ]
  %158 = call ptr @LLVMBuildStore(ptr %92, ptr %95, ptr %common.ret.op.i198)
  br i1 %common.ret.op.i108, label %if.entry18, label %for.entry34

if.entry18:                                       ; preds = %Map_String_LLVMValueRef____getitem__.exit201
  %159 = load ptr, ptr %memberidx21, align 8
  %.not = icmp eq ptr %159, null
  br i1 %.not, label %for.entry34, label %if.entry22

if.entry22:                                       ; preds = %if.entry18
  %160 = load ptr, ptr %memberidx15, align 8
  %161 = load ptr, ptr %memberidx10, align 8
  %162 = load ptr, ptr %160, align 8
  %163 = load i64, ptr %161, align 4
  %164 = load ptr, ptr %162, align 8
  %165 = getelementptr inbounds ptr, ptr %164, i64 %163
  %166 = load ptr, ptr %165, align 8
  %memberidx2.i140 = getelementptr inbounds %Module, ptr %166, i64 0, i32 7
  %167 = load ptr, ptr %memberidx2.i140, align 8
  %memberidx3.i141 = getelementptr inbounds %ScopeId, ptr %161, i64 0, i32 1
  %168 = load i64, ptr %memberidx3.i141, align 4
  %169 = load ptr, ptr %167, align 8
  %170 = getelementptr inbounds ptr, ptr %169, i64 %168
  %171 = load ptr, ptr %170, align 8
  %memberidx27 = getelementptr inbounds %Scope, ptr %171, i64 0, i32 1
  %172 = load ptr, ptr %memberidx27, align 8
  %173 = call ptr @malloc(i32 5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %173, ptr noundef nonnull align 8 dereferenceable(5) @153, i64 5, i1 false)
  %174 = call ptr @malloc(i32 24)
  store ptr %173, ptr %174, align 8
  %memberidx1.i.i142 = getelementptr inbounds %String, ptr %174, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i142, align 4
  %memberidx2.i.i143 = getelementptr inbounds %String, ptr %174, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i143, align 4
  %175 = call fastcc i64 @Map_String_VarId__hash_fnc(ptr nonnull %174)
  %memberidx.i144 = getelementptr inbounds %Map_String_VarId_, ptr %172, i64 0, i32 1
  %176 = load i64, ptr %memberidx.i144, align 4
  %177 = urem i64 %175, %176
  %178 = load ptr, ptr %172, align 8
  %179 = getelementptr inbounds ptr, ptr %178, i64 %177
  %180 = load ptr, ptr %179, align 8
  %.not.i145 = icmp eq ptr %180, null
  br i1 %.not.i145, label %for.entry34, label %while.entry.i150

while.entry.i150:                                 ; preds = %if.entry22, %else.i158
  %181 = phi ptr [ %189, %else.i158 ], [ %178, %if.entry22 ]
  %182 = phi i64 [ %190, %else.i158 ], [ %176, %if.entry22 ]
  %183 = phi ptr [ %194, %else.i158 ], [ %180, %if.entry22 ]
  %hash.0.i146 = phi i64 [ %192, %else.i158 ], [ %177, %if.entry22 ]
  %184 = load ptr, ptr %183, align 8
  %memberidx.i.i147 = getelementptr inbounds %String, ptr %184, i64 0, i32 1
  %185 = load i64, ptr %memberidx.i.i147, align 4
  %.not.i.i149 = icmp eq i64 %185, 5
  br i1 %.not.i.i149, label %ifend.i.i151, label %else.i158

ifend.i.i151:                                     ; preds = %while.entry.i150
  %186 = load ptr, ptr %184, align 8
  %187 = call i64 @memcmp(ptr %186, ptr %173, i64 5)
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %while.end.i156, label %ifend.i.i151.else.i158_crit_edge

ifend.i.i151.else.i158_crit_edge:                 ; preds = %ifend.i.i151
  %.pre279 = load i64, ptr %memberidx.i144, align 4
  %.pre280 = load ptr, ptr %172, align 8
  br label %else.i158

while.end.i156:                                   ; preds = %ifend.i.i151
  %.pre281.pre = load ptr, ptr %172, align 8
  %.phi.trans.insert282.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre281.pre, i64 %hash.0.i146
  %.pre283.pre = load ptr, ptr %.phi.trans.insert282.phi.trans.insert, align 8
  %.not25.i155 = icmp eq ptr %.pre283.pre, null
  br i1 %.not25.i155, label %for.entry34, label %Map_String_VarId____getitem__.exit162

else.i158:                                        ; preds = %ifend.i.i151.else.i158_crit_edge, %while.entry.i150
  %189 = phi ptr [ %.pre280, %ifend.i.i151.else.i158_crit_edge ], [ %181, %while.entry.i150 ]
  %190 = phi i64 [ %.pre279, %ifend.i.i151.else.i158_crit_edge ], [ %182, %while.entry.i150 ]
  %191 = add nuw i64 %hash.0.i146, 1
  %192 = urem i64 %191, %190
  %193 = getelementptr inbounds ptr, ptr %189, i64 %192
  %194 = load ptr, ptr %193, align 8
  %.not26.i157 = icmp eq ptr %194, null
  br i1 %.not26.i157, label %for.entry34, label %while.entry.i150

Map_String_VarId____getitem__.exit162:            ; preds = %while.end.i156
  %memberidx11.i160 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre283.pre, i64 0, i32 1
  %195 = load ptr, ptr %memberidx11.i160, align 8
  %.not92 = icmp eq ptr %195, null
  br i1 %.not92, label %for.entry34, label %if.entry28

if.entry28:                                       ; preds = %Map_String_VarId____getitem__.exit162
  %memberidx31 = getelementptr inbounds %ObjectType, ptr %159, i64 0, i32 1
  %196 = load ptr, ptr %memberidx31, align 8
  %197 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %196)
  %.not.i177 = icmp eq ptr %197, null
  br i1 %.not.i177, label %ifend.i182, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i182:                                       ; preds = %if.entry28
  %198 = load ptr, ptr %memberidx15, align 8
  %199 = load ptr, ptr %198, align 8
  %200 = load i64, ptr %196, align 4
  %201 = load ptr, ptr %199, align 8
  %202 = getelementptr inbounds ptr, ptr %201, i64 %200
  %203 = load ptr, ptr %202, align 8
  %memberidx2.i.i180 = getelementptr inbounds %Module, ptr %203, i64 0, i32 3
  %204 = load ptr, ptr %memberidx2.i.i180, align 8
  %memberidx3.i.i181 = getelementptr inbounds %TypeId, ptr %196, i64 0, i32 2
  %205 = load i64, ptr %memberidx3.i.i181, align 4
  %206 = load ptr, ptr %204, align 8
  %207 = getelementptr inbounds ptr, ptr %206, i64 %205
  %208 = load ptr, ptr %207, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %208)
  call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %208)
  %209 = load ptr, ptr %208, align 8
  %210 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %209)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry28, %ifend.i182
  %common.ret.op.i178 = phi ptr [ %210, %ifend.i182 ], [ %197, %if.entry28 ]
  %memberidx32 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i178, i64 0, i32 4
  %211 = load ptr, ptr %memberidx32, align 8
  %212 = load ptr, ptr %memberidx.i135, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i.i164 = getelementptr inbounds %VarId, ptr %195, i64 0, i32 1
  %213 = load i64, ptr %memberidx.i.i164, align 4
  %214 = load i64, ptr %195, align 4
  %memberidx2.i.i165 = getelementptr inbounds %VarId, ptr %195, i64 0, i32 2
  %215 = load i64, ptr %memberidx2.i.i165, align 4
  %216 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %213, i64 %214, i64 %215)
  %217 = load ptr, ptr %4, align 8
  %218 = call ptr @malloc(i32 24)
  store ptr %217, ptr %218, align 8
  %memberidx1.i.i.i166 = getelementptr inbounds %String, ptr %218, i64 0, i32 1
  store i64 %216, ptr %memberidx1.i.i.i166, align 4
  %memberidx2.i.i.i167 = getelementptr inbounds %String, ptr %218, i64 0, i32 2
  store i64 %216, ptr %memberidx2.i.i.i167, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %219 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %218)
  %memberidx.i202 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %212, i64 0, i32 1
  %220 = load i64, ptr %memberidx.i202, align 4
  %221 = urem i64 %219, %220
  %222 = load ptr, ptr %212, align 8
  %223 = getelementptr inbounds ptr, ptr %222, i64 %221
  %224 = load ptr, ptr %223, align 8
  %.not.i203 = icmp eq ptr %224, null
  br i1 %.not.i203, label %Map_String_LLVMValueRef____getitem__.exit220, label %while.entry.i208

while.entry.i208:                                 ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit, %else.i216
  %225 = phi ptr [ %233, %else.i216 ], [ %222, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %226 = phi i64 [ %234, %else.i216 ], [ %220, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %227 = phi ptr [ %238, %else.i216 ], [ %224, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %hash.0.i204 = phi i64 [ %236, %else.i216 ], [ %221, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %228 = load ptr, ptr %227, align 8
  %memberidx.i.i205 = getelementptr inbounds %String, ptr %228, i64 0, i32 1
  %229 = load i64, ptr %memberidx.i.i205, align 4
  %.not.i.i207 = icmp eq i64 %229, %216
  br i1 %.not.i.i207, label %ifend.i.i209, label %else.i216

ifend.i.i209:                                     ; preds = %while.entry.i208
  %230 = load ptr, ptr %228, align 8
  %231 = call i64 @memcmp(ptr %230, ptr %217, i64 %216)
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %while.end.i214, label %ifend.i.i209.else.i216_crit_edge

ifend.i.i209.else.i216_crit_edge:                 ; preds = %ifend.i.i209
  %.pre284 = load i64, ptr %memberidx.i202, align 4
  %.pre285 = load ptr, ptr %212, align 8
  br label %else.i216

while.end.i214:                                   ; preds = %ifend.i.i209
  %.pre286.pre = load ptr, ptr %212, align 8
  %.phi.trans.insert287.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre286.pre, i64 %hash.0.i204
  %.pre288.pre = load ptr, ptr %.phi.trans.insert287.phi.trans.insert, align 8
  %.not25.i213 = icmp eq ptr %.pre288.pre, null
  br i1 %.not25.i213, label %Map_String_LLVMValueRef____getitem__.exit220, label %if.entry7.i219

else.i216:                                        ; preds = %ifend.i.i209.else.i216_crit_edge, %while.entry.i208
  %233 = phi ptr [ %.pre285, %ifend.i.i209.else.i216_crit_edge ], [ %225, %while.entry.i208 ]
  %234 = phi i64 [ %.pre284, %ifend.i.i209.else.i216_crit_edge ], [ %226, %while.entry.i208 ]
  %235 = add nuw i64 %hash.0.i204, 1
  %236 = urem i64 %235, %234
  %237 = getelementptr inbounds ptr, ptr %233, i64 %236
  %238 = load ptr, ptr %237, align 8
  %.not26.i215 = icmp eq ptr %238, null
  br i1 %.not26.i215, label %Map_String_LLVMValueRef____getitem__.exit220, label %while.entry.i208

if.entry7.i219:                                   ; preds = %while.end.i214
  %memberidx11.i218 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre288.pre, i64 0, i32 1
  %239 = load ptr, ptr %memberidx11.i218, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit220

Map_String_LLVMValueRef____getitem__.exit220:     ; preds = %else.i216, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i214, %if.entry7.i219
  %common.ret.op.i217 = phi ptr [ %239, %if.entry7.i219 ], [ null, %while.end.i214 ], [ null, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ null, %else.i216 ]
  %240 = call ptr @LLVMBuildStore(ptr %92, ptr %211, ptr %common.ret.op.i217)
  %241 = load ptr, ptr %memberidx33, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %242 = load i64, ptr %memberidx.i.i164, align 4
  %243 = load i64, ptr %195, align 4
  %244 = load i64, ptr %memberidx2.i.i165, align 4
  %245 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %242, i64 %243, i64 %244)
  %246 = load ptr, ptr %3, align 8
  %247 = call ptr @malloc(i32 24)
  store ptr %246, ptr %247, align 8
  %memberidx1.i.i170 = getelementptr inbounds %String, ptr %247, i64 0, i32 1
  store i64 %245, ptr %memberidx1.i.i170, align 4
  %memberidx2.i.i171 = getelementptr inbounds %String, ptr %247, i64 0, i32 2
  store i64 %245, ptr %memberidx2.i.i171, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %241, ptr nonnull %247, ptr %95)
  br label %for.entry34

for.entry34:                                      ; preds = %else.i158, %if.entry22, %while.end.i156, %Map_String_LLVMValueRef____getitem__.exit201, %if.entry18, %Map_String_VarId____getitem__.exit162, %Map_String_LLVMValueRef____getitem__.exit220, %String___eq__.exit
  %offset.0 = phi i64 [ 0, %String___eq__.exit ], [ 1, %Map_String_LLVMValueRef____getitem__.exit220 ], [ 1, %Map_String_VarId____getitem__.exit162 ], [ 1, %if.entry18 ], [ 1, %Map_String_LLVMValueRef____getitem__.exit201 ], [ 1, %while.end.i156 ], [ 1, %if.entry22 ], [ 1, %else.i158 ]
  %memberidx39 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 6
  %248 = load ptr, ptr %memberidx39, align 8
  %memberidx40263 = getelementptr inbounds %Array_FunctionArg_, ptr %248, i64 0, i32 1
  %249 = load i64, ptr %memberidx40263, align 4
  %250 = icmp sgt i64 %249, 0
  br i1 %250, label %for.body36, label %for.end38

for.body36:                                       ; preds = %for.entry34, %Map_String_LLVMValueRef____getitem__.exit239
  %i.0264 = phi i64 [ %287, %Map_String_LLVMValueRef____getitem__.exit239 ], [ 0, %for.entry34 ]
  %251 = add nuw nsw i64 %i.0264, %offset.0
  %252 = call ptr @LLVMGetParam(ptr %90, i64 %251)
  %253 = load ptr, ptr %memberidx39, align 8
  %254 = load ptr, ptr %253, align 8
  %255 = getelementptr inbounds ptr, ptr %254, i64 %i.0264
  %256 = load ptr, ptr %255, align 8
  %memberidx42 = getelementptr inbounds %FunctionArg, ptr %256, i64 0, i32 4
  %257 = load ptr, ptr %memberidx42, align 8
  %258 = load ptr, ptr %memberidx.i135, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %memberidx.i.i173 = getelementptr inbounds %VarId, ptr %257, i64 0, i32 1
  %259 = load i64, ptr %memberidx.i.i173, align 4
  %260 = load i64, ptr %257, align 4
  %memberidx2.i.i174 = getelementptr inbounds %VarId, ptr %257, i64 0, i32 2
  %261 = load i64, ptr %memberidx2.i.i174, align 4
  %262 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @243, i64 %259, i64 %260, i64 %261)
  %263 = load ptr, ptr %2, align 8
  %264 = call ptr @malloc(i32 24)
  store ptr %263, ptr %264, align 8
  %memberidx1.i.i.i175 = getelementptr inbounds %String, ptr %264, i64 0, i32 1
  store i64 %262, ptr %memberidx1.i.i.i175, align 4
  %memberidx2.i.i.i176 = getelementptr inbounds %String, ptr %264, i64 0, i32 2
  store i64 %262, ptr %memberidx2.i.i.i176, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  %265 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %264)
  %memberidx.i221 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %258, i64 0, i32 1
  %266 = load i64, ptr %memberidx.i221, align 4
  %267 = urem i64 %265, %266
  %268 = load ptr, ptr %258, align 8
  %269 = getelementptr inbounds ptr, ptr %268, i64 %267
  %270 = load ptr, ptr %269, align 8
  %.not.i222 = icmp eq ptr %270, null
  br i1 %.not.i222, label %Map_String_LLVMValueRef____getitem__.exit239, label %while.entry.i227

while.entry.i227:                                 ; preds = %for.body36, %else.i235
  %271 = phi ptr [ %279, %else.i235 ], [ %268, %for.body36 ]
  %272 = phi i64 [ %280, %else.i235 ], [ %266, %for.body36 ]
  %273 = phi ptr [ %284, %else.i235 ], [ %270, %for.body36 ]
  %hash.0.i223 = phi i64 [ %282, %else.i235 ], [ %267, %for.body36 ]
  %274 = load ptr, ptr %273, align 8
  %memberidx.i.i224 = getelementptr inbounds %String, ptr %274, i64 0, i32 1
  %275 = load i64, ptr %memberidx.i.i224, align 4
  %.not.i.i226 = icmp eq i64 %275, %262
  br i1 %.not.i.i226, label %ifend.i.i228, label %else.i235

ifend.i.i228:                                     ; preds = %while.entry.i227
  %276 = load ptr, ptr %274, align 8
  %277 = call i64 @memcmp(ptr %276, ptr %263, i64 %262)
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %while.end.i233, label %ifend.i.i228.else.i235_crit_edge

ifend.i.i228.else.i235_crit_edge:                 ; preds = %ifend.i.i228
  %.pre289 = load i64, ptr %memberidx.i221, align 4
  %.pre290 = load ptr, ptr %258, align 8
  br label %else.i235

while.end.i233:                                   ; preds = %ifend.i.i228
  %.pre291.pre = load ptr, ptr %258, align 8
  %.phi.trans.insert292.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre291.pre, i64 %hash.0.i223
  %.pre293.pre = load ptr, ptr %.phi.trans.insert292.phi.trans.insert, align 8
  %.not25.i232 = icmp eq ptr %.pre293.pre, null
  br i1 %.not25.i232, label %Map_String_LLVMValueRef____getitem__.exit239, label %if.entry7.i238

else.i235:                                        ; preds = %ifend.i.i228.else.i235_crit_edge, %while.entry.i227
  %279 = phi ptr [ %.pre290, %ifend.i.i228.else.i235_crit_edge ], [ %271, %while.entry.i227 ]
  %280 = phi i64 [ %.pre289, %ifend.i.i228.else.i235_crit_edge ], [ %272, %while.entry.i227 ]
  %281 = add nuw i64 %hash.0.i223, 1
  %282 = urem i64 %281, %280
  %283 = getelementptr inbounds ptr, ptr %279, i64 %282
  %284 = load ptr, ptr %283, align 8
  %.not26.i234 = icmp eq ptr %284, null
  br i1 %.not26.i234, label %Map_String_LLVMValueRef____getitem__.exit239, label %while.entry.i227

if.entry7.i238:                                   ; preds = %while.end.i233
  %memberidx11.i237 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre293.pre, i64 0, i32 1
  %285 = load ptr, ptr %memberidx11.i237, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit239

Map_String_LLVMValueRef____getitem__.exit239:     ; preds = %else.i235, %for.body36, %while.end.i233, %if.entry7.i238
  %common.ret.op.i236 = phi ptr [ %285, %if.entry7.i238 ], [ null, %while.end.i233 ], [ null, %for.body36 ], [ null, %else.i235 ]
  %286 = call ptr @LLVMBuildStore(ptr %92, ptr %252, ptr %common.ret.op.i236)
  %287 = add nuw nsw i64 %i.0264, 1
  %288 = load ptr, ptr %memberidx39, align 8
  %memberidx40 = getelementptr inbounds %Array_FunctionArg_, ptr %288, i64 0, i32 1
  %289 = load i64, ptr %memberidx40, align 4
  %290 = icmp slt i64 %287, %289
  br i1 %290, label %for.body36, label %for.end38

for.end38:                                        ; preds = %Map_String_LLVMValueRef____getitem__.exit239, %for.entry34
  %291 = load ptr, ptr %memberidx43, align 8
  store ptr %90, ptr %memberidx43, align 8
  %memberidx45 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 5
  %292 = load ptr, ptr %memberidx45, align 8
  %293 = load i1, ptr %memberidx.i254, align 1
  store i1 false, ptr %memberidx.i254, align 1
  %294 = load ptr, ptr %292, align 8
  %295 = call ptr @malloc(i32 25)
  %296 = load ptr, ptr %294, align 8
  %memberidx1.i.i255 = getelementptr inbounds %Array_Statement_, ptr %294, i64 0, i32 1
  %297 = load i64, ptr %memberidx1.i.i255, align 4
  %memberidx1.i.i.i256 = getelementptr inbounds %ArrayIterator_Statement_, ptr %295, i64 0, i32 1
  %298 = icmp slt i64 %297, 1
  br i1 %298, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.end38, %for.body.i
  %299 = phi i64 [ %300, %for.body.i ], [ 1, %for.end38 ]
  %statement.0.i266.in = phi ptr [ %301, %for.body.i ], [ %296, %for.end38 ]
  %statement.0.i266 = load ptr, ptr %statement.0.i266.in, align 8
  call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %92, ptr %statement.0.i266)
  %300 = add nuw nsw i64 %299, 1
  store i64 %300, ptr %memberidx1.i.i.i256, align 4
  %301 = getelementptr inbounds ptr, ptr %296, i64 %299
  %.not304 = icmp slt i64 %299, %297
  br i1 %.not304, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %for.end38
  call void @free(ptr nonnull %295)
  %memberidx4.i = getelementptr inbounds %Block, ptr %292, i64 0, i32 4
  %302 = load ptr, ptr %memberidx4.i, align 8
  %.not.i259 = icmp eq ptr %302, null
  br i1 %.not.i259, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %303 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %92, ptr nonnull %302)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  store i1 %293, ptr %memberidx.i254, align 1
  store ptr %291, ptr %memberidx43, align 8
  call void @LLVMDisposeBuilder(ptr %92)
  br label %for.incr
}

define internal fastcc ptr @CodeGen_codegen_string_to_cstring(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %args = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Module, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = load i64, ptr %8, align 4
  %10 = getelementptr inbounds ptr, ptr %6, i64 %9
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 7
  %12 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %8, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx4 = getelementptr inbounds %Scope, ptr %16, i64 0, i32 2
  %17 = load ptr, ptr %memberidx4, align 8
  %18 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %18, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i25 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i25, align 4
  %memberidx2.i.i26 = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i26, align 4
  %20 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr nonnull %19)
  %memberidx.i18 = getelementptr inbounds %Map_String_ClassId_, ptr %17, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i18, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %17, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i = icmp eq ptr %25, null
  br i1 %.not.i, label %get_class_from_type.exit, label %while.entry.i

while.entry.i:                                    ; preds = %3, %else.i
  %26 = phi ptr [ %34, %else.i ], [ %23, %3 ]
  %27 = phi i64 [ %35, %else.i ], [ %21, %3 ]
  %28 = phi ptr [ %39, %else.i ], [ %25, %3 ]
  %hash.0.i = phi i64 [ %37, %else.i ], [ %22, %3 ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i19 = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i.i19, align 4
  %.not.i.i21 = icmp eq i64 %30, 6
  br i1 %.not.i.i21, label %ifend.i.i22, label %else.i

ifend.i.i22:                                      ; preds = %while.entry.i
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i64 @memcmp(ptr %31, ptr %18, i64 6)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %while.end.i, label %ifend.i.i22.else.i_crit_edge

ifend.i.i22.else.i_crit_edge:                     ; preds = %ifend.i.i22
  %.pre = load i64, ptr %memberidx.i18, align 4
  %.pre38 = load ptr, ptr %17, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i22
  %.pre39.pre = load ptr, ptr %17, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre39.pre, i64 %hash.0.i
  %.pre40.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre40.pre, null
  br i1 %.not25.i, label %get_class_from_type.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i22.else.i_crit_edge, %while.entry.i
  %34 = phi ptr [ %.pre38, %ifend.i.i22.else.i_crit_edge ], [ %26, %while.entry.i ]
  %35 = phi i64 [ %.pre, %ifend.i.i22.else.i_crit_edge ], [ %27, %while.entry.i ]
  %36 = add nuw i64 %hash.0.i, 1
  %37 = urem i64 %36, %35
  %38 = getelementptr inbounds ptr, ptr %34, i64 %37
  %39 = load ptr, ptr %38, align 8
  %.not26.i = icmp eq ptr %39, null
  br i1 %.not26.i, label %get_class_from_type.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_ClassId_, ptr %.pre40.pre, i64 0, i32 1
  %40 = load ptr, ptr %memberidx11.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %else.i, %3, %while.end.i, %if.entry7.i
  %common.ret.op.i24 = phi ptr [ %40, %if.entry7.i ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  %41 = alloca %ObjectType, align 8
  store i64 11, ptr %41, align 8
  %memberidx.i17 = getelementptr inbounds %ObjectType, ptr %41, i64 0, i32 1
  store ptr %common.ret.op.i24, ptr %memberidx.i17, align 8
  %42 = load ptr, ptr %memberidx, align 8
  %43 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %43, ptr noundef nonnull align 8 dereferenceable(10) @279, i64 10, i1 false)
  %44 = tail call ptr @malloc(i32 24)
  store ptr %43, ptr %44, align 8
  %memberidx1.i.i15 = getelementptr inbounds %String, ptr %44, i64 0, i32 1
  store i64 10, ptr %memberidx1.i.i15, align 4
  %memberidx2.i.i16 = getelementptr inbounds %String, ptr %44, i64 0, i32 2
  store i64 10, ptr %memberidx2.i.i16, align 4
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %41, i64 0, i32 1
  %45 = load ptr, ptr %memberidx6.i, align 8
  %46 = load ptr, ptr %42, align 8
  %47 = load i64, ptr %45, align 4
  %48 = load ptr, ptr %46, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %memberidx2.i.i32 = getelementptr inbounds %Module, ptr %50, i64 0, i32 3
  %51 = load ptr, ptr %memberidx2.i.i32, align 8
  %memberidx3.i.i33 = getelementptr inbounds %TypeId, ptr %45, i64 0, i32 2
  %52 = load i64, ptr %memberidx3.i.i33, align 4
  %53 = load ptr, ptr %51, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 %52
  %55 = load ptr, ptr %54, align 8
  %56 = icmp eq ptr %55, null
  br i1 %56, label %get_class_prop_type_with_name.exit, label %ifend.i

ifend.i:                                          ; preds = %get_class_from_type.exit
  %memberidx.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 6
  %57 = load ptr, ptr %memberidx.i, align 8
  %58 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %44)
  %memberidx.i.i = getelementptr inbounds %Map_String_PropId_, ptr %57, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i.i, align 4
  %60 = urem i64 %58, %59
  %61 = load ptr, ptr %57, align 8
  %62 = getelementptr inbounds ptr, ptr %61, i64 %60
  %63 = load ptr, ptr %62, align 8
  %.not.i.i = icmp eq ptr %63, null
  br i1 %.not.i.i, label %get_class_prop_type_with_name.exit, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %ifend.i, %else.i.i
  %64 = phi ptr [ %72, %else.i.i ], [ %61, %ifend.i ]
  %65 = phi i64 [ %73, %else.i.i ], [ %59, %ifend.i ]
  %66 = phi ptr [ %77, %else.i.i ], [ %63, %ifend.i ]
  %hash.0.i.i = phi i64 [ %75, %else.i.i ], [ %60, %ifend.i ]
  %67 = load ptr, ptr %66, align 8
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %67, i64 0, i32 1
  %68 = load i64, ptr %memberidx.i.i.i, align 4
  %.not.i.i.i = icmp eq i64 %68, 10
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %69 = load ptr, ptr %67, align 8
  %70 = tail call i64 @memcmp(ptr %69, ptr %43, i64 10)
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre42 = load i64, ptr %memberidx.i.i, align 4
  %.pre43 = load ptr, ptr %57, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre44.pre = load ptr, ptr %57, align 8
  %.phi.trans.insert45.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre44.pre, i64 %hash.0.i.i
  %.pre46.pre = load ptr, ptr %.phi.trans.insert45.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre46.pre, null
  br i1 %.not25.i.i, label %get_class_prop_type_with_name.exit, label %Map_String_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %72 = phi ptr [ %.pre43, %ifend.i.i.i.else.i.i_crit_edge ], [ %64, %while.entry.i.i ]
  %73 = phi i64 [ %.pre42, %ifend.i.i.i.else.i.i_crit_edge ], [ %65, %while.entry.i.i ]
  %74 = add nuw i64 %hash.0.i.i, 1
  %75 = urem i64 %74, %73
  %76 = getelementptr inbounds ptr, ptr %72, i64 %75
  %77 = load ptr, ptr %76, align 8
  %.not26.i.i = icmp eq ptr %77, null
  br i1 %.not26.i.i, label %get_class_prop_type_with_name.exit, label %while.entry.i.i

Map_String_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre46.pre, i64 0, i32 1
  %78 = load ptr, ptr %memberidx11.i.i, align 8
  %79 = icmp eq ptr %78, null
  br i1 %79, label %get_class_prop_type_with_name.exit, label %ifend3.i

ifend3.i:                                         ; preds = %Map_String_PropId____getitem__.exit.i
  %memberidx.i.i7.i = getelementptr inbounds %PropId, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %memberidx.i.i7.i, align 8
  %81 = load ptr, ptr %42, align 8
  %82 = load i64, ptr %80, align 4
  %83 = load ptr, ptr %81, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %85, i64 0, i32 3
  %86 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %80, i64 0, i32 2
  %87 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %88 = load ptr, ptr %86, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  %91 = load i64, ptr %78, align 4
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend3.i
  %memberidx1.i.i13 = getelementptr inbounds %Class, ptr %90, i64 0, i32 5
  %93 = load ptr, ptr %memberidx1.i.i13, align 8
  %memberidx2.i.i14 = getelementptr inbounds %PropId, ptr %78, i64 0, i32 2
  %94 = load i64, ptr %memberidx2.i.i14, align 4
  %95 = load ptr, ptr %93, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %94
  %97 = load ptr, ptr %96, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %97, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend3.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %90, i64 0, i32 4
  %98 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %78, i64 0, i32 2
  %99 = load i64, ptr %memberidx5.i.i, align 4
  %100 = load ptr, ptr %98, align 8
  %101 = getelementptr inbounds ptr, ptr %100, i64 %99
  %102 = load ptr, ptr %101, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %102, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i8.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  br label %get_class_prop_type_with_name.exit

get_class_prop_type_with_name.exit:               ; preds = %else.i.i, %ifend.i, %while.end.i.i, %get_class_from_type.exit, %Map_String_PropId____getitem__.exit.i, %get_class_prop_type.exit.i
  %common.ret.op.i = phi ptr [ %common.ret.op.i8.i, %get_class_prop_type.exit.i ], [ null, %get_class_from_type.exit ], [ null, %Map_String_PropId____getitem__.exit.i ], [ null, %while.end.i.i ], [ null, %ifend.i ], [ null, %else.i.i ]
  %103 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %103, ptr noundef nonnull align 8 dereferenceable(10) @279, i64 10, i1 false)
  %104 = tail call ptr @malloc(i32 24)
  store ptr %103, ptr %104, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %104, i64 0, i32 1
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %104, i64 0, i32 2
  store i64 10, ptr %memberidx2.i.i, align 4
  %105 = call fastcc ptr @CodeGen_get_member_with_name(ptr %0, ptr %1, ptr %2, ptr nonnull %41, ptr nonnull %104, ptr null)
  store ptr %2, ptr %args, align 8
  %106 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i, i1 false)
  %107 = call ptr @LLVMBuildCall2(ptr %1, ptr %106, ptr %105, ptr nonnull %args, i64 1, ptr nonnull @80)
  ret ptr %107
}

define internal fastcc void @CodeGen_codegen_statement(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %4 = load i64, ptr %2, align 4
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %memberidx.i70 = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i70, align 8
  %7 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %6)
  %memberidx1.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1.i, align 8
  %9 = tail call ptr @LLVMAppendBasicBlock(ptr %8, ptr nonnull @281)
  %10 = load ptr, ptr %memberidx1.i, align 8
  %11 = tail call ptr @LLVMAppendBasicBlock(ptr %10, ptr nonnull @45)
  %12 = load ptr, ptr %memberidx1.i, align 8
  %13 = tail call ptr @LLVMAppendBasicBlock(ptr %12, ptr nonnull @282)
  %14 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %7, ptr %9, ptr %11)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %9)
  %memberidx4.i = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 2
  %15 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i79 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %16 = load i1, ptr %memberidx.i79, align 1
  store i1 false, ptr %memberidx.i79, align 1
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 25)
  %19 = load ptr, ptr %17, align 8
  %memberidx1.i.i80 = getelementptr inbounds %Array_Statement_, ptr %17, i64 0, i32 1
  %20 = load i64, ptr %memberidx1.i.i80, align 4
  store i1 false, ptr %18, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 3
  store ptr %19, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 2
  store i64 %20, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %21 = icmp slt i64 %20, 1
  br i1 %21, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.entry, %for.body.i
  %22 = phi i64 [ %23, %for.body.i ], [ 1, %if.entry ]
  %statement.0.i137.in = phi ptr [ %24, %for.body.i ], [ %19, %if.entry ]
  %statement.0.i137 = load ptr, ptr %statement.0.i137.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i137)
  %23 = add nuw nsw i64 %22, 1
  store i64 %23, ptr %memberidx1.i.i.i, align 4
  %24 = getelementptr inbounds ptr, ptr %19, i64 %22
  %.not143 = icmp slt i64 %22, %20
  br i1 %.not143, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %if.entry
  tail call void @free(ptr nonnull %18)
  %memberidx4.i82 = getelementptr inbounds %Block, ptr %15, i64 0, i32 4
  %25 = load ptr, ptr %memberidx4.i82, align 8
  %.not.i83 = icmp eq ptr %25, null
  br i1 %.not.i83, label %CodeGen_codegen_block.exit, label %if.entry.i84

if.entry.i84:                                     ; preds = %for.end.i
  %26 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %25)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i84
  store i1 %16, ptr %memberidx.i79, align 1
  %27 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i.i71 = getelementptr inbounds %Block, ptr %27, i64 0, i32 1
  %28 = load i1, ptr %memberidx.i.i71, align 1
  %memberidx1.i.i72 = getelementptr inbounds %Block, ptr %27, i64 0, i32 2
  %29 = load i1, ptr %memberidx1.i.i72, align 1
  %30 = or i1 %28, %29
  %memberidx2.i.i73 = getelementptr inbounds %Block, ptr %27, i64 0, i32 3
  %31 = load i1, ptr %memberidx2.i.i73, align 1
  %32 = or i1 %30, %31
  br i1 %32, label %ifend.i77, label %if.entry.i74

if.entry.i74:                                     ; preds = %CodeGen_codegen_block.exit
  %33 = tail call ptr @LLVMBuildBr(ptr %1, ptr %13)
  br label %ifend.i77

ifend.i77:                                        ; preds = %if.entry.i74, %CodeGen_codegen_block.exit
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %11)
  %memberidx6.i75 = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 3
  %34 = load ptr, ptr %memberidx6.i75, align 8
  %.not.i76 = icmp eq ptr %34, null
  br i1 %.not.i76, label %if.entry12.i, label %if.entry7.i

if.entry7.i:                                      ; preds = %ifend.i77
  %35 = load i1, ptr %memberidx.i79, align 1
  store i1 false, ptr %memberidx.i79, align 1
  %36 = load ptr, ptr %34, align 8
  %37 = tail call ptr @malloc(i32 25)
  %38 = load ptr, ptr %36, align 8
  %memberidx1.i.i87 = getelementptr inbounds %Array_Statement_, ptr %36, i64 0, i32 1
  %39 = load i64, ptr %memberidx1.i.i87, align 4
  store i1 false, ptr %37, align 1
  %memberidx1.i.i.i88 = getelementptr inbounds %ArrayIterator_Statement_, ptr %37, i64 0, i32 1
  %memberidx2.i.i.i89 = getelementptr inbounds %ArrayIterator_Statement_, ptr %37, i64 0, i32 3
  store ptr %38, ptr %memberidx2.i.i.i89, align 8
  %memberidx3.i.i.i90 = getelementptr inbounds %ArrayIterator_Statement_, ptr %37, i64 0, i32 2
  store i64 %39, ptr %memberidx3.i.i.i90, align 4
  store i64 1, ptr %memberidx1.i.i.i88, align 4
  %40 = icmp slt i64 %39, 1
  br i1 %40, label %for.end.i102, label %for.body.i99

for.body.i99:                                     ; preds = %if.entry7.i, %for.body.i99
  %41 = phi i64 [ %42, %for.body.i99 ], [ 1, %if.entry7.i ]
  %statement.0.i94134.in = phi ptr [ %43, %for.body.i99 ], [ %38, %if.entry7.i ]
  %statement.0.i94134 = load ptr, ptr %statement.0.i94134.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i94134)
  %42 = add nuw nsw i64 %41, 1
  store i64 %42, ptr %memberidx1.i.i.i88, align 4
  %43 = getelementptr inbounds ptr, ptr %38, i64 %41
  %.not144 = icmp slt i64 %41, %39
  br i1 %.not144, label %for.body.i99, label %for.end.i102

for.end.i102:                                     ; preds = %for.body.i99, %if.entry7.i
  tail call void @free(ptr nonnull %37)
  %memberidx4.i100 = getelementptr inbounds %Block, ptr %34, i64 0, i32 4
  %44 = load ptr, ptr %memberidx4.i100, align 8
  %.not.i101 = icmp eq ptr %44, null
  br i1 %.not.i101, label %CodeGen_codegen_block.exit106, label %if.entry.i103

if.entry.i103:                                    ; preds = %for.end.i102
  %45 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %44)
  br label %CodeGen_codegen_block.exit106

CodeGen_codegen_block.exit106:                    ; preds = %for.end.i102, %if.entry.i103
  store i1 %35, ptr %memberidx.i79, align 1
  %46 = load ptr, ptr %memberidx6.i75, align 8
  %memberidx.i42.i = getelementptr inbounds %Block, ptr %46, i64 0, i32 1
  %47 = load i1, ptr %memberidx.i42.i, align 1
  %memberidx1.i43.i = getelementptr inbounds %Block, ptr %46, i64 0, i32 2
  %48 = load i1, ptr %memberidx1.i43.i, align 1
  %49 = or i1 %47, %48
  %memberidx2.i44.i = getelementptr inbounds %Block, ptr %46, i64 0, i32 3
  %50 = load i1, ptr %memberidx2.i44.i, align 1
  %51 = or i1 %49, %50
  br i1 %51, label %else13.i, label %if.entry12.i

if.entry12.i:                                     ; preds = %ifend.i77, %CodeGen_codegen_block.exit106
  %52 = tail call ptr @LLVMBuildBr(ptr %1, ptr %13)
  br label %CodeGen_codegen_if_stmt.exit

else13.i:                                         ; preds = %CodeGen_codegen_block.exit106
  br i1 %32, label %if.entry15.i, label %CodeGen_codegen_if_stmt.exit

if.entry15.i:                                     ; preds = %else13.i
  tail call void @LLVMDeleteBasicBlock(ptr %13)
  br label %CodeGen_codegen_if_stmt.exit

CodeGen_codegen_if_stmt.exit:                     ; preds = %if.entry12.i, %else13.i, %if.entry15.i
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %13)
  %.pr = load i64, ptr %2, align 4
  br label %ifend

ifend:                                            ; preds = %3, %CodeGen_codegen_if_stmt.exit
  %53 = phi i64 [ %4, %3 ], [ %.pr, %CodeGen_codegen_if_stmt.exit ]
  %54 = icmp eq i64 %53, 3
  br i1 %54, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  tail call fastcc void @CodeGen_codegen_for_stmt(ptr %0, ptr %1, ptr nonnull %2)
  %.pre = load i64, ptr %2, align 4
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %55 = phi i64 [ %53, %ifend ], [ %.pre, %if.entry2 ]
  %56 = icmp eq i64 %55, 4
  br i1 %56, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend4
  %memberidx.i66 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i66, align 8
  %58 = tail call ptr @LLVMAppendBasicBlock(ptr %57, ptr nonnull @288)
  %59 = load ptr, ptr %memberidx.i66, align 8
  %60 = tail call ptr @LLVMAppendBasicBlock(ptr %59, ptr nonnull @289)
  %memberidx2.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %61 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i67 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %62 = load ptr, ptr %memberidx3.i67, align 8
  store ptr %60, ptr %memberidx2.i, align 8
  store ptr %58, ptr %memberidx3.i67, align 8
  %memberidx6.i = getelementptr inbounds %WhileStatement, ptr %2, i64 0, i32 1
  %63 = load ptr, ptr %memberidx6.i, align 8
  %64 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %63)
  %65 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %64, ptr %58, ptr %60)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %58)
  %memberidx7.i = getelementptr inbounds %WhileStatement, ptr %2, i64 0, i32 2
  %66 = load ptr, ptr %memberidx7.i, align 8
  %memberidx.i107 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %67 = load i1, ptr %memberidx.i107, align 1
  store i1 false, ptr %memberidx.i107, align 1
  %68 = load ptr, ptr %66, align 8
  %69 = tail call ptr @malloc(i32 25)
  %70 = load ptr, ptr %68, align 8
  %memberidx1.i.i108 = getelementptr inbounds %Array_Statement_, ptr %68, i64 0, i32 1
  %71 = load i64, ptr %memberidx1.i.i108, align 4
  store i1 false, ptr %69, align 1
  %memberidx1.i.i.i109 = getelementptr inbounds %ArrayIterator_Statement_, ptr %69, i64 0, i32 1
  %memberidx2.i.i.i110 = getelementptr inbounds %ArrayIterator_Statement_, ptr %69, i64 0, i32 3
  store ptr %70, ptr %memberidx2.i.i.i110, align 8
  %memberidx3.i.i.i111 = getelementptr inbounds %ArrayIterator_Statement_, ptr %69, i64 0, i32 2
  store i64 %71, ptr %memberidx3.i.i.i111, align 4
  store i64 1, ptr %memberidx1.i.i.i109, align 4
  %72 = icmp slt i64 %71, 1
  br i1 %72, label %for.end.i123, label %for.body.i120

for.body.i120:                                    ; preds = %if.entry6, %for.body.i120
  %73 = phi i64 [ %74, %for.body.i120 ], [ 1, %if.entry6 ]
  %statement.0.i115132.in = phi ptr [ %75, %for.body.i120 ], [ %70, %if.entry6 ]
  %statement.0.i115132 = load ptr, ptr %statement.0.i115132.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i115132)
  %74 = add nuw nsw i64 %73, 1
  store i64 %74, ptr %memberidx1.i.i.i109, align 4
  %75 = getelementptr inbounds ptr, ptr %70, i64 %73
  %.not = icmp slt i64 %73, %71
  br i1 %.not, label %for.body.i120, label %for.end.i123

for.end.i123:                                     ; preds = %for.body.i120, %if.entry6
  tail call void @free(ptr nonnull %69)
  %memberidx4.i121 = getelementptr inbounds %Block, ptr %66, i64 0, i32 4
  %76 = load ptr, ptr %memberidx4.i121, align 8
  %.not.i122 = icmp eq ptr %76, null
  br i1 %.not.i122, label %CodeGen_codegen_block.exit127, label %if.entry.i124

if.entry.i124:                                    ; preds = %for.end.i123
  %77 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %76)
  br label %CodeGen_codegen_block.exit127

CodeGen_codegen_block.exit127:                    ; preds = %for.end.i123, %if.entry.i124
  store i1 %67, ptr %memberidx.i107, align 1
  %78 = load ptr, ptr %memberidx7.i, align 8
  %memberidx.i.i = getelementptr inbounds %Block, ptr %78, i64 0, i32 1
  %79 = load i1, ptr %memberidx.i.i, align 1
  %memberidx1.i.i = getelementptr inbounds %Block, ptr %78, i64 0, i32 2
  %80 = load i1, ptr %memberidx1.i.i, align 1
  %81 = or i1 %79, %80
  %memberidx2.i.i = getelementptr inbounds %Block, ptr %78, i64 0, i32 3
  %82 = load i1, ptr %memberidx2.i.i, align 1
  %83 = or i1 %81, %82
  br i1 %83, label %CodeGen_codegen_while_stmt.exit, label %if.entry.i68

if.entry.i68:                                     ; preds = %CodeGen_codegen_block.exit127
  %84 = load ptr, ptr %memberidx6.i, align 8
  %85 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %84)
  %86 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %85, ptr %58, ptr %60)
  br label %CodeGen_codegen_while_stmt.exit

CodeGen_codegen_while_stmt.exit:                  ; preds = %CodeGen_codegen_block.exit127, %if.entry.i68
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %60)
  store ptr %61, ptr %memberidx2.i, align 8
  store ptr %62, ptr %memberidx3.i67, align 8
  %.pr128 = load i64, ptr %2, align 4
  br label %ifend8

ifend8:                                           ; preds = %ifend4, %CodeGen_codegen_while_stmt.exit
  %87 = phi i64 [ %55, %ifend4 ], [ %.pr128, %CodeGen_codegen_while_stmt.exit ]
  %88 = icmp eq i64 %87, 5
  br i1 %88, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %89 = load ptr, ptr %memberidx13, align 8
  %90 = tail call ptr @LLVMBuildBr(ptr %1, ptr %89)
  %.pre141 = load i64, ptr %2, align 4
  br label %ifend12

ifend12:                                          ; preds = %ifend8, %if.entry10
  %91 = phi i64 [ %87, %ifend8 ], [ %.pre141, %if.entry10 ]
  %92 = icmp eq i64 %91, 6
  br i1 %92, label %if.entry15, label %ifend17

if.entry15:                                       ; preds = %ifend12
  %memberidx18 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %93 = load ptr, ptr %memberidx18, align 8
  %94 = tail call ptr @LLVMBuildBr(ptr %1, ptr %93)
  %.pr129 = load i64, ptr %2, align 4
  br label %ifend17

ifend17:                                          ; preds = %ifend12, %if.entry15
  %95 = phi i64 [ %91, %ifend12 ], [ %.pr129, %if.entry15 ]
  %96 = icmp eq i64 %95, 1
  br i1 %96, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %ifend17
  tail call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr %1, ptr nonnull %2)
  %.pre142 = load i64, ptr %2, align 4
  br label %ifend22

ifend22:                                          ; preds = %ifend17, %if.entry20
  %97 = phi i64 [ %95, %ifend17 ], [ %.pre142, %if.entry20 ]
  %98 = icmp eq i64 %97, 2
  br i1 %98, label %if.entry24, label %ifend26

if.entry24:                                       ; preds = %ifend22
  tail call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr %1, ptr nonnull %2)
  %.pr130 = load i64, ptr %2, align 4
  br label %ifend26

ifend26:                                          ; preds = %ifend22, %if.entry24
  %99 = phi i64 [ %97, %ifend22 ], [ %.pr130, %if.entry24 ]
  %100 = icmp eq i64 %99, 7
  br i1 %100, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend26
  %memberidx.i = getelementptr inbounds %ReturnStatement, ptr %2, i64 0, i32 1
  %101 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %101, null
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry28
  %102 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %101)
  %103 = load ptr, ptr %memberidx.i, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %103, i64 0, i32 3
  %104 = load ptr, ptr %memberidx3.i, align 8
  %105 = load i64, ptr %104, align 4
  %.not12.i = icmp eq i64 %105, 10
  br i1 %.not12.i, label %ifend.i, label %if.entry5.i

ifend.i:                                          ; preds = %if.entry.i, %if.entry28
  %106 = tail call ptr @LLVMBuildRetVoid(ptr %1)
  br label %ifend30

if.entry5.i:                                      ; preds = %if.entry.i
  %107 = tail call ptr @LLVMBuildRet(ptr %1, ptr %102)
  br label %ifend30

ifend30:                                          ; preds = %if.entry5.i, %ifend.i, %ifend26
  %108 = load i64, ptr %2, align 4
  %109 = icmp eq i64 %108, 8
  br i1 %109, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend30
  %110 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %ifend34

ifend34:                                          ; preds = %ifend30, %if.entry32
  ret void
}

define internal fastcc void @Map_String_CGClassType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_CGClassType____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_CGClassType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_CGClassType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_CGClassType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_CGClassType__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_get_string_val(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr nocapture %4, i64 %5) unnamed_addr {
  %indices = alloca [1 x ptr], align 8
  %7 = load i64, ptr %3, align 4
  switch i64 %7, label %is_object.exit312 [
    i64 0, label %if.entry
    i64 20, label %if.entry.i309
  ]

common.ret:                                       ; preds = %ifend4, %if.entry.i, %Map_String_LLVMValueRef____getitem__.exit, %if.entry.i142, %Map_String_LLVMValueRef____getitem__.exit229, %CodeGen_get_or_codegen_enum_from_typeid.exit, %Array_LLVMValueRef____sl__.exit114, %Array_LLVMValueRef____sl__.exit170, %CodeGen_createGlobalLLVMString.exit183
  %common.ret.op = phi ptr [ %67, %CodeGen_createGlobalLLVMString.exit183 ], [ %102, %Array_LLVMValueRef____sl__.exit170 ], [ %262, %Array_LLVMValueRef____sl__.exit114 ], [ %370, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %188, %if.entry.i142 ], [ %181, %Map_String_LLVMValueRef____getitem__.exit229 ], [ %349, %if.entry.i ], [ %345, %Map_String_LLVMValueRef____getitem__.exit ], [ %2, %ifend4 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %6
  %8 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  %memberidx1.i.i192 = getelementptr inbounds %String, ptr %9, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i192, align 4
  %memberidx2.i.i193 = getelementptr inbounds %String, ptr %9, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i193, align 4
  %memberidx.i186 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %memberidx.i186, align 8
  %11 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %9)
  %memberidx.i249 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %10, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i249, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %10, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i250 = icmp eq ptr %16, null
  br i1 %.not.i250, label %if.entry.i188, label %while.entry.i255

while.entry.i255:                                 ; preds = %if.entry, %else.i263
  %17 = phi ptr [ %25, %else.i263 ], [ %14, %if.entry ]
  %18 = phi i64 [ %26, %else.i263 ], [ %12, %if.entry ]
  %19 = phi ptr [ %30, %else.i263 ], [ %16, %if.entry ]
  %hash.0.i251 = phi i64 [ %28, %else.i263 ], [ %13, %if.entry ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i252 = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i.i252, align 4
  %.not.i.i254 = icmp eq i64 %21, 4
  br i1 %.not.i.i254, label %ifend.i.i256, label %else.i263

ifend.i.i256:                                     ; preds = %while.entry.i255
  %22 = load ptr, ptr %20, align 8
  %23 = tail call i64 @memcmp(ptr %22, ptr nonnull %8, i64 4)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i261, label %ifend.i.i256.else.i263_crit_edge

ifend.i.i256.else.i263_crit_edge:                 ; preds = %ifend.i.i256
  %.pre = load i64, ptr %memberidx.i249, align 4
  %.pre345 = load ptr, ptr %10, align 8
  br label %else.i263

while.end.i261:                                   ; preds = %ifend.i.i256
  %.pre346.pre = load ptr, ptr %10, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre346.pre, i64 %hash.0.i251
  %.pre347.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i260 = icmp eq ptr %.pre347.pre, null
  br i1 %.not25.i260, label %if.entry.i188, label %Map_String_LLVMValueRef____getitem__.exit267

else.i263:                                        ; preds = %ifend.i.i256.else.i263_crit_edge, %while.entry.i255
  %25 = phi ptr [ %.pre345, %ifend.i.i256.else.i263_crit_edge ], [ %17, %while.entry.i255 ]
  %26 = phi i64 [ %.pre, %ifend.i.i256.else.i263_crit_edge ], [ %18, %while.entry.i255 ]
  %27 = add nuw i64 %hash.0.i251, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not26.i262 = icmp eq ptr %30, null
  br i1 %.not26.i262, label %if.entry.i188, label %while.entry.i255

Map_String_LLVMValueRef____getitem__.exit267:     ; preds = %while.end.i261
  %memberidx11.i265 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre347.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx11.i265, align 8
  %32 = icmp eq ptr %31, null
  br i1 %32, label %if.entry.i188, label %CodeGen_createGlobalLLVMString.exit191

if.entry.i188:                                    ; preds = %else.i263, %if.entry, %while.end.i261, %Map_String_LLVMValueRef____getitem__.exit267
  %33 = tail call ptr @malloc(i32 5)
  %34 = load i32, ptr %8, align 8
  store i32 %34, ptr %33, align 8
  %35 = getelementptr inbounds i8, ptr %33, i64 4
  store i8 0, ptr %35, align 1
  %36 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr nonnull %33, ptr nonnull @80)
  %37 = load ptr, ptr %memberidx.i186, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %37, ptr nonnull %9, ptr %36)
  br label %CodeGen_createGlobalLLVMString.exit191

CodeGen_createGlobalLLVMString.exit191:           ; preds = %Map_String_LLVMValueRef____getitem__.exit267, %if.entry.i188
  %str.0.i189 = phi ptr [ %36, %if.entry.i188 ], [ %31, %Map_String_LLVMValueRef____getitem__.exit267 ]
  %38 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %38, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i.i184 = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i184, align 4
  %memberidx2.i.i185 = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i185, align 4
  %40 = load ptr, ptr %memberidx.i186, align 8
  %41 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %39)
  %memberidx.i230 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %40, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i230, align 4
  %43 = urem i64 %41, %42
  %44 = load ptr, ptr %40, align 8
  %45 = getelementptr inbounds ptr, ptr %44, i64 %43
  %46 = load ptr, ptr %45, align 8
  %.not.i231 = icmp eq ptr %46, null
  br i1 %.not.i231, label %if.entry.i180, label %while.entry.i236

while.entry.i236:                                 ; preds = %CodeGen_createGlobalLLVMString.exit191, %else.i244
  %47 = phi ptr [ %55, %else.i244 ], [ %44, %CodeGen_createGlobalLLVMString.exit191 ]
  %48 = phi i64 [ %56, %else.i244 ], [ %42, %CodeGen_createGlobalLLVMString.exit191 ]
  %49 = phi ptr [ %60, %else.i244 ], [ %46, %CodeGen_createGlobalLLVMString.exit191 ]
  %hash.0.i232 = phi i64 [ %58, %else.i244 ], [ %43, %CodeGen_createGlobalLLVMString.exit191 ]
  %50 = load ptr, ptr %49, align 8
  %memberidx.i.i233 = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i.i233, align 4
  %.not.i.i235 = icmp eq i64 %51, 5
  br i1 %.not.i.i235, label %ifend.i.i237, label %else.i244

ifend.i.i237:                                     ; preds = %while.entry.i236
  %52 = load ptr, ptr %50, align 8
  %53 = tail call i64 @memcmp(ptr %52, ptr %38, i64 5)
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %while.end.i242, label %ifend.i.i237.else.i244_crit_edge

ifend.i.i237.else.i244_crit_edge:                 ; preds = %ifend.i.i237
  %.pre348 = load i64, ptr %memberidx.i230, align 4
  %.pre349 = load ptr, ptr %40, align 8
  br label %else.i244

while.end.i242:                                   ; preds = %ifend.i.i237
  %.pre350.pre = load ptr, ptr %40, align 8
  %.phi.trans.insert351.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre350.pre, i64 %hash.0.i232
  %.pre352.pre = load ptr, ptr %.phi.trans.insert351.phi.trans.insert, align 8
  %.not25.i241 = icmp eq ptr %.pre352.pre, null
  br i1 %.not25.i241, label %if.entry.i180, label %Map_String_LLVMValueRef____getitem__.exit248

else.i244:                                        ; preds = %ifend.i.i237.else.i244_crit_edge, %while.entry.i236
  %55 = phi ptr [ %.pre349, %ifend.i.i237.else.i244_crit_edge ], [ %47, %while.entry.i236 ]
  %56 = phi i64 [ %.pre348, %ifend.i.i237.else.i244_crit_edge ], [ %48, %while.entry.i236 ]
  %57 = add nuw i64 %hash.0.i232, 1
  %58 = urem i64 %57, %56
  %59 = getelementptr inbounds ptr, ptr %55, i64 %58
  %60 = load ptr, ptr %59, align 8
  %.not26.i243 = icmp eq ptr %60, null
  br i1 %.not26.i243, label %if.entry.i180, label %while.entry.i236

Map_String_LLVMValueRef____getitem__.exit248:     ; preds = %while.end.i242
  %memberidx11.i246 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre352.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx11.i246, align 8
  %62 = icmp eq ptr %61, null
  br i1 %62, label %if.entry.i180, label %CodeGen_createGlobalLLVMString.exit183

if.entry.i180:                                    ; preds = %else.i244, %CodeGen_createGlobalLLVMString.exit191, %while.end.i242, %Map_String_LLVMValueRef____getitem__.exit248
  %63 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %63, ptr noundef nonnull align 8 dereferenceable(5) %38, i64 5, i1 false)
  %64 = getelementptr inbounds i8, ptr %63, i64 5
  store i8 0, ptr %64, align 1
  %65 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %63, ptr nonnull @80)
  %66 = load ptr, ptr %memberidx.i186, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %66, ptr nonnull %39, ptr %65)
  br label %CodeGen_createGlobalLLVMString.exit183

CodeGen_createGlobalLLVMString.exit183:           ; preds = %Map_String_LLVMValueRef____getitem__.exit248, %if.entry.i180
  %str.0.i181 = phi ptr [ %65, %if.entry.i180 ], [ %61, %Map_String_LLVMValueRef____getitem__.exit248 ]
  %67 = tail call ptr @LLVMBuildSelect(ptr %1, ptr %2, ptr %str.0.i189, ptr %str.0.i181, ptr nonnull @80)
  br label %common.ret

if.entry.i309:                                    ; preds = %6, %if.entry.i309
  %.tr5.i307 = phi ptr [ %68, %if.entry.i309 ], [ %3, %6 ]
  %memberidx1.i308 = getelementptr inbounds %GenericType, ptr %.tr5.i307, i64 0, i32 3
  %68 = load ptr, ptr %memberidx1.i308, align 8
  %69 = load i64, ptr %68, align 4
  %70 = icmp eq i64 %69, 20
  br i1 %70, label %if.entry.i309, label %is_object.exit312

is_object.exit312:                                ; preds = %if.entry.i309, %6
  %.lcssa.i310 = phi i64 [ %7, %6 ], [ %69, %if.entry.i309 ]
  %71 = icmp eq i64 %.lcssa.i310, 11
  br i1 %71, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit312
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %72 = load ptr, ptr %memberidx, align 8
  %73 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %73, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %74 = tail call ptr @malloc(i32 24)
  store ptr %73, ptr %74, align 8
  %memberidx1.i.i176 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i176, align 4
  %memberidx2.i.i177 = getelementptr inbounds %String, ptr %74, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i177, align 4
  %75 = load i64, ptr %3, align 4
  %76 = icmp eq i64 %75, 20
  br i1 %76, label %if.entry.i303, label %is_object.exit306.thread

if.entry.i303:                                    ; preds = %if.entry2, %if.entry.i303
  %.tr5.i301 = phi ptr [ %77, %if.entry.i303 ], [ %3, %if.entry2 ]
  %memberidx1.i302 = getelementptr inbounds %GenericType, ptr %.tr5.i301, i64 0, i32 3
  %77 = load ptr, ptr %memberidx1.i302, align 8
  %78 = load i64, ptr %77, align 4
  switch i64 %78, label %ifend7 [
    i64 20, label %if.entry.i303
    i64 11, label %tailrecurse.i292.preheader
  ]

is_object.exit306.thread:                         ; preds = %if.entry2
  %79 = icmp eq i64 %75, 11
  br i1 %79, label %if.entry3.i299, label %ifend7

tailrecurse.i292.preheader:                       ; preds = %if.entry.i303
  br i1 %76, label %if.entry.i295, label %if.entry3.i299

if.entry.i295:                                    ; preds = %tailrecurse.i292.preheader, %if.entry.i295
  %.tr11.i291337 = phi ptr [ %80, %if.entry.i295 ], [ %3, %tailrecurse.i292.preheader ]
  %memberidx1.i294 = getelementptr inbounds %GenericType, ptr %.tr11.i291337, i64 0, i32 3
  %80 = load ptr, ptr %memberidx1.i294, align 8
  %81 = load i64, ptr %80, align 4
  %switch = icmp eq i64 %81, 20
  br i1 %switch, label %if.entry.i295, label %if.entry3.i299

if.entry3.i299:                                   ; preds = %if.entry.i295, %is_object.exit306.thread, %tailrecurse.i292.preheader
  %.tr11.i291.lcssa = phi ptr [ %3, %tailrecurse.i292.preheader ], [ %3, %is_object.exit306.thread ], [ %80, %if.entry.i295 ]
  %memberidx6.i296 = getelementptr inbounds %ObjectType, ptr %.tr11.i291.lcssa, i64 0, i32 1
  %82 = load ptr, ptr %memberidx6.i296, align 8
  %83 = load ptr, ptr %72, align 8
  %84 = load i64, ptr %82, align 4
  %85 = load ptr, ptr %83, align 8
  %86 = getelementptr inbounds ptr, ptr %85, i64 %84
  %87 = load ptr, ptr %86, align 8
  %memberidx2.i.i297 = getelementptr inbounds %Module, ptr %87, i64 0, i32 3
  %88 = load ptr, ptr %memberidx2.i.i297, align 8
  %memberidx3.i.i298 = getelementptr inbounds %TypeId, ptr %82, i64 0, i32 2
  %89 = load i64, ptr %memberidx3.i.i298, align 4
  %90 = load ptr, ptr %88, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %89
  %92 = load ptr, ptr %91, align 8
  %memberidx.i172 = getelementptr inbounds %Class, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx.i172, align 8
  %memberidx.i.i173 = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  %94 = load i64, ptr %memberidx.i.i173, align 4
  %.not.i.i = icmp eq i64 %94, 6
  br i1 %.not.i.i, label %String___eq__.exit.i, label %ifend7

String___eq__.exit.i:                             ; preds = %if.entry3.i299
  %95 = load ptr, ptr %93, align 8
  %96 = tail call i64 @memcmp(ptr %95, ptr %73, i64 6)
  %97 = icmp eq i64 %96, 0
  %98 = load ptr, ptr %92, align 8
  %99 = load i64, ptr %98, align 4
  %100 = icmp eq i64 %99, 1
  %101 = and i1 %97, %100
  br i1 %101, label %if.entry5, label %ifend7

ifend4:                                           ; preds = %is_object.exit312
  switch i64 %7, label %common.ret [
    i64 16, label %if.entry26
    i64 12, label %if.entry30
  ]

if.entry5:                                        ; preds = %String___eq__.exit.i
  %102 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %2)
  %memberidx.i164 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %103 = load i64, ptr %memberidx.i164, align 4
  %memberidx1.i165 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %104 = load i64, ptr %memberidx1.i165, align 4
  %.not.i166 = icmp slt i64 %103, %104
  br i1 %.not.i166, label %if.entry5.Array_LLVMValueRef____sl__.exit170_crit_edge, label %if.entry.i168

if.entry5.Array_LLVMValueRef____sl__.exit170_crit_edge: ; preds = %if.entry5
  %.pre374 = load ptr, ptr %4, align 8
  br label %Array_LLVMValueRef____sl__.exit170

if.entry.i168:                                    ; preds = %if.entry5
  %105 = shl nuw i64 %104, 1
  store i64 %105, ptr %memberidx1.i165, align 4
  %106 = load ptr, ptr %4, align 8
  %107 = shl i64 %104, 4
  %108 = tail call ptr @realloc(ptr %106, i64 %107)
  store ptr %108, ptr %4, align 8
  %.pre373 = load i64, ptr %memberidx.i164, align 4
  br label %Array_LLVMValueRef____sl__.exit170

Array_LLVMValueRef____sl__.exit170:               ; preds = %if.entry5.Array_LLVMValueRef____sl__.exit170_crit_edge, %if.entry.i168
  %109 = phi ptr [ %.pre374, %if.entry5.Array_LLVMValueRef____sl__.exit170_crit_edge ], [ %108, %if.entry.i168 ]
  %110 = phi i64 [ %103, %if.entry5.Array_LLVMValueRef____sl__.exit170_crit_edge ], [ %.pre373, %if.entry.i168 ]
  %111 = add nsw i64 %110, 1
  store i64 %111, ptr %memberidx.i164, align 4
  %112 = getelementptr inbounds ptr, ptr %109, i64 %110
  store ptr %102, ptr %112, align 8
  br label %common.ret

ifend7:                                           ; preds = %if.entry.i303, %is_object.exit306.thread, %if.entry3.i299, %String___eq__.exit.i
  %113 = load ptr, ptr %memberidx, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i287, %ifend7
  %.tr11.i = phi ptr [ %3, %ifend7 ], [ %115, %if.entry.i287 ]
  %114 = load i64, ptr %.tr11.i, align 4
  switch i64 %114, label %get_class_from_type.exit [
    i64 20, label %if.entry.i287
    i64 11, label %if.entry3.i
  ]

if.entry.i287:                                    ; preds = %tailrecurse.i
  %memberidx1.i286 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %115 = load ptr, ptr %memberidx1.i286, align 8
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i288 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %116 = load ptr, ptr %memberidx6.i288, align 8
  %117 = load ptr, ptr %113, align 8
  %118 = load i64, ptr %116, align 4
  %119 = load ptr, ptr %117, align 8
  %120 = getelementptr inbounds ptr, ptr %119, i64 %118
  %121 = load ptr, ptr %120, align 8
  %memberidx2.i.i289 = getelementptr inbounds %Module, ptr %121, i64 0, i32 3
  %122 = load ptr, ptr %memberidx2.i.i289, align 8
  %memberidx3.i.i290 = getelementptr inbounds %TypeId, ptr %116, i64 0, i32 2
  %123 = load i64, ptr %memberidx3.i.i290, align 4
  %124 = load ptr, ptr %122, align 8
  %125 = getelementptr inbounds ptr, ptr %124, i64 %123
  %126 = load ptr, ptr %125, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i285 = phi ptr [ %126, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx9 = getelementptr inbounds %Class, ptr %common.ret.op.i285, i64 0, i32 1
  %127 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %String, ptr %127, i64 0, i32 1
  %128 = load i64, ptr %memberidx10, align 4
  %129 = add nuw i64 %128, 14
  %130 = trunc i64 %129 to i32
  %131 = tail call ptr @malloc(i32 %130)
  %132 = tail call ptr @malloc(i32 24)
  store ptr %131, ptr %132, align 8
  %memberidx1.i.i161 = getelementptr inbounds %String, ptr %132, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i161, align 4
  %memberidx.i163 = getelementptr inbounds %String, ptr %132, i64 0, i32 2
  store i64 %129, ptr %memberidx.i163, align 4
  %133 = load ptr, ptr %memberidx9, align 8
  %memberidx.i160 = getelementptr inbounds %String, ptr %133, i64 0, i32 1
  %134 = load i64, ptr %memberidx.i160, align 4
  %135 = trunc i64 %134 to i32
  %136 = add i32 %135, 1
  %137 = tail call ptr @malloc(i32 %136)
  %138 = load ptr, ptr %133, align 8
  %139 = load i64, ptr %memberidx.i160, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %137, ptr align 8 %138, i64 %139, i1 false)
  %140 = getelementptr inbounds i8, ptr %137, i64 %139
  store i8 0, ptr %140, align 1
  %141 = alloca ptr, align 8
  %142 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %141, ptr nonnull @247, ptr %137)
  %143 = load ptr, ptr %141, align 8
  %144 = tail call ptr @malloc(i32 24)
  store ptr %143, ptr %144, align 8
  %memberidx1.i158 = getelementptr inbounds %String, ptr %144, i64 0, i32 1
  store i64 %142, ptr %memberidx1.i158, align 4
  %memberidx2.i159 = getelementptr inbounds %String, ptr %144, i64 0, i32 2
  store i64 %142, ptr %memberidx2.i159, align 4
  tail call void @free(ptr %137)
  %145 = icmp slt i64 %129, %142
  br i1 %145, label %if.entry.i.i.i156, label %String___adda__.exit157

if.entry.i.i.i156:                                ; preds = %get_class_from_type.exit
  %146 = call ptr @realloc(ptr %131, i64 %142)
  store ptr %146, ptr %132, align 8
  store i64 %142, ptr %memberidx.i163, align 4
  br label %String___adda__.exit157

String___adda__.exit157:                          ; preds = %get_class_from_type.exit, %if.entry.i.i.i156
  %147 = phi i64 [ %129, %get_class_from_type.exit ], [ %142, %if.entry.i.i.i156 ]
  %148 = phi ptr [ %131, %get_class_from_type.exit ], [ %146, %if.entry.i.i.i156 ]
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %148, ptr align 8 %143, i64 %142, i1 false)
  store i64 %142, ptr %memberidx1.i.i161, align 4
  %149 = icmp eq i64 %5, 3
  br i1 %149, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %String___adda__.exit157
  %150 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %150, ptr noundef nonnull align 8 dereferenceable(6) @248, i64 6, i1 false)
  %151 = call ptr @malloc(i32 24)
  store ptr %150, ptr %151, align 8
  %memberidx1.i.i151 = getelementptr inbounds %String, ptr %151, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i151, align 4
  %memberidx2.i.i152 = getelementptr inbounds %String, ptr %151, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i152, align 4
  %152 = add nuw i64 %142, 6
  %153 = icmp slt i64 %147, %152
  br i1 %153, label %if.entry.i.i.i149, label %String___adda__.exit150

if.entry.i.i.i149:                                ; preds = %if.entry12
  %154 = call ptr @realloc(ptr %148, i64 %152)
  store ptr %154, ptr %132, align 8
  store i64 %152, ptr %memberidx.i163, align 4
  br label %String___adda__.exit150

String___adda__.exit150:                          ; preds = %if.entry12, %if.entry.i.i.i149
  %155 = phi ptr [ %148, %if.entry12 ], [ %154, %if.entry.i.i.i149 ]
  %156 = getelementptr inbounds i8, ptr %155, i64 %142
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2147483648 dereferenceable(6) %156, ptr noundef nonnull align 8 dereferenceable(6) %150, i64 6, i1 false)
  %157 = load i64, ptr %memberidx1.i.i161, align 4
  %158 = add nuw i64 %157, 6
  store i64 %158, ptr %memberidx1.i.i161, align 4
  %memberidx.i140 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %159 = load ptr, ptr %memberidx.i140, align 8
  %160 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %132)
  %memberidx.i211 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %159, i64 0, i32 1
  %161 = load i64, ptr %memberidx.i211, align 4
  %162 = urem i64 %160, %161
  %163 = load ptr, ptr %159, align 8
  %164 = getelementptr inbounds ptr, ptr %163, i64 %162
  %165 = load ptr, ptr %164, align 8
  %.not.i212 = icmp eq ptr %165, null
  br i1 %.not.i212, label %if.entry.i142, label %while.entry.i217

while.entry.i217:                                 ; preds = %String___adda__.exit150, %else.i225
  %166 = phi ptr [ %175, %else.i225 ], [ %163, %String___adda__.exit150 ]
  %167 = phi i64 [ %176, %else.i225 ], [ %161, %String___adda__.exit150 ]
  %168 = phi ptr [ %180, %else.i225 ], [ %165, %String___adda__.exit150 ]
  %hash.0.i213 = phi i64 [ %178, %else.i225 ], [ %162, %String___adda__.exit150 ]
  %169 = load ptr, ptr %168, align 8
  %memberidx.i.i214 = getelementptr inbounds %String, ptr %169, i64 0, i32 1
  %170 = load i64, ptr %memberidx.i.i214, align 4
  %.not.i.i216 = icmp eq i64 %170, %158
  br i1 %.not.i.i216, label %ifend.i.i218, label %else.i225

ifend.i.i218:                                     ; preds = %while.entry.i217
  %171 = load ptr, ptr %169, align 8
  %172 = load ptr, ptr %132, align 8
  %173 = call i64 @memcmp(ptr %171, ptr %172, i64 %158)
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %while.end.i223, label %ifend.i.i218.else.i225_crit_edge

ifend.i.i218.else.i225_crit_edge:                 ; preds = %ifend.i.i218
  %.pre368 = load i64, ptr %memberidx.i211, align 4
  %.pre369 = load ptr, ptr %159, align 8
  br label %else.i225

while.end.i223:                                   ; preds = %ifend.i.i218
  %.pre370.pre = load ptr, ptr %159, align 8
  %.phi.trans.insert371.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre370.pre, i64 %hash.0.i213
  %.pre372.pre = load ptr, ptr %.phi.trans.insert371.phi.trans.insert, align 8
  %.not25.i222 = icmp eq ptr %.pre372.pre, null
  br i1 %.not25.i222, label %if.entry.i142, label %Map_String_LLVMValueRef____getitem__.exit229

else.i225:                                        ; preds = %ifend.i.i218.else.i225_crit_edge, %while.entry.i217
  %175 = phi ptr [ %.pre369, %ifend.i.i218.else.i225_crit_edge ], [ %166, %while.entry.i217 ]
  %176 = phi i64 [ %.pre368, %ifend.i.i218.else.i225_crit_edge ], [ %167, %while.entry.i217 ]
  %177 = add nuw i64 %hash.0.i213, 1
  %178 = urem i64 %177, %176
  %179 = getelementptr inbounds ptr, ptr %175, i64 %178
  %180 = load ptr, ptr %179, align 8
  %.not26.i224 = icmp eq ptr %180, null
  br i1 %.not26.i224, label %if.entry.i142, label %while.entry.i217

Map_String_LLVMValueRef____getitem__.exit229:     ; preds = %while.end.i223
  %memberidx11.i227 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre372.pre, i64 0, i32 1
  %181 = load ptr, ptr %memberidx11.i227, align 8
  %182 = icmp eq ptr %181, null
  br i1 %182, label %if.entry.i142, label %common.ret

if.entry.i142:                                    ; preds = %else.i225, %String___adda__.exit150, %while.end.i223, %Map_String_LLVMValueRef____getitem__.exit229
  %183 = trunc i64 %158 to i32
  %184 = add i32 %183, 1
  %185 = call ptr @malloc(i32 %184)
  %186 = load ptr, ptr %132, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %185, ptr align 8 %186, i64 %158, i1 false)
  %187 = getelementptr inbounds i8, ptr %185, i64 %158
  store i8 0, ptr %187, align 1
  %188 = call ptr @LLVMBuildGlobalString(ptr %1, ptr %185, ptr nonnull @80)
  %189 = load ptr, ptr %memberidx.i140, align 8
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %189, ptr nonnull %132, ptr %188)
  br label %common.ret

ifend14:                                          ; preds = %String___adda__.exit157
  %memberidx15 = getelementptr inbounds %Class, ptr %common.ret.op.i285, i64 0, i32 6
  %190 = load ptr, ptr %memberidx15, align 8
  %memberidx16 = getelementptr inbounds %Map_String_PropId_, ptr %190, i64 0, i32 2
  %191 = load i64, ptr %memberidx16, align 4
  %192 = alloca ptr, i64 %191, align 8
  %193 = call ptr @malloc(i32 25)
  %194 = load ptr, ptr %190, align 8
  %memberidx1.i136 = getelementptr inbounds %Map_String_PropId_, ptr %190, i64 0, i32 1
  %195 = load i64, ptr %memberidx1.i136, align 4
  %196 = load i64, ptr %memberidx16, align 4
  store i1 false, ptr %193, align 1
  %memberidx1.i.i138 = getelementptr inbounds %MapIterator_String_PropId_, ptr %193, i64 0, i32 1
  store ptr %194, ptr %memberidx1.i.i138, align 8
  %memberidx2.i.i139 = getelementptr inbounds %MapIterator_String_PropId_, ptr %193, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %193, i64 0, i32 3
  store i64 %196, ptr %memberidx3.i.i, align 4
  %197 = add nsw i64 %195, -1
  store i64 %197, ptr %memberidx2.i.i139, align 4
  %198 = icmp sgt i64 %195, 0
  br i1 %198, label %while.entry.i131, label %MapIterator_String_PropId__next.exit135

while.entry.i131:                                 ; preds = %ifend14, %ifend.i134
  %199 = phi i64 [ %202, %ifend.i134 ], [ %197, %ifend14 ]
  %200 = phi ptr [ %incdec.ptr.i129, %ifend.i134 ], [ %194, %ifend14 ]
  %incdec.ptr.i129 = getelementptr inbounds ptr, ptr %200, i64 1
  %201 = load ptr, ptr %200, align 8
  %.not.i130 = icmp eq ptr %201, null
  br i1 %.not.i130, label %ifend.i134, label %MapIterator_String_PropId__next.exit135.loopexit

ifend.i134:                                       ; preds = %while.entry.i131
  %202 = add nsw i64 %199, -1
  store i64 %202, ptr %memberidx2.i.i139, align 4
  %203 = icmp sgt i64 %199, 0
  br i1 %203, label %while.entry.i131, label %MapIterator_String_PropId__next.exit135.loopexit

MapIterator_String_PropId__next.exit135.loopexit: ; preds = %ifend.i134, %while.entry.i131
  %204 = phi i64 [ %202, %ifend.i134 ], [ %199, %while.entry.i131 ]
  store ptr %incdec.ptr.i129, ptr %memberidx1.i.i138, align 8
  br label %MapIterator_String_PropId__next.exit135

MapIterator_String_PropId__next.exit135:          ; preds = %MapIterator_String_PropId__next.exit135.loopexit, %ifend14
  %205 = phi i64 [ %204, %MapIterator_String_PropId__next.exit135.loopexit ], [ %197, %ifend14 ]
  %memberidx1.i.i138.promoted323 = phi ptr [ %incdec.ptr.i129, %MapIterator_String_PropId__next.exit135.loopexit ], [ %194, %ifend14 ]
  %storemerge327 = icmp slt i64 %196, 1
  br i1 %storemerge327, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_String_PropId__next.exit135
  %206 = add nuw i64 %5, 1
  %memberidx.i102 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %memberidx1.i103 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_String_PropId__next.exit
  %207 = phi i64 [ %205, %for.body.lr.ph ], [ %321, %MapIterator_String_PropId__next.exit ]
  %storemerge318332.in = phi i64 [ %196, %for.body.lr.ph ], [ %storemerge318332, %MapIterator_String_PropId__next.exit ]
  %idx.0331 = phi i64 [ 0, %for.body.lr.ph ], [ %283, %MapIterator_String_PropId__next.exit ]
  %incdec.ptr.i.lcssa325330 = phi ptr [ %memberidx1.i.i138.promoted323, %for.body.lr.ph ], [ %incdec.ptr.i.lcssa324, %MapIterator_String_PropId__next.exit ]
  %storemerge318332 = add nsw i64 %storemerge318332.in, -1
  %field_entry.0333.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa325330, i64 -1
  %field_entry.0333 = load ptr, ptr %field_entry.0333.in, align 8
  %208 = load ptr, ptr %memberidx, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_String_PropId_, ptr %field_entry.0333, i64 0, i32 1
  %209 = load ptr, ptr %memberidx20, align 8
  %memberidx.i.i122 = getelementptr inbounds %PropId, ptr %209, i64 0, i32 1
  %210 = load ptr, ptr %memberidx.i.i122, align 8
  %211 = load ptr, ptr %208, align 8
  %212 = load i64, ptr %210, align 4
  %213 = load ptr, ptr %211, align 8
  %214 = getelementptr inbounds ptr, ptr %213, i64 %212
  %215 = load ptr, ptr %214, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %215, i64 0, i32 3
  %216 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %210, i64 0, i32 2
  %217 = load i64, ptr %memberidx3.i.i.i, align 4
  %218 = load ptr, ptr %216, align 8
  %219 = getelementptr inbounds ptr, ptr %218, i64 %217
  %220 = load ptr, ptr %219, align 8
  %221 = load i64, ptr %209, align 4
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %if.entry.i125, label %ifend.i126

if.entry.i125:                                    ; preds = %for.body
  %memberidx1.i123 = getelementptr inbounds %Class, ptr %220, i64 0, i32 5
  %223 = load ptr, ptr %memberidx1.i123, align 8
  %memberidx2.i124 = getelementptr inbounds %PropId, ptr %209, i64 0, i32 2
  %224 = load i64, ptr %memberidx2.i124, align 4
  %225 = load ptr, ptr %223, align 8
  %226 = getelementptr inbounds ptr, ptr %225, i64 %224
  %227 = load ptr, ptr %226, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %227, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i126:                                       ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %220, i64 0, i32 4
  %228 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %209, i64 0, i32 2
  %229 = load i64, ptr %memberidx5.i, align 4
  %230 = load ptr, ptr %228, align 8
  %231 = getelementptr inbounds ptr, ptr %230, i64 %229
  %232 = load ptr, ptr %231, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %232, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i125, %ifend.i126
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i125 ], [ %memberidx6.i, %ifend.i126 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %233 = load ptr, ptr %field_entry.0333, align 8
  %234 = call fastcc ptr @CodeGen_get_member_with_name(ptr nonnull %0, ptr %1, ptr %2, ptr nonnull %3, ptr %233, ptr null)
  %235 = call fastcc ptr @CodeGen_get_string_val(ptr nonnull %0, ptr %1, ptr %234, ptr %common.ret.op.i, ptr %4, i64 %206)
  %236 = load i64, ptr %common.ret.op.i, align 4
  %237 = icmp eq i64 %236, 20
  br i1 %237, label %if.entry.i283, label %is_object.exit

if.entry.i283:                                    ; preds = %get_class_prop_type.exit, %if.entry.i283
  %.tr5.i = phi ptr [ %238, %if.entry.i283 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i282 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %238 = load ptr, ptr %memberidx1.i282, align 8
  %239 = load i64, ptr %238, align 4
  %240 = icmp eq i64 %239, 20
  br i1 %240, label %if.entry.i283, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i283, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %236, %get_class_prop_type.exit ], [ %239, %if.entry.i283 ]
  %241 = icmp eq i64 %.lcssa.i, 11
  %242 = call ptr @LLVMTypeOf(ptr %235)
  %243 = call i64 @LLVMGetTypeKind(ptr %242)
  %244 = icmp ne i64 %243, 12
  %245 = call i1 @LLVMIsGlobalConstant(ptr %235)
  %246 = or i1 %241, %245
  %247 = or i1 %244, %246
  br i1 %247, label %ifend24, label %if.entry22

for.end:                                          ; preds = %MapIterator_String_PropId__next.exit, %MapIterator_String_PropId__next.exit135
  %248 = phi i64 [ %142, %MapIterator_String_PropId__next.exit135 ], [ %314, %MapIterator_String_PropId__next.exit ]
  tail call void @free(ptr nonnull %193)
  %249 = call ptr @malloc(i32 1)
  store i8 125, ptr %249, align 8
  %250 = call ptr @malloc(i32 24)
  store ptr %249, ptr %250, align 8
  %memberidx1.i.i120 = getelementptr inbounds %String, ptr %250, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i120, align 4
  %memberidx2.i.i121 = getelementptr inbounds %String, ptr %250, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i121, align 4
  %251 = add nuw i64 %248, 1
  %252 = load i64, ptr %memberidx.i163, align 4
  %253 = icmp slt i64 %252, %251
  %254 = load ptr, ptr %132, align 8
  br i1 %253, label %if.entry.i.i.i118, label %String___adda__.exit119

if.entry.i.i.i118:                                ; preds = %for.end
  %255 = call ptr @realloc(ptr %254, i64 %251)
  store ptr %255, ptr %132, align 8
  store i64 %251, ptr %memberidx.i163, align 4
  %.pre364 = load i64, ptr %memberidx1.i.i161, align 4
  %.pre365 = load i8, ptr %249, align 8
  br label %String___adda__.exit119

String___adda__.exit119:                          ; preds = %for.end, %if.entry.i.i.i118
  %256 = phi i8 [ %.pre365, %if.entry.i.i.i118 ], [ 125, %for.end ]
  %257 = phi i64 [ %.pre364, %if.entry.i.i.i118 ], [ %248, %for.end ]
  %258 = phi ptr [ %255, %if.entry.i.i.i118 ], [ %254, %for.end ]
  %259 = getelementptr inbounds i8, ptr %258, i64 %257
  store i8 %256, ptr %259, align 2147483648
  %260 = load i64, ptr %memberidx1.i.i161, align 4
  %261 = add nuw i64 %260, 1
  store i64 %261, ptr %memberidx1.i.i161, align 4
  %262 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr nonnull %132, ptr nonnull %192, i64 %191, ptr null)
  %memberidx.i108 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %263 = load i64, ptr %memberidx.i108, align 4
  %memberidx1.i109 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %264 = load i64, ptr %memberidx1.i109, align 4
  %.not.i110 = icmp slt i64 %263, %264
  br i1 %.not.i110, label %String___adda__.exit119.Array_LLVMValueRef____sl__.exit114_crit_edge, label %if.entry.i112

String___adda__.exit119.Array_LLVMValueRef____sl__.exit114_crit_edge: ; preds = %String___adda__.exit119
  %.pre367 = load ptr, ptr %4, align 8
  br label %Array_LLVMValueRef____sl__.exit114

if.entry.i112:                                    ; preds = %String___adda__.exit119
  %265 = shl nuw i64 %264, 1
  store i64 %265, ptr %memberidx1.i109, align 4
  %266 = load ptr, ptr %4, align 8
  %267 = shl i64 %264, 4
  %268 = call ptr @realloc(ptr %266, i64 %267)
  store ptr %268, ptr %4, align 8
  %.pre366 = load i64, ptr %memberidx.i108, align 4
  br label %Array_LLVMValueRef____sl__.exit114

Array_LLVMValueRef____sl__.exit114:               ; preds = %String___adda__.exit119.Array_LLVMValueRef____sl__.exit114_crit_edge, %if.entry.i112
  %269 = phi ptr [ %.pre367, %String___adda__.exit119.Array_LLVMValueRef____sl__.exit114_crit_edge ], [ %268, %if.entry.i112 ]
  %270 = phi i64 [ %263, %String___adda__.exit119.Array_LLVMValueRef____sl__.exit114_crit_edge ], [ %.pre366, %if.entry.i112 ]
  %271 = add nsw i64 %270, 1
  store i64 %271, ptr %memberidx.i108, align 4
  %272 = getelementptr inbounds ptr, ptr %269, i64 %270
  store ptr %262, ptr %272, align 8
  br label %common.ret

if.entry22:                                       ; preds = %is_object.exit
  %273 = load i64, ptr %memberidx.i102, align 4
  %274 = load i64, ptr %memberidx1.i103, align 4
  %.not.i104 = icmp slt i64 %273, %274
  br i1 %.not.i104, label %if.entry22.Array_LLVMValueRef____sl__.exit_crit_edge, label %if.entry.i106

if.entry22.Array_LLVMValueRef____sl__.exit_crit_edge: ; preds = %if.entry22
  %.pre360 = load ptr, ptr %4, align 8
  br label %Array_LLVMValueRef____sl__.exit

if.entry.i106:                                    ; preds = %if.entry22
  %275 = shl nuw i64 %274, 1
  store i64 %275, ptr %memberidx1.i103, align 4
  %276 = load ptr, ptr %4, align 8
  %277 = shl i64 %274, 4
  %278 = call ptr @realloc(ptr %276, i64 %277)
  store ptr %278, ptr %4, align 8
  %.pre359 = load i64, ptr %memberidx.i102, align 4
  br label %Array_LLVMValueRef____sl__.exit

Array_LLVMValueRef____sl__.exit:                  ; preds = %if.entry22.Array_LLVMValueRef____sl__.exit_crit_edge, %if.entry.i106
  %279 = phi ptr [ %.pre360, %if.entry22.Array_LLVMValueRef____sl__.exit_crit_edge ], [ %278, %if.entry.i106 ]
  %280 = phi i64 [ %273, %if.entry22.Array_LLVMValueRef____sl__.exit_crit_edge ], [ %.pre359, %if.entry.i106 ]
  %281 = add nsw i64 %280, 1
  store i64 %281, ptr %memberidx.i102, align 4
  %282 = getelementptr inbounds ptr, ptr %279, i64 %280
  store ptr %235, ptr %282, align 8
  br label %ifend24

ifend24:                                          ; preds = %is_object.exit, %Array_LLVMValueRef____sl__.exit
  %283 = add nuw nsw i64 %idx.0331, 1
  %284 = getelementptr inbounds ptr, ptr %192, i64 %idx.0331
  store ptr %235, ptr %284, align 8
  %285 = load ptr, ptr %field_entry.0333, align 8
  %memberidx.i101 = getelementptr inbounds %String, ptr %285, i64 0, i32 1
  %286 = load i64, ptr %memberidx.i101, align 4
  %287 = trunc i64 %286 to i32
  %288 = add i32 %287, 1
  %289 = call ptr @malloc(i32 %288)
  %290 = load ptr, ptr %285, align 8
  %291 = load i64, ptr %memberidx.i101, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %289, ptr align 8 %290, i64 %291, i1 false)
  %292 = getelementptr inbounds i8, ptr %289, i64 %291
  store i8 0, ptr %292, align 1
  %293 = call fastcc ptr @get_format_from_type(ptr nonnull %common.ret.op.i)
  %memberidx.i100 = getelementptr inbounds %String, ptr %293, i64 0, i32 1
  %294 = load i64, ptr %memberidx.i100, align 4
  %295 = trunc i64 %294 to i32
  %296 = add i32 %295, 1
  %297 = call ptr @malloc(i32 %296)
  %298 = load ptr, ptr %293, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %297, ptr align 8 %298, i64 %294, i1 false)
  %299 = getelementptr inbounds i8, ptr %297, i64 %294
  store i8 0, ptr %299, align 1
  %300 = alloca ptr, align 8
  %301 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %300, ptr nonnull @252, ptr %289, ptr %297)
  %302 = load ptr, ptr %300, align 8
  %303 = tail call ptr @malloc(i32 24)
  store ptr %302, ptr %303, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %303, i64 0, i32 1
  store i64 %301, ptr %memberidx1.i, align 4
  %memberidx2.i99 = getelementptr inbounds %String, ptr %303, i64 0, i32 2
  store i64 %301, ptr %memberidx2.i99, align 4
  tail call void @free(ptr %289)
  tail call void @free(ptr %297)
  %304 = load i64, ptr %memberidx1.i.i161, align 4
  %305 = add nuw i64 %304, %301
  %306 = load i64, ptr %memberidx.i163, align 4
  %307 = icmp slt i64 %306, %305
  %308 = load ptr, ptr %132, align 8
  br i1 %307, label %if.entry.i.i.i, label %String___adda__.exit

if.entry.i.i.i:                                   ; preds = %ifend24
  %309 = call ptr @realloc(ptr %308, i64 %305)
  store ptr %309, ptr %132, align 8
  store i64 %305, ptr %memberidx.i163, align 4
  %.pre362 = load i64, ptr %memberidx1.i.i161, align 4
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %ifend24, %if.entry.i.i.i
  %310 = phi i64 [ %.pre362, %if.entry.i.i.i ], [ %304, %ifend24 ]
  %311 = phi ptr [ %309, %if.entry.i.i.i ], [ %308, %ifend24 ]
  %312 = getelementptr inbounds i8, ptr %311, i64 %310
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %312, ptr align 8 %302, i64 %301, i1 false)
  %313 = load i64, ptr %memberidx1.i.i161, align 4
  %314 = add nuw i64 %313, %301
  store i64 %314, ptr %memberidx1.i.i161, align 4
  %315 = add nsw i64 %207, -1
  store i64 %315, ptr %memberidx2.i.i139, align 4
  %316 = icmp sgt i64 %207, 0
  br i1 %316, label %while.entry.i, label %MapIterator_String_PropId__next.exit

while.entry.i:                                    ; preds = %String___adda__.exit, %ifend.i
  %317 = phi i64 [ %320, %ifend.i ], [ %315, %String___adda__.exit ]
  %318 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa325330, %String___adda__.exit ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %318, i64 1
  %319 = load ptr, ptr %318, align 8
  %.not.i = icmp eq ptr %319, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_PropId__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %320 = add nsw i64 %317, -1
  store i64 %320, ptr %memberidx2.i.i139, align 4
  %.not = icmp eq i64 %317, 0
  br i1 %.not, label %MapIterator_String_PropId__next.exit, label %while.entry.i

MapIterator_String_PropId__next.exit:             ; preds = %while.entry.i, %ifend.i, %String___adda__.exit
  %321 = phi i64 [ %315, %String___adda__.exit ], [ %317, %while.entry.i ], [ -1, %ifend.i ]
  %incdec.ptr.i.lcssa324 = phi ptr [ %incdec.ptr.i.lcssa325330, %String___adda__.exit ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge = icmp slt i64 %storemerge318332.in, 2
  br i1 %storemerge, label %for.end, label %for.body

if.entry26:                                       ; preds = %ifend4
  %322 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %322, ptr noundef nonnull align 8 dereferenceable(10) @253, i64 10, i1 false)
  %323 = tail call ptr @malloc(i32 24)
  store ptr %322, ptr %323, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %323, i64 0, i32 1
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %323, i64 0, i32 2
  store i64 10, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %324 = load ptr, ptr %memberidx.i, align 8
  %325 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %323)
  %memberidx.i201 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %324, i64 0, i32 1
  %326 = load i64, ptr %memberidx.i201, align 4
  %327 = urem i64 %325, %326
  %328 = load ptr, ptr %324, align 8
  %329 = getelementptr inbounds ptr, ptr %328, i64 %327
  %330 = load ptr, ptr %329, align 8
  %.not.i202 = icmp eq ptr %330, null
  br i1 %.not.i202, label %if.entry.i, label %while.entry.i206

while.entry.i206:                                 ; preds = %if.entry26, %else.i
  %331 = phi ptr [ %339, %else.i ], [ %328, %if.entry26 ]
  %332 = phi i64 [ %340, %else.i ], [ %326, %if.entry26 ]
  %333 = phi ptr [ %344, %else.i ], [ %330, %if.entry26 ]
  %hash.0.i = phi i64 [ %342, %else.i ], [ %327, %if.entry26 ]
  %334 = load ptr, ptr %333, align 8
  %memberidx.i.i203 = getelementptr inbounds %String, ptr %334, i64 0, i32 1
  %335 = load i64, ptr %memberidx.i.i203, align 4
  %.not.i.i205 = icmp eq i64 %335, 10
  br i1 %.not.i.i205, label %ifend.i.i207, label %else.i

ifend.i.i207:                                     ; preds = %while.entry.i206
  %336 = load ptr, ptr %334, align 8
  %337 = tail call i64 @memcmp(ptr %336, ptr %322, i64 10)
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %while.end.i, label %ifend.i.i207.else.i_crit_edge

ifend.i.i207.else.i_crit_edge:                    ; preds = %ifend.i.i207
  %.pre353 = load i64, ptr %memberidx.i201, align 4
  %.pre354 = load ptr, ptr %324, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i207
  %.pre355.pre = load ptr, ptr %324, align 8
  %.phi.trans.insert356.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre355.pre, i64 %hash.0.i
  %.pre357.pre = load ptr, ptr %.phi.trans.insert356.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre357.pre, null
  br i1 %.not25.i, label %if.entry.i, label %Map_String_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i207.else.i_crit_edge, %while.entry.i206
  %339 = phi ptr [ %.pre354, %ifend.i.i207.else.i_crit_edge ], [ %331, %while.entry.i206 ]
  %340 = phi i64 [ %.pre353, %ifend.i.i207.else.i_crit_edge ], [ %332, %while.entry.i206 ]
  %341 = add nuw i64 %hash.0.i, 1
  %342 = urem i64 %341, %340
  %343 = getelementptr inbounds ptr, ptr %339, i64 %342
  %344 = load ptr, ptr %343, align 8
  %.not26.i = icmp eq ptr %344, null
  br i1 %.not26.i, label %if.entry.i, label %while.entry.i206

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre357.pre, i64 0, i32 1
  %345 = load ptr, ptr %memberidx11.i, align 8
  %346 = icmp eq ptr %345, null
  br i1 %346, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %else.i, %if.entry26, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %347 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %347, ptr noundef nonnull align 8 dereferenceable(10) %322, i64 10, i1 false)
  %348 = getelementptr inbounds i8, ptr %347, i64 10
  store i8 0, ptr %348, align 1
  %349 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %347, ptr nonnull @80)
  %350 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %350, ptr nonnull %323, ptr %349)
  br label %common.ret

if.entry30:                                       ; preds = %ifend4
  %memberidx33 = getelementptr inbounds %EnumType, ptr %3, i64 0, i32 1
  %351 = load ptr, ptr %memberidx33, align 8
  %352 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %351)
  %.not.i194 = icmp eq ptr %352, null
  br i1 %.not.i194, label %ifend.i200, label %CodeGen_get_or_codegen_enum_from_typeid.exit

ifend.i200:                                       ; preds = %if.entry30
  %memberidx.i197 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %353 = load ptr, ptr %memberidx.i197, align 8
  %354 = load ptr, ptr %353, align 8
  %355 = load i64, ptr %351, align 4
  %356 = load ptr, ptr %354, align 8
  %357 = getelementptr inbounds ptr, ptr %356, i64 %355
  %358 = load ptr, ptr %357, align 8
  %memberidx2.i.i198 = getelementptr inbounds %Module, ptr %358, i64 0, i32 6
  %359 = load ptr, ptr %memberidx2.i.i198, align 8
  %memberidx3.i.i199 = getelementptr inbounds %TypeId, ptr %351, i64 0, i32 2
  %360 = load i64, ptr %memberidx3.i.i199, align 4
  %361 = load ptr, ptr %359, align 8
  %362 = getelementptr inbounds ptr, ptr %361, i64 %360
  %363 = load ptr, ptr %362, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %363)
  %364 = load ptr, ptr %363, align 8
  %365 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %364)
  br label %CodeGen_get_or_codegen_enum_from_typeid.exit

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry30, %ifend.i200
  %common.ret.op.i195 = phi ptr [ %365, %ifend.i200 ], [ %352, %if.entry30 ]
  %memberidx34 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i195, i64 0, i32 2
  %366 = load ptr, ptr %memberidx34, align 8
  store ptr %2, ptr %indices, align 8
  %367 = tail call ptr @LLVMTypeOf(ptr %366)
  %368 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %367, ptr %366, ptr nonnull %indices, i64 1, ptr nonnull @80)
  %369 = call ptr @LLVMTypeOf(ptr %368)
  %370 = call ptr @LLVMBuildLoad2(ptr %1, ptr %369, ptr %368, ptr nonnull @80)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_var_expr_mem(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %3)
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  %6 = tail call ptr @malloc(i32 45)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %6, ptr noundef nonnull align 8 dereferenceable(45) @258, i64 45, i1 false)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 24)
  %10 = tail call i64 @write(i64 1, ptr %8, i64 7)
  tail call void @free(ptr %8)
  tail call void @free(ptr %9)
  %11 = tail call i64 @write(i64 1, ptr %6, i64 45)
  %12 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %6)
  tail call void @free(ptr %7)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  ret ptr %4
}

define internal fastcc ptr @CodeGen_get_index_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %indices_1 = alloca [1 x ptr], align 8
  %indices = alloca [2 x ptr], align 8
  %indices1 = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %4)
  %memberidx2 = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 4
  %6 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 13
  br i1 %9, label %true_block, label %false_block

true_block:                                       ; preds = %3
  %memberidx4 = getelementptr inbounds %PointerType, ptr %7, i64 0, i32 1
  %10 = load ptr, ptr %memberidx4, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  br label %end

false_block:                                      ; preds = %3
  %12 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %7, i1 true)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %11, %true_block ], [ %12, %false_block ]
  %13 = load i64, ptr %7, align 4
  switch i64 %13, label %ifend10 [
    i64 14, label %if.entry
    i64 15, label %if.entry8
  ]

common.ret:                                       ; preds = %ifend10, %CodeGen_get_expr_mem.exit, %CodeGen_get_expr_mem.exit48
  %common.ret.op = phi ptr [ %23, %CodeGen_get_expr_mem.exit48 ], [ %34, %CodeGen_get_expr_mem.exit ], [ %37, %ifend10 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %end
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 0, i1 false)
  store ptr %15, ptr %indices, align 8
  %16 = getelementptr inbounds ptr, ptr %indices, i64 1
  store ptr %5, ptr %16, align 8
  %17 = load ptr, ptr %memberidx2, align 8
  %memberidx.i40 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx.i40, align 4
  switch i64 %18, label %ifend8.i47 [
    i64 8, label %if.entry.i42
    i64 14, label %if.entry2.i44
    i64 13, label %if.entry6.i46
  ]

if.entry.i42:                                     ; preds = %if.entry
  %19 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

if.entry2.i44:                                    ; preds = %if.entry
  %20 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

if.entry6.i46:                                    ; preds = %if.entry
  %21 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %17, ptr null)
  br label %CodeGen_get_expr_mem.exit48

ifend8.i47:                                       ; preds = %if.entry
  %22 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

CodeGen_get_expr_mem.exit48:                      ; preds = %if.entry.i42, %if.entry2.i44, %if.entry6.i46, %ifend8.i47
  %common.ret.op.i41 = phi ptr [ %19, %if.entry.i42 ], [ %20, %if.entry2.i44 ], [ %21, %if.entry6.i46 ], [ %22, %ifend8.i47 ]
  %23 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %common.ret.op.i41, ptr nonnull %indices, i64 2, ptr nonnull @80)
  br label %common.ret

if.entry8:                                        ; preds = %end
  %24 = tail call ptr @LLVMInt32Type()
  %25 = tail call ptr @LLVMConstInt(ptr %24, i64 0, i1 false)
  store ptr %25, ptr %indices1, align 8
  %26 = getelementptr inbounds ptr, ptr %indices1, i64 1
  %27 = tail call ptr @LLVMConstIntCast(ptr %5, ptr %24, i1 false)
  store ptr %27, ptr %26, align 8
  %28 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx.i, align 4
  switch i64 %29, label %ifend8.i [
    i64 8, label %if.entry.i
    i64 14, label %if.entry2.i
    i64 13, label %if.entry6.i
  ]

if.entry.i:                                       ; preds = %if.entry8
  %30 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry8
  %31 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry8
  %32 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %28, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry8
  %33 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i = phi ptr [ %30, %if.entry.i ], [ %31, %if.entry2.i ], [ %32, %if.entry6.i ], [ %33, %ifend8.i ]
  %34 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %common.ret.op.i, ptr nonnull %indices1, i64 2, ptr nonnull @80)
  br label %common.ret

ifend10:                                          ; preds = %end
  store ptr %5, ptr %indices_1, align 8
  %35 = load ptr, ptr %memberidx2, align 8
  %36 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %35)
  %37 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %36, ptr nonnull %indices_1, i64 1, ptr nonnull @80)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %indices_buffer = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %PropId, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %.not.i40 = icmp eq ptr %9, null
  br i1 %.not.i40, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %4
  %memberidx.i42 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %10 = load ptr, ptr %memberidx.i42, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = load i64, ptr %8, align 4
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx2.i.i43 = getelementptr inbounds %Module, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2.i.i43, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i, align 4
  %18 = load ptr, ptr %16, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %20)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %20)
  %21 = load ptr, ptr %20, align 8
  %22 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %21)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %4, %ifend.i
  %common.ret.op.i41 = phi ptr [ %22, %ifend.i ], [ %9, %4 ]
  %23 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i = getelementptr inbounds %PropId, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %25 = load i64, ptr %24, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i, align 4
  %28 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %25, i64 %26, i64 %27)
  %29 = load ptr, ptr %5, align 8
  %30 = call ptr @malloc(i32 24)
  store ptr %29, ptr %30, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  store i64 %28, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %31 = trunc i64 %28 to i32
  %32 = add i32 %31, 1
  %33 = call ptr @malloc(i32 %32)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %29, i64 %28, i1 false)
  %34 = getelementptr inbounds i8, ptr %33, i64 %28
  store i8 0, ptr %34, align 1
  %35 = load i64, ptr %23, align 4
  %memberidx2.i = getelementptr inbounds %PropId, ptr %23, i64 0, i32 2
  %36 = load i64, ptr %memberidx2.i, align 4
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @259, ptr %33, i64 %35, i64 %36)
  %38 = load ptr, ptr %6, align 8
  %39 = call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %33)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %40 = load ptr, ptr %common.ret.op.i41, align 8
  %memberidx4 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i41, i64 0, i32 3
  %41 = load ptr, ptr %memberidx4, align 8
  %42 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %39)
  %memberidx.i19 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %41, i64 0, i32 1
  %43 = load i64, ptr %memberidx.i19, align 4
  %44 = urem i64 %42, %43
  %45 = load ptr, ptr %41, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  %47 = load ptr, ptr %46, align 8
  %.not.i = icmp eq ptr %47, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit, %else.i
  %48 = phi ptr [ %56, %else.i ], [ %45, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %49 = phi i64 [ %57, %else.i ], [ %43, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %50 = phi ptr [ %61, %else.i ], [ %47, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %hash.0.i = phi i64 [ %59, %else.i ], [ %44, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %51 = load ptr, ptr %50, align 8
  %memberidx.i.i20 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i.i20, align 4
  %.not.i.i = icmp eq i64 %52, %37
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %53 = load ptr, ptr %51, align 8
  %54 = call i64 @memcmp(ptr %53, ptr %38, i64 %37)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i19, align 4
  %.pre51 = load ptr, ptr %41, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre52.pre = load ptr, ptr %41, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre52.pre, i64 %hash.0.i
  %.pre53.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre53.pre, null
  br i1 %.not25.i, label %ifend, label %Map_String_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %56 = phi ptr [ %.pre51, %ifend.i.i.else.i_crit_edge ], [ %48, %while.entry.i ]
  %57 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %49, %while.entry.i ]
  %58 = add nuw i64 %hash.0.i, 1
  %59 = urem i64 %58, %57
  %60 = getelementptr inbounds ptr, ptr %56, i64 %59
  %61 = load ptr, ptr %60, align 8
  %.not26.i = icmp eq ptr %61, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre53.pre, i64 0, i32 1
  %62 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %62, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_String_LLVMValueRef____getitem__.exit, %Map_String_uint____getitem__.exit
  %common.ret.op = phi ptr [ %93, %Map_String_uint____getitem__.exit ], [ %62, %Map_String_LLVMValueRef____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %63 = icmp eq ptr %3, null
  br i1 %63, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend
  %memberidx8 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %64 = load ptr, ptr %memberidx8, align 8
  %65 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %64)
  br label %ifend7

ifend7:                                           ; preds = %ifend, %if.entry5
  %ptr.0 = phi ptr [ %65, %if.entry5 ], [ %3, %ifend ]
  %66 = call ptr @LLVMInt32Type()
  %67 = call ptr @LLVMConstInt(ptr %66, i64 0, i1 false)
  store ptr %67, ptr %indices_buffer, align 8
  %68 = getelementptr inbounds ptr, ptr %indices_buffer, i64 1
  store ptr null, ptr %68, align 8
  %69 = call ptr @LLVMInt32Type()
  %memberidx9 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i41, i64 0, i32 2
  %70 = load ptr, ptr %memberidx9, align 8
  %71 = call fastcc i64 @Map_String_uint__hash_fnc(ptr nonnull %39)
  %memberidx.i22 = getelementptr inbounds %Map_String_uint_, ptr %70, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i22, align 4
  %73 = urem i64 %71, %72
  %74 = load ptr, ptr %70, align 8
  %75 = getelementptr inbounds ptr, ptr %74, i64 %73
  %76 = load ptr, ptr %75, align 8
  %.not.i23 = icmp eq ptr %76, null
  br i1 %.not.i23, label %Map_String_uint____getitem__.exit, label %while.entry.i28

while.entry.i28:                                  ; preds = %ifend7, %else.i36
  %77 = phi ptr [ %85, %else.i36 ], [ %74, %ifend7 ]
  %78 = phi i64 [ %86, %else.i36 ], [ %72, %ifend7 ]
  %79 = phi ptr [ %90, %else.i36 ], [ %76, %ifend7 ]
  %hash.0.i24 = phi i64 [ %88, %else.i36 ], [ %73, %ifend7 ]
  %80 = load ptr, ptr %79, align 8
  %memberidx.i.i25 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  %81 = load i64, ptr %memberidx.i.i25, align 4
  %.not.i.i27 = icmp eq i64 %81, %37
  br i1 %.not.i.i27, label %ifend.i.i29, label %else.i36

ifend.i.i29:                                      ; preds = %while.entry.i28
  %82 = load ptr, ptr %80, align 8
  %83 = call i64 @memcmp(ptr %82, ptr %38, i64 %37)
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %while.end.i34, label %ifend.i.i29.else.i36_crit_edge

ifend.i.i29.else.i36_crit_edge:                   ; preds = %ifend.i.i29
  %.pre54 = load i64, ptr %memberidx.i22, align 4
  %.pre55 = load ptr, ptr %70, align 8
  br label %else.i36

while.end.i34:                                    ; preds = %ifend.i.i29
  %.pre56.pre = load ptr, ptr %70, align 8
  %.phi.trans.insert57.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre56.pre, i64 %hash.0.i24
  %.pre58.pre = load ptr, ptr %.phi.trans.insert57.phi.trans.insert, align 8
  %.not25.i33 = icmp eq ptr %.pre58.pre, null
  br i1 %.not25.i33, label %Map_String_uint____getitem__.exit, label %if.entry7.i39

else.i36:                                         ; preds = %ifend.i.i29.else.i36_crit_edge, %while.entry.i28
  %85 = phi ptr [ %.pre55, %ifend.i.i29.else.i36_crit_edge ], [ %77, %while.entry.i28 ]
  %86 = phi i64 [ %.pre54, %ifend.i.i29.else.i36_crit_edge ], [ %78, %while.entry.i28 ]
  %87 = add nuw i64 %hash.0.i24, 1
  %88 = urem i64 %87, %86
  %89 = getelementptr inbounds ptr, ptr %85, i64 %88
  %90 = load ptr, ptr %89, align 8
  %.not26.i35 = icmp eq ptr %90, null
  br i1 %.not26.i35, label %Map_String_uint____getitem__.exit, label %while.entry.i28

if.entry7.i39:                                    ; preds = %while.end.i34
  %memberidx11.i38 = getelementptr inbounds %MapEntry_String_uint_, ptr %.pre58.pre, i64 0, i32 1
  %91 = load i64, ptr %memberidx11.i38, align 4
  br label %Map_String_uint____getitem__.exit

Map_String_uint____getitem__.exit:                ; preds = %else.i36, %ifend7, %while.end.i34, %if.entry7.i39
  %common.ret.op.i37 = phi i64 [ %91, %if.entry7.i39 ], [ 0, %while.end.i34 ], [ 0, %ifend7 ], [ 0, %else.i36 ]
  %92 = call ptr @LLVMConstInt(ptr %69, i64 %common.ret.op.i37, i1 false)
  store ptr %92, ptr %68, align 8
  %93 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %40, ptr %ptr.0, ptr nonnull %indices_buffer, i64 2, ptr nonnull @260)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_builtin_array(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
end:
  %args = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %4, i1 false)
  %memberidx1 = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %8, i1 true)
  %10 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %5, ptr nonnull @80)
  %memberidx2 = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Expression_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx3, align 4
  %13 = tail call i64 @llvm.smax.i64(i64 %12, i64 1)
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 %13, i1 false)
  %16 = tail call ptr @LLVMIntType(i64 64)
  %17 = tail call ptr @LLVMConstInt(ptr %16, i64 %12, i1 false)
  store ptr %10, ptr %args, align 8
  %18 = getelementptr inbounds ptr, ptr %args, i64 1
  %19 = tail call ptr @LLVMSizeOf(ptr %9)
  %20 = tail call ptr @LLVMConstMul(ptr %15, ptr %19)
  store ptr %20, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %21 = load i64, ptr %4, align 4
  %cond43 = icmp eq i64 %21, 20
  br i1 %cond43, label %if.entry.i40, label %get_class_from_type.exit

if.entry.i40:                                     ; preds = %end, %if.entry.i40
  %.tr11.i44 = phi ptr [ %22, %if.entry.i40 ], [ %4, %end ]
  %memberidx1.i39 = getelementptr inbounds %GenericType, ptr %.tr11.i44, i64 0, i32 3
  %22 = load ptr, ptr %memberidx1.i39, align 8
  %23 = load i64, ptr %22, align 4
  %cond = icmp eq i64 %23, 20
  br i1 %cond, label %if.entry.i40, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i40, %end
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %4, i64 0, i32 1
  %24 = load ptr, ptr %memberidx1.i, align 8
  %25 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %24)
  %.not.i30 = icmp eq ptr %25, null
  br i1 %.not.i30, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %26 = load ptr, ptr %memberidx.i, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = load i64, ptr %24, align 4
  %29 = load ptr, ptr %27, align 8
  %30 = getelementptr inbounds ptr, ptr %29, i64 %28
  %31 = load ptr, ptr %30, align 8
  %memberidx2.i.i33 = getelementptr inbounds %Module, ptr %31, i64 0, i32 3
  %32 = load ptr, ptr %memberidx2.i.i33, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 2
  %33 = load i64, ptr %memberidx3.i.i, align 4
  %34 = load ptr, ptr %32, align 8
  %35 = getelementptr inbounds ptr, ptr %34, i64 %33
  %36 = load ptr, ptr %35, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %36)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %36)
  %37 = load ptr, ptr %36, align 8
  %38 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %37)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %38, %ifend.i ], [ %25, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 4
  %39 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %40 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %39)
  %41 = call ptr @LLVMBuildCall2(ptr %1, ptr %40, ptr nonnull %39, ptr nonnull %args, i64 2, ptr nonnull @80)
  br label %CodeGen_build_constructor_call.exit

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %42 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %42, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %43 = tail call ptr @malloc(i32 24)
  %44 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %44, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %45 = tail call ptr @malloc(i32 24)
  %46 = tail call i64 @write(i64 1, ptr %44, i64 7)
  tail call void @free(ptr %44)
  tail call void @free(ptr %45)
  %47 = tail call i64 @write(i64 1, ptr %42, i64 47)
  %48 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %42)
  tail call void @free(ptr %43)
  tail call void @exit(i64 -1)
  br label %CodeGen_build_constructor_call.exit

CodeGen_build_constructor_call.exit:              ; preds = %if.entry.i, %else.i
  %49 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %49, ptr noundef nonnull align 8 dereferenceable(6) @261, i64 6, i1 false)
  %50 = call ptr @malloc(i32 24)
  store ptr %49, ptr %50, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %50, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i, align 4
  %51 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %10, ptr nonnull %4, ptr nonnull %50)
  %52 = call ptr @LLVMPointerType(ptr %9, i64 0)
  %53 = call ptr @LLVMBuildLoad2(ptr %1, ptr %52, ptr %51, ptr nonnull @80)
  %54 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %53, ptr %3)
  %55 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %55, ptr noundef nonnull align 8 dereferenceable(6) @262, i64 6, i1 false)
  %56 = call ptr @malloc(i32 24)
  store ptr %55, ptr %56, align 8
  %memberidx1.i.i28 = getelementptr inbounds %String, ptr %56, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i28, align 4
  %memberidx2.i.i29 = getelementptr inbounds %String, ptr %56, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i29, align 4
  %57 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %10, ptr nonnull %4, ptr nonnull %56)
  %58 = call ptr @LLVMBuildStore(ptr %1, ptr %17, ptr %57)
  ret ptr %10
}

define internal fastcc void @CodeGen_declare_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = tail call ptr @malloc(i32 40)
  %5 = tail call ptr @malloc(i32 24)
  %6 = tail call ptr @malloc(i32 2048)
  store ptr %6, ptr %5, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i67 = phi i64 [ 0, %2 ], [ %9, %for.body.i.i ]
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %i.0.i.i67
  store ptr null, ptr %8, align 8
  %9 = add nuw nsw i64 %i.0.i.i67, 1
  %10 = icmp ult i64 %i.0.i.i67, 255
  br i1 %10, label %for.body.i.i, label %Map_String_uint__constructor.exit.i

Map_String_uint__constructor.exit.i:              ; preds = %for.body.i.i
  %memberidx.i61 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 1
  %memberidx2.i.i62 = getelementptr inbounds %Map_String_uint_, ptr %5, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i62, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_String_uint_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %5, ptr %memberidx.i61, align 8
  %11 = tail call ptr @malloc(i32 24)
  %12 = tail call ptr @malloc(i32 2048)
  store ptr %12, ptr %11, align 8
  br label %for.body.i7.i

for.body.i7.i:                                    ; preds = %Map_String_uint__constructor.exit.i, %for.body.i7.i
  %i.0.i5.i66 = phi i64 [ 0, %Map_String_uint__constructor.exit.i ], [ %15, %for.body.i7.i ]
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %i.0.i5.i66
  store ptr null, ptr %14, align 8
  %15 = add nuw nsw i64 %i.0.i5.i66, 1
  %16 = icmp ult i64 %i.0.i5.i66, 255
  br i1 %16, label %for.body.i7.i, label %Map_String_uint__constructor.exit10.i

Map_String_uint__constructor.exit10.i:            ; preds = %for.body.i7.i
  %memberidx1.i63 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 2
  %memberidx2.i8.i = getelementptr inbounds %Map_String_uint_, ptr %11, i64 0, i32 1
  store i64 256, ptr %memberidx2.i8.i, align 4
  %memberidx3.i9.i = getelementptr inbounds %Map_String_uint_, ptr %11, i64 0, i32 2
  store i64 0, ptr %memberidx3.i9.i, align 4
  store ptr %11, ptr %memberidx1.i63, align 8
  %17 = tail call ptr @malloc(i32 24)
  %18 = tail call ptr @malloc(i32 2048)
  store ptr %18, ptr %17, align 8
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %Map_String_uint__constructor.exit10.i, %for.body.i13.i
  %i.0.i11.i65 = phi i64 [ 0, %Map_String_uint__constructor.exit10.i ], [ %21, %for.body.i13.i ]
  %19 = load ptr, ptr %17, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %i.0.i11.i65
  store ptr null, ptr %20, align 8
  %21 = add nuw nsw i64 %i.0.i11.i65, 1
  %22 = icmp ult i64 %i.0.i11.i65, 255
  br i1 %22, label %for.body.i13.i, label %CGClassType_constructor.exit

CGClassType_constructor.exit:                     ; preds = %for.body.i13.i
  %memberidx2.i64 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 3
  %memberidx2.i14.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %17, i64 0, i32 1
  store i64 256, ptr %memberidx2.i14.i, align 4
  %memberidx3.i15.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %17, i64 0, i32 2
  store i64 0, ptr %memberidx3.i15.i, align 4
  store ptr %17, ptr %memberidx2.i64, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = tail call ptr @LLVMGetModuleContext(ptr %23)
  %memberidx2 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2, align 8
  %memberidx.i60 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i60, align 4
  %27 = trunc i64 %26 to i32
  %28 = add i32 %27, 1
  %29 = tail call ptr @malloc(i32 %28)
  %30 = load ptr, ptr %25, align 8
  %31 = load i64, ptr %memberidx.i60, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr align 8 %30, i64 %31, i1 false)
  %32 = getelementptr inbounds i8, ptr %29, i64 %31
  store i8 0, ptr %32, align 1
  %33 = tail call ptr @LLVMStructCreateNamed(ptr %24, ptr %29)
  store ptr %33, ptr %4, align 8
  %34 = load ptr, ptr %1, align 8
  %memberidx.i58 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %35 = load ptr, ptr %memberidx.i58, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %36 = load i64, ptr %34, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %34, i64 0, i32 1
  %37 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %34, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i.i, align 4
  %39 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %36, i64 %37, i64 %38)
  %40 = load ptr, ptr %3, align 8
  %41 = call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  store i64 %39, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i59 = getelementptr inbounds %String, ptr %41, i64 0, i32 2
  store i64 %39, ptr %memberidx2.i.i.i59, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_String_CGClassType____setitem__(ptr %35, ptr nonnull %41, ptr nonnull %4)
  %42 = tail call ptr @malloc(i32 24)
  %memberidx.i56 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %42, i64 0, i32 1
  %memberidx1.i57 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %42, i64 0, i32 2
  store i64 8, ptr %memberidx1.i57, align 4
  %43 = call ptr @malloc(i32 64)
  store ptr %43, ptr %42, align 8
  store i64 0, ptr %memberidx.i56, align 4
  call fastcc void @CodeGen_declare_static_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1)
  call fastcc void @CodeGen_declare_class_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1, ptr nonnull %42)
  %44 = load ptr, ptr %4, align 8
  %45 = load ptr, ptr %42, align 8
  %46 = load i64, ptr %memberidx.i56, align 4
  call void @LLVMStructSetBody(ptr %44, ptr %45, i64 %46, i1 true)
  call void @free(ptr %45)
  tail call void @free(ptr nonnull %42)
  %memberidx9 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %47 = load ptr, ptr %memberidx9, align 8
  %.not = icmp eq ptr %47, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %CGClassType_constructor.exit
  %memberidx10 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %48 = load ptr, ptr %memberidx10, align 8
  %memberidx.i.i53 = getelementptr inbounds %PropId, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i.i53, align 8
  %50 = load ptr, ptr %48, align 8
  %51 = load i64, ptr %49, align 4
  %52 = load ptr, ptr %50, align 8
  %53 = getelementptr inbounds ptr, ptr %52, i64 %51
  %54 = load ptr, ptr %53, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %54, i64 0, i32 3
  %55 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %49, i64 0, i32 2
  %56 = load i64, ptr %memberidx3.i.i.i, align 4
  %57 = load ptr, ptr %55, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  %60 = load i64, ptr %47, align 4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %if.entry
  %memberidx1.i54 = getelementptr inbounds %Class, ptr %59, i64 0, i32 5
  %62 = load ptr, ptr %memberidx1.i54, align 8
  %memberidx2.i55 = getelementptr inbounds %PropId, ptr %47, i64 0, i32 2
  %63 = load i64, ptr %memberidx2.i55, align 4
  %64 = load ptr, ptr %62, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %66, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx4.i = getelementptr inbounds %Class, ptr %59, i64 0, i32 4
  %67 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %47, i64 0, i32 2
  %68 = load i64, ptr %memberidx5.i, align 4
  %69 = load ptr, ptr %67, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %71, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %72 = tail call ptr @malloc(i32 24)
  %memberidx.i51 = getelementptr inbounds %Array_Type_, ptr %72, i64 0, i32 1
  store i64 0, ptr %memberidx.i51, align 4
  %memberidx1.i52 = getelementptr inbounds %Array_Type_, ptr %72, i64 0, i32 2
  store i64 8, ptr %memberidx1.i52, align 4
  %73 = call ptr @malloc(i32 64)
  store ptr %73, ptr %72, align 8
  %74 = tail call ptr @malloc(i32 16)
  %75 = load ptr, ptr %1, align 8
  store i64 11, ptr %74, align 4
  %memberidx.i50 = getelementptr inbounds %ObjectType, ptr %74, i64 0, i32 1
  store ptr %75, ptr %memberidx.i50, align 8
  store ptr %74, ptr %73, align 8
  store i64 1, ptr %memberidx.i51, align 4
  %memberidx15 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 1
  %76 = load ptr, ptr %memberidx15, align 8
  %memberidx1.i48 = getelementptr inbounds %Array_Type_, ptr %76, i64 0, i32 1
  %77 = load i64, ptr %memberidx1.i48, align 4
  %78 = add nuw i64 %77, 1
  %79 = icmp sgt i64 %78, 8
  br i1 %79, label %while.entry.i.i, label %Array_Type____adda__.exit

while.entry.i.i:                                  ; preds = %get_class_prop_type.exit, %while.entry.i.i
  %80 = phi ptr [ %84, %while.entry.i.i ], [ %73, %get_class_prop_type.exit ]
  %81 = phi i64 [ %82, %while.entry.i.i ], [ 8, %get_class_prop_type.exit ]
  %82 = shl nuw i64 %81, 1
  %83 = shl i64 %81, 4
  %84 = call ptr @realloc(ptr %80, i64 %83)
  %85 = icmp slt i64 %82, %78
  br i1 %85, label %while.entry.i.i, label %Array_Type____adda__.exit.loopexit

Array_Type____adda__.exit.loopexit:               ; preds = %while.entry.i.i
  store i64 %82, ptr %memberidx1.i52, align 4
  store ptr %84, ptr %72, align 8
  %.pre = load i64, ptr %memberidx1.i48, align 4
  br label %Array_Type____adda__.exit

Array_Type____adda__.exit:                        ; preds = %Array_Type____adda__.exit.loopexit, %get_class_prop_type.exit
  %86 = phi i64 [ %.pre, %Array_Type____adda__.exit.loopexit ], [ %77, %get_class_prop_type.exit ]
  %87 = phi ptr [ %84, %Array_Type____adda__.exit.loopexit ], [ %73, %get_class_prop_type.exit ]
  %88 = getelementptr inbounds ptr, ptr %87, i64 1
  %89 = load ptr, ptr %76, align 8
  %90 = shl i64 %86, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2147483648 %88, ptr align 8 %89, i64 %90, i1 false)
  %91 = load i64, ptr %memberidx1.i48, align 4
  %92 = add nuw i64 %91, 1
  store i64 %92, ptr %memberidx.i51, align 4
  %93 = load ptr, ptr %memberidx15, align 8
  %94 = load ptr, ptr %93, align 8
  call void @free(ptr %94)
  tail call void @free(ptr %93)
  store ptr %72, ptr %memberidx15, align 8
  %95 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 false)
  %memberidx18 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 4
  %96 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %96, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i, align 4
  %98 = trunc i64 %97 to i32
  %99 = add i32 %98, 1
  %100 = call ptr @malloc(i32 %99)
  %101 = load ptr, ptr %96, align 8
  %102 = load i64, ptr %memberidx.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %100, ptr align 8 %101, i64 %102, i1 false)
  %103 = getelementptr inbounds i8, ptr %100, i64 %102
  store i8 0, ptr %103, align 1
  %104 = alloca ptr, align 8
  %105 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %104, ptr nonnull @291, ptr %100)
  %106 = load ptr, ptr %104, align 8
  %107 = tail call ptr @malloc(i32 24)
  store ptr %106, ptr %107, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %107, i64 0, i32 1
  store i64 %105, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %107, i64 0, i32 2
  store i64 %105, ptr %memberidx2.i, align 4
  tail call void @free(ptr %100)
  %108 = load ptr, ptr %0, align 8
  %109 = trunc i64 %105 to i32
  %110 = add i32 %109, 1
  %111 = call ptr @malloc(i32 %110)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %111, ptr align 8 %106, i64 %105, i1 false)
  %112 = getelementptr inbounds i8, ptr %111, i64 %105
  store i8 0, ptr %112, align 1
  %113 = call ptr @LLVMAddFunction(ptr %108, ptr %111, ptr %95)
  store ptr %113, ptr %memberidx18, align 8
  br label %ifend

else:                                             ; preds = %CGClassType_constructor.exit
  %memberidx20 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 4
  store ptr null, ptr %memberidx20, align 8
  br label %ifend

ifend:                                            ; preds = %else, %Array_Type____adda__.exit
  ret void
}

define internal fastcc void @CodeGen_codegen_match_case(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr %4) unnamed_addr {
  %memberidx23 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 2
  %6 = load i64, ptr %memberidx23, align 4
  %7 = icmp eq i64 %6, 9
  br i1 %7, label %if.entry, label %ifend

if.entry:                                         ; preds = %5, %if.entry2
  %.tr2124 = phi ptr [ %12, %if.entry2 ], [ %3, %5 ]
  %memberidx1 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 5
  %8 = load i64, ptr %memberidx1, align 4
  %9 = icmp eq i64 %8, 15
  br i1 %9, label %if.entry2, label %ifend

ifend:                                            ; preds = %if.entry2, %if.entry, %5
  %.tr21.lcssa = phi ptr [ %3, %5 ], [ %.tr2124, %if.entry ], [ %12, %if.entry2 ]
  %10 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %.tr21.lcssa)
  tail call void @LLVMAddCase(ptr %2, ptr %10, ptr %4)
  ret void

if.entry2:                                        ; preds = %if.entry
  %memberidx5 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 4
  %11 = load ptr, ptr %memberidx5, align 8
  tail call fastcc void @CodeGen_codegen_match_case(ptr %0, ptr %1, ptr %2, ptr %11, ptr %4)
  %memberidx6 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 6
  %12 = load ptr, ptr %memberidx6, align 8
  %memberidx = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp eq i64 %13, 9
  br i1 %14, label %if.entry, label %ifend
}

define internal fastcc ptr @CodeGen_get_class_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 24)
  store ptr %9, ptr %10, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_String_CGClassType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_String_CGClassType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i = icmp eq ptr %16, null
  br i1 %.not.i, label %Map_String_CGClassType____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %17 = phi ptr [ %25, %else.i ], [ %14, %2 ]
  %18 = phi i64 [ %26, %else.i ], [ %12, %2 ]
  %19 = phi ptr [ %30, %else.i ], [ %16, %2 ]
  %hash.0.i = phi i64 [ %28, %else.i ], [ %13, %2 ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %21, %8
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %22 = load ptr, ptr %20, align 8
  %23 = call i64 @memcmp(ptr %22, ptr %9, i64 %8)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre3 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre4.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre4.pre, i64 %hash.0.i
  %.pre5.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre5.pre, null
  br i1 %.not25.i, label %Map_String_CGClassType____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %25 = phi ptr [ %.pre3, %ifend.i.i.else.i_crit_edge ], [ %17, %while.entry.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %18, %while.entry.i ]
  %27 = add nuw i64 %hash.0.i, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not26.i = icmp eq ptr %30, null
  br i1 %.not26.i, label %Map_String_CGClassType____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %.pre5.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_CGClassType____getitem__.exit

Map_String_CGClassType____getitem__.exit:         ; preds = %else.i, %2, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %31, %if.entry7.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_enum_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 24)
  store ptr %9, ptr %10, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_String_CGEnumType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i = icmp eq ptr %16, null
  br i1 %.not.i, label %Map_String_CGEnumType____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %17 = phi ptr [ %25, %else.i ], [ %14, %2 ]
  %18 = phi i64 [ %26, %else.i ], [ %12, %2 ]
  %19 = phi ptr [ %30, %else.i ], [ %16, %2 ]
  %hash.0.i = phi i64 [ %28, %else.i ], [ %13, %2 ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %21, %8
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %22 = load ptr, ptr %20, align 8
  %23 = call i64 @memcmp(ptr %22, ptr %9, i64 %8)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre3 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre4.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre4.pre, i64 %hash.0.i
  %.pre5.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre5.pre, null
  br i1 %.not25.i, label %Map_String_CGEnumType____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %25 = phi ptr [ %.pre3, %ifend.i.i.else.i_crit_edge ], [ %17, %while.entry.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %18, %while.entry.i ]
  %27 = add nuw i64 %hash.0.i, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not26.i = icmp eq ptr %30, null
  br i1 %.not26.i, label %Map_String_CGEnumType____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %.pre5.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_CGEnumType____getitem__.exit

Map_String_CGEnumType____getitem__.exit:          ; preds = %else.i, %2, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %31, %if.entry7.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_member_mem_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3, ptr nocapture readonly %4) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx, align 8
  %7 = load i64, ptr %3, align 4
  %switch6 = icmp eq i64 %7, 20
  br i1 %switch6, label %if.entry.i3, label %if.entry3.i

if.entry.i3:                                      ; preds = %5, %if.entry.i3
  %.tr11.i7 = phi ptr [ %8, %if.entry.i3 ], [ %3, %5 ]
  %memberidx1.i2 = getelementptr inbounds %GenericType, ptr %.tr11.i7, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1.i2, align 8
  %9 = load i64, ptr %8, align 4
  %switch = icmp eq i64 %9, 20
  br i1 %switch, label %if.entry.i3, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i3, %5
  %.tr11.i.lcssa = phi ptr [ %3, %5 ], [ %8, %if.entry.i3 ]
  %memberidx6.i4 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %10 = load ptr, ptr %memberidx6.i4, align 8
  %11 = load ptr, ptr %6, align 8
  %12 = load i64, ptr %10, align 4
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %10, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i, align 4
  %18 = load ptr, ptr %16, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %20, i64 0, i32 6
  %21 = load ptr, ptr %memberidx1, align 8
  %22 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i, align 4
  %24 = urem i64 %22, %23
  %25 = load ptr, ptr %21, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  %.not.i = icmp eq ptr %27, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %28 = phi ptr [ %38, %else.i ], [ %25, %while.entry.i.preheader ]
  %29 = phi i64 [ %39, %else.i ], [ %23, %while.entry.i.preheader ]
  %30 = phi ptr [ %43, %else.i ], [ %27, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %41, %else.i ], [ %24, %while.entry.i.preheader ]
  %31 = load ptr, ptr %30, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %31, i64 0, i32 1
  %32 = load i64, ptr %memberidx.i.i, align 4
  %33 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %32, %33
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %34 = load ptr, ptr %31, align 8
  %35 = load ptr, ptr %4, align 8
  %36 = tail call i64 @memcmp(ptr %34, ptr %35, i64 %32)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre8 = load ptr, ptr %21, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre9.pre = load ptr, ptr %21, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre9.pre, i64 %hash.0.i
  %.pre10.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre10.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %38 = phi ptr [ %.pre8, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %39 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %29, %while.entry.i ]
  %40 = add nuw i64 %hash.0.i, 1
  %41 = urem i64 %40, %39
  %42 = getelementptr inbounds ptr, ptr %38, i64 %41
  %43 = load ptr, ptr %42, align 8
  %.not26.i = icmp eq ptr %43, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre10.pre, i64 0, i32 1
  %44 = load ptr, ptr %memberidx11.i, align 8
  %45 = icmp eq ptr %44, null
  br i1 %45, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_String_PropId____getitem__.exit, %ifend5
  %common.ret.op = phi ptr [ %71, %ifend5 ], [ null, %Map_String_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %46 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i12 = getelementptr inbounds %PropId, ptr %44, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i12, align 8
  %48 = load ptr, ptr %46, align 8
  %49 = load i64, ptr %47, align 4
  %50 = load ptr, ptr %48, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %49
  %52 = load ptr, ptr %51, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %52, i64 0, i32 3
  %53 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %47, i64 0, i32 2
  %54 = load i64, ptr %memberidx3.i.i.i, align 4
  %55 = load ptr, ptr %53, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 %54
  %57 = load ptr, ptr %56, align 8
  %58 = load i64, ptr %44, align 4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %57, i64 0, i32 5
  %60 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  %61 = load i64, ptr %memberidx2.i, align 4
  %62 = load ptr, ptr %60, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %64, i64 0, i32 4
  br label %ifend5

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %57, i64 0, i32 4
  %65 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  %66 = load i64, ptr %memberidx5.i, align 4
  %67 = load ptr, ptr %65, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %69, i64 0, i32 4
  br label %ifend5

ifend5:                                           ; preds = %ifend.i, %if.entry.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i13 = load ptr, ptr %common.ret.op.in.i, align 8
  %70 = alloca %MemberExpression, align 8
  store i64 8, ptr %70, align 8
  %memberidx.i.i14 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i14, align 4
  %memberidx1.i.i15 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i15, align 8
  %memberidx.i16 = getelementptr inbounds %MemberExpression, ptr %70, i64 0, i32 4
  store ptr null, ptr %memberidx.i16, align 8
  %memberidx1.i17 = getelementptr inbounds %MemberExpression, ptr %70, i64 0, i32 5
  store ptr %44, ptr %memberidx1.i17, align 8
  %memberidx2.i18 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 3
  store ptr %common.ret.op.i13, ptr %memberidx2.i18, align 8
  %71 = call fastcc ptr @CodeGen_get_member_expr_mem(ptr nonnull %0, ptr %1, ptr nonnull %70, ptr %2)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr nocapture readonly %4, ptr writeonly %5) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %3, align 4
  %switch31 = icmp eq i64 %8, 20
  br i1 %switch31, label %if.entry.i28, label %if.entry3.i

if.entry.i28:                                     ; preds = %6, %if.entry.i28
  %.tr11.i32 = phi ptr [ %9, %if.entry.i28 ], [ %3, %6 ]
  %memberidx1.i27 = getelementptr inbounds %GenericType, ptr %.tr11.i32, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i27, align 8
  %10 = load i64, ptr %9, align 4
  %switch = icmp eq i64 %10, 20
  br i1 %switch, label %if.entry.i28, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i28, %6
  %.tr11.i.lcssa = phi ptr [ %3, %6 ], [ %9, %if.entry.i28 ]
  %memberidx6.i29 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i29, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load i64, ptr %11, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %16, i64 0, i32 3
  %17 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %18 = load i64, ptr %memberidx3.i.i, align 4
  %19 = load ptr, ptr %17, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %18
  %21 = load ptr, ptr %20, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %21, i64 0, i32 6
  %22 = load ptr, ptr %memberidx1, align 8
  %23 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %4)
  %memberidx.i20 = getelementptr inbounds %Map_String_PropId_, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i20, align 4
  %25 = urem i64 %23, %24
  %26 = load ptr, ptr %22, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %.not.i = icmp eq ptr %28, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i22 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %29 = phi ptr [ %39, %else.i ], [ %26, %while.entry.i.preheader ]
  %30 = phi i64 [ %40, %else.i ], [ %24, %while.entry.i.preheader ]
  %31 = phi ptr [ %44, %else.i ], [ %28, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %42, %else.i ], [ %25, %while.entry.i.preheader ]
  %32 = load ptr, ptr %31, align 8
  %memberidx.i.i21 = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i.i21, align 4
  %34 = load i64, ptr %memberidx1.i.i22, align 4
  %.not.i.i = icmp eq i64 %33, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %35 = load ptr, ptr %32, align 8
  %36 = load ptr, ptr %4, align 8
  %37 = tail call i64 @memcmp(ptr %35, ptr %36, i64 %33)
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i20, align 4
  %.pre33 = load ptr, ptr %22, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre34.pre = load ptr, ptr %22, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre34.pre, i64 %hash.0.i
  %.pre35.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre35.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %39 = phi ptr [ %.pre33, %ifend.i.i.else.i_crit_edge ], [ %29, %while.entry.i ]
  %40 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %30, %while.entry.i ]
  %41 = add nuw i64 %hash.0.i, 1
  %42 = urem i64 %41, %40
  %43 = getelementptr inbounds ptr, ptr %39, i64 %42
  %44 = load ptr, ptr %43, align 8
  %.not26.i = icmp eq ptr %44, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre35.pre, i64 0, i32 1
  %45 = load ptr, ptr %memberidx11.i, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_String_PropId____getitem__.exit, %ifend5
  %common.ret.op = phi ptr [ %73, %ifend5 ], [ null, %Map_String_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %47 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i17 = getelementptr inbounds %PropId, ptr %45, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i.i17, align 8
  %49 = load ptr, ptr %47, align 8
  %50 = load i64, ptr %48, align 4
  %51 = load ptr, ptr %49, align 8
  %52 = getelementptr inbounds ptr, ptr %51, i64 %50
  %53 = load ptr, ptr %52, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %53, i64 0, i32 3
  %54 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %48, i64 0, i32 2
  %55 = load i64, ptr %memberidx3.i.i.i, align 4
  %56 = load ptr, ptr %54, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %55
  %58 = load ptr, ptr %57, align 8
  %59 = load i64, ptr %45, align 4
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i18 = getelementptr inbounds %Class, ptr %58, i64 0, i32 5
  %61 = load ptr, ptr %memberidx1.i18, align 8
  %memberidx2.i19 = getelementptr inbounds %PropId, ptr %45, i64 0, i32 2
  %62 = load i64, ptr %memberidx2.i19, align 4
  %63 = load ptr, ptr %61, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %65, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %58, i64 0, i32 4
  %66 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %45, i64 0, i32 2
  %67 = load i64, ptr %memberidx5.i, align 4
  %68 = load ptr, ptr %66, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %70, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend5, label %if.entry3

if.entry3:                                        ; preds = %get_class_prop_type.exit
  store ptr %common.ret.op.i, ptr %5, align 8
  br label %ifend5

ifend5:                                           ; preds = %get_class_prop_type.exit, %if.entry3
  %71 = alloca %Expression, align 8
  store i64 8, ptr %71, align 8
  %memberidx.i15 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 2
  store i64 8, ptr %memberidx.i15, align 4
  %memberidx1.i16 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 1
  store i1 false, ptr %memberidx1.i16, align 8
  %memberidx6 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 3
  store ptr %3, ptr %memberidx6, align 8
  %72 = alloca %MemberExpression, align 8
  store i64 8, ptr %72, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 8
  %memberidx.i = getelementptr inbounds %MemberExpression, ptr %72, i64 0, i32 4
  store ptr %71, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %MemberExpression, ptr %72, i64 0, i32 5
  store ptr %45, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  store ptr %common.ret.op.i, ptr %memberidx2.i, align 8
  %73 = call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %72, ptr %2)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_for_stmt(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @LLVMAppendBasicBlock(ptr %4, ptr nonnull @283)
  %6 = tail call ptr @LLVMBuildBr(ptr %1, ptr %5)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %5)
  %memberidx1 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1, align 8
  %.not = icmp eq ptr %7, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %7)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %memberidx3 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 2
  %8 = load ptr, ptr %memberidx3, align 8
  %.not95 = icmp eq ptr %8, null
  br i1 %.not95, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %8)
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %9 = load ptr, ptr %memberidx, align 8
  %10 = tail call ptr @LLVMAppendBasicBlock(ptr %9, ptr nonnull @284)
  %11 = load ptr, ptr %memberidx, align 8
  %12 = tail call ptr @LLVMAppendBasicBlock(ptr %11, ptr nonnull @285)
  %13 = load ptr, ptr %memberidx, align 8
  %14 = tail call ptr @LLVMAppendBasicBlock(ptr %13, ptr nonnull @286)
  %15 = load ptr, ptr %memberidx, align 8
  %16 = tail call ptr @LLVMAppendBasicBlock(ptr %15, ptr nonnull @287)
  %memberidx12 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %memberidx12, align 8
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %memberidx13, align 8
  store ptr %16, ptr %memberidx12, align 8
  store ptr %14, ptr %memberidx13, align 8
  %19 = tail call ptr @LLVMBuildBr(ptr %1, ptr %10)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %10)
  %20 = tail call ptr @LLVMInt1Type()
  %21 = tail call ptr @LLVMConstInt(ptr %20, i64 1, i1 false)
  %memberidx16 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %memberidx16, align 8
  %.not96 = icmp eq ptr %22, null
  br i1 %.not96, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend6
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %22)
  br label %ifend19

ifend19:                                          ; preds = %ifend6, %if.entry17
  %condition.0 = phi ptr [ %23, %if.entry17 ], [ %21, %ifend6 ]
  %24 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %condition.0, ptr %12, ptr %16)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %12)
  %memberidx21 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 5
  %25 = load ptr, ptr %memberidx21, align 8
  %memberidx.i108 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %26 = load i1, ptr %memberidx.i108, align 1
  store i1 false, ptr %memberidx.i108, align 1
  %27 = load ptr, ptr %25, align 8
  %28 = tail call ptr @malloc(i32 25)
  %29 = load ptr, ptr %27, align 8
  %memberidx1.i.i109 = getelementptr inbounds %Array_Statement_, ptr %27, i64 0, i32 1
  %30 = load i64, ptr %memberidx1.i.i109, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %ifend19, %for.body.i
  %32 = phi i64 [ %33, %for.body.i ], [ 1, %ifend19 ]
  %statement.0.i112.in = phi ptr [ %34, %for.body.i ], [ %29, %ifend19 ]
  %statement.0.i112 = load ptr, ptr %statement.0.i112.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i112)
  %33 = add nuw nsw i64 %32, 1
  store i64 %33, ptr %memberidx1.i.i.i, align 4
  %34 = getelementptr inbounds ptr, ptr %29, i64 %32
  %.not113 = icmp slt i64 %32, %30
  br i1 %.not113, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %ifend19
  tail call void @free(ptr nonnull %28)
  %memberidx4.i = getelementptr inbounds %Block, ptr %25, i64 0, i32 4
  %35 = load ptr, ptr %memberidx4.i, align 8
  %.not.i = icmp eq ptr %35, null
  br i1 %.not.i, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %36 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %35)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  store i1 %26, ptr %memberidx.i108, align 1
  %37 = load ptr, ptr %memberidx21, align 8
  %memberidx.i = getelementptr inbounds %Block, ptr %37, i64 0, i32 1
  %38 = load i1, ptr %memberidx.i, align 1
  %memberidx1.i = getelementptr inbounds %Block, ptr %37, i64 0, i32 2
  %39 = load i1, ptr %memberidx1.i, align 1
  %40 = or i1 %38, %39
  %memberidx2.i = getelementptr inbounds %Block, ptr %37, i64 0, i32 3
  %41 = load i1, ptr %memberidx2.i, align 1
  %42 = or i1 %40, %41
  br i1 %42, label %ifend25, label %if.entry23

if.entry23:                                       ; preds = %CodeGen_codegen_block.exit
  %43 = tail call ptr @LLVMBuildBr(ptr %1, ptr %14)
  br label %ifend25

ifend25:                                          ; preds = %CodeGen_codegen_block.exit, %if.entry23
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %14)
  %memberidx26 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 4
  %44 = load ptr, ptr %memberidx26, align 8
  %.not97 = icmp eq ptr %44, null
  br i1 %.not97, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend25
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %44)
  br label %ifend29

ifend29:                                          ; preds = %ifend25, %if.entry27
  %45 = tail call ptr @LLVMBuildBr(ptr %1, ptr %10)
  store ptr %17, ptr %memberidx12, align 8
  store ptr %18, ptr %memberidx13, align 8
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %16)
  %46 = load ptr, ptr %memberidx1, align 8
  %.not98 = icmp eq ptr %46, null
  br i1 %.not98, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %ifend29
  %memberidx38 = getelementptr inbounds %VarDeclaration, ptr %46, i64 0, i32 2
  %47 = load ptr, ptr %memberidx38, align 8
  %48 = alloca %VarAccessExpression, align 8
  %memberidx39 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %49 = load ptr, ptr %memberidx39, align 8
  %50 = load ptr, ptr %49, align 8
  %memberidx1.i99 = getelementptr inbounds %VarId, ptr %47, i64 0, i32 1
  %51 = load i64, ptr %memberidx1.i99, align 4
  %52 = load ptr, ptr %50, align 8
  %53 = getelementptr inbounds ptr, ptr %52, i64 %51
  %54 = load ptr, ptr %53, align 8
  %memberidx2.i100 = getelementptr inbounds %Module, ptr %54, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i100, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %47, i64 0, i32 2
  %56 = load i64, ptr %memberidx3.i, align 4
  %57 = load ptr, ptr %55, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  %60 = load ptr, ptr %59, align 8
  store i64 8, ptr %48, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %48, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %48, i64 0, i32 1
  %memberidx.i101 = getelementptr inbounds %VarAccessExpression, ptr %48, i64 0, i32 4
  store ptr %47, ptr %memberidx.i101, align 8
  %memberidx1.i102 = getelementptr inbounds %Expression, ptr %48, i64 0, i32 3
  store ptr %60, ptr %memberidx1.i102, align 8
  %61 = load i64, ptr %47, align 4
  %62 = icmp eq i64 %61, 2
  store i1 %62, ptr %memberidx1.i.i, align 8
  %63 = call fastcc ptr @CodeGen_codegen_var_access_exp(ptr nonnull %0, ptr %1, ptr nonnull %48)
  %64 = tail call ptr @LLVMBuildFree(ptr %1, ptr %63)
  br label %ifend36

ifend36:                                          ; preds = %ifend29, %if.entry34
  ret void
}

define internal fastcc ptr @CodeGen_codegen_member_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %7, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = load i64, ptr %8, align 4
  %10 = icmp eq i64 %9, 20
  br i1 %10, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %4, %if.entry.i
  %.tr5.i = phi ptr [ %11, %if.entry.i ], [ %8, %4 ]
  %memberidx1.i119 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %11 = load ptr, ptr %memberidx1.i119, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 20
  br i1 %13, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %4
  %.lcssa.i = phi i64 [ %9, %4 ], [ %12, %if.entry.i ]
  %14 = icmp eq i64 %.lcssa.i, 11
  br i1 %14, label %if.entry, label %ifend

if.entry:                                         ; preds = %is_object.exit
  %15 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr %2, ptr %3)
  %memberidx2 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 16
  br i1 %18, label %common.ret, label %ifend5

ifend:                                            ; preds = %is_object.exit
  %memberidx8 = getelementptr inbounds %VarAccessExpression, ptr %7, i64 0, i32 4
  %19 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %20 = load ptr, ptr %memberidx9, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i63 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i63, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %22 = load i64, ptr %21, align 4
  %memberidx1.i.i64 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx1.i.i64, align 4
  %memberidx2.i.i65 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 2
  %24 = load i64, ptr %memberidx2.i.i65, align 4
  %25 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %22, i64 %23, i64 %24)
  %26 = load ptr, ptr %5, align 8
  %27 = call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i.i66 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i.i.i66, align 4
  %memberidx2.i.i.i67 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 %25, ptr %memberidx2.i.i.i67, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %28 = trunc i64 %25 to i32
  %29 = add i32 %28, 1
  %30 = call ptr @malloc(i32 %29)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr align 8 %26, i64 %25, i1 false)
  %31 = getelementptr inbounds i8, ptr %30, i64 %25
  store i8 0, ptr %31, align 1
  %32 = load i64, ptr %20, align 4
  %memberidx2.i = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %33 = load i64, ptr %memberidx2.i, align 4
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @259, ptr %30, i64 %32, i64 %33)
  %35 = load ptr, ptr %6, align 8
  %36 = call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %37 = load i64, ptr %19, align 4
  switch i64 %37, label %common.ret [
    i64 3, label %if.entry11
    i64 4, label %if.entry27
  ]

common.ret:                                       ; preds = %else.i, %ifend32, %if.entry7.i, %while.end.i, %ifend20, %ifend, %if.entry, %ifend24, %ifend5
  %common.ret.op = phi ptr [ %39, %ifend5 ], [ %97, %ifend24 ], [ %15, %if.entry ], [ null, %ifend ], [ %common.ret.op.i90124, %ifend20 ], [ %142, %if.entry7.i ], [ null, %while.end.i ], [ null, %ifend32 ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend5:                                           ; preds = %if.entry
  %38 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %16, i1 true)
  %39 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %38, ptr %15, ptr nonnull @80)
  br label %common.ret

if.entry11:                                       ; preds = %ifend
  %40 = call ptr @malloc(i32 24)
  %memberidx.i71 = getelementptr inbounds %VarId, ptr %19, i64 0, i32 1
  %41 = load i64, ptr %memberidx.i71, align 4
  %memberidx1.i72 = getelementptr inbounds %VarId, ptr %19, i64 0, i32 2
  %42 = load i64, ptr %memberidx1.i72, align 4
  store i64 %41, ptr %40, align 4
  %memberidx1.i.i.i73 = getelementptr inbounds %TypeId, ptr %40, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i73, align 4
  %memberidx2.i.i.i74 = getelementptr inbounds %TypeId, ptr %40, i64 0, i32 2
  store i64 %42, ptr %memberidx2.i.i.i74, align 4
  %43 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr nonnull %40)
  %.not.i99 = icmp eq ptr %43, null
  br i1 %.not.i99, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %ifend16

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry11
  %memberidx.i101 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %44 = load ptr, ptr %memberidx.i101, align 8
  %45 = load ptr, ptr %44, align 8
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %41
  %48 = load ptr, ptr %47, align 8
  %memberidx2.i.i102 = getelementptr inbounds %Module, ptr %48, i64 0, i32 3
  %49 = load ptr, ptr %memberidx2.i.i102, align 8
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %42
  %52 = load ptr, ptr %51, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %52)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %52)
  %53 = load ptr, ptr %52, align 8
  %54 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %53)
  %55 = icmp eq ptr %54, null
  br i1 %55, label %if.entry14, label %ifend16

if.entry14:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %56 = call ptr @malloc(i32 51)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(51) %56, ptr noundef nonnull align 8 dereferenceable(51) @276, i64 51, i1 false)
  %57 = call ptr @malloc(i32 24)
  %58 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %58, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %59 = call ptr @malloc(i32 24)
  %60 = call i64 @write(i64 1, ptr %58, i64 7)
  call void @free(ptr %58)
  call void @free(ptr %59)
  %61 = call i64 @write(i64 1, ptr %56, i64 51)
  %62 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %56)
  call void @free(ptr %57)
  call void @exit(i64 -1)
  unreachable

ifend16:                                          ; preds = %if.entry11, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i100122 = phi ptr [ %54, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %43, %if.entry11 ]
  %memberidx17 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i100122, i64 0, i32 3
  %63 = load ptr, ptr %memberidx17, align 8
  %64 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %36)
  %memberidx.i75 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i75, align 4
  %66 = urem i64 %64, %65
  %67 = load ptr, ptr %63, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %.not.i76 = icmp eq ptr %69, null
  br i1 %.not.i76, label %if.entry18, label %while.entry.i81

while.entry.i81:                                  ; preds = %ifend16, %else.i89
  %70 = phi ptr [ %78, %else.i89 ], [ %67, %ifend16 ]
  %71 = phi i64 [ %79, %else.i89 ], [ %65, %ifend16 ]
  %72 = phi ptr [ %83, %else.i89 ], [ %69, %ifend16 ]
  %hash.0.i77 = phi i64 [ %81, %else.i89 ], [ %66, %ifend16 ]
  %73 = load ptr, ptr %72, align 8
  %memberidx.i.i78 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i.i78, align 4
  %.not.i.i80 = icmp eq i64 %74, %34
  br i1 %.not.i.i80, label %ifend.i.i82, label %else.i89

ifend.i.i82:                                      ; preds = %while.entry.i81
  %75 = load ptr, ptr %73, align 8
  %76 = call i64 @memcmp(ptr %75, ptr %35, i64 %34)
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %while.end.i87, label %ifend.i.i82.else.i89_crit_edge

ifend.i.i82.else.i89_crit_edge:                   ; preds = %ifend.i.i82
  %.pre131 = load i64, ptr %memberidx.i75, align 4
  %.pre132 = load ptr, ptr %63, align 8
  br label %else.i89

while.end.i87:                                    ; preds = %ifend.i.i82
  %.pre133.pre = load ptr, ptr %63, align 8
  %.phi.trans.insert134.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre133.pre, i64 %hash.0.i77
  %.pre135.pre = load ptr, ptr %.phi.trans.insert134.phi.trans.insert, align 8
  %.not25.i86 = icmp eq ptr %.pre135.pre, null
  br i1 %.not25.i86, label %if.entry18, label %Map_String_LLVMValueRef____getitem__.exit93

else.i89:                                         ; preds = %ifend.i.i82.else.i89_crit_edge, %while.entry.i81
  %78 = phi ptr [ %.pre132, %ifend.i.i82.else.i89_crit_edge ], [ %70, %while.entry.i81 ]
  %79 = phi i64 [ %.pre131, %ifend.i.i82.else.i89_crit_edge ], [ %71, %while.entry.i81 ]
  %80 = add nuw i64 %hash.0.i77, 1
  %81 = urem i64 %80, %79
  %82 = getelementptr inbounds ptr, ptr %78, i64 %81
  %83 = load ptr, ptr %82, align 8
  %.not26.i88 = icmp eq ptr %83, null
  br i1 %.not26.i88, label %if.entry18, label %while.entry.i81

Map_String_LLVMValueRef____getitem__.exit93:      ; preds = %while.end.i87
  %memberidx11.i91 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre135.pre, i64 0, i32 1
  %84 = load ptr, ptr %memberidx11.i91, align 8
  %85 = icmp eq ptr %84, null
  br i1 %85, label %if.entry18, label %ifend20

if.entry18:                                       ; preds = %else.i89, %ifend16, %while.end.i87, %Map_String_LLVMValueRef____getitem__.exit93
  %86 = call ptr @malloc(i32 59)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(59) %86, ptr noundef nonnull align 8 dereferenceable(59) @277, i64 59, i1 false)
  %87 = call ptr @malloc(i32 24)
  %88 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %88, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %89 = call ptr @malloc(i32 24)
  %90 = call i64 @write(i64 1, ptr %88, i64 7)
  call void @free(ptr %88)
  call void @free(ptr %89)
  %91 = call i64 @write(i64 1, ptr %86, i64 59)
  %92 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %86)
  call void @free(ptr %87)
  call void @exit(i64 -1)
  br label %ifend20

ifend20:                                          ; preds = %Map_String_LLVMValueRef____getitem__.exit93, %if.entry18
  %common.ret.op.i90124 = phi ptr [ %84, %Map_String_LLVMValueRef____getitem__.exit93 ], [ null, %if.entry18 ]
  %memberidx21 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %93 = load ptr, ptr %memberidx21, align 8
  %94 = load i64, ptr %93, align 4
  %95 = icmp eq i64 %94, 16
  br i1 %95, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend20
  %96 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %93, i1 true)
  %97 = call ptr @LLVMBuildLoad2(ptr %1, ptr %96, ptr %common.ret.op.i90124, ptr nonnull @80)
  br label %common.ret

if.entry27:                                       ; preds = %ifend
  %98 = call ptr @malloc(i32 24)
  %memberidx.i57 = getelementptr inbounds %VarId, ptr %19, i64 0, i32 1
  %99 = load i64, ptr %memberidx.i57, align 4
  %memberidx1.i = getelementptr inbounds %VarId, ptr %19, i64 0, i32 2
  %100 = load i64, ptr %memberidx1.i, align 4
  store i64 %99, ptr %98, align 4
  %memberidx1.i.i.i58 = getelementptr inbounds %TypeId, ptr %98, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i58, align 4
  %memberidx2.i.i.i59 = getelementptr inbounds %TypeId, ptr %98, i64 0, i32 2
  store i64 %100, ptr %memberidx2.i.i.i59, align 4
  %101 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr nonnull %98)
  %.not.i103 = icmp eq ptr %101, null
  br i1 %.not.i103, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %ifend32

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry27
  %memberidx.i106 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %102 = load ptr, ptr %memberidx.i106, align 8
  %103 = load ptr, ptr %102, align 8
  %104 = load ptr, ptr %103, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %99
  %106 = load ptr, ptr %105, align 8
  %memberidx2.i.i107 = getelementptr inbounds %Module, ptr %106, i64 0, i32 6
  %107 = load ptr, ptr %memberidx2.i.i107, align 8
  %108 = load ptr, ptr %107, align 8
  %109 = getelementptr inbounds ptr, ptr %108, i64 %100
  %110 = load ptr, ptr %109, align 8
  call fastcc void @CodeGen_declare_enum(ptr %0, ptr %110)
  %111 = load ptr, ptr %110, align 8
  %112 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %111)
  %113 = icmp eq ptr %112, null
  br i1 %113, label %if.entry30, label %ifend32

if.entry30:                                       ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit
  %114 = call ptr @malloc(i32 50)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %114, ptr noundef nonnull align 8 dereferenceable(50) @278, i64 50, i1 false)
  %115 = call ptr @malloc(i32 24)
  %116 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %116, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %117 = call ptr @malloc(i32 24)
  %118 = call i64 @write(i64 1, ptr %116, i64 7)
  call void @free(ptr %116)
  call void @free(ptr %117)
  %119 = call i64 @write(i64 1, ptr %114, i64 50)
  %120 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %114)
  call void @free(ptr %115)
  call void @exit(i64 -1)
  unreachable

ifend32:                                          ; preds = %if.entry27, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i104127 = phi ptr [ %112, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %101, %if.entry27 ]
  %memberidx33 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i104127, i64 0, i32 1
  %121 = load ptr, ptr %memberidx33, align 8
  %122 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %36)
  %memberidx.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %121, i64 0, i32 1
  %123 = load i64, ptr %memberidx.i, align 4
  %124 = urem i64 %122, %123
  %125 = load ptr, ptr %121, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %124
  %127 = load ptr, ptr %126, align 8
  %.not.i = icmp eq ptr %127, null
  br i1 %.not.i, label %common.ret, label %while.entry.i

while.entry.i:                                    ; preds = %ifend32, %else.i
  %128 = phi ptr [ %136, %else.i ], [ %125, %ifend32 ]
  %129 = phi i64 [ %137, %else.i ], [ %123, %ifend32 ]
  %130 = phi ptr [ %141, %else.i ], [ %127, %ifend32 ]
  %hash.0.i = phi i64 [ %139, %else.i ], [ %124, %ifend32 ]
  %131 = load ptr, ptr %130, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %131, i64 0, i32 1
  %132 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %132, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %133 = load ptr, ptr %131, align 8
  %134 = call i64 @memcmp(ptr %133, ptr %35, i64 %34)
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre128 = load ptr, ptr %121, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre129.pre = load ptr, ptr %121, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre129.pre, i64 %hash.0.i
  %.pre130.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre130.pre, null
  br i1 %.not25.i, label %common.ret, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %136 = phi ptr [ %.pre128, %ifend.i.i.else.i_crit_edge ], [ %128, %while.entry.i ]
  %137 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %129, %while.entry.i ]
  %138 = add nuw i64 %hash.0.i, 1
  %139 = urem i64 %138, %137
  %140 = getelementptr inbounds ptr, ptr %136, i64 %139
  %141 = load ptr, ptr %140, align 8
  %.not26.i = icmp eq ptr %141, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre130.pre, i64 0, i32 1
  %142 = load ptr, ptr %memberidx11.i, align 8
  br label %common.ret
}

define internal fastcc void @CodeGen_declare_static_props(ptr nocapture %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Class, ptr %2, i64 0, i32 7
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr @malloc(i32 25)
  %7 = load ptr, ptr %5, align 8
  %memberidx1.i50 = getelementptr inbounds %Map_String_PropId_, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i50, align 4
  %memberidx2.i51 = getelementptr inbounds %Map_String_PropId_, ptr %5, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i51, align 4
  store i1 false, ptr %6, align 1
  %memberidx1.i.i52 = getelementptr inbounds %MapIterator_String_PropId_, ptr %6, i64 0, i32 1
  store ptr %7, ptr %memberidx1.i.i52, align 8
  %memberidx2.i.i53 = getelementptr inbounds %MapIterator_String_PropId_, ptr %6, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %6, i64 0, i32 3
  store i64 %9, ptr %memberidx3.i.i, align 4
  %10 = add nsw i64 %8, -1
  store i64 %10, ptr %memberidx2.i.i53, align 4
  %11 = icmp sgt i64 %8, 0
  br i1 %11, label %while.entry.i45, label %MapIterator_String_PropId__next.exit49

while.entry.i45:                                  ; preds = %for.entry, %ifend.i48
  %12 = phi i64 [ %15, %ifend.i48 ], [ %10, %for.entry ]
  %13 = phi ptr [ %incdec.ptr.i43, %ifend.i48 ], [ %7, %for.entry ]
  %incdec.ptr.i43 = getelementptr inbounds ptr, ptr %13, i64 1
  %14 = load ptr, ptr %13, align 8
  %.not.i44 = icmp eq ptr %14, null
  br i1 %.not.i44, label %ifend.i48, label %MapIterator_String_PropId__next.exit49.loopexit

ifend.i48:                                        ; preds = %while.entry.i45
  %15 = add nsw i64 %12, -1
  store i64 %15, ptr %memberidx2.i.i53, align 4
  %16 = icmp sgt i64 %12, 0
  br i1 %16, label %while.entry.i45, label %MapIterator_String_PropId__next.exit49.loopexit

MapIterator_String_PropId__next.exit49.loopexit:  ; preds = %ifend.i48, %while.entry.i45
  %17 = phi i64 [ %15, %ifend.i48 ], [ %12, %while.entry.i45 ]
  store ptr %incdec.ptr.i43, ptr %memberidx1.i.i52, align 8
  br label %MapIterator_String_PropId__next.exit49

MapIterator_String_PropId__next.exit49:           ; preds = %MapIterator_String_PropId__next.exit49.loopexit, %for.entry
  %18 = phi i64 [ %17, %MapIterator_String_PropId__next.exit49.loopexit ], [ %10, %for.entry ]
  %memberidx1.i.i52.promoted62 = phi ptr [ %incdec.ptr.i43, %MapIterator_String_PropId__next.exit49.loopexit ], [ %7, %for.entry ]
  %storemerge59 = icmp slt i64 %9, 1
  br i1 %storemerge59, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_String_PropId__next.exit49
  %memberidx4 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx5 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx8 = getelementptr inbounds %Class, ptr %2, i64 0, i32 4
  %memberidx11 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_String_PropId__next.exit
  %19 = phi i64 [ %18, %for.body.lr.ph ], [ %111, %MapIterator_String_PropId__next.exit ]
  %incdec.ptr.i.lcssa64 = phi ptr [ %memberidx1.i.i52.promoted62, %for.body.lr.ph ], [ %incdec.ptr.i.lcssa63, %MapIterator_String_PropId__next.exit ]
  %storemerge5760.in = phi i64 [ %9, %for.body.lr.ph ], [ %storemerge5760, %MapIterator_String_PropId__next.exit ]
  %storemerge5760 = add nsw i64 %storemerge5760.in, -1
  %entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa64, i64 -1
  %entry.0 = load ptr, ptr %entry.0.in, align 8
  %memberidx2 = getelementptr inbounds %MapEntry_String_PropId_, ptr %entry.0, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2, align 8
  %21 = load ptr, ptr %entry.0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i37 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i37, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %23 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i.i, align 4
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %23, i64 %24, i64 %25)
  %27 = load ptr, ptr %3, align 8
  %28 = call ptr @malloc(i32 24)
  store ptr %27, ptr %28, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %28, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i38 = getelementptr inbounds %String, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx2.i.i.i38, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %29 = trunc i64 %26 to i32
  %30 = add i32 %29, 1
  %31 = call ptr @malloc(i32 %30)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %31, ptr align 8 %27, i64 %26, i1 false)
  %32 = getelementptr inbounds i8, ptr %31, i64 %26
  store i8 0, ptr %32, align 1
  %33 = load i64, ptr %20, align 4
  %memberidx2.i40 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %34 = load i64, ptr %memberidx2.i40, align 4
  %35 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @259, ptr %31, i64 %33, i64 %34)
  %36 = load ptr, ptr %4, align 8
  %37 = call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %37, i64 0, i32 1
  store i64 %35, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %37, i64 0, i32 2
  store i64 %35, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %31)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %38 = load ptr, ptr %memberidx4, align 8
  %39 = load ptr, ptr %memberidx.i37, align 8
  %40 = load ptr, ptr %38, align 8
  %41 = load i64, ptr %39, align 4
  %42 = load ptr, ptr %40, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %44, i64 0, i32 3
  %45 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %39, i64 0, i32 2
  %46 = load i64, ptr %memberidx3.i.i.i, align 4
  %47 = load ptr, ptr %45, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  %50 = load i64, ptr %20, align 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %if.entry.i, label %ifend.i36

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i34 = getelementptr inbounds %Class, ptr %49, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i34, align 8
  %53 = load i64, ptr %memberidx2.i40, align 4
  %54 = load ptr, ptr %52, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %56, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i36:                                        ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %49, i64 0, i32 4
  %57 = load ptr, ptr %memberidx4.i, align 8
  %58 = load i64, ptr %memberidx2.i40, align 4
  %59 = load ptr, ptr %57, align 8
  %60 = getelementptr inbounds ptr, ptr %59, i64 %58
  %61 = load ptr, ptr %60, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %61, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i36
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i36 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %62 = load i64, ptr %common.ret.op.i, align 4
  %63 = icmp eq i64 %62, 20
  br i1 %63, label %if.entry.i55, label %is_object.exit

if.entry.i55:                                     ; preds = %get_class_prop_type.exit, %if.entry.i55
  %.tr5.i = phi ptr [ %64, %if.entry.i55 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i54 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %64 = load ptr, ptr %memberidx1.i54, align 8
  %65 = load i64, ptr %64, align 4
  %66 = icmp eq i64 %65, 20
  br i1 %66, label %if.entry.i55, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i55, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %62, %get_class_prop_type.exit ], [ %65, %if.entry.i55 ]
  %67 = icmp eq i64 %.lcssa.i, 11
  %68 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %common.ret.op.i, i1 %67)
  %69 = load ptr, ptr %memberidx5, align 8
  %memberidx.i32 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  %70 = load i64, ptr %memberidx.i32, align 4
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, 1
  %73 = call ptr @malloc(i32 %72)
  %74 = load ptr, ptr %69, align 8
  %75 = load i64, ptr %memberidx.i32, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %73, ptr align 8 %74, i64 %75, i1 false)
  %76 = getelementptr inbounds i8, ptr %73, i64 %75
  store i8 0, ptr %76, align 1
  %memberidx.i31 = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  %77 = load i64, ptr %memberidx.i31, align 4
  %78 = trunc i64 %77 to i32
  %79 = add i32 %78, 1
  %80 = call ptr @malloc(i32 %79)
  %81 = load ptr, ptr %21, align 8
  %82 = load i64, ptr %memberidx.i31, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %80, ptr align 8 %81, i64 %82, i1 false)
  %83 = getelementptr inbounds i8, ptr %80, i64 %82
  store i8 0, ptr %83, align 1
  %84 = alloca ptr, align 8
  %85 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %84, ptr nonnull @104, ptr %73, ptr %80)
  %86 = load ptr, ptr %84, align 8
  %87 = tail call ptr @malloc(i32 24)
  store ptr %86, ptr %87, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  store i64 %85, ptr %memberidx1.i, align 4
  %memberidx2.i30 = getelementptr inbounds %String, ptr %87, i64 0, i32 2
  store i64 %85, ptr %memberidx2.i30, align 4
  tail call void @free(ptr %73)
  tail call void @free(ptr %80)
  %88 = load i64, ptr %20, align 4
  %89 = icmp eq i64 %88, 0
  %90 = load ptr, ptr %0, align 8
  %91 = trunc i64 %85 to i32
  %92 = add i32 %91, 1
  %93 = call ptr @malloc(i32 %92)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %93, ptr align 8 %86, i64 %85, i1 false)
  %94 = getelementptr inbounds i8, ptr %93, i64 %85
  store i8 0, ptr %94, align 1
  br i1 %89, label %if.entry, label %else

for.end:                                          ; preds = %MapIterator_String_PropId__next.exit, %MapIterator_String_PropId__next.exit49
  tail call void @free(ptr nonnull %6)
  ret void

if.entry:                                         ; preds = %is_object.exit
  %95 = call ptr @LLVMAddFunction(ptr %90, ptr %93, ptr %68)
  br label %ifend

else:                                             ; preds = %is_object.exit
  %96 = call ptr @LLVMAddGlobal(ptr %90, ptr %68, ptr %93)
  %97 = load ptr, ptr %memberidx8, align 8
  %98 = load i64, ptr %memberidx2.i40, align 4
  %99 = load ptr, ptr %97, align 8
  %100 = getelementptr inbounds ptr, ptr %99, i64 %98
  %101 = load ptr, ptr %100, align 8
  %memberidx10 = getelementptr inbounds %ClassField, ptr %101, i64 0, i32 6
  %102 = load ptr, ptr %memberidx10, align 8
  %103 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr null, ptr %102)
  call void @LLVMSetInitializer(ptr %96, ptr %103)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %static_prop_value.0 = phi ptr [ %95, %if.entry ], [ %96, %else ]
  %104 = load ptr, ptr %memberidx11, align 8
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %104, ptr nonnull %37, ptr %static_prop_value.0)
  %105 = add nsw i64 %19, -1
  store i64 %105, ptr %memberidx2.i.i53, align 4
  %106 = icmp sgt i64 %19, 0
  br i1 %106, label %while.entry.i, label %MapIterator_String_PropId__next.exit

while.entry.i:                                    ; preds = %ifend, %ifend.i
  %107 = phi i64 [ %110, %ifend.i ], [ %105, %ifend ]
  %108 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa64, %ifend ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %108, i64 1
  %109 = load ptr, ptr %108, align 8
  %.not.i = icmp eq ptr %109, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_PropId__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %110 = add nsw i64 %107, -1
  store i64 %110, ptr %memberidx2.i.i53, align 4
  %.not = icmp eq i64 %107, 0
  br i1 %.not, label %MapIterator_String_PropId__next.exit, label %while.entry.i

MapIterator_String_PropId__next.exit:             ; preds = %while.entry.i, %ifend.i, %ifend
  %111 = phi i64 [ %105, %ifend ], [ %107, %while.entry.i ], [ -1, %ifend.i ]
  %incdec.ptr.i.lcssa63 = phi ptr [ %incdec.ptr.i.lcssa64, %ifend ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge = icmp slt i64 %storemerge5760.in, 2
  br i1 %storemerge, label %for.end, label %for.body
}

define internal fastcc void @CodeGen_codegen_function(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Function, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = trunc i64 %6 to i32
  %8 = add i32 %7, 1
  %9 = tail call ptr @malloc(i32 %8)
  %10 = load ptr, ptr %5, align 8
  %11 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %10, i64 %11, i1 false)
  %12 = getelementptr inbounds i8, ptr %9, i64 %11
  store i8 0, ptr %12, align 1
  %13 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Function, ptr %1, i64 0, i32 4
  %14 = load ptr, ptr %memberidx2, align 8
  %15 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %14, i1 false)
  %16 = tail call ptr @LLVMAddFunction(ptr %13, ptr %9, ptr %15)
  %17 = load ptr, ptr %1, align 8
  %memberidx.i40 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %18 = load ptr, ptr %memberidx.i40, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %17, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i.i, align 4
  %20 = load i64, ptr %17, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %17, i64 0, i32 2
  %21 = load i64, ptr %memberidx2.i.i, align 4
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %19, i64 %20, i64 %21)
  %23 = load ptr, ptr %4, align 8
  %24 = call ptr @malloc(i32 24)
  store ptr %23, ptr %24, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %24, i64 0, i32 1
  store i64 %22, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %24, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %18, ptr nonnull %24, ptr %16)
  %memberidx4 = getelementptr inbounds %Function, ptr %1, i64 0, i32 6
  %25 = load i1, ptr %memberidx4, align 1
  br i1 %25, label %if.entry, label %ifend

common.ret:                                       ; preds = %CodeGen_codegen_block.exit, %if.entry
  ret void

if.entry:                                         ; preds = %2
  call void @LLVMSetLinkage(ptr %16, i64 0)
  br label %common.ret

ifend:                                            ; preds = %2
  %26 = call ptr @LLVMCreateBuilder()
  %27 = call ptr @LLVMAppendBasicBlock(ptr %16, ptr nonnull @80)
  call void @LLVMPositionBuilderAtEnd(ptr %26, ptr %27)
  %memberidx5 = getelementptr inbounds %Function, ptr %1, i64 0, i32 5
  %28 = load ptr, ptr %memberidx5, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nonnull %0, ptr %26, ptr %28)
  %memberidx6 = getelementptr inbounds %Function, ptr %1, i64 0, i32 2
  %29 = load ptr, ptr %memberidx6, align 8
  %memberidx757 = getelementptr inbounds %Array_FunctionArg_, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx757, align 4
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %for.body, label %for.end

for.body:                                         ; preds = %ifend, %Map_String_LLVMValueRef____getitem__.exit
  %32 = phi ptr [ %68, %Map_String_LLVMValueRef____getitem__.exit ], [ %29, %ifend ]
  %i.058 = phi i64 [ %67, %Map_String_LLVMValueRef____getitem__.exit ], [ 0, %ifend ]
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 %i.058
  %35 = load ptr, ptr %34, align 8
  %memberidx9 = getelementptr inbounds %FunctionArg, ptr %35, i64 0, i32 4
  %36 = load ptr, ptr %memberidx9, align 8
  %37 = load ptr, ptr %memberidx.i40, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i42 = getelementptr inbounds %VarId, ptr %36, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i.i42, align 4
  %39 = load i64, ptr %36, align 4
  %memberidx2.i.i43 = getelementptr inbounds %VarId, ptr %36, i64 0, i32 2
  %40 = load i64, ptr %memberidx2.i.i43, align 4
  %41 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %38, i64 %39, i64 %40)
  %42 = load ptr, ptr %3, align 8
  %43 = call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i.i.i44 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 %41, ptr %memberidx1.i.i.i44, align 4
  %memberidx2.i.i.i45 = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 %41, ptr %memberidx2.i.i.i45, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %44 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %43)
  %memberidx.i46 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %37, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i46, align 4
  %46 = urem i64 %44, %45
  %47 = load ptr, ptr %37, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  %.not.i = icmp eq ptr %49, null
  br i1 %.not.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %for.body, %else.i
  %50 = phi ptr [ %58, %else.i ], [ %47, %for.body ]
  %51 = phi i64 [ %59, %else.i ], [ %45, %for.body ]
  %52 = phi ptr [ %63, %else.i ], [ %49, %for.body ]
  %hash.0.i = phi i64 [ %61, %else.i ], [ %46, %for.body ]
  %53 = load ptr, ptr %52, align 8
  %memberidx.i.i47 = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i.i47, align 4
  %.not.i.i = icmp eq i64 %54, %41
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %55 = load ptr, ptr %53, align 8
  %56 = call i64 @memcmp(ptr %55, ptr %42, i64 %41)
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i46, align 4
  %.pre59 = load ptr, ptr %37, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre60.pre = load ptr, ptr %37, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre60.pre, i64 %hash.0.i
  %.pre61.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre61.pre, null
  br i1 %.not25.i, label %Map_String_LLVMValueRef____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %58 = phi ptr [ %.pre59, %ifend.i.i.else.i_crit_edge ], [ %50, %while.entry.i ]
  %59 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %51, %while.entry.i ]
  %60 = add nuw i64 %hash.0.i, 1
  %61 = urem i64 %60, %59
  %62 = getelementptr inbounds ptr, ptr %58, i64 %61
  %63 = load ptr, ptr %62, align 8
  %.not26.i = icmp eq ptr %63, null
  br i1 %.not26.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre61.pre, i64 0, i32 1
  %64 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %for.body, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %64, %if.entry7.i ], [ null, %while.end.i ], [ null, %for.body ], [ null, %else.i ]
  %65 = call ptr @LLVMGetParam(ptr %16, i64 %i.058)
  %66 = call ptr @LLVMBuildStore(ptr %26, ptr %65, ptr %common.ret.op.i)
  %67 = add nuw nsw i64 %i.058, 1
  %68 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Array_FunctionArg_, ptr %68, i64 0, i32 1
  %69 = load i64, ptr %memberidx7, align 4
  %70 = icmp slt i64 %67, %69
  br i1 %70, label %for.body, label %for.end

for.end:                                          ; preds = %Map_String_LLVMValueRef____getitem__.exit, %ifend
  %memberidx10 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %71 = load ptr, ptr %memberidx10, align 8
  store ptr %16, ptr %memberidx10, align 8
  %memberidx12 = getelementptr inbounds %Function, ptr %1, i64 0, i32 3
  %72 = load ptr, ptr %memberidx12, align 8
  %memberidx.i49 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %73 = load i1, ptr %memberidx.i49, align 1
  store i1 false, ptr %memberidx.i49, align 1
  %74 = load ptr, ptr %72, align 8
  %75 = call ptr @malloc(i32 25)
  %76 = load ptr, ptr %74, align 8
  %memberidx1.i.i50 = getelementptr inbounds %Array_Statement_, ptr %74, i64 0, i32 1
  %77 = load i64, ptr %memberidx1.i.i50, align 4
  store i1 false, ptr %75, align 1
  %memberidx1.i.i.i51 = getelementptr inbounds %ArrayIterator_Statement_, ptr %75, i64 0, i32 1
  %memberidx2.i.i.i52 = getelementptr inbounds %ArrayIterator_Statement_, ptr %75, i64 0, i32 3
  store ptr %76, ptr %memberidx2.i.i.i52, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %75, i64 0, i32 2
  store i64 %77, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i51, align 4
  %78 = icmp slt i64 %77, 1
  br i1 %78, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.end, %for.body.i
  %79 = phi i64 [ %80, %for.body.i ], [ 1, %for.end ]
  %statement.0.i56.in = phi ptr [ %81, %for.body.i ], [ %76, %for.end ]
  %statement.0.i56 = load ptr, ptr %statement.0.i56.in, align 8
  call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %26, ptr %statement.0.i56)
  %80 = add nuw nsw i64 %79, 1
  store i64 %80, ptr %memberidx1.i.i.i51, align 4
  %81 = getelementptr inbounds ptr, ptr %76, i64 %79
  %.not = icmp slt i64 %79, %77
  br i1 %.not, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %for.end
  call void @free(ptr nonnull %75)
  %memberidx4.i = getelementptr inbounds %Block, ptr %72, i64 0, i32 4
  %82 = load ptr, ptr %memberidx4.i, align 8
  %.not.i54 = icmp eq ptr %82, null
  br i1 %.not.i54, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %83 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %26, ptr nonnull %82)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  store i1 %73, ptr %memberidx.i49, align 1
  call void @LLVMDisposeBuilder(ptr %26)
  store ptr %71, ptr %memberidx10, align 8
  br label %common.ret
}

define internal fastcc void @CodeGen_declare_class_props(ptr nocapture %0, ptr nocapture readonly %1, ptr nocapture readonly %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_LLVMTypeRef_, ptr %6, i64 0, i32 1
  %memberidx1.i = getelementptr inbounds %Array_LLVMTypeRef_, ptr %6, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %6, align 8
  store i64 0, ptr %memberidx.i, align 4
  %memberidx2 = getelementptr inbounds %Class, ptr %2, i64 0, i32 6
  %8 = load ptr, ptr %memberidx2, align 8
  %9 = tail call ptr @malloc(i32 25)
  %10 = load ptr, ptr %8, align 8
  %memberidx1.i52 = getelementptr inbounds %Map_String_PropId_, ptr %8, i64 0, i32 1
  %11 = load i64, ptr %memberidx1.i52, align 4
  %memberidx2.i = getelementptr inbounds %Map_String_PropId_, ptr %8, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i, align 4
  %memberidx1.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %9, i64 0, i32 1
  store ptr %10, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %9, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %9, i64 0, i32 3
  %13 = add nsw i64 %11, -1
  store i64 %13, ptr %memberidx2.i.i, align 4
  %14 = icmp sgt i64 %11, 0
  br i1 %14, label %while.entry.i, label %MapIterator_String_PropId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %15 = phi i64 [ %18, %ifend.i ], [ %13, %for.entry ]
  %16 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %10, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %16, i64 1
  %17 = load ptr, ptr %16, align 8
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %18 = add nsw i64 %15, -1
  store i64 %18, ptr %memberidx2.i.i, align 4
  %19 = icmp sgt i64 %15, 0
  br i1 %19, label %while.entry.i, label %MapIterator_String_PropId__next.exit.loopexit

MapIterator_String_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %20 = phi i64 [ %18, %ifend.i ], [ %15, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %MapIterator_String_PropId__next.exit.loopexit, %for.entry
  %21 = phi i64 [ %20, %MapIterator_String_PropId__next.exit.loopexit ], [ %13, %for.entry ]
  %storemerge105110 = add nsw i64 %12, -1
  store i64 %storemerge105110, ptr %memberidx3.i.i, align 4
  %storemerge111 = icmp slt i64 %12, 1
  store i1 %storemerge111, ptr %9, align 1
  br i1 %storemerge111, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_String_PropId__next.exit
  %memberidx6 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx9 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 2
  %memberidx16 = getelementptr inbounds %Class, ptr %2, i64 0, i32 5
  %memberidx22 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx23 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_String_PropId__next.exit96
  %22 = phi i64 [ %21, %for.body.lr.ph ], [ %147, %MapIterator_String_PropId__next.exit96 ]
  %23 = phi ptr [ %7, %for.body.lr.ph ], [ %138, %MapIterator_String_PropId__next.exit96 ]
  %.promoted = phi ptr [ %7, %for.body.lr.ph ], [ %.promoted119, %MapIterator_String_PropId__next.exit96 ]
  %memberidx1.i.promoted = phi i64 [ 8, %for.body.lr.ph ], [ %memberidx1.i.promoted116, %MapIterator_String_PropId__next.exit96 ]
  %memberidx.i.promoted = phi i64 [ 0, %for.body.lr.ph ], [ %139, %MapIterator_String_PropId__next.exit96 ]
  %.pn = load ptr, ptr %memberidx1.i.i, align 8
  %entry.0.in = getelementptr inbounds ptr, ptr %.pn, i64 -1
  %entry.0 = load ptr, ptr %entry.0.in, align 8
  %memberidx4 = getelementptr inbounds %MapEntry_String_PropId_, ptr %entry.0, i64 0, i32 1
  %24 = load ptr, ptr %memberidx4, align 8
  %25 = load ptr, ptr %entry.0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %memberidx.i55 = getelementptr inbounds %PropId, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i55, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %27 = load i64, ptr %26, align 4
  %memberidx1.i.i56 = getelementptr inbounds %TypeId, ptr %26, i64 0, i32 1
  %28 = load i64, ptr %memberidx1.i.i56, align 4
  %memberidx2.i.i57 = getelementptr inbounds %TypeId, ptr %26, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i.i57, align 4
  %30 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %27, i64 %28, i64 %29)
  %31 = load ptr, ptr %4, align 8
  %32 = call ptr @malloc(i32 24)
  store ptr %31, ptr %32, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  store i64 %30, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 2
  store i64 %30, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %33 = trunc i64 %30 to i32
  %34 = add i32 %33, 1
  %35 = call ptr @malloc(i32 %34)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %35, ptr align 8 %31, i64 %30, i1 false)
  %36 = getelementptr inbounds i8, ptr %35, i64 %30
  store i8 0, ptr %36, align 1
  %37 = load i64, ptr %24, align 4
  %memberidx2.i58 = getelementptr inbounds %PropId, ptr %24, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i58, align 4
  %39 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @259, ptr %35, i64 %37, i64 %38)
  %40 = load ptr, ptr %5, align 8
  %41 = call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  store i64 %39, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %41, i64 0, i32 2
  store i64 %39, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %35)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %42 = load ptr, ptr %memberidx6, align 8
  %43 = load ptr, ptr %memberidx.i55, align 8
  %44 = load ptr, ptr %42, align 8
  %45 = load i64, ptr %43, align 4
  %46 = load ptr, ptr %44, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %45
  %48 = load ptr, ptr %47, align 8
  %memberidx2.i.i.i60 = getelementptr inbounds %Module, ptr %48, i64 0, i32 3
  %49 = load ptr, ptr %memberidx2.i.i.i60, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %43, i64 0, i32 2
  %50 = load i64, ptr %memberidx3.i.i.i, align 4
  %51 = load ptr, ptr %49, align 8
  %52 = getelementptr inbounds ptr, ptr %51, i64 %50
  %53 = load ptr, ptr %52, align 8
  %54 = load i64, ptr %24, align 4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %get_class_prop_type.exit.thread, label %get_class_prop_type.exit

get_class_prop_type.exit.thread:                  ; preds = %for.body
  %memberidx1.i61 = getelementptr inbounds %Class, ptr %53, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1.i61, align 8
  %57 = load i64, ptr %memberidx2.i58, align 4
  %58 = load ptr, ptr %56, align 8
  %59 = getelementptr inbounds ptr, ptr %58, i64 %57
  %60 = load ptr, ptr %59, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %60, i64 0, i32 4
  %common.ret.op.i103 = load ptr, ptr %memberidx3.i, align 8
  br label %else

get_class_prop_type.exit:                         ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %53, i64 0, i32 4
  %61 = load ptr, ptr %memberidx4.i, align 8
  %62 = load i64, ptr %memberidx2.i58, align 4
  %63 = load ptr, ptr %61, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %65, i64 0, i32 4
  %common.ret.op.i = load ptr, ptr %memberidx6.i, align 8
  %66 = icmp eq i64 %54, 1
  br i1 %66, label %get_field_offset.exit, label %else

for.end:                                          ; preds = %MapIterator_String_PropId__next.exit96, %MapIterator_String_PropId__next.exit
  %67 = phi ptr [ %7, %MapIterator_String_PropId__next.exit ], [ %138, %MapIterator_String_PropId__next.exit96 ]
  %68 = phi i64 [ 0, %MapIterator_String_PropId__next.exit ], [ %139, %MapIterator_String_PropId__next.exit96 ]
  tail call void @free(ptr nonnull %9)
  %memberidx.i64 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %69 = load i64, ptr %memberidx.i64, align 4
  %70 = add nuw i64 %68, %69
  %memberidx.i.i66 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 2
  %71 = load i64, ptr %memberidx.i.i66, align 4
  %72 = icmp slt i64 %71, %70
  %.pre124 = load ptr, ptr %3, align 8
  br i1 %72, label %while.entry.i.i, label %Array_LLVMTypeRef____adda__.exit

while.entry.i.i:                                  ; preds = %for.end, %while.entry.i.i
  %73 = phi ptr [ %77, %while.entry.i.i ], [ %.pre124, %for.end ]
  %74 = phi i64 [ %78, %while.entry.i.i ], [ %71, %for.end ]
  %75 = shl nuw i64 %74, 1
  store i64 %75, ptr %memberidx.i.i66, align 4
  %76 = shl i64 %74, 4
  %77 = call ptr @realloc(ptr %73, i64 %76)
  store ptr %77, ptr %3, align 8
  %78 = load i64, ptr %memberidx.i.i66, align 4
  %79 = icmp slt i64 %78, %70
  br i1 %79, label %while.entry.i.i, label %Array_LLVMTypeRef____adda__.exit.loopexit

Array_LLVMTypeRef____adda__.exit.loopexit:        ; preds = %while.entry.i.i
  %.pre126 = load i64, ptr %memberidx.i64, align 4
  br label %Array_LLVMTypeRef____adda__.exit

Array_LLVMTypeRef____adda__.exit:                 ; preds = %for.end, %Array_LLVMTypeRef____adda__.exit.loopexit
  %80 = phi i64 [ %.pre126, %Array_LLVMTypeRef____adda__.exit.loopexit ], [ %69, %for.end ]
  %81 = phi ptr [ %77, %Array_LLVMTypeRef____adda__.exit.loopexit ], [ %.pre124, %for.end ]
  %82 = getelementptr inbounds ptr, ptr %81, i64 %80
  %83 = shl i64 %68, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %82, ptr align 8 %67, i64 %83, i1 false)
  %84 = load i64, ptr %memberidx.i64, align 4
  %85 = add nuw i64 %84, %68
  store i64 %85, ptr %memberidx.i64, align 4
  call void @free(ptr %67)
  tail call void @free(ptr %6)
  ret void

get_field_offset.exit:                            ; preds = %get_class_prop_type.exit
  %memberidx3.i73 = getelementptr inbounds %ClassField, ptr %65, i64 0, i32 5
  %86 = load i64, ptr %memberidx3.i73, align 4
  %87 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 true)
  %88 = load ptr, ptr %memberidx9, align 8
  call fastcc void @Map_String_uint____setitem__(ptr %88, ptr nonnull %41, i64 %86)
  %.not.i76106 = icmp sgt i64 %memberidx.i.promoted, %86
  br i1 %.not.i76106, label %resize_type_array.exit, label %for.body.i

for.body.i:                                       ; preds = %get_field_offset.exit, %Array_LLVMTypeRef____sl__.exit.i
  %89 = phi ptr [ %95, %Array_LLVMTypeRef____sl__.exit.i ], [ %.promoted, %get_field_offset.exit ]
  %90 = phi i64 [ %96, %Array_LLVMTypeRef____sl__.exit.i ], [ %memberidx1.i.promoted, %get_field_offset.exit ]
  %91 = phi i64 [ %97, %Array_LLVMTypeRef____sl__.exit.i ], [ %memberidx.i.promoted, %get_field_offset.exit ]
  %i.0.i107 = phi i64 [ %99, %Array_LLVMTypeRef____sl__.exit.i ], [ %memberidx.i.promoted, %get_field_offset.exit ]
  %.not.i.i = icmp slt i64 %91, %90
  br i1 %.not.i.i, label %Array_LLVMTypeRef____sl__.exit.i, label %if.entry.i.i

if.entry.i.i:                                     ; preds = %for.body.i
  %92 = shl nuw i64 %90, 1
  %93 = shl i64 %90, 4
  %94 = call ptr @realloc(ptr %89, i64 %93)
  br label %Array_LLVMTypeRef____sl__.exit.i

Array_LLVMTypeRef____sl__.exit.i:                 ; preds = %if.entry.i.i, %for.body.i
  %95 = phi ptr [ %94, %if.entry.i.i ], [ %89, %for.body.i ]
  %96 = phi i64 [ %92, %if.entry.i.i ], [ %90, %for.body.i ]
  %97 = add nsw i64 %91, 1
  %98 = getelementptr inbounds ptr, ptr %95, i64 %91
  store ptr null, ptr %98, align 8
  %99 = add nsw i64 %i.0.i107, 1
  %.not.i76.not = icmp slt i64 %i.0.i107, %86
  br i1 %.not.i76.not, label %for.body.i, label %for.cond.i.resize_type_array.exit_crit_edge

for.cond.i.resize_type_array.exit_crit_edge:      ; preds = %Array_LLVMTypeRef____sl__.exit.i
  store i64 %97, ptr %memberidx.i, align 4
  store i64 %96, ptr %memberidx1.i, align 4
  store ptr %95, ptr %6, align 8
  br label %resize_type_array.exit

resize_type_array.exit:                           ; preds = %for.cond.i.resize_type_array.exit_crit_edge, %get_field_offset.exit
  %100 = phi ptr [ %95, %for.cond.i.resize_type_array.exit_crit_edge ], [ %23, %get_field_offset.exit ]
  %memberidx1.i.promoted117 = phi i64 [ %96, %for.cond.i.resize_type_array.exit_crit_edge ], [ %memberidx1.i.promoted, %get_field_offset.exit ]
  %101 = phi i64 [ %97, %for.cond.i.resize_type_array.exit_crit_edge ], [ %memberidx.i.promoted, %get_field_offset.exit ]
  %102 = getelementptr inbounds ptr, ptr %100, i64 %86
  store ptr %87, ptr %102, align 8
  %.pre123 = load i64, ptr %memberidx2.i.i, align 4
  br label %ifend

else:                                             ; preds = %get_class_prop_type.exit.thread, %get_class_prop_type.exit
  %common.ret.op.i104 = phi ptr [ %common.ret.op.i103, %get_class_prop_type.exit.thread ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %103 = tail call ptr @malloc(i32 24)
  %memberidx.i80 = getelementptr inbounds %Array_Type_, ptr %103, i64 0, i32 1
  store i64 0, ptr %memberidx.i80, align 4
  %memberidx1.i81 = getelementptr inbounds %Array_Type_, ptr %103, i64 0, i32 2
  store i64 8, ptr %memberidx1.i81, align 4
  %104 = call ptr @malloc(i32 64)
  store ptr %104, ptr %103, align 8
  %105 = tail call ptr @malloc(i32 16)
  %106 = load ptr, ptr %2, align 8
  store i64 11, ptr %105, align 4
  %memberidx.i82 = getelementptr inbounds %ObjectType, ptr %105, i64 0, i32 1
  store ptr %106, ptr %memberidx.i82, align 8
  store ptr %105, ptr %104, align 8
  store i64 1, ptr %memberidx.i80, align 4
  %memberidx13 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i104, i64 0, i32 1
  %107 = load ptr, ptr %memberidx13, align 8
  %memberidx1.i84 = getelementptr inbounds %Array_Type_, ptr %107, i64 0, i32 1
  %108 = load i64, ptr %memberidx1.i84, align 4
  %109 = add nuw i64 %108, 1
  %110 = load i64, ptr %memberidx1.i81, align 4
  %111 = icmp slt i64 %110, %109
  %.pre = load ptr, ptr %103, align 8
  br i1 %111, label %while.entry.i.i87, label %Array_Type____adda__.exit

while.entry.i.i87:                                ; preds = %else, %while.entry.i.i87
  %112 = phi ptr [ %116, %while.entry.i.i87 ], [ %.pre, %else ]
  %113 = phi i64 [ %117, %while.entry.i.i87 ], [ %110, %else ]
  %114 = shl nuw i64 %113, 1
  store i64 %114, ptr %memberidx1.i81, align 4
  %115 = shl i64 %113, 4
  %116 = call ptr @realloc(ptr %112, i64 %115)
  store ptr %116, ptr %103, align 8
  %117 = load i64, ptr %memberidx1.i81, align 4
  %118 = icmp slt i64 %117, %109
  br i1 %118, label %while.entry.i.i87, label %Array_Type____adda__.exit.loopexit

Array_Type____adda__.exit.loopexit:               ; preds = %while.entry.i.i87
  %.pre121 = load i64, ptr %memberidx.i80, align 4
  %.pre122 = load i64, ptr %memberidx1.i84, align 4
  br label %Array_Type____adda__.exit

Array_Type____adda__.exit:                        ; preds = %else, %Array_Type____adda__.exit.loopexit
  %119 = phi i64 [ %.pre122, %Array_Type____adda__.exit.loopexit ], [ %108, %else ]
  %120 = phi i64 [ %.pre121, %Array_Type____adda__.exit.loopexit ], [ 1, %else ]
  %121 = phi ptr [ %116, %Array_Type____adda__.exit.loopexit ], [ %.pre, %else ]
  %122 = getelementptr inbounds ptr, ptr %121, i64 %120
  %123 = load ptr, ptr %107, align 8
  %124 = shl i64 %119, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %122, ptr align 8 %123, i64 %124, i1 false)
  %125 = load i64, ptr %memberidx.i80, align 4
  %126 = load i64, ptr %memberidx1.i84, align 4
  %127 = add nuw i64 %126, %125
  store i64 %127, ptr %memberidx.i80, align 4
  %128 = load ptr, ptr %memberidx13, align 8
  %129 = load ptr, ptr %128, align 8
  call void @free(ptr %129)
  tail call void @free(ptr %128)
  store ptr %103, ptr %memberidx13, align 8
  %130 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i104, i1 false)
  %131 = load ptr, ptr %memberidx16, align 8
  %132 = load i64, ptr %memberidx2.i58, align 4
  %133 = load ptr, ptr %131, align 8
  %134 = getelementptr inbounds ptr, ptr %133, i64 %132
  %135 = load ptr, ptr %134, align 8
  %memberidx18 = getelementptr inbounds %ClassMethod, ptr %135, i64 0, i32 7
  %136 = load i1, ptr %memberidx18, align 1
  br i1 %136, label %ifend21, label %if.entry19

ifend:                                            ; preds = %ifend21, %resize_type_array.exit
  %137 = phi i64 [ %22, %ifend21 ], [ %.pre123, %resize_type_array.exit ]
  %138 = phi ptr [ %23, %ifend21 ], [ %100, %resize_type_array.exit ]
  %.promoted119 = phi ptr [ %.promoted, %ifend21 ], [ %100, %resize_type_array.exit ]
  %memberidx1.i.promoted116 = phi i64 [ %memberidx1.i.promoted, %ifend21 ], [ %memberidx1.i.promoted117, %resize_type_array.exit ]
  %139 = phi i64 [ %memberidx.i.promoted, %ifend21 ], [ %101, %resize_type_array.exit ]
  %140 = add nsw i64 %137, -1
  store i64 %140, ptr %memberidx2.i.i, align 4
  %141 = icmp sgt i64 %137, 0
  br i1 %141, label %while.entry.i92.preheader, label %MapIterator_String_PropId__next.exit96

while.entry.i92.preheader:                        ; preds = %ifend
  %memberidx1.i.i.promoted = load ptr, ptr %memberidx1.i.i, align 8
  br label %while.entry.i92

while.entry.i92:                                  ; preds = %while.entry.i92.preheader, %ifend.i95
  %142 = phi i64 [ %140, %while.entry.i92.preheader ], [ %145, %ifend.i95 ]
  %143 = phi ptr [ %memberidx1.i.i.promoted, %while.entry.i92.preheader ], [ %incdec.ptr.i90, %ifend.i95 ]
  %incdec.ptr.i90 = getelementptr inbounds ptr, ptr %143, i64 1
  %144 = load ptr, ptr %143, align 8
  %.not.i91 = icmp eq ptr %144, null
  br i1 %.not.i91, label %ifend.i95, label %MapIterator_String_PropId__next.exit96.loopexit

ifend.i95:                                        ; preds = %while.entry.i92
  %145 = add nsw i64 %142, -1
  store i64 %145, ptr %memberidx2.i.i, align 4
  %.not = icmp eq i64 %142, 0
  br i1 %.not, label %MapIterator_String_PropId__next.exit96.loopexit, label %while.entry.i92

MapIterator_String_PropId__next.exit96.loopexit:  ; preds = %ifend.i95, %while.entry.i92
  %146 = phi i64 [ -1, %ifend.i95 ], [ %142, %while.entry.i92 ]
  store ptr %incdec.ptr.i90, ptr %memberidx1.i.i, align 8
  br label %MapIterator_String_PropId__next.exit96

MapIterator_String_PropId__next.exit96:           ; preds = %MapIterator_String_PropId__next.exit96.loopexit, %ifend
  %147 = phi i64 [ %146, %MapIterator_String_PropId__next.exit96.loopexit ], [ %140, %ifend ]
  %148 = load i64, ptr %memberidx3.i.i, align 4
  %storemerge105 = add nsw i64 %148, -1
  store i64 %storemerge105, ptr %memberidx3.i.i, align 4
  %storemerge = icmp slt i64 %148, 1
  store i1 %storemerge, ptr %9, align 1
  br i1 %storemerge, label %for.end, label %for.body

if.entry19:                                       ; preds = %Array_Type____adda__.exit
  %149 = load ptr, ptr %memberidx22, align 8
  %memberidx.i97 = getelementptr inbounds %String, ptr %149, i64 0, i32 1
  %150 = load i64, ptr %memberidx.i97, align 4
  %151 = trunc i64 %150 to i32
  %152 = add i32 %151, 1
  %153 = call ptr @malloc(i32 %152)
  %154 = load ptr, ptr %149, align 8
  %155 = load i64, ptr %memberidx.i97, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %153, ptr align 8 %154, i64 %155, i1 false)
  %156 = getelementptr inbounds i8, ptr %153, i64 %155
  store i8 0, ptr %156, align 1
  %memberidx.i98 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  %157 = load i64, ptr %memberidx.i98, align 4
  %158 = trunc i64 %157 to i32
  %159 = add i32 %158, 1
  %160 = call ptr @malloc(i32 %159)
  %161 = load ptr, ptr %25, align 8
  %162 = load i64, ptr %memberidx.i98, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %160, ptr align 8 %161, i64 %162, i1 false)
  %163 = getelementptr inbounds i8, ptr %160, i64 %162
  store i8 0, ptr %163, align 1
  %164 = alloca ptr, align 8
  %165 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %164, ptr nonnull @104, ptr %153, ptr %160)
  %166 = load ptr, ptr %164, align 8
  %167 = tail call ptr @malloc(i32 24)
  store ptr %166, ptr %167, align 8
  %memberidx1.i99 = getelementptr inbounds %String, ptr %167, i64 0, i32 1
  store i64 %165, ptr %memberidx1.i99, align 4
  %memberidx2.i100 = getelementptr inbounds %String, ptr %167, i64 0, i32 2
  store i64 %165, ptr %memberidx2.i100, align 4
  tail call void @free(ptr %153)
  tail call void @free(ptr %160)
  %168 = load ptr, ptr %0, align 8
  %169 = trunc i64 %165 to i32
  %170 = add i32 %169, 1
  %171 = call ptr @malloc(i32 %170)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %171, ptr align 8 %166, i64 %165, i1 false)
  %172 = getelementptr inbounds i8, ptr %171, i64 %165
  store i8 0, ptr %172, align 1
  %173 = call ptr @LLVMAddFunction(ptr %168, ptr %171, ptr %130)
  br label %ifend21

ifend21:                                          ; preds = %Array_Type____adda__.exit, %if.entry19
  %llvm_method_val.0 = phi ptr [ %173, %if.entry19 ], [ null, %Array_Type____adda__.exit ]
  %174 = load ptr, ptr %memberidx23, align 8
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %174, ptr nonnull %41, ptr %llvm_method_val.0)
  br label %ifend
}

define internal fastcc ptr @CodeGen_get_or_codegen_var(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i.i, align 4
  %9 = load i64, ptr %1, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 2
  %10 = load i64, ptr %memberidx2.i.i, align 4
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @243, i64 %8, i64 %9, i64 %10)
  %12 = load ptr, ptr %6, align 8
  %13 = call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  store i64 %11, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %14 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %13)
  %memberidx.i123 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %7, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i123, align 4
  %16 = urem i64 %14, %15
  %17 = load ptr, ptr %7, align 8
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = load ptr, ptr %18, align 8
  %.not.i = icmp eq ptr %19, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %20 = phi ptr [ %28, %else.i ], [ %17, %2 ]
  %21 = phi i64 [ %29, %else.i ], [ %15, %2 ]
  %22 = phi ptr [ %33, %else.i ], [ %19, %2 ]
  %hash.0.i = phi i64 [ %31, %else.i ], [ %16, %2 ]
  %23 = load ptr, ptr %22, align 8
  %memberidx.i.i124 = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i.i124, align 4
  %.not.i.i = icmp eq i64 %24, %11
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %25 = load ptr, ptr %23, align 8
  %26 = call i64 @memcmp(ptr %25, ptr %12, i64 %11)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i123, align 4
  %.pre219 = load ptr, ptr %7, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre220.pre = load ptr, ptr %7, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre220.pre, i64 %hash.0.i
  %.pre221.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre221.pre, null
  br i1 %.not25.i, label %ifend, label %Map_String_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %28 = phi ptr [ %.pre219, %ifend.i.i.else.i_crit_edge ], [ %20, %while.entry.i ]
  %29 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %21, %while.entry.i ]
  %30 = add nuw i64 %hash.0.i, 1
  %31 = urem i64 %30, %29
  %32 = getelementptr inbounds ptr, ptr %28, i64 %31
  %33 = load ptr, ptr %32, align 8
  %.not26.i = icmp eq ptr %33, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre221.pre, i64 0, i32 1
  %34 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %34, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %else.i140, %else.i159, %else.i178, %if.entry48, %if.entry31, %if.entry14, %if.entry7.i181, %while.end.i176, %if.entry7.i162, %while.end.i157, %if.entry7.i143, %while.end.i138, %Map_String_LLVMValueRef____getitem__.exit, %for.end43, %ifend20
  %common.ret.op = phi ptr [ null, %ifend20 ], [ null, %for.end43 ], [ %34, %Map_String_LLVMValueRef____getitem__.exit ], [ %82, %if.entry7.i143 ], [ null, %while.end.i138 ], [ %124, %if.entry7.i162 ], [ null, %while.end.i157 ], [ %164, %if.entry7.i181 ], [ null, %while.end.i176 ], [ null, %if.entry14 ], [ null, %if.entry31 ], [ null, %if.entry48 ], [ null, %else.i178 ], [ null, %else.i159 ], [ null, %else.i140 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %2, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %35 = load ptr, ptr %memberidx, align 8
  %36 = load ptr, ptr %35, align 8
  %37 = load i64, ptr %memberidx.i.i, align 4
  %38 = load ptr, ptr %36, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  %41 = load i64, ptr %1, align 4
  %42 = icmp eq i64 %41, 2
  br i1 %42, label %for.entry, label %ifend8

ifend8:                                           ; preds = %ifend, %for.end
  %43 = phi i64 [ %41, %ifend ], [ %.pr, %for.end ]
  %44 = icmp eq i64 %43, 1
  br i1 %44, label %for.entry21, label %ifend20

for.entry:                                        ; preds = %ifend
  %memberidx9 = getelementptr inbounds %Module, ptr %40, i64 0, i32 8
  %45 = load ptr, ptr %memberidx9, align 8
  %46 = call ptr @malloc(i32 25)
  %47 = load ptr, ptr %45, align 8
  %memberidx1.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %45, i64 0, i32 1
  %48 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %46, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %46, i64 0, i32 1
  %memberidx2.i.i83 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %46, i64 0, i32 3
  store ptr %47, ptr %memberidx2.i.i83, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %46, i64 0, i32 2
  store i64 %48, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %49 = icmp slt i64 %48, 1
  br i1 %49, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %50 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend16
  %51 = phi i64 [ 1, %for.body.lr.ph ], [ %83, %ifend16 ]
  %global_const.0209.in = phi ptr [ %47, %for.body.lr.ph ], [ %84, %ifend16 ]
  %global_const.0209 = load ptr, ptr %global_const.0209.in, align 8
  %memberidx11 = getelementptr inbounds %ConstDeclaration, ptr %global_const.0209, i64 0, i32 2
  %52 = load ptr, ptr %memberidx11, align 8
  %memberidx12 = getelementptr inbounds %VarId, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx12, align 4
  %54 = icmp eq i64 %53, %50
  br i1 %54, label %if.entry14, label %ifend16

for.end:                                          ; preds = %ifend16, %for.entry
  tail call void @free(ptr nonnull %46)
  %.pr = load i64, ptr %1, align 4
  br label %ifend8

if.entry14:                                       ; preds = %for.body
  store i1 false, ptr %46, align 1
  call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr null, ptr nonnull %global_const.0209)
  %55 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %56 = load i64, ptr %memberidx.i.i, align 4
  %57 = load i64, ptr %1, align 4
  %58 = load i64, ptr %memberidx2.i.i, align 4
  %59 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %56, i64 %57, i64 %58)
  %60 = load ptr, ptr %5, align 8
  %61 = call ptr @malloc(i32 24)
  store ptr %60, ptr %61, align 8
  %memberidx1.i.i.i88 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  store i64 %59, ptr %memberidx1.i.i.i88, align 4
  %memberidx2.i.i.i89 = getelementptr inbounds %String, ptr %61, i64 0, i32 2
  store i64 %59, ptr %memberidx2.i.i.i89, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %62 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %61)
  %memberidx.i126 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %55, i64 0, i32 1
  %63 = load i64, ptr %memberidx.i126, align 4
  %64 = urem i64 %62, %63
  %65 = load ptr, ptr %55, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  %.not.i127 = icmp eq ptr %67, null
  br i1 %.not.i127, label %common.ret, label %while.entry.i132

while.entry.i132:                                 ; preds = %if.entry14, %else.i140
  %68 = phi ptr [ %76, %else.i140 ], [ %65, %if.entry14 ]
  %69 = phi i64 [ %77, %else.i140 ], [ %63, %if.entry14 ]
  %70 = phi ptr [ %81, %else.i140 ], [ %67, %if.entry14 ]
  %hash.0.i128 = phi i64 [ %79, %else.i140 ], [ %64, %if.entry14 ]
  %71 = load ptr, ptr %70, align 8
  %memberidx.i.i129 = getelementptr inbounds %String, ptr %71, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i.i129, align 4
  %.not.i.i131 = icmp eq i64 %72, %59
  br i1 %.not.i.i131, label %ifend.i.i133, label %else.i140

ifend.i.i133:                                     ; preds = %while.entry.i132
  %73 = load ptr, ptr %71, align 8
  %74 = call i64 @memcmp(ptr %73, ptr %60, i64 %59)
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %while.end.i138, label %ifend.i.i133.else.i140_crit_edge

ifend.i.i133.else.i140_crit_edge:                 ; preds = %ifend.i.i133
  %.pre222 = load i64, ptr %memberidx.i126, align 4
  %.pre223 = load ptr, ptr %55, align 8
  br label %else.i140

while.end.i138:                                   ; preds = %ifend.i.i133
  %.pre224.pre = load ptr, ptr %55, align 8
  %.phi.trans.insert225.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre224.pre, i64 %hash.0.i128
  %.pre226.pre = load ptr, ptr %.phi.trans.insert225.phi.trans.insert, align 8
  %.not25.i137 = icmp eq ptr %.pre226.pre, null
  br i1 %.not25.i137, label %common.ret, label %if.entry7.i143

else.i140:                                        ; preds = %ifend.i.i133.else.i140_crit_edge, %while.entry.i132
  %76 = phi ptr [ %.pre223, %ifend.i.i133.else.i140_crit_edge ], [ %68, %while.entry.i132 ]
  %77 = phi i64 [ %.pre222, %ifend.i.i133.else.i140_crit_edge ], [ %69, %while.entry.i132 ]
  %78 = add nuw i64 %hash.0.i128, 1
  %79 = urem i64 %78, %77
  %80 = getelementptr inbounds ptr, ptr %76, i64 %79
  %81 = load ptr, ptr %80, align 8
  %.not26.i139 = icmp eq ptr %81, null
  br i1 %.not26.i139, label %common.ret, label %while.entry.i132

if.entry7.i143:                                   ; preds = %while.end.i138
  %memberidx11.i142 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre226.pre, i64 0, i32 1
  %82 = load ptr, ptr %memberidx11.i142, align 8
  br label %common.ret

ifend16:                                          ; preds = %for.body
  %83 = add nuw nsw i64 %51, 1
  store i64 %83, ptr %memberidx1.i.i, align 4
  %84 = getelementptr inbounds ptr, ptr %47, i64 %51
  %.not248 = icmp slt i64 %51, %48
  br i1 %.not248, label %for.body, label %for.end

ifend20:                                          ; preds = %ifend8, %for.end26
  %85 = phi i64 [ %43, %ifend8 ], [ %.pre232, %for.end26 ]
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %for.entry38, label %common.ret

for.entry21:                                      ; preds = %ifend8
  %memberidx22 = getelementptr inbounds %Module, ptr %40, i64 0, i32 9
  %87 = load ptr, ptr %memberidx22, align 8
  %88 = call ptr @malloc(i32 25)
  %89 = load ptr, ptr %87, align 8
  %memberidx1.i93 = getelementptr inbounds %Array_VarDeclaration_, ptr %87, i64 0, i32 1
  %90 = load i64, ptr %memberidx1.i93, align 4
  store i1 false, ptr %88, align 1
  %memberidx1.i.i94 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %88, i64 0, i32 1
  %memberidx2.i.i95 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %88, i64 0, i32 3
  store ptr %89, ptr %memberidx2.i.i95, align 8
  %memberidx3.i.i96 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %88, i64 0, i32 2
  store i64 %90, ptr %memberidx3.i.i96, align 4
  store i64 1, ptr %memberidx1.i.i94, align 4
  %91 = icmp slt i64 %90, 1
  br i1 %91, label %for.end26, label %for.body24.lr.ph

for.body24.lr.ph:                                 ; preds = %for.entry21
  %92 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body24

for.body24:                                       ; preds = %for.body24.lr.ph, %ifend33
  %93 = phi i64 [ 1, %for.body24.lr.ph ], [ %125, %ifend33 ]
  %global_var.0204.in = phi ptr [ %89, %for.body24.lr.ph ], [ %126, %ifend33 ]
  %global_var.0204 = load ptr, ptr %global_var.0204.in, align 8
  %memberidx28 = getelementptr inbounds %VarDeclaration, ptr %global_var.0204, i64 0, i32 2
  %94 = load ptr, ptr %memberidx28, align 8
  %memberidx29 = getelementptr inbounds %VarId, ptr %94, i64 0, i32 2
  %95 = load i64, ptr %memberidx29, align 4
  %96 = icmp eq i64 %95, %92
  br i1 %96, label %if.entry31, label %ifend33

for.end26:                                        ; preds = %ifend33, %for.entry21
  tail call void @free(ptr nonnull %88)
  %.pre232 = load i64, ptr %1, align 4
  br label %ifend20

if.entry31:                                       ; preds = %for.body24
  store i1 false, ptr %88, align 1
  call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr null, ptr nonnull %global_var.0204)
  %97 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %98 = load i64, ptr %memberidx.i.i, align 4
  %99 = load i64, ptr %1, align 4
  %100 = load i64, ptr %memberidx2.i.i, align 4
  %101 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %98, i64 %99, i64 %100)
  %102 = load ptr, ptr %4, align 8
  %103 = call ptr @malloc(i32 24)
  store ptr %102, ptr %103, align 8
  %memberidx1.i.i.i103 = getelementptr inbounds %String, ptr %103, i64 0, i32 1
  store i64 %101, ptr %memberidx1.i.i.i103, align 4
  %memberidx2.i.i.i104 = getelementptr inbounds %String, ptr %103, i64 0, i32 2
  store i64 %101, ptr %memberidx2.i.i.i104, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %104 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %103)
  %memberidx.i145 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %97, i64 0, i32 1
  %105 = load i64, ptr %memberidx.i145, align 4
  %106 = urem i64 %104, %105
  %107 = load ptr, ptr %97, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %106
  %109 = load ptr, ptr %108, align 8
  %.not.i146 = icmp eq ptr %109, null
  br i1 %.not.i146, label %common.ret, label %while.entry.i151

while.entry.i151:                                 ; preds = %if.entry31, %else.i159
  %110 = phi ptr [ %118, %else.i159 ], [ %107, %if.entry31 ]
  %111 = phi i64 [ %119, %else.i159 ], [ %105, %if.entry31 ]
  %112 = phi ptr [ %123, %else.i159 ], [ %109, %if.entry31 ]
  %hash.0.i147 = phi i64 [ %121, %else.i159 ], [ %106, %if.entry31 ]
  %113 = load ptr, ptr %112, align 8
  %memberidx.i.i148 = getelementptr inbounds %String, ptr %113, i64 0, i32 1
  %114 = load i64, ptr %memberidx.i.i148, align 4
  %.not.i.i150 = icmp eq i64 %114, %101
  br i1 %.not.i.i150, label %ifend.i.i152, label %else.i159

ifend.i.i152:                                     ; preds = %while.entry.i151
  %115 = load ptr, ptr %113, align 8
  %116 = call i64 @memcmp(ptr %115, ptr %102, i64 %101)
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %while.end.i157, label %ifend.i.i152.else.i159_crit_edge

ifend.i.i152.else.i159_crit_edge:                 ; preds = %ifend.i.i152
  %.pre227 = load i64, ptr %memberidx.i145, align 4
  %.pre228 = load ptr, ptr %97, align 8
  br label %else.i159

while.end.i157:                                   ; preds = %ifend.i.i152
  %.pre229.pre = load ptr, ptr %97, align 8
  %.phi.trans.insert230.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre229.pre, i64 %hash.0.i147
  %.pre231.pre = load ptr, ptr %.phi.trans.insert230.phi.trans.insert, align 8
  %.not25.i156 = icmp eq ptr %.pre231.pre, null
  br i1 %.not25.i156, label %common.ret, label %if.entry7.i162

else.i159:                                        ; preds = %ifend.i.i152.else.i159_crit_edge, %while.entry.i151
  %118 = phi ptr [ %.pre228, %ifend.i.i152.else.i159_crit_edge ], [ %110, %while.entry.i151 ]
  %119 = phi i64 [ %.pre227, %ifend.i.i152.else.i159_crit_edge ], [ %111, %while.entry.i151 ]
  %120 = add nuw i64 %hash.0.i147, 1
  %121 = urem i64 %120, %119
  %122 = getelementptr inbounds ptr, ptr %118, i64 %121
  %123 = load ptr, ptr %122, align 8
  %.not26.i158 = icmp eq ptr %123, null
  br i1 %.not26.i158, label %common.ret, label %while.entry.i151

if.entry7.i162:                                   ; preds = %while.end.i157
  %memberidx11.i161 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre231.pre, i64 0, i32 1
  %124 = load ptr, ptr %memberidx11.i161, align 8
  br label %common.ret

ifend33:                                          ; preds = %for.body24
  %125 = add nuw nsw i64 %93, 1
  store i64 %125, ptr %memberidx1.i.i94, align 4
  %126 = getelementptr inbounds ptr, ptr %89, i64 %93
  %.not247 = icmp slt i64 %93, %90
  br i1 %.not247, label %for.body24, label %for.end26

for.entry38:                                      ; preds = %ifend20
  %memberidx39 = getelementptr inbounds %Module, ptr %40, i64 0, i32 4
  %127 = load ptr, ptr %memberidx39, align 8
  %128 = call ptr @malloc(i32 25)
  %129 = load ptr, ptr %127, align 8
  %memberidx1.i108 = getelementptr inbounds %Array_Function_, ptr %127, i64 0, i32 1
  %130 = load i64, ptr %memberidx1.i108, align 4
  store i1 false, ptr %128, align 1
  %memberidx1.i.i109 = getelementptr inbounds %ArrayIterator_Function_, ptr %128, i64 0, i32 1
  %memberidx2.i.i110 = getelementptr inbounds %ArrayIterator_Function_, ptr %128, i64 0, i32 3
  store ptr %129, ptr %memberidx2.i.i110, align 8
  %memberidx3.i.i111 = getelementptr inbounds %ArrayIterator_Function_, ptr %128, i64 0, i32 2
  store i64 %130, ptr %memberidx3.i.i111, align 4
  store i64 1, ptr %memberidx1.i.i109, align 4
  %131 = icmp slt i64 %130, 1
  br i1 %131, label %for.end43, label %for.body41.lr.ph

for.body41.lr.ph:                                 ; preds = %for.entry38
  %132 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %ifend50
  %133 = phi i64 [ 1, %for.body41.lr.ph ], [ %165, %ifend50 ]
  %function.0200.in = phi ptr [ %129, %for.body41.lr.ph ], [ %166, %ifend50 ]
  %function.0200 = load ptr, ptr %function.0200.in, align 8
  %134 = load ptr, ptr %function.0200, align 8
  %memberidx46 = getelementptr inbounds %VarId, ptr %134, i64 0, i32 2
  %135 = load i64, ptr %memberidx46, align 4
  %136 = icmp eq i64 %135, %132
  br i1 %136, label %if.entry48, label %ifend50

for.end43:                                        ; preds = %ifend50, %for.entry38
  tail call void @free(ptr nonnull %128)
  br label %common.ret

if.entry48:                                       ; preds = %for.body41
  store i1 false, ptr %128, align 1
  call fastcc void @CodeGen_codegen_function(ptr %0, ptr nonnull %function.0200)
  %137 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %138 = load i64, ptr %memberidx.i.i, align 4
  %139 = load i64, ptr %1, align 4
  %140 = load i64, ptr %memberidx2.i.i, align 4
  %141 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %138, i64 %139, i64 %140)
  %142 = load ptr, ptr %3, align 8
  %143 = call ptr @malloc(i32 24)
  store ptr %142, ptr %143, align 8
  %memberidx1.i.i.i118 = getelementptr inbounds %String, ptr %143, i64 0, i32 1
  store i64 %141, ptr %memberidx1.i.i.i118, align 4
  %memberidx2.i.i.i119 = getelementptr inbounds %String, ptr %143, i64 0, i32 2
  store i64 %141, ptr %memberidx2.i.i.i119, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %144 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %143)
  %memberidx.i164 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %137, i64 0, i32 1
  %145 = load i64, ptr %memberidx.i164, align 4
  %146 = urem i64 %144, %145
  %147 = load ptr, ptr %137, align 8
  %148 = getelementptr inbounds ptr, ptr %147, i64 %146
  %149 = load ptr, ptr %148, align 8
  %.not.i165 = icmp eq ptr %149, null
  br i1 %.not.i165, label %common.ret, label %while.entry.i170

while.entry.i170:                                 ; preds = %if.entry48, %else.i178
  %150 = phi ptr [ %158, %else.i178 ], [ %147, %if.entry48 ]
  %151 = phi i64 [ %159, %else.i178 ], [ %145, %if.entry48 ]
  %152 = phi ptr [ %163, %else.i178 ], [ %149, %if.entry48 ]
  %hash.0.i166 = phi i64 [ %161, %else.i178 ], [ %146, %if.entry48 ]
  %153 = load ptr, ptr %152, align 8
  %memberidx.i.i167 = getelementptr inbounds %String, ptr %153, i64 0, i32 1
  %154 = load i64, ptr %memberidx.i.i167, align 4
  %.not.i.i169 = icmp eq i64 %154, %141
  br i1 %.not.i.i169, label %ifend.i.i171, label %else.i178

ifend.i.i171:                                     ; preds = %while.entry.i170
  %155 = load ptr, ptr %153, align 8
  %156 = call i64 @memcmp(ptr %155, ptr %142, i64 %141)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %while.end.i176, label %ifend.i.i171.else.i178_crit_edge

ifend.i.i171.else.i178_crit_edge:                 ; preds = %ifend.i.i171
  %.pre233 = load i64, ptr %memberidx.i164, align 4
  %.pre234 = load ptr, ptr %137, align 8
  br label %else.i178

while.end.i176:                                   ; preds = %ifend.i.i171
  %.pre235.pre = load ptr, ptr %137, align 8
  %.phi.trans.insert236.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre235.pre, i64 %hash.0.i166
  %.pre237.pre = load ptr, ptr %.phi.trans.insert236.phi.trans.insert, align 8
  %.not25.i175 = icmp eq ptr %.pre237.pre, null
  br i1 %.not25.i175, label %common.ret, label %if.entry7.i181

else.i178:                                        ; preds = %ifend.i.i171.else.i178_crit_edge, %while.entry.i170
  %158 = phi ptr [ %.pre234, %ifend.i.i171.else.i178_crit_edge ], [ %150, %while.entry.i170 ]
  %159 = phi i64 [ %.pre233, %ifend.i.i171.else.i178_crit_edge ], [ %151, %while.entry.i170 ]
  %160 = add nuw i64 %hash.0.i166, 1
  %161 = urem i64 %160, %159
  %162 = getelementptr inbounds ptr, ptr %158, i64 %161
  %163 = load ptr, ptr %162, align 8
  %.not26.i177 = icmp eq ptr %163, null
  br i1 %.not26.i177, label %common.ret, label %while.entry.i170

if.entry7.i181:                                   ; preds = %while.end.i176
  %memberidx11.i180 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre237.pre, i64 0, i32 1
  %164 = load ptr, ptr %memberidx11.i180, align 8
  br label %common.ret

ifend50:                                          ; preds = %for.body41
  %165 = add nuw nsw i64 %133, 1
  store i64 %165, ptr %memberidx1.i.i109, align 4
  %166 = getelementptr inbounds ptr, ptr %129, i64 %133
  %.not246 = icmp slt i64 %133, %130
  br i1 %.not246, label %for.body41, label %for.end43
}

define internal fastcc void @CodeGen_declare_enum(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call ptr @malloc(i32 2048)
  store ptr %8, ptr %7, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i77 = phi i64 [ 0, %2 ], [ %11, %for.body.i.i ]
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %i.0.i.i77
  store ptr null, ptr %10, align 8
  %11 = add nuw nsw i64 %i.0.i.i77, 1
  %12 = icmp ult i64 %i.0.i.i77, 255
  br i1 %12, label %for.body.i.i, label %CGEnumType_constructor.exit

CGEnumType_constructor.exit:                      ; preds = %for.body.i.i
  %memberidx.i69 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 1
  %memberidx2.i.i70 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %7, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i70, align 4
  %memberidx3.i.i71 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %7, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i71, align 4
  store ptr %7, ptr %memberidx.i69, align 8
  %memberidx = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  %13 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_EnumField_, ptr %13, i64 0, i32 1
  %14 = load i64, ptr %memberidx1, align 4
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %if.entry, label %else

if.entry:                                         ; preds = %CGEnumType_constructor.exit
  %16 = load ptr, ptr %13, align 8
  %17 = load ptr, ptr %16, align 8
  %memberidx4 = getelementptr inbounds %EnumField, ptr %17, i64 0, i32 2
  %18 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Expression, ptr %18, i64 0, i32 3
  %19 = load ptr, ptr %memberidx5, align 8
  %20 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %19, i1 true)
  br label %ifend

else:                                             ; preds = %CGEnumType_constructor.exit
  %21 = tail call ptr @LLVMIntType(i64 64)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %storemerge = phi ptr [ %21, %else ], [ %20, %if.entry ]
  store ptr %storemerge, ptr %6, align 8
  %22 = load ptr, ptr %memberidx, align 8
  %memberidx8 = getelementptr inbounds %Array_EnumField_, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx8, align 4
  %24 = alloca ptr, i64 %23, align 8
  %25 = tail call ptr @malloc(i32 25)
  %26 = load ptr, ptr %22, align 8
  %27 = load i64, ptr %memberidx8, align 4
  store i1 false, ptr %25, align 1
  %memberidx1.i.i67 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %25, i64 0, i32 1
  %memberidx2.i.i68 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %25, i64 0, i32 3
  store ptr %26, ptr %memberidx2.i.i68, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_EnumField_, ptr %25, i64 0, i32 2
  store i64 %27, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i67, align 4
  %28 = icmp slt i64 %27, 1
  br i1 %28, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx14 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %29 = phi i64 [ 1, %for.body.lr.ph ], [ %80, %for.body ]
  %enum_field.075.in = phi ptr [ %26, %for.body.lr.ph ], [ %81, %for.body ]
  %idx.074 = phi i64 [ 0, %for.body.lr.ph ], [ %78, %for.body ]
  %enum_field.075 = load ptr, ptr %enum_field.075.in, align 8
  %30 = load ptr, ptr %enum_field.075, align 8
  %31 = load ptr, ptr %memberidx.i69, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i57 = getelementptr inbounds %PropId, ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i57, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %33 = load i64, ptr %32, align 4
  %memberidx1.i.i58 = getelementptr inbounds %TypeId, ptr %32, i64 0, i32 1
  %34 = load i64, ptr %memberidx1.i.i58, align 4
  %memberidx2.i.i59 = getelementptr inbounds %TypeId, ptr %32, i64 0, i32 2
  %35 = load i64, ptr %memberidx2.i.i59, align 4
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %33, i64 %34, i64 %35)
  %37 = load ptr, ptr %3, align 8
  %38 = call ptr @malloc(i32 24)
  store ptr %37, ptr %38, align 8
  %memberidx1.i.i.i60 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  store i64 %36, ptr %memberidx1.i.i.i60, align 4
  %memberidx2.i.i.i61 = getelementptr inbounds %String, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx2.i.i.i61, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %39 = trunc i64 %36 to i32
  %40 = add i32 %39, 1
  %41 = call ptr @malloc(i32 %40)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %41, ptr align 8 %37, i64 %36, i1 false)
  %42 = getelementptr inbounds i8, ptr %41, i64 %36
  store i8 0, ptr %42, align 1
  %43 = load i64, ptr %30, align 4
  %memberidx2.i62 = getelementptr inbounds %PropId, ptr %30, i64 0, i32 2
  %44 = load i64, ptr %memberidx2.i62, align 4
  %45 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @259, ptr %41, i64 %43, i64 %44)
  %46 = load ptr, ptr %4, align 8
  %47 = call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  store i64 %45, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %47, i64 0, i32 2
  store i64 %45, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %41)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %memberidx13 = getelementptr inbounds %EnumField, ptr %enum_field.075, i64 0, i32 2
  %48 = load ptr, ptr %memberidx13, align 8
  %49 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr null, ptr %48)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %31, ptr nonnull %47, ptr %49)
  %50 = load ptr, ptr %memberidx14, align 8
  %memberidx.i56 = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i56, align 4
  %52 = trunc i64 %51 to i32
  %53 = add i32 %52, 1
  %54 = call ptr @malloc(i32 %53)
  %55 = load ptr, ptr %50, align 8
  %56 = load i64, ptr %memberidx.i56, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %54, ptr align 8 %55, i64 %56, i1 false)
  %57 = getelementptr inbounds i8, ptr %54, i64 %56
  store i8 0, ptr %57, align 1
  %memberidx15 = getelementptr inbounds %EnumField, ptr %enum_field.075, i64 0, i32 1
  %58 = load ptr, ptr %memberidx15, align 8
  %memberidx.i55 = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i55, align 4
  %60 = trunc i64 %59 to i32
  %61 = add i32 %60, 1
  %62 = call ptr @malloc(i32 %61)
  %63 = load ptr, ptr %58, align 8
  %64 = load i64, ptr %memberidx.i55, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %62, ptr align 8 %63, i64 %64, i1 false)
  %65 = getelementptr inbounds i8, ptr %62, i64 %64
  store i8 0, ptr %65, align 1
  %66 = alloca ptr, align 8
  %67 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %66, ptr nonnull @292, ptr %54, ptr %62)
  %68 = load ptr, ptr %66, align 8
  %69 = tail call ptr @malloc(i32 24)
  store ptr %68, ptr %69, align 8
  %memberidx1.i53 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  store i64 %67, ptr %memberidx1.i53, align 4
  %memberidx2.i54 = getelementptr inbounds %String, ptr %69, i64 0, i32 2
  store i64 %67, ptr %memberidx2.i54, align 4
  tail call void @free(ptr %54)
  tail call void @free(ptr %62)
  %70 = trunc i64 %67 to i32
  %71 = add i32 %70, 1
  %72 = call ptr @malloc(i32 %71)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %72, ptr align 8 %68, i64 %67, i1 false)
  %73 = getelementptr inbounds i8, ptr %72, i64 %67
  store i8 0, ptr %73, align 1
  %74 = call ptr @LLVMConstString(ptr %72, i64 %67, i1 false)
  %75 = load ptr, ptr %0, align 8
  %76 = call ptr @LLVMTypeOf(ptr %74)
  %77 = call ptr @LLVMAddGlobal(ptr %75, ptr %76, ptr nonnull @80)
  call void @LLVMSetInitializer(ptr %77, ptr %74)
  %78 = add nuw nsw i64 %idx.074, 1
  %79 = getelementptr inbounds ptr, ptr %24, i64 %idx.074
  store ptr %77, ptr %79, align 8
  %80 = add nuw nsw i64 %29, 1
  store i64 %80, ptr %memberidx1.i.i67, align 4
  %81 = getelementptr inbounds ptr, ptr %26, i64 %29
  %.not = icmp slt i64 %29, %27
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  %idx.0.lcssa = phi i64 [ 0, %ifend ], [ %78, %for.body ]
  tail call void @free(ptr nonnull %25)
  %82 = call ptr @LLVMInt8Type()
  %83 = call ptr @LLVMPointerType(ptr %82, i64 0)
  %84 = call ptr @LLVMConstArray(ptr %83, ptr nonnull %24, i64 %idx.0.lcssa)
  %85 = load ptr, ptr %0, align 8
  %86 = call ptr @LLVMTypeOf(ptr %84)
  %memberidx19 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 1
  %87 = load ptr, ptr %memberidx19, align 8
  %memberidx.i49 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  %88 = load i64, ptr %memberidx.i49, align 4
  %89 = trunc i64 %88 to i32
  %90 = add i32 %89, 1
  %91 = call ptr @malloc(i32 %90)
  %92 = load ptr, ptr %87, align 8
  %93 = load i64, ptr %memberidx.i49, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %91, ptr align 8 %92, i64 %93, i1 false)
  %94 = getelementptr inbounds i8, ptr %91, i64 %93
  store i8 0, ptr %94, align 1
  %95 = alloca ptr, align 8
  %96 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %95, ptr nonnull @293, ptr %91)
  %97 = load ptr, ptr %95, align 8
  %98 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %91)
  %99 = trunc i64 %96 to i32
  %100 = add i32 %99, 1
  %101 = call ptr @malloc(i32 %100)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %101, ptr align 8 %97, i64 %96, i1 false)
  %102 = getelementptr inbounds i8, ptr %101, i64 %96
  store i8 0, ptr %102, align 1
  %103 = call ptr @LLVMAddGlobal(ptr %85, ptr %86, ptr %101)
  call void @LLVMSetInitializer(ptr %103, ptr %84)
  %memberidx20 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 2
  store ptr %103, ptr %memberidx20, align 8
  %104 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %105 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %106 = load i64, ptr %104, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %104, i64 0, i32 1
  %107 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %104, i64 0, i32 2
  %108 = load i64, ptr %memberidx2.i.i, align 4
  %109 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %106, i64 %107, i64 %108)
  %110 = load ptr, ptr %5, align 8
  %111 = call ptr @malloc(i32 24)
  store ptr %110, ptr %111, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %111, i64 0, i32 1
  store i64 %109, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %111, i64 0, i32 2
  store i64 %109, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call fastcc void @Map_String_CGEnumType____setitem__(ptr %105, ptr nonnull %111, ptr nonnull %6)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr nocapture readonly %0, ptr %1, ptr %2, ptr nocapture readonly %3, i64 %4, ptr writeonly %5) unnamed_addr {
  %arg_types = alloca [2 x ptr], align 8
  %7 = tail call ptr @LLVMInt8Type()
  %8 = tail call ptr @LLVMPointerType(ptr %7, i64 0)
  %9 = tail call ptr @LLVMIntType(i64 64)
  %10 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %8, ptr nonnull @80)
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %memberidx.i, align 8
  %12 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr %2)
  %memberidx.i22 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %11, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i22, align 4
  %14 = urem i64 %12, %13
  %15 = load ptr, ptr %11, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %.not.i23 = icmp eq ptr %17, null
  br i1 %.not.i23, label %if.entry.i, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %6
  %memberidx1.i.i25 = getelementptr inbounds %String, ptr %2, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i26
  %18 = phi ptr [ %28, %else.i26 ], [ %15, %while.entry.i.preheader ]
  %19 = phi i64 [ %29, %else.i26 ], [ %13, %while.entry.i.preheader ]
  %20 = phi ptr [ %33, %else.i26 ], [ %17, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %31, %else.i26 ], [ %14, %while.entry.i.preheader ]
  %21 = load ptr, ptr %20, align 8
  %memberidx.i.i24 = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i.i24, align 4
  %23 = load i64, ptr %memberidx1.i.i25, align 4
  %.not.i.i = icmp eq i64 %22, %23
  br i1 %.not.i.i, label %ifend.i.i, label %else.i26

ifend.i.i:                                        ; preds = %while.entry.i
  %24 = load ptr, ptr %21, align 8
  %25 = load ptr, ptr %2, align 8
  %26 = tail call i64 @memcmp(ptr %24, ptr %25, i64 %22)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %while.end.i, label %ifend.i.i.else.i26_crit_edge

ifend.i.i.else.i26_crit_edge:                     ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i22, align 4
  %.pre31 = load ptr, ptr %11, align 8
  br label %else.i26

while.end.i:                                      ; preds = %ifend.i.i
  %.pre32.pre = load ptr, ptr %11, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre32.pre, i64 %hash.0.i
  %.pre33.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre33.pre, null
  br i1 %.not25.i, label %if.entry.i, label %Map_String_LLVMValueRef____getitem__.exit

else.i26:                                         ; preds = %ifend.i.i.else.i26_crit_edge, %while.entry.i
  %28 = phi ptr [ %.pre31, %ifend.i.i.else.i26_crit_edge ], [ %18, %while.entry.i ]
  %29 = phi i64 [ %.pre, %ifend.i.i.else.i26_crit_edge ], [ %19, %while.entry.i ]
  %30 = add nuw i64 %hash.0.i, 1
  %31 = urem i64 %30, %29
  %32 = getelementptr inbounds ptr, ptr %28, i64 %31
  %33 = load ptr, ptr %32, align 8
  %.not26.i = icmp eq ptr %33, null
  br i1 %.not26.i, label %if.entry.i, label %while.entry.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre33.pre, i64 0, i32 1
  %34 = load ptr, ptr %memberidx11.i, align 8
  %35 = icmp eq ptr %34, null
  br i1 %35, label %if.entry.i, label %CodeGen_createGlobalLLVMString.exit

if.entry.i:                                       ; preds = %else.i26, %6, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %memberidx.i.i = getelementptr inbounds %String, ptr %2, i64 0, i32 1
  %36 = load i64, ptr %memberidx.i.i, align 4
  %37 = trunc i64 %36 to i32
  %38 = add i32 %37, 1
  %39 = tail call ptr @malloc(i32 %38)
  %40 = load ptr, ptr %2, align 8
  %41 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %40, i64 %41, i1 false)
  %42 = getelementptr inbounds i8, ptr %39, i64 %41
  store i8 0, ptr %42, align 1
  %43 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %39, ptr nonnull @80)
  %44 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %44, ptr nonnull %2, ptr %43)
  br label %CodeGen_createGlobalLLVMString.exit

CodeGen_createGlobalLLVMString.exit:              ; preds = %Map_String_LLVMValueRef____getitem__.exit, %if.entry.i
  %str.0.i = phi ptr [ %43, %if.entry.i ], [ %34, %Map_String_LLVMValueRef____getitem__.exit ]
  %45 = add nuw i64 %4, 2
  %46 = alloca ptr, i64 %45, align 8
  store ptr %10, ptr %46, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 1
  store ptr %str.0.i, ptr %47, align 8
  %48 = getelementptr inbounds ptr, ptr %46, i64 2
  %49 = shl i64 %4, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2147483648 %48, ptr align 8 %3, i64 %49, i1 false)
  store ptr %8, ptr %arg_types, align 8
  %50 = getelementptr inbounds ptr, ptr %arg_types, i64 1
  store ptr %8, ptr %50, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = tail call ptr @malloc(i32 8)
  store i64 7382647088337679201, ptr %52, align 8
  %53 = tail call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %53, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i, align 4
  %54 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i18 = getelementptr inbounds %IntrinsicResult, ptr %54, i64 0, i32 1
  store i64 0, ptr %54, align 8
  %55 = call ptr @LLVMFunctionType(ptr %9, ptr nonnull %arg_types, i64 2, i1 true)
  store ptr %55, ptr %memberidx1.i.i18, align 8
  %56 = call ptr @malloc(i32 9)
  %57 = load i64, ptr %52, align 8
  store i64 %57, ptr %56, align 8
  %58 = getelementptr inbounds i8, ptr %56, i64 8
  store i8 0, ptr %58, align 1
  %59 = call ptr @LLVMGetNamedFunction(ptr %51, ptr nonnull %56)
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %else.i, label %get_intrinsic.exit

else.i:                                           ; preds = %CodeGen_createGlobalLLVMString.exit
  %60 = call ptr @LLVMAddFunction(ptr %51, ptr nonnull %56, ptr %55)
  br label %get_intrinsic.exit

get_intrinsic.exit:                               ; preds = %CodeGen_createGlobalLLVMString.exit, %else.i
  %storemerge.i = phi ptr [ %60, %else.i ], [ %59, %CodeGen_createGlobalLLVMString.exit ]
  store ptr %storemerge.i, ptr %54, align 8
  %61 = call ptr @LLVMBuildCall2(ptr %1, ptr %55, ptr %storemerge.i, ptr nonnull %46, i64 %45, ptr nonnull @80)
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %get_intrinsic.exit
  store ptr %61, ptr %5, align 8
  br label %ifend

ifend:                                            ; preds = %get_intrinsic.exit, %if.entry
  %62 = call ptr @LLVMBuildLoad2(ptr %1, ptr %8, ptr %10, ptr nonnull @80)
  ret ptr %62
}

define internal fastcc ptr @CodeGen_codegen_string(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %str_len = alloca ptr, align 8
  %args = alloca [2 x ptr], align 8
  %args1 = alloca [3 x ptr], align 8
  %memberidx = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx2 = getelementptr inbounds %String, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx2, align 4
  %memberidx3 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 5
  %5 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_uint_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx4, align 4
  %7 = shl nuw i64 %6, 1
  %8 = add nuw i64 %7, %4
  %9 = trunc i64 %8 to i32
  %10 = tail call ptr @malloc(i32 %9)
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  %memberidx1.i.i103 = getelementptr inbounds %String, ptr %11, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i103, align 4
  %memberidx.i105 = getelementptr inbounds %String, ptr %11, i64 0, i32 2
  store i64 %8, ptr %memberidx.i105, align 4
  %12 = load ptr, ptr %3, align 8
  %13 = tail call ptr @malloc(i32 24)
  %memberidx.i101 = getelementptr inbounds %Array_LLVMValueRef_, ptr %13, i64 0, i32 1
  %memberidx1.i102 = getelementptr inbounds %Array_LLVMValueRef_, ptr %13, i64 0, i32 2
  store i64 8, ptr %memberidx1.i102, align 4
  %14 = tail call ptr @malloc(i32 64)
  store ptr %14, ptr %13, align 8
  store i64 0, ptr %memberidx.i101, align 4
  %memberidx7 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 6
  %15 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_Expression_, ptr %15, i64 0, i32 1
  %16 = load i64, ptr %memberidx8, align 4
  %17 = alloca ptr, i64 %16, align 8
  %18 = icmp sgt i64 %16, 0
  br i1 %18, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %String___adda__.exit
  %19 = phi i64 [ %52, %String___adda__.exit ], [ 0, %for.entry ]
  %chars.0150 = phi ptr [ %53, %String___adda__.exit ], [ %12, %for.entry ]
  %curr_ind.0149 = phi i64 [ %29, %String___adda__.exit ], [ 0, %for.entry ]
  %i.0148 = phi i64 [ %57, %String___adda__.exit ], [ 0, %for.entry ]
  %20 = load ptr, ptr %memberidx7, align 8
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %i.0148
  %23 = load ptr, ptr %22, align 8
  %memberidx10 = getelementptr inbounds %Expression, ptr %23, i64 0, i32 3
  %24 = load ptr, ptr %memberidx10, align 8
  %25 = tail call fastcc ptr @get_format_from_type(ptr %24)
  %26 = load ptr, ptr %memberidx3, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds i64, ptr %27, i64 %i.0148
  %29 = load i64, ptr %28, align 4
  %30 = sub nuw i64 %29, %curr_ind.0149
  %31 = add nuw i64 %19, %30
  %32 = load i64, ptr %memberidx.i105, align 4
  %33 = icmp slt i64 %32, %31
  %34 = load ptr, ptr %11, align 8
  br i1 %33, label %if.entry.i.i99, label %String_append_bytes_length.exit100

if.entry.i.i99:                                   ; preds = %for.body
  %35 = tail call ptr @realloc(ptr %34, i64 %31)
  store ptr %35, ptr %11, align 8
  store i64 %31, ptr %memberidx.i105, align 4
  %.pre156 = load i64, ptr %memberidx1.i.i103, align 4
  br label %String_append_bytes_length.exit100

String_append_bytes_length.exit100:               ; preds = %for.body, %if.entry.i.i99
  %36 = phi i64 [ %.pre156, %if.entry.i.i99 ], [ %19, %for.body ]
  %37 = phi ptr [ %35, %if.entry.i.i99 ], [ %34, %for.body ]
  %38 = getelementptr inbounds i8, ptr %37, i64 %36
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %38, ptr align 8 %chars.0150, i64 %30, i1 false)
  %39 = load i64, ptr %memberidx1.i.i103, align 4
  %40 = add nuw i64 %39, %30
  store i64 %40, ptr %memberidx1.i.i103, align 4
  %41 = load ptr, ptr %25, align 8
  %memberidx.i94 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i94, align 4
  %43 = add nuw i64 %42, %40
  %44 = load i64, ptr %memberidx.i105, align 4
  %45 = icmp slt i64 %44, %43
  %46 = load ptr, ptr %11, align 8
  br i1 %45, label %if.entry.i.i.i, label %String___adda__.exit

if.entry.i.i.i:                                   ; preds = %String_append_bytes_length.exit100
  %47 = tail call ptr @realloc(ptr %46, i64 %43)
  store ptr %47, ptr %11, align 8
  store i64 %43, ptr %memberidx.i105, align 4
  %.pre158 = load i64, ptr %memberidx1.i.i103, align 4
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %String_append_bytes_length.exit100, %if.entry.i.i.i
  %48 = phi i64 [ %.pre158, %if.entry.i.i.i ], [ %40, %String_append_bytes_length.exit100 ]
  %49 = phi ptr [ %47, %if.entry.i.i.i ], [ %46, %String_append_bytes_length.exit100 ]
  %50 = getelementptr inbounds i8, ptr %49, i64 %48
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %50, ptr align 8 %41, i64 %42, i1 false)
  %51 = load i64, ptr %memberidx1.i.i103, align 4
  %52 = add nuw i64 %51, %42
  store i64 %52, ptr %memberidx1.i.i103, align 4
  %53 = getelementptr inbounds i8, ptr %chars.0150, i64 %30
  %54 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %23)
  %55 = getelementptr inbounds ptr, ptr %17, i64 %i.0148
  %56 = tail call fastcc ptr @CodeGen_get_string_val(ptr %0, ptr %1, ptr %54, ptr %24, ptr nonnull %13, i64 0)
  store ptr %56, ptr %55, align 8
  %57 = add nuw nsw i64 %i.0148, 1
  %58 = icmp slt i64 %57, %16
  br i1 %58, label %for.body, label %for.end.loopexit

for.end.loopexit:                                 ; preds = %String___adda__.exit
  %.pre159 = load i64, ptr %memberidx.i105, align 4
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.entry
  %59 = phi i64 [ %8, %for.entry ], [ %.pre159, %for.end.loopexit ]
  %60 = phi i64 [ 0, %for.entry ], [ %52, %for.end.loopexit ]
  %curr_ind.0.lcssa = phi i64 [ 0, %for.entry ], [ %29, %for.end.loopexit ]
  %chars.0.lcssa = phi ptr [ %12, %for.entry ], [ %53, %for.end.loopexit ]
  %61 = load i64, ptr %memberidx2, align 4
  %62 = sub nuw i64 %61, %curr_ind.0.lcssa
  %63 = add nuw i64 %60, %62
  %64 = icmp slt i64 %59, %63
  %65 = load ptr, ptr %11, align 8
  br i1 %64, label %if.entry.i.i, label %String_append_bytes_length.exit

if.entry.i.i:                                     ; preds = %for.end
  %66 = tail call ptr @realloc(ptr %65, i64 %63)
  store ptr %66, ptr %11, align 8
  store i64 %63, ptr %memberidx.i105, align 4
  %.pre161 = load i64, ptr %memberidx1.i.i103, align 4
  br label %String_append_bytes_length.exit

String_append_bytes_length.exit:                  ; preds = %for.end, %if.entry.i.i
  %67 = phi i64 [ %.pre161, %if.entry.i.i ], [ %60, %for.end ]
  %68 = phi ptr [ %66, %if.entry.i.i ], [ %65, %for.end ]
  %69 = getelementptr inbounds i8, ptr %68, i64 %67
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %69, ptr align 8 %chars.0.lcssa, i64 %62, i1 false)
  %70 = load i64, ptr %memberidx1.i.i103, align 4
  %71 = add nuw i64 %70, %62
  store i64 %71, ptr %memberidx1.i.i103, align 4
  %72 = tail call ptr @LLVMIntType(i64 64)
  %73 = tail call ptr @LLVMConstInt(ptr %72, i64 %71, i1 false)
  store ptr %73, ptr %str_len, align 8
  br i1 %18, label %true_block, label %false_block

true_block:                                       ; preds = %String_append_bytes_length.exit
  %74 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr nonnull %11, ptr nonnull %17, i64 %16, ptr nonnull %str_len)
  br label %end

false_block:                                      ; preds = %String_append_bytes_length.exit
  %memberidx.i91 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %75 = load ptr, ptr %memberidx.i91, align 8
  %76 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %11)
  %memberidx.i111 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %75, i64 0, i32 1
  %77 = load i64, ptr %memberidx.i111, align 4
  %78 = urem i64 %76, %77
  %79 = load ptr, ptr %75, align 8
  %80 = getelementptr inbounds ptr, ptr %79, i64 %78
  %81 = load ptr, ptr %80, align 8
  %.not.i112 = icmp eq ptr %81, null
  br i1 %.not.i112, label %if.entry.i, label %while.entry.i

while.entry.i:                                    ; preds = %false_block, %else.i115
  %82 = phi ptr [ %91, %else.i115 ], [ %79, %false_block ]
  %83 = phi i64 [ %92, %else.i115 ], [ %77, %false_block ]
  %84 = phi ptr [ %96, %else.i115 ], [ %81, %false_block ]
  %hash.0.i = phi i64 [ %94, %else.i115 ], [ %78, %false_block ]
  %85 = load ptr, ptr %84, align 8
  %memberidx.i.i113 = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  %86 = load i64, ptr %memberidx.i.i113, align 4
  %.not.i.i = icmp eq i64 %86, %71
  br i1 %.not.i.i, label %ifend.i.i, label %else.i115

ifend.i.i:                                        ; preds = %while.entry.i
  %87 = load ptr, ptr %85, align 8
  %88 = load ptr, ptr %11, align 8
  %89 = tail call i64 @memcmp(ptr %87, ptr %88, i64 %71)
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %while.end.i, label %ifend.i.i.else.i115_crit_edge

ifend.i.i.else.i115_crit_edge:                    ; preds = %ifend.i.i
  %.pre162 = load i64, ptr %memberidx.i111, align 4
  %.pre163 = load ptr, ptr %75, align 8
  br label %else.i115

while.end.i:                                      ; preds = %ifend.i.i
  %.pre164.pre = load ptr, ptr %75, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre164.pre, i64 %hash.0.i
  %.pre165.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre165.pre, null
  br i1 %.not25.i, label %if.entry.i, label %Map_String_LLVMValueRef____getitem__.exit

else.i115:                                        ; preds = %ifend.i.i.else.i115_crit_edge, %while.entry.i
  %91 = phi ptr [ %.pre163, %ifend.i.i.else.i115_crit_edge ], [ %82, %while.entry.i ]
  %92 = phi i64 [ %.pre162, %ifend.i.i.else.i115_crit_edge ], [ %83, %while.entry.i ]
  %93 = add nuw i64 %hash.0.i, 1
  %94 = urem i64 %93, %92
  %95 = getelementptr inbounds ptr, ptr %91, i64 %94
  %96 = load ptr, ptr %95, align 8
  %.not26.i = icmp eq ptr %96, null
  br i1 %.not26.i, label %if.entry.i, label %while.entry.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre165.pre, i64 0, i32 1
  %97 = load ptr, ptr %memberidx11.i, align 8
  %98 = icmp eq ptr %97, null
  br i1 %98, label %if.entry.i, label %end

if.entry.i:                                       ; preds = %else.i115, %false_block, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %99 = trunc i64 %71 to i32
  %100 = add i32 %99, 1
  %101 = tail call ptr @malloc(i32 %100)
  %102 = load ptr, ptr %11, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %101, ptr align 8 %102, i64 %71, i1 false)
  %103 = getelementptr inbounds i8, ptr %101, i64 %71
  store i8 0, ptr %103, align 1
  %104 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %101, ptr nonnull @80)
  %105 = load ptr, ptr %memberidx.i91, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %105, ptr nonnull %11, ptr %104)
  br label %end

end:                                              ; preds = %if.entry.i, %Map_String_LLVMValueRef____getitem__.exit, %true_block
  %ternary = phi ptr [ %74, %true_block ], [ %104, %if.entry.i ], [ %97, %Map_String_LLVMValueRef____getitem__.exit ]
  %memberidx14 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %106 = load ptr, ptr %memberidx14, align 8
  %107 = load i64, ptr %106, align 4
  %108 = icmp eq i64 %107, 20
  br i1 %108, label %if.entry.i141, label %is_object.exit

if.entry.i141:                                    ; preds = %end, %if.entry.i141
  %.tr5.i = phi ptr [ %109, %if.entry.i141 ], [ %106, %end ]
  %memberidx1.i140 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %109 = load ptr, ptr %memberidx1.i140, align 8
  %110 = load i64, ptr %109, align 4
  %111 = icmp eq i64 %110, 20
  br i1 %111, label %if.entry.i141, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i141, %end
  %.lcssa.i = phi i64 [ %107, %end ], [ %110, %if.entry.i141 ]
  %112 = icmp eq i64 %.lcssa.i, 11
  br i1 %112, label %if.entry, label %for.entry24

if.entry:                                         ; preds = %is_object.exit
  %113 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %106, i1 false)
  %114 = call i1 @LLVMIsConstant(ptr %ternary)
  %115 = call i1 @LLVMIsGlobalConstant(ptr %ternary)
  %116 = and i1 %114, %115
  br i1 %116, label %if.entry16, label %else17

if.entry16:                                       ; preds = %if.entry
  %117 = load ptr, ptr %0, align 8
  %118 = call ptr @LLVMGetNamedFunction(ptr %117, ptr nonnull @254)
  %119 = icmp eq ptr %118, null
  br i1 %119, label %if.entry20, label %ifend22

else17:                                           ; preds = %if.entry
  %120 = call ptr @LLVMBuildMalloc(ptr %1, ptr %113, ptr nonnull @80)
  store ptr %120, ptr %args1, align 8
  %121 = getelementptr inbounds ptr, ptr %args1, i64 1
  store ptr %ternary, ptr %121, align 8
  %122 = getelementptr inbounds ptr, ptr %args1, i64 2
  %123 = load ptr, ptr %str_len, align 8
  store ptr %123, ptr %122, align 8
  %124 = load ptr, ptr %memberidx14, align 8
  %memberidx.i106 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %125 = load i64, ptr %124, align 4
  %cond146 = icmp eq i64 %125, 20
  br i1 %cond146, label %if.entry.i137, label %get_class_from_type.exit

if.entry.i137:                                    ; preds = %else17, %if.entry.i137
  %.tr11.i147 = phi ptr [ %126, %if.entry.i137 ], [ %124, %else17 ]
  %memberidx1.i136 = getelementptr inbounds %GenericType, ptr %.tr11.i147, i64 0, i32 3
  %126 = load ptr, ptr %memberidx1.i136, align 8
  %127 = load i64, ptr %126, align 4
  %cond = icmp eq i64 %127, 20
  br i1 %cond, label %if.entry.i137, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i137, %else17
  %memberidx1.i107 = getelementptr inbounds %ObjectType, ptr %124, i64 0, i32 1
  %128 = load ptr, ptr %memberidx1.i107, align 8
  %129 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %128)
  %.not.i116 = icmp eq ptr %129, null
  br i1 %.not.i116, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %130 = load ptr, ptr %memberidx.i106, align 8
  %131 = load ptr, ptr %130, align 8
  %132 = load i64, ptr %128, align 4
  %133 = load ptr, ptr %131, align 8
  %134 = getelementptr inbounds ptr, ptr %133, i64 %132
  %135 = load ptr, ptr %134, align 8
  %memberidx2.i.i120 = getelementptr inbounds %Module, ptr %135, i64 0, i32 3
  %136 = load ptr, ptr %memberidx2.i.i120, align 8
  %memberidx3.i.i121 = getelementptr inbounds %TypeId, ptr %128, i64 0, i32 2
  %137 = load i64, ptr %memberidx3.i.i121, align 4
  %138 = load ptr, ptr %136, align 8
  %139 = getelementptr inbounds ptr, ptr %138, i64 %137
  %140 = load ptr, ptr %139, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %140)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %140)
  %141 = load ptr, ptr %140, align 8
  %142 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %141)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i117 = phi ptr [ %142, %ifend.i ], [ %129, %get_class_from_type.exit ]
  %memberidx2.i108 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i117, i64 0, i32 4
  %143 = load ptr, ptr %memberidx2.i108, align 8
  %.not.i = icmp eq ptr %143, null
  br i1 %.not.i, label %else.i, label %if.entry.i109

if.entry.i109:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %144 = call ptr @LLVM_GetFunctionType(ptr nonnull %143)
  %145 = call ptr @LLVMBuildCall2(ptr %1, ptr %144, ptr nonnull %143, ptr nonnull %args1, i64 3, ptr nonnull @80)
  br label %for.entry24

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %146 = call ptr @malloc(i32 47)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %146, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %147 = call ptr @malloc(i32 24)
  %148 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %148, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %149 = call ptr @malloc(i32 24)
  %150 = call i64 @write(i64 1, ptr %148, i64 7)
  call void @free(ptr %148)
  call void @free(ptr %149)
  %151 = call i64 @write(i64 1, ptr %146, i64 47)
  %152 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %146)
  call void @free(ptr %147)
  call void @exit(i64 -1)
  br label %for.entry24

if.entry20:                                       ; preds = %if.entry16
  %153 = call ptr @malloc(i32 54)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %153, ptr noundef nonnull align 8 dereferenceable(54) @255, i64 54, i1 false)
  %154 = call ptr @malloc(i32 24)
  %155 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %155, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %156 = call ptr @malloc(i32 24)
  %157 = call i64 @write(i64 1, ptr %155, i64 7)
  call void @free(ptr %155)
  call void @free(ptr %156)
  %158 = call i64 @write(i64 1, ptr %153, i64 54)
  %159 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %153)
  call void @free(ptr %154)
  call void @exit(i64 -1)
  br label %ifend22

ifend22:                                          ; preds = %if.entry16, %if.entry20
  store ptr %ternary, ptr %args, align 8
  %160 = getelementptr inbounds ptr, ptr %args, i64 1
  %161 = load ptr, ptr %str_len, align 8
  store ptr %161, ptr %160, align 8
  %162 = call ptr @LLVM_GetFunctionType(ptr %118)
  %163 = call ptr @LLVMBuildCall2(ptr %1, ptr %162, ptr %118, ptr nonnull %args, i64 2, ptr nonnull @80)
  br label %for.entry24

for.entry24:                                      ; preds = %else.i, %if.entry.i109, %ifend22, %is_object.exit
  %str.0 = phi ptr [ %163, %ifend22 ], [ %ternary, %is_object.exit ], [ %120, %if.entry.i109 ], [ %120, %else.i ]
  %164 = call ptr @malloc(i32 25)
  %165 = load ptr, ptr %13, align 8
  %166 = load i64, ptr %memberidx.i101, align 4
  store i1 false, ptr %164, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %164, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %164, i64 0, i32 3
  store ptr %165, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %164, i64 0, i32 2
  store i64 %166, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %167 = icmp slt i64 %166, 1
  br i1 %167, label %for.end28, label %for.body26

for.body26:                                       ; preds = %for.entry24, %for.body26
  %168 = phi i64 [ %170, %for.body26 ], [ 1, %for.entry24 ]
  %mem.0145.in = phi ptr [ %171, %for.body26 ], [ %165, %for.entry24 ]
  %mem.0145 = load ptr, ptr %mem.0145.in, align 8
  %169 = call ptr @LLVMBuildFree(ptr %1, ptr %mem.0145)
  %170 = add nuw nsw i64 %168, 1
  store i64 %170, ptr %memberidx1.i.i, align 4
  %171 = getelementptr inbounds ptr, ptr %165, i64 %168
  %.not = icmp slt i64 %168, %166
  br i1 %.not, label %for.body26, label %for.end28

for.end28:                                        ; preds = %for.body26, %for.entry24
  tail call void @free(ptr nonnull %164)
  call void @free(ptr %165)
  tail call void @free(ptr %13)
  ret ptr %str.0
}

define internal fastcc ptr @CodeGen_codegen_expression(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %args.i = alloca [1 x ptr], align 8
  %func_ty.i = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %args.i.i = alloca [2 x ptr], align 8
  %arg_types.i.i = alloca [2 x ptr], align 8
  %5 = alloca ptr, align 8
  %indices.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 2
  %6 = load i64, ptr %memberidx, align 4
  switch i64 %6, label %common.ret245 [
    i64 4, label %if.entry
    i64 0, label %if.entry2
    i64 1, label %if.entry6
    i64 5, label %if.entry10
    i64 2, label %if.entry14
    i64 8, label %if.entry18
    i64 9, label %if.entry22
    i64 10, label %if.entry26
    i64 15, label %if.entry30
    i64 14, label %CodeGen_get_expr_mem.exit214
    i64 13, label %if.entry38
    i64 12, label %if.entry42
    i64 16, label %if.entry46
    i64 11, label %if.entry50
    i64 6, label %if.entry54
    i64 7, label %if.entry58
    i64 17, label %if.entry62
    i64 18, label %if.entry66
  ]

common.ret245:                                    ; preds = %if.entry, %if.entry2, %if.entry6, %if.entry10, %if.entry14, %if.entry18, %CodeGen_codegen_bin_exp.exit, %CodeGen_codegen_unary_exp.exit, %CodeGen_codegen_call_exp.exit, %CodeGen_get_expr_mem.exit214, %if.entry38, %if.entry42, %if.entry54, %if.entry58, %if.entry62, %if.entry66, %true_block.i179, %false_block.i180, %true_block6.i, %false_block7.i, %true_block14.i, %false_block15.i, %true_block22.i, %false_block23.i, %true_block32.i, %false_block33.i, %true_block36.i, %false_block37.i, %3, %if.entry46
  %common.ret245.op = phi ptr [ %383, %if.entry46 ], [ %9, %if.entry ], [ %13, %if.entry2 ], [ %17, %if.entry6 ], [ %20, %if.entry10 ], [ %21, %if.entry14 ], [ %22, %if.entry18 ], [ %common.ret.op.i, %CodeGen_codegen_bin_exp.exit ], [ %common.ret.op.i147, %CodeGen_codegen_unary_exp.exit ], [ %358, %CodeGen_codegen_call_exp.exit ], [ %362, %CodeGen_get_expr_mem.exit214 ], [ %363, %if.entry38 ], [ %364, %if.entry42 ], [ %423, %if.entry54 ], [ %424, %if.entry58 ], [ %425, %if.entry62 ], [ %426, %if.entry66 ], [ %403, %true_block.i179 ], [ %404, %false_block.i180 ], [ %410, %true_block6.i ], [ %411, %false_block7.i ], [ %413, %true_block14.i ], [ %414, %false_block15.i ], [ %417, %true_block22.i ], [ %418, %false_block23.i ], [ %419, %true_block32.i ], [ %420, %false_block33.i ], [ %421, %true_block36.i ], [ %422, %false_block37.i ], [ null, %3 ]
  ret ptr %common.ret245.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %BooleanExpression, ptr %2, i64 0, i32 4
  %7 = load i1, ptr %memberidx.i, align 1
  %8 = tail call ptr @LLVMInt1Type()
  %..i.i = zext i1 %7 to i64
  %9 = tail call ptr @LLVMConstInt(ptr %8, i64 %..i.i, i1 false)
  br label %common.ret245

if.entry2:                                        ; preds = %3
  %memberidx.i134 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %memberidx.i134, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  %memberidx1.i = getelementptr inbounds %IntExpression, ptr %2, i64 0, i32 4
  %12 = load i64, ptr %memberidx1.i, align 4
  %13 = tail call ptr @LLVMConstInt(ptr %11, i64 %12, i1 true)
  br label %common.ret245

if.entry6:                                        ; preds = %3
  %memberidx.i135 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %14 = load ptr, ptr %memberidx.i135, align 8
  %15 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %14, i1 true)
  %memberidx1.i136 = getelementptr inbounds %FloatExpression, ptr %2, i64 0, i32 4
  %16 = load double, ptr %memberidx1.i136, align 8
  %17 = tail call ptr @LLVMConstReal(ptr %15, double %16)
  br label %common.ret245

if.entry10:                                       ; preds = %3
  %memberidx.i137 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %18 = load ptr, ptr %memberidx.i137, align 8
  %19 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %18, i1 true)
  %20 = tail call ptr @LLVMConstNull(ptr %19)
  br label %common.ret245

if.entry14:                                       ; preds = %3
  %21 = tail call fastcc ptr @CodeGen_codegen_string(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry18:                                       ; preds = %3
  %22 = tail call fastcc ptr @CodeGen_codegen_var_access_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry22:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %indices.i)
  %memberidx.i138 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 5
  %23 = load i64, ptr %memberidx.i138, align 4
  %memberidx1.i139 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 4
  %24 = load ptr, ptr %memberidx1.i139, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %24, i64 0, i32 3
  %25 = load ptr, ptr %memberidx2.i, align 8
  %26 = load i64, ptr %25, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 6
  %27 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx5.i, align 8
  %29 = load i64, ptr %28, align 4
  %.not.i = icmp eq i64 %26, %29
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry22
  switch i64 %23, label %ifend15.i [
    i64 11, label %if.entry7.i
    i64 12, label %if.entry10.i
    i64 19, label %if.entry13.i
  ]

ifend.i:                                          ; preds = %if.entry22
  %30 = icmp eq i64 %23, 19
  br i1 %30, label %if.entry13.i, label %ifend15.i

if.entry7.i:                                      ; preds = %if.entry.i
  %31 = tail call ptr @LLVMInt1Type()
  %32 = tail call ptr @LLVMConstInt(ptr %31, i64 0, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

if.entry10.i:                                     ; preds = %if.entry.i
  %33 = tail call ptr @LLVMInt1Type()
  %34 = tail call ptr @LLVMConstInt(ptr %33, i64 1, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

if.entry13.i:                                     ; preds = %if.entry.i, %ifend.i
  %memberidx.i187 = getelementptr inbounds %Expression, ptr %24, i64 0, i32 2
  %35 = load i64, ptr %memberidx.i187, align 4
  switch i64 %35, label %ifend8.i [
    i64 8, label %if.entry.i189
    i64 14, label %if.entry2.i
    i64 13, label %if.entry6.i
  ]

if.entry.i189:                                    ; preds = %if.entry13.i
  %36 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry13.i
  %37 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry13.i
  %38 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %24, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry13.i
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i189, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i188 = phi ptr [ %36, %if.entry.i189 ], [ %37, %if.entry2.i ], [ %38, %if.entry6.i ], [ %39, %ifend8.i ]
  %40 = load ptr, ptr %memberidx4.i, align 8
  %41 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i188, ptr %40)
  br label %CodeGen_codegen_bin_exp.exit

ifend15.i:                                        ; preds = %if.entry.i, %ifend.i
  %42 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %24)
  %43 = load ptr, ptr %memberidx4.i, align 8
  %44 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %43)
  %45 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx.i.i, align 4
  %47 = icmp eq i64 %46, 5
  %48 = icmp eq i64 %23, 11
  %49 = icmp eq i64 %23, 12
  %50 = add i64 %23, -11
  %51 = icmp ult i64 %50, 2
  %52 = and i1 %51, %47
  br i1 %52, label %if.entry19.i, label %ifend21.i

if.entry19.i:                                     ; preds = %ifend15.i
  %53 = tail call i1 @LLVMIsConstant(ptr %42)
  br i1 %53, label %if.entry22.i, label %ifend24.i

ifend21.i:                                        ; preds = %ifend15.i
  %54 = load ptr, ptr %memberidx1.i139, align 8
  %memberidx30.i = getelementptr inbounds %Expression, ptr %54, i64 0, i32 3
  %55 = load ptr, ptr %memberidx30.i, align 8
  %memberidx32.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 3
  %56 = load ptr, ptr %memberidx32.i, align 8
  %57 = load i64, ptr %56, align 4
  %58 = add i64 %57, -1
  %59 = icmp ult i64 %58, 9
  %60 = icmp eq i64 %23, 6
  %61 = and i1 %60, %59
  br i1 %61, label %if.entry33.i, label %ifend35.i

if.entry22.i:                                     ; preds = %if.entry19.i
  %62 = tail call i1 @LLVMIsNull(ptr %42)
  %63 = tail call ptr @LLVMInt1Type()
  %..i.i140 = zext i1 %62 to i64
  %64 = tail call ptr @LLVMConstInt(ptr %63, i64 %..i.i140, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

ifend24.i:                                        ; preds = %if.entry19.i
  br i1 %48, label %true_block25.i, label %false_block26.i

true_block25.i:                                   ; preds = %ifend24.i
  %65 = tail call ptr @LLVMBuildIsNull(ptr %1, ptr %42, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

false_block26.i:                                  ; preds = %ifend24.i
  %66 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %42, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry33.i:                                     ; preds = %ifend21.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store ptr %42, ptr %args.i.i, align 8
  %67 = getelementptr inbounds ptr, ptr %args.i.i, i64 1
  store ptr %44, ptr %67, align 8
  %68 = tail call fastcc ptr @dump_type(ptr nonnull %56, i1 true)
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %68, i64 0, i32 1
  %69 = load i64, ptr %memberidx.i.i.i, align 4
  %70 = trunc i64 %69 to i32
  %71 = add i32 %70, 1
  %72 = tail call ptr @malloc(i32 %71)
  %73 = load ptr, ptr %68, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %72, ptr align 8 %73, i64 %69, i1 false)
  %74 = getelementptr inbounds i8, ptr %72, i64 %69
  store i8 0, ptr %74, align 1
  %75 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @263, ptr %72)
  %76 = load ptr, ptr %5, align 8
  %77 = call ptr @malloc(i32 24)
  store ptr %76, ptr %77, align 8
  %memberidx1.i.i454.i = getelementptr inbounds %String, ptr %77, i64 0, i32 1
  store i64 %75, ptr %memberidx1.i.i454.i, align 4
  %memberidx2.i.i455.i = getelementptr inbounds %String, ptr %77, i64 0, i32 2
  store i64 %75, ptr %memberidx2.i.i455.i, align 4
  call void @free(ptr %72)
  %78 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %56, i1 true)
  store ptr %78, ptr %arg_types.i.i, align 8
  %79 = getelementptr inbounds ptr, ptr %arg_types.i.i, i64 1
  store ptr %78, ptr %79, align 8
  %80 = load ptr, ptr %0, align 8
  %81 = call ptr @malloc(i32 16)
  %memberidx1.i.i.i456.i = getelementptr inbounds %IntrinsicResult, ptr %81, i64 0, i32 1
  store i64 0, ptr %81, align 8
  %82 = call ptr @LLVMFunctionType(ptr %78, ptr nonnull %arg_types.i.i, i64 2, i1 false)
  store ptr %82, ptr %memberidx1.i.i.i456.i, align 8
  %83 = trunc i64 %75 to i32
  %84 = add i32 %83, 1
  %85 = call ptr @malloc(i32 %84)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %85, ptr align 8 %76, i64 %75, i1 false)
  %86 = getelementptr inbounds i8, ptr %85, i64 %75
  store i8 0, ptr %86, align 1
  %87 = call ptr @LLVMGetNamedFunction(ptr %80, ptr %85)
  %.not.i.i.i = icmp eq ptr %87, null
  br i1 %.not.i.i.i, label %else.i.i.i, label %CodeGen_codegen_pow_expr.exit.i

else.i.i.i:                                       ; preds = %if.entry33.i
  %88 = call ptr @LLVMAddFunction(ptr %80, ptr nonnull %85, ptr %82)
  br label %CodeGen_codegen_pow_expr.exit.i

CodeGen_codegen_pow_expr.exit.i:                  ; preds = %if.entry33.i, %else.i.i.i
  %storemerge.i.i.i = phi ptr [ %88, %else.i.i.i ], [ %87, %if.entry33.i ]
  store ptr %storemerge.i.i.i, ptr %81, align 8
  %89 = call ptr @LLVMBuildCall2(ptr %1, ptr %82, ptr %storemerge.i.i.i, ptr nonnull %args.i.i, i64 2, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %CodeGen_codegen_bin_exp.exit

ifend35.i:                                        ; preds = %ifend21.i
  %90 = load i64, ptr %55, align 4
  %91 = icmp eq i64 %90, 13
  br i1 %91, label %if.entry36.i, label %ifend38.i

if.entry36.i:                                     ; preds = %ifend35.i
  %92 = icmp eq i64 %23, 1
  br i1 %92, label %end41.i, label %false_block40.i

ifend38.i:                                        ; preds = %ifend35.i
  %93 = tail call i1 @LLVMIsConstant(ptr %42)
  %94 = tail call i1 @LLVMIsConstant(ptr %44)
  %95 = and i1 %93, %94
  %96 = load i64, ptr %56, align 4
  %97 = load i64, ptr %55, align 4
  %98 = icmp eq i64 %97, 20
  br i1 %98, label %if.entry.i235, label %is_object.exit238

if.entry.i235:                                    ; preds = %ifend38.i, %if.entry.i235
  %.tr5.i233 = phi ptr [ %99, %if.entry.i235 ], [ %55, %ifend38.i ]
  %memberidx1.i234 = getelementptr inbounds %GenericType, ptr %.tr5.i233, i64 0, i32 3
  %99 = load ptr, ptr %memberidx1.i234, align 8
  %100 = load i64, ptr %99, align 4
  %101 = icmp eq i64 %100, 20
  br i1 %101, label %if.entry.i235, label %is_object.exit238

is_object.exit238:                                ; preds = %if.entry.i235, %ifend38.i
  %.lcssa.i236 = phi i64 [ %97, %ifend38.i ], [ %100, %if.entry.i235 ]
  %102 = icmp eq i64 %.lcssa.i236, 11
  %103 = icmp eq i64 %96, 20
  br i1 %103, label %if.entry.i229, label %is_object.exit232

if.entry.i229:                                    ; preds = %is_object.exit238, %if.entry.i229
  %.tr5.i227 = phi ptr [ %104, %if.entry.i229 ], [ %56, %is_object.exit238 ]
  %memberidx1.i228 = getelementptr inbounds %GenericType, ptr %.tr5.i227, i64 0, i32 3
  %104 = load ptr, ptr %memberidx1.i228, align 8
  %105 = load i64, ptr %104, align 4
  %106 = icmp eq i64 %105, 20
  br i1 %106, label %if.entry.i229, label %is_object.exit232

is_object.exit232:                                ; preds = %if.entry.i229, %is_object.exit238
  %.lcssa.i230 = phi i64 [ %96, %is_object.exit238 ], [ %105, %if.entry.i229 ]
  %107 = icmp eq i64 %.lcssa.i230, 11
  %108 = and i1 %102, %107
  %109 = and i1 %51, %108
  %110 = freeze i1 %109
  br i1 %110, label %if.entry45.i, label %switch.early.test

switch.early.test:                                ; preds = %is_object.exit232
  switch i64 %96, label %else46.i [
    i64 12, label %if.entry45.i
    i64 7, label %if.entry45.i
    i64 6, label %if.entry45.i
    i64 5, label %if.entry45.i
    i64 4, label %if.entry45.i
    i64 3, label %if.entry45.i
    i64 2, label %if.entry45.i
    i64 1, label %if.entry45.i
  ]

false_block40.i:                                  ; preds = %if.entry36.i
  %111 = tail call i1 @LLVMIsConstant(ptr %44)
  br i1 %111, label %true_block.i.i, label %false_block.i.i

true_block.i.i:                                   ; preds = %false_block40.i
  %112 = tail call ptr @LLVMConstNeg(ptr %44)
  br label %end41.i

false_block.i.i:                                  ; preds = %false_block40.i
  %113 = tail call ptr @LLVMBuildNeg(ptr %1, ptr %44, ptr nonnull @80)
  br label %end41.i

end41.i:                                          ; preds = %true_block.i.i, %false_block.i.i, %if.entry36.i
  %ternary42.i = phi ptr [ %44, %if.entry36.i ], [ %112, %true_block.i.i ], [ %113, %false_block.i.i ]
  store ptr %ternary42.i, ptr %indices.i, align 8
  %memberidx43.i = getelementptr inbounds %PointerType, ptr %55, i64 0, i32 1
  %114 = load ptr, ptr %memberidx43.i, align 8
  %115 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %114, i1 true)
  %116 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %115, ptr %42, ptr nonnull %indices.i, i64 1, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry45.i:                                     ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %is_object.exit232
  switch i64 %23, label %else105.i [
    i64 1, label %if.entry48.i
    i64 2, label %if.entry64.i
    i64 3, label %if.entry80.i
    i64 4, label %if.entry96.i
    i64 5, label %if.entry104.i
  ]

else46.i:                                         ; preds = %switch.early.test
  %117 = and i64 %96, -2
  %118 = icmp eq i64 %117, 8
  br i1 %118, label %if.entry166.i, label %else167.i

ifend47.i:                                        ; preds = %else125.i, %else213.i, %else185.i, %else167.i
  %119 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %119, ptr noundef nonnull align 8 dereferenceable(33) @264, i64 33, i1 false)
  %120 = tail call ptr @malloc(i32 24)
  %121 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %121, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %122 = tail call ptr @malloc(i32 24)
  %123 = tail call i64 @write(i64 1, ptr %121, i64 7)
  tail call void @free(ptr %121)
  tail call void @free(ptr %122)
  %124 = tail call i64 @write(i64 1, ptr %119, i64 33)
  %125 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %119)
  tail call void @free(ptr %120)
  tail call void @exit(i64 -1)
  br label %CodeGen_codegen_bin_exp.exit

if.entry48.i:                                     ; preds = %if.entry45.i
  %memberidx51.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %126 = load ptr, ptr %memberidx51.i, align 8
  %memberidx52.i = getelementptr inbounds %IntType, ptr %126, i64 0, i32 1
  %127 = load i1, ptr %memberidx52.i, align 1
  br i1 %127, label %if.entry53.i, label %ifend55.i

if.entry53.i:                                     ; preds = %if.entry48.i
  br i1 %95, label %true_block56.i, label %false_block57.i

ifend55.i:                                        ; preds = %if.entry48.i
  br i1 %95, label %true_block60.i, label %false_block61.i

true_block56.i:                                   ; preds = %if.entry53.i
  %128 = tail call ptr @LLVMConstNSWAdd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block57.i:                                  ; preds = %if.entry53.i
  %129 = tail call ptr @LLVMBuildNSWAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

true_block60.i:                                   ; preds = %ifend55.i
  %130 = tail call ptr @LLVMConstNUWAdd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block61.i:                                  ; preds = %ifend55.i
  %131 = tail call ptr @LLVMBuildNUWAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry64.i:                                     ; preds = %if.entry45.i
  %memberidx67.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %132 = load ptr, ptr %memberidx67.i, align 8
  %memberidx68.i = getelementptr inbounds %IntType, ptr %132, i64 0, i32 1
  %133 = load i1, ptr %memberidx68.i, align 1
  br i1 %133, label %if.entry69.i, label %ifend71.i

if.entry69.i:                                     ; preds = %if.entry64.i
  br i1 %95, label %true_block72.i, label %false_block73.i

ifend71.i:                                        ; preds = %if.entry64.i
  br i1 %95, label %true_block76.i, label %false_block77.i

true_block72.i:                                   ; preds = %if.entry69.i
  %134 = tail call ptr @LLVMConstNSWSub(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block73.i:                                  ; preds = %if.entry69.i
  %135 = tail call ptr @LLVMBuildNSWSub(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

true_block76.i:                                   ; preds = %ifend71.i
  %136 = tail call ptr @LLVMConstNUWSub(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block77.i:                                  ; preds = %ifend71.i
  %137 = tail call ptr @LLVMBuildNUWSub(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry80.i:                                     ; preds = %if.entry45.i
  %memberidx83.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %138 = load ptr, ptr %memberidx83.i, align 8
  %memberidx84.i = getelementptr inbounds %IntType, ptr %138, i64 0, i32 1
  %139 = load i1, ptr %memberidx84.i, align 1
  br i1 %139, label %if.entry85.i, label %ifend87.i

if.entry85.i:                                     ; preds = %if.entry80.i
  br i1 %95, label %true_block88.i, label %false_block89.i

ifend87.i:                                        ; preds = %if.entry80.i
  br i1 %95, label %true_block92.i, label %false_block93.i

true_block88.i:                                   ; preds = %if.entry85.i
  %140 = tail call ptr @LLVMConstNSWMul(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block89.i:                                  ; preds = %if.entry85.i
  %141 = tail call ptr @LLVMBuildNSWMul(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

true_block92.i:                                   ; preds = %ifend87.i
  %142 = tail call ptr @LLVMConstNUWMul(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block93.i:                                  ; preds = %ifend87.i
  %143 = tail call ptr @LLVMBuildNUWMul(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry96.i:                                     ; preds = %if.entry45.i
  %memberidx99.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %144 = load ptr, ptr %memberidx99.i, align 8
  %memberidx100.i = getelementptr inbounds %IntType, ptr %144, i64 0, i32 1
  %145 = load i1, ptr %memberidx100.i, align 1
  br i1 %145, label %if.entry101.i, label %ifend103.i

if.entry101.i:                                    ; preds = %if.entry96.i
  %146 = tail call ptr @LLVMBuildSDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

ifend103.i:                                       ; preds = %if.entry96.i
  %147 = tail call ptr @LLVMBuildUDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry104.i:                                    ; preds = %if.entry45.i
  %memberidx107.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %148 = load ptr, ptr %memberidx107.i, align 8
  %memberidx108.i = getelementptr inbounds %IntType, ptr %148, i64 0, i32 1
  %149 = load i1, ptr %memberidx108.i, align 1
  br i1 %149, label %if.entry109.i, label %ifend111.i

else105.i:                                        ; preds = %if.entry45.i
  %150 = add i64 %23, -7
  %151 = icmp ult i64 %150, 4
  br i1 %151, label %if.entry112.i, label %else113.i

if.entry109.i:                                    ; preds = %if.entry104.i
  %152 = tail call ptr @LLVMBuildSRem(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

ifend111.i:                                       ; preds = %if.entry104.i
  %153 = tail call ptr @LLVMBuildURem(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry112.i:                                    ; preds = %else105.i
  %154 = add nuw nsw i64 %23, 31
  br i1 %95, label %true_block120.i, label %false_block121.i

else113.i:                                        ; preds = %else105.i
  br i1 %51, label %if.entry124.i, label %else125.i

true_block120.i:                                  ; preds = %if.entry112.i
  %155 = tail call ptr @LLVMConstICmp(i64 %154, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block121.i:                                 ; preds = %if.entry112.i
  %156 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %154, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry124.i:                                    ; preds = %else113.i
  %157 = add nuw nsw i64 %23, 21
  br i1 %95, label %true_block127.i, label %false_block128.i

else125.i:                                        ; preds = %else113.i
  switch i64 %23, label %ifend47.i [
    i64 13, label %if.entry131.i
    i64 14, label %if.entry138.i
    i64 15, label %if.entry145.i
    i64 16, label %if.entry152.i
    i64 17, label %if.entry159.i
  ]

true_block127.i:                                  ; preds = %if.entry124.i
  %158 = tail call ptr @LLVMConstICmp(i64 %157, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block128.i:                                 ; preds = %if.entry124.i
  %159 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %157, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry131.i:                                    ; preds = %else125.i
  br i1 %95, label %true_block134.i, label %false_block135.i

true_block134.i:                                  ; preds = %if.entry131.i
  %160 = tail call ptr @LLVMConstShl(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block135.i:                                 ; preds = %if.entry131.i
  %161 = tail call ptr @LLVMBuildShl(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry138.i:                                    ; preds = %else125.i
  br i1 %95, label %true_block141.i, label %false_block142.i

true_block141.i:                                  ; preds = %if.entry138.i
  %162 = tail call ptr @LLVMConstLShr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block142.i:                                 ; preds = %if.entry138.i
  %163 = tail call ptr @LLVMBuildLShr(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry145.i:                                    ; preds = %else125.i
  br i1 %95, label %true_block148.i, label %false_block149.i

true_block148.i:                                  ; preds = %if.entry145.i
  %164 = tail call ptr @LLVMConstOr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block149.i:                                 ; preds = %if.entry145.i
  %165 = tail call ptr @LLVMBuildOr(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry152.i:                                    ; preds = %else125.i
  br i1 %95, label %true_block155.i, label %false_block156.i

true_block155.i:                                  ; preds = %if.entry152.i
  %166 = tail call ptr @LLVMConstAnd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block156.i:                                 ; preds = %if.entry152.i
  %167 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry159.i:                                    ; preds = %else125.i
  br i1 %95, label %true_block162.i, label %false_block163.i

true_block162.i:                                  ; preds = %if.entry159.i
  %168 = tail call ptr @LLVMConstXor(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block163.i:                                 ; preds = %if.entry159.i
  %169 = tail call ptr @LLVMBuildXor(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry166.i:                                    ; preds = %else46.i
  switch i64 %23, label %else182.i [
    i64 1, label %if.entry169.i
    i64 2, label %if.entry172.i
    i64 3, label %if.entry175.i
    i64 4, label %if.entry178.i
    i64 5, label %if.entry181.i
  ]

else167.i:                                        ; preds = %else46.i
  %170 = icmp eq i64 %96, 0
  br i1 %170, label %if.entry202.i, label %ifend47.i

if.entry169.i:                                    ; preds = %if.entry166.i
  %171 = tail call ptr @LLVMBuildFAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry172.i:                                    ; preds = %if.entry166.i
  %172 = tail call ptr @LLVMBuildFSub(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry175.i:                                    ; preds = %if.entry166.i
  %173 = tail call ptr @LLVMBuildFMul(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry178.i:                                    ; preds = %if.entry166.i
  %174 = tail call ptr @LLVMBuildFDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry181.i:                                    ; preds = %if.entry166.i
  %175 = tail call ptr @LLVMBuildFRem(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

else182.i:                                        ; preds = %if.entry166.i
  %176 = add i64 %23, -7
  %177 = icmp ult i64 %176, 4
  br i1 %177, label %if.entry184.i, label %else185.i

if.entry184.i:                                    ; preds = %else182.i
  %178 = add nsw i64 %23, -5
  br i1 %95, label %true_block187.i, label %false_block188.i

else185.i:                                        ; preds = %else182.i
  br i1 %51, label %if.entry191.i, label %ifend47.i

true_block187.i:                                  ; preds = %if.entry184.i
  %179 = tail call ptr @LLVMConstFCmp(i64 %178, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block188.i:                                 ; preds = %if.entry184.i
  %180 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %178, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry191.i:                                    ; preds = %else185.i
  %.226.i = select i1 %49, i64 6, i64 1
  br i1 %95, label %true_block198.i, label %false_block199.i

true_block198.i:                                  ; preds = %if.entry191.i
  %181 = tail call ptr @LLVMConstFCmp(i64 %.226.i, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block199.i:                                 ; preds = %if.entry191.i
  %182 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %.226.i, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry202.i:                                    ; preds = %else167.i
  switch i64 %23, label %else213.i [
    i64 16, label %if.entry205.i
    i64 11, label %if.entry205.i
    i64 15, label %if.entry212.i
  ]

if.entry205.i:                                    ; preds = %if.entry202.i, %if.entry202.i
  br i1 %95, label %true_block208.i, label %false_block209.i

true_block208.i:                                  ; preds = %if.entry205.i
  %183 = tail call ptr @LLVMConstAnd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block209.i:                                 ; preds = %if.entry205.i
  %184 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry212.i:                                    ; preds = %if.entry202.i
  br i1 %95, label %true_block215.i, label %false_block216.i

else213.i:                                        ; preds = %if.entry202.i
  br i1 %49, label %if.entry219.i, label %ifend47.i

true_block215.i:                                  ; preds = %if.entry212.i
  %185 = tail call ptr @LLVMConstOr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block216.i:                                 ; preds = %if.entry212.i
  %186 = tail call ptr @LLVMBuildOr(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry219.i:                                    ; preds = %else213.i
  br i1 %95, label %true_block222.i, label %false_block223.i

true_block222.i:                                  ; preds = %if.entry219.i
  %187 = tail call ptr @LLVMConstXor(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block223.i:                                 ; preds = %if.entry219.i
  %188 = tail call ptr @LLVMBuildXor(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

CodeGen_codegen_bin_exp.exit:                     ; preds = %if.entry7.i, %if.entry10.i, %CodeGen_get_expr_mem.exit, %if.entry22.i, %true_block25.i, %false_block26.i, %CodeGen_codegen_pow_expr.exit.i, %end41.i, %ifend47.i, %true_block56.i, %false_block57.i, %true_block60.i, %false_block61.i, %true_block72.i, %false_block73.i, %true_block76.i, %false_block77.i, %true_block88.i, %false_block89.i, %true_block92.i, %false_block93.i, %if.entry101.i, %ifend103.i, %if.entry109.i, %ifend111.i, %true_block120.i, %false_block121.i, %true_block127.i, %false_block128.i, %true_block134.i, %false_block135.i, %true_block141.i, %false_block142.i, %true_block148.i, %false_block149.i, %true_block155.i, %false_block156.i, %true_block162.i, %false_block163.i, %if.entry169.i, %if.entry172.i, %if.entry175.i, %if.entry178.i, %if.entry181.i, %true_block187.i, %false_block188.i, %true_block198.i, %false_block199.i, %true_block208.i, %false_block209.i, %true_block215.i, %false_block216.i, %true_block222.i, %false_block223.i
  %common.ret.op.i = phi ptr [ %32, %if.entry7.i ], [ %34, %if.entry10.i ], [ %41, %CodeGen_get_expr_mem.exit ], [ %64, %if.entry22.i ], [ %89, %CodeGen_codegen_pow_expr.exit.i ], [ %116, %end41.i ], [ null, %ifend47.i ], [ %146, %if.entry101.i ], [ %147, %ifend103.i ], [ %152, %if.entry109.i ], [ %153, %ifend111.i ], [ %171, %if.entry169.i ], [ %172, %if.entry172.i ], [ %173, %if.entry175.i ], [ %174, %if.entry178.i ], [ %175, %if.entry181.i ], [ %65, %true_block25.i ], [ %66, %false_block26.i ], [ %128, %true_block56.i ], [ %129, %false_block57.i ], [ %130, %true_block60.i ], [ %131, %false_block61.i ], [ %134, %true_block72.i ], [ %135, %false_block73.i ], [ %136, %true_block76.i ], [ %137, %false_block77.i ], [ %140, %true_block88.i ], [ %141, %false_block89.i ], [ %142, %true_block92.i ], [ %143, %false_block93.i ], [ %155, %true_block120.i ], [ %156, %false_block121.i ], [ %158, %true_block127.i ], [ %159, %false_block128.i ], [ %160, %true_block134.i ], [ %161, %false_block135.i ], [ %162, %true_block141.i ], [ %163, %false_block142.i ], [ %164, %true_block148.i ], [ %165, %false_block149.i ], [ %166, %true_block155.i ], [ %167, %false_block156.i ], [ %168, %true_block162.i ], [ %169, %false_block163.i ], [ %179, %true_block187.i ], [ %180, %false_block188.i ], [ %181, %true_block198.i ], [ %182, %false_block199.i ], [ %183, %true_block208.i ], [ %184, %false_block209.i ], [ %185, %true_block215.i ], [ %186, %false_block216.i ], [ %187, %true_block222.i ], [ %188, %false_block223.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %indices.i)
  br label %common.ret245

if.entry26:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %indices.i)
  %memberidx.i142 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 4
  %189 = load i64, ptr %memberidx.i142, align 4
  %memberidx1.i143 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 5
  %190 = load ptr, ptr %memberidx1.i143, align 8
  %191 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %190)
  switch i64 %189, label %ifend29.i [
    i64 1, label %if.entry.i145
    i64 6, label %if.entry7.i148
    i64 7, label %if.entry27.i
  ]

if.entry.i145:                                    ; preds = %if.entry26
  %memberidx2.i144 = getelementptr inbounds %Expression, ptr %190, i64 0, i32 3
  %192 = load ptr, ptr %memberidx2.i144, align 8
  %193 = load i64, ptr %192, align 4
  %194 = icmp eq i64 %193, 20
  br i1 %194, label %if.entry.i225, label %is_object.exit

if.entry.i225:                                    ; preds = %if.entry.i145, %if.entry.i225
  %.tr5.i = phi ptr [ %195, %if.entry.i225 ], [ %192, %if.entry.i145 ]
  %memberidx1.i224 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %195 = load ptr, ptr %memberidx1.i224, align 8
  %196 = load i64, ptr %195, align 4
  %197 = icmp eq i64 %196, 20
  br i1 %197, label %if.entry.i225, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i225, %if.entry.i145
  %.lcssa.i = phi i64 [ %193, %if.entry.i145 ], [ %196, %if.entry.i225 ]
  %198 = icmp eq i64 %.lcssa.i, 11
  br i1 %198, label %if.entry3.i, label %ifend5.i

if.entry3.i:                                      ; preds = %is_object.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %func_ty.i)
  %199 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %199, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %200 = tail call ptr @malloc(i32 24)
  store ptr %199, ptr %200, align 8
  %memberidx1.i.i.i239 = getelementptr inbounds %String, ptr %200, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i.i239, align 4
  %memberidx2.i.i.i240 = getelementptr inbounds %String, ptr %200, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i.i240, align 4
  %201 = call fastcc ptr @CodeGen_get_member_with_name(ptr %0, ptr %1, ptr %191, ptr nonnull %192, ptr nonnull %200, ptr nonnull %func_ty.i)
  %202 = icmp eq ptr %201, null
  br i1 %202, label %CodeGen_codegen_del_call.exit, label %ifend.i241

ifend.i241:                                       ; preds = %if.entry3.i
  store ptr %191, ptr %args.i, align 8
  %203 = load ptr, ptr %func_ty.i, align 8
  %204 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %203, i1 false)
  %205 = call ptr @LLVMBuildCall2(ptr %1, ptr %204, ptr nonnull %201, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  br label %CodeGen_codegen_del_call.exit

CodeGen_codegen_del_call.exit:                    ; preds = %if.entry3.i, %ifend.i241
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %func_ty.i)
  br label %ifend5.i

ifend5.i:                                         ; preds = %CodeGen_codegen_del_call.exit, %is_object.exit
  %206 = call ptr @LLVMBuildFree(ptr %1, ptr %191)
  br label %CodeGen_codegen_unary_exp.exit

if.entry7.i148:                                   ; preds = %if.entry26
  %memberidx10.i = getelementptr inbounds %Expression, ptr %190, i64 0, i32 3
  %207 = load ptr, ptr %memberidx10.i, align 8
  %208 = load i64, ptr %207, align 4
  %209 = add i64 %208, -1
  %210 = icmp ult i64 %209, 7
  br i1 %210, label %if.entry11.i, label %else12.i

if.entry11.i:                                     ; preds = %if.entry7.i148
  %memberidx15.i = getelementptr inbounds %IntType, ptr %207, i64 0, i32 1
  %211 = load i1, ptr %memberidx15.i, align 1
  %212 = tail call i1 @LLVMIsConstant(ptr %191)
  br i1 %211, label %if.entry16.i, label %ifend18.i

else12.i:                                         ; preds = %if.entry7.i148
  %213 = and i64 %208, -2
  %214 = icmp eq i64 %213, 8
  br i1 %214, label %if.entry24.i, label %CodeGen_codegen_unary_exp.exit

if.entry16.i:                                     ; preds = %if.entry11.i
  br i1 %212, label %true_block.i149, label %false_block.i150

ifend18.i:                                        ; preds = %if.entry11.i
  br i1 %212, label %true_block19.i, label %false_block20.i

true_block.i149:                                  ; preds = %if.entry16.i
  %215 = tail call ptr @LLVMConstNSWNeg(ptr %191)
  br label %CodeGen_codegen_unary_exp.exit

false_block.i150:                                 ; preds = %if.entry16.i
  %216 = tail call ptr @LLVMBuildNSWNeg(ptr %1, ptr %191, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

true_block19.i:                                   ; preds = %ifend18.i
  %217 = tail call ptr @LLVMConstNUWNeg(ptr %191)
  br label %CodeGen_codegen_unary_exp.exit

false_block20.i:                                  ; preds = %ifend18.i
  %218 = tail call ptr @LLVMBuildNUWNeg(ptr %1, ptr %191, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

if.entry24.i:                                     ; preds = %else12.i
  %219 = tail call ptr @LLVMBuildFNeg(ptr %1, ptr %191, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

if.entry27.i:                                     ; preds = %if.entry26
  %220 = tail call i1 @LLVMIsConstant(ptr %191)
  br i1 %220, label %true_block30.i, label %false_block31.i

ifend29.i:                                        ; preds = %if.entry26
  %221 = icmp eq i64 %189, 8
  switch i64 %189, label %CodeGen_codegen_unary_exp.exit [
    i64 8, label %if.entry34.i
    i64 5, label %if.entry34.i
    i64 4, label %if.entry34.i
    i64 3, label %if.entry34.i
    i64 2, label %if.entry34.i
  ]

true_block30.i:                                   ; preds = %if.entry27.i
  %222 = tail call ptr @LLVMConstNot(ptr %191)
  br label %CodeGen_codegen_unary_exp.exit

false_block31.i:                                  ; preds = %if.entry27.i
  %223 = tail call ptr @LLVMBuildNot(ptr %1, ptr %191, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

if.entry34.i:                                     ; preds = %ifend29.i, %ifend29.i, %ifend29.i, %ifend29.i, %ifend29.i
  %memberidx.i191 = getelementptr inbounds %Expression, ptr %190, i64 0, i32 2
  %224 = load i64, ptr %memberidx.i191, align 4
  switch i64 %224, label %ifend8.i198 [
    i64 8, label %if.entry.i193
    i64 14, label %if.entry2.i195
    i64 13, label %if.entry6.i197
  ]

if.entry.i193:                                    ; preds = %if.entry34.i
  %225 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %190)
  br label %CodeGen_get_expr_mem.exit199

if.entry2.i195:                                   ; preds = %if.entry34.i
  %226 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %190)
  br label %CodeGen_get_expr_mem.exit199

if.entry6.i197:                                   ; preds = %if.entry34.i
  %227 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %190, ptr null)
  br label %CodeGen_get_expr_mem.exit199

ifend8.i198:                                      ; preds = %if.entry34.i
  %228 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %190)
  br label %CodeGen_get_expr_mem.exit199

CodeGen_get_expr_mem.exit199:                     ; preds = %if.entry.i193, %if.entry2.i195, %if.entry6.i197, %ifend8.i198
  %common.ret.op.i192 = phi ptr [ %225, %if.entry.i193 ], [ %226, %if.entry2.i195 ], [ %227, %if.entry6.i197 ], [ %228, %ifend8.i198 ]
  br i1 %221, label %CodeGen_codegen_unary_exp.exit, label %ifend39.i

ifend39.i:                                        ; preds = %CodeGen_get_expr_mem.exit199
  %memberidx40.i = getelementptr inbounds %Expression, ptr %190, i64 0, i32 3
  %229 = load ptr, ptr %memberidx40.i, align 8
  %230 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %229, i1 true)
  %231 = icmp eq i64 %189, 2
  %232 = icmp eq i64 %189, 4
  %233 = or i1 %231, %232
  %..i = select i1 %233, i64 1, i64 -1
  %234 = load ptr, ptr %memberidx40.i, align 8
  %235 = load i64, ptr %234, align 4
  %236 = icmp eq i64 %235, 13
  br i1 %236, label %if.entry46.i, label %else47.i

if.entry46.i:                                     ; preds = %ifend39.i
  %memberidx50.i = getelementptr inbounds %PointerType, ptr %234, i64 0, i32 1
  %237 = load ptr, ptr %memberidx50.i, align 8
  %238 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %237, i1 true)
  %239 = tail call ptr @LLVMInt32Type()
  %240 = tail call ptr @LLVMConstInt(ptr %239, i64 %..i, i1 true)
  store ptr %240, ptr %indices.i, align 8
  %241 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %238, ptr %191, ptr nonnull %indices.i, i64 1, ptr nonnull @265)
  br label %ifend48.i

else47.i:                                         ; preds = %ifend39.i
  %242 = add i64 %235, -1
  %243 = icmp ult i64 %242, 9
  br i1 %243, label %if.entry52.i, label %ifend48.i

ifend48.i:                                        ; preds = %end57.i, %else47.i, %if.entry46.i
  %new_value.0.i = phi ptr [ %241, %if.entry46.i ], [ %250, %end57.i ], [ null, %else47.i ]
  %244 = call ptr @LLVMBuildStore(ptr %1, ptr %new_value.0.i, ptr %common.ret.op.i192)
  %245 = icmp ugt i64 %189, 2
  %ternary63.i = select i1 %245, ptr %191, ptr %new_value.0.i
  br label %CodeGen_codegen_unary_exp.exit

if.entry52.i:                                     ; preds = %else47.i
  %246 = icmp ult i64 %242, 7
  br i1 %246, label %true_block55.i, label %false_block56.i

true_block55.i:                                   ; preds = %if.entry52.i
  %247 = tail call ptr @LLVMConstInt(ptr %230, i64 %..i, i1 false)
  br label %end57.i

false_block56.i:                                  ; preds = %if.entry52.i
  %248 = sitofp i64 %..i to double
  %249 = tail call ptr @LLVMConstReal(ptr %230, double %248)
  br label %end57.i

end57.i:                                          ; preds = %false_block56.i, %true_block55.i
  %ternary59.i = phi ptr [ %247, %true_block55.i ], [ %249, %false_block56.i ]
  %250 = tail call ptr @LLVMBuildNSWAdd(ptr %1, ptr %191, ptr %ternary59.i, ptr nonnull @80)
  br label %ifend48.i

CodeGen_codegen_unary_exp.exit:                   ; preds = %else12.i, %CodeGen_get_expr_mem.exit199, %ifend29.i, %ifend5.i, %true_block.i149, %false_block.i150, %true_block19.i, %false_block20.i, %if.entry24.i, %true_block30.i, %false_block31.i, %ifend48.i
  %common.ret.op.i147 = phi ptr [ null, %ifend5.i ], [ %219, %if.entry24.i ], [ %ternary63.i, %ifend48.i ], [ %215, %true_block.i149 ], [ %216, %false_block.i150 ], [ %217, %true_block19.i ], [ %218, %false_block20.i ], [ %222, %true_block30.i ], [ %223, %false_block31.i ], [ %191, %ifend29.i ], [ %common.ret.op.i192, %CodeGen_get_expr_mem.exit199 ], [ %191, %else12.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %indices.i)
  br label %common.ret245

if.entry30:                                       ; preds = %3
  %251 = tail call ptr @malloc(i32 24)
  %memberidx.i.i151 = getelementptr inbounds %Array_LLVMValueRef_, ptr %251, i64 0, i32 1
  %memberidx1.i.i152 = getelementptr inbounds %Array_LLVMValueRef_, ptr %251, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i152, align 4
  %252 = tail call ptr @malloc(i32 64)
  store ptr %252, ptr %251, align 8
  store i64 0, ptr %memberidx.i.i151, align 4
  %memberidx2.i154 = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 4
  %253 = load ptr, ptr %memberidx2.i154, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %253, i64 0, i32 2
  %254 = load i64, ptr %memberidx3.i, align 4
  %255 = icmp eq i64 %254, 13
  br i1 %255, label %if.entry.i158, label %if.entry14.i

if.entry.i158:                                    ; preds = %if.entry30
  %memberidx5.i155 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %256 = load ptr, ptr %memberidx5.i155, align 8
  %memberidx6.i = getelementptr inbounds %MemberExpression, ptr %253, i64 0, i32 5
  %257 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i.i156 = getelementptr inbounds %PropId, ptr %257, i64 0, i32 1
  %258 = load ptr, ptr %memberidx.i.i.i156, align 8
  %259 = load ptr, ptr %256, align 8
  %260 = load i64, ptr %258, align 4
  %261 = load ptr, ptr %259, align 8
  %262 = getelementptr inbounds ptr, ptr %261, i64 %260
  %263 = load ptr, ptr %262, align 8
  %memberidx2.i.i.i.i157 = getelementptr inbounds %Module, ptr %263, i64 0, i32 3
  %264 = load ptr, ptr %memberidx2.i.i.i.i157, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %258, i64 0, i32 2
  %265 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %266 = load ptr, ptr %264, align 8
  %267 = getelementptr inbounds ptr, ptr %266, i64 %265
  %268 = load ptr, ptr %267, align 8
  %memberidx.i65.i = getelementptr inbounds %Class, ptr %268, i64 0, i32 5
  %269 = load ptr, ptr %memberidx.i65.i, align 8
  %memberidx1.i66.i = getelementptr inbounds %PropId, ptr %257, i64 0, i32 2
  %270 = load i64, ptr %memberidx1.i66.i, align 4
  %271 = load ptr, ptr %269, align 8
  %272 = getelementptr inbounds ptr, ptr %271, i64 %270
  %273 = load ptr, ptr %272, align 8
  %memberidx7.i = getelementptr inbounds %ClassMethod, ptr %273, i64 0, i32 1
  %274 = load i1, ptr %memberidx7.i, align 1
  br i1 %274, label %ifend21.i165, label %if.entry8.i

ifend.i159:                                       ; preds = %ifend.i205, %if.entry8.i
  %memberidx13.i = getelementptr inbounds %MemberExpression, ptr %253, i64 0, i32 4
  %275 = load ptr, ptr %memberidx13.i, align 8
  %276 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %275)
  %277 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %253, ptr %276)
  store i64 1, ptr %memberidx.i.i151, align 4
  store ptr %276, ptr %252, align 8
  %278 = icmp eq ptr %277, null
  br i1 %278, label %ifend.i159.if.entry14.i_crit_edge, label %for.entry.i

ifend.i159.if.entry14.i_crit_edge:                ; preds = %ifend.i159
  %.pre = load ptr, ptr %memberidx2.i154, align 8
  %memberidx18.i.phi.trans.insert = getelementptr inbounds %Expression, ptr %.pre, i64 0, i32 2
  %.pre253 = load i64, ptr %memberidx18.i.phi.trans.insert, align 4
  br label %if.entry14.i

if.entry8.i:                                      ; preds = %if.entry.i158
  %279 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr nonnull %258)
  %.not.i200 = icmp eq ptr %279, null
  br i1 %.not.i200, label %ifend.i205, label %ifend.i159

ifend.i205:                                       ; preds = %if.entry8.i
  %280 = load ptr, ptr %memberidx5.i155, align 8
  %281 = load ptr, ptr %280, align 8
  %282 = load i64, ptr %258, align 4
  %283 = load ptr, ptr %281, align 8
  %284 = getelementptr inbounds ptr, ptr %283, i64 %282
  %285 = load ptr, ptr %284, align 8
  %memberidx2.i.i204 = getelementptr inbounds %Module, ptr %285, i64 0, i32 3
  %286 = load ptr, ptr %memberidx2.i.i204, align 8
  %287 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %288 = load ptr, ptr %286, align 8
  %289 = getelementptr inbounds ptr, ptr %288, i64 %287
  %290 = load ptr, ptr %289, align 8
  tail call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %290)
  tail call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %290)
  %291 = load ptr, ptr %290, align 8
  %292 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %291)
  br label %ifend.i159

if.entry14.i:                                     ; preds = %ifend.i159.if.entry14.i_crit_edge, %if.entry30
  %293 = phi i64 [ 1, %ifend.i159.if.entry14.i_crit_edge ], [ 0, %if.entry30 ]
  %294 = phi i64 [ %.pre253, %ifend.i159.if.entry14.i_crit_edge ], [ %254, %if.entry30 ]
  %295 = phi ptr [ %.pre, %ifend.i159.if.entry14.i_crit_edge ], [ %253, %if.entry30 ]
  %296 = icmp eq i64 %294, 8
  br i1 %296, label %if.entry19.i162, label %ifend21.i165

if.entry19.i162:                                  ; preds = %if.entry14.i
  %memberidx23.i = getelementptr inbounds %VarAccessExpression, ptr %295, i64 0, i32 4
  %297 = load ptr, ptr %memberidx23.i, align 8
  %memberidx24.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %298 = load ptr, ptr %memberidx24.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i70.i = getelementptr inbounds %VarId, ptr %297, i64 0, i32 1
  %299 = load i64, ptr %memberidx.i70.i, align 4
  %300 = load i64, ptr %297, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %297, i64 0, i32 2
  %301 = load i64, ptr %memberidx2.i.i, align 4
  %302 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %299, i64 %300, i64 %301)
  %303 = load ptr, ptr %4, align 8
  %304 = call ptr @malloc(i32 24)
  store ptr %303, ptr %304, align 8
  %memberidx1.i.i.i160 = getelementptr inbounds %String, ptr %304, i64 0, i32 1
  store i64 %302, ptr %memberidx1.i.i.i160, align 4
  %memberidx2.i.i.i161 = getelementptr inbounds %String, ptr %304, i64 0, i32 2
  store i64 %302, ptr %memberidx2.i.i.i161, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %305 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %304)
  %memberidx.i71.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %298, i64 0, i32 1
  %306 = load i64, ptr %memberidx.i71.i, align 4
  %307 = urem i64 %305, %306
  %308 = load ptr, ptr %298, align 8
  %309 = getelementptr inbounds ptr, ptr %308, i64 %307
  %310 = load ptr, ptr %309, align 8
  %.not.i72.i = icmp eq ptr %310, null
  br i1 %.not.i72.i, label %ifend21.i165, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %if.entry19.i162, %else.i.i
  %311 = phi ptr [ %319, %else.i.i ], [ %308, %if.entry19.i162 ]
  %312 = phi i64 [ %320, %else.i.i ], [ %306, %if.entry19.i162 ]
  %313 = phi ptr [ %324, %else.i.i ], [ %310, %if.entry19.i162 ]
  %hash.0.i.i = phi i64 [ %322, %else.i.i ], [ %307, %if.entry19.i162 ]
  %314 = load ptr, ptr %313, align 8
  %memberidx.i.i73.i = getelementptr inbounds %String, ptr %314, i64 0, i32 1
  %315 = load i64, ptr %memberidx.i.i73.i, align 4
  %.not.i.i.i163 = icmp eq i64 %315, %302
  br i1 %.not.i.i.i163, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %316 = load ptr, ptr %314, align 8
  %317 = call i64 @memcmp(ptr %316, ptr %303, i64 %302)
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre254 = load i64, ptr %memberidx.i71.i, align 4
  %.pre255 = load ptr, ptr %298, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre256.pre = load ptr, ptr %298, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre256.pre, i64 %hash.0.i.i
  %.pre257.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre257.pre, null
  br i1 %.not25.i.i, label %ifend21.i165, label %Map_String_LLVMValueRef____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %319 = phi ptr [ %.pre255, %ifend.i.i.i.else.i.i_crit_edge ], [ %311, %while.entry.i.i ]
  %320 = phi i64 [ %.pre254, %ifend.i.i.i.else.i.i_crit_edge ], [ %312, %while.entry.i.i ]
  %321 = add nuw i64 %hash.0.i.i, 1
  %322 = urem i64 %321, %320
  %323 = getelementptr inbounds ptr, ptr %319, i64 %322
  %324 = load ptr, ptr %323, align 8
  %.not26.i.i = icmp eq ptr %324, null
  br i1 %.not26.i.i, label %ifend21.i165, label %while.entry.i.i

Map_String_LLVMValueRef____getitem__.exit.i:      ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre257.pre, i64 0, i32 1
  %325 = load ptr, ptr %memberidx11.i.i, align 8
  %.not.i164 = icmp eq ptr %325, null
  br i1 %.not.i164, label %ifend21.i165, label %Array_LLVMValueRef____sl__.exit80.i

ifend21.i165:                                     ; preds = %else.i.i, %if.entry19.i162, %if.entry.i158, %while.end.i.i, %Array_LLVMValueRef____sl__.exit80.i, %Map_String_LLVMValueRef____getitem__.exit.i, %if.entry14.i
  %326 = phi i64 [ %293, %while.end.i.i ], [ %329, %Array_LLVMValueRef____sl__.exit80.i ], [ %293, %Map_String_LLVMValueRef____getitem__.exit.i ], [ %293, %if.entry14.i ], [ 0, %if.entry.i158 ], [ %293, %if.entry19.i162 ], [ %293, %else.i.i ]
  %327 = load ptr, ptr %memberidx2.i154, align 8
  %328 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %327)
  br label %for.entry.i

Array_LLVMValueRef____sl__.exit80.i:              ; preds = %Map_String_LLVMValueRef____getitem__.exit.i
  %329 = add nuw nsw i64 %293, 1
  store i64 %329, ptr %memberidx.i.i151, align 4
  %330 = getelementptr inbounds ptr, ptr %252, i64 %293
  store ptr %325, ptr %330, align 8
  br label %ifend21.i165

for.entry.i:                                      ; preds = %ifend21.i165, %ifend.i159
  %331 = phi i64 [ %326, %ifend21.i165 ], [ 1, %ifend.i159 ]
  %func.1.i = phi ptr [ %328, %ifend21.i165 ], [ %277, %ifend.i159 ]
  %memberidx29.i = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 5
  %332 = load ptr, ptr %memberidx29.i, align 8
  %333 = call ptr @malloc(i32 25)
  %334 = load ptr, ptr %332, align 8
  %memberidx1.i81.i = getelementptr inbounds %Array_Expression_, ptr %332, i64 0, i32 1
  %335 = load i64, ptr %memberidx1.i81.i, align 4
  store i1 false, ptr %333, align 1
  %memberidx1.i.i82.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %333, i64 0, i32 1
  %memberidx2.i.i83.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %333, i64 0, i32 3
  store ptr %334, ptr %memberidx2.i.i83.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %333, i64 0, i32 2
  store i64 %335, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i82.i, align 4
  %336 = icmp slt i64 %335, 1
  br i1 %336, label %CodeGen_codegen_call_exp.exit, label %for.body.i

for.body.i:                                       ; preds = %for.entry.i, %Array_LLVMValueRef____sl__.exit91.i
  %337 = phi ptr [ %344, %Array_LLVMValueRef____sl__.exit91.i ], [ %252, %for.entry.i ]
  %338 = phi i64 [ %345, %Array_LLVMValueRef____sl__.exit91.i ], [ 8, %for.entry.i ]
  %339 = phi i64 [ %346, %Array_LLVMValueRef____sl__.exit91.i ], [ %331, %for.entry.i ]
  %call_arg.0.i249.in = phi ptr [ %351, %Array_LLVMValueRef____sl__.exit91.i ], [ %334, %for.entry.i ]
  %call_arg.0.i249 = load ptr, ptr %call_arg.0.i249.in, align 8
  %340 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %call_arg.0.i249)
  %.not.i88.i = icmp slt i64 %339, %338
  br i1 %.not.i88.i, label %Array_LLVMValueRef____sl__.exit91.i, label %if.entry.i90.i

if.entry.i90.i:                                   ; preds = %for.body.i
  %341 = shl nuw i64 %338, 1
  store i64 %341, ptr %memberidx1.i.i152, align 4
  %342 = shl i64 %338, 4
  %343 = call ptr @realloc(ptr %337, i64 %342)
  store ptr %343, ptr %251, align 8
  br label %Array_LLVMValueRef____sl__.exit91.i

Array_LLVMValueRef____sl__.exit91.i:              ; preds = %if.entry.i90.i, %for.body.i
  %344 = phi ptr [ %343, %if.entry.i90.i ], [ %337, %for.body.i ]
  %345 = phi i64 [ %341, %if.entry.i90.i ], [ %338, %for.body.i ]
  %346 = add nsw i64 %339, 1
  store i64 %346, ptr %memberidx.i.i151, align 4
  %347 = getelementptr inbounds ptr, ptr %344, i64 %339
  store ptr %340, ptr %347, align 8
  %348 = load i64, ptr %memberidx1.i.i82.i, align 4
  %349 = add nsw i64 %348, 1
  store i64 %349, ptr %memberidx1.i.i82.i, align 4
  %350 = load ptr, ptr %memberidx2.i.i83.i, align 8
  %351 = getelementptr inbounds ptr, ptr %350, i64 %348
  %352 = load i64, ptr %memberidx3.i.i.i, align 4
  %.not = icmp slt i64 %348, %352
  br i1 %.not, label %for.body.i, label %CodeGen_codegen_call_exp.exit

CodeGen_codegen_call_exp.exit:                    ; preds = %Array_LLVMValueRef____sl__.exit91.i, %for.entry.i
  %353 = phi i64 [ %331, %for.entry.i ], [ %346, %Array_LLVMValueRef____sl__.exit91.i ]
  %354 = phi ptr [ %252, %for.entry.i ], [ %344, %Array_LLVMValueRef____sl__.exit91.i ]
  call void @free(ptr nonnull %333)
  %355 = load ptr, ptr %memberidx2.i154, align 8
  %memberidx32.i166 = getelementptr inbounds %Expression, ptr %355, i64 0, i32 3
  %356 = load ptr, ptr %memberidx32.i166, align 8
  %357 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %356, i1 false)
  %358 = call ptr @LLVMBuildCall2(ptr %1, ptr %357, ptr %func.1.i, ptr %354, i64 %353, ptr nonnull @80)
  br label %common.ret245

CodeGen_get_expr_mem.exit214:                     ; preds = %3
  %359 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %2)
  %memberidx.i167 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %360 = load ptr, ptr %memberidx.i167, align 8
  %361 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %360, i1 true)
  %362 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %361, ptr %359, ptr nonnull @80)
  br label %common.ret245

if.entry38:                                       ; preds = %3
  %363 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr %0, ptr %1, ptr nonnull %2, ptr null)
  br label %common.ret245

if.entry42:                                       ; preds = %3
  %364 = tail call fastcc ptr @CodeGen_codegen_new_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry46:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i.i)
  %memberidx.i168 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %365 = load ptr, ptr %memberidx.i168, align 8
  %366 = tail call ptr @LLVMAppendBasicBlock(ptr %365, ptr nonnull @267)
  %367 = load ptr, ptr %memberidx.i168, align 8
  %368 = tail call ptr @LLVMAppendBasicBlock(ptr %367, ptr nonnull @268)
  %369 = load ptr, ptr %memberidx.i168, align 8
  %370 = tail call ptr @LLVMAppendBasicBlock(ptr %369, ptr nonnull @269)
  %memberidx3.i169 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 4
  %371 = load ptr, ptr %memberidx3.i169, align 8
  %372 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %371)
  %373 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %372, ptr %366, ptr %368)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %366)
  %memberidx4.i170 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 5
  %374 = load ptr, ptr %memberidx4.i170, align 8
  %375 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %374)
  %376 = tail call ptr @LLVMBuildBr(ptr %1, ptr %370)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %368)
  %memberidx5.i171 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 6
  %377 = load ptr, ptr %memberidx5.i171, align 8
  %378 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %377)
  %379 = tail call ptr @LLVMBuildBr(ptr %1, ptr %370)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %370)
  %380 = load ptr, ptr %memberidx4.i170, align 8
  %memberidx7.i172 = getelementptr inbounds %Expression, ptr %380, i64 0, i32 3
  %381 = load ptr, ptr %memberidx7.i172, align 8
  %382 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %381, i1 true)
  %383 = tail call ptr @LLVMBuildPhi(ptr %1, ptr %382, ptr nonnull @270)
  store ptr %375, ptr %arg_types.i.i, align 8
  %384 = getelementptr inbounds ptr, ptr %arg_types.i.i, i64 1
  store ptr %378, ptr %384, align 8
  store ptr %366, ptr %args.i.i, align 8
  %385 = getelementptr inbounds ptr, ptr %args.i.i, i64 1
  store ptr %368, ptr %385, align 8
  call void @LLVMAddIncoming(ptr %383, ptr nonnull %arg_types.i.i, ptr nonnull %args.i.i, i64 2)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i.i)
  br label %common.ret245

if.entry50:                                       ; preds = %3
  %memberidx.i173 = getelementptr inbounds %TypeCastExpression, ptr %2, i64 0, i32 4
  %386 = load ptr, ptr %memberidx.i173, align 8
  %memberidx1.i174 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %387 = load ptr, ptr %memberidx1.i174, align 8
  %388 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %386)
  %389 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %387, i1 true)
  %390 = tail call i1 @LLVMIsConstant(ptr %388)
  %391 = load i64, ptr %387, align 4
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %if.entry.i175, label %ifend.i177

if.entry.i175:                                    ; preds = %if.entry50
  br i1 %390, label %true_block.i179, label %false_block.i180

ifend.i177:                                       ; preds = %if.entry50
  %memberidx2.i176 = getelementptr inbounds %Expression, ptr %386, i64 0, i32 3
  %393 = load ptr, ptr %memberidx2.i176, align 8
  %394 = load i64, ptr %393, align 4
  %395 = add i64 %394, -1
  %396 = icmp ult i64 %395, 7
  %397 = and i64 %391, -2
  %398 = icmp eq i64 %397, 8
  %399 = and i1 %398, %396
  br i1 %399, label %if.entry3.i182, label %else4.i

true_block.i179:                                  ; preds = %if.entry.i175
  %400 = tail call i1 @LLVMIsNull(ptr %388)
  %401 = xor i1 %400, true
  %402 = tail call ptr @LLVMInt1Type()
  %..i.i178 = zext i1 %401 to i64
  %403 = tail call ptr @LLVMConstInt(ptr %402, i64 %..i.i178, i1 false)
  br label %common.ret245

false_block.i180:                                 ; preds = %if.entry.i175
  %404 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %388, ptr nonnull @80)
  br label %common.ret245

if.entry3.i182:                                   ; preds = %ifend.i177
  br i1 %390, label %true_block6.i, label %false_block7.i

else4.i:                                          ; preds = %ifend.i177
  %405 = and i64 %394, -2
  %406 = icmp eq i64 %405, 8
  %407 = add i64 %391, -1
  %408 = icmp ult i64 %407, 7
  %409 = and i1 %408, %406
  br i1 %409, label %if.entry11.i183, label %else12.i184

true_block6.i:                                    ; preds = %if.entry3.i182
  %410 = tail call ptr @LLVMConstSIToFP(ptr %388, ptr %389)
  br label %common.ret245

false_block7.i:                                   ; preds = %if.entry3.i182
  %411 = tail call ptr @LLVMBuildSIToFP(ptr %1, ptr %388, ptr %389, ptr nonnull @80)
  br label %common.ret245

if.entry11.i183:                                  ; preds = %else4.i
  br i1 %390, label %true_block14.i, label %false_block15.i

else12.i184:                                      ; preds = %else4.i
  %412 = and i1 %408, %396
  br i1 %412, label %if.entry19.i185, label %else20.i

true_block14.i:                                   ; preds = %if.entry11.i183
  %413 = tail call ptr @LLVMConstFPToSI(ptr %388, ptr %389)
  br label %common.ret245

false_block15.i:                                  ; preds = %if.entry11.i183
  %414 = tail call ptr @LLVMBuildFPToSI(ptr %1, ptr %388, ptr %389, ptr nonnull @80)
  br label %common.ret245

if.entry19.i185:                                  ; preds = %else12.i184
  %memberidx25.i = getelementptr inbounds %IntType, ptr %387, i64 0, i32 1
  %415 = load i1, ptr %memberidx25.i, align 1
  br i1 %390, label %true_block22.i, label %false_block23.i

else20.i:                                         ; preds = %else12.i184
  %416 = and i1 %398, %406
  br i1 %416, label %if.entry29.i, label %ifend31.i

true_block22.i:                                   ; preds = %if.entry19.i185
  %417 = tail call ptr @LLVMConstIntCast(ptr %388, ptr %389, i1 %415)
  br label %common.ret245

false_block23.i:                                  ; preds = %if.entry19.i185
  %418 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %388, ptr %389, i1 %415, ptr nonnull @80)
  br label %common.ret245

if.entry29.i:                                     ; preds = %else20.i
  br i1 %390, label %true_block32.i, label %false_block33.i

ifend31.i:                                        ; preds = %else20.i
  br i1 %390, label %true_block36.i, label %false_block37.i

true_block32.i:                                   ; preds = %if.entry29.i
  %419 = tail call ptr @LLVMConstFPCast(ptr %388, ptr %389)
  br label %common.ret245

false_block33.i:                                  ; preds = %if.entry29.i
  %420 = tail call ptr @LLVMBuildFPCast(ptr %1, ptr %388, ptr %389, ptr nonnull @80)
  br label %common.ret245

true_block36.i:                                   ; preds = %ifend31.i
  %421 = tail call ptr @LLVMConstBitCast(ptr %388, ptr %389)
  br label %common.ret245

false_block37.i:                                  ; preds = %ifend31.i
  %422 = tail call ptr @LLVMBuildBitCast(ptr %1, ptr %388, ptr %389, ptr nonnull @80)
  br label %common.ret245

if.entry54:                                       ; preds = %3
  %423 = tail call fastcc ptr @CodeGen_codegen_array_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry58:                                       ; preds = %3
  %424 = tail call fastcc ptr @CodeGen_codegen_tuple_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry62:                                       ; preds = %3
  %425 = tail call fastcc ptr @CodeGen_codegen_match_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry66:                                       ; preds = %3
  %426 = tail call fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245
}

define internal fastcc void @Map_String_CGEnumType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_CGEnumType____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_CGEnumType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_CGEnumType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_CGEnumType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_CGEnumType__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_codegen_new_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 6
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 13
  br i1 %7, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %8 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %4, i1 true)
  %memberidx2 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %11)
  %memberidx3 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %13 = load i1, ptr %memberidx3, align 1
  br i1 %13, label %if.entry4, label %else5

else:                                             ; preds = %3
  %14 = load i64, ptr %4, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i55, label %is_object.exit

if.entry.i55:                                     ; preds = %else, %if.entry.i55
  %.tr5.i = phi ptr [ %16, %if.entry.i55 ], [ %4, %else ]
  %memberidx1.i54 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i54, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 20
  br i1 %18, label %if.entry.i55, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i55, %else
  %.lcssa.i = phi i64 [ %14, %else ], [ %17, %if.entry.i55 ]
  %19 = icmp eq i64 %.lcssa.i, 11
  br i1 %19, label %if.entry7, label %ifend

ifend:                                            ; preds = %else.i, %if.entry.i, %is_object.exit, %if.entry4, %else5
  %ptr.0 = phi ptr [ %20, %if.entry4 ], [ %21, %else5 ], [ null, %is_object.exit ], [ %ptr.1, %if.entry.i ], [ %ptr.1, %else.i ]
  ret ptr %ptr.0

if.entry4:                                        ; preds = %if.entry
  %20 = tail call ptr @LLVMBuildArrayMalloc(ptr %1, ptr %8, ptr %12, ptr nonnull @80)
  br label %ifend

else5:                                            ; preds = %if.entry
  %21 = tail call ptr @LLVMBuildArrayAlloca(ptr %1, ptr %8, ptr %12, ptr nonnull @80)
  br label %ifend

if.entry7:                                        ; preds = %is_object.exit
  %memberidx10 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %22 = load ptr, ptr %memberidx10, align 8
  %memberidx11 = getelementptr inbounds %Array_Expression_, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx11, align 4
  %24 = add nuw i64 %23, 1
  %25 = alloca ptr, i64 %24, align 8
  %26 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %4, i1 false)
  %memberidx12 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %27 = load i1, ptr %memberidx12, align 1
  br i1 %27, label %if.entry13, label %else14

if.entry13:                                       ; preds = %if.entry7
  %28 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %26, ptr nonnull @80)
  br label %ifend15

else14:                                           ; preds = %if.entry7
  %29 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %26, ptr nonnull @80)
  br label %ifend15

ifend15:                                          ; preds = %else14, %if.entry13
  %ptr.1 = phi ptr [ %28, %if.entry13 ], [ %29, %else14 ]
  store ptr %ptr.1, ptr %25, align 8
  %30 = load ptr, ptr %memberidx10, align 8
  %31 = tail call ptr @malloc(i32 25)
  %32 = load ptr, ptr %30, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Expression_, ptr %30, i64 0, i32 1
  %33 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %31, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 3
  store ptr %32, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 2
  store i64 %33, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend15, %for.body.i
  %35 = phi i64 [ %39, %for.body.i ], [ 1, %ifend15 ]
  %item.0.i65.in = phi ptr [ %40, %for.body.i ], [ %32, %ifend15 ]
  %start.0.i64 = phi i64 [ %36, %for.body.i ], [ 1, %ifend15 ]
  %item.0.i65 = load ptr, ptr %item.0.i65.in, align 8
  %36 = add nuw nsw i64 %start.0.i64, 1
  %37 = getelementptr inbounds ptr, ptr %25, i64 %start.0.i64
  %38 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %item.0.i65)
  store ptr %38, ptr %37, align 8
  %39 = add nuw nsw i64 %35, 1
  store i64 %39, ptr %memberidx1.i.i.i, align 4
  %40 = getelementptr inbounds ptr, ptr %32, i64 %35
  %.not = icmp slt i64 %35, %33
  br i1 %.not, label %for.body.i, label %CodeGen_evaluate_expression_list.exit

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend15
  tail call void @free(ptr nonnull %31)
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %41 = load i64, ptr %4, align 4
  %cond61 = icmp eq i64 %41, 20
  br i1 %cond61, label %if.entry.i59, label %get_class_from_type.exit

if.entry.i59:                                     ; preds = %CodeGen_evaluate_expression_list.exit, %if.entry.i59
  %.tr11.i62 = phi ptr [ %42, %if.entry.i59 ], [ %4, %CodeGen_evaluate_expression_list.exit ]
  %memberidx1.i58 = getelementptr inbounds %GenericType, ptr %.tr11.i62, i64 0, i32 3
  %42 = load ptr, ptr %memberidx1.i58, align 8
  %43 = load i64, ptr %42, align 4
  %cond = icmp eq i64 %43, 20
  br i1 %cond, label %if.entry.i59, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i59, %CodeGen_evaluate_expression_list.exit
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %4, i64 0, i32 1
  %44 = load ptr, ptr %memberidx1.i, align 8
  %45 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %44)
  %.not.i44 = icmp eq ptr %45, null
  br i1 %.not.i44, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %46 = load ptr, ptr %memberidx.i, align 8
  %47 = load ptr, ptr %46, align 8
  %48 = load i64, ptr %44, align 4
  %49 = load ptr, ptr %47, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  %51 = load ptr, ptr %50, align 8
  %memberidx2.i.i47 = getelementptr inbounds %Module, ptr %51, i64 0, i32 3
  %52 = load ptr, ptr %memberidx2.i.i47, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %44, i64 0, i32 2
  %53 = load i64, ptr %memberidx3.i.i, align 4
  %54 = load ptr, ptr %52, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %56)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %56)
  %57 = load ptr, ptr %56, align 8
  %58 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %57)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %58, %ifend.i ], [ %45, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 4
  %59 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %60 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %59)
  %61 = call ptr @LLVMBuildCall2(ptr %1, ptr %60, ptr nonnull %59, ptr nonnull %25, i64 %24, ptr nonnull @80)
  br label %ifend

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %62 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %62, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %63 = tail call ptr @malloc(i32 24)
  %64 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %64, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %65 = tail call ptr @malloc(i32 24)
  %66 = tail call i64 @write(i64 1, ptr %64, i64 7)
  tail call void @free(ptr %64)
  tail call void @free(ptr %65)
  %67 = tail call i64 @write(i64 1, ptr %62, i64 47)
  %68 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %62)
  tail call void @free(ptr %63)
  tail call void @exit(i64 -1)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %arg_types.i124 = alloca [3 x ptr], align 8
  %arg_types.i114 = alloca [2 x ptr], align 8
  %args.i = alloca [1 x ptr], align 8
  %arg_types.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = icmp slt i64 %4, 3
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %memberidx1, align 8
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %8)
  %10 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %9)
  switch i64 %4, label %ifend10 [
    i64 0, label %if.entry2
    i64 1, label %if.entry5
    i64 2, label %if.entry8
  ]

ifend:                                            ; preds = %3
  %memberidx12 = getelementptr inbounds %Array_Expression_, ptr %6, i64 0, i32 1
  %11 = load i64, ptr %memberidx12, align 4
  %12 = alloca ptr, i64 %11, align 8
  %13 = tail call ptr @malloc(i32 25)
  %14 = load ptr, ptr %6, align 8
  %15 = load i64, ptr %memberidx12, align 4
  store i1 false, ptr %13, align 1
  %memberidx1.i.i.i138 = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 1
  %memberidx2.i.i.i139 = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 3
  store ptr %14, ptr %memberidx2.i.i.i139, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 2
  store i64 %15, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i138, align 4
  %16 = icmp slt i64 %15, 1
  br i1 %16, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend, %for.body.i
  %17 = phi i64 [ %21, %for.body.i ], [ 1, %ifend ]
  %item.0.i152.in = phi ptr [ %22, %for.body.i ], [ %14, %ifend ]
  %start.0.i151 = phi i64 [ %18, %for.body.i ], [ 0, %ifend ]
  %item.0.i152 = load ptr, ptr %item.0.i152.in, align 8
  %18 = add nuw nsw i64 %start.0.i151, 1
  %19 = getelementptr inbounds ptr, ptr %12, i64 %start.0.i151
  %20 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %item.0.i152)
  store ptr %20, ptr %19, align 8
  %21 = add nuw nsw i64 %17, 1
  store i64 %21, ptr %memberidx1.i.i.i138, align 4
  %22 = getelementptr inbounds ptr, ptr %14, i64 %17
  %.not = icmp slt i64 %17, %15
  br i1 %.not, label %for.body.i, label %CodeGen_evaluate_expression_list.exit

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend
  tail call void @free(ptr nonnull %13)
  %23 = load ptr, ptr %memberidx1, align 8
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %24, align 8
  %memberidx15 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx15, align 8
  %memberidx16 = getelementptr inbounds %PointerType, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx16, align 8
  %28 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %27, i1 true)
  %29 = tail call ptr @LLVMSizeOf(ptr %28)
  %30 = icmp eq i64 %4, 6
  br i1 %30, label %if.entry17, label %ifend19

if.entry2:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %31 = tail call ptr @LLVMInt8Type()
  %32 = tail call ptr @LLVMPointerType(ptr %31, i64 0)
  store ptr %32, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %33 = tail call ptr @LLVMDoubleType()
  %34 = load ptr, ptr %0, align 8
  %35 = tail call ptr @malloc(i32 4)
  store i32 1718580321, ptr %35, align 8
  %36 = tail call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i, align 4
  %37 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i = getelementptr inbounds %IntrinsicResult, ptr %37, i64 0, i32 1
  store i64 0, ptr %37, align 8
  %38 = call ptr @LLVMFunctionType(ptr %33, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %38, ptr %memberidx1.i.i4.i, align 8
  %39 = call ptr @malloc(i32 5)
  %40 = load i32, ptr %35, align 8
  store i32 %40, ptr %39, align 8
  %41 = getelementptr inbounds i8, ptr %39, i64 4
  store i8 0, ptr %41, align 1
  %42 = call ptr @LLVMGetNamedFunction(ptr %34, ptr nonnull %39)
  %.not.i.i = icmp eq ptr %42, null
  br i1 %.not.i.i, label %else.i.i, label %ifend4.thread

else.i.i:                                         ; preds = %if.entry2
  %43 = call ptr @LLVMAddFunction(ptr %34, ptr nonnull %39, ptr %38)
  br label %ifend4.thread

ifend4.thread:                                    ; preds = %else.i.i, %if.entry2
  %storemerge.i.i = phi ptr [ %43, %else.i.i ], [ %42, %if.entry2 ]
  store ptr %storemerge.i.i, ptr %37, align 8
  %44 = call ptr @LLVMBuildCall2(ptr %1, ptr %38, ptr %storemerge.i.i, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

if.entry5:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %45 = tail call ptr @LLVMInt8Type()
  %46 = tail call ptr @LLVMPointerType(ptr %45, i64 0)
  store ptr %46, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %47 = tail call ptr @LLVMInt32Type()
  %48 = load ptr, ptr %0, align 8
  %49 = tail call ptr @malloc(i32 4)
  store i32 1768911969, ptr %49, align 8
  %50 = tail call ptr @malloc(i32 24)
  store ptr %49, ptr %50, align 8
  %memberidx1.i.i.i92 = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i92, align 4
  %memberidx2.i.i.i93 = getelementptr inbounds %String, ptr %50, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i93, align 4
  %51 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i94 = getelementptr inbounds %IntrinsicResult, ptr %51, i64 0, i32 1
  store i64 0, ptr %51, align 8
  %52 = call ptr @LLVMFunctionType(ptr %47, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %52, ptr %memberidx1.i.i4.i94, align 8
  %53 = call ptr @malloc(i32 5)
  %54 = load i32, ptr %49, align 8
  store i32 %54, ptr %53, align 8
  %55 = getelementptr inbounds i8, ptr %53, i64 4
  store i8 0, ptr %55, align 1
  %56 = call ptr @LLVMGetNamedFunction(ptr %48, ptr nonnull %53)
  %.not.i.i97 = icmp eq ptr %56, null
  br i1 %.not.i.i97, label %else.i.i99, label %CodeGen_codegen_atoi_call.exit

else.i.i99:                                       ; preds = %if.entry5
  %57 = call ptr @LLVMAddFunction(ptr %48, ptr nonnull %53, ptr %52)
  br label %CodeGen_codegen_atoi_call.exit

CodeGen_codegen_atoi_call.exit:                   ; preds = %if.entry5, %else.i.i99
  %storemerge.i.i100 = phi ptr [ %57, %else.i.i99 ], [ %56, %if.entry5 ]
  store ptr %storemerge.i.i100, ptr %51, align 8
  %58 = call ptr @LLVMBuildCall2(ptr %1, ptr %52, ptr %storemerge.i.i100, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

if.entry8:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %59 = tail call ptr @LLVMInt8Type()
  %60 = tail call ptr @LLVMPointerType(ptr %59, i64 0)
  store ptr %60, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %61 = tail call ptr @LLVMInt64Type()
  %62 = load ptr, ptr %0, align 8
  %63 = tail call ptr @malloc(i32 4)
  store i32 1819243617, ptr %63, align 8
  %64 = tail call ptr @malloc(i32 24)
  store ptr %63, ptr %64, align 8
  %memberidx1.i.i.i104 = getelementptr inbounds %String, ptr %64, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i104, align 4
  %memberidx2.i.i.i105 = getelementptr inbounds %String, ptr %64, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i105, align 4
  %65 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i106 = getelementptr inbounds %IntrinsicResult, ptr %65, i64 0, i32 1
  store i64 0, ptr %65, align 8
  %66 = call ptr @LLVMFunctionType(ptr %61, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %66, ptr %memberidx1.i.i4.i106, align 8
  %67 = call ptr @malloc(i32 5)
  %68 = load i32, ptr %63, align 8
  store i32 %68, ptr %67, align 8
  %69 = getelementptr inbounds i8, ptr %67, i64 4
  store i8 0, ptr %69, align 1
  %70 = call ptr @LLVMGetNamedFunction(ptr %62, ptr nonnull %67)
  %.not.i.i109 = icmp eq ptr %70, null
  br i1 %.not.i.i109, label %else.i.i111, label %CodeGen_codegen_atol_call.exit

else.i.i111:                                      ; preds = %if.entry8
  %71 = call ptr @LLVMAddFunction(ptr %62, ptr nonnull %67, ptr %66)
  br label %CodeGen_codegen_atol_call.exit

CodeGen_codegen_atol_call.exit:                   ; preds = %if.entry8, %else.i.i111
  %storemerge.i.i112 = phi ptr [ %71, %else.i.i111 ], [ %70, %if.entry8 ]
  store ptr %storemerge.i.i112, ptr %65, align 8
  %72 = call ptr @LLVMBuildCall2(ptr %1, ptr %66, ptr %storemerge.i.i112, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

common.ret:                                       ; preds = %ifend31, %if.entry29, %if.entry26, %if.entry23, %CodeGen_codegen_memcmp_call.exit, %CodeGen_codegen_realloc_call.exit, %ifend10
  %common.ret.op = phi ptr [ %value.2, %ifend10 ], [ %90, %CodeGen_codegen_realloc_call.exit ], [ %109, %CodeGen_codegen_memcmp_call.exit ], [ %117, %if.entry23 ], [ %119, %if.entry26 ], [ %120, %if.entry29 ], [ null, %ifend31 ]
  ret ptr %common.ret.op

ifend10:                                          ; preds = %if.entry, %CodeGen_codegen_atoi_call.exit, %ifend4.thread, %CodeGen_codegen_atol_call.exit
  %value.2 = phi ptr [ %72, %CodeGen_codegen_atol_call.exit ], [ %44, %ifend4.thread ], [ %58, %CodeGen_codegen_atoi_call.exit ], [ null, %if.entry ]
  %73 = call ptr @LLVMBuildFree(ptr %1, ptr %10)
  br label %common.ret

if.entry17:                                       ; preds = %CodeGen_evaluate_expression_list.exit
  %74 = getelementptr inbounds ptr, ptr %12, i64 1
  %75 = load ptr, ptr %74, align 8
  %76 = tail call ptr @LLVMBuildMul(ptr %1, ptr %75, ptr %29, ptr nonnull @80)
  store ptr %76, ptr %74, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i114)
  %77 = tail call ptr @LLVMInt8Type()
  %78 = tail call ptr @LLVMPointerType(ptr %77, i64 0)
  store ptr %78, ptr %arg_types.i114, align 8
  %79 = getelementptr inbounds ptr, ptr %arg_types.i114, i64 1
  %80 = tail call ptr @LLVMIntType(i64 64)
  store ptr %80, ptr %79, align 8
  %81 = load ptr, ptr %0, align 8
  %82 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %82, ptr noundef nonnull align 8 dereferenceable(7) @245, i64 7, i1 false)
  %83 = tail call ptr @malloc(i32 24)
  store ptr %82, ptr %83, align 8
  %memberidx1.i.i.i115 = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i.i115, align 4
  %memberidx2.i.i.i116 = getelementptr inbounds %String, ptr %83, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i.i116, align 4
  %84 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i5.i = getelementptr inbounds %IntrinsicResult, ptr %84, i64 0, i32 1
  store i64 0, ptr %84, align 8
  %85 = call ptr @LLVMFunctionType(ptr %78, ptr nonnull %arg_types.i114, i64 2, i1 false)
  store ptr %85, ptr %memberidx1.i.i5.i, align 8
  %86 = call ptr @malloc(i32 8)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %86, ptr noundef nonnull align 8 dereferenceable(7) %82, i64 7, i1 false)
  %87 = getelementptr inbounds i8, ptr %86, i64 7
  store i8 0, ptr %87, align 1
  %88 = call ptr @LLVMGetNamedFunction(ptr %81, ptr %86)
  %.not.i.i119 = icmp eq ptr %88, null
  br i1 %.not.i.i119, label %else.i.i121, label %CodeGen_codegen_realloc_call.exit

else.i.i121:                                      ; preds = %if.entry17
  %89 = call ptr @LLVMAddFunction(ptr %81, ptr nonnull %86, ptr %85)
  br label %CodeGen_codegen_realloc_call.exit

CodeGen_codegen_realloc_call.exit:                ; preds = %if.entry17, %else.i.i121
  %storemerge.i.i122 = phi ptr [ %89, %else.i.i121 ], [ %88, %if.entry17 ]
  store ptr %storemerge.i.i122, ptr %84, align 8
  %90 = call ptr @LLVMBuildCall2(ptr %1, ptr %85, ptr %storemerge.i.i122, ptr nonnull %12, i64 2, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i114)
  br label %common.ret

ifend19:                                          ; preds = %CodeGen_evaluate_expression_list.exit
  %91 = getelementptr inbounds ptr, ptr %12, i64 2
  %92 = load ptr, ptr %91, align 8
  %93 = tail call ptr @LLVMBuildMul(ptr %1, ptr %92, ptr %29, ptr nonnull @80)
  store ptr %93, ptr %91, align 8
  %94 = icmp eq i64 %4, 7
  br i1 %94, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %ifend19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %arg_types.i124)
  %95 = tail call ptr @LLVMInt8Type()
  %96 = tail call ptr @LLVMPointerType(ptr %95, i64 0)
  %97 = tail call ptr @LLVMIntType(i64 64)
  store ptr %96, ptr %arg_types.i124, align 8
  %98 = getelementptr inbounds ptr, ptr %arg_types.i124, i64 1
  store ptr %96, ptr %98, align 8
  %99 = getelementptr inbounds ptr, ptr %arg_types.i124, i64 2
  store ptr %97, ptr %99, align 8
  %100 = load ptr, ptr %0, align 8
  %101 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %101, ptr noundef nonnull align 8 dereferenceable(6) @246, i64 6, i1 false)
  %102 = tail call ptr @malloc(i32 24)
  store ptr %101, ptr %102, align 8
  %memberidx1.i.i.i125 = getelementptr inbounds %String, ptr %102, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i.i125, align 4
  %memberidx2.i.i.i126 = getelementptr inbounds %String, ptr %102, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i.i126, align 4
  %103 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i6.i = getelementptr inbounds %IntrinsicResult, ptr %103, i64 0, i32 1
  store i64 0, ptr %103, align 8
  %104 = call ptr @LLVMFunctionType(ptr %97, ptr nonnull %arg_types.i124, i64 3, i1 false)
  store ptr %104, ptr %memberidx1.i.i6.i, align 8
  %105 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %105, ptr noundef nonnull align 8 dereferenceable(6) %101, i64 6, i1 false)
  %106 = getelementptr inbounds i8, ptr %105, i64 6
  store i8 0, ptr %106, align 1
  %107 = call ptr @LLVMGetNamedFunction(ptr %100, ptr %105)
  %.not.i.i129 = icmp eq ptr %107, null
  br i1 %.not.i.i129, label %else.i.i131, label %CodeGen_codegen_memcmp_call.exit

else.i.i131:                                      ; preds = %if.entry20
  %108 = call ptr @LLVMAddFunction(ptr %100, ptr nonnull %105, ptr %104)
  br label %CodeGen_codegen_memcmp_call.exit

CodeGen_codegen_memcmp_call.exit:                 ; preds = %if.entry20, %else.i.i131
  %storemerge.i.i132 = phi ptr [ %108, %else.i.i131 ], [ %107, %if.entry20 ]
  store ptr %storemerge.i.i132, ptr %103, align 8
  %109 = call ptr @LLVMBuildCall2(ptr %1, ptr %104, ptr %storemerge.i.i132, ptr nonnull %12, i64 3, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %arg_types.i124)
  br label %common.ret

ifend22:                                          ; preds = %ifend19
  %110 = load ptr, ptr %12, align 8
  %111 = tail call i64 @LLVMGetAlignment(ptr %110)
  %112 = icmp eq i64 %4, 5
  %113 = getelementptr inbounds ptr, ptr %12, i64 1
  %114 = load ptr, ptr %113, align 8
  br i1 %112, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %ifend22
  %115 = tail call ptr @LLVMInt8Type()
  %116 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %114, ptr %115, i1 false, ptr nonnull @80)
  %117 = tail call ptr @LLVMBuildMemSet(ptr %1, ptr %110, ptr %116, ptr %93, i64 %111)
  br label %common.ret

ifend25:                                          ; preds = %ifend22
  %118 = tail call i64 @LLVMGetAlignment(ptr %114)
  switch i64 %4, label %ifend31 [
    i64 3, label %if.entry26
    i64 4, label %if.entry29
  ]

if.entry26:                                       ; preds = %ifend25
  %119 = tail call ptr @LLVMBuildMemCpy(ptr %1, ptr %110, i64 %111, ptr %114, i64 %118, ptr %93)
  br label %common.ret

if.entry29:                                       ; preds = %ifend25
  %120 = tail call ptr @LLVMBuildMemMove(ptr %1, ptr %110, i64 %111, ptr %114, i64 %118, ptr %93)
  br label %common.ret

ifend31:                                          ; preds = %ifend25
  %121 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %121, ptr noundef nonnull align 8 dereferenceable(21) @280, i64 21, i1 false)
  %122 = tail call ptr @malloc(i32 24)
  %123 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %123, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %124 = tail call ptr @malloc(i32 24)
  %125 = tail call i64 @write(i64 1, ptr %123, i64 7)
  tail call void @free(ptr %123)
  tail call void @free(ptr %124)
  %126 = tail call i64 @write(i64 1, ptr %121, i64 21)
  %127 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %121)
  tail call void @free(ptr %122)
  tail call void @exit(i64 -1)
  br label %common.ret
}

declare ptr @LLVMModuleCreateWithName(ptr) local_unnamed_addr

declare i1 @LLVMIsConstant(ptr) local_unnamed_addr

declare ptr @LLVMConstNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstInt(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMInt1Type() local_unnamed_addr

declare ptr @LLVMIntType(i64) local_unnamed_addr

declare ptr @LLVMVoidType() local_unnamed_addr

declare ptr @LLVMInt8Type() local_unnamed_addr

declare ptr @LLVMInt16Type() local_unnamed_addr

declare ptr @LLVMInt32Type() local_unnamed_addr

declare ptr @LLVMInt64Type() local_unnamed_addr

declare ptr @LLVMInt128Type() local_unnamed_addr

declare ptr @LLVMFloatType() local_unnamed_addr

declare ptr @LLVMDoubleType() local_unnamed_addr

declare ptr @LLVMPointerType(ptr, i64) local_unnamed_addr

declare ptr @LLVMArrayType(ptr, i64) local_unnamed_addr

declare ptr @LLVMFunctionType(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMStructType(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMBuildRet(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildRetVoid(ptr) local_unnamed_addr

declare ptr @LLVMConstReal(ptr, double) local_unnamed_addr

declare ptr @LLVMAddFunction(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCall2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildGlobalString(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAlloca(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLoad2(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSelect(ptr, ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetTypeKind(ptr) local_unnamed_addr

declare ptr @LLVMTypeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsGlobalConstant(ptr) local_unnamed_addr

define internal fastcc noalias ptr @get_format_from_type(ptr nocapture readonly %0) unnamed_addr {
  %2 = load i64, ptr %0, align 4
  %3 = add i64 %2, -1
  %4 = icmp ult i64 %3, 7
  br i1 %4, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  %memberidx = getelementptr inbounds %IntType, ptr %0, i64 0, i32 1
  %5 = load i1, ptr %memberidx, align 1
  switch i64 %2, label %ifend8 [
    i64 7, label %if.entry2
    i64 5, label %if.entry6
  ]

ifend:                                            ; preds = %1
  switch i64 %2, label %ifend27 [
    i64 8, label %if.entry18
    i64 9, label %if.entry22
    i64 13, label %if.entry25
  ]

if.entry2:                                        ; preds = %if.entry
  %6 = tail call ptr @malloc(i32 4)
  br i1 %5, label %true_block, label %false_block

true_block:                                       ; preds = %if.entry2
  store i32 1684827173, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret

false_block:                                      ; preds = %if.entry2
  store i32 1970039845, ptr %6, align 8
  %8 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %8, align 8
  br label %common.ret

common.ret:                                       ; preds = %true_block13, %false_block14, %true_block9, %false_block10, %true_block, %false_block, %ifend27, %if.entry25, %if.entry22, %if.entry18
  %.sink57 = phi ptr [ %13, %true_block13 ], [ %14, %false_block14 ], [ %11, %true_block9 ], [ %12, %false_block10 ], [ %7, %true_block ], [ %8, %false_block ], [ %22, %ifend27 ], [ %20, %if.entry25 ], [ %18, %if.entry22 ], [ %16, %if.entry18 ]
  %.sink56 = phi i64 [ 2, %true_block13 ], [ 2, %false_block14 ], [ 3, %true_block9 ], [ 3, %false_block10 ], [ 4, %true_block ], [ 4, %false_block ], [ 2, %ifend27 ], [ 4, %if.entry25 ], [ 3, %if.entry22 ], [ 2, %if.entry18 ]
  %memberidx1.i.i44 = getelementptr inbounds %String, ptr %.sink57, i64 0, i32 1
  store i64 %.sink56, ptr %memberidx1.i.i44, align 4
  %memberidx2.i.i45 = getelementptr inbounds %String, ptr %.sink57, i64 0, i32 2
  store i64 %.sink56, ptr %memberidx2.i.i45, align 4
  ret ptr %.sink57

if.entry6:                                        ; preds = %if.entry
  %9 = tail call ptr @malloc(i32 3)
  br i1 %5, label %true_block9, label %false_block10

ifend8:                                           ; preds = %if.entry
  %10 = tail call ptr @malloc(i32 2)
  br i1 %5, label %true_block13, label %false_block14

true_block9:                                      ; preds = %if.entry6
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %9, ptr noundef nonnull align 8 dereferenceable(3) @249, i64 3, i1 false)
  %11 = tail call ptr @malloc(i32 24)
  store ptr %9, ptr %11, align 8
  br label %common.ret

false_block10:                                    ; preds = %if.entry6
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %9, ptr noundef nonnull align 8 dereferenceable(3) @250, i64 3, i1 false)
  %12 = tail call ptr @malloc(i32 24)
  store ptr %9, ptr %12, align 8
  br label %common.ret

true_block13:                                     ; preds = %ifend8
  store i16 25637, ptr %10, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %13, align 8
  br label %common.ret

false_block14:                                    ; preds = %ifend8
  store i16 29989, ptr %10, align 8
  %14 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %14, align 8
  br label %common.ret

if.entry18:                                       ; preds = %ifend
  %15 = tail call ptr @malloc(i32 2)
  store i16 26149, ptr %15, align 8
  %16 = tail call ptr @malloc(i32 24)
  store ptr %15, ptr %16, align 8
  br label %common.ret

if.entry22:                                       ; preds = %ifend
  %17 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %17, ptr noundef nonnull align 8 dereferenceable(3) @251, i64 3, i1 false)
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  br label %common.ret

if.entry25:                                       ; preds = %ifend
  %19 = tail call ptr @malloc(i32 4)
  store i32 1478850608, ptr %19, align 8
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  br label %common.ret

ifend27:                                          ; preds = %ifend
  %21 = tail call ptr @malloc(i32 2)
  store i16 29477, ptr %21, align 8
  %22 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  br label %common.ret
}

declare ptr @LLVMBuildInBoundsGEP2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVM_GetFunctionType(ptr) local_unnamed_addr

declare ptr @LLVMBuildMalloc(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFree(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildStore(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstArray(ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMConstStruct(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstIntCast(ptr, ptr, i1) local_unnamed_addr

declare ptr @LLVMConstMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMSizeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsNull(ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNotNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildUDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildURem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstICmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildICmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstShl(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildShl(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstLShr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLShr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstOr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildOr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstAnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAnd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstXor(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildXor(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFCmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFCmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstSIToFP(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSIToFP(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFPToSI(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPToSI(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildIntCast2(ptr, ptr, ptr, i1, ptr) local_unnamed_addr

declare ptr @LLVMConstFPCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstBitCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBitCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNot(ptr) local_unnamed_addr

declare ptr @LLVMBuildNot(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetInitializer(ptr) local_unnamed_addr

declare ptr @LLVMConstNull(ptr) local_unnamed_addr

declare ptr @LLVMAppendBasicBlock(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCondBr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMPositionBuilderAtEnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildPhi(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMAddIncoming(ptr, ptr, ptr, i64) local_unnamed_addr

declare void @LLVMAddCase(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSwitch(ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildArrayMalloc(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildArrayAlloca(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetAlignment(ptr) local_unnamed_addr

declare ptr @LLVMBuildMemSet(ptr, ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildMemCpy(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildMemMove(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare void @LLVMDeleteBasicBlock(ptr) local_unnamed_addr

declare ptr @LLVMAddGlobal(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMSetInitializer(ptr, ptr) local_unnamed_addr

declare void @LLVMSetGlobalConstant(ptr, i1) local_unnamed_addr

declare void @LLVMSetLinkage(ptr, i64) local_unnamed_addr

declare ptr @LLVMCreateBuilder() local_unnamed_addr

declare ptr @LLVMGetParam(ptr, i64) local_unnamed_addr

declare void @LLVMDisposeBuilder(ptr) local_unnamed_addr

declare ptr @LLVMStructCreateNamed(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetModuleContext(ptr) local_unnamed_addr

declare void @LLVMStructSetBody(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstString(ptr, i64, i1) local_unnamed_addr

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #9

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #10

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #10

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #11

attributes #0 = { nofree }
attributes #1 = { argmemonly mustprogress nocallback nofree nounwind willreturn }
attributes #2 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free") "alloc-family"="malloc" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn }
attributes #4 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1) "alloc-family"="malloc" }
attributes #5 = { nofree nounwind }
attributes #6 = { mustprogress nounwind willreturn }
attributes #7 = { mustprogress nofree nounwind readonly willreturn }
attributes #8 = { nofree nosync nounwind readonly }
attributes #9 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }
attributes #11 = { argmemonly nocallback nofree nounwind willreturn writeonly }

!0 = !{}
